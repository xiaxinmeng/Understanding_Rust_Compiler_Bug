{"sha": "748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ODk3MGRmYTljMTJjMWEwOWRhNGZmM2VjNzI0ZTRkYmY3ZTc5NmQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-02T10:05:20Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-02T10:05:20Z"}, "message": "liballoc: apply uniform_paths.", "tree": {"sha": "e2dbc382dadd1f5b1f6708f53f3de30e429ae92e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2dbc382dadd1f5b1f6708f53f3de30e429ae92e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "html_url": "https://github.com/rust-lang/rust/commit/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bfa0a35f65b08197fe677731ac8a9a81a7710bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bfa0a35f65b08197fe677731ac8a9a81a7710bd", "html_url": "https://github.com/rust-lang/rust/commit/3bfa0a35f65b08197fe677731ac8a9a81a7710bd"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "515de9852d1a6abf0b5c4066ba28678cd93b1cc0", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -229,7 +229,7 @@ pub fn handle_alloc_error(layout: Layout) -> ! {\n #[cfg(test)]\n mod tests {\n     extern crate test;\n-    use self::test::Bencher;\n+    use test::Bencher;\n     use crate::{\n         boxed::Box,\n         alloc::{Global, Alloc, Layout, handle_alloc_error},"}, {"sha": "c1696005373a0c1690b0dec4399be61054e9b671", "filename": "src/liballoc/borrow.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fborrow.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -8,13 +8,13 @@ use core::{\n     ops::{Add, AddAssign, Deref},\n };\n \n-use crate::{fmt, string::String};\n-\n-use self::Cow::*;\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::borrow::{Borrow, BorrowMut};\n \n+use crate::{fmt, string::String};\n+\n+use Cow::*;\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, B: ?Sized> Borrow<B> for Cow<'a, B>\n     where B: ToOwned,"}, {"sha": "d0e35c557a4d00590431129305a63ee8cbb7d6c3", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -17,7 +17,8 @@ use super::{\n     search::{self, SearchResult::*},\n };\n \n-use self::{UnderflowResult::*, Entry::*};\n+use UnderflowResult::*;\n+use Entry::*;\n \n /// A map based on a B-Tree.\n ///"}, {"sha": "1645e48cb5299d5c347bbd06ecf98bac9195de30", "filename": "src/liballoc/collections/btree/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -5,7 +5,7 @@ use core::{\n \n use super::node::{Handle, NodeRef, marker, ForceResult::*};\n \n-use self::SearchResult::*;\n+use SearchResult::*;\n \n pub enum SearchResult<BorrowType, K, V, FoundType, GoDownType> {\n     Found(Handle<NodeRef<BorrowType, K, V, FoundType>, marker::KV>),"}, {"sha": "5a33ddc14f004fed0e4a20436715bc401b6f7df1", "filename": "src/liballoc/collections/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fmod.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -23,23 +23,23 @@ pub mod btree_set {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(no_inline)]\n-pub use self::binary_heap::BinaryHeap;\n+pub use binary_heap::BinaryHeap;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(no_inline)]\n-pub use self::btree_map::BTreeMap;\n+pub use btree_map::BTreeMap;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(no_inline)]\n-pub use self::btree_set::BTreeSet;\n+pub use btree_set::BTreeSet;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(no_inline)]\n-pub use self::linked_list::LinkedList;\n+pub use linked_list::LinkedList;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(no_inline)]\n-pub use self::vec_deque::VecDeque;\n+pub use vec_deque::VecDeque;\n \n use crate::alloc::{AllocErr, LayoutErr};\n "}, {"sha": "f1839f736341c8268fb50c3b105f1997f8a84089", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -624,14 +624,14 @@ enum Fallibility {\n     Infallible,\n }\n \n-use self::Fallibility::*;\n+use Fallibility::*;\n \n enum ReserveStrategy {\n     Exact,\n     Amortized,\n }\n \n-use self::ReserveStrategy::*;\n+use ReserveStrategy::*;\n \n impl<T, A: Alloc> RawVec<T, A> {\n     fn reserve_internal("}, {"sha": "9d1197117bbda56d61db6e51f4fa9fcfc518d8df", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -129,12 +129,12 @@ pub use core::slice::{RChunks, RChunksMut, RChunksExact, RChunksExactMut};\n // HACK(japaric) needed for the implementation of `vec!` macro during testing\n // NB see the hack module in this file for more details\n #[cfg(test)]\n-pub use self::hack::into_vec;\n+pub use hack::into_vec;\n \n // HACK(japaric) needed for the implementation of `Vec::clone` during testing\n // NB see the hack module in this file for more details\n #[cfg(test)]\n-pub use self::hack::to_vec;\n+pub use hack::to_vec;\n \n // HACK(japaric): With cfg(test) `impl [T]` is not available, these three\n // functions are actually methods that are in `impl [T]` but not in"}, {"sha": "0bf1ff35cc1753707d70d3ae10a7fb2d91fbb31e", "filename": "src/liballoc/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftask.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -3,7 +3,7 @@\n pub use core::task::*;\n \n #[cfg(all(target_has_atomic = \"ptr\", target_has_atomic = \"cas\"))]\n-pub use self::if_arc::*;\n+pub use if_arc::*;\n \n #[cfg(all(target_has_atomic = \"ptr\", target_has_atomic = \"cas\"))]\n mod if_arc {"}, {"sha": "44183956d8fc7ca6aab110fb46b8f6d1f77c1d7c", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748970dfa9c12c1a09da4ff3ec724e4dbf7e796d/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=748970dfa9c12c1a09da4ff3ec724e4dbf7e796d", "patch": "@@ -10,8 +10,8 @@ use std::{\n \n use crate::hash;\n \n-use self::Taggy::*;\n-use self::Taggypar::*;\n+use Taggy::*;\n+use Taggypar::*;\n \n #[test]\n fn test_simple() {"}]}