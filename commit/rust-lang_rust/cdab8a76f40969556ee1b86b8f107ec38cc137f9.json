{"sha": "cdab8a76f40969556ee1b86b8f107ec38cc137f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYWI4YTc2ZjQwOTY5NTU2ZWUxYjg2YjhmMTA3ZWMzOGNjMTM3Zjk=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-20T06:01:08Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-03-20T09:44:25Z"}, "message": "A couple of fixes to vec_ng docs", "tree": {"sha": "f924d433fd2142fe0e927701697477d8e456e714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f924d433fd2142fe0e927701697477d8e456e714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdab8a76f40969556ee1b86b8f107ec38cc137f9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdab8a76f40969556ee1b86b8f107ec38cc137f9", "html_url": "https://github.com/rust-lang/rust/commit/cdab8a76f40969556ee1b86b8f107ec38cc137f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdab8a76f40969556ee1b86b8f107ec38cc137f9/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f656d1a79fb36ce5435976dd33f57dd09cb9ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f656d1a79fb36ce5435976dd33f57dd09cb9ce", "html_url": "https://github.com/rust-lang/rust/commit/14f656d1a79fb36ce5435976dd33f57dd09cb9ce"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "5f4f4960a932679463e0fa6b21c531f9d5117f76", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/cdab8a76f40969556ee1b86b8f107ec38cc137f9/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdab8a76f40969556ee1b86b8f107ec38cc137f9/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=cdab8a76f40969556ee1b86b8f107ec38cc137f9", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-//! A growable, owned vector\n+//! An owned, growable vector.\n \n use cast::{forget, transmute};\n use clone::Clone;\n@@ -30,18 +30,29 @@ use raw::Slice;\n use slice::{ImmutableEqVector, ImmutableVector, Items, MutItems, MutableVector};\n use slice::{MutableTotalOrdVector};\n \n-/// An owned, growable vector\n+/// An owned, growable vector.\n ///\n-/// `Vec<T>` is the replacement for the deprecated `~[T]` type. The API is\n-/// largely the same. The `vec!` macro is provided to make initialization\n-/// easier.\n+/// # Examples\n ///\n-/// # Example\n+/// ```rust\n+/// # use std::vec::Vec;\n+/// let mut vec = Vec::new();\n+/// vec.push(1);\n+/// vec.push(2);\n+///\n+/// assert_eq!(vec.len(), 2);\n+/// assert_eq!(vec.get(0), &1);\n+///\n+/// assert_eq!(vec.pop(), Some(2));\n+/// assert_eq!(vec.len(), 1);\n+/// ```\n+///\n+/// The `vec!` macro is provided to make initialization more convenient:\n ///\n /// ```rust\n /// let mut vec = vec!(1, 2, 3);\n /// vec.push(4);\n-/// println!(\"{}\", vec); // prints [1, 2, 3, 4]\n+/// assert_eq!(vec, vec!(1, 2, 3, 4));\n /// ```\n #[unsafe_no_drop_flag]\n pub struct Vec<T> {\n@@ -87,7 +98,6 @@ impl<T> Vec<T> {\n         }\n     }\n \n-\n     /// Creates and initializes a `Vec`.\n     ///\n     /// Creates a `Vec` of size `length` and initializes the elements to the\n@@ -767,13 +777,13 @@ impl<T> Vec<T> {\n     ///\n     /// # Example\n     /// ```rust\n-    /// let mut v = ~[~\"foo\", ~\"bar\", ~\"baz\", ~\"qux\"];\n+    /// let mut v = vec!(~\"foo\", ~\"bar\", ~\"baz\", ~\"qux\");\n     ///\n     /// assert_eq!(v.swap_remove(1), Some(~\"bar\"));\n-    /// assert_eq!(v, ~[~\"foo\", ~\"qux\", ~\"baz\"]);\n+    /// assert_eq!(v, vec!(~\"foo\", ~\"qux\", ~\"baz\"));\n     ///\n     /// assert_eq!(v.swap_remove(0), Some(~\"foo\"));\n-    /// assert_eq!(v, ~[~\"baz\", ~\"qux\"]);\n+    /// assert_eq!(v, vec!(~\"baz\", ~\"qux\"));\n     ///\n     /// assert_eq!(v.swap_remove(2), None);\n     /// ```\n@@ -869,13 +879,13 @@ impl<T> Vec<T> {\n     /// # Example\n     ///\n     /// ```rust\n-    /// let mut v = ~[1, 2, 3];\n+    /// let mut v = vec!(1, 2, 3);\n     /// assert_eq!(v.remove(1), Some(2));\n-    /// assert_eq!(v, ~[1, 3]);\n+    /// assert_eq!(v, vec!(1, 3));\n     ///\n     /// assert_eq!(v.remove(4), None);\n     /// // v is unchanged:\n-    /// assert_eq!(v, ~[1, 3]);\n+    /// assert_eq!(v, vec!(1, 3));\n     /// ```\n     pub fn remove(&mut self, index: uint) -> Option<T> {\n         let len = self.len();"}]}