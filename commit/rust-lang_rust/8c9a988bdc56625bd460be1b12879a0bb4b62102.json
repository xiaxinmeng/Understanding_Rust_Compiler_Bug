{"sha": "8c9a988bdc56625bd460be1b12879a0bb4b62102", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOWE5ODhiZGM1NjYyNWJkNDYwYmUxYjEyODc5YTBiYjRiNjIxMDI=", "commit": {"author": {"name": "crw5996", "email": "henry11", "date": "2018-08-27T16:31:26Z"}, "committer": {"name": "crw5996", "email": "henry11", "date": "2018-08-27T16:31:26Z"}, "message": "Fixed #2955. Added value to determine whether or not rustfmt has condensed a tuple-struct", "tree": {"sha": "079f012dfc2372bd67cd520b35d830050fc75257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/079f012dfc2372bd67cd520b35d830050fc75257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c9a988bdc56625bd460be1b12879a0bb4b62102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c9a988bdc56625bd460be1b12879a0bb4b62102", "html_url": "https://github.com/rust-lang/rust/commit/8c9a988bdc56625bd460be1b12879a0bb4b62102", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c9a988bdc56625bd460be1b12879a0bb4b62102/comments", "author": null, "committer": null, "parents": [{"sha": "f40baaa27279549ef2fb6561929027e1aa83b648", "url": "https://api.github.com/repos/rust-lang/rust/commits/f40baaa27279549ef2fb6561929027e1aa83b648", "html_url": "https://github.com/rust-lang/rust/commit/f40baaa27279549ef2fb6561929027e1aa83b648"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "809143c556be4c3a14ae3a14e4e10e02a81c3b11", "filename": "src/patterns.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c9a988bdc56625bd460be1b12879a0bb4b62102/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9a988bdc56625bd460be1b12879a0bb4b62102/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=8c9a988bdc56625bd460be1b12879a0bb4b62102", "patch": "@@ -340,10 +340,11 @@ fn rewrite_tuple_pat(\n     if pat_vec.is_empty() {\n         return Some(format!(\"{}()\", path_str.unwrap_or_default()));\n     }\n-\n+    let mut condensed_wildcards = false;\n     let wildcard_suffix_len = count_wildcard_suffix_len(context, &pat_vec, span, shape);\n     let (pat_vec, span) = if context.config.condense_wildcard_suffixes() && wildcard_suffix_len >= 2\n     {\n+        condensed_wildcards = true;\n         let new_item_count = 1 + pat_vec.len() - wildcard_suffix_len;\n         let sp = pat_vec[new_item_count - 1].span();\n         let snippet = context.snippet(sp);\n@@ -358,7 +359,8 @@ fn rewrite_tuple_pat(\n     };\n \n     // add comma if `(x,)`\n-    let add_comma = path_str.is_none() && pat_vec.len() == 1 && dotdot_pos.is_none();\n+    let add_comma =\n+        path_str.is_none() && pat_vec.len() == 1 && dotdot_pos.is_none() && !condensed_wildcards;\n     let path_str = path_str.unwrap_or_default();\n     let pat_ref_vec = pat_vec.iter().collect::<Vec<_>>();\n "}]}