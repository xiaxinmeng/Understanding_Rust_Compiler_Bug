{"sha": "6924e3c374563217a724f7ffca1a5087166e8f49", "node_id": "C_kwDOAAsO6NoAKDY5MjRlM2MzNzQ1NjMyMTdhNzI0ZjdmZmNhMWE1MDg3MTY2ZThmNDk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-08T11:02:47Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-20T15:28:58Z"}, "message": "Make untracked.source_span lockable so that resolution can still write to it when using TyCtxt", "tree": {"sha": "409ef2c141665701623473ddea7fb4b14dfdf255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/409ef2c141665701623473ddea7fb4b14dfdf255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6924e3c374563217a724f7ffca1a5087166e8f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6924e3c374563217a724f7ffca1a5087166e8f49", "html_url": "https://github.com/rust-lang/rust/commit/6924e3c374563217a724f7ffca1a5087166e8f49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6924e3c374563217a724f7ffca1a5087166e8f49/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ade3dceb38c6e41e3b8623e252d9413052e3a0af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ade3dceb38c6e41e3b8623e252d9413052e3a0af", "html_url": "https://github.com/rust-lang/rust/commit/ade3dceb38c6e41e3b8623e252d9413052e3a0af"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "5fcbf87a982a0e016b0b2e416d26ca2a76cebcb0", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -1026,7 +1026,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// system if the result is otherwise tracked through queries\n     #[inline]\n     pub fn source_span_untracked(self, def_id: LocalDefId) -> Span {\n-        self.untracked.source_span.get(def_id).copied().unwrap_or(DUMMY_SP)\n+        self.untracked.source_span.read().get(def_id).copied().unwrap_or(DUMMY_SP)\n     }\n \n     #[inline(always)]\n@@ -2518,5 +2518,5 @@ pub fn provide(providers: &mut ty::query::Providers) {\n         tcx.lang_items().panic_impl().map_or(false, |did| did.is_local())\n     };\n     providers.source_span =\n-        |tcx, def_id| tcx.untracked.source_span.get(def_id).copied().unwrap_or(DUMMY_SP);\n+        |tcx, def_id| tcx.untracked.source_span.read().get(def_id).copied().unwrap_or(DUMMY_SP);\n }"}, {"sha": "8db8ee9428bc737fb78c413f1a99b889b64a2717", "filename": "compiler/rustc_query_system/src/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -146,7 +146,7 @@ impl<'a> rustc_span::HashStableContext for StableHashingContext<'a> {\n \n     #[inline]\n     fn def_span(&self, def_id: LocalDefId) -> Span {\n-        *self.untracked.source_span.get(def_id).unwrap_or(&DUMMY_SP)\n+        *self.untracked.source_span.read().get(def_id).unwrap_or(&DUMMY_SP)\n     }\n \n     #[inline]"}, {"sha": "6bb6e92da9e13535268333d3c3034f03a45ae068", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -155,7 +155,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             if !candidates.is_empty() {\n                 show_candidates(\n                     &self.tcx.sess,\n-                    &self.untracked.source_span,\n+                    &self.untracked.source_span.read(),\n                     &mut err,\n                     span,\n                     &candidates,\n@@ -688,7 +688,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                     }\n                     show_candidates(\n                         &self.tcx.sess,\n-                        &self.untracked.source_span,\n+                        &self.untracked.source_span.read(),\n                         &mut err,\n                         Some(span),\n                         &import_suggestions,\n@@ -1353,7 +1353,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             self.lookup_import_candidates(ident, Namespace::MacroNS, parent_scope, is_expected);\n         show_candidates(\n             &self.tcx.sess,\n-            &self.untracked.source_span,\n+            &self.untracked.source_span.read(),\n             err,\n             None,\n             &import_suggestions,"}, {"sha": "6171dd657bfce9a128ee11f80086ee455d10eb7d", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -549,7 +549,7 @@ impl<'a, 'b, 'tcx> ImportResolver<'a, 'b, 'tcx> {\n                 match &import.kind {\n                     ImportKind::Single { nested: false, source, target, .. } => import_candidates(\n                         self.r.tcx.sess,\n-                        &self.r.untracked.source_span,\n+                        &self.r.untracked.source_span.read(),\n                         &mut diag,\n                         Some(err.span),\n                         &candidates,\n@@ -562,7 +562,7 @@ impl<'a, 'b, 'tcx> ImportResolver<'a, 'b, 'tcx> {\n                     ImportKind::Single { nested: true, source, target, .. } => {\n                         import_candidates(\n                             self.r.tcx.sess,\n-                            &self.r.untracked.source_span,\n+                            &self.r.untracked.source_span.read(),\n                             &mut diag,\n                             None,\n                             &candidates,"}, {"sha": "7a8e594a8f9723b8c6f5a5826918cc31ebae90c3", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -1180,7 +1180,7 @@ impl<'tcx> Resolver<'_, 'tcx> {\n \n         // A relative span's parent must be an absolute span.\n         debug_assert_eq!(span.data_untracked().parent, None);\n-        let _id = self.untracked.source_span.push(span);\n+        let _id = self.untracked.source_span.write().push(span);\n         debug_assert_eq!(_id, def_id);\n \n         // Some things for which we allocate `LocalDefId`s don't correspond to\n@@ -1329,7 +1329,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             used_extern_options: Default::default(),\n             untracked: Untracked {\n                 cstore: RwLock::new(Box::new(CStore::new(session))),\n-                source_span,\n+                source_span: RwLock::new(source_span),\n                 definitions: RwLock::new(definitions),\n             },\n             macro_names: FxHashSet::default(),\n@@ -1932,7 +1932,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n     /// Retrieves the span of the given `DefId` if `DefId` is in the local crate.\n     #[inline]\n     fn opt_span(&self, def_id: DefId) -> Option<Span> {\n-        def_id.as_local().map(|def_id| self.untracked.source_span[def_id])\n+        def_id.as_local().map(|def_id| self.untracked.source_span.read()[def_id])\n     }\n \n     /// Retrieves the name of the given `DefId`."}, {"sha": "796ceba7ad3a55046dd756c895bf210e87f49882", "filename": "compiler/rustc_session/src/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_session%2Fsrc%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6924e3c374563217a724f7ffca1a5087166e8f49/compiler%2Frustc_session%2Fsrc%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fcstore.rs?ref=6924e3c374563217a724f7ffca1a5087166e8f49", "patch": "@@ -256,6 +256,6 @@ pub type CrateStoreDyn = dyn CrateStore + sync::Sync + sync::Send;\n pub struct Untracked {\n     pub cstore: RwLock<Box<CrateStoreDyn>>,\n     /// Reference span for definitions.\n-    pub source_span: IndexVec<LocalDefId, Span>,\n+    pub source_span: RwLock<IndexVec<LocalDefId, Span>>,\n     pub definitions: RwLock<Definitions>,\n }"}]}