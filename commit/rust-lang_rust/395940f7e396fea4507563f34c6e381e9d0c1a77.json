{"sha": "395940f7e396fea4507563f34c6e381e9d0c1a77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NTk0MGY3ZTM5NmZlYTQ1MDc1NjNmMzRjNmUzODFlOWQwYzFhNzc=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-24T23:07:30Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-24T23:07:30Z"}, "message": "Dead code elimination.", "tree": {"sha": "b5fbb760dff924c387797bba9141f06177bf5ecd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5fbb760dff924c387797bba9141f06177bf5ecd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/395940f7e396fea4507563f34c6e381e9d0c1a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/395940f7e396fea4507563f34c6e381e9d0c1a77", "html_url": "https://github.com/rust-lang/rust/commit/395940f7e396fea4507563f34c6e381e9d0c1a77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/395940f7e396fea4507563f34c6e381e9d0c1a77/comments", "author": null, "committer": null, "parents": [{"sha": "de2e84e5b044d8635387bacd37d6088bd8dffd66", "url": "https://api.github.com/repos/rust-lang/rust/commits/de2e84e5b044d8635387bacd37d6088bd8dffd66", "html_url": "https://github.com/rust-lang/rust/commit/de2e84e5b044d8635387bacd37d6088bd8dffd66"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "b5af9eef1b3e1b53bb4fc341ccf7dc64360459a3", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -84,7 +84,7 @@ rust_start(uintptr_t main_fn, rust_crate const *crate, int argc,\n     rust_srv *srv = new rust_srv();\n     rust_kernel *kernel = new rust_kernel(srv);\n     kernel->start();\n-    rust_handle<rust_dom> *handle = kernel->create_domain(crate, \"main\");\n+    rust_handle<rust_dom> *handle = kernel->create_domain(\"main\");\n     rust_dom *dom = handle->referent();\n     command_line_args *args = new (dom) command_line_args(dom, argc, argv);\n "}, {"sha": "7c42afa8f9782232ee4dc4a56b77d5eef6554505", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -4,9 +4,8 @@\n \n rust_dom::rust_dom(rust_kernel *kernel,\n     rust_message_queue *message_queue, rust_srv *srv,\n-    rust_crate const *root_crate, const char *name) :\n+    const char *name) :\n     interrupt_flag(0),\n-    root_crate(root_crate),\n     _log(srv, this),\n     log_lvl(log_note),\n     srv(srv),"}, {"sha": "41a69d5f6e8021f5f5fb5c928983383f4d8da0e8", "filename": "src/rt/rust_dom.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_dom.h", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_dom.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.h?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -7,12 +7,6 @@ struct rust_dom : public kernel_owned<rust_dom>, rc_base<rust_dom>\n     uintptr_t interrupt_flag;\n \n     // Fields known only by the runtime:\n-\n-    // NB: the root crate must remain in memory until the root of the\n-    // tree of domains exits. All domains within this tree have a\n-    // copy of this root_crate value and use it for finding utility\n-    // glue.\n-    rust_crate const *root_crate;\n     rust_log _log;\n     uint32_t log_lvl;\n     rust_srv *srv;\n@@ -49,7 +43,7 @@ struct rust_dom : public kernel_owned<rust_dom>, rc_base<rust_dom>\n     // domain.\n     rust_dom(rust_kernel *kernel,\n              rust_message_queue *message_queue, rust_srv *srv,\n-             rust_crate const *root_crate, const char *name);\n+             const char *name);\n     ~rust_dom();\n     void activate(rust_task *task);\n     void log(rust_task *task, uint32_t level, char const *fmt, ...);"}, {"sha": "3c2ad01128ec92b9e8db02a0616609c1062c6a03", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -16,13 +16,13 @@ rust_kernel::rust_kernel(rust_srv *srv) :\n }\n \n rust_handle<rust_dom> *\n-rust_kernel::create_domain(const rust_crate *crate, const char *name) {\n+rust_kernel::create_domain(const char *name) {\n     _kernel_lock.lock();\n     rust_message_queue *message_queue =\n         new (this) rust_message_queue(_srv, this);\n     rust_srv *srv = _srv->clone();\n     rust_dom *dom =\n-        new (this) rust_dom(this, message_queue, srv, crate, name);\n+        new (this) rust_dom(this, message_queue, srv, name);\n     rust_handle<rust_dom> *handle = internal_get_dom_handle(dom);\n     message_queue->associate(handle);\n     domains.append(dom);"}, {"sha": "9b81e84a9aec3e7946e3a293df544a686eff0f4f", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -85,8 +85,7 @@ class rust_kernel : public rust_thread {\n \n     rust_kernel(rust_srv *srv);\n \n-    rust_handle<rust_dom> *create_domain(rust_crate const *root_crate,\n-                                         const char *name);\n+    rust_handle<rust_dom> *create_domain(const char *name);\n     void destroy_domain(rust_dom *dom);\n \n     bool is_deadlocked();"}, {"sha": "07c9b6e3efc1f25622226242a33c7e75252a7fa5", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -573,7 +573,7 @@ upcall_new_thread(rust_task *task, const char *name) {\n     rust_dom *parent_dom = task->dom;\n     rust_kernel *kernel = parent_dom->kernel;\n     rust_handle<rust_dom> *child_dom_handle =\n-        kernel->create_domain(parent_dom->root_crate, name);\n+        kernel->create_domain(name);\n     rust_handle<rust_task> *child_task_handle =\n         kernel->get_task_handle(child_dom_handle->referent()->root_task);\n     LOG(task, mem, \"child name: %s, child_dom_handle: \" PTR"}, {"sha": "c683302dec2e39ef742236b73c7e7d048eaa9b9e", "filename": "src/rt/test/rust_test_runtime.cpp", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Ftest%2Frust_test_runtime.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/395940f7e396fea4507563f34c6e381e9d0c1a77/src%2Frt%2Ftest%2Frust_test_runtime.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Ftest%2Frust_test_runtime.cpp?ref=395940f7e396fea4507563f34c6e381e9d0c1a77", "patch": "@@ -13,7 +13,7 @@ rust_test_runtime::~rust_test_runtime() {\n \n void\n rust_domain_test::worker::run() {\n-    rust_handle<rust_dom> *handle = kernel->create_domain(NULL, \"test\");\n+    rust_handle<rust_dom> *handle = kernel->create_domain(\"test\");\n     for (int i = 0; i < TASKS; i++) {\n         handle->referent()->create_task(NULL, \"child\");\n     }\n@@ -49,9 +49,8 @@ void task_entry() {\n \n void\n rust_task_test::worker::run() {\n-    rust_crate *crate = parent->suite->crate;\n     rust_handle<rust_dom> *handle =\n-        kernel->create_domain(crate, \"test\");\n+        kernel->create_domain(\"test\");\n     rust_dom *domain = handle->referent();\n     domain->root_task->start((uintptr_t)&task_entry, (uintptr_t)NULL, 0);\n     domain->start_main_loop();"}]}