{"sha": "50e7450bac9fd9faafb7adb7540ab07ddea896d1", "node_id": "C_kwDOAAsO6NoAKDUwZTc0NTBiYWM5ZmQ5ZmFhZmI3YWRiNzU0MGFiMDdkZGVhODk2ZDE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-03T20:11:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-03T20:11:06Z"}, "message": "only disable SIMD for doctests in Miri (not for the stdlib build itself)", "tree": {"sha": "c26abe06e0cf1594ec70e69a63d87ed752d964a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26abe06e0cf1594ec70e69a63d87ed752d964a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e7450bac9fd9faafb7adb7540ab07ddea896d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e7450bac9fd9faafb7adb7540ab07ddea896d1", "html_url": "https://github.com/rust-lang/rust/commit/50e7450bac9fd9faafb7adb7540ab07ddea896d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e7450bac9fd9faafb7adb7540ab07ddea896d1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9149b6773c396e18534425ccb1d3ae5b974793f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9149b6773c396e18534425ccb1d3ae5b974793f", "html_url": "https://github.com/rust-lang/rust/commit/e9149b6773c396e18534425ccb1d3ae5b974793f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "45fbcf44b350cbe5a40acedcc53d0546b731c438", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50e7450bac9fd9faafb7adb7540ab07ddea896d1/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e7450bac9fd9faafb7adb7540ab07ddea896d1/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=50e7450bac9fd9faafb7adb7540ab07ddea896d1", "patch": "@@ -408,12 +408,12 @@ pub mod arch {\n #[allow(missing_debug_implementations, dead_code, unsafe_op_in_unsafe_fn, unused_unsafe)]\n #[allow(rustdoc::bare_urls)]\n #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n-#[cfg(not(all(miri, doctest)))] // Miri does not support all SIMD intrinsics\n+#[cfg(not(all(miri, doctest)))] // Skip SIMD doctests in Miri\n mod core_simd;\n \n #[doc = include_str!(\"../../portable-simd/crates/core_simd/src/core_simd_docs.md\")]\n #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n-#[cfg(not(all(miri, doctest)))] // Miri does not support all SIMD intrinsics\n+#[cfg(not(all(miri, doctest)))] // Skip SIMD doctests in Miri\n pub mod simd {\n     #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n     pub use crate::core_simd::simd::*;"}, {"sha": "9467c7f54bac7d56d5062017675b0ef520da4d27", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50e7450bac9fd9faafb7adb7540ab07ddea896d1/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e7450bac9fd9faafb7adb7540ab07ddea896d1/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=50e7450bac9fd9faafb7adb7540ab07ddea896d1", "patch": "@@ -16,7 +16,7 @@ use crate::option::Option::{None, Some};\n use crate::ptr;\n use crate::result::Result;\n use crate::result::Result::{Err, Ok};\n-#[cfg(not(miri))] // Miri does not support all SIMD intrinsics\n+#[cfg(not(all(miri, doctest)))] // Miri skips SIMD doctests\n use crate::simd::{self, Simd};\n use crate::slice;\n \n@@ -3540,7 +3540,7 @@ impl<T> [T] {\n     /// assert_eq!(basic_simd_sum(&numbers[1..99]), 4949.0);\n     /// ```\n     #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n-    #[cfg(not(miri))] // Miri does not support all SIMD intrinsics\n+    #[cfg(not(all(miri, doctest)))] // Miri skips SIMD doctests\n     pub fn as_simd<const LANES: usize>(&self) -> (&[T], &[Simd<T, LANES>], &[T])\n     where\n         Simd<T, LANES>: AsRef<[T; LANES]>,\n@@ -3584,7 +3584,7 @@ impl<T> [T] {\n     /// be lifted in a way that would make it possible to see panics from this\n     /// method for something like `LANES == 3`.\n     #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n-    #[cfg(not(miri))] // Miri does not support all SIMD intrinsics\n+    #[cfg(not(all(miri, doctest)))] // Miri skips SIMD doctests\n     pub fn as_simd_mut<const LANES: usize>(&mut self) -> (&mut [T], &mut [Simd<T, LANES>], &mut [T])\n     where\n         Simd<T, LANES>: AsMut<[T; LANES]>,"}]}