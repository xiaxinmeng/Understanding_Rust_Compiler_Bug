{"sha": "a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MzdkZDAwYzg1MzZkODZjZmJlNTlkOGEzODgxZTI5YjNlNTVlZWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-03-25T23:47:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-03-26T21:07:16Z"}, "message": "Fix pretty-printing for raw identifiers", "tree": {"sha": "ca8496d6d87764c81e5db9021e924ef88e5991be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca8496d6d87764c81e5db9021e924ef88e5991be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "html_url": "https://github.com/rust-lang/rust/commit/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "html_url": "https://github.com/rust-lang/rust/commit/ab8b961677ac5c74762dcea955aa0ff4d7fe4915"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "ff501f30c891a5cd46e93384e5cfcf3bea5804c4", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -13,7 +13,7 @@ pub use self::AnnNode::*;\n use syntax::abi::Abi;\n use syntax::ast;\n use syntax::codemap::{CodeMap, Spanned};\n-use syntax::parse::ParseSess;\n+use syntax::parse::{token, ParseSess};\n use syntax::parse::lexer::comments;\n use syntax::print::pp::{self, Breaks};\n use syntax::print::pp::Breaks::{Consistent, Inconsistent};\n@@ -1561,7 +1561,11 @@ impl<'a> State<'a> {\n     }\n \n     pub fn print_name(&mut self, name: ast::Name) -> io::Result<()> {\n-        self.s.word(&name.as_str())?;\n+        if token::is_raw_guess(ast::Ident::with_empty_ctxt(name)) {\n+            self.s.word(&format!(\"r#{}\", name))?;\n+        } else {\n+            self.s.word(&name.as_str())?;\n+        }\n         self.ann.post(self, NodeName(&name))\n     }\n "}, {"sha": "e2dfca5d10a3c51a189718372b95bb076f6acd35", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -142,6 +142,13 @@ pub fn is_path_segment_keyword(id: ast::Ident) -> bool {\n     id.name == keywords::DollarCrate.name()\n }\n \n+// We see this identifier in a normal identifier position, like variable name or a type.\n+// How was it written originally? Did it use the raw form? Let's try to guess.\n+pub fn is_raw_guess(ident: ast::Ident) -> bool {\n+    ident.name != keywords::Invalid.name() &&\n+    is_reserved_ident(ident) && !is_path_segment_keyword(ident)\n+}\n+\n // Returns true for reserved identifiers used internally for elided lifetimes,\n // unnamed method parameters, crate root module, error recovery etc.\n pub fn is_special_ident(id: ast::Ident) -> bool {\n@@ -236,7 +243,7 @@ impl Token {\n \n     /// Recovers a `Token` from an `ast::Ident`. This creates a raw identifier if necessary.\n     pub fn from_ast_ident(ident: ast::Ident) -> Token {\n-        Ident(ident, is_reserved_ident(ident) && !is_path_segment_keyword(ident))\n+        Ident(ident, is_raw_guess(ident))\n     }\n \n     /// Returns `true` if the token starts with '>'."}, {"sha": "ae045fc095a5067bb1331fd65da16580433b3f61", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -2373,7 +2373,11 @@ impl<'a> State<'a> {\n     }\n \n     pub fn print_ident(&mut self, ident: ast::Ident) -> io::Result<()> {\n-        self.s.word(&ident.name.as_str())?;\n+        if token::is_raw_guess(ident) {\n+            self.s.word(&format!(\"r#{}\", ident))?;\n+        } else {\n+            self.s.word(&ident.name.as_str())?;\n+        }\n         self.ann.post(self, NodeIdent(&ident))\n     }\n "}, {"sha": "6cea75cf1d11e9a83daa59481c62a90d8f60d9cf", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(raw_identifiers)]\n \n use std::mem;"}, {"sha": "5d495c4e9e557eca33006318ca3ffd6af05b9bd7", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/basic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(raw_identifiers)]\n \n fn r#fn(r#match: u32) -> u32 {"}, {"sha": "256bd263d38d42c1d5c182310ccbdf50c48e4518", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(raw_identifiers)]\n \n #[derive(Debug, PartialEq, Eq)]"}, {"sha": "4bd16ded52fbdf6b39ba4e5d86aaa8deadd7207f", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a637dd00c8536d86cfbe59d8a3881e29b3e55eeb/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs?ref=a637dd00c8536d86cfbe59d8a3881e29b3e55eeb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(decl_macro)]\n #![feature(raw_identifiers)]\n "}]}