{"sha": "d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZmY5YWM4ZTg4OTlmMDZhMzJlODVkOWQxYThlYzdiMmFiZDY3NjU=", "commit": {"author": {"name": "Ashley Mannix", "email": "kodraus@hey.com", "date": "2021-01-18T11:53:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-18T11:53:26Z"}, "message": "Rollup merge of #81100 - lcnr:encode_with_shorthand, r=oli-obk\n\nprevent potential bug in `encode_with_shorthand`.\n\nsee https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Remove.20PredicateKind.20in.20favor.20of.20only.20Bin.E2.80.A6.20compiler-team.23397/near/223012169", "tree": {"sha": "55e544cdfe8291bb0be9f0986f2360ad2268f084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55e544cdfe8291bb0be9f0986f2360ad2268f084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBXa2CRBK7hj4Ov3rIwAAdHIIAG7AFalJCW90qOEw8uArFcEj\nHplchHwcjAhVC+FepofB8CkvQmvWtq3aK33fnvM6bvhZoW3mkXgYD7CtxqMAUcV+\nnYY4BjutKn1BxaUPhVf+T6mfhG031vPwwAPCtbjDw/+YsMScL+6R2ZCFmMSYvnb9\n5C2o2stw95appC9GTHja+Pn5/MM3YEpFz5vFKVkBbxZKy2EfthLmiDIUUzYa7v6v\nExFDlRmjiNNCGw2uJYqFqDq5ehET1nrNXCBw5JB5ETDOontxgdQDCAMft0diOkv4\nQMSilkPnM4U0/ihKONl6LLR2yNdI3SHtKbFBy4WxngCGJ7HI87CPbTbbHziaoZ8=\n=cwQH\n-----END PGP SIGNATURE-----\n", "payload": "tree 55e544cdfe8291bb0be9f0986f2360ad2268f084\nparent c7ca540da279406e055f71f58feb6427314322ab\nparent 84b056d5970b3f91073de0414a03d613ecc1009f\nauthor Ashley Mannix <kodraus@hey.com> 1610970806 +1000\ncommitter GitHub <noreply@github.com> 1610970806 +1000\n\nRollup merge of #81100 - lcnr:encode_with_shorthand, r=oli-obk\n\nprevent potential bug in `encode_with_shorthand`.\n\nsee https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Remove.20PredicateKind.20in.20favor.20of.20only.20Bin.E2.80.A6.20compiler-team.23397/near/223012169\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765", "html_url": "https://github.com/rust-lang/rust/commit/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ca540da279406e055f71f58feb6427314322ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ca540da279406e055f71f58feb6427314322ab", "html_url": "https://github.com/rust-lang/rust/commit/c7ca540da279406e055f71f58feb6427314322ab"}, {"sha": "84b056d5970b3f91073de0414a03d613ecc1009f", "url": "https://api.github.com/repos/rust-lang/rust/commits/84b056d5970b3f91073de0414a03d613ecc1009f", "html_url": "https://github.com/rust-lang/rust/commit/84b056d5970b3f91073de0414a03d613ecc1009f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0dad5df48551ed115ffac2137ca775eab3516efb", "filename": "compiler/rustc_middle/src/ty/codec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs?ref=d3ff9ac8e8899f06a32e85d9d1a8ec7b2abd6765", "patch": "@@ -18,7 +18,6 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_serialize::{Decodable, Decoder, Encodable, Encoder};\n use rustc_span::Span;\n-use std::convert::{TryFrom, TryInto};\n use std::hash::Hash;\n use std::intrinsics;\n use std::marker::DiscriminantKind;\n@@ -81,7 +80,8 @@ where\n     E: TyEncoder<'tcx>,\n     M: for<'b> Fn(&'b mut E) -> &'b mut FxHashMap<T, usize>,\n     T: EncodableWithShorthand<'tcx, E>,\n-    <T::Variant as DiscriminantKind>::Discriminant: Ord + TryFrom<usize>,\n+    // The discriminant and shorthand must have the same size.\n+    T::Variant: DiscriminantKind<Discriminant = isize>,\n {\n     let existing_shorthand = cache(encoder).get(value).copied();\n     if let Some(shorthand) = existing_shorthand {\n@@ -97,7 +97,7 @@ where\n     // The shorthand encoding uses the same usize as the\n     // discriminant, with an offset so they can't conflict.\n     let discriminant = intrinsics::discriminant_value(variant);\n-    assert!(discriminant < SHORTHAND_OFFSET.try_into().ok().unwrap());\n+    assert!(SHORTHAND_OFFSET > discriminant as usize);\n \n     let shorthand = start + SHORTHAND_OFFSET;\n "}]}