{"sha": "eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "node_id": "C_kwDOAAsO6NoAKGVlYmY2NzZiZjhmNzZmY2RmYTYxMGU3ZTQ2YWI2YzEzNWE5Y2QyZDA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-14T18:28:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-14T18:29:21Z"}, "message": "fix getting the discriminant of a zero-variant enum", "tree": {"sha": "214d029f6c2f58a6ba84b5e830db1856e2159144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/214d029f6c2f58a6ba84b5e830db1856e2159144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "html_url": "https://github.com/rust-lang/rust/commit/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e94975a6541e947a1bd4971e084c8ba637f2b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e94975a6541e947a1bd4971e084c8ba637f2b6", "html_url": "https://github.com/rust-lang/rust/commit/c8e94975a6541e947a1bd4971e084c8ba637f2b6"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "59601e148495646faaa9742868b20a3cd141e513", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "patch": "@@ -2067,7 +2067,9 @@ impl<'tcx> TyS<'tcx> {\n     ) -> Option<Discr<'tcx>> {\n         match self.kind() {\n             TyKind::Adt(adt, _) if adt.variants.is_empty() => {\n-                bug!(\"discriminant_for_variant called on zero variant enum\");\n+                // This can actually happen during CTFE, see\n+                // https://github.com/rust-lang/rust/issues/89765.\n+                None\n             }\n             TyKind::Adt(adt, _) if adt.is_enum() => {\n                 Some(adt.discriminant_for_variant(tcx, variant_index))"}, {"sha": "a9c0217ae24214fc972a73d4a51d73877253d51f", "filename": "src/test/ui/consts/const_discriminant.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs?ref=eebf676bf8f76fcdfa610e7e46ab6c135a9cd2d0", "patch": "@@ -25,6 +25,12 @@ enum SingleVariant {\n \n const TEST_V: Discriminant<SingleVariant> = discriminant(&SingleVariant::V);\n \n+pub const TEST_VOID: () = {\n+    // This is UB, but CTFE does not check validity so it does not detect this.\n+    unsafe { std::mem::discriminant(&*(&() as *const () as *const Void)); };\n+};\n+\n+\n fn main() {\n     assert_eq!(TEST_A, TEST_A_OTHER);\n     assert_eq!(TEST_A, discriminant(black_box(&Test::A(17))));"}]}