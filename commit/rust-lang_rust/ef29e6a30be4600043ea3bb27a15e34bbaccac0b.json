{"sha": "ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMjllNmEzMGJlNDYwMDA0M2VhM2JiMjdhMTVlMzRiYmFjY2FjMGI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-06-21T06:55:32Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-06-21T06:57:17Z"}, "message": "Add fullmir tests", "tree": {"sha": "a216a6d055f6b04365de4e5fea94b83f7cb10f0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a216a6d055f6b04365de4e5fea94b83f7cb10f0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "html_url": "https://github.com/rust-lang/rust/commit/ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a82fe9ae0c770d540e9028596035d72b42c8d0e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a82fe9ae0c770d540e9028596035d72b42c8d0e7", "html_url": "https://github.com/rust-lang/rust/commit/a82fe9ae0c770d540e9028596035d72b42c8d0e7"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "5bc7f291d7629e01389b38d93647c0b30f7e7e4c", "filename": ".travis.yml", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "patch": "@@ -10,6 +10,11 @@ before_script:\n - cargo install xargo\n - export RUST_SYSROOT=$HOME/rust\n script:\n+- |\n+  # get ourselves a MIR-ful libstd\n+  cd xargo &&\n+  RUSTFLAGS='-Zalways-encode-mir' xargo build &&\n+  cd ..\n - |\n   # Test plain miri\n   cargo build &&\n@@ -22,11 +27,7 @@ script:\n   cargo miri test &&\n   cd ..\n - |\n-  # get ourselves a MIR-ful libstd\n-  cd xargo &&\n-  RUSTFLAGS='-Zalways-encode-mir' xargo build &&\n-  cd .. &&\n-  # and run the tests with it\n+  # and run all tests with full mir\n   MIRI_SYSROOT=~/.xargo/HOST cargo test\n notifications:\n   email:"}, {"sha": "fe9cbd64790631ac64caa95a3d42ae2217b5f772", "filename": "tests/compiletest.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "patch": "@@ -27,13 +27,17 @@ fn run_pass() {\n     compiletest::run_tests(&config);\n }\n \n-fn miri_pass(path: &str, target: &str, host: &str) {\n+fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool) {\n     let mut config = compiletest::default_config();\n     config.mode = \"mir-opt\".parse().expect(\"Invalid mode\");\n     config.src_base = PathBuf::from(path);\n     config.target = target.to_owned();\n     config.host = host.to_owned();\n     config.rustc_path = PathBuf::from(\"target/debug/miri\");\n+    if fullmir {\n+        let sysroot = Path::new(&std::env::var(\"HOME\").unwrap()).join(\".xargo\").join(\"HOST\");\n+        config.target_rustcflags = Some(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n+    }\n     // don't actually execute the final binary, it might be for other targets and we only care\n     // about running miri, not the binary.\n     config.runtool = Some(\"echo \\\"\\\" || \".to_owned());\n@@ -116,6 +120,7 @@ fn compile_test() {\n             let sysroot = libs.join(\"rustlib\").join(&host).join(\"lib\");\n             let paths = std::env::join_paths(&[libs, sysroot]).unwrap();\n             cmd.env(compiletest::procsrv::dylib_env_var(), paths);\n+            cmd.env(\"MIRI_SYSROOT\", Path::new(&std::env::var(\"HOME\").unwrap()).join(\".xargo\").join(\"HOST\"));\n \n             match cmd.output() {\n                 Ok(ref output) if output.status.success() => {\n@@ -197,8 +202,9 @@ fn compile_test() {\n     } else {\n         run_pass();\n         for_all_targets(sysroot, |target| {\n-            miri_pass(\"tests/run-pass\", &target, host);\n+            miri_pass(\"tests/run-pass\", &target, host, false);\n         });\n+        miri_pass(\"tests/run-pass-fullmir\", host, host, true);\n         compile_fail(sysroot);\n     }\n }"}, {"sha": "8631909a2a96612f234205c6ee7026b6d79f4893", "filename": "tests/run-pass-fullmir/loop-break-value.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/tests%2Frun-pass-fullmir%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef29e6a30be4600043ea3bb27a15e34bbaccac0b/tests%2Frun-pass-fullmir%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Floop-break-value.rs?ref=ef29e6a30be4600043ea3bb27a15e34bbaccac0b", "previous_filename": "tests/run-pass/loop-break-value.rs"}]}