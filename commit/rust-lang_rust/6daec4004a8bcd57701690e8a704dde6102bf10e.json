{"sha": "6daec4004a8bcd57701690e8a704dde6102bf10e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYWVjNDAwNGE4YmNkNTc3MDE2OTBlOGE3MDRkZGU2MTAyYmYxMGU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-21T15:59:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-21T15:59:57Z"}, "message": "First cut of trans_for.", "tree": {"sha": "96a7eec60c2a0f385803ca7938c4f6b54fcf2060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96a7eec60c2a0f385803ca7938c4f6b54fcf2060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6daec4004a8bcd57701690e8a704dde6102bf10e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6daec4004a8bcd57701690e8a704dde6102bf10e", "html_url": "https://github.com/rust-lang/rust/commit/6daec4004a8bcd57701690e8a704dde6102bf10e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6daec4004a8bcd57701690e8a704dde6102bf10e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bc57fa85e6191117c8c27bf53f8e051e13783c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bc57fa85e6191117c8c27bf53f8e051e13783c3", "html_url": "https://github.com/rust-lang/rust/commit/8bc57fa85e6191117c8c27bf53f8e051e13783c3"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "1a703d0a25bcc8479e36e8a7a3d92e8a2e78e025", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/6daec4004a8bcd57701690e8a704dde6102bf10e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daec4004a8bcd57701690e8a704dde6102bf10e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6daec4004a8bcd57701690e8a704dde6102bf10e", "patch": "@@ -1793,6 +1793,40 @@ fn trans_if(@block_ctxt cx, @ast.expr cond,\n                      vec(then_res, else_res));\n }\n \n+fn trans_for(@block_ctxt cx,\n+             @ast.decl decl,\n+             @ast.expr seq,\n+             &ast.block body) -> result {\n+\n+    fn inner(@block_ctxt cx,\n+             @ast.local local, ValueRef curr,\n+             @ty.t t, ast.block body) -> result {\n+\n+        auto scope_cx = new_scope_block_ctxt(cx, \"for loop scope\");\n+        auto next_cx = new_sub_block_ctxt(cx, \"next\");\n+\n+        cx.build.Br(scope_cx.llbb);\n+        auto local_res = alloc_local(scope_cx, local);\n+        auto bcx = copy_ty(local_res.bcx, true, local_res.val, curr, t).bcx;\n+        trans_block(bcx, body);\n+        bcx.build.Br(next_cx.llbb);\n+        ret res(next_cx, C_nil());\n+    }\n+\n+\n+    let @ast.local local;\n+    alt (decl.node) {\n+        case (ast.decl_local(?loc)) {\n+            local = loc;\n+        }\n+    }\n+\n+    auto seq_ty = ty.expr_ty(seq);\n+    auto seq_res = trans_expr(cx, seq);\n+    ret iter_sequence(seq_res.bcx, seq_res.val, seq_ty,\n+                      bind inner(_, local, _, _, body));\n+}\n+\n fn trans_while(@block_ctxt cx, @ast.expr cond,\n                &ast.block body) -> result {\n \n@@ -2648,6 +2682,10 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n             ret trans_if(cx, cond, thn, els);\n         }\n \n+        case (ast.expr_for(?decl, ?seq, ?body, _)) {\n+            ret trans_for(cx, decl, seq, body);\n+        }\n+\n         case (ast.expr_while(?cond, ?body, _)) {\n             ret trans_while(cx, cond, body);\n         }"}]}