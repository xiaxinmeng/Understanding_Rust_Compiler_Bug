{"sha": "1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMWU3ZTk2MTZiYTkxNmNiY2Y5NGY0NmYxOWU4M2JhM2IyNmM4MmQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-03T23:36:23Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-04T08:46:55Z"}, "message": "Add option::get_zero\n\nr=brson\n\nCloses #3797", "tree": {"sha": "da440cb0ecc6a2b4f27ee884ad1884fca9a64212", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da440cb0ecc6a2b4f27ee884ad1884fca9a64212"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d", "html_url": "https://github.com/rust-lang/rust/commit/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a933cdfbf16b7a45a61478ea25b89af43079631b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a933cdfbf16b7a45a61478ea25b89af43079631b", "html_url": "https://github.com/rust-lang/rust/commit/a933cdfbf16b7a45a61478ea25b89af43079631b"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "5b5b3b271fff0f388ea350dd8020067590e0e7e0", "filename": "src/libcore/option.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=1f1e7e9616ba916cbcf94f46f19e83ba3b26c82d", "patch": "@@ -49,6 +49,7 @@ use option;\n use ptr;\n use str;\n use util;\n+use num::Zero;\n \n /// The option type\n #[deriving_eq]\n@@ -170,6 +171,12 @@ pub pure fn is_some<T>(opt: &Option<T>) -> bool {\n     !is_none(opt)\n }\n \n+pub pure fn get_zero<T: Copy Zero>(opt: Option<T>) -> T {\n+    //! Returns the contained value or zero (for this type)\n+\n+    match opt { Some(copy x) => x, None => Zero::zero() }\n+}\n+\n pub pure fn get_default<T: Copy>(opt: Option<T>, def: T) -> T {\n     //! Returns the contained value or a default\n \n@@ -333,6 +340,11 @@ impl<T: Copy> Option<T> {\n     }\n }\n \n+impl<T: Copy Zero> Option<T> {\n+    #[inline(always)]\n+    pure fn get_zero(self) -> T { get_zero(self) }\n+}\n+\n #[test]\n fn test_unwrap_ptr() {\n     let x = ~0;\n@@ -407,6 +419,14 @@ fn test_option_while_some() {\n     assert i == 11;\n }\n \n+#[test]\n+fn test_get_zero() {\n+    let some_stuff = Some(42);\n+    assert some_stuff.get_zero() == 42;\n+    let no_stuff: Option<int> = None;\n+    assert no_stuff.get_zero() == 0;\n+}\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}