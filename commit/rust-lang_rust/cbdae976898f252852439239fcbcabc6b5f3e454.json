{"sha": "cbdae976898f252852439239fcbcabc6b5f3e454", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZGFlOTc2ODk4ZjI1Mjg1MjQzOTIzOWZjYmNhYmM2YjVmM2U0NTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-05T11:31:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-05T11:31:22Z"}, "message": "auto merge of #16234 : cakebaker/rust/rename_guessing_game_rs_to_main_rs, r=steveklabnik\n\nFollow-up to #16215", "tree": {"sha": "e21c788095c9ee8097c4c9cbf2493223cb9cbc43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e21c788095c9ee8097c4c9cbf2493223cb9cbc43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbdae976898f252852439239fcbcabc6b5f3e454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbdae976898f252852439239fcbcabc6b5f3e454", "html_url": "https://github.com/rust-lang/rust/commit/cbdae976898f252852439239fcbcabc6b5f3e454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbdae976898f252852439239fcbcabc6b5f3e454/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde58d95afbfbe08d17390354906ce00b9165418", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde58d95afbfbe08d17390354906ce00b9165418", "html_url": "https://github.com/rust-lang/rust/commit/fde58d95afbfbe08d17390354906ce00b9165418"}, {"sha": "d0bd10b891e89cde8a1fb7c11495a8ccb051b7b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bd10b891e89cde8a1fb7c11495a8ccb051b7b5", "html_url": "https://github.com/rust-lang/rust/commit/d0bd10b891e89cde8a1fb7c11495a8ccb051b7b5"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "0236cc0533fc7ed86eb8d813dc6dadee6dabf9ba", "filename": "src/doc/guide.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cbdae976898f252852439239fcbcabc6b5f3e454/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/cbdae976898f252852439239fcbcabc6b5f3e454/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=cbdae976898f252852439239fcbcabc6b5f3e454", "patch": "@@ -1647,14 +1647,14 @@ $ cargo build\n $\n ```\n \n-Excellent! Open up your `src/guessing_game.rs` again. We'll be writing all of\n+Excellent! Open up your `src/main.rs` again. We'll be writing all of\n our code in this file. We'll talk about multiple-file projects later on in the\n guide.\n \n ## Processing a Guess\n \n Let's get to it! The first thing we need to do for our guessing game is\n-allow our player to input a guess. Put this in your `src/guessing_game.rs`:\n+allow our player to input a guess. Put this in your `src/main.rs`:\n \n ```{rust,no_run}\n use std::io;\n@@ -1734,9 +1734,9 @@ this using `cargo build`:\n ```{notrust,no_run}\n $ cargo build\n    Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-src/guessing_game.rs:7:26: 7:34 error: the type of this value must be known in this context\n-src/guessing_game.rs:7     let secret_number = (rand::random() % 100i) + 1i;\n-                                                ^~~~~~~~\n+src/main.rs:7:26: 7:34 error: the type of this value must be known in this context\n+src/main.rs:7     let secret_number = (rand::random() % 100i) + 1i;\n+                                       ^~~~~~~~\n error: aborting due to previous error\n ```\n \n@@ -1896,12 +1896,12 @@ If we try to compile, we'll get some errors:\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-src/guessing_game.rs:20:15: 20:20 error: mismatched types: expected `int` but found `collections::string::String` (expected int but found struct collections::string::String)\n-src/guessing_game.rs:20     match cmp(input, secret_number) {\n-                                      ^~~~~\n-src/guessing_game.rs:20:22: 20:35 error: mismatched types: expected `int` but found `uint` (expected int but found uint)\n-src/guessing_game.rs:20     match cmp(input, secret_number) {\n-                                             ^~~~~~~~~~~~~\n+src/main.rs:20:15: 20:20 error: mismatched types: expected `int` but found `collections::string::String` (expected int but found struct collections::string::String)\n+src/main.rs:20     match cmp(input, secret_number) {\n+                             ^~~~~\n+src/main.rs:20:22: 20:35 error: mismatched types: expected `int` but found `uint` (expected int but found uint)\n+src/main.rs:20     match cmp(input, secret_number) {\n+                                    ^~~~~~~~~~~~~\n error: aborting due to 2 previous errors\n ```\n \n@@ -1950,9 +1950,9 @@ And try compiling again:\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-src/guessing_game.rs:20:15: 20:20 error: mismatched types: expected `uint` but found `collections::string::String` (expected uint but found struct collections::string::String)\n-src/guessing_game.rs:20     match cmp(input, secret_number) {\n-                                      ^~~~~\n+src/main.rs:20:15: 20:20 error: mismatched types: expected `uint` but found `collections::string::String` (expected uint but found struct collections::string::String)\n+src/main.rs:20     match cmp(input, secret_number) {\n+                             ^~~~~\n error: aborting due to previous error\n ```\n \n@@ -2053,9 +2053,9 @@ Let's try it out!\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-src/guessing_game.rs:22:15: 22:24 error: mismatched types: expected `uint` but found `core::option::Option<uint>` (expected uint but found enum core::option::Option)\n-src/guessing_game.rs:22     match cmp(input_num, secret_number) {\n-                                      ^~~~~~~~~\n+src/main.rs:22:15: 22:24 error: mismatched types: expected `uint` but found `core::option::Option<uint>` (expected uint but found enum core::option::Option)\n+src/main.rs:22     match cmp(input_num, secret_number) {\n+                             ^~~~~~~~~\n error: aborting due to previous error\n ```\n "}]}