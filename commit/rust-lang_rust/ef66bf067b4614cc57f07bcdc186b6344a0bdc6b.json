{"sha": "ef66bf067b4614cc57f07bcdc186b6344a0bdc6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNjZiZjA2N2I0NjE0Y2M1N2YwN2JjZGMxODZiNjM0NGEwYmRjNmI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-07-13T17:06:19Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-07-16T08:03:28Z"}, "message": "Make `try_eval` private", "tree": {"sha": "46e7e85b18dd411d8464e37c35e67312444b2d4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46e7e85b18dd411d8464e37c35e67312444b2d4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b", "html_url": "https://github.com/rust-lang/rust/commit/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "763aaef670f7ac1e00003beec760188d9987173d", "url": "https://api.github.com/repos/rust-lang/rust/commits/763aaef670f7ac1e00003beec760188d9987173d", "html_url": "https://github.com/rust-lang/rust/commit/763aaef670f7ac1e00003beec760188d9987173d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "75287ff7dace3b8dcf2553e924b90d7018d99f34", "filename": "src/librustc_middle/ty/consts/kind.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b/src%2Flibrustc_middle%2Fty%2Fconsts%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef66bf067b4614cc57f07bcdc186b6344a0bdc6b/src%2Flibrustc_middle%2Fty%2Fconsts%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fconsts%2Fkind.rs?ref=ef66bf067b4614cc57f07bcdc186b6344a0bdc6b", "patch": "@@ -87,8 +87,8 @@ impl<'tcx> ConstKind<'tcx> {\n \n     #[inline]\n     /// Tries to evaluate the constant if it is `Unevaluated`. If that isn't possible or necessary\n-    // return None\n-    pub fn try_eval(\n+    /// return `None`.\n+    pub(super) fn try_eval(\n         self,\n         tcx: TyCtxt<'tcx>,\n         param_env: ParamEnv<'tcx>,"}]}