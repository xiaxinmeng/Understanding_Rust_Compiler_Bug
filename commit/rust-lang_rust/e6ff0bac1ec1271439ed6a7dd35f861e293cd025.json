{"sha": "e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "node_id": "C_kwDOAAsO6NoAKGU2ZmYwYmFjMWVjMTI3MTQzOWVkNmE3ZGQzNWY4NjFlMjkzY2QwMjU", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-12-07T18:29:13Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-12-22T16:50:57Z"}, "message": "rustc `VecGraph`: require the index type to implement Ord", "tree": {"sha": "a1e830ecf30670c468484cea557b4ed79d12f5f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1e830ecf30670c468484cea557b4ed79d12f5f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "html_url": "https://github.com/rust-lang/rust/commit/e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6ff0bac1ec1271439ed6a7dd35f861e293cd025/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a8c241c7bcce3604a0ce130a65084101d0ab47", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a8c241c7bcce3604a0ce130a65084101d0ab47", "html_url": "https://github.com/rust-lang/rust/commit/a4a8c241c7bcce3604a0ce130a65084101d0ab47"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "7099ca7eb88c2db01f8b5ed0af656a99e6bca869", "filename": "compiler/rustc_data_structures/src/graph/scc/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e6ff0bac1ec1271439ed6a7dd35f861e293cd025/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6ff0bac1ec1271439ed6a7dd35f861e293cd025/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs?ref=e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "patch": "@@ -9,6 +9,7 @@ use crate::fx::FxHashSet;\n use crate::graph::vec_graph::VecGraph;\n use crate::graph::{DirectedGraph, GraphSuccessors, WithNumEdges, WithNumNodes, WithSuccessors};\n use rustc_index::vec::{Idx, IndexVec};\n+use std::cmp::Ord;\n use std::ops::Range;\n \n #[cfg(test)]\n@@ -38,7 +39,7 @@ struct SccData<S: Idx> {\n     all_successors: Vec<S>,\n }\n \n-impl<N: Idx, S: Idx> Sccs<N, S> {\n+impl<N: Idx, S: Idx + Ord> Sccs<N, S> {\n     pub fn new(graph: &(impl DirectedGraph<Node = N> + WithNumNodes + WithSuccessors)) -> Self {\n         SccsConstruction::construct(graph)\n     }\n@@ -85,7 +86,7 @@ impl<N: Idx, S: Idx> DirectedGraph for Sccs<N, S> {\n     type Node = S;\n }\n \n-impl<N: Idx, S: Idx> WithNumNodes for Sccs<N, S> {\n+impl<N: Idx, S: Idx + Ord> WithNumNodes for Sccs<N, S> {\n     fn num_nodes(&self) -> usize {\n         self.num_sccs()\n     }\n@@ -103,7 +104,7 @@ impl<'graph, N: Idx, S: Idx> GraphSuccessors<'graph> for Sccs<N, S> {\n     type Iter = std::iter::Cloned<std::slice::Iter<'graph, S>>;\n }\n \n-impl<N: Idx, S: Idx> WithSuccessors for Sccs<N, S> {\n+impl<N: Idx, S: Idx + Ord> WithSuccessors for Sccs<N, S> {\n     fn successors(&self, node: S) -> <Self as GraphSuccessors<'_>>::Iter {\n         self.successors(node).iter().cloned()\n     }"}, {"sha": "3d91bcade59a46818c93cce96127fd7e6a573b53", "filename": "compiler/rustc_data_structures/src/graph/vec_graph/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6ff0bac1ec1271439ed6a7dd35f861e293cd025/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fvec_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6ff0bac1ec1271439ed6a7dd35f861e293cd025/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fvec_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fvec_graph%2Fmod.rs?ref=e6ff0bac1ec1271439ed6a7dd35f861e293cd025", "patch": "@@ -1,3 +1,5 @@\n+use std::cmp::Ord;\n+\n use crate::graph::{DirectedGraph, GraphSuccessors, WithNumEdges, WithNumNodes, WithSuccessors};\n use rustc_index::vec::{Idx, IndexVec};\n \n@@ -17,10 +19,10 @@ pub struct VecGraph<N: Idx> {\n     edge_targets: Vec<N>,\n }\n \n-impl<N: Idx> VecGraph<N> {\n+impl<N: Idx + Ord> VecGraph<N> {\n     pub fn new(num_nodes: usize, mut edge_pairs: Vec<(N, N)>) -> Self {\n         // Sort the edges by the source -- this is important.\n-        edge_pairs.sort_by_key(|&edge_pairs| (edge_pairs.0.index(), edge_pairs.1.index()));\n+        edge_pairs.sort();\n \n         let num_edges = edge_pairs.len();\n \n@@ -100,7 +102,7 @@ impl<'graph, N: Idx> GraphSuccessors<'graph> for VecGraph<N> {\n     type Iter = std::iter::Cloned<std::slice::Iter<'graph, N>>;\n }\n \n-impl<N: Idx> WithSuccessors for VecGraph<N> {\n+impl<N: Idx + Ord> WithSuccessors for VecGraph<N> {\n     fn successors(&self, node: N) -> <Self as GraphSuccessors<'_>>::Iter {\n         self.successors(node).iter().cloned()\n     }"}]}