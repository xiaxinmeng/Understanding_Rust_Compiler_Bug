{"sha": "90c8463d7e213b8d15274db1fa9c413938b5ae02", "node_id": "C_kwDOAAsO6NoAKDkwYzg0NjNkN2UyMTNiOGQxNTI3NGRiMWZhOWM0MTM5MzhiNWFlMDI", "commit": {"author": {"name": "Dennis Luxen", "email": "info@project-osrm.org", "date": "2022-06-04T19:44:37Z"}, "committer": {"name": "Dennis Luxen", "email": "info@project-osrm.org", "date": "2022-06-05T20:46:34Z"}, "message": "Rewrite check to account for floating point literals", "tree": {"sha": "3fcfab31c29dad8073b34a782a8e219e69b074e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fcfab31c29dad8073b34a782a8e219e69b074e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c8463d7e213b8d15274db1fa9c413938b5ae02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c8463d7e213b8d15274db1fa9c413938b5ae02", "html_url": "https://github.com/rust-lang/rust/commit/90c8463d7e213b8d15274db1fa9c413938b5ae02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c8463d7e213b8d15274db1fa9c413938b5ae02/comments", "author": {"login": "DennisOSRM", "id": 1067895, "node_id": "MDQ6VXNlcjEwNjc4OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1067895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DennisOSRM", "html_url": "https://github.com/DennisOSRM", "followers_url": "https://api.github.com/users/DennisOSRM/followers", "following_url": "https://api.github.com/users/DennisOSRM/following{/other_user}", "gists_url": "https://api.github.com/users/DennisOSRM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DennisOSRM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DennisOSRM/subscriptions", "organizations_url": "https://api.github.com/users/DennisOSRM/orgs", "repos_url": "https://api.github.com/users/DennisOSRM/repos", "events_url": "https://api.github.com/users/DennisOSRM/events{/privacy}", "received_events_url": "https://api.github.com/users/DennisOSRM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DennisOSRM", "id": 1067895, "node_id": "MDQ6VXNlcjEwNjc4OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1067895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DennisOSRM", "html_url": "https://github.com/DennisOSRM", "followers_url": "https://api.github.com/users/DennisOSRM/followers", "following_url": "https://api.github.com/users/DennisOSRM/following{/other_user}", "gists_url": "https://api.github.com/users/DennisOSRM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DennisOSRM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DennisOSRM/subscriptions", "organizations_url": "https://api.github.com/users/DennisOSRM/orgs", "repos_url": "https://api.github.com/users/DennisOSRM/repos", "events_url": "https://api.github.com/users/DennisOSRM/events{/privacy}", "received_events_url": "https://api.github.com/users/DennisOSRM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5948959c7e050a403618b134ec831f6ef1265ddd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5948959c7e050a403618b134ec831f6ef1265ddd", "html_url": "https://github.com/rust-lang/rust/commit/5948959c7e050a403618b134ec831f6ef1265ddd"}], "stats": {"total": 83, "additions": 61, "deletions": 22}, "files": [{"sha": "19e1247d642c7a4009076d19ee16ab80ab11c013", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90c8463d7e213b8d15274db1fa9c413938b5ae02/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c8463d7e213b8d15274db1fa9c413938b5ae02/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=90c8463d7e213b8d15274db1fa9c413938b5ae02", "patch": "@@ -747,7 +747,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(collapsible_if::CollapsibleIf));\n     store.register_early_pass(|| Box::new(items_after_statements::ItemsAfterStatements));\n     store.register_early_pass(|| Box::new(precedence::Precedence));\n-    store.register_early_pass(|| Box::new(needless_parens_on_range_literal::NeedlessParensOnRangeLiteral));\n+    store.register_late_pass(|| Box::new(needless_parens_on_range_literal::NeedlessParensOnRangeLiteral));\n     store.register_early_pass(|| Box::new(needless_continue::NeedlessContinue));\n     store.register_early_pass(|| Box::new(redundant_else::RedundantElse));\n     store.register_late_pass(|| Box::new(create_dir::CreateDir));"}, {"sha": "81c7f7127703c34c56e889b9ea1c87c856211f77", "filename": "clippy_lints/src/needless_parens_on_range_literal.rs", "status": "modified", "additions": 47, "deletions": 20, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/90c8463d7e213b8d15274db1fa9c413938b5ae02/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c8463d7e213b8d15274db1fa9c413938b5ae02/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literal.rs?ref=90c8463d7e213b8d15274db1fa9c413938b5ae02", "patch": "@@ -17,10 +17,17 @@\n //! ```\n //!\n \n-use clippy_utils::{diagnostics::span_lint_and_then, source::snippet_opt};\n-use rustc_ast::ast::{Expr, ExprKind};\n+use clippy_utils::{\n+    diagnostics::span_lint_and_then,\n+    higher,\n+    source::{snippet, snippet_opt},\n+};\n+\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n-use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_hir::{Expr, ExprKind};\n+\n+use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n@@ -40,27 +47,47 @@ declare_clippy_lint! {\n \n declare_lint_pass!(NeedlessParensOnRangeLiteral => [NEEDLESS_PARENS_ON_RANGE_LITERAL]);\n \n-fn check_for_parens(cx: &EarlyContext<'_>, e: &Expr) {\n-    if_chain! {\n-      if let ExprKind::Paren(ref start_statement) = &e.kind;\n-    if let ExprKind::Lit(ref literal) = start_statement.kind;\n-    then {\n-      span_lint_and_then(cx, NEEDLESS_PARENS_ON_RANGE_LITERAL, e.span,\n-        \"needless parenthesis on range literal can be removed\",\n-        |diag| {\n-                if let Some(suggestion) = snippet_opt(cx, literal.span) {\n-                  diag.span_suggestion(e.span, \"try\", suggestion, Applicability::MachineApplicable);\n-              }\n-        });\n+fn snippet_enclosed_in_parenthesis(snippet: &str) -> bool {\n+    snippet.starts_with('(') && snippet.ends_with(')')\n+}\n+\n+fn check_for_parens(cx: &LateContext<'_>, e: &Expr<'_>, is_start: bool) {\n+    if is_start &&\n+    let ExprKind::Lit(ref literal) = e.kind &&\n+    let ast::LitKind::Float(_sym, ast::LitFloatType::Unsuffixed) = literal.node\n+    {\n+        // don't check floating point literals on the start expression of a range\n+        return;\n     }\n+    if_chain! {\n+        if let ExprKind::Lit(ref literal) = e.kind;\n+        // the indicator that paranthese surround the literal is that span of the expression and the literal differ\n+        if (literal.span.data().hi - literal.span.data().lo) != (e.span.data().hi - e.span.data().lo);\n+        // inspect the source code of the expression for parenthesis\n+        if snippet_enclosed_in_parenthesis(&snippet(cx, e.span, \"\"));\n+        then {\n+            span_lint_and_then(cx, NEEDLESS_PARENS_ON_RANGE_LITERAL, e.span,\n+                \"needless parenthesis on range literal can be removed\",\n+                |diag| {\n+                        if let Some(suggestion) = snippet_opt(cx, literal.span) {\n+                        diag.span_suggestion(e.span, \"try\", suggestion, Applicability::MachineApplicable);\n+                    }\n+                });\n+        }\n     }\n }\n \n-impl EarlyLintPass for NeedlessParensOnRangeLiteral {\n-    fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &Expr) {\n-        if let ExprKind::Range(Some(start), Some(end), _) = &e.kind {\n-            check_for_parens(cx, start);\n-            check_for_parens(cx, end);\n+impl<'tcx> LateLintPass<'tcx> for NeedlessParensOnRangeLiteral {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        // if let higher::Range { start, end, limits } = &e.kind {\n+        if let Some(higher::Range {\n+            start: Some(start),\n+            end: Some(end),\n+            ..\n+        }) = higher::Range::hir(expr)\n+        {\n+            check_for_parens(cx, start, true);\n+            check_for_parens(cx, end, false);\n         }\n     }\n }"}, {"sha": "7b1d09909fcc714c2167e64b383e8305fa31bf2f", "filename": "tests/ui/needless_parens_on_range_literal.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literal.fixed?ref=90c8463d7e213b8d15274db1fa9c413938b5ae02", "patch": "@@ -6,4 +6,7 @@\n \n fn main() {\n     let _ = 'a'..='z';\n+    let _ = 'a'..='z';\n+    let _ = (1.)..2.;\n+    let _ = (1.)..2.;\n }"}, {"sha": "306498c0faf962781e21d7a8ceb142d368ee286c", "filename": "tests/ui/needless_parens_on_range_literal.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literal.rs?ref=90c8463d7e213b8d15274db1fa9c413938b5ae02", "patch": "@@ -6,4 +6,7 @@\n \n fn main() {\n     let _ = ('a')..=('z');\n+    let _ = 'a'..='z';\n+    let _ = (1.)..2.;\n+    let _ = (1.)..(2.);\n }"}, {"sha": "3a646c6b22c688563b405d4e5885b75987f84de7", "filename": "tests/ui/needless_parens_on_range_literal.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c8463d7e213b8d15274db1fa9c413938b5ae02/tests%2Fui%2Fneedless_parens_on_range_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literal.stderr?ref=90c8463d7e213b8d15274db1fa9c413938b5ae02", "patch": "@@ -12,5 +12,11 @@ error: needless parenthesis on range literal can be removed\n LL |     let _ = ('a')..=('z');\n    |                     ^^^^^ help: try: `'z'`\n \n-error: aborting due to 2 previous errors\n+error: needless parenthesis on range literal can be removed\n+  --> $DIR/needless_parens_on_range_literal.rs:11:19\n+   |\n+LL |     let _ = (1.)..(2.);\n+   |                   ^^^^ help: try: `2.`\n+\n+error: aborting due to 3 previous errors\n "}]}