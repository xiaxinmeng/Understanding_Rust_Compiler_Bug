{"sha": "ef6d53521f07caa9c524749116d5fe53e1e8408d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNmQ1MzUyMWYwN2NhYTljNTI0NzQ5MTE2ZDVmZTUzZTFlODQwOGQ=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-05-16T16:06:23Z"}, "committer": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-05-16T20:20:44Z"}, "message": "Shrink ra_parser::Event from 32 bytes to 16 bytes\n\nThis boxes the Error variant with the assumption that it is rarely constructed", "tree": {"sha": "c1123c9cac96fb4af2f0cad960ce37f59b2390f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1123c9cac96fb4af2f0cad960ce37f59b2390f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef6d53521f07caa9c524749116d5fe53e1e8408d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6d53521f07caa9c524749116d5fe53e1e8408d", "html_url": "https://github.com/rust-lang/rust/commit/ef6d53521f07caa9c524749116d5fe53e1e8408d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef6d53521f07caa9c524749116d5fe53e1e8408d/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebaa05a4478096aaf3bc2a48d0d171a287422c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebaa05a4478096aaf3bc2a48d0d171a287422c7c", "html_url": "https://github.com/rust-lang/rust/commit/ebaa05a4478096aaf3bc2a48d0d171a287422c7c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "eeb8ad66bd16b3df4339141b111cbf12c094f47a", "filename": "crates/ra_parser/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_parser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_parser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Flib.rs?ref=ef6d53521f07caa9c524749116d5fe53e1e8408d", "patch": "@@ -25,7 +25,7 @@ pub(crate) use token_set::TokenSet;\n pub use syntax_kind::SyntaxKind;\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct ParseError(pub String);\n+pub struct ParseError(pub Box<String>);\n \n /// `TokenSource` abstracts the source of the tokens parser operates on.\n ///"}, {"sha": "4f59b0a2356fe7a6ee33b7143e703176e1e93be2", "filename": "crates/ra_parser/src/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=ef6d53521f07caa9c524749116d5fe53e1e8408d", "patch": "@@ -192,7 +192,7 @@ impl<'t> Parser<'t> {\n     /// structured errors with spans and notes, like rustc\n     /// does.\n     pub(crate) fn error<T: Into<String>>(&mut self, message: T) {\n-        let msg = ParseError(message.into());\n+        let msg = ParseError(Box::new(message.into()));\n         self.push_event(Event::Error { msg })\n     }\n "}, {"sha": "e566af7e87acc2271a192c8d50b0ee0413817cad", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d53521f07caa9c524749116d5fe53e1e8408d/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=ef6d53521f07caa9c524749116d5fe53e1e8408d", "patch": "@@ -70,6 +70,6 @@ impl SyntaxTreeBuilder {\n     }\n \n     pub fn error(&mut self, error: ra_parser::ParseError, text_pos: TextSize) {\n-        self.errors.push(SyntaxError::new_at_offset(error.0, text_pos))\n+        self.errors.push(SyntaxError::new_at_offset(*error.0, text_pos))\n     }\n }"}]}