{"sha": "7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlM2VlNzdjODNkYzRlOWFmNDcwNDkxMDQ2MjA2YmY0NmQyYTlhN2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-31T10:12:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-31T10:12:41Z"}, "message": "Tweak whitespace", "tree": {"sha": "9d9cbf3b9cb19918e462b395662a14db6039329d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d9cbf3b9cb19918e462b395662a14db6039329d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "html_url": "https://github.com/rust-lang/rust/commit/7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e3ee77c83dc4e9af470491046206bf46d2a9a7e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c6a2eb14a84c3a66972d1a6da429cca1aa8b40a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c6a2eb14a84c3a66972d1a6da429cca1aa8b40a", "html_url": "https://github.com/rust-lang/rust/commit/1c6a2eb14a84c3a66972d1a6da429cca1aa8b40a"}], "stats": {"total": 23, "additions": 2, "deletions": 21}, "files": [{"sha": "803073d550fc18f98a590d129488ca7e3dd25cfd", "filename": "docs/user/generated_features.adoc", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7e3ee77c83dc4e9af470491046206bf46d2a9a7e/docs%2Fuser%2Fgenerated_features.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/7e3ee77c83dc4e9af470491046206bf46d2a9a7e/docs%2Fuser%2Fgenerated_features.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_features.adoc?ref=7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "patch": "@@ -1,7 +1,6 @@\n === Expand Macro Recursively\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/expand_macro.rs[expand_macro.rs]\n \n-\n Shows the full macro expansion of the macro at current cursor.\n \n |===\n@@ -14,7 +13,6 @@ Shows the full macro expansion of the macro at current cursor.\n === Extend Selection\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/extend_selection.rs[extend_selection.rs]\n \n-\n Extends the current selection to the encompassing syntactic construct\n (expression, statement, item, module, etc). It works with multiple cursors.\n \n@@ -28,7 +26,6 @@ Extends the current selection to the encompassing syntactic construct\n === File Structure\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/display/structure.rs[structure.rs]\n \n-\n Provides a tree of the symbols defined in the file. Can be used to\n \n * fuzzy search symbol in a file (super useful)\n@@ -45,7 +42,6 @@ Provides a tree of the symbols defined in the file. Can be used to\n === Go to Definition\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/goto_definition.rs[goto_definition.rs]\n \n-\n Navigates to the definition of an identifier.\n \n |===\n@@ -58,7 +54,6 @@ Navigates to the definition of an identifier.\n === Go to Implementation\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/goto_implementation.rs[goto_implementation.rs]\n \n-\n Navigates to the impl block of structs, enums or traits. Also implemented as a code lens.\n \n |===\n@@ -71,7 +66,6 @@ Navigates to the impl block of structs, enums or traits. Also implemented as a c\n === Go to Type Definition\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/goto_type_definition.rs[goto_type_definition.rs]\n \n-\n Navigates to the type of an identifier.\n \n |===\n@@ -84,15 +78,13 @@ Navigates to the type of an identifier.\n === Hover\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/hover.rs[hover.rs]\n \n-\n Shows additional information, like type of an expression or documentation for definition when \"focusing\" code.\n Focusing is usually hovering with a mouse, but can also be triggered with a shortcut.\n \n \n === Inlay Hints\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/inlay_hints.rs[inlay_hints.rs]\n \n-\n rust-analyzer shows additional information inline with the source code.\n Editors usually render this using read-only virtual text snippets interspersed with code.\n \n@@ -116,7 +108,6 @@ https://github.com/rust-analyzer/rust-analyzer/issues/1623[1], https://github.co\n === Join Lines\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/join_lines.rs[join_lines.rs]\n \n-\n Join selected lines into one, smartly fixing up whitespace, trailing commas, and braces.\n \n |===\n@@ -129,7 +120,6 @@ Join selected lines into one, smartly fixing up whitespace, trailing commas, and\n === Magic Completions\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/completion.rs[completion.rs]\n \n-\n In addition to usual reference completion, rust-analyzer provides some \u2728magic\u2728\n completions as well:\n \n@@ -175,7 +165,6 @@ mod tests {\n === Matching Brace\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/matching_brace.rs[matching_brace.rs]\n \n-\n If the cursor is on any brace (`<>(){}[]`) which is a part of a brace-pair,\n moves cursor to the matching brace. It uses the actual parser to determine\n braces, so it won't confuse generics with comparisons.\n@@ -190,7 +179,6 @@ braces, so it won't confuse generics with comparisons.\n === On Typing Assists\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/typing.rs[typing.rs]\n \n-\n Some features trigger on typing certain characters:\n \n - typing `let =` tries to smartly add `;` if `=` is followed by an existing expression\n@@ -201,7 +189,6 @@ Some features trigger on typing certain characters:\n === Parent Module\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/parent_module.rs[parent_module.rs]\n \n-\n Navigates to the parent module of the current module.\n \n |===\n@@ -214,7 +201,6 @@ Navigates to the parent module of the current module.\n === Run\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/runnables.rs[runnables.rs]\n \n-\n Shows a popup suggesting to run a test/benchmark/binary **at the current cursor\n location**. Super useful for repeatedly running just a single test. Do bind this\n to a shortcut!\n@@ -229,7 +215,6 @@ to a shortcut!\n === Semantic Syntax Highlighting\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/syntax_highlighting.rs[syntax_highlighting.rs]\n \n-\n rust-analyzer highlights the code semantically.\n For example, `bar` in `foo::Bar` might be colored differently depending on whether `Bar` is an enum or a trait.\n rust-analyzer does not specify colors directly, instead it assigns tag (like `struct`) and a set of modifiers (like `declaration`) to each token.\n@@ -242,7 +227,6 @@ We also give special modifier for `mut` and `&mut` local variables.\n === Show Syntax Tree\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/syntax_tree.rs[syntax_tree.rs]\n \n-\n Shows the parse tree of the current file. It exists mostly for debugging\n rust-analyzer itself.\n \n@@ -256,7 +240,6 @@ rust-analyzer itself.\n === Status\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/status.rs[status.rs]\n \n-\n Shows internal statistic about memory usage of rust-analyzer.\n \n |===\n@@ -269,7 +252,6 @@ Shows internal statistic about memory usage of rust-analyzer.\n === Structural Seach and Replace\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/ssr.rs[ssr.rs]\n \n-\n Search and replace with named wildcards that will match any expression.\n The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`.\n A `$<name>:expr` placeholder in the search pattern will match any expression and `$<name>` will reference it in the replacement.\n@@ -295,7 +277,6 @@ String::from((y + 5).foo(z))\n === Workspace Symbol\n **Source:** https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide_db/src/symbol_index.rs[symbol_index.rs]\n \n-\n Uses fuzzy-search to find types, modules and functions by name across your\n project and dependencies. This is **the** most useful feature, which improves code\n navigation tremendously. It mostly works on top of the built-in LSP"}, {"sha": "a6f339e7ba59d6b4ecbc752916a2a87cd2d1234a", "filename": "xtask/src/codegen/gen_feature_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e3ee77c83dc4e9af470491046206bf46d2a9a7e/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e3ee77c83dc4e9af470491046206bf46d2a9a7e/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs?ref=7e3ee77c83dc4e9af470491046206bf46d2a9a7e", "patch": "@@ -10,7 +10,7 @@ use crate::{\n pub fn generate_feature_docs(mode: Mode) -> Result<()> {\n     let features = Feature::collect()?;\n     let contents = features.into_iter().map(|it| it.to_string()).collect::<Vec<_>>().join(\"\\n\\n\");\n-\n+    let contents = contents.trim().to_string() + \"\\n\";\n     let dst = project_root().join(\"docs/user/generated_features.adoc\");\n     codegen::update(&dst, &contents, mode)?;\n     Ok(())\n@@ -81,7 +81,7 @@ impl fmt::Display for Feature {\n             name.to_str().unwrap(),\n         )?;\n \n-        writeln!(f, \"\\n{}\", self.doc)?;\n+        writeln!(f, \"{}\", self.doc)?;\n         Ok(())\n     }\n }"}]}