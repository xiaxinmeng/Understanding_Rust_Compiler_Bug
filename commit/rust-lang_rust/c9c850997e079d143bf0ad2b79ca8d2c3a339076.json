{"sha": "c9c850997e079d143bf0ad2b79ca8d2c3a339076", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Yzg1MDk5N2UwNzlkMTQzYmYwYWQyYjc5Y2E4ZDJjM2EzMzkwNzY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-11T14:31:28Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-11T14:31:28Z"}, "message": "Rollup merge of #32849 - jseyfried:import_resolution_diagnostics, r=eddyb\n\nresolve: import resolution diagnostics\n\nThis improves the diagnostics for failing import resolutions (fixes #32833).\nr? @eddyb", "tree": {"sha": "e4580216ccab5ee029f68e82dc5b6ffdd2ef0c98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4580216ccab5ee029f68e82dc5b6ffdd2ef0c98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c850997e079d143bf0ad2b79ca8d2c3a339076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c850997e079d143bf0ad2b79ca8d2c3a339076", "html_url": "https://github.com/rust-lang/rust/commit/c9c850997e079d143bf0ad2b79ca8d2c3a339076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c850997e079d143bf0ad2b79ca8d2c3a339076/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9989a95fd2cdc1633ac3721a989021e027077521", "url": "https://api.github.com/repos/rust-lang/rust/commits/9989a95fd2cdc1633ac3721a989021e027077521", "html_url": "https://github.com/rust-lang/rust/commit/9989a95fd2cdc1633ac3721a989021e027077521"}, {"sha": "44ddaa2cd53782a3e654395c136a614e0601280f", "url": "https://api.github.com/repos/rust-lang/rust/commits/44ddaa2cd53782a3e654395c136a614e0601280f", "html_url": "https://github.com/rust-lang/rust/commit/44ddaa2cd53782a3e654395c136a614e0601280f"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "f0e834d43032516b0888f8a5bacbc8b1963ae5e5", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=c9c850997e079d143bf0ad2b79ca8d2c3a339076", "patch": "@@ -539,6 +539,7 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n             (&Failed(_), &Failed(_)) => {\n                 let resolutions = target_module.resolutions.borrow();\n                 let names = resolutions.iter().filter_map(|(&(ref name, _), resolution)| {\n+                    if *name == source { return None; } // Never suggest the same name\n                     match *resolution.borrow() {\n                         NameResolution { binding: Some(_), .. } => Some(name),\n                         NameResolution { single_imports: SingleImports::None, .. } => None,\n@@ -549,9 +550,12 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                     Some(name) => format!(\". Did you mean to use `{}`?\", name),\n                     None => \"\".to_owned(),\n                 };\n-                let msg = format!(\"There is no `{}` in `{}`{}\",\n-                                  source,\n-                                  module_to_string(target_module), lev_suggestion);\n+                let module_str = module_to_string(target_module);\n+                let msg = if &module_str == \"???\" {\n+                    format!(\"There is no `{}` in the crate root{}\", source, lev_suggestion)\n+                } else {\n+                    format!(\"There is no `{}` in `{}`{}\", source, module_str, lev_suggestion)\n+                };\n                 return Failed(Some((directive.span, msg)));\n             }\n             _ => (),"}, {"sha": "22261d98a128c98260eaaffaae6ab491ce2638d7", "filename": "src/test/compile-fail/issue-32833.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs?ref=c9c850997e079d143bf0ad2b79ca8d2c3a339076", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use bar::Foo; //~ ERROR There is no `Foo` in `bar` [E0432]\n+mod bar {\n+    use Foo; //~ ERROR There is no `Foo` in the crate root [E0432]\n+}\n+\n+fn main() {}"}, {"sha": "f2384912cdba31c924d5723f55a25a1a82d031dd", "filename": "src/test/compile-fail/use-mod-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c850997e079d143bf0ad2b79ca8d2c3a339076/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs?ref=c9c850997e079d143bf0ad2b79ca8d2c3a339076", "patch": "@@ -10,10 +10,10 @@\n \n mod foo {\n     use self::{self};\n-    //~^ ERROR unresolved import `self`. There is no `self` in `???`\n+    //~^ ERROR unresolved import `self`. There is no `self` in the crate root\n \n     use super::{self};\n-    //~^ ERROR unresolved import `super`. There is no `super` in `???`\n+    //~^ ERROR unresolved import `super`. There is no `super` in the crate root\n }\n \n fn main() {}"}]}