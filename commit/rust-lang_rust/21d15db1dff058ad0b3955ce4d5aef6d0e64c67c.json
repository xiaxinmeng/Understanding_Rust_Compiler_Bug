{"sha": "21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "node_id": "C_kwDOAAsO6NoAKDIxZDE1ZGIxZGZmMDU4YWQwYjM5NTVjZTRkNWFlZjZkMGU2NGM2N2M", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-14T16:40:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-14T16:40:05Z"}, "message": "Rollup merge of #108923 - spastorino:new-rpitit-9, r=compiler-errors\n\nMake fns from other crates with RPITIT work for -Zlower-impl-trait-in-trait-to-assoc-ty\n\nOnly the last two commits are meaningful.\n\nr? `@compiler-errors`", "tree": {"sha": "e22d0a6b3d68f6b3b1e4de6294089ff4e6104f67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e22d0a6b3d68f6b3b1e4de6294089ff4e6104f67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkEKNlCRBK7hj4Ov3rIwAAJA8IADJgv/vMZjV8BIjoZKwuWI4Y\nheyi5VlWVacug9+XVftJaJXQNStYVJj/xy6WlwtyNmAxj5qzSJkJj1p+wvEl1LOI\ndr5lOq2JmesmzW2KRW/1fwy4aTXiUdlfbqKOZnZp9kWlaDTkjGfwlj5HnOCRVdeX\nEqB8YIPkXLOcSDkB3Ax7kULIHm9yeGH0VVlLjKWbUjKNgq2C9Kh28pzuR7GETxxW\nWqrdFjGFlYkVCmBsUwFSrZTRKBrRV0RIen0veDrog7HZobI86CQMNKd9tcqx8lHV\n+jeKa6U480+zzrHkFKxHHwoiSIKs6QrzY/mYQPnICy17ppVOlXlRn//uGfMLcaA=\n=6BnR\n-----END PGP SIGNATURE-----\n", "payload": "tree e22d0a6b3d68f6b3b1e4de6294089ff4e6104f67\nparent 6e3a3de7789d4c5bd61bd5922b451893af9adc50\nparent a4e40370d018bf2a5c5a9713a7532638838f740d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678812005 +0100\ncommitter GitHub <noreply@github.com> 1678812005 +0100\n\nRollup merge of #108923 - spastorino:new-rpitit-9, r=compiler-errors\n\nMake fns from other crates with RPITIT work for -Zlower-impl-trait-in-trait-to-assoc-ty\n\nOnly the last two commits are meaningful.\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "html_url": "https://github.com/rust-lang/rust/commit/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e3a3de7789d4c5bd61bd5922b451893af9adc50", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e3a3de7789d4c5bd61bd5922b451893af9adc50", "html_url": "https://github.com/rust-lang/rust/commit/6e3a3de7789d4c5bd61bd5922b451893af9adc50"}, {"sha": "a4e40370d018bf2a5c5a9713a7532638838f740d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e40370d018bf2a5c5a9713a7532638838f740d", "html_url": "https://github.com/rust-lang/rust/commit/a4e40370d018bf2a5c5a9713a7532638838f740d"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "3c4fc9cb530a453f620ac042ce7274884514cbfc", "filename": "compiler/rustc_hir/src/definitions.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs?ref=21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "patch": "@@ -404,8 +404,12 @@ impl DefPathData {\n         match *self {\n             TypeNs(name) | ValueNs(name) | MacroNs(name) | LifetimeNs(name) => Some(name),\n \n+            // We use this name when collecting `ModChild`s.\n+            // FIXME this could probably be removed with some refactoring to the name resolver.\n+            ImplTraitAssocTy => Some(kw::Empty),\n+\n             Impl | ForeignMod | CrateRoot | Use | GlobalAsm | ClosureExpr | Ctor | AnonConst\n-            | ImplTrait | ImplTraitAssocTy => None,\n+            | ImplTrait => None,\n         }\n     }\n "}, {"sha": "59e2e57e6c25a2d6ebf3c0e57247224c15f5b670", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "patch": "@@ -1356,13 +1356,14 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         debug!(\"EncodeContext::encode_info_for_impl_item({:?})\", def_id);\n         let tcx = self.tcx;\n \n-        let ast_item = self.tcx.hir().expect_impl_item(def_id.expect_local());\n-        self.tables.impl_defaultness.set_some(def_id.index, ast_item.defaultness);\n+        let defaultness = self.tcx.impl_defaultness(def_id.expect_local());\n+        self.tables.impl_defaultness.set_some(def_id.index, defaultness);\n         let impl_item = self.tcx.associated_item(def_id);\n         self.tables.assoc_container.set_some(def_id.index, impl_item.container);\n \n         match impl_item.kind {\n             ty::AssocKind::Fn => {\n+                let ast_item = self.tcx.hir().expect_impl_item(def_id.expect_local());\n                 let hir::ImplItemKind::Fn(ref sig, body) = ast_item.kind else { bug!() };\n                 self.tables.asyncness.set_some(def_id.index, sig.header.asyncness);\n                 record_array!(self.tables.fn_arg_names[def_id] <- self.tcx.hir().body_param_names(body));"}, {"sha": "a28161245384c033812c60d899001a80e5bdae14", "filename": "compiler/rustc_ty_utils/src/assoc.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs?ref=21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "patch": "@@ -328,6 +328,9 @@ fn impl_associated_item_for_impl_trait_in_trait(\n     // `opt_local_def_id_to_hir_id` with `None`.\n     impl_assoc_ty.opt_local_def_id_to_hir_id(None);\n \n+    // Copy span of the opaque.\n+    impl_assoc_ty.def_ident_span(Some(span));\n+\n     impl_assoc_ty.associated_item(ty::AssocItem {\n         name: kw::Empty,\n         kind: ty::AssocKind::Type,\n@@ -342,6 +345,9 @@ fn impl_associated_item_for_impl_trait_in_trait(\n     // extra predicates to assume.\n     impl_assoc_ty.param_env(tcx.param_env(impl_fn_def_id));\n \n+    // Copy visility of the containing function.\n+    impl_assoc_ty.visibility(tcx.visibility(impl_fn_def_id));\n+\n     // Copy impl_defaultness of the containing function.\n     impl_assoc_ty.impl_defaultness(tcx.impl_defaultness(impl_fn_def_id));\n "}, {"sha": "df77372aabdfcf51bcda7bf479eb8fd62c3bb7f8", "filename": "tests/ui/impl-trait/in-trait/foreign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d15db1dff058ad0b3955ce4d5aef6d0e64c67c/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs?ref=21d15db1dff058ad0b3955ce4d5aef6d0e64c67c", "patch": "@@ -1,5 +1,7 @@\n // check-pass\n // aux-build: rpitit.rs\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n extern crate rpitit;\n "}]}