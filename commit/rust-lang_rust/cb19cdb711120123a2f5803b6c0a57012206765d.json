{"sha": "cb19cdb711120123a2f5803b6c0a57012206765d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMTljZGI3MTExMjAxMjNhMmY1ODAzYjZjMGE1NzAxMjIwNjc2NWQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-18T20:35:50Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-27T14:33:23Z"}, "message": "name `ParamInTyOfConstArg`", "tree": {"sha": "d2a201d823ee5fc7a4527179ebbe6fac86fedb59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a201d823ee5fc7a4527179ebbe6fac86fedb59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb19cdb711120123a2f5803b6c0a57012206765d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb19cdb711120123a2f5803b6c0a57012206765d", "html_url": "https://github.com/rust-lang/rust/commit/cb19cdb711120123a2f5803b6c0a57012206765d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb19cdb711120123a2f5803b6c0a57012206765d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52d2c7ac948d6abdc18eb9e05a53d03ddcaffd98", "url": "https://api.github.com/repos/rust-lang/rust/commits/52d2c7ac948d6abdc18eb9e05a53d03ddcaffd98", "html_url": "https://github.com/rust-lang/rust/commit/52d2c7ac948d6abdc18eb9e05a53d03ddcaffd98"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "c512703b3c6b008e4b1ab72c7b4276881f1a0a90", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb19cdb711120123a2f5803b6c0a57012206765d/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb19cdb711120123a2f5803b6c0a57012206765d/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=cb19cdb711120123a2f5803b6c0a57012206765d", "patch": "@@ -442,7 +442,7 @@ impl<'a> Resolver<'a> {\n                 );\n                 err\n             }\n-            ResolutionError::ParamInTyOfConstArg(name) => {\n+            ResolutionError::ParamInTyOfConstParam(name) => {\n                 let mut err = struct_span_err!(\n                     self.session,\n                     span,"}, {"sha": "3b049c6bb4add279a46e53bfcd24c84bf060abcf", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cb19cdb711120123a2f5803b6c0a57012206765d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb19cdb711120123a2f5803b6c0a57012206765d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=cb19cdb711120123a2f5803b6c0a57012206765d", "patch": "@@ -215,7 +215,7 @@ enum ResolutionError<'a> {\n     /// Error E0128: type parameters with a default cannot use forward-declared identifiers.\n     ForwardDeclaredTyParam, // FIXME(const_generics:defaults)\n     /// ERROR E0770: the type of const parameters must not depend on other generic parameters.\n-    ParamInTyOfConstArg(Symbol),\n+    ParamInTyOfConstParam(Symbol),\n     /// Error E0735: type parameters with a default cannot use `Self`\n     SelfInTyParamDefault,\n     /// Error E0767: use of unreachable label\n@@ -2514,7 +2514,7 @@ impl<'a> Resolver<'a> {\n                         }\n                         ConstParamTyRibKind => {\n                             if record_used {\n-                                self.report_error(span, ParamInTyOfConstArg(rib_ident.name));\n+                                self.report_error(span, ParamInTyOfConstParam(rib_ident.name));\n                             }\n                             return Res::Err;\n                         }\n@@ -2545,7 +2545,7 @@ impl<'a> Resolver<'a> {\n                             if record_used {\n                                 self.report_error(\n                                     span,\n-                                    ResolutionError::ParamInTyOfConstArg(rib_ident.name),\n+                                    ResolutionError::ParamInTyOfConstParam(rib_ident.name),\n                                 );\n                             }\n                             return Res::Err;\n@@ -2587,7 +2587,7 @@ impl<'a> Resolver<'a> {\n                             if record_used {\n                                 self.report_error(\n                                     span,\n-                                    ResolutionError::ParamInTyOfConstArg(rib_ident.name),\n+                                    ResolutionError::ParamInTyOfConstParam(rib_ident.name),\n                                 );\n                             }\n                             return Res::Err;"}]}