{"sha": "3f980beb3eeb545ff9de7f3976beb7872b4e2ae6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmOTgwYmViM2VlYjU0NWZmOWRlN2YzOTc2YmViNzg3MmI0ZTJhZTY=", "commit": {"author": {"name": "Diggory Hardy", "email": "git@dhardy.name", "date": "2017-05-16T17:54:41Z"}, "committer": {"name": "Diggory Hardy", "email": "git@dhardy.name", "date": "2017-05-16T17:54:41Z"}, "message": "loop_break_value: fix tests (but ignore one expected not to compile)", "tree": {"sha": "f5699b4292d57a9a91aaa418ef62c40c8c3e1cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5699b4292d57a9a91aaa418ef62c40c8c3e1cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6", "html_url": "https://github.com/rust-lang/rust/commit/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6/comments", "author": {"login": "dhardy", "id": 134893, "node_id": "MDQ6VXNlcjEzNDg5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhardy", "html_url": "https://github.com/dhardy", "followers_url": "https://api.github.com/users/dhardy/followers", "following_url": "https://api.github.com/users/dhardy/following{/other_user}", "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions", "organizations_url": "https://api.github.com/users/dhardy/orgs", "repos_url": "https://api.github.com/users/dhardy/repos", "events_url": "https://api.github.com/users/dhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/dhardy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhardy", "id": 134893, "node_id": "MDQ6VXNlcjEzNDg5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhardy", "html_url": "https://github.com/dhardy", "followers_url": "https://api.github.com/users/dhardy/followers", "following_url": "https://api.github.com/users/dhardy/following{/other_user}", "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions", "organizations_url": "https://api.github.com/users/dhardy/orgs", "repos_url": "https://api.github.com/users/dhardy/repos", "events_url": "https://api.github.com/users/dhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/dhardy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7488ff5c44f8e7515aa68e43011784de0893a6a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7488ff5c44f8e7515aa68e43011784de0893a6a6", "html_url": "https://github.com/rust-lang/rust/commit/7488ff5c44f8e7515aa68e43011784de0893a6a6"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "9e36ea7b1a76291c44229b707145c6d1b4a2cd11", "filename": "src/doc/unstable-book/src/language-features/loop-break-value.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "raw_url": "https://github.com/rust-lang/rust/raw/3f980beb3eeb545ff9de7f3976beb7872b4e2ae6/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md?ref=3f980beb3eeb545ff9de7f3976beb7872b4e2ae6", "patch": "@@ -15,6 +15,8 @@ never exits.\n A `loop` can instead evaluate to a useful value via *break with value*:\n \n ```rust\n+#![feature(loop_break_value)]\n+\n // Find the first square number over 1000:\n let mut n = 1;\n let square = loop {\n@@ -28,6 +30,8 @@ let square = loop {\n The evaluation type may be specified externally:\n \n ```rust\n+#![feature(loop_break_value)]\n+\n // Declare that value returned is unsigned 64-bit:\n let n: u64 = loop {\n     break 1;\n@@ -37,9 +41,11 @@ let n: u64 = loop {\n It is an error if types do not agree, either between a \"break\" value and an external requirement,\n or between multiple \"break\" values:\n \n-```rust\n+```no_compile\n+#![feature(loop_break_value)]\n+\n loop {\n-    if random_bool() {\n+    if true {\n         break 1u32;\n     } else {\n         break 0u8;  // error: types do not agree\n@@ -69,6 +75,8 @@ When no value is given, the value `()` is assumed, thus `break;` is equivalent t\n Using a label allows returning a value from an inner loop:\n \n ```rust\n+#![feature(loop_break_value)]\n+\n let result = 'outer: loop {\n     for n in 1..10 {\n         if n > 4 {"}]}