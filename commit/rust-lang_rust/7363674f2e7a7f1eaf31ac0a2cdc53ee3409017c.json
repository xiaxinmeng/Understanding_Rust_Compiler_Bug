{"sha": "7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNjM2NzRmMmU3YTdmMWVhZjMxYWMwYTJjZGM1M2VlMzQwOTAxN2M=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-08T13:38:40Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-08T13:40:50Z"}, "message": "Fix ICE when variant is used as a part of associated type", "tree": {"sha": "d454389cc132050490b0704f3c035681e9f20d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d454389cc132050490b0704f3c035681e9f20d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "html_url": "https://github.com/rust-lang/rust/commit/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1", "html_url": "https://github.com/rust-lang/rust/commit/7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "74df14e881d7e43450cb33f2a4a777e09a8b706b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "patch": "@@ -2410,13 +2410,15 @@ impl<'a> Resolver<'a> {\n \n             match binding {\n                 Ok(binding) => {\n+                    let def = binding.def();\n+                    let maybe_assoc = opt_ns != Some(MacroNS) && PathSource::Type.is_expected(def);\n                     if let Some(next_module) = binding.module() {\n                         module = Some(next_module);\n-                    } else if binding.def() == Def::Err {\n+                    } else if def == Def::Err {\n                         return PathResult::NonModule(err_path_resolution());\n-                    } else if opt_ns.is_some() && !(opt_ns == Some(MacroNS) && !is_last) {\n+                    } else if opt_ns.is_some() && (is_last || maybe_assoc) {\n                         return PathResult::NonModule(PathResolution {\n-                            base_def: binding.def(),\n+                            base_def: def,\n                             depth: path.len() - i - 1,\n                         });\n                     } else {"}, {"sha": "869eed5a8d774946f68a020f370f2552ce550130", "filename": "src/test/compile-fail/resolve-variant-assoc-item.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Ftest%2Fcompile-fail%2Fresolve-variant-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Ftest%2Fcompile-fail%2Fresolve-variant-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-variant-assoc-item.rs?ref=7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum E { V }\n+use E::V;\n+\n+fn main() {\n+    E::V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n+    V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n+}"}, {"sha": "7e2c97711801d25befb450e3137af9d7c3d11a57", "filename": "src/test/compile-fail/ufcs-partially-resolved.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Ftest%2Fcompile-fail%2Fufcs-partially-resolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c/src%2Ftest%2Fcompile-fail%2Fufcs-partially-resolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fufcs-partially-resolved.rs?ref=7363674f2e7a7f1eaf31ac0a2cdc53ee3409017c", "patch": "@@ -55,9 +55,9 @@ fn main() {\n     <u8 as E::N>::NN; //~ ERROR unresolved method or associated constant `E::N::NN`\n     <u8 as A::N>::NN; //~ ERROR unresolved method or associated constant `A::N::NN`\n     let _: <u8 as Tr::Y>::NN; //~ ERROR unresolved associated type `Tr::Y::NN`\n-    let _: <u8 as E::Y>::NN; //~ ERROR unresolved associated type `E::Y::NN`\n+    let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n     <u8 as Tr::Y>::NN; //~ ERROR unresolved method or associated constant `Tr::Y::NN`\n-    <u8 as E::Y>::NN; //~ ERROR unresolved method or associated constant `E::Y::NN`\n+    <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n \n     let _: <u8 as Dr>::Z; //~ ERROR expected associated type, found method `Dr::Z`\n     <u8 as Dr>::X; //~ ERROR expected method or associated constant, found associated type `Dr::X`"}]}