{"sha": "0760803c06ff4128405ea22e390625938a15bcb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NjA4MDNjMDZmZjQxMjg0MDVlYTIyZTM5MDYyNTkzOGExNWJjYjI=", "commit": {"author": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-03-16T13:45:37Z"}, "committer": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-03-16T13:45:37Z"}, "message": "rather than removing const_forget_box, stick an attribute on it and explain it cant be called in ctfe yet", "tree": {"sha": "afdd33b64e0fba2bd0293dc11316209ac5f150df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdd33b64e0fba2bd0293dc11316209ac5f150df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0760803c06ff4128405ea22e390625938a15bcb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0760803c06ff4128405ea22e390625938a15bcb2", "html_url": "https://github.com/rust-lang/rust/commit/0760803c06ff4128405ea22e390625938a15bcb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0760803c06ff4128405ea22e390625938a15bcb2/comments", "author": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcc23217b7364056d5a83aaa058993ccd83b6e78", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc23217b7364056d5a83aaa058993ccd83b6e78", "html_url": "https://github.com/rust-lang/rust/commit/dcc23217b7364056d5a83aaa058993ccd83b6e78"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ab6f08fb3ada412450bd29157c4c6948ad9f1748", "filename": "src/libcore/tests/mem.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0760803c06ff4128405ea22e390625938a15bcb2/src%2Flibcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0760803c06ff4128405ea22e390625938a15bcb2/src%2Flibcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fmem.rs?ref=0760803c06ff4128405ea22e390625938a15bcb2", "patch": "@@ -134,4 +134,16 @@ fn test_discriminant_send_sync() {\n fn test_const_forget() {\n     const _: () = forget(0i32);\n     const _: () = forget(Vec::<Vec<Box<i32>>>::new());\n+\n+    // Writing this function signature without const-forget\n+    // triggers compiler errors:\n+    // 1) That we use a non-const fn inside a const fn\n+    // 2) without the forget, it complains about the destructor of Box\n+    //\n+    // FIXME: this method cannot be called in const-eval yet, as Box isn't\n+    // const constructable\n+    #[allow(unused)]\n+    const fn const_forget_box<T: ?Sized>(x: Box<T>) {\n+        forget(x);\n+    }\n }"}]}