{"sha": "477ce585d420735ef536c3dd1417911fbe7e9a70", "node_id": "C_kwDOAAsO6NoAKDQ3N2NlNTg1ZDQyMDczNWVmNTM2YzNkZDE0MTc5MTFmYmU3ZTlhNzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-23T07:35:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-23T07:35:36Z"}, "message": "Rollup merge of #109506 - BoxyUwU:debugable_bound_var_printing, r=compiler-errors\n\nmake param bound vars visibly bound vars with -Zverbose\n\nI was trying to debug some type/const bound var stuff and it was shockingly tricky due to the fact that even with `-Zverbose` enabled the `T` in `for<T> T: Trait` prints as `T` making it seem like its `TyKind::Param` when it is infact `TyKind::Bound`. This PR \"fixes\" this when `-Zverbose` is set to allow rendering it as `^T` or `^1_T` depending on binder depth.\n\nr? ```@compiler-errors```", "tree": {"sha": "05fdc6e5771d72841f82b8ce3ba68e94e1ebd309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05fdc6e5771d72841f82b8ce3ba68e94e1ebd309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477ce585d420735ef536c3dd1417911fbe7e9a70", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkHAFICRBK7hj4Ov3rIwAAs0YIAEZbZ1xLJxtBL1vJg78TQ8Yu\nFuON3tz+ImrAtVQAuslfRAFFOzYgUaIGJB5sOBg67WdXduszlhzL/XWoH/P6jCgf\n9RXsE5ubGWYB1JRs5+OLMOLRmc9Rn96qpeU5O6IydhyHsBOCcGknf9ivltDgpViV\n39K4K0GPQr7ktSMQ3Ivs6RDh6OhjF5oWImaen53QDMW6Rtbmf2BHA2EiSe0i+AfN\nygkBiF75Wu4RKY7cPAprAnKUd70K/no459uE//7M1jPvfCKwR2aJlV2FTnnIJ2LH\nffbv+sJtCe6nizQJhC/nKjqDV2T5/Wb1w9zkmFxnywR6RtlXoP6WMScqkfLnptc=\n=k7rs\n-----END PGP SIGNATURE-----\n", "payload": "tree 05fdc6e5771d72841f82b8ce3ba68e94e1ebd309\nparent e44564819c949b98d6dabfb59fe41f4124bce3ab\nparent 3f7aeb30ae966bf7a73735169b4243727f5c456b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679556936 +0100\ncommitter GitHub <noreply@github.com> 1679556936 +0100\n\nRollup merge of #109506 - BoxyUwU:debugable_bound_var_printing, r=compiler-errors\n\nmake param bound vars visibly bound vars with -Zverbose\n\nI was trying to debug some type/const bound var stuff and it was shockingly tricky due to the fact that even with `-Zverbose` enabled the `T` in `for<T> T: Trait` prints as `T` making it seem like its `TyKind::Param` when it is infact `TyKind::Bound`. This PR \"fixes\" this when `-Zverbose` is set to allow rendering it as `^T` or `^1_T` depending on binder depth.\n\nr? ```@compiler-errors```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477ce585d420735ef536c3dd1417911fbe7e9a70", "html_url": "https://github.com/rust-lang/rust/commit/477ce585d420735ef536c3dd1417911fbe7e9a70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477ce585d420735ef536c3dd1417911fbe7e9a70/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e44564819c949b98d6dabfb59fe41f4124bce3ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/e44564819c949b98d6dabfb59fe41f4124bce3ab", "html_url": "https://github.com/rust-lang/rust/commit/e44564819c949b98d6dabfb59fe41f4124bce3ab"}, {"sha": "3f7aeb30ae966bf7a73735169b4243727f5c456b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7aeb30ae966bf7a73735169b4243727f5c456b", "html_url": "https://github.com/rust-lang/rust/commit/3f7aeb30ae966bf7a73735169b4243727f5c456b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "de4c703107e1405f8aa05594e2d5733e6ec06943", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/477ce585d420735ef536c3dd1417911fbe7e9a70/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477ce585d420735ef536c3dd1417911fbe7e9a70/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=477ce585d420735ef536c3dd1417911fbe7e9a70", "patch": "@@ -704,7 +704,11 @@ pub trait PrettyPrinter<'tcx>:\n                 ty::BoundTyKind::Anon(bv) => {\n                     self.pretty_print_bound_var(debruijn, ty::BoundVar::from_u32(bv))?\n                 }\n-                ty::BoundTyKind::Param(_, s) => p!(write(\"{}\", s)),\n+                ty::BoundTyKind::Param(_, s) => match self.should_print_verbose() {\n+                    true if debruijn == ty::INNERMOST => p!(write(\"^{}\", s)),\n+                    true => p!(write(\"^{}_{}\", debruijn.index(), s)),\n+                    false => p!(write(\"{}\", s)),\n+                },\n             },\n             ty::Adt(def, substs) => {\n                 p!(print_def_path(def.did(), substs));"}]}