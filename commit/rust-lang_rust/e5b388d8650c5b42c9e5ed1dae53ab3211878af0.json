{"sha": "e5b388d8650c5b42c9e5ed1dae53ab3211878af0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YjM4OGQ4NjUwYzViNDJjOWU1ZWQxZGFlNTNhYjMyMTE4NzhhZjA=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-10-05T06:02:44Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-10-05T06:04:14Z"}, "message": "Fix util/export.py to include lints from methods", "tree": {"sha": "fb001f4086929151f49798817fee1a491d12c9e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb001f4086929151f49798817fee1a491d12c9e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b388d8650c5b42c9e5ed1dae53ab3211878af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b388d8650c5b42c9e5ed1dae53ab3211878af0", "html_url": "https://github.com/rust-lang/rust/commit/e5b388d8650c5b42c9e5ed1dae53ab3211878af0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b388d8650c5b42c9e5ed1dae53ab3211878af0/comments", "author": null, "committer": null, "parents": [{"sha": "c47b9489ab4f2124e2e93a3b1ec8a2eeafe54cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c47b9489ab4f2124e2e93a3b1ec8a2eeafe54cf4", "html_url": "https://github.com/rust-lang/rust/commit/c47b9489ab4f2124e2e93a3b1ec8a2eeafe54cf4"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "1c49ab770d5e3e8175eecd2530c65d772f092a4d", "filename": "util/lintlib.py", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5b388d8650c5b42c9e5ed1dae53ab3211878af0/util%2Flintlib.py", "raw_url": "https://github.com/rust-lang/rust/raw/e5b388d8650c5b42c9e5ed1dae53ab3211878af0/util%2Flintlib.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Flintlib.py?ref=e5b388d8650c5b42c9e5ed1dae53ab3211878af0", "patch": "@@ -72,10 +72,13 @@ def parse_lints(lints, filepath):\n                             g = group_re.search(line)\n                             if g:\n                                 group = g.group(1).lower()\n-                                level = lint_levels[group]\n+                                level = lint_levels.get(group, None)\n                                 break\n                             line = next(fp)\n \n+                    if level is None:\n+                        continue\n+\n                     log.info(\"found %s with level %s in %s\",\n                              name, level, filepath)\n                     lints.append(Lint(name, level, last_comment, filepath, group))\n@@ -103,9 +106,11 @@ def parse_configs(path):\n \n def parse_all(path=\"clippy_lints/src\"):\n     lints = []\n-    for filename in os.listdir(path):\n-        if filename.endswith(\".rs\"):\n-            parse_lints(lints, os.path.join(path, filename))\n+    for root, dirs, files in os.walk(path):\n+        for fn in files:\n+            if fn.endswith('.rs'):\n+                parse_lints(lints, os.path.join(root, fn))\n+\n     log.info(\"got %s lints\", len(lints))\n \n     configs = parse_configs(path)"}]}