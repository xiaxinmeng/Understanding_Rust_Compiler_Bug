{"sha": "f43c02236d5c5bcf7c2cad98070ca9164cebfe54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0M2MwMjIzNmQ1YzViY2Y3YzJjYWQ5ODA3MGNhOTE2NGNlYmZlNTQ=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-01-24T20:04:18Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-03-06T10:29:53Z"}, "message": "Instruct LLVM that binary_search_by returns a valid index", "tree": {"sha": "2535b40fdad6a568b895a97db030b7e0fa8a8afb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2535b40fdad6a568b895a97db030b7e0fa8a8afb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f43c02236d5c5bcf7c2cad98070ca9164cebfe54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f43c02236d5c5bcf7c2cad98070ca9164cebfe54", "html_url": "https://github.com/rust-lang/rust/commit/f43c02236d5c5bcf7c2cad98070ca9164cebfe54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f43c02236d5c5bcf7c2cad98070ca9164cebfe54/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51748a8fc77283914d4135f31b5966a407208187", "url": "https://api.github.com/repos/rust-lang/rust/commits/51748a8fc77283914d4135f31b5966a407208187", "html_url": "https://github.com/rust-lang/rust/commit/51748a8fc77283914d4135f31b5966a407208187"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0aaccaed41667733f7ab61739517f20994b37411", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f43c02236d5c5bcf7c2cad98070ca9164cebfe54/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43c02236d5c5bcf7c2cad98070ca9164cebfe54/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=f43c02236d5c5bcf7c2cad98070ca9164cebfe54", "patch": "@@ -2204,6 +2204,8 @@ impl<T> [T] {\n             } else if cmp == Greater {\n                 right = mid;\n             } else {\n+                // SAFETY: same as the `get_unchecked` above\n+                unsafe { crate::intrinsics::assume(mid < self.len()) };\n                 return Ok(mid);\n             }\n "}]}