{"sha": "db162df264a222021dbc7f1f93af94029f3948d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTYyZGYyNjRhMjIyMDIxZGJjN2YxZjkzYWY5NDAyOWYzOTQ4ZDk=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-26T16:41:44Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-26T16:46:40Z"}, "message": "Remove deps on tt_mbe", "tree": {"sha": "86f91e30f85c2c4f5faa5054b84265ddb64636d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f91e30f85c2c4f5faa5054b84265ddb64636d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db162df264a222021dbc7f1f93af94029f3948d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db162df264a222021dbc7f1f93af94029f3948d9", "html_url": "https://github.com/rust-lang/rust/commit/db162df264a222021dbc7f1f93af94029f3948d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db162df264a222021dbc7f1f93af94029f3948d9/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e68d0caf6e813a19a8d434fb650574b73dbc0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e68d0caf6e813a19a8d434fb650574b73dbc0a", "html_url": "https://github.com/rust-lang/rust/commit/72e68d0caf6e813a19a8d434fb650574b73dbc0a"}], "stats": {"total": 107, "additions": 58, "deletions": 49}, "files": [{"sha": "b9f58a07425003898a13d07b6e1770783435a1b3", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -926,9 +926,9 @@ name = \"ra_db\"\n version = \"0.1.0\"\n dependencies = [\n  \"ra_cfg\",\n- \"ra_proc_macro\",\n  \"ra_prof\",\n  \"ra_syntax\",\n+ \"ra_tt\",\n  \"relative-path\",\n  \"rustc-hash\",\n  \"salsa\",\n@@ -1086,7 +1086,6 @@ dependencies = [\n name = \"ra_proc_macro\"\n version = \"0.1.0\"\n dependencies = [\n- \"ra_mbe\",\n  \"ra_tt\",\n ]\n "}, {"sha": "8ab409158c43131d5df39dc348476cb8bd7204a8", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -15,5 +15,5 @@ rustc-hash = \"1.1.0\"\n ra_syntax = { path = \"../ra_syntax\" }\n ra_cfg = { path = \"../ra_cfg\" }\n ra_prof = { path = \"../ra_prof\" }\n-ra_proc_macro = { path = \"../ra_proc_macro\" }\n+ra_tt = { path = \"../ra_tt\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "5ddce98c650efb1fc261f961b75c68feb89acf93", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -10,6 +10,7 @@ use std::{\n     fmt, ops,\n     path::{Path, PathBuf},\n     str::FromStr,\n+    sync::Arc,\n };\n \n use ra_cfg::CfgOptions;\n@@ -19,7 +20,7 @@ use rustc_hash::FxHashSet;\n \n use crate::{RelativePath, RelativePathBuf};\n use fmt::Display;\n-use ra_proc_macro::ProcMacro;\n+use ra_tt::TokenExpander;\n \n /// `FileId` is an integer which uniquely identifies a file. File paths are\n /// messy and system-dependent, so most of the code should work directly with\n@@ -117,7 +118,20 @@ impl Display for CrateName {\n }\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct ProcMacroId(pub usize);\n+pub struct ProcMacroId(pub u32);\n+\n+#[derive(Debug, Clone)]\n+pub struct ProcMacro {\n+    pub name: SmolStr,\n+    pub expander: Arc<dyn TokenExpander>,\n+}\n+\n+impl Eq for ProcMacro {}\n+impl PartialEq for ProcMacro {\n+    fn eq(&self, other: &ProcMacro) -> bool {\n+        self.name == other.name && Arc::ptr_eq(&self.expander, &other.expander)\n+    }\n+}\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct CrateData {\n@@ -171,8 +185,11 @@ impl CrateGraph {\n         cfg_options: CfgOptions,\n         env: Env,\n         extern_source: ExternSource,\n-        proc_macro: Vec<ProcMacro>,\n+        proc_macro: Vec<(SmolStr, Arc<dyn ra_tt::TokenExpander>)>,\n     ) -> CrateId {\n+        let proc_macro =\n+            proc_macro.into_iter().map(|(name, it)| ProcMacro { name, expander: it }).collect();\n+\n         let data = CrateData {\n             root_file_id: file_id,\n             edition,"}, {"sha": "a06f59c140d7b23ea5dce62849ebbbb97f5468dd", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -15,7 +15,6 @@ pub use crate::{\n         FileId, ProcMacroId, SourceRoot, SourceRootId,\n     },\n };\n-pub use ra_proc_macro::ProcMacro;\n pub use relative_path::{RelativePath, RelativePathBuf};\n pub use salsa;\n "}, {"sha": "8fe3f8617fbd13e0b1febeb1767be929b137f4bd", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -12,7 +12,7 @@ use hir_expand::{\n };\n use ra_cfg::CfgOptions;\n use ra_db::{CrateId, FileId, ProcMacroId};\n-use ra_syntax::{ast, SmolStr};\n+use ra_syntax::ast;\n use rustc_hash::FxHashMap;\n use test_utils::tested_by;\n \n@@ -59,8 +59,8 @@ pub(super) fn collect_defs(db: &dyn DefDatabase, mut def_map: CrateDefMap) -> Cr\n         .enumerate()\n         .map(|(idx, it)| {\n             // FIXME: a hacky way to create a Name from string.\n-            let name = tt::Ident { text: SmolStr::new(&it.name()), id: tt::TokenId::unspecified() };\n-            (name.as_name(), ProcMacroExpander::new(def_map.krate, ProcMacroId(idx)))\n+            let name = tt::Ident { text: it.name.clone(), id: tt::TokenId::unspecified() };\n+            (name.as_name(), ProcMacroExpander::new(def_map.krate, ProcMacroId(idx as u32)))\n         })\n         .collect();\n "}, {"sha": "4d270e0def6cd44cf090ecc1f09bd07808b641ba", "filename": "crates/ra_hir_expand/src/proc_macro.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_hir_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_hir_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fproc_macro.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -23,9 +23,10 @@ impl ProcMacroExpander {\n         let krate_graph = db.crate_graph();\n         let proc_macro = krate_graph[self.krate]\n             .proc_macro\n-            .get(self.proc_macro_id.0)\n+            .get(self.proc_macro_id.0 as usize)\n             .clone()\n             .ok_or_else(|| mbe::ExpandError::ConversionError)?;\n-        proc_macro.custom_derive(tt)\n+\n+        proc_macro.expander.expand(&tt, None).map_err(mbe::ExpandError::from)\n     }\n }"}, {"sha": "535b7daa07a61f018960bc7e63da71ed4e87edfe", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -28,6 +28,13 @@ pub enum ExpandError {\n     BindingError(String),\n     ConversionError,\n     InvalidRepeat,\n+    ProcMacroError(tt::ExpansionError),\n+}\n+\n+impl From<tt::ExpansionError> for ExpandError {\n+    fn from(it: tt::ExpansionError) -> Self {\n+        ExpandError::ProcMacroError(it)\n+    }\n }\n \n pub use crate::syntax_bridge::{"}, {"sha": "bc2c37296d16e632948edc774d98a03497488014", "filename": "crates/ra_proc_macro/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_proc_macro%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_proc_macro%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2FCargo.toml?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -10,4 +10,3 @@ doctest = false\n \n [dependencies]\n ra_tt = { path = \"../ra_tt\" }\n-ra_mbe = { path = \"../ra_mbe\" }\n\\ No newline at end of file"}, {"sha": "5e21dd4872576b7f586fc17afc981605219123cb", "filename": "crates/ra_proc_macro/src/lib.rs", "status": "modified", "additions": 10, "deletions": 34, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Flib.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -5,56 +5,29 @@\n //! is used to provide basic infrastructure  for communication between two\n //! processes: Client (RA itself), Server (the external program)\n \n-use ra_mbe::ExpandError;\n-use ra_tt::Subtree;\n+use ra_tt::{SmolStr, Subtree};\n use std::{\n     path::{Path, PathBuf},\n     sync::Arc,\n };\n \n-trait ProcMacroExpander: std::fmt::Debug + Send + Sync + std::panic::RefUnwindSafe {\n-    fn custom_derive(&self, subtree: &Subtree, derive_name: &str) -> Result<Subtree, ExpandError>;\n-}\n-\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct ProcMacroProcessExpander {\n     process: Arc<ProcMacroProcessSrv>,\n+    name: SmolStr,\n }\n \n-impl ProcMacroExpander for ProcMacroProcessExpander {\n-    fn custom_derive(\n+impl ra_tt::TokenExpander for ProcMacroProcessExpander {\n+    fn expand(\n         &self,\n         _subtree: &Subtree,\n-        _derive_name: &str,\n-    ) -> Result<Subtree, ExpandError> {\n+        _attr: Option<&Subtree>,\n+    ) -> Result<Subtree, ra_tt::ExpansionError> {\n         // FIXME: do nothing for now\n         Ok(Subtree::default())\n     }\n }\n \n-#[derive(Debug, Clone)]\n-pub struct ProcMacro {\n-    expander: Arc<dyn ProcMacroExpander>,\n-    name: String,\n-}\n-\n-impl Eq for ProcMacro {}\n-impl PartialEq for ProcMacro {\n-    fn eq(&self, other: &ProcMacro) -> bool {\n-        self.name == other.name && Arc::ptr_eq(&self.expander, &other.expander)\n-    }\n-}\n-\n-impl ProcMacro {\n-    pub fn name(&self) -> String {\n-        self.name.clone()\n-    }\n-\n-    pub fn custom_derive(&self, subtree: &Subtree) -> Result<Subtree, ExpandError> {\n-        self.expander.custom_derive(subtree, &self.name)\n-    }\n-}\n-\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct ProcMacroProcessSrv {\n     path: PathBuf,\n@@ -76,7 +49,10 @@ impl ProcMacroClient {\n         ProcMacroClient::Dummy\n     }\n \n-    pub fn by_dylib_path(&self, _dylib_path: &Path) -> Vec<ProcMacro> {\n+    pub fn by_dylib_path(\n+        &self,\n+        _dylib_path: &Path,\n+    ) -> Vec<(SmolStr, Arc<dyn ra_tt::TokenExpander>)> {\n         // FIXME: return empty for now\n         vec![]\n     }"}, {"sha": "1015ce0a60d9e8e746282056cfcab6ba5cd188e1", "filename": "crates/ra_tt/src/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_tt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db162df264a222021dbc7f1f93af94029f3948d9/crates%2Fra_tt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Flib.rs?ref=db162df264a222021dbc7f1f93af94029f3948d9", "patch": "@@ -14,9 +14,12 @@ macro_rules! impl_froms {\n     }\n }\n \n-use std::fmt;\n+use std::{\n+    fmt::{self, Debug},\n+    panic::RefUnwindSafe,\n+};\n \n-use smol_str::SmolStr;\n+pub use smol_str::SmolStr;\n \n /// Represents identity of the token.\n ///\n@@ -184,3 +187,11 @@ impl Subtree {\n }\n \n pub mod buffer;\n+\n+#[derive(Debug, PartialEq, Eq)]\n+pub enum ExpansionError {}\n+\n+pub trait TokenExpander: Debug + Send + Sync + RefUnwindSafe {\n+    fn expand(&self, subtree: &Subtree, attrs: Option<&Subtree>)\n+        -> Result<Subtree, ExpansionError>;\n+}"}]}