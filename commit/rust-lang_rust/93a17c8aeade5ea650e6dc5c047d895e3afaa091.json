{"sha": "93a17c8aeade5ea650e6dc5c047d895e3afaa091", "node_id": "C_kwDOAAsO6NoAKDkzYTE3YzhhZWFkZTVlYTY1MGU2ZGM1YzA0N2Q4OTVlM2FmYWEwOTE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-10-04T12:18:11Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-10-04T15:35:26Z"}, "message": "missing value to delay_span_bug", "tree": {"sha": "e781e6a8f01e5517abb2f325247f4fd39527b347", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e781e6a8f01e5517abb2f325247f4fd39527b347"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93a17c8aeade5ea650e6dc5c047d895e3afaa091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93a17c8aeade5ea650e6dc5c047d895e3afaa091", "html_url": "https://github.com/rust-lang/rust/commit/93a17c8aeade5ea650e6dc5c047d895e3afaa091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93a17c8aeade5ea650e6dc5c047d895e3afaa091/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b139c5b3e2bad623bdbd8583bc4f2b0f763113a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b139c5b3e2bad623bdbd8583bc4f2b0f763113a", "html_url": "https://github.com/rust-lang/rust/commit/6b139c5b3e2bad623bdbd8583bc4f2b0f763113a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "81ca8b646fff1bf0379a2bd5b17e4628a412ea2f", "filename": "compiler/rustc_ty_utils/src/instance.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/93a17c8aeade5ea650e6dc5c047d895e3afaa091/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a17c8aeade5ea650e6dc5c047d895e3afaa091/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs?ref=93a17c8aeade5ea650e6dc5c047d895e3afaa091", "patch": "@@ -171,9 +171,13 @@ fn resolve_associated_item<'tcx>(\n                 return Ok(None);\n             }\n \n-            // If the item does not have a value, then we cannot return an instance.\n+            // Any final impl is required to define all associated items.\n             if !leaf_def.item.defaultness(tcx).has_value() {\n-                return Ok(None);\n+                let guard = tcx.sess.delay_span_bug(\n+                    tcx.def_span(leaf_def.item.def_id),\n+                    \"missing value for assoc item in impl\",\n+                );\n+                return Err(guard);\n             }\n \n             let substs = tcx.erase_regions(substs);"}]}