{"sha": "493b78885abfcc8daadf0603c34d63258f412c97", "node_id": "C_kwDOAAsO6NoAKDQ5M2I3ODg4NWFiZmNjOGRhYWRmMDYwM2MzNGQ2MzI1OGY0MTJjOTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-13T14:29:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-13T14:29:42Z"}, "message": "Auto merge of #9829 - hrxi:pr_or_fun_call, r=llogiq\n\nMake it clear that `or_fun_call` can be a false-positive\n\nAlso move it to nursery so that the false-positives can be dealt with.\n\nCC #8574\n\nchangelog: [`or_fun_call`]: Mention false-positives, move to nursery.", "tree": {"sha": "43059d089bbc6c994fdc241a83c41cb642549d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43059d089bbc6c994fdc241a83c41cb642549d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/493b78885abfcc8daadf0603c34d63258f412c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/493b78885abfcc8daadf0603c34d63258f412c97", "html_url": "https://github.com/rust-lang/rust/commit/493b78885abfcc8daadf0603c34d63258f412c97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/493b78885abfcc8daadf0603c34d63258f412c97/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba3a00b94bfbd68bd6b6f496873357cd1936454", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba3a00b94bfbd68bd6b6f496873357cd1936454", "html_url": "https://github.com/rust-lang/rust/commit/6ba3a00b94bfbd68bd6b6f496873357cd1936454"}, {"sha": "243661b739b122f51a17e64161d9f3a1324b8d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/243661b739b122f51a17e64161d9f3a1324b8d6a", "html_url": "https://github.com/rust-lang/rust/commit/243661b739b122f51a17e64161d9f3a1324b8d6a"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "43507f17e355f38739e1b35728236483ec9df4e0", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/493b78885abfcc8daadf0603c34d63258f412c97/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493b78885abfcc8daadf0603c34d63258f412c97/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=493b78885abfcc8daadf0603c34d63258f412c97", "patch": "@@ -831,32 +831,30 @@ declare_clippy_lint! {\n     /// etc. instead.\n     ///\n     /// ### Why is this bad?\n-    /// The function will always be called and potentially\n-    /// allocate an object acting as the default.\n+    /// The function will always be called. This is only bad if it allocates or\n+    /// does some non-trivial amount of work.\n     ///\n     /// ### Known problems\n-    /// If the function has side-effects, not calling it will\n-    /// change the semantic of the program, but you shouldn't rely on that anyway.\n+    /// If the function has side-effects, not calling it will change the\n+    /// semantic of the program, but you shouldn't rely on that.\n+    ///\n+    /// The lint also cannot figure out whether the function you call is\n+    /// actually expensive to call or not.\n     ///\n     /// ### Example\n     /// ```rust\n     /// # let foo = Some(String::new());\n-    /// foo.unwrap_or(String::new());\n+    /// foo.unwrap_or(String::from(\"empty\"));\n     /// ```\n     ///\n     /// Use instead:\n     /// ```rust\n     /// # let foo = Some(String::new());\n-    /// foo.unwrap_or_else(String::new);\n-    ///\n-    /// // or\n-    ///\n-    /// # let foo = Some(String::new());\n-    /// foo.unwrap_or_default();\n+    /// foo.unwrap_or_else(|| String::from(\"empty\"));\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub OR_FUN_CALL,\n-    perf,\n+    nursery,\n     \"using any `*or` method with a function call, which suggests `*or_else`\"\n }\n "}, {"sha": "a0c003f5b1eaca44b507a864d53344568b78fb9a", "filename": "tests/ui/unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/493b78885abfcc8daadf0603c34d63258f412c97/tests%2Fui%2Funwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493b78885abfcc8daadf0603c34d63258f412c97/tests%2Fui%2Funwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or.rs?ref=493b78885abfcc8daadf0603c34d63258f412c97", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::all)]\n+#![warn(clippy::all, clippy::or_fun_call)]\n \n fn main() {\n     let s = Some(String::from(\"test string\")).unwrap_or(\"Fail\".to_string()).len();"}]}