{"sha": "3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNjY5Mjg3NGZkYWM3MmE3ZDBjYmY1NzhlZDA5NmNhOGQwY2JkMWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-25T08:17:04Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-25T08:17:04Z"}, "message": "lowercase level Virtual Machine", "tree": {"sha": "90c286858f5285119a04815b783acd6007df6330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90c286858f5285119a04815b783acd6007df6330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d", "html_url": "https://github.com/rust-lang/rust/commit/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b60fe99ec7d52cf6de435d1414ea968105c11d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b60fe99ec7d52cf6de435d1414ea968105c11d4", "html_url": "https://github.com/rust-lang/rust/commit/8b60fe99ec7d52cf6de435d1414ea968105c11d4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fd69e4b262ba3165215740c47361e6bdd95fb471", "filename": "vec.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d/vec.md", "raw_url": "https://github.com/rust-lang/rust/raw/3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d/vec.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/vec.md?ref=3f6692874fdac72a7d0cbf578ed096ca8d0cbd1d", "patch": "@@ -442,7 +442,7 @@ end = ptr.offset(len)\n ```\n \n However because `offset` is marked as a GEP inbounds instruction, this will tell\n-llVM that ptr is allocated and won't alias other allocated memory. This is fine\n+LLVM that ptr is allocated and won't alias other allocated memory. This is fine\n for zero-sized types, as they can't alias anything. However if we're using\n heap::EMPTY as a sentinel for a non-allocation for a *non-zero-sized* type,\n this can cause undefined behaviour. Alas, we must therefore special case either"}]}