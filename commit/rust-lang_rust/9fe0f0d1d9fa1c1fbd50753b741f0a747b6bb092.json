{"sha": "9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "node_id": "C_kwDOAAsO6NoAKDlmZTBmMGQxZDlmYTFjMWZiZDUwNzUzYjc0MWYwYTc0N2I2YmIwOTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-12T10:14:24Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-17T15:24:29Z"}, "message": "Add a few default snippets for VSCode", "tree": {"sha": "29979fa209902733a159ea129d3297cceaa96920", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29979fa209902733a159ea129d3297cceaa96920"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "html_url": "https://github.com/rust-lang/rust/commit/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "html_url": "https://github.com/rust-lang/rust/commit/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd"}], "stats": {"total": 184, "additions": 175, "deletions": 9}, "files": [{"sha": "d455976b039d4668c4cfcaf3ad7e6f86161da4b7", "filename": "crates/ide_completion/src/completions/postfix.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "patch": "@@ -163,9 +163,6 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     }\n \n     postfix_snippet(\"box\", \"Box::new(expr)\", &format!(\"Box::new({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"ok\", \"Ok(expr)\", &format!(\"Ok({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"err\", \"Err(expr)\", &format!(\"Err({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"some\", \"Some(expr)\", &format!(\"Some({})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"dbg\", \"dbg!(expr)\", &format!(\"dbg!({})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"dbgr\", \"dbg!(&expr)\", &format!(\"dbg!(&{})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"call\", \"function(expr)\", &format!(\"${{1}}({})\", receiver_text)).add_to(acc);"}, {"sha": "c5e2b009c7ce7e6a216f515175ae2eb638e4902c", "filename": "crates/ide_completion/src/snippet.rs", "status": "modified", "additions": 51, "deletions": 3, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Fide_completion%2Fsrc%2Fsnippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Fide_completion%2Fsrc%2Fsnippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fsnippet.rs?ref=9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "patch": "@@ -52,8 +52,56 @@ use std::ops::Deref;\n // These placeholders take the form of `$number` or `${number:placeholder_text}` which can be traversed as tabstop in ascending order starting from 1,\n // with `$0` being a special case that always comes last.\n //\n-// There is also a special placeholder, `${receiver}`, which will be replaced by the receiver expression for postfix snippets, or nothing in case of normal snippets.\n-// It does not act as a tabstop.\n+// There is also a special placeholder, `${receiver}`, which will be replaced by the receiver expression for postfix snippets, or a `$0` tabstop in case of normal snippets.\n+// This replacement for normal snippets allows you to reuse a snippet for both post- and prefix in a single definition.\n+//\n+// For the VSCode editor, rust-analyzer also ships with a small set of defaults which can be removed\n+// by overwriting the settings object mentioned above, the defaults are:\n+// [source,json]\n+// ----\n+// {\n+//     \"Arc::new\": {\n+//         \"postfix\": \"arc\",\n+//         \"body\": \"Arc::new(${receiver})\",\n+//         \"requires\": \"std::sync::Arc\",\n+//         \"description\": \"Put the expression into an `Arc`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Rc::new\": {\n+//         \"postfix\": \"rc\",\n+//         \"body\": \"Rc::new(${receiver})\",\n+//         \"requires\": \"std::rc::Rc\",\n+//         \"description\": \"Put the expression into an `Rc`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Box::pin\": {\n+//         \"postfix\": \"pinbox\",\n+//         \"body\": \"Box::pin(${receiver})\",\n+//         \"requires\": \"std::boxed::Box\",\n+//         \"description\": \"Put the expression into a pinned `Box`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Ok\": {\n+//         \"postfix\": \"ok\",\n+//         \"body\": \"Ok(${receiver})\",\n+//         \"description\": \"Wrap the expression in a `Result::Ok`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Err\": {\n+//         \"postfix\": \"err\",\n+//         \"body\": \"Err(${receiver})\",\n+//         \"description\": \"Wrap the expression in a `Result::Err`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Some\": {\n+//         \"postfix\": \"some\",\n+//         \"body\": \"Some(${receiver})\",\n+//         \"description\": \"Wrap the expression in an `Option::Some`\",\n+//         \"scope\": \"expr\"\n+//     }\n+// }\n+// ----\n+\n use ide_db::helpers::{import_assets::LocatedImport, insert_use::ImportScope};\n use itertools::Itertools;\n use syntax::{ast, AstNode, GreenNode, SyntaxNode};\n@@ -117,7 +165,7 @@ impl Snippet {\n     }\n \n     pub fn snippet(&self) -> String {\n-        self.snippet.replace(\"${receiver}\", \"\")\n+        self.snippet.replace(\"${receiver}\", \"$0\")\n     }\n \n     pub fn postfix_snippet(&self, receiver: &str) -> String {"}, {"sha": "867f2bd1f0e91ac9e8dbb8caab9911d65884cc98", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "patch": "@@ -116,7 +116,48 @@ config_data! {\n         /// Whether to add parenthesis when completing functions.\n         completion_addCallParenthesis: bool      = \"true\",\n         /// Custom completion snippets.\n-        completion_snippets: FxHashMap<String, SnippetDef> = \"{}\",\n+        // NOTE: Keep this list in sync with the feature docs of user snippets.\n+        completion_snippets: FxHashMap<String, SnippetDef> = r#\"{\n+            \"Arc::new\": {\n+                \"postfix\": \"arc\",\n+                \"body\": \"Arc::new(${receiver})\",\n+                \"requires\": \"std::sync::Arc\",\n+                \"description\": \"Put the expression into an `Arc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Rc::new\": {\n+                \"postfix\": \"rc\",\n+                \"body\": \"Rc::new(${receiver})\",\n+                \"requires\": \"std::rc::Rc\",\n+                \"description\": \"Put the expression into an `Rc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Box::pin\": {\n+                \"postfix\": \"pinbox\",\n+                \"body\": \"Box::pin(${receiver})\",\n+                \"requires\": \"std::boxed::Box\",\n+                \"description\": \"Put the expression into a pinned `Box`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Ok\": {\n+                \"postfix\": \"ok\",\n+                \"body\": \"Ok(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Err\": {\n+                \"postfix\": \"err\",\n+                \"body\": \"Err(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Err`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Some\": {\n+                \"postfix\": \"some\",\n+                \"body\": \"Some(${receiver})\",\n+                \"description\": \"Wrap the expression in an `Option::Some`\",\n+                \"scope\": \"expr\"\n+            }\n+        }\"#,\n         /// Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\n         completion_postfix_enable: bool          = \"true\",\n         /// Toggles the additional completions that automatically add imports when completed."}, {"sha": "494051b30606edf7b914da133adae22dc5fa08b6", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "patch": "@@ -141,7 +141,47 @@ Only applies when `#rust-analyzer.completion.addCallParenthesis#` is set.\n --\n Whether to add parenthesis when completing functions.\n --\n-[[rust-analyzer.completion.snippets]]rust-analyzer.completion.snippets (default: `{}`)::\n+[[rust-analyzer.completion.snippets]]rust-analyzer.completion.snippets (default: `{\n+            \"Arc::new\": {\n+                \"postfix\": \"arc\",\n+                \"body\": \"Arc::new(${receiver})\",\n+                \"requires\": \"std::sync::Arc\",\n+                \"description\": \"Put the expression into an `Arc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Rc::new\": {\n+                \"postfix\": \"rc\",\n+                \"body\": \"Rc::new(${receiver})\",\n+                \"requires\": \"std::rc::Rc\",\n+                \"description\": \"Put the expression into an `Rc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Box::pin\": {\n+                \"postfix\": \"pinbox\",\n+                \"body\": \"Box::pin(${receiver})\",\n+                \"requires\": \"std::boxed::Box\",\n+                \"description\": \"Put the expression into a pinned `Box`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Ok\": {\n+                \"postfix\": \"ok\",\n+                \"body\": \"Ok(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Err\": {\n+                \"postfix\": \"err\",\n+                \"body\": \"Err(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Err`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Some\": {\n+                \"postfix\": \"some\",\n+                \"body\": \"Some(${receiver})\",\n+                \"description\": \"Wrap the expression in an `Option::Some`\",\n+                \"scope\": \"expr\"\n+            }\n+        }`)::\n +\n --\n Custom completion snippets."}, {"sha": "d70ac9aacbc7ba0c0a21814623f014b5e0fc6ce0", "filename": "editors/code/package.json", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=9fe0f0d1d9fa1c1fbd50753b741f0a747b6bb092", "patch": "@@ -592,7 +592,47 @@\n                 },\n                 \"rust-analyzer.completion.snippets\": {\n                     \"markdownDescription\": \"Custom completion snippets.\",\n-                    \"default\": {},\n+                    \"default\": {\n+                        \"Arc::new\": {\n+                            \"postfix\": \"arc\",\n+                            \"body\": \"Arc::new(${receiver})\",\n+                            \"requires\": \"std::sync::Arc\",\n+                            \"description\": \"Put the expression into an `Arc`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Rc::new\": {\n+                            \"postfix\": \"rc\",\n+                            \"body\": \"Rc::new(${receiver})\",\n+                            \"requires\": \"std::rc::Rc\",\n+                            \"description\": \"Put the expression into an `Rc`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Box::pin\": {\n+                            \"postfix\": \"pinbox\",\n+                            \"body\": \"Box::pin(${receiver})\",\n+                            \"requires\": \"std::boxed::Box\",\n+                            \"description\": \"Put the expression into a pinned `Box`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Ok\": {\n+                            \"postfix\": \"ok\",\n+                            \"body\": \"Ok(${receiver})\",\n+                            \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Err\": {\n+                            \"postfix\": \"err\",\n+                            \"body\": \"Err(${receiver})\",\n+                            \"description\": \"Wrap the expression in a `Result::Err`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Some\": {\n+                            \"postfix\": \"some\",\n+                            \"body\": \"Some(${receiver})\",\n+                            \"description\": \"Wrap the expression in an `Option::Some`\",\n+                            \"scope\": \"expr\"\n+                        }\n+                    },\n                     \"type\": \"object\"\n                 },\n                 \"rust-analyzer.completion.postfix.enable\": {"}]}