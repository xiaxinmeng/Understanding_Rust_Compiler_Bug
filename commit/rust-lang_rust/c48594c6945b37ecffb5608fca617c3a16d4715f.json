{"sha": "c48594c6945b37ecffb5608fca617c3a16d4715f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ODU5NGM2OTQ1YjM3ZWNmZmI1NjA4ZmNhNjE3YzNhMTZkNDcxNWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-24T21:10:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-24T21:10:10Z"}, "message": "Auto merge of #5085 - JohnTitor:split-up-test, r=phansch\n\nSplit up `needless_range_loop` ui test\n\nPart of #2038\n\nchangelog: none", "tree": {"sha": "f427c20497f6c9ef1ae2701cd09d4aed02278acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f427c20497f6c9ef1ae2701cd09d4aed02278acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c48594c6945b37ecffb5608fca617c3a16d4715f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c48594c6945b37ecffb5608fca617c3a16d4715f", "html_url": "https://github.com/rust-lang/rust/commit/c48594c6945b37ecffb5608fca617c3a16d4715f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c48594c6945b37ecffb5608fca617c3a16d4715f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c7cfa83211c03a24f0c075c71ac3e77525f3232", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7cfa83211c03a24f0c075c71ac3e77525f3232", "html_url": "https://github.com/rust-lang/rust/commit/2c7cfa83211c03a24f0c075c71ac3e77525f3232"}, {"sha": "46b787d1b895593ae6f0b358a948458d17fa357b", "url": "https://api.github.com/repos/rust-lang/rust/commits/46b787d1b895593ae6f0b358a948458d17fa357b", "html_url": "https://github.com/rust-lang/rust/commit/46b787d1b895593ae6f0b358a948458d17fa357b"}], "stats": {"total": 383, "additions": 194, "deletions": 189}, "files": [{"sha": "3fce34367ae5040132e5bad3ed34924faf7178ad", "filename": "tests/ui/needless_range_loop.rs", "status": "modified", "additions": 2, "deletions": 85, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.rs?ref=c48594c6945b37ecffb5608fca617c3a16d4715f", "patch": "@@ -1,93 +1,10 @@\n-#![allow(clippy::cognitive_complexity)]\n+#![warn(clippy::needless_range_loop)]\n \n static STATIC: [usize; 4] = [0, 1, 8, 16];\n const CONST: [usize; 4] = [0, 1, 8, 16];\n-\n-fn calc_idx(i: usize) -> usize {\n-    (i + i + 20) % 4\n-}\n+const MAX_LEN: usize = 42;\n \n fn main() {\n-    const MAX_LEN: usize = 42;\n-\n-    let ns = vec![2, 3, 5, 7];\n-\n-    for i in 3..10 {\n-        println!(\"{}\", ns[i]);\n-    }\n-\n-    for i in 3..10 {\n-        println!(\"{}\", ns[i % 4]);\n-    }\n-\n-    for i in 3..10 {\n-        println!(\"{}\", ns[i % ns.len()]);\n-    }\n-\n-    for i in 3..10 {\n-        println!(\"{}\", ns[calc_idx(i)]);\n-    }\n-\n-    for i in 3..10 {\n-        println!(\"{}\", ns[calc_idx(i) % 4]);\n-    }\n-\n-    let mut ms = vec![1, 2, 3, 4, 5, 6];\n-    for i in 0..ms.len() {\n-        ms[i] *= 2;\n-    }\n-    assert_eq!(ms, vec![2, 4, 6, 8, 10, 12]);\n-\n-    let mut ms = vec![1, 2, 3, 4, 5, 6];\n-    for i in 0..ms.len() {\n-        let x = &mut ms[i];\n-        *x *= 2;\n-    }\n-    assert_eq!(ms, vec![2, 4, 6, 8, 10, 12]);\n-\n-    let g = vec![1, 2, 3, 4, 5, 6];\n-    let glen = g.len();\n-    for i in 0..glen {\n-        let x: u32 = g[i + 1..].iter().sum();\n-        println!(\"{}\", g[i] + x);\n-    }\n-    assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n-\n-    let mut g = vec![1, 2, 3, 4, 5, 6];\n-    let glen = g.len();\n-    for i in 0..glen {\n-        g[i] = g[i + 1..].iter().sum();\n-    }\n-    assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n-\n-    let x = 5;\n-    let mut vec = vec![0; 9];\n-\n-    for i in x..x + 4 {\n-        vec[i] += 1;\n-    }\n-\n-    let x = 5;\n-    let mut vec = vec![0; 10];\n-\n-    for i in x..=x + 4 {\n-        vec[i] += 1;\n-    }\n-\n-    let arr = [1, 2, 3];\n-\n-    for i in 0..3 {\n-        println!(\"{}\", arr[i]);\n-    }\n-\n-    for i in 0..2 {\n-        println!(\"{}\", arr[i]);\n-    }\n-\n-    for i in 1..3 {\n-        println!(\"{}\", arr[i]);\n-    }\n-\n     let mut vec = vec![1, 2, 3, 4];\n     let vec2 = vec![1, 2, 3, 4];\n     for i in 0..vec.len() {"}, {"sha": "c50c4931fb4cc8b68a438de09803e46e0c2015ec", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 16, "deletions": 104, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=c48594c6945b37ecffb5608fca617c3a16d4715f", "patch": "@@ -1,105 +1,17 @@\n-error: the loop variable `i` is only used to index `ns`.\n-  --> $DIR/needless_range_loop.rs:15:14\n-   |\n-LL |     for i in 3..10 {\n-   |              ^^^^^\n-   |\n-   = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n-help: consider using an iterator\n-   |\n-LL |     for <item> in ns.iter().take(10).skip(3) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:36:14\n-   |\n-LL |     for i in 0..ms.len() {\n-   |              ^^^^^^^^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &mut ms {\n-   |         ^^^^^^    ^^^^^^^\n-\n-error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:42:14\n-   |\n-LL |     for i in 0..ms.len() {\n-   |              ^^^^^^^^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &mut ms {\n-   |         ^^^^^^    ^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:66:14\n-   |\n-LL |     for i in x..x + 4 {\n-   |              ^^^^^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:73:14\n-   |\n-LL |     for i in x..=x + 4 {\n-   |              ^^^^^^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:79:14\n-   |\n-LL |     for i in 0..3 {\n-   |              ^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &arr {\n-   |         ^^^^^^    ^^^^\n-\n-error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:83:14\n-   |\n-LL |     for i in 0..2 {\n-   |              ^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in arr.iter().take(2) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:87:14\n-   |\n-LL |     for i in 1..3 {\n-   |              ^^^^\n-   |\n-help: consider using an iterator\n-   |\n-LL |     for <item> in arr.iter().skip(1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:93:14\n+  --> $DIR/needless_range_loop.rs:10:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n    |\n+   = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n LL |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:102:14\n+  --> $DIR/needless_range_loop.rs:19:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -110,7 +22,7 @@ LL |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `j` is only used to index `STATIC`.\n-  --> $DIR/needless_range_loop.rs:107:14\n+  --> $DIR/needless_range_loop.rs:24:14\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n@@ -121,7 +33,7 @@ LL |     for <item> in &STATIC {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `j` is only used to index `CONST`.\n-  --> $DIR/needless_range_loop.rs:111:14\n+  --> $DIR/needless_range_loop.rs:28:14\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n@@ -132,7 +44,7 @@ LL |     for <item> in &CONST {\n    |         ^^^^^^    ^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:115:14\n+  --> $DIR/needless_range_loop.rs:32:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -143,7 +55,7 @@ LL |     for (i, <item>) in vec.iter().enumerate() {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec2`.\n-  --> $DIR/needless_range_loop.rs:123:14\n+  --> $DIR/needless_range_loop.rs:40:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -154,7 +66,7 @@ LL |     for <item> in vec2.iter().take(vec.len()) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:127:14\n+  --> $DIR/needless_range_loop.rs:44:14\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -165,7 +77,7 @@ LL |     for <item> in vec.iter().skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:131:14\n+  --> $DIR/needless_range_loop.rs:48:14\n    |\n LL |     for i in 0..MAX_LEN {\n    |              ^^^^^^^^^^\n@@ -176,7 +88,7 @@ LL |     for <item> in vec.iter().take(MAX_LEN) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:135:14\n+  --> $DIR/needless_range_loop.rs:52:14\n    |\n LL |     for i in 0..=MAX_LEN {\n    |              ^^^^^^^^^^^\n@@ -187,7 +99,7 @@ LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:139:14\n+  --> $DIR/needless_range_loop.rs:56:14\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n@@ -198,7 +110,7 @@ LL |     for <item> in vec.iter().take(10).skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:143:14\n+  --> $DIR/needless_range_loop.rs:60:14\n    |\n LL |     for i in 5..=10 {\n    |              ^^^^^^\n@@ -209,7 +121,7 @@ LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:147:14\n+  --> $DIR/needless_range_loop.rs:64:14\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -220,7 +132,7 @@ LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:151:14\n+  --> $DIR/needless_range_loop.rs:68:14\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n@@ -231,7 +143,7 @@ LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:156:14\n+  --> $DIR/needless_range_loop.rs:73:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -241,5 +153,5 @@ help: consider using an iterator\n LL |     for (i, <item>) in vec.iter_mut().enumerate() {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 14 previous errors\n "}, {"sha": "2ed1b09bece746d1beb7ef6a791946efeee0f681", "filename": "tests/ui/needless_range_loop2.rs", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop2.rs?ref=c48594c6945b37ecffb5608fca617c3a16d4715f", "patch": "@@ -0,0 +1,85 @@\n+#![warn(clippy::needless_range_loop)]\n+\n+fn calc_idx(i: usize) -> usize {\n+    (i + i + 20) % 4\n+}\n+\n+fn main() {\n+    let ns = vec![2, 3, 5, 7];\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i % 4]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i % ns.len()]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[calc_idx(i)]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[calc_idx(i) % 4]);\n+    }\n+\n+    let mut ms = vec![1, 2, 3, 4, 5, 6];\n+    for i in 0..ms.len() {\n+        ms[i] *= 2;\n+    }\n+    assert_eq!(ms, vec![2, 4, 6, 8, 10, 12]);\n+\n+    let mut ms = vec![1, 2, 3, 4, 5, 6];\n+    for i in 0..ms.len() {\n+        let x = &mut ms[i];\n+        *x *= 2;\n+    }\n+    assert_eq!(ms, vec![2, 4, 6, 8, 10, 12]);\n+\n+    let g = vec![1, 2, 3, 4, 5, 6];\n+    let glen = g.len();\n+    for i in 0..glen {\n+        let x: u32 = g[i + 1..].iter().sum();\n+        println!(\"{}\", g[i] + x);\n+    }\n+    assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n+\n+    let mut g = vec![1, 2, 3, 4, 5, 6];\n+    let glen = g.len();\n+    for i in 0..glen {\n+        g[i] = g[i + 1..].iter().sum();\n+    }\n+    assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n+\n+    let x = 5;\n+    let mut vec = vec![0; 9];\n+\n+    for i in x..x + 4 {\n+        vec[i] += 1;\n+    }\n+\n+    let x = 5;\n+    let mut vec = vec![0; 10];\n+\n+    for i in x..=x + 4 {\n+        vec[i] += 1;\n+    }\n+\n+    let arr = [1, 2, 3];\n+\n+    for i in 0..3 {\n+        println!(\"{}\", arr[i]);\n+    }\n+\n+    for i in 0..2 {\n+        println!(\"{}\", arr[i]);\n+    }\n+\n+    for i in 1..3 {\n+        println!(\"{}\", arr[i]);\n+    }\n+}"}, {"sha": "c54ab5ec9809ac0d26ab7b2cc4ccddd6c645f56b", "filename": "tests/ui/needless_range_loop2.stderr", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c48594c6945b37ecffb5608fca617c3a16d4715f/tests%2Fui%2Fneedless_range_loop2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop2.stderr?ref=c48594c6945b37ecffb5608fca617c3a16d4715f", "patch": "@@ -0,0 +1,91 @@\n+error: the loop variable `i` is only used to index `ns`.\n+  --> $DIR/needless_range_loop2.rs:10:14\n+   |\n+LL |     for i in 3..10 {\n+   |              ^^^^^\n+   |\n+   = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n+help: consider using an iterator\n+   |\n+LL |     for <item> in ns.iter().take(10).skip(3) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `ms`.\n+  --> $DIR/needless_range_loop2.rs:31:14\n+   |\n+LL |     for i in 0..ms.len() {\n+   |              ^^^^^^^^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &mut ms {\n+   |         ^^^^^^    ^^^^^^^\n+\n+error: the loop variable `i` is only used to index `ms`.\n+  --> $DIR/needless_range_loop2.rs:37:14\n+   |\n+LL |     for i in 0..ms.len() {\n+   |              ^^^^^^^^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &mut ms {\n+   |         ^^^^^^    ^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop2.rs:61:14\n+   |\n+LL |     for i in x..x + 4 {\n+   |              ^^^^^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop2.rs:68:14\n+   |\n+LL |     for i in x..=x + 4 {\n+   |              ^^^^^^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `arr`.\n+  --> $DIR/needless_range_loop2.rs:74:14\n+   |\n+LL |     for i in 0..3 {\n+   |              ^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &arr {\n+   |         ^^^^^^    ^^^^\n+\n+error: the loop variable `i` is only used to index `arr`.\n+  --> $DIR/needless_range_loop2.rs:78:14\n+   |\n+LL |     for i in 0..2 {\n+   |              ^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in arr.iter().take(2) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `arr`.\n+  --> $DIR/needless_range_loop2.rs:82:14\n+   |\n+LL |     for i in 1..3 {\n+   |              ^^^^\n+   |\n+help: consider using an iterator\n+   |\n+LL |     for <item> in arr.iter().skip(1) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n+"}]}