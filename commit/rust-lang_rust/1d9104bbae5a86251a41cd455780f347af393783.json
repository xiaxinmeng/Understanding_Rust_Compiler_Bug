{"sha": "1d9104bbae5a86251a41cd455780f347af393783", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTEwNGJiYWU1YTg2MjUxYTQxY2Q0NTU3ODBmMzQ3YWYzOTM3ODM=", "commit": {"author": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-03-20T16:33:40Z"}, "committer": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-03-21T12:45:57Z"}, "message": "reflect scampi review\n\n- fix README.md\n- fix BadAttr doc\n- is_rustfmt_macro_error => is_unknown_rustfmt_attr", "tree": {"sha": "2ef0a55812eacb4cc5ee874f94ed36c2cee419d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ef0a55812eacb4cc5ee874f94ed36c2cee419d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d9104bbae5a86251a41cd455780f347af393783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d9104bbae5a86251a41cd455780f347af393783", "html_url": "https://github.com/rust-lang/rust/commit/1d9104bbae5a86251a41cd455780f347af393783", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d9104bbae5a86251a41cd455780f347af393783/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbbc1e86ebe3a003d41bd7b912ee3042086ff918", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbbc1e86ebe3a003d41bd7b912ee3042086ff918", "html_url": "https://github.com/rust-lang/rust/commit/bbbc1e86ebe3a003d41bd7b912ee3042086ff918"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2738363160abd1dd5fbd2981ab3675c5936cc110", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d9104bbae5a86251a41cd455780f347af393783/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d9104bbae5a86251a41cd455780f347af393783/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1d9104bbae5a86251a41cd455780f347af393783", "patch": "@@ -205,7 +205,7 @@ needs to be specified in `rustfmt.toml`, e.g., with `edition = \"2018\"`.\n   | coverage | displays how much of the input file was processed | Yes |\n   | checkstyle | emits in a checkstyle format | Yes |\n \n-* For things you do not want rustfmt to mangle for some macro,\n+* To prevent rustfmt from formatting a macro,\n   use `#[rustfmt::skip::macros(target_macro_name)]`\n \n   Example:"}, {"sha": "7e465ffdcfe2bc65d765d8ca6a356325dc9e2a11", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d9104bbae5a86251a41cd455780f347af393783/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d9104bbae5a86251a41cd455780f347af393783/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=1d9104bbae5a86251a41cd455780f347af393783", "patch": "@@ -94,7 +94,7 @@ pub enum ErrorKind {\n     /// Used deprecated skip attribute.\n     #[fail(display = \"`rustfmt_skip` is deprecated; use `rustfmt::skip`\")]\n     DeprecatedAttr,\n-    /// Used a rustfmt:: attribute other than skip.\n+    /// Used a rustfmt:: attribute other than skip or skip::macros.\n     #[fail(display = \"invalid attribute\")]\n     BadAttr,\n     /// An io error during reading or writing."}, {"sha": "8688c5b7827171df164775dab73682b67fc61ab4", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d9104bbae5a86251a41cd455780f347af393783/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d9104bbae5a86251a41cd455780f347af393783/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=1d9104bbae5a86251a41cd455780f347af393783", "patch": "@@ -659,7 +659,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                         ErrorKind::DeprecatedAttr,\n                     )],\n                 );\n-            } else if self.is_rustfmt_macro_error(&attr.path.segments) {\n+            } else if self.is_unknown_rustfmt_attr(&attr.path.segments) {\n                 let file_name = self.source_map.span_to_filename(attr.span).into();\n                 self.report.append(\n                     file_name,\n@@ -687,7 +687,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         false\n     }\n \n-    fn is_rustfmt_macro_error(&self, segments: &[ast::PathSegment]) -> bool {\n+    fn is_unknown_rustfmt_attr(&self, segments: &[ast::PathSegment]) -> bool {\n         if segments[0].ident.to_string() != \"rustfmt\" {\n             return false;\n         }"}]}