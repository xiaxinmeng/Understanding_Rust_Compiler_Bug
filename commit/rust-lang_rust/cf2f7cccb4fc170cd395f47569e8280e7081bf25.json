{"sha": "cf2f7cccb4fc170cd395f47569e8280e7081bf25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMmY3Y2NjYjRmYzE3MGNkMzk1ZjQ3NTY5ZTgyODBlNzA4MWJmMjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-19T15:29:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-02T22:35:06Z"}, "message": "pacify the mercilous tidy", "tree": {"sha": "6d0852db4e8b393598295de1beb0536df4fdc3d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d0852db4e8b393598295de1beb0536df4fdc3d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf2f7cccb4fc170cd395f47569e8280e7081bf25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf2f7cccb4fc170cd395f47569e8280e7081bf25", "html_url": "https://github.com/rust-lang/rust/commit/cf2f7cccb4fc170cd395f47569e8280e7081bf25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf2f7cccb4fc170cd395f47569e8280e7081bf25/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc4404c0b501729cc5df05544e5f0784789f4215", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4404c0b501729cc5df05544e5f0784789f4215", "html_url": "https://github.com/rust-lang/rust/commit/bc4404c0b501729cc5df05544e5f0784789f4215"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "79405b124001d23dad68d48c3c32e6b8a12e8741", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cf2f7cccb4fc170cd395f47569e8280e7081bf25/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf2f7cccb4fc170cd395f47569e8280e7081bf25/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=cf2f7cccb4fc170cd395f47569e8280e7081bf25", "patch": "@@ -90,7 +90,11 @@ impl RegionHighlightMode {\n     /// During the execution of `op`, highlight the region inference\n     /// vairable `vid` as `'N`.  We can only highlight one region vid\n     /// at a time.\n-    pub fn highlighting_region<R>(region: ty::Region<'_>, number: usize, op: impl FnOnce() -> R) -> R {\n+    pub fn highlighting_region<R>(\n+        region: ty::Region<'_>,\n+        number: usize,\n+        op: impl FnOnce() -> R,\n+    ) -> R {\n         let old_mode = Self::get();\n         let mut new_mode = old_mode;\n         let first_avail_slot = new_mode.highlight_regions.iter_mut()\n@@ -1076,12 +1080,10 @@ impl fmt::Debug for ty::FloatVid {\n \n impl fmt::Debug for ty::RegionVid {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        if RegionHighlightMode::get().any_region_vids_highlighted() {\n-            if let Some(counter) = RegionHighlightMode::get().region_highlighted(&ty::ReVar(*self)) {\n-                return write!(f, \"'{:?}\", counter);\n-            } else {\n-                return write!(f, \"'_\");\n-            }\n+        if let Some(counter) = RegionHighlightMode::get().region_highlighted(&ty::ReVar(*self)) {\n+            return write!(f, \"'{:?}\", counter);\n+        } else if RegionHighlightMode::get().any_region_vids_highlighted() {\n+            return write!(f, \"'_\");\n         }\n \n         write!(f, \"'_#{}r\", self.index())"}]}