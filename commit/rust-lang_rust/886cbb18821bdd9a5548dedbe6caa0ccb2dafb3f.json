{"sha": "886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f", "node_id": "C_kwDOAAsO6NoAKDg4NmNiYjE4ODIxYmRkOWE1NTQ4ZGVkYmU2Y2FhMGNjYjJkYWZiM2Y", "commit": {"author": {"name": "James Hinshelwood", "email": "jameshinshelwood1@gmail.com", "date": "2021-10-11T07:28:32Z"}, "committer": {"name": "James Hinshelwood", "email": "jameshinshelwood1@gmail.com", "date": "2021-10-11T07:29:56Z"}, "message": "Rename `disallowed` to `conf_disallowed`\n\nCo-authored-by: James Hinshelwood <james.hinshelwood@bigpayme.com>", "tree": {"sha": "9af7dd2a99b5e5f6d5ff5f280b0971f9eb3d1991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af7dd2a99b5e5f6d5ff5f280b0971f9eb3d1991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEqKTj0Sg/SRGrz0h34nG74Ln6/AkFAmFj5/gACgkQ4nG74Ln6\n/AnrYBAAogRoQqWTFBTkkY4TT9zgM4F2+TetUexJyPNe4VVU7pd3PAoVRPJR8hAn\nhi6J8f4tQeBHDvmAjlwEEf2g+TesE51EkMATFDhEQbzZeaCV9cy4YSRWX4i3DYM2\nkPPzoZe36YMHYFThNc7/lyeM6g0Bnyv0U+u7wUtBynrHwsSzFeJwKERvRaskthHu\nvcHjz+13lb6RPjie91qZyGZm9uIeEjqfrCrsyKofPW40htIjkA/EMgvgZxEo0R9t\nqlSwBBWVtfD7G001yH3OTLblfCmSiBXwQOJzqkplR27dkdJPhrkHGpHbWdG7F/Dj\n3fzRtbUBZ2HbulhRrW6Gr9uxS0WL7CcuhmIaINmUC/5BJGbvuOPEBJO4uOgP1Yfz\n8CjICLbxW8oojVMnRQJNwiHUL5PlMUHse/aEc5sx++6A111zfcdoEnf6nvBvgClz\nQilVZpUmj7l4LqeI1Th64Tlzw9SC6JSLzA8lVHX9RLeGf/3vA8AFUlZQbZYCQPuy\nqxfXyAdtO4hpRy8URYK3nQLHTKhtF4rv5mnBvrJl21tRtrh8yLOSexZZTo027eVA\nD2lNUx3oHArM9KYpY5/DhrhQUTzJ9Ounl4xkSi6TP54VIcaFp8weiNz9xh2z7+p/\n2EU5334oCWQNrIchMYwdk6iIaajsRgFf64PQJ7sGol2fSX27A10=\n=msl5\n-----END PGP SIGNATURE-----", "payload": "tree 9af7dd2a99b5e5f6d5ff5f280b0971f9eb3d1991\nparent 857a4073b8b76bd29ff9504b5f015e5021b5d9b2\nauthor James Hinshelwood <jameshinshelwood1@gmail.com> 1633937312 +0100\ncommitter James Hinshelwood <jameshinshelwood1@gmail.com> 1633937396 +0100\n\nRename `disallowed` to `conf_disallowed`\n\nCo-authored-by: James Hinshelwood <james.hinshelwood@bigpayme.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f", "html_url": "https://github.com/rust-lang/rust/commit/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f/comments", "author": {"login": "JamesHinshelwood", "id": 11905377, "node_id": "MDQ6VXNlcjExOTA1Mzc3", "avatar_url": "https://avatars.githubusercontent.com/u/11905377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamesHinshelwood", "html_url": "https://github.com/JamesHinshelwood", "followers_url": "https://api.github.com/users/JamesHinshelwood/followers", "following_url": "https://api.github.com/users/JamesHinshelwood/following{/other_user}", "gists_url": "https://api.github.com/users/JamesHinshelwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamesHinshelwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamesHinshelwood/subscriptions", "organizations_url": "https://api.github.com/users/JamesHinshelwood/orgs", "repos_url": "https://api.github.com/users/JamesHinshelwood/repos", "events_url": "https://api.github.com/users/JamesHinshelwood/events{/privacy}", "received_events_url": "https://api.github.com/users/JamesHinshelwood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JamesHinshelwood", "id": 11905377, "node_id": "MDQ6VXNlcjExOTA1Mzc3", "avatar_url": "https://avatars.githubusercontent.com/u/11905377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamesHinshelwood", "html_url": "https://github.com/JamesHinshelwood", "followers_url": "https://api.github.com/users/JamesHinshelwood/followers", "following_url": "https://api.github.com/users/JamesHinshelwood/following{/other_user}", "gists_url": "https://api.github.com/users/JamesHinshelwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamesHinshelwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamesHinshelwood/subscriptions", "organizations_url": "https://api.github.com/users/JamesHinshelwood/orgs", "repos_url": "https://api.github.com/users/JamesHinshelwood/repos", "events_url": "https://api.github.com/users/JamesHinshelwood/events{/privacy}", "received_events_url": "https://api.github.com/users/JamesHinshelwood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "857a4073b8b76bd29ff9504b5f015e5021b5d9b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/857a4073b8b76bd29ff9504b5f015e5021b5d9b2", "html_url": "https://github.com/rust-lang/rust/commit/857a4073b8b76bd29ff9504b5f015e5021b5d9b2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "48f781516f4228c2aecdb5f738d76c47942772ff", "filename": "clippy_lints/src/disallowed_type.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f/clippy_lints%2Fsrc%2Fdisallowed_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f/clippy_lints%2Fsrc%2Fdisallowed_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_type.rs?ref=886cbb18821bdd9a5548dedbe6caa0ccb2dafb3f", "patch": "@@ -48,15 +48,15 @@ declare_clippy_lint! {\n }\n #[derive(Clone, Debug)]\n pub struct DisallowedType {\n-    disallowed: Vec<conf::DisallowedType>,\n+    conf_disallowed: Vec<conf::DisallowedType>,\n     def_ids: FxHashMap<DefId, Option<String>>,\n     prim_tys: FxHashMap<PrimTy, Option<String>>,\n }\n \n impl DisallowedType {\n-    pub fn new(disallowed: Vec<conf::DisallowedType>) -> Self {\n+    pub fn new(conf_disallowed: Vec<conf::DisallowedType>) -> Self {\n         Self {\n-            disallowed,\n+            conf_disallowed,\n             def_ids: FxHashMap::default(),\n             prim_tys: FxHashMap::default(),\n         }\n@@ -83,7 +83,7 @@ impl_lint_pass!(DisallowedType => [DISALLOWED_TYPE]);\n \n impl<'tcx> LateLintPass<'tcx> for DisallowedType {\n     fn check_crate(&mut self, cx: &LateContext<'_>) {\n-        for conf in &self.disallowed {\n+        for conf in &self.conf_disallowed {\n             let (path, reason) = match conf {\n                 conf::DisallowedType::Simple(path) => (path, None),\n                 conf::DisallowedType::WithReason { path, reason } => ("}]}