{"sha": "44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0Yjg1MmIxMGUxYWMyOWNiOTZiMTRhMmQ2ZmQ0YmY3ODE1OTljNDk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-05T21:19:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-05T21:19:00Z"}, "message": "Merge pull request #2023 from montrivo/while_let_loop\n\n`while_let_loop` doesn't take into account break-with-value #1948", "tree": {"sha": "ca3d5afa999cc676576ec4cafcdd21038a552263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca3d5afa999cc676576ec4cafcdd21038a552263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "html_url": "https://github.com/rust-lang/rust/commit/44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b852b10e1ac29cb96b14a2d6fd4bf781599c49/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c01ff5200c36c344dd29b603ebf97de50743460", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c01ff5200c36c344dd29b603ebf97de50743460", "html_url": "https://github.com/rust-lang/rust/commit/1c01ff5200c36c344dd29b603ebf97de50743460"}, {"sha": "7489a84c6a72d37c71f13f51f125c96ac7cbf340", "url": "https://api.github.com/repos/rust-lang/rust/commits/7489a84c6a72d37c71f13f51f125c96ac7cbf340", "html_url": "https://github.com/rust-lang/rust/commit/7489a84c6a72d37c71f13f51f125c96ac7cbf340"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "4452cee8613d20d237612255e28c1c2f18d552a5", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/44b852b10e1ac29cb96b14a2d6fd4bf781599c49/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b852b10e1ac29cb96b14a2d6fd4bf781599c49/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "patch": "@@ -392,7 +392,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                         MatchSource::Normal | MatchSource::IfLetDesugar { .. } => {\n                             if arms.len() == 2 && arms[0].pats.len() == 1 && arms[0].guard.is_none() &&\n                                 arms[1].pats.len() == 1 && arms[1].guard.is_none() &&\n-                                is_break_expr(&arms[1].body)\n+                                is_simple_break_expr(&arms[1].body)\n                             {\n                                 if in_external_macro(cx, expr.span) {\n                                     return;\n@@ -1500,13 +1500,16 @@ fn extract_first_expr(block: &Block) -> Option<&Expr> {\n     }\n }\n \n-/// Return true if expr contains a single break expr (maybe within a block).\n-fn is_break_expr(expr: &Expr) -> bool {\n+/// Return true if expr contains a single break expr without destination label and\n+/// passed expression. The expression may be within a block.\n+fn is_simple_break_expr(expr: &Expr) -> bool {\n     match expr.node {\n-        ExprBreak(dest, _) if dest.ident.is_none() => true,\n-        ExprBlock(ref b) => match extract_first_expr(b) {\n-            Some(subexpr) => is_break_expr(subexpr),\n-            None => false,\n+        ExprBreak(dest, ref passed_expr) if dest.ident.is_none() && passed_expr.is_none() => true,\n+        ExprBlock(ref b) => {\n+            match extract_first_expr(b) {\n+                Some(subexpr) => is_simple_break_expr(subexpr),\n+                None => false,\n+            }\n         },\n         _ => false,\n     }"}, {"sha": "b67c41621e64ba403f598668e2f40a50eae5e4e6", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/44b852b10e1ac29cb96b14a2d6fd4bf781599c49/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b852b10e1ac29cb96b14a2d6fd4bf781599c49/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=44b852b10e1ac29cb96b14a2d6fd4bf781599c49", "patch": "@@ -183,4 +183,14 @@ fn refutable() {\n         while let Some(v) = y.next() { // use a for loop here\n         }\n     }\n+\n+    //should not trigger while_let_loop lint because break passes an expression\n+    let a = Some(10);\n+    let b = loop {\n+        if let Some(c) = a {\n+            break Some(c);\n+        } else {\n+            break None;\n+        }\n+    };\n }"}]}