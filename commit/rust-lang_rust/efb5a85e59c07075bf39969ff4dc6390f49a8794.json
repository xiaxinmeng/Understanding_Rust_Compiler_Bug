{"sha": "efb5a85e59c07075bf39969ff4dc6390f49a8794", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYjVhODVlNTljMDcwNzViZjM5OTY5ZmY0ZGM2MzkwZjQ5YTg3OTQ=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-19T21:51:28Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-26T20:12:52Z"}, "message": "Small improvements for explanations of E0250, E0368, E0372.", "tree": {"sha": "d0eb791d1ff6c0df28dfac7bb30daa4be3b79e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0eb791d1ff6c0df28dfac7bb30daa4be3b79e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efb5a85e59c07075bf39969ff4dc6390f49a8794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efb5a85e59c07075bf39969ff4dc6390f49a8794", "html_url": "https://github.com/rust-lang/rust/commit/efb5a85e59c07075bf39969ff4dc6390f49a8794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efb5a85e59c07075bf39969ff4dc6390f49a8794/comments", "author": null, "committer": null, "parents": [{"sha": "b593359f7f90d7cb9ec71a4b99f9b1396603a8a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b593359f7f90d7cb9ec71a4b99f9b1396603a8a8", "html_url": "https://github.com/rust-lang/rust/commit/b593359f7f90d7cb9ec71a4b99f9b1396603a8a8"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "0f381b590de81535c70ac243afb2f2a756f6ff10", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/efb5a85e59c07075bf39969ff4dc6390f49a8794/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efb5a85e59c07075bf39969ff4dc6390f49a8794/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=efb5a85e59c07075bf39969ff4dc6390f49a8794", "patch": "@@ -979,10 +979,10 @@ const C: [u32; 0.0] = []; // error\n \"##,\n \n E0250: r##\"\n-This means there was an error while evaluating the expression for the length of\n-a fixed-size array type.\n+There was an error while evaluating the expression for the length of a fixed-\n+size array type.\n \n-Some examples of code that produces this error are:\n+Some examples of this error are:\n \n ```\n // divide by zero in the length expression\n@@ -1032,9 +1032,7 @@ impl Foo for Bar {\n \n E0368: r##\"\n This error indicates that a binary assignment operator like `+=` or `^=` was\n-applied to the wrong types.\n-\n-A couple examples of this are as follows:\n+applied to the wrong types. For example:\n \n ```\n let mut x: u16 = 5;\n@@ -1097,8 +1095,7 @@ Trying to implement a trait for a trait object (as in `impl Trait1 for\n Trait2 { ... }`) does not work if the trait is not object-safe. Please see the\n [RFC 255] for more details on object safety rules.\n \n-[RFC 255]:https://github.com/rust-lang/rfcs/blob/master/text/0255-object-\\\n-safety.md\n+[RFC 255]: https://github.com/rust-lang/rfcs/pull/255\n \"##\n \n }"}]}