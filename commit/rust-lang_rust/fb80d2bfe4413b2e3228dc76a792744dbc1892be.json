{"sha": "fb80d2bfe4413b2e3228dc76a792744dbc1892be", "node_id": "C_kwDOAAsO6NoAKGZiODBkMmJmZTQ0MTNiMmUzMjI4ZGM3NmE3OTI3NDRkYmMxODkyYmU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T22:49:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T22:49:36Z"}, "message": "Auto merge of #99967 - Mark-Simulacrum:download-llvm-ci, r=jyn514\n\nDownload, rather than sccache-cache, LLVM in CI\n\nMy hope/expectation is that we can do better than sccache in CI for cached builds -- currently it looks like on macOS those still take upwards of 10-11 minutes, which is a significant amount of time that we could potentially cut.\n\nThis enables this mode for all non-dist builders; this should avoid any problems with the artifacts we distribute, while also providing for faster test builders (since they'll make use of PGO'd LLVM on the platforms we do that on, which is hopefully a nice win). It slightly increases the chance of test builders starting to fail only after a PR is merged (if PGO changes runtime behavior), but that should hopefully never happen, so I think this is worthwhile.\n\nMeasurements on the PR for apple-1 don't show any noticeable improvement in CI times, but those can be pretty noisy -- I'm inclined to land this since it *should* pretty much always be better and we can reconsider if that ever turns out not to be the case.", "tree": {"sha": "25ca214ddc17100dece94e409dfe064875ae7ac7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25ca214ddc17100dece94e409dfe064875ae7ac7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb80d2bfe4413b2e3228dc76a792744dbc1892be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb80d2bfe4413b2e3228dc76a792744dbc1892be", "html_url": "https://github.com/rust-lang/rust/commit/fb80d2bfe4413b2e3228dc76a792744dbc1892be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb80d2bfe4413b2e3228dc76a792744dbc1892be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "878aef79dcdf59d19bb8482202dc55e58ceb62ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/878aef79dcdf59d19bb8482202dc55e58ceb62ff", "html_url": "https://github.com/rust-lang/rust/commit/878aef79dcdf59d19bb8482202dc55e58ceb62ff"}, {"sha": "d7b91c31207a1440732b01d357181c68e7e72a97", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b91c31207a1440732b01d357181c68e7e72a97", "html_url": "https://github.com/rust-lang/rust/commit/d7b91c31207a1440732b01d357181c68e7e72a97"}], "stats": {"total": 230, "additions": 182, "deletions": 48}, "files": [{"sha": "11b115cb2ff245bbd11209790c5e4f91b0ca8621", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -391,24 +391,28 @@ jobs:\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n               SCRIPT: make ci-mingw-subset-1\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: i686-mingw-2\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n               SCRIPT: make ci-mingw-subset-2\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-1\n             env:\n               SCRIPT: make ci-mingw-subset-1\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-2\n             env:\n               SCRIPT: make ci-mingw-subset-2\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: dist-x86_64-msvc\n@@ -433,6 +437,7 @@ jobs:\n           - name: dist-i686-mingw\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               SCRIPT: python x.py dist\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n@@ -441,6 +446,7 @@ jobs:\n             env:\n               SCRIPT: python x.py dist\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl"}, {"sha": "13e3049f2c81ff001a9bfbbce5efb075c676772c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -990,42 +990,7 @@ impl Config {\n             config.llvm_from_ci = match llvm.download_ci_llvm {\n                 Some(StringOrBool::String(s)) => {\n                     assert!(s == \"if-available\", \"unknown option `{}` for download-ci-llvm\", s);\n-                    // This is currently all tier 1 targets and tier 2 targets with host tools\n-                    // (since others may not have CI artifacts)\n-                    // https://doc.rust-lang.org/rustc/platform-support.html#tier-1\n-                    // FIXME: this is duplicated in bootstrap.py\n-                    let supported_platforms = [\n-                        // tier 1\n-                        \"aarch64-unknown-linux-gnu\",\n-                        \"i686-pc-windows-gnu\",\n-                        \"i686-pc-windows-msvc\",\n-                        \"i686-unknown-linux-gnu\",\n-                        \"x86_64-unknown-linux-gnu\",\n-                        \"x86_64-apple-darwin\",\n-                        \"x86_64-pc-windows-gnu\",\n-                        \"x86_64-pc-windows-msvc\",\n-                        // tier 2 with host tools\n-                        \"aarch64-apple-darwin\",\n-                        \"aarch64-pc-windows-msvc\",\n-                        \"aarch64-unknown-linux-musl\",\n-                        \"arm-unknown-linux-gnueabi\",\n-                        \"arm-unknown-linux-gnueabihf\",\n-                        \"armv7-unknown-linux-gnueabihf\",\n-                        \"mips-unknown-linux-gnu\",\n-                        \"mips64-unknown-linux-gnuabi64\",\n-                        \"mips64el-unknown-linux-gnuabi64\",\n-                        \"mipsel-unknown-linux-gnu\",\n-                        \"powerpc-unknown-linux-gnu\",\n-                        \"powerpc64-unknown-linux-gnu\",\n-                        \"powerpc64le-unknown-linux-gnu\",\n-                        \"riscv64gc-unknown-linux-gnu\",\n-                        \"s390x-unknown-linux-gnu\",\n-                        \"x86_64-unknown-freebsd\",\n-                        \"x86_64-unknown-illumos\",\n-                        \"x86_64-unknown-linux-musl\",\n-                        \"x86_64-unknown-netbsd\",\n-                    ];\n-                    supported_platforms.contains(&&*config.build.triple)\n+                    crate::native::is_ci_llvm_available(&config, llvm_assertions.unwrap_or(false))\n                 }\n                 Some(StringOrBool::Bool(b)) => b,\n                 None => false,\n@@ -1176,14 +1141,14 @@ impl Config {\n \n         if config.llvm_from_ci {\n             let triple = &config.build.triple;\n+            let ci_llvm_bin = config.ci_llvm_root().join(\"bin\");\n             let mut build_target = config\n                 .target_config\n                 .entry(config.build)\n                 .or_insert_with(|| Target::from_triple(&triple));\n \n             check_ci_llvm!(build_target.llvm_config);\n             check_ci_llvm!(build_target.llvm_filecheck);\n-            let ci_llvm_bin = config.out.join(&*config.build.triple).join(\"ci-llvm/bin\");\n             build_target.llvm_config = Some(ci_llvm_bin.join(exe(\"llvm-config\", config.build)));\n             build_target.llvm_filecheck = Some(ci_llvm_bin.join(exe(\"FileCheck\", config.build)));\n         }"}, {"sha": "7ecf74d3068d0a54e1b1278449af6bf33ceddd2b", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 80, "deletions": 9, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -114,23 +114,20 @@ pub fn prebuilt_llvm_config(\n     Err(Meta { stamp, build_llvm_config, out_dir, root: root.into() })\n }\n \n-pub(crate) fn maybe_download_ci_llvm(builder: &Builder<'_>) {\n-    let config = &builder.config;\n-    if !config.llvm_from_ci {\n-        return;\n-    }\n+/// This retrieves the LLVM sha we *want* to use, according to git history.\n+pub(crate) fn detect_llvm_sha(config: &crate::config::Config) -> String {\n     let mut rev_list = config.git();\n     rev_list.args(&[\n         PathBuf::from(\"rev-list\"),\n-        format!(\"--author={}\", builder.config.stage0_metadata.config.git_merge_commit_email).into(),\n+        format!(\"--author={}\", config.stage0_metadata.config.git_merge_commit_email).into(),\n         \"-n1\".into(),\n         \"--first-parent\".into(),\n         \"HEAD\".into(),\n         \"--\".into(),\n-        builder.src.join(\"src/llvm-project\"),\n-        builder.src.join(\"src/bootstrap/download-ci-llvm-stamp\"),\n+        config.src.join(\"src/llvm-project\"),\n+        config.src.join(\"src/bootstrap/download-ci-llvm-stamp\"),\n         // the LLVM shared object file is named `LLVM-12-rust-{version}-nightly`\n-        builder.src.join(\"src/version\"),\n+        config.src.join(\"src/version\"),\n     ]);\n     let llvm_sha = output(&mut rev_list);\n     let llvm_sha = llvm_sha.trim();\n@@ -143,8 +140,82 @@ pub(crate) fn maybe_download_ci_llvm(builder: &Builder<'_>) {\n         panic!();\n     }\n \n+    llvm_sha.to_owned()\n+}\n+\n+/// Returns whether the CI-found LLVM is currently usable.\n+///\n+/// This checks both the build triple platform to confirm we're usable at all,\n+/// and then verifies if the current HEAD matches the detected LLVM SHA head,\n+/// in which case LLVM is indicated as not available.\n+pub(crate) fn is_ci_llvm_available(config: &crate::config::Config, asserts: bool) -> bool {\n+    // This is currently all tier 1 targets and tier 2 targets with host tools\n+    // (since others may not have CI artifacts)\n+    // https://doc.rust-lang.org/rustc/platform-support.html#tier-1\n+    let supported_platforms = [\n+        // tier 1\n+        \"aarch64-unknown-linux-gnu\",\n+        \"i686-pc-windows-gnu\",\n+        \"i686-pc-windows-msvc\",\n+        \"i686-unknown-linux-gnu\",\n+        \"x86_64-unknown-linux-gnu\",\n+        \"x86_64-apple-darwin\",\n+        \"x86_64-pc-windows-gnu\",\n+        \"x86_64-pc-windows-msvc\",\n+        // tier 2 with host tools\n+        \"aarch64-apple-darwin\",\n+        \"aarch64-pc-windows-msvc\",\n+        \"aarch64-unknown-linux-musl\",\n+        \"arm-unknown-linux-gnueabi\",\n+        \"arm-unknown-linux-gnueabihf\",\n+        \"armv7-unknown-linux-gnueabihf\",\n+        \"mips-unknown-linux-gnu\",\n+        \"mips64-unknown-linux-gnuabi64\",\n+        \"mips64el-unknown-linux-gnuabi64\",\n+        \"mipsel-unknown-linux-gnu\",\n+        \"powerpc-unknown-linux-gnu\",\n+        \"powerpc64-unknown-linux-gnu\",\n+        \"powerpc64le-unknown-linux-gnu\",\n+        \"riscv64gc-unknown-linux-gnu\",\n+        \"s390x-unknown-linux-gnu\",\n+        \"x86_64-unknown-freebsd\",\n+        \"x86_64-unknown-illumos\",\n+        \"x86_64-unknown-linux-musl\",\n+        \"x86_64-unknown-netbsd\",\n+    ];\n+    if !supported_platforms.contains(&&*config.build.triple) {\n+        return false;\n+    }\n+\n+    let triple = &*config.build.triple;\n+    if (triple == \"aarch64-unknown-linux-gnu\" || triple.contains(\"i686\")) && asserts {\n+        // No alt builder for aarch64-unknown-linux-gnu today.\n+        return false;\n+    }\n+\n+    if crate::util::CiEnv::is_ci() {\n+        let llvm_sha = detect_llvm_sha(config);\n+        let head_sha = output(config.git().arg(\"rev-parse\").arg(\"HEAD\"));\n+        let head_sha = head_sha.trim();\n+        if llvm_sha == head_sha {\n+            eprintln!(\n+                \"Detected LLVM as non-available: running in CI and modified LLVM in this change\"\n+            );\n+            return false;\n+        }\n+    }\n+\n+    true\n+}\n+\n+pub(crate) fn maybe_download_ci_llvm(builder: &Builder<'_>) {\n+    let config = &builder.config;\n+    if !config.llvm_from_ci {\n+        return;\n+    }\n     let llvm_root = config.ci_llvm_root();\n     let llvm_stamp = llvm_root.join(\".llvm-stamp\");\n+    let llvm_sha = detect_llvm_sha(&config);\n     let key = format!(\"{}{}\", llvm_sha, config.llvm_assertions);\n     if program_out_of_date(&llvm_stamp, &key) && !config.dry_run {\n         download_ci_llvm(builder, &llvm_sha);"}, {"sha": "3a00e258e00e5b142ac82b3e73ad6f21c7e7ce61", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -258,6 +258,10 @@ impl CiEnv {\n         }\n     }\n \n+    pub fn is_ci() -> bool {\n+        Self::current() != CiEnv::None\n+    }\n+\n     /// If in a CI environment, forces the command to run with colors.\n     pub fn force_coloring_in_ci(self, cmd: &mut Command) {\n         if self != CiEnv::None {"}, {"sha": "d0d367b39b493850cfce53e8095f2f05f7127905", "filename": "src/ci/docker/host-x86_64/arm-android/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -29,6 +29,10 @@ ENV PATH=$PATH:/android/sdk/platform-tools\n \n ENV TARGETS=arm-linux-androideabi\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --arm-linux-androideabi-ndk=/android/ndk/arm-14 \\\n     --set llvm.allow-old-toolchain\n "}, {"sha": "69f88e4952019e6dc96fa5d2afd371895d296679", "filename": "src/ci/docker/host-x86_64/armhf-gnu/Dockerfile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -78,6 +78,8 @@ RUN curl -O https://ci-mirrors.rust-lang.org/rustc/vexpress-v2p-ca15-tc1.dtb\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n+COPY static/gitconfig /etc/gitconfig\n+\n ENV RUST_CONFIGURE_ARGS --qemu-armhf-rootfs=/tmp/rootfs\n ENV SCRIPT python3 ../x.py --stage 2 test --host='' --target arm-unknown-linux-gnueabihf\n "}, {"sha": "71ea13071bd1f1345d0841f3208fa92f131b77a5", "filename": "src/ci/docker/host-x86_64/i686-gnu-nopt/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -27,6 +27,10 @@ RUN mkdir -p /config\n RUN echo \"[rust]\" > /config/nopt-std-config.toml\n RUN echo \"optimize = false\" >> /config/nopt-std-config.toml\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests \\\n     --set llvm.allow-old-toolchain\n ENV SCRIPT python3 ../x.py test --stage 0 --config /config/nopt-std-config.toml library/std \\"}, {"sha": "ebeab3dbdb79913c87a55877c553e80e15dca62a", "filename": "src/ci/docker/host-x86_64/i686-gnu/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -23,6 +23,9 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu \\\n     --set llvm.allow-old-toolchain\n # Exclude some tests that are unlikely to be platform specific, to speed up"}, {"sha": "b75e2f085cd3b73f2f66ea7323bea08fc8edb6eb", "filename": "src/ci/docker/host-x86_64/test-various/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -30,6 +30,10 @@ WORKDIR /\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n+# We are disabling CI LLVM since this builder needs to build LLD, which is\n+# currently unsupported when downloading pre-built LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --musl-root-x86_64=/usr/local/x86_64-linux-musl \\\n   --set build.nodejs=/node-v15.14.0-linux-x64/bin/node \\"}, {"sha": "9e37c2822e8bd58d5d166c7c2bc60832f0221a76", "filename": "src/ci/docker/host-x86_64/wasm32/Dockerfile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -48,6 +48,8 @@ ENV TARGETS=wasm32-unknown-emscripten\n # Use -O1 optimizations in the link step to reduce time spent optimizing.\n ENV EMCC_CFLAGS=-O1\n \n+COPY static/gitconfig /etc/gitconfig\n+\n # Emscripten installation is user-specific\n ENV NO_CHANGE_USER=1\n "}, {"sha": "321b3d6ace486d84f5cc9bbe0cd6df052a96e7e0", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-aux/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -26,6 +26,10 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu \\\n     --set llvm.allow-old-toolchain\n ENV RUST_CHECK_TARGET check-aux"}, {"sha": "739045248fea205d7c0ef0ec80fffc6f71fc6af3", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-debug/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -31,6 +31,9 @@ RUN sh /scripts/sccache.sh\n ENV RUSTBUILD_FORCE_CLANG_BASED_TESTS 1\n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n \n+# llvm.use-linker conflicts with downloading CI LLVM\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --enable-debug \\"}, {"sha": "be4def85f14c4735c41b63da42f00a317273d438", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-distcheck/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -22,6 +22,10 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --set rust.ignore-git=false \\\n     --set llvm.allow-old-toolchain\n ENV SCRIPT python3 ../x.py --stage 2 test distcheck"}, {"sha": "23f2215c2d93cfbe85e3e06028f00793c96af05d", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13-stage1/Dockerfile", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -26,7 +26,11 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-# using llvm-link-shared due to libffi issues -- see #34486\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n ENV RUST_CONFIGURE_ARGS \\\n     --build=x86_64-unknown-linux-gnu \\\n     --llvm-root=/usr/lib/llvm-13 \\"}, {"sha": "8f6831bc54e63e6b693c031ab6d7cda8f701d7e8", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13/Dockerfile", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -37,7 +37,11 @@ RUN apt-get update && \\\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-# using llvm-link-shared due to libffi issues -- see #34486\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --llvm-root=/usr/lib/llvm-13 \\"}, {"sha": "e2ec4f275001b53d24fececc91607eaa810e1a75", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -80,6 +80,10 @@ COPY host-x86_64/x86_64-gnu-tools/browser-ui-test.version /tmp/\n # the local version of the package is different than the one used by the CI.\n RUN npm install -g browser-ui-test@$(head -n 1 /tmp/browser-ui-test.version) --unsafe-perm=true\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --set llvm.allow-old-toolchain \\\n   --build=x86_64-unknown-linux-gnu \\"}, {"sha": "6bad35f01ce71c03115f834d68374d1f09bda876", "filename": "src/ci/docker/static/gitconfig", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fstatic%2Fgitconfig", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fdocker%2Fstatic%2Fgitconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fstatic%2Fgitconfig?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -0,0 +1,2 @@\n+[safe]\n+directory = *"}, {"sha": "a6bdd9f3186b1fc8e3f9eea3a21945e48381d9ee", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -600,6 +600,9 @@ jobs:\n                 --build=i686-pc-windows-gnu\n                 --set llvm.allow-old-toolchain\n               SCRIPT: make ci-mingw-subset-1\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -609,6 +612,9 @@ jobs:\n                 --build=i686-pc-windows-gnu\n                 --set llvm.allow-old-toolchain\n               SCRIPT: make ci-mingw-subset-2\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -619,6 +625,9 @@ jobs:\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -629,6 +638,9 @@ jobs:\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -678,6 +690,9 @@ jobs:\n                 --enable-full-tools\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               SCRIPT: python x.py dist\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n@@ -691,6 +706,9 @@ jobs:\n                 --enable-full-tools\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl"}, {"sha": "9a247fb60a8ee0535c20ecc4d5ab0f4e135c8ab4", "filename": "src/ci/run.sh", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -11,6 +11,16 @@ if [ \"$NO_CHANGE_USER\" = \"\" ]; then\n     useradd --shell /bin/bash -u $LOCAL_USER_ID -o -c \"\" -m user\n     export HOME=/home/user\n     unset LOCAL_USER_ID\n+\n+    # Ensure that runners are able to execute git commands in the worktree,\n+    # overriding the typical git protections. In our docker container we're running\n+    # as root, while the user owning the checkout is not root.\n+    # This is only necessary when we change the user, otherwise we should\n+    # already be running with the right user.\n+    #\n+    # For NO_CHANGE_USER done in the small number of Dockerfiles affected.\n+    echo -e '[safe]\\n\\tdirectory = *' > /home/user/gitconfig\n+\n     exec su --preserve-environment -c \"env PATH=$PATH \\\"$0\\\"\" user\n   fi\n fi\n@@ -102,6 +112,18 @@ else\n   fi\n \n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set rust.verify-llvm-ir\"\n+\n+  # We enable this for non-dist builders, since those aren't trying to produce\n+  # fresh binaries. We currently don't entirely support distributing a fresh\n+  # copy of the compiler (including llvm tools, etc.) if we haven't actually\n+  # built LLVM, since not everything necessary is copied into the\n+  # local-usage-only LLVM artifacts. If that changes, this could maybe be made\n+  # true for all builds. In practice it's probably a good idea to keep building\n+  # LLVM continuously on at least some builders to ensure it works, though.\n+  # (And PGO is its own can of worms).\n+  if [ \"$NO_DOWNLOAD_CI_LLVM\" = \"\" ]; then\n+    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set llvm.download-ci-llvm=if-available\"\n+  fi\n fi\n \n if [ \"$RUST_RELEASE_CHANNEL\" = \"nightly\" ] || [ \"$DIST_REQUIRE_ALL_TOOLS\" = \"\" ]; then"}, {"sha": "02b72625d6eb578bb1c889646ea65dbd2f754a89", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/fb80d2bfe4413b2e3228dc76a792744dbc1892be/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=fb80d2bfe4413b2e3228dc76a792744dbc1892be", "patch": "@@ -61,6 +61,10 @@ elif isWindows && [[ ${CUSTOM_MINGW-0} -ne 1 ]]; then\n     7z x -oclang-rust/ \"LLVM-${LLVM_VERSION}-win64.exe\"\n     ciCommandSetEnv RUST_CONFIGURE_ARGS \\\n         \"${RUST_CONFIGURE_ARGS} --set llvm.clang-cl=$(pwd)/clang-rust/bin/clang-cl.exe\"\n+\n+    # Disable downloading CI LLVM on this builder;\n+    # setting up clang-cl just above conflicts with the default if-available option.\n+    ciCommandSetEnv NO_DOWNLOAD_CI_LLVM 1\n fi\n \n if isWindows; then"}]}