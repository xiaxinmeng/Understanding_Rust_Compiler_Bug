{"sha": "6797bfd203dea6601548098214504375ad0e45ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3OTdiZmQyMDNkZWE2NjAxNTQ4MDk4MjE0NTA0Mzc1YWQwZTQ1YWM=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T05:38:59Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T05:38:59Z"}, "message": "rule over the code in libstd with an iron fist", "tree": {"sha": "2b59a308870c0d675be2b7095a32b52359a07118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b59a308870c0d675be2b7095a32b52359a07118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6797bfd203dea6601548098214504375ad0e45ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6797bfd203dea6601548098214504375ad0e45ac", "html_url": "https://github.com/rust-lang/rust/commit/6797bfd203dea6601548098214504375ad0e45ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6797bfd203dea6601548098214504375ad0e45ac/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7064a0ec59005f1e67e89a794ff70d687d2d7041", "url": "https://api.github.com/repos/rust-lang/rust/commits/7064a0ec59005f1e67e89a794ff70d687d2d7041", "html_url": "https://github.com/rust-lang/rust/commit/7064a0ec59005f1e67e89a794ff70d687d2d7041"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "391d22df5e51e591218822fe86efe7dc1834925a", "filename": "src/libstd/backtrace.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6797bfd203dea6601548098214504375ad0e45ac/src%2Flibstd%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6797bfd203dea6601548098214504375ad0e45ac/src%2Flibstd%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbacktrace.rs?ref=6797bfd203dea6601548098214504375ad0e45ac", "patch": "@@ -168,11 +168,7 @@ impl fmt::Debug for Backtrace {\n         };\n         capture.resolve();\n \n-        let frames = if fmt.alternate() {\n-            &capture.frames[..]\n-        } else {\n-            &capture.frames[capture.actual_start..]\n-        };\n+        let frames = &capture.frames[capture.actual_start..];\n \n         write!(fmt, \"Backtrace \")?;\n \n@@ -195,10 +191,9 @@ impl fmt::Debug for BacktraceSymbol {\n         write!(fmt, \"{{ \")?;\n \n         if let Some(fn_name) = self.name.as_ref().map(|b| backtrace::SymbolName::new(b)) {\n-            write!(fmt, \"fn: \")?;\n-            fmt::Display::fmt(&fn_name, fmt)?;\n+            write!(fmt, \"fn: \\\"{}\\\"\", fn_name)?;\n         } else {\n-            write!(fmt, \"fn: <unknown>\")?;\n+            write!(fmt, \"fn: \\\"<unknown>\\\"\")?;\n         }\n \n         if let Some(fname) = self.filename.as_ref() {\n@@ -221,7 +216,7 @@ impl fmt::Debug for BytesOrWide {\n                 BytesOrWide::Bytes(w) => BytesOrWideString::Bytes(w),\n                 BytesOrWide::Wide(w) => BytesOrWideString::Wide(w),\n             },\n-            if fmt.alternate() { backtrace::PrintFmt::Full } else { backtrace::PrintFmt::Short },\n+            backtrace::PrintFmt::Short,\n             crate::env::current_dir().as_ref().ok(),\n         )\n     }"}]}