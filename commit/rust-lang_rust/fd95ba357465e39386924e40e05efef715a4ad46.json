{"sha": "fd95ba357465e39386924e40e05efef715a4ad46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkOTViYTM1NzQ2NWUzOTM4NjkyNGU0MGUwNWVmZWY3MTVhNGFkNDY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-21T19:00:32Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-21T19:00:32Z"}, "message": "Suggest dereferencing when `Deref` is implemented.\n\nThis commit suggests dereferencing a type when it implements `Deref`\nwith the correct `Output` associated type.", "tree": {"sha": "26cc5cbf75807db93d54c186d27f3808e77c398c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26cc5cbf75807db93d54c186d27f3808e77c398c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd95ba357465e39386924e40e05efef715a4ad46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAly8vesACgkQAXYLT59T\n8VT05A/+JjfB8uHvlaZFwTVksoVFWxgaLg5ZOJEbXm1KADNssBvLuq4oktYInZsa\nZOMi791wS8i0a0v3yMcPQaenZGuLVJA88Ep51nBKqRiLBdzg7ln1BM7+u5GIgGvW\nB4+0g+5psZhjfFKG43aw9MB4F3mjHjJx/EFmEv787X5n4M8wIKn8uZvpetkwhMpK\nuQ/xfP3PULFivNNy4RLbKhg/vkr/ZVQOmGOSM+lNk8kfWQSLPFS71VbZ6M+R6zoG\nmWIPo0waYTCYipSn2NjaPdnSOm+UH2hGTf8MQN3nPNvpQDsJPkAWFM1bewcZaHDb\nKFXBG36xJTgff9dK3S+pm+0AsXCBKwbts9nkCICUObYeS8ccJ01QHNEUYp4cHUcl\nFoojzLNZXqhmfSOCAsZomuDAELLZEfHOkxWlHsU2e575ykJojBeAJJLz5xhkt2+n\nc48nuxzKMVXdvItOUQaXif0xSKvykG4AGldZswtDmqYIAuoBnetIEV9IkSPsifqn\na4bEzWIBE+3+bKHclVUG6vHrgF4R16H012x102lapxB4OC8FCXbi/maDZz3wvR7m\n8ZmJ516O6KJcT1M46kJ2Mlw4qH//aGxmcQ8+ae4JHlMt8vzsifC0tWJvTZd66Hqj\nSAczBjgzn9r05Xuo/UhWMTVf6aRdpR78zDYR9fmjUuS+3oL7FFg=\n=jMyU\n-----END PGP SIGNATURE-----", "payload": "tree 26cc5cbf75807db93d54c186d27f3808e77c398c\nparent c9a2616e44c4bced021f3599fe14c2177f27cadd\nauthor David Wood <david@davidtw.co> 1555873232 +0100\ncommitter David Wood <david@davidtw.co> 1555873232 +0100\n\nSuggest dereferencing when `Deref` is implemented.\n\nThis commit suggests dereferencing a type when it implements `Deref`\nwith the correct `Output` associated type.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd95ba357465e39386924e40e05efef715a4ad46", "html_url": "https://github.com/rust-lang/rust/commit/fd95ba357465e39386924e40e05efef715a4ad46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd95ba357465e39386924e40e05efef715a4ad46/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9a2616e44c4bced021f3599fe14c2177f27cadd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9a2616e44c4bced021f3599fe14c2177f27cadd", "html_url": "https://github.com/rust-lang/rust/commit/c9a2616e44c4bced021f3599fe14c2177f27cadd"}], "stats": {"total": 80, "additions": 70, "deletions": 10}, "files": [{"sha": "648a48d8907f1bff2aea4a0167c396521476313a", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -1,6 +1,6 @@\n use crate::check::FnCtxt;\n use rustc::infer::InferOk;\n-use rustc::traits::{ObligationCause, ObligationCauseCode};\n+use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n \n use syntax::util::parser::PREC_POSTFIX;\n use syntax_pos::Span;\n@@ -463,7 +463,37 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     }\n                 }\n             }\n-            _ => {}\n+            _ => {\n+                // If neither type is a reference, then check for `Deref` implementations by\n+                // constructing a predicate to prove: `<T as Deref>::Output == U`\n+                let deref_trait = self.tcx.lang_items().deref_trait().unwrap();\n+                let item_def_id = self.tcx.associated_items(deref_trait).next().unwrap().def_id;\n+                let predicate = ty::Predicate::Projection(ty::Binder::bind(ty::ProjectionPredicate {\n+                    // `<T as Deref>::Output`\n+                    projection_ty: ty::ProjectionTy {\n+                        // `T`\n+                        substs: self.tcx.mk_substs_trait(\n+                            checked_ty,\n+                            self.fresh_substs_for_item(sp, item_def_id),\n+                        ),\n+                        // `Deref::Output`\n+                        item_def_id,\n+                    },\n+                    // `U`\n+                    ty: expected,\n+                }));\n+                let obligation = traits::Obligation::new(self.misc(sp), self.param_env, predicate);\n+                if self.infcx.predicate_may_hold(&obligation) {\n+                    if let (Ok(code), true) = (cm.span_to_snippet(sp), sp == expr.span) {\n+                        let msg = if is_struct_pat_shorthand_field {\n+                            format!(\"{}: *{}\", code, code)\n+                        } else {\n+                            format!(\"*{}\", code)\n+                        };\n+                        return Some((sp, \"consider dereferencing the type\", msg));\n+                    }\n+                }\n+            }\n         }\n         None\n     }"}, {"sha": "04c84bae2dc354cae1247c48c9157fcc7dbb2889", "filename": "src/test/ui/infinite/infinite-autoderef.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -5,7 +5,7 @@ LL |         x = box x;\n    |             ^^^^^\n    |             |\n    |             cyclic type of infinite size\n-   |             help: try using a conversion method: `box x.to_string()`\n+   |             help: consider dereferencing the type: `*box x`\n \n error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/infinite-autoderef.rs:25:5"}, {"sha": "7b475c3cb227fdd395fdced46947cd45bed9e590", "filename": "src/test/ui/occurs-check-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Foccurs-check-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Foccurs-check-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foccurs-check-2.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -5,7 +5,7 @@ LL |     f = box g;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box g.to_string()`\n+   |         help: consider dereferencing the type: `*box g`\n \n error: aborting due to previous error\n "}, {"sha": "fe4248a95c90bad85d1450b8bb377014a5ad2cfe", "filename": "src/test/ui/occurs-check.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Foccurs-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Foccurs-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foccurs-check.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -5,7 +5,7 @@ LL |     f = box f;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box f.to_string()`\n+   |         help: consider dereferencing the type: `*box f`\n \n error: aborting due to previous error\n "}, {"sha": "1d8400b20ac036fca9566cf8746443bc948d67ae", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -44,7 +44,7 @@ LL |     f = box f;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box f.to_string()`\n+   |         help: consider dereferencing the type: `*box f`\n \n error[E0308]: mismatched types\n   --> $DIR/coerce-suggestions.rs:21:9"}, {"sha": "0bf5d32daf90a135694ff3f2004cddc05830c968", "filename": "src/test/ui/suggestions/issue-59819.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.fixed?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -0,0 +1,22 @@\n+// run-rustfix\n+\n+#![allow(warnings)]\n+\n+// Test that suggestion to add `*` characters applies to implementations of `Deref` as well as\n+// references.\n+\n+struct Foo(i32);\n+\n+impl std::ops::Deref for Foo {\n+    type Target = i32;\n+    fn deref(&self) -> &i32 {\n+        &self.0\n+    }\n+}\n+\n+fn main() {\n+    let x = Foo(42);\n+    let y: i32 = *x; //~ ERROR mismatched types\n+    let a = &42;\n+    let b: i32 = *a; //~ ERROR mismatched types\n+}"}, {"sha": "e7e9c7ae2597f3510ef21a79b79af187c43ab45f", "filename": "src/test/ui/suggestions/issue-59819.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.rs?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n #![allow(warnings)]\n \n // Test that suggestion to add `*` characters applies to implementations of `Deref` as well as"}, {"sha": "175c39cfc4fac71ef17767163696129bb8a3574b", "filename": "src/test/ui/suggestions/issue-59819.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-59819.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -1,14 +1,17 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-59819.rs:17:18\n+  --> $DIR/issue-59819.rs:19:18\n    |\n LL |     let y: i32 = x;\n-   |                  ^ expected i32, found struct `Foo`\n+   |                  ^\n+   |                  |\n+   |                  expected i32, found struct `Foo`\n+   |                  help: consider dereferencing the type: `*x`\n    |\n    = note: expected type `i32`\n               found type `Foo`\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-59819.rs:19:18\n+  --> $DIR/issue-59819.rs:21:18\n    |\n LL |     let b: i32 = a;\n    |                  ^"}, {"sha": "edc042c85ee6e24d5d4466115892da4e9dd61720", "filename": "src/test/ui/terr-sorts.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fterr-sorts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd95ba357465e39386924e40e05efef715a4ad46/src%2Ftest%2Fui%2Fterr-sorts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterr-sorts.stderr?ref=fd95ba357465e39386924e40e05efef715a4ad46", "patch": "@@ -2,7 +2,10 @@ error[E0308]: mismatched types\n   --> $DIR/terr-sorts.rs:10:14\n    |\n LL |     want_foo(b);\n-   |              ^ expected struct `Foo`, found struct `std::boxed::Box`\n+   |              ^\n+   |              |\n+   |              expected struct `Foo`, found struct `std::boxed::Box`\n+   |              help: consider dereferencing the type: `*b`\n    |\n    = note: expected type `Foo`\n               found type `std::boxed::Box<Foo>`"}]}