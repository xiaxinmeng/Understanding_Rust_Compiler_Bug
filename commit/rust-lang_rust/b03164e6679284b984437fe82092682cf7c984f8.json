{"sha": "b03164e6679284b984437fe82092682cf7c984f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMzE2NGU2Njc5Mjg0Yjk4NDQzN2ZlODIwOTI2ODJjZjdjOTg0Zjg=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-09T20:15:05Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-09T20:15:05Z"}, "message": "Move to unstable, linking the issue", "tree": {"sha": "52509ef3fed7ff1af0b52d286ff4904933802506", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52509ef3fed7ff1af0b52d286ff4904933802506"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b03164e6679284b984437fe82092682cf7c984f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b03164e6679284b984437fe82092682cf7c984f8", "html_url": "https://github.com/rust-lang/rust/commit/b03164e6679284b984437fe82092682cf7c984f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b03164e6679284b984437fe82092682cf7c984f8/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "496818ccd79e9bc093552887c923168defb13c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/496818ccd79e9bc093552887c923168defb13c6c", "html_url": "https://github.com/rust-lang/rust/commit/496818ccd79e9bc093552887c923168defb13c6c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6f7dc091897f4d460676eaa35af695e1c330176f", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b03164e6679284b984437fe82092682cf7c984f8/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b03164e6679284b984437fe82092682cf7c984f8/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=b03164e6679284b984437fe82092682cf7c984f8", "patch": "@@ -653,7 +653,7 @@ impl CString {\n     ///     unsafe { CString::from_vec_unchecked(b\"abc\".to_vec()) }\n     /// );\n     /// ```\n-    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.46.0\")]\n+    #[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n     pub unsafe fn from_vec_with_nul_unchecked(v: Vec<u8>) -> Self {\n         Self { inner: v.into_boxed_slice() }\n     }\n@@ -693,7 +693,7 @@ impl CString {\n     /// ```\n     ///\n     /// [`new`]: #method.new\n-    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.46.0\")]\n+    #[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n     pub fn from_vec_with_nul(v: Vec<u8>) -> Result<Self, FromBytesWithNulError> {\n         let nul_pos = memchr::memchr(0, &v);\n         match nul_pos {"}]}