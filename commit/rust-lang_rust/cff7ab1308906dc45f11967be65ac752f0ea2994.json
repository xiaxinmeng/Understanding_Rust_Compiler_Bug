{"sha": "cff7ab1308906dc45f11967be65ac752f0ea2994", "node_id": "C_kwDOAAsO6NoAKGNmZjdhYjEzMDg5MDZkYzQ1ZjExOTY3YmU2NWFjNzUyZjBlYTI5OTQ", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-11-07T10:53:33Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-11-07T10:54:12Z"}, "message": "Fix typos", "tree": {"sha": "448ab530dba0843b2d27dad6979d9f9e2a14419e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/448ab530dba0843b2d27dad6979d9f9e2a14419e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cff7ab1308906dc45f11967be65ac752f0ea2994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cff7ab1308906dc45f11967be65ac752f0ea2994", "html_url": "https://github.com/rust-lang/rust/commit/cff7ab1308906dc45f11967be65ac752f0ea2994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cff7ab1308906dc45f11967be65ac752f0ea2994/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f54c31391408214a890bada228fd3b2eb932b8a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f54c31391408214a890bada228fd3b2eb932b8a7", "html_url": "https://github.com/rust-lang/rust/commit/f54c31391408214a890bada228fd3b2eb932b8a7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ff507a52d550dfec52a82994e3c312feeb9c157a", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -365,7 +365,7 @@ struct JodChild(GroupChild);\n /// A handle to a cargo process used for fly-checking.\n struct CargoHandle {\n     /// The handle to the actual cargo process. As we cannot cancel directly from with\n-    /// a read syscall dropping and therefor terminating the process is our best option.\n+    /// a read syscall dropping and therefore terminating the process is our best option.\n     child: JodChild,\n     thread: jod_thread::JoinHandle<io::Result<(bool, String)>>,\n     receiver: Receiver<CargoMessage>,"}, {"sha": "7352b003a491cde5ca4b09ce94ecfa1c99f9f172", "filename": "crates/hir-expand/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fhir-expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fhir-expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Flib.rs?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -814,7 +814,7 @@ impl<'a> InFile<&'a SyntaxNode> {\n \n     pub fn original_syntax_node(self, db: &dyn db::AstDatabase) -> Option<InFile<SyntaxNode>> {\n         // This kind of upmapping can only be achieved in attribute expanded files,\n-        // as we don't have node inputs otherwise and  therefor can't find an `N` node in the input\n+        // as we don't have node inputs otherwise and therefore can't find an `N` node in the input\n         if !self.file_id.is_macro() {\n             return Some(self.map(Clone::clone));\n         } else if !self.file_id.is_attr_macro(db) {\n@@ -926,7 +926,7 @@ impl<N: AstNode> InFile<N> {\n \n     pub fn original_ast_node(self, db: &dyn db::AstDatabase) -> Option<InFile<N>> {\n         // This kind of upmapping can only be achieved in attribute expanded files,\n-        // as we don't have node inputs otherwise and  therefor can't find an `N` node in the input\n+        // as we don't have node inputs otherwise and therefore can't find an `N` node in the input\n         if !self.file_id.is_macro() {\n             return Some(self);\n         } else if !self.file_id.is_attr_macro(db) {"}, {"sha": "c278ba2d7c5b341fb9c2047e6aebfa9824cb9a44", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -157,7 +157,7 @@ config_data! {\n         checkOnSave_noDefaultFeatures: Option<bool>      = \"null\",\n         /// Override the command rust-analyzer uses instead of `cargo check` for\n         /// diagnostics on save. The command is required to output json and\n-        /// should therefor include `--message-format=json` or a similar option.\n+        /// should therefore include `--message-format=json` or a similar option.\n         ///\n         /// If you're changing this because you're using some tool wrapping\n         /// Cargo, you might also want to change"}, {"sha": "2945dba12f255527265fb4668707adabda75d04d", "filename": "crates/rust-analyzer/src/line_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -42,7 +42,7 @@ impl LineEndings {\n         loop {\n             let idx = match find_crlf(&tail[gap_len..]) {\n                 None if crlf_seen => tail.len(),\n-                // SAFETY: buf is unchanged and therefor still contains utf8 data\n+                // SAFETY: buf is unchanged and therefore still contains utf8 data\n                 None => return (unsafe { String::from_utf8_unchecked(buf) }, LineEndings::Unix),\n                 Some(idx) => {\n                     crlf_seen = true;"}, {"sha": "712ef5f63b651e9e3db63378dff73210a7622a12", "filename": "crates/syntax/src/tests/sourcegen_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -86,7 +86,7 @@ fn generate_nodes(kinds: KindsSrc<'_>, grammar: &AstSrc) -> String {\n                 .traits\n                 .iter()\n                 .filter(|trait_name| {\n-                    // Loops have two expressions so this might collide, therefor manual impl it\n+                    // Loops have two expressions so this might collide, therefore manual impl it\n                     node.name != \"ForExpr\" && node.name != \"WhileExpr\"\n                         || trait_name.as_str() != \"HasLoopBody\"\n                 })"}, {"sha": "f171eb41bfd73d419bca3325b835bbcc226c92f0", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -173,7 +173,7 @@ Whether to pass `--no-default-features` to Cargo. Defaults to\n --\n Override the command rust-analyzer uses instead of `cargo check` for\n diagnostics on save. The command is required to output json and\n-should therefor include `--message-format=json` or a similar option.\n+should therefore include `--message-format=json` or a similar option.\n \n If you're changing this because you're using some tool wrapping\n Cargo, you might also want to change"}, {"sha": "4357dc73067fd885b055bae2d09d3d8409a210dc", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cff7ab1308906dc45f11967be65ac752f0ea2994/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/cff7ab1308906dc45f11967be65ac752f0ea2994/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=cff7ab1308906dc45f11967be65ac752f0ea2994", "patch": "@@ -623,7 +623,7 @@\n                     ]\n                 },\n                 \"rust-analyzer.checkOnSave.overrideCommand\": {\n-                    \"markdownDescription\": \"Override the command rust-analyzer uses instead of `cargo check` for\\ndiagnostics on save. The command is required to output json and\\nshould therefor include `--message-format=json` or a similar option.\\n\\nIf you're changing this because you're using some tool wrapping\\nCargo, you might also want to change\\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\\n\\nIf there are multiple linked projects, this command is invoked for\\neach of them, with the working directory being the project root\\n(i.e., the folder containing the `Cargo.toml`).\\n\\nAn example command would be:\\n\\n```bash\\ncargo check --workspace --message-format=json --all-targets\\n```\\n.\",\n+                    \"markdownDescription\": \"Override the command rust-analyzer uses instead of `cargo check` for\\ndiagnostics on save. The command is required to output json and\\nshould therefore include `--message-format=json` or a similar option.\\n\\nIf you're changing this because you're using some tool wrapping\\nCargo, you might also want to change\\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\\n\\nIf there are multiple linked projects, this command is invoked for\\neach of them, with the working directory being the project root\\n(i.e., the folder containing the `Cargo.toml`).\\n\\nAn example command would be:\\n\\n```bash\\ncargo check --workspace --message-format=json --all-targets\\n```\\n.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\","}]}