{"sha": "c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NjRhODIzMTBmZTVkY2VjNTU4NmQ1YTZhZmI4N2E4YTI5ZjYyYzA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-25T02:55:51Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-28T19:37:59Z"}, "message": "keep predicate order and tweak output", "tree": {"sha": "c681e1a4e5a6effcb87a3fe3e7c7bbdbfbfd5e54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c681e1a4e5a6effcb87a3fe3e7c7bbdbfbfd5e54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "html_url": "https://github.com/rust-lang/rust/commit/c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c29441ef2efcd47512402d5558b41a235648841", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c29441ef2efcd47512402d5558b41a235648841", "html_url": "https://github.com/rust-lang/rust/commit/7c29441ef2efcd47512402d5558b41a235648841"}], "stats": {"total": 208, "additions": 129, "deletions": 79}, "files": [{"sha": "f9b5ff8e2ab222f4d0e36cf68afff009cd7bad0a", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -644,7 +644,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 },\n                             })\n                         })\n-                        .collect::<Vec<String>>();\n+                        .enumerate()\n+                        .collect::<Vec<(usize, String)>>();\n                     for ((span, empty_where), obligations) in type_params.into_iter() {\n                         err.span_suggestion_verbose(\n                             span,\n@@ -662,15 +663,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         );\n                     }\n \n-                    bound_list.sort();\n-                    bound_list.dedup(); // #35677\n+                    bound_list.sort_by(|(_, a), (_, b)| a.cmp(&b)); // Sort alphabetically.\n+                    bound_list.dedup_by(|(_, a), (_, b)| a == b); // #35677\n+                    bound_list.sort_by_key(|(pos, _)| *pos); // Keep the original predicate order.\n                     bound_spans.sort();\n                     bound_spans.dedup();\n                     for (span, msg) in bound_spans.into_iter() {\n                         err.span_label(span, &msg);\n                     }\n                     if !bound_list.is_empty() {\n-                        let bound_list = bound_list.join(\"\\n\");\n+                        let bound_list = bound_list\n+                            .into_iter()\n+                            .map(|(_, path)| path)\n+                            .collect::<Vec<_>>()\n+                            .join(\"\\n\");\n                         err.note(&format!(\n                             \"the method `{}` exists but the following trait bounds were not \\\n                              satisfied:\\n{}\",\n@@ -1095,7 +1101,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let mut use_note = true;\n                 if let [trait_info] = &candidates[..] {\n                     if let Some(span) = self.tcx.hir().span_if_local(trait_info.def_id) {\n-                        err.span_label(\n+                        err.span_note(\n                             self.tcx.sess.source_map().def_span(span),\n                             &format!(\n                                 \"`{}` defines an item `{}`, perhaps you need to {} it\","}, {"sha": "fe27da5ac645f5329c2cbaaae1cb6e66090adf6b", "filename": "src/test/ui/associated-const/associated-const-no-item.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -1,13 +1,15 @@\n error[E0599]: no associated item named `ID` found for type `i32` in the current scope\n   --> $DIR/associated-const-no-item.rs:5:23\n    |\n-LL | trait Foo {\n-   | --------- `Foo` defines an item `ID`, perhaps you need to implement it\n-...\n LL | const X: i32 = <i32>::ID;\n    |                       ^^ associated item not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Foo` defines an item `ID`, perhaps you need to implement it\n+  --> $DIR/associated-const-no-item.rs:1:1\n+   |\n+LL | trait Foo {\n+   | ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "50ca5cad4bc6893d39dcdd3201e9161e73fe80f1", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -3,44 +3,52 @@ error[E0599]: no method named `test_mut` found for struct `std::vec::Vec<{intege\n    |\n LL |     a.test_mut();\n    |       ^^^^^^^^ help: there is a method with a similar name: `get_mut`\n-...\n-LL | trait MyIter {\n-   | ------------ `MyIter` defines an item `test_mut`, perhaps you need to implement it\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `MyIter` defines an item `test_mut`, perhaps you need to implement it\n+  --> $DIR/auto-ref-slice-plus-ref.rs:14:1\n+   |\n+LL | trait MyIter {\n+   | ^^^^^^^^^^^^\n \n error[E0599]: no method named `test` found for struct `std::vec::Vec<{integer}>` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:8:7\n    |\n LL |     a.test();\n    |       ^^^^ method not found in `std::vec::Vec<{integer}>`\n-...\n-LL | trait MyIter {\n-   | ------------ `MyIter` defines an item `test`, perhaps you need to implement it\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `MyIter` defines an item `test`, perhaps you need to implement it\n+  --> $DIR/auto-ref-slice-plus-ref.rs:14:1\n+   |\n+LL | trait MyIter {\n+   | ^^^^^^^^^^^^\n \n error[E0599]: no method named `test` found for array `[{integer}; 1]` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:10:11\n    |\n LL |     ([1]).test();\n    |           ^^^^ method not found in `[{integer}; 1]`\n-...\n-LL | trait MyIter {\n-   | ------------ `MyIter` defines an item `test`, perhaps you need to implement it\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `MyIter` defines an item `test`, perhaps you need to implement it\n+  --> $DIR/auto-ref-slice-plus-ref.rs:14:1\n+   |\n+LL | trait MyIter {\n+   | ^^^^^^^^^^^^\n \n error[E0599]: no method named `test` found for reference `&[{integer}; 1]` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:11:12\n    |\n LL |     (&[1]).test();\n    |            ^^^^ method not found in `&[{integer}; 1]`\n-...\n-LL | trait MyIter {\n-   | ------------ `MyIter` defines an item `test`, perhaps you need to implement it\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `MyIter` defines an item `test`, perhaps you need to implement it\n+  --> $DIR/auto-ref-slice-plus-ref.rs:14:1\n+   |\n+LL | trait MyIter {\n+   | ^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "64cce056a2688dfdc660eba738dd22b62e704c16", "filename": "src/test/ui/impl-trait/issues/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -1,16 +1,18 @@\n error[E0599]: no method named `foo` found for struct `Bar` in the current scope\n   --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:20:8\n    |\n-LL | trait Foo<A> {\n-   | ------------ `Foo` defines an item `foo`, perhaps you need to implement it\n-...\n LL | struct Bar;\n    | ----------- method `foo` not found for this\n ...\n LL |     f1.foo(1usize);\n    |        ^^^ method not found in `Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Foo` defines an item `foo`, perhaps you need to implement it\n+  --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:1:1\n+   |\n+LL | trait Foo<A> {\n+   | ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "c0ca341385df5f8d98e95d9cf6d437c35d03a0b5", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -122,68 +122,80 @@ LL |     std::rc::Rc::new(&mut Box::new(&Foo)).method();\n error[E0599]: no method named `method2` found for type `u64` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:45:10\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     1u64.method2();\n    |          ^^^^^^^ method not found in `u64`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&u64>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:47:44\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n    |                                            ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&u64>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method2` found for struct `no_method_suggested_traits::Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:50:37\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     no_method_suggested_traits::Foo.method2();\n    |                                     ^^^^^^^ method not found in `no_method_suggested_traits::Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:52:71\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n    |                                                                       ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method2` found for enum `no_method_suggested_traits::Bar` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:54:40\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     no_method_suggested_traits::Bar::X.method2();\n    |                                        ^^^^^^^ method not found in `no_method_suggested_traits::Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:56:74\n    |\n-LL |     pub trait Bar {\n-   |     ------------- `foo::Bar` defines an item `method2`, perhaps you need to implement it\n-...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n    |                                                                          ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n+  --> $DIR/no-method-suggested-traits.rs:8:5\n+   |\n+LL |     pub trait Bar {\n+   |     ^^^^^^^^^^^^^\n \n error[E0599]: no method named `method3` found for struct `Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:59:9"}, {"sha": "5db521536a804058def4aacb43b05f362045c534", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/option-as_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &Some(42).as_deref();\n    |                             ^^^^^^^^ help: there is a method with a similar name: `as_ref`\n    |\n    = note: the method `as_deref` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::Deref`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "f2133c8c84d21c542305d9674ba3bd8b66b39691", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/option-as_deref_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &mut Some(42).as_deref_mut();\n    |                                 ^^^^^^^^^^^^ method not found in `std::option::Option<{integer}>`\n    |\n    = note: the method `as_deref_mut` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::DerefMut`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "2dfc6d53750e703fc12d98cea40f71b8b0a2947b", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-as_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &Ok(42).as_deref();\n    |                           ^^^^^^^^ help: there is a method with a similar name: `as_ref`\n    |\n    = note: the method `as_deref` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::Deref`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "1d65c57e5e9ec182321a49156864111310ca2d70", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-as_deref_err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_err.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &Err(41).as_deref_err();\n    |                            ^^^^^^^^^^^^ help: there is a method with a similar name: `as_deref_mut`\n    |\n    = note: the method `as_deref_err` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::Deref`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "2f4bf0c94b5cb038a20d0be493dfe82fb6f01887", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-as_deref_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &mut Ok(42).as_deref_mut();\n    |                               ^^^^^^^^^^^^ help: there is a method with a similar name: `as_deref_err`\n    |\n    = note: the method `as_deref_mut` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::DerefMut`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "b76d36c804e5f522fcba291b5946ecac68b9f67c", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-as_deref_mut_err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-as_deref_mut_err.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -5,8 +5,8 @@ LL |     let _result = &mut Err(41).as_deref_mut_err();\n    |                                ^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `as_deref_mut`\n    |\n    = note: the method `as_deref_mut_err` exists but the following trait bounds were not satisfied:\n-           `<{integer} as std::ops::Deref>::Target = _`\n            `{integer}: std::ops::DerefMut`\n+           `<{integer} as std::ops::Deref>::Target = _`\n \n error: aborting due to previous error\n "}, {"sha": "5c611cd43d3ccdf77c39e938c62ecceb778492e8", "filename": "src/test/ui/issues/issue-57362-1.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -1,14 +1,16 @@\n error[E0599]: no method named `f` found for fn pointer `fn(&u8)` in the current scope\n   --> $DIR/issue-57362-1.rs:20:7\n    |\n-LL | trait Trait {\n-   | ----------- `Trait` defines an item `f`, perhaps you need to implement it\n-...\n LL |     a.f();\n    |       ^ method not found in `fn(&u8)`\n    |\n    = note: `a` is a function, perhaps you wish to call it\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Trait` defines an item `f`, perhaps you need to implement it\n+  --> $DIR/issue-57362-1.rs:8:1\n+   |\n+LL | trait Trait {\n+   | ^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "2edc00974645530ad741960f43c8b1d3f3a5e6ec", "filename": "src/test/ui/issues/issue-57362-2.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -1,13 +1,15 @@\n error[E0599]: no function or associated item named `make_g` found for fn pointer `for<'r> fn(&'r ())` in the current scope\n   --> $DIR/issue-57362-2.rs:22:25\n    |\n-LL | trait X {\n-   | ------- `X` defines an item `make_g`, perhaps you need to implement it\n-...\n LL |     let x = <fn (&())>::make_g();\n    |                         ^^^^^^ function or associated item not found in `for<'r> fn(&'r ())`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `X` defines an item `make_g`, perhaps you need to implement it\n+  --> $DIR/issue-57362-2.rs:8:1\n+   |\n+LL | trait X {\n+   | ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "3cdd6372ec18c3959b58f151242d60be42435170", "filename": "src/test/ui/never_type/issue-2149.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -9,13 +9,15 @@ LL |         for elt in self { r = r + f(*elt); }\n error[E0599]: no method named `bind` found for array `[&str; 1]` in the current scope\n   --> $DIR/issue-2149.rs:13:12\n    |\n-LL | trait VecMonad<A> {\n-   | ----------------- `VecMonad` defines an item `bind`, perhaps you need to implement it\n-...\n LL |     [\"hi\"].bind(|x| [x] );\n    |            ^^^^ method not found in `[&str; 1]`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `VecMonad` defines an item `bind`, perhaps you need to implement it\n+  --> $DIR/issue-2149.rs:1:1\n+   |\n+LL | trait VecMonad<A> {\n+   | ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a55d79ee03534ee5746fbb4823ea108c9c52e443", "filename": "src/test/ui/specialization/defaultimpl/specialization-trait-not-implemented.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -1,9 +1,6 @@\n error[E0599]: no method named `foo_one` found for struct `MyStruct` in the current scope\n   --> $DIR/specialization-trait-not-implemented.rs:22:29\n    |\n-LL | trait Foo {\n-   | --------- `Foo` defines an item `foo_one`, perhaps you need to implement it\n-...\n LL | struct MyStruct;\n    | ----------------\n    | |\n@@ -16,6 +13,11 @@ LL |     println!(\"{}\", MyStruct.foo_one());\n    = note: the method `foo_one` exists but the following trait bounds were not satisfied:\n            `MyStruct: Foo`\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Foo` defines an item `foo_one`, perhaps you need to implement it\n+  --> $DIR/specialization-trait-not-implemented.rs:7:1\n+   |\n+LL | trait Foo {\n+   | ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "1692af351f93c441e5f65b76df54d9cd33f9d20d", "filename": "src/test/ui/suggestions/missing-trait-bounds-for-method-call.stderr", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -4,9 +4,6 @@ error[E0599]: no method named `foo` found for reference `&Foo<T>` in the current\n LL | struct Foo<T> {\n    | ------------- doesn't satisfy `Foo<T>: Bar`\n ...\n-LL | trait Bar {\n-   | --------- `Bar` defines an item `foo`, perhaps you need to implement it\n-...\n LL |         self.foo();\n    |              ^^^ method not found in `&Foo<T>`\n    |\n@@ -16,6 +13,11 @@ LL |         self.foo();\n            `T: std::default::Default`\n            which is required by `Foo<T>: Bar`\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Bar` defines an item `foo`, perhaps you need to implement it\n+  --> $DIR/missing-trait-bounds-for-method-call.rs:6:1\n+   |\n+LL | trait Bar {\n+   | ^^^^^^^^^\n help: consider restricting the type parameters to satisfy the obligations\n    |\n LL | struct Foo<T> where T: Bar, T: std::default::Default {\n@@ -24,9 +26,6 @@ LL | struct Foo<T> where T: Bar, T: std::default::Default {\n error[E0599]: no method named `foo` found for reference `&Fin<T>` in the current scope\n   --> $DIR/missing-trait-bounds-for-method-call.rs:27:14\n    |\n-LL | trait Bar {\n-   | --------- `Bar` defines an item `foo`, perhaps you need to implement it\n-...\n LL | struct Fin<T> where T: Bar {\n    | -------------------------- doesn't satisfy `Fin<T>: Bar`\n ...\n@@ -37,6 +36,11 @@ LL |         self.foo();\n            `T: std::default::Default`\n            which is required by `Fin<T>: Bar`\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Bar` defines an item `foo`, perhaps you need to implement it\n+  --> $DIR/missing-trait-bounds-for-method-call.rs:6:1\n+   |\n+LL | trait Bar {\n+   | ^^^^^^^^^\n help: consider restricting the type parameter to satisfy the obligation\n    |\n LL | struct Fin<T> where T: Bar, T: std::default::Default {"}, {"sha": "2c0591c95f69086b4ccdae985aeeefb2af479df4", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -4,13 +4,15 @@ error[E0599]: no method named `a` found for struct `S` in the current scope\n LL | struct S;\n    | --------- method `a` not found for this\n ...\n-LL |     trait A {\n-   |     ------- `method::A` defines an item `a`, perhaps you need to implement it\n-...\n LL |     S.a();\n    |       ^ method not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `method::A` defines an item `a`, perhaps you need to implement it\n+  --> $DIR/trait-item-privacy.rs:6:5\n+   |\n+LL |     trait A {\n+   |     ^^^^^^^\n \n error[E0599]: no method named `b` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:68:7\n@@ -46,13 +48,15 @@ error[E0599]: no function or associated item named `a` found for struct `S` in t\n LL | struct S;\n    | --------- function or associated item `a` not found for this\n ...\n-LL |     trait A {\n-   |     ------- `method::A` defines an item `a`, perhaps you need to implement it\n-...\n LL |     S::a(&S);\n    |        ^ function or associated item not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `method::A` defines an item `a`, perhaps you need to implement it\n+  --> $DIR/trait-item-privacy.rs:6:5\n+   |\n+LL |     trait A {\n+   |     ^^^^^^^\n \n error[E0599]: no function or associated item named `b` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:80:8\n@@ -81,13 +85,15 @@ error[E0599]: no associated item named `A` found for struct `S` in the current s\n LL | struct S;\n    | --------- associated item `A` not found for this\n ...\n-LL |     trait A {\n-   |     ------- `assoc_const::A` defines an item `A`, perhaps you need to implement it\n-...\n LL |     S::A;\n    |        ^ associated item not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `assoc_const::A` defines an item `A`, perhaps you need to implement it\n+  --> $DIR/trait-item-privacy.rs:24:5\n+   |\n+LL |     trait A {\n+   |     ^^^^^^^\n \n error[E0599]: no associated item named `B` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:98:8"}, {"sha": "4e153081d9fe96a286332ba9f3311c0588839131", "filename": "src/test/ui/trivial-bounds/trivial-bounds-leak.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -11,13 +11,15 @@ LL | fn cant_return_str() -> str {\n error[E0599]: no method named `test` found for type `i32` in the current scope\n   --> $DIR/trivial-bounds-leak.rs:24:10\n    |\n-LL | pub trait Foo {\n-   | ------------- `Foo` defines an item `test`, perhaps you need to implement it\n-...\n LL |     3i32.test();\n    |          ^^^^ method not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n+note: `Foo` defines an item `test`, perhaps you need to implement it\n+  --> $DIR/trivial-bounds-leak.rs:4:1\n+   |\n+LL | pub trait Foo {\n+   | ^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `i32: Foo` is not satisfied\n   --> $DIR/trivial-bounds-leak.rs:25:15"}, {"sha": "1c5fed2c33b4d56ce6f03bb4e5b33bd5944253c7", "filename": "src/test/ui/unique-object-noncopyable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c764a82310fe5dcec5586d5a6afb87a8a29f62c0/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr?ref=c764a82310fe5dcec5586d5a6afb87a8a29f62c0", "patch": "@@ -16,10 +16,10 @@ LL | pub struct Box<T: ?Sized>(Unique<T>);\n    | ------------------------------------- doesn't satisfy `std::boxed::Box<dyn Foo>: std::clone::Clone`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n-           `dyn Foo: std::clone::Clone`\n-           which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n            `dyn Foo: std::marker::Sized`\n            which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n+           `dyn Foo: std::clone::Clone`\n+           which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:\n            candidate #1: `std::clone::Clone`"}]}