{"sha": "6f0c742b001e7861099e1048c4f0cd08f0528774", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMGM3NDJiMDAxZTc4NjEwOTllMTA0OGM0ZjBjZDA4ZjA1Mjg3NzQ=", "commit": {"author": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-03-26T12:13:37Z"}, "committer": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-03-26T12:35:12Z"}, "message": "Expanded and added links to std::net::{SocketAddr,SocketAddrV4,SocketAddrV6} docs\n\nPart of #29363\nChanged summary sentences of SocketAddr and IpAddr for consistency\nLinked to SocketAddrV4 and SocketAddrV6 from SocketAddr, moving explaination\nthere\nExpanded top-level docs for SocketAddrV4 and SocketAddrV6, linking to some\nrelevant IETF RFCs, and linking back to SocketAddr\nChanged some of the method summaries to third person as per RFC 1574; added\nlinks to IETF RFCs where appropriate", "tree": {"sha": "068b77bbdd0dee45feadfb0d278b2833cc54d9e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/068b77bbdd0dee45feadfb0d278b2833cc54d9e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0c742b001e7861099e1048c4f0cd08f0528774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0c742b001e7861099e1048c4f0cd08f0528774", "html_url": "https://github.com/rust-lang/rust/commit/6f0c742b001e7861099e1048c4f0cd08f0528774", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0c742b001e7861099e1048c4f0cd08f0528774/comments", "author": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be713fa4bf12cf87a799dddfd29ab095a548fd01", "url": "https://api.github.com/repos/rust-lang/rust/commits/be713fa4bf12cf87a799dddfd29ab095a548fd01", "html_url": "https://github.com/rust-lang/rust/commit/be713fa4bf12cf87a799dddfd29ab095a548fd01"}], "stats": {"total": 116, "additions": 90, "deletions": 26}, "files": [{"sha": "6584531a92a2a8f9499286880922a3415c86b740", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 89, "deletions": 25, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/6f0c742b001e7861099e1048c4f0cd08f0528774/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0c742b001e7861099e1048c4f0cd08f0528774/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=6f0c742b001e7861099e1048c4f0cd08f0528774", "patch": "@@ -20,34 +20,57 @@ use vec;\n use iter;\n use slice;\n \n-/// Representation of a socket address for networking applications.\n+/// An internet socket address, either IPv4 or IPv6.\n ///\n-/// A socket address can either represent the IPv4 or IPv6 protocol and is\n-/// paired with at least a port number as well. Each protocol may have more\n-/// specific information about the address available to it as well.\n+/// This enum can contain either an [`SocketAddrV4`] or an [`SocketAddrV6`]. see their\n+/// respective documentation for more details.\n+///\n+/// [`SocketAddrV4`]: ../../std/net/struct.SocketAddrV4.html\n+/// [`SocketAddrV6`]: ../../std/net/struct.SocketAddrV6.html\n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum SocketAddr {\n-    /// An IPv4 socket address which is a (ip, port) combination.\n+    /// An IPv4 socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     V4(#[stable(feature = \"rust1\", since = \"1.0.0\")] SocketAddrV4),\n     /// An IPv6 socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     V6(#[stable(feature = \"rust1\", since = \"1.0.0\")] SocketAddrV6),\n }\n \n-/// An IPv4 socket address which is a (ip, port) combination.\n+/// An IPv4 socket address.\n+///\n+/// IPv4 socket addresses consist of an [IPv4 address] and a 16-bit port number, as\n+/// stated in [IETF RFC 793].\n+///\n+/// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n+///\n+/// [IETF RFC 793]: https://tools.ietf.org/html/rfc793\n+/// [IPv4 address]: ../../std/net/struct.Ipv4Addr.html\n+/// [`SocketAddr`]: ../../std/net/enum.SocketAddr.html\n #[derive(Copy)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV4 { inner: c::sockaddr_in }\n \n /// An IPv6 socket address.\n+///\n+/// IPv6 socket addresses consist of an [Ipv6 address], a 16-bit port number, as well\n+/// as fields containing the traffic class, the flow label, and a scope identifier\n+/// (see [IETF RFC 2553, Section 3.3] for more details).\n+///\n+/// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n+///\n+/// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n+/// [IPv6 address]: ../../std/net/struct.Ipv6Addr.html\n+/// [`SocketAddr`]: ../../std/net/enum.SocketAddr.html\n #[derive(Copy)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV6 { inner: c::sockaddr_in6 }\n \n impl SocketAddr {\n-    /// Creates a new socket address from the (ip, port) pair.\n+    /// Creates a new socket address from an [IP address] and a port number.\n+    ///\n+    /// [IP address]: ../../std/net/enum.IpAddr.html\n     ///\n     /// # Examples\n     ///\n@@ -84,7 +107,7 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Change the IP address associated with this socket address.\n+    /// Changes the IP address associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -123,7 +146,7 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Change the port number associated with this socket address.\n+    /// Changes the port number associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -142,8 +165,14 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Returns true if the IP in this `SocketAddr` is a valid IPv4 address,\n-    /// false if it's a valid IPv6 address.\n+    /// Returns [`true`] if the [IP address] in this `SocketAddr` is an\n+    /// [IPv4 address] and [`false`] if it's an [IPv6 address].\n+    ///\n+    /// [`true`]: ../../std/primitive.bool.html\n+    /// [`false`]: ../../std/primitive.bool.html\n+    /// [IP address]: ../../std/net/enum.IpAddr.html\n+    /// [IPv4 address]: ../../std/net/enum.IpAddr.html#variant.V4\n+    /// [IPv6 address]: ../../std/net/enum.IpAddr.html#variant.V6\n     ///\n     /// # Examples\n     ///\n@@ -164,8 +193,14 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Returns true if the IP in this `SocketAddr` is a valid IPv6 address,\n-    /// false if it's a valid IPv4 address.\n+    /// Returns [`true`] if the [IP address] in this `SocketAddr` is an\n+    /// [IPv6 address] and [`false`] if it's an [IPv4 address].\n+    ///\n+    /// [`true`]: ../../std/primitive.bool.html\n+    /// [`false`]: ../../std/primitive.bool.html\n+    /// [IP address]: ../../std/net/enum.IpAddr.html\n+    /// [IPv4 address]: ../../std/net/enum.IpAddr.html#variant.V4\n+    /// [IPv6 address]: ../../std/net/enum.IpAddr.html#variant.V6\n     ///\n     /// # Examples\n     ///\n@@ -189,7 +224,9 @@ impl SocketAddr {\n }\n \n impl SocketAddrV4 {\n-    /// Creates a new socket address from the (ip, port) pair.\n+    /// Creates a new socket address from an [IPv4 address] and a port number.\n+    ///\n+    /// [IPv4 address]: ../../std/net/struct.Ipv4Addr.html\n     ///\n     /// # Examples\n     ///\n@@ -227,7 +264,7 @@ impl SocketAddrV4 {\n         }\n     }\n \n-    /// Change the IP address associated with this socket address.\n+    /// Changes the IP address associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -258,7 +295,7 @@ impl SocketAddrV4 {\n         ntoh(self.inner.sin_port)\n     }\n \n-    /// Change the port number associated with this socket address.\n+    /// Changes the port number associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -276,8 +313,14 @@ impl SocketAddrV4 {\n }\n \n impl SocketAddrV6 {\n-    /// Creates a new socket address from the ip/port/flowinfo/scope_id\n-    /// components.\n+    /// Creates a new socket address from an [IPv6 address], a 16-bit port number,\n+    /// and the `flowinfo` and `scope_id` fields.\n+    ///\n+    /// For more information on the meaning and layout of the `flowinfo` and `scope_id`\n+    /// parameters, see [IETF RFC 2553, Section 3.3].\n+    ///\n+    /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n+    /// [IPv6 address]: ../../std/net/struct.Ipv6Addr.html\n     ///\n     /// # Examples\n     ///\n@@ -318,7 +361,7 @@ impl SocketAddrV6 {\n         }\n     }\n \n-    /// Change the IP address associated with this socket address.\n+    /// Changes the IP address associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -349,7 +392,7 @@ impl SocketAddrV6 {\n         ntoh(self.inner.sin6_port)\n     }\n \n-    /// Change the port number associated with this socket address.\n+    /// Changes the port number associated with this socket address.\n     ///\n     /// # Examples\n     ///\n@@ -365,8 +408,17 @@ impl SocketAddrV6 {\n         self.inner.sin6_port = hton(new_port);\n     }\n \n-    /// Returns the flow information associated with this address,\n-    /// corresponding to the `sin6_flowinfo` field in C.\n+    /// Returns the flow information associated with this address.\n+    ///\n+    /// This information corresponds to the `sin6_flowinfo` field in C, as specified in\n+    /// [IETF RFC 2553, Section 3.3]. It combines information about the flow label and\n+    /// the traffic class as specified in [IETF RFC 2460], respectively [Section 6] and\n+    /// [Section 7].\n+    ///\n+    /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n+    /// [IETF RFC 2460]: https://tools.ietf.org/html/rfc2460\n+    /// [Section 6]: https://tools.ietf.org/html/rfc2460#section-6\n+    /// [Section 7]: https://tools.ietf.org/html/rfc2460#section-7\n     ///\n     /// # Examples\n     ///\n@@ -381,7 +433,11 @@ impl SocketAddrV6 {\n         self.inner.sin6_flowinfo\n     }\n \n-    /// Change the flow information associated with this socket address.\n+    /// Changes the flow information associated with this socket address.\n+    ///\n+    /// See the [`flowinfo`] method's documentation for more details.\n+    ///\n+    /// [`flowinfo`]: #method.flowinfo\n     ///\n     /// # Examples\n     ///\n@@ -397,8 +453,12 @@ impl SocketAddrV6 {\n         self.inner.sin6_flowinfo = new_flowinfo;\n     }\n \n-    /// Returns the scope ID associated with this address,\n-    /// corresponding to the `sin6_scope_id` field in C.\n+    /// Returns the scope ID associated with this address.\n+    ///\n+    /// This information corresponds to the `sin6_scope_id` field in C, as specified in\n+    /// [IETF RFC 2553, Section 3.3].\n+    ///\n+    /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n     ///\n     /// # Examples\n     ///\n@@ -415,6 +475,10 @@ impl SocketAddrV6 {\n \n     /// Change the scope ID associated with this socket address.\n     ///\n+    /// See the [`scope_id`] method's documentation for more details.\n+    ///\n+    /// [`scope_id`]: #method.scope_id\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "85803ff0501d4ded5b30581ba77f717792da85e6", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f0c742b001e7861099e1048c4f0cd08f0528774/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0c742b001e7861099e1048c4f0cd08f0528774/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=6f0c742b001e7861099e1048c4f0cd08f0528774", "patch": "@@ -21,7 +21,7 @@ use net::{hton, ntoh};\n use sys::net::netc as c;\n use sys_common::{AsInner, FromInner};\n \n-/// Either an IPv4 address or an IPv6 address.\n+/// An IP address, either IPv4 or IPv6.\n ///\n /// This enum can contain either an [`Ipv4Addr`] or an [`Ipv6Addr`], see their\n /// respective documentation for more details."}]}