{"sha": "b74a0f960a6cecec889d8fff46921e621d5b81f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NGEwZjk2MGE2Y2VjZWM4ODlkOGZmZjQ2OTIxZTYyMWQ1YjgxZjY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-01T10:39:00Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-01T10:39:00Z"}, "message": "Implement StringFormat::new()", "tree": {"sha": "d5bd185b52c442956659f5e7b2a64bc9b6f18c00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5bd185b52c442956659f5e7b2a64bc9b6f18c00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b74a0f960a6cecec889d8fff46921e621d5b81f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b74a0f960a6cecec889d8fff46921e621d5b81f6", "html_url": "https://github.com/rust-lang/rust/commit/b74a0f960a6cecec889d8fff46921e621d5b81f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b74a0f960a6cecec889d8fff46921e621d5b81f6/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "html_url": "https://github.com/rust-lang/rust/commit/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "c7a71cde69b292db8e3bf5dae2fac25735074418", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b74a0f960a6cecec889d8fff46921e621d5b81f6/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74a0f960a6cecec889d8fff46921e621d5b81f6/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b74a0f960a6cecec889d8fff46921e621d5b81f6", "patch": "@@ -1976,20 +1976,10 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n         return Some(string_lit);\n     }\n \n-    let fmt = StringFormat {\n-        opener: \"\\\"\",\n-        closer: \"\\\"\",\n-        line_start: \" \",\n-        line_end: \"\\\\\",\n-        shape: shape,\n-        trim_end: false,\n-        config: context.config,\n-    };\n-\n     // Remove the quote characters.\n     let str_lit = &string_lit[1..string_lit.len() - 1];\n \n-    rewrite_string(str_lit, &fmt)\n+    rewrite_string(str_lit, &StringFormat::new(shape, context.config))\n }\n \n fn string_requires_rewrite("}, {"sha": "efec7ff23778254ed2851421100a910ffff3aa44", "filename": "src/string.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b74a0f960a6cecec889d8fff46921e621d5b81f6/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74a0f960a6cecec889d8fff46921e621d5b81f6/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=b74a0f960a6cecec889d8fff46921e621d5b81f6", "patch": "@@ -29,6 +29,20 @@ pub struct StringFormat<'a> {\n     pub config: &'a Config,\n }\n \n+impl<'a> StringFormat<'a> {\n+    pub fn new(shape: Shape, config: &'a Config) -> StringFormat<'a> {\n+        StringFormat {\n+            opener: \"\\\"\",\n+            closer: \"\\\"\",\n+            line_start: \" \",\n+            line_end: \"\\\\\",\n+            shape: shape,\n+            trim_end: false,\n+            config: config,\n+        }\n+    }\n+}\n+\n // FIXME: simplify this!\n pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String> {\n     // Strip line breaks.\n@@ -133,16 +147,7 @@ mod test {\n     #[test]\n     fn issue343() {\n         let config = Default::default();\n-        let fmt = StringFormat {\n-            opener: \"\\\"\",\n-            closer: \"\\\"\",\n-            line_start: \" \",\n-            line_end: \"\\\\\",\n-            shape: Shape::legacy(2, Indent::empty()),\n-            trim_end: false,\n-            config: &config,\n-        };\n-\n+        let fmt = StringFormat::new(Shape::legacy(2, Indent::empty()), &config);\n         rewrite_string(\"eq_\", &fmt);\n     }\n }"}]}