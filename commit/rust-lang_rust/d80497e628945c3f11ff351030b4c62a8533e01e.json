{"sha": "d80497e628945c3f11ff351030b4c62a8533e01e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDQ5N2U2Mjg5NDVjM2YxMWZmMzUxMDMwYjRjNjJhODUzM2UwMWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-02T16:16:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-02T16:16:23Z"}, "message": "Auto merge of #33308 - ollie27:wingnu_jemalloc, r=alexcrichton\n\nFix alloc_jemalloc on windows gnu targets\n\njemalloc prefixes the symbols by default on Windows so we need to account\nfor that to avoid link errors such as: `undefined reference to 'mallocx'`\nwhen using alloc_jemalloc.", "tree": {"sha": "d6506c5d97fa9d6b4285e30959a52ee83df684f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6506c5d97fa9d6b4285e30959a52ee83df684f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d80497e628945c3f11ff351030b4c62a8533e01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d80497e628945c3f11ff351030b4c62a8533e01e", "html_url": "https://github.com/rust-lang/rust/commit/d80497e628945c3f11ff351030b4c62a8533e01e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d80497e628945c3f11ff351030b4c62a8533e01e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eb575c702f56735d8bc6c3d76cb4d9bdeb13e84", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb575c702f56735d8bc6c3d76cb4d9bdeb13e84", "html_url": "https://github.com/rust-lang/rust/commit/0eb575c702f56735d8bc6c3d76cb4d9bdeb13e84"}, {"sha": "e8cbcef86e33b7d3ffeda9be8797eebaac3eac28", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8cbcef86e33b7d3ffeda9be8797eebaac3eac28", "html_url": "https://github.com/rust-lang/rust/commit/e8cbcef86e33b7d3ffeda9be8797eebaac3eac28"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7651d91c06d6bb55d2368cd247a011e483d50c56", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d80497e628945c3f11ff351030b4c62a8533e01e/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d80497e628945c3f11ff351030b4c62a8533e01e/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=d80497e628945c3f11ff351030b4c62a8533e01e", "patch": "@@ -41,28 +41,28 @@ use libc::{c_int, c_void, size_t};\n #[cfg(not(cargobuild))]\n extern {}\n \n-// Note that the symbols here are prefixed by default on OSX (we don't\n-// explicitly request it), and on Android and DragonFly we explicitly request\n-// it as unprefixing cause segfaults (mismatches in allocators).\n+// Note that the symbols here are prefixed by default on OSX and Windows (we\n+// don't explicitly request it), and on Android and DragonFly we explicitly\n+// request it as unprefixing cause segfaults (mismatches in allocators).\n extern {\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                   target_os = \"dragonfly\"),\n+                   target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_mallocx\")]\n     fn mallocx(size: size_t, flags: c_int) -> *mut c_void;\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                   target_os = \"dragonfly\"),\n+                   target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_rallocx\")]\n     fn rallocx(ptr: *mut c_void, size: size_t, flags: c_int) -> *mut c_void;\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                   target_os = \"dragonfly\"),\n+                   target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_xallocx\")]\n     fn xallocx(ptr: *mut c_void, size: size_t, extra: size_t, flags: c_int) -> size_t;\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                   target_os = \"dragonfly\"),\n+                   target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_sdallocx\")]\n     fn sdallocx(ptr: *mut c_void, size: size_t, flags: c_int);\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                   target_os = \"dragonfly\"),\n+                   target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_nallocx\")]\n     fn nallocx(size: size_t, flags: c_int) -> size_t;\n }"}]}