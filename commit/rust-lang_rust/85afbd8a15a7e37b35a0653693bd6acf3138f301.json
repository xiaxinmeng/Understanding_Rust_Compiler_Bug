{"sha": "85afbd8a15a7e37b35a0653693bd6acf3138f301", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YWZiZDhhMTVhN2UzN2IzNWEwNjUzNjkzYmQ2YWNmMzEzOGYzMDE=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-10-17T16:47:58Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-10-17T16:47:58Z"}, "message": "Rebase conflicts", "tree": {"sha": "733789fe8d74ea34552f3a1e64b9c24a38e07752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/733789fe8d74ea34552f3a1e64b9c24a38e07752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85afbd8a15a7e37b35a0653693bd6acf3138f301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85afbd8a15a7e37b35a0653693bd6acf3138f301", "html_url": "https://github.com/rust-lang/rust/commit/85afbd8a15a7e37b35a0653693bd6acf3138f301", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85afbd8a15a7e37b35a0653693bd6acf3138f301/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af560ecefe7c092f9584e20e43800b52bee4795", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af560ecefe7c092f9584e20e43800b52bee4795", "html_url": "https://github.com/rust-lang/rust/commit/4af560ecefe7c092f9584e20e43800b52bee4795"}], "stats": {"total": 62, "additions": 30, "deletions": 32}, "files": [{"sha": "705f0d62fbb7a8643f497a21c832d4aaf87883f3", "filename": "library/alloc/tests/vec_deque.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/85afbd8a15a7e37b35a0653693bd6acf3138f301/library%2Falloc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85afbd8a15a7e37b35a0653693bd6acf3138f301/library%2Falloc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec_deque.rs?ref=85afbd8a15a7e37b35a0653693bd6acf3138f301", "patch": "@@ -1698,3 +1698,33 @@ fn test_binary_search_by_key() {\n     assert_eq!(deque.binary_search_by_key(&3, |&(v,)| v), Ok(2));\n     assert_eq!(deque.binary_search_by_key(&4, |&(v,)| v), Err(3));\n }\n+\n+#[test]\n+fn test_zero_sized_push() {\n+    const N: usize = 8;\n+\n+    // Zero sized type\n+    struct Zst;\n+\n+    // Test that for all possible sequences of push_front / push_back,\n+    // we end up with a deque of the correct size\n+\n+    for len in 0..N {\n+        let mut tester = VecDeque::with_capacity(len);\n+        assert_eq!(tester.len(), 0);\n+        assert!(tester.capacity() >= len);\n+        for case in 0..(1 << len) {\n+            assert_eq!(tester.len(), 0);\n+            for bit in 0..len {\n+                if case & (1 << bit) != 0 {\n+                    tester.push_front(Zst);\n+                } else {\n+                    tester.push_back(Zst);\n+                }\n+            }\n+            assert_eq!(tester.len(), len);\n+            assert_eq!(tester.iter().count(), len);\n+            tester.clear();\n+        }\n+    }\n+}"}, {"sha": "c541208703b6b0cb03cb197eef469f61315f088d", "filename": "src/test/ui/zero-sized/zero-sized-vec-deque-push.rs", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4af560ecefe7c092f9584e20e43800b52bee4795/src%2Ftest%2Fui%2Fzero-sized%2Fzero-sized-vec-deque-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4af560ecefe7c092f9584e20e43800b52bee4795/src%2Ftest%2Fui%2Fzero-sized%2Fzero-sized-vec-deque-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fzero-sized%2Fzero-sized-vec-deque-push.rs?ref=4af560ecefe7c092f9584e20e43800b52bee4795", "patch": "@@ -1,32 +0,0 @@\n-// run-pass\n-use std::collections::VecDeque;\n-use std::iter::Iterator;\n-\n-fn main() {\n-    const N: usize = 8;\n-\n-    // Zero sized type\n-    struct Zst;\n-\n-    // Test that for all possible sequences of push_front / push_back,\n-    // we end up with a deque of the correct size\n-\n-    for len in 0..N {\n-        let mut tester = VecDeque::with_capacity(len);\n-        assert_eq!(tester.len(), 0);\n-        assert!(tester.capacity() >= len);\n-        for case in 0..(1 << len) {\n-            assert_eq!(tester.len(), 0);\n-            for bit in 0..len {\n-                if case & (1 << bit) != 0 {\n-                    tester.push_front(Zst);\n-                } else {\n-                    tester.push_back(Zst);\n-                }\n-            }\n-            assert_eq!(tester.len(), len);\n-            assert_eq!(tester.iter().count(), len);\n-            tester.clear();\n-        }\n-    }\n-}"}]}