{"sha": "4c8b39d97346751552c2916e60823942ceae0228", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOGIzOWQ5NzM0Njc1MTU1MmMyOTE2ZTYwODIzOTQyY2VhZTAyMjg=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-28T18:13:21Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-28T18:13:21Z"}, "message": "rustbuild: sort rules by the order of matching CLI paths.", "tree": {"sha": "7b3a3a082d10f64a424153773eb460780c646a33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b3a3a082d10f64a424153773eb460780c646a33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c8b39d97346751552c2916e60823942ceae0228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8b39d97346751552c2916e60823942ceae0228", "html_url": "https://github.com/rust-lang/rust/commit/4c8b39d97346751552c2916e60823942ceae0228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c8b39d97346751552c2916e60823942ceae0228/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "146c462e1af804c56542f2e33e6769d388d04f04", "url": "https://api.github.com/repos/rust-lang/rust/commits/146c462e1af804c56542f2e33e6769d388d04f04", "html_url": "https://github.com/rust-lang/rust/commit/146c462e1af804c56542f2e33e6769d388d04f04"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "af99eea3ffb37973a0827abf68a76038656f4735", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4c8b39d97346751552c2916e60823942ceae0228/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8b39d97346751552c2916e60823942ceae0228/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=4c8b39d97346751552c2916e60823942ceae0228", "patch": "@@ -985,6 +985,8 @@ invalid rule dependency graph detected, was a rule added and maybe typo'd?\n         // 2. Next, we determine which rules we're actually executing. If a\n         //    number of path filters were specified on the command line we look\n         //    for those, otherwise we look for anything tagged `default`.\n+        //    Here we also compute the priority of each rule based on how early\n+        //    in the command line the matching path filter showed up.\n         //\n         // 3. Finally, we generate some steps with host and target information.\n         //\n@@ -1015,11 +1017,22 @@ invalid rule dependency graph detected, was a rule added and maybe typo'd?\n             Subcommand::Clean => panic!(),\n         };\n \n-        self.rules.values().filter(|rule| rule.kind == kind).filter(|rule| {\n-            (paths.len() == 0 && rule.default) || paths.iter().any(|path| {\n-                path.ends_with(rule.path)\n-            })\n-        }).flat_map(|rule| {\n+        let mut rules: Vec<_> = self.rules.values().filter_map(|rule| {\n+            if rule.kind != kind {\n+                return None;\n+            }\n+\n+            if paths.len() == 0 && rule.default {\n+                Some((rule, 0))\n+            } else {\n+                paths.iter().position(|path| path.ends_with(rule.path))\n+                     .map(|priority| (rule, priority))\n+            }\n+        }).collect();\n+\n+        rules.sort_by_key(|&(_, priority)| priority);\n+\n+        rules.into_iter().flat_map(|(rule, _)| {\n             let hosts = if rule.only_host_build || rule.only_build {\n                 &self.build.config.host[..1]\n             } else if self.build.flags.host.len() > 0 {"}]}