{"sha": "3bcba11c353c15f3e8d95d330cb1fa98bacc652d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiY2JhMTFjMzUzYzE1ZjNlOGQ5NWQzMzBjYjFmYTk4YmFjYzY1MmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-23T09:53:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-23T09:53:23Z"}, "message": "reject deallocation of read-only allocations", "tree": {"sha": "c3ade2aaaacadd7cdef37543ef2b6ced0ccdaef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3ade2aaaacadd7cdef37543ef2b6ced0ccdaef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bcba11c353c15f3e8d95d330cb1fa98bacc652d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcba11c353c15f3e8d95d330cb1fa98bacc652d", "html_url": "https://github.com/rust-lang/rust/commit/3bcba11c353c15f3e8d95d330cb1fa98bacc652d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bcba11c353c15f3e8d95d330cb1fa98bacc652d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e92fb409816c65cd0a78a1fbcc71e2fbabdf50a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e92fb409816c65cd0a78a1fbcc71e2fbabdf50a", "html_url": "https://github.com/rust-lang/rust/commit/6e92fb409816c65cd0a78a1fbcc71e2fbabdf50a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c20607b39a163f1560c47229aaa8c4e83a7aa6eb", "filename": "compiler/rustc_mir/src/interpret/memory.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3bcba11c353c15f3e8d95d330cb1fa98bacc652d/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcba11c353c15f3e8d95d330cb1fa98bacc652d/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs?ref=3bcba11c353c15f3e8d95d330cb1fa98bacc652d", "patch": "@@ -321,6 +321,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n             }\n         };\n \n+        if alloc.mutability == Mutability::Not {\n+            throw_ub_format!(\"deallocating immutable allocation {}\", ptr.alloc_id);\n+        }\n         if alloc_kind != kind {\n             throw_ub_format!(\n                 \"deallocating {}, which is {} memory, using {} deallocation operation\","}]}