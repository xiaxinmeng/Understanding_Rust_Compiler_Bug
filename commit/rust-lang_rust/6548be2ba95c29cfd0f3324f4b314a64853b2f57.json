{"sha": "6548be2ba95c29cfd0f3324f4b314a64853b2f57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NDhiZTJiYTk1YzI5Y2ZkMGYzMzI0ZjRiMzE0YTY0ODUzYjJmNTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-02T10:45:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-06T21:41:49Z"}, "message": "'fieldless enums' is not what I meant -- it's empty/uninhabited enums, really", "tree": {"sha": "fdf666c647181daf00ba4e3cb54cec64a62b7239", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdf666c647181daf00ba4e3cb54cec64a62b7239"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6548be2ba95c29cfd0f3324f4b314a64853b2f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6548be2ba95c29cfd0f3324f4b314a64853b2f57", "html_url": "https://github.com/rust-lang/rust/commit/6548be2ba95c29cfd0f3324f4b314a64853b2f57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6548be2ba95c29cfd0f3324f4b314a64853b2f57/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96bb8b31c81dc2394317f2f083c3acf8087efea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/96bb8b31c81dc2394317f2f083c3acf8087efea1", "html_url": "https://github.com/rust-lang/rust/commit/96bb8b31c81dc2394317f2f083c3acf8087efea1"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8989da9a91a8a0aefa6ba951e9116734d8ce0a26", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6548be2ba95c29cfd0f3324f4b314a64853b2f57/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6548be2ba95c29cfd0f3324f4b314a64853b2f57/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=6548be2ba95c29cfd0f3324f4b314a64853b2f57", "patch": "@@ -579,13 +579,12 @@ impl<'rt, 'mir, 'tcx, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n         }\n \n         // Check primitive types.  We do this after checking for uninhabited types,\n-        // to exclude fieldless enums (that also appear as fieldless unions here).\n+        // to exclude uninhabited enums (that also appear as fieldless unions here).\n         // Primitives can have varying layout, so we check them separately and before aggregate\n         // handling.\n         // It is CRITICAL that we get this check right, or we might be validating the wrong thing!\n         let primitive = match op.layout.fields {\n             // Primitives appear as Union with 0 fields - except for Boxes and fat pointers.\n-            // (Fieldless enums also appear here, but they are uninhabited and thus handled above.)\n             layout::FieldPlacement::Union(0) => true,\n             _ => op.layout.ty.builtin_deref(true).is_some(),\n         };"}, {"sha": "316e07425c528ddfbbf132d815921b4ad8bbb8c9", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6548be2ba95c29cfd0f3324f4b314a64853b2f57/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6548be2ba95c29cfd0f3324f4b314a64853b2f57/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=6548be2ba95c29cfd0f3324f4b314a64853b2f57", "patch": "@@ -872,7 +872,7 @@ impl Niche {\n #[derive(PartialEq, Eq, Hash, Debug, HashStable_Generic)]\n pub struct LayoutDetails {\n     /// Says where the fields are located within the layout.\n-    /// Primitives and fieldless enums appear as unions without fields.\n+    /// Primitives and uninhabited enums appear as unions without fields.\n     pub fields: FieldPlacement,\n \n     /// Encodes information about multi-variant layouts."}]}