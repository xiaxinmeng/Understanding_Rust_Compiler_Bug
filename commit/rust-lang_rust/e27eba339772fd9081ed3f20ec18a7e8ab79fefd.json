{"sha": "e27eba339772fd9081ed3f20ec18a7e8ab79fefd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyN2ViYTMzOTc3MmZkOTA4MWVkM2YyMGVjMThhN2U4YWI3OWZlZmQ=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-02-28T22:07:05Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-02-28T22:07:05Z"}, "message": "Add a test in src/test/rustdoc/doc-cfg.rs", "tree": {"sha": "a83c57c090b692999921a37160b3699020787f71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83c57c090b692999921a37160b3699020787f71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e27eba339772fd9081ed3f20ec18a7e8ab79fefd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e27eba339772fd9081ed3f20ec18a7e8ab79fefd", "html_url": "https://github.com/rust-lang/rust/commit/e27eba339772fd9081ed3f20ec18a7e8ab79fefd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e27eba339772fd9081ed3f20ec18a7e8ab79fefd/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b89e828c0427f40b2c093c1dc80ee1184a8fd46f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b89e828c0427f40b2c093c1dc80ee1184a8fd46f", "html_url": "https://github.com/rust-lang/rust/commit/b89e828c0427f40b2c093c1dc80ee1184a8fd46f"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "89a61a289fdebb5f00a0c0453202523a83828d3f", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e27eba339772fd9081ed3f20ec18a7e8ab79fefd/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e27eba339772fd9081ed3f20ec18a7e8ab79fefd/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=e27eba339772fd9081ed3f20ec18a7e8ab79fefd", "patch": "@@ -5,6 +5,8 @@\n // @!has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' ''\n // @has - '//*[@id=\"method.unix_and_arm_only_function\"]' 'fn unix_and_arm_only_function()'\n // @has - '//*[@class=\"stab portability\"]' 'This is supported on Unix and ARM only.'\n+// @has - '//*[@id=\"method.wasi_and_wasm32_only_function\"]' 'fn wasi_and_wasm32_only_function()'\n+// @has - '//*[@class=\"stab portability\"]' 'This is supported on WASI and WebAssembly only.'\n pub struct Portable;\n \n // @has doc_cfg/unix_only/index.html \\\n@@ -37,6 +39,36 @@ pub mod unix_only {\n     }\n }\n \n+// @has doc_cfg/wasi_only/index.html \\\n+//  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n+//  'This is supported on WASI only.'\n+// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AWebAssembly\\Z'\n+// @count - '//*[@class=\"stab portability\"]' 2\n+#[doc(cfg(target_os = \"wasi\"))]\n+pub mod wasi_only {\n+    // @has doc_cfg/wasi_only/fn.wasi_only_function.html \\\n+    //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n+    //  'This is supported on WASI only.'\n+    // @count - '//*[@class=\"stab portability\"]' 1\n+    pub fn wasi_only_function() {\n+        content::should::be::irrelevant();\n+    }\n+\n+    // @has doc_cfg/wasi_only/trait.Wasm32Only.html \\\n+    //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n+    //  'This is supported on WASI and WebAssembly only.'\n+    // @count - '//*[@class=\"stab portability\"]' 1\n+    #[doc(cfg(target_arch = \"wasm32\"))]\n+    pub trait Wasm32Only {\n+        fn wasi_and_wasm32_only_function();\n+    }\n+\n+    #[doc(cfg(target_arch = \"wasm32\"))]\n+    impl Wasm32Only for super::Portable {\n+        fn wasi_and_wasm32_only_function() {}\n+    }\n+}\n+\n // tagging a function with `#[target_feature]` creates a doc(cfg(target_feature)) node for that\n // item as well\n "}]}