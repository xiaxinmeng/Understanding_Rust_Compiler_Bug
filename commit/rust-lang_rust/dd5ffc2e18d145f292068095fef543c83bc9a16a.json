{"sha": "dd5ffc2e18d145f292068095fef543c83bc9a16a", "node_id": "C_kwDOAAsO6NoAKGRkNWZmYzJlMThkMTQ1ZjI5MjA2ODA5NWZlZjU0M2M4M2JjOWExNmE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-17T19:29:06Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T14:56:07Z"}, "message": "Split out lib_call_unadjusted function", "tree": {"sha": "08056dcc748666489457af349f09a4cbaf013e4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08056dcc748666489457af349f09a4cbaf013e4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd5ffc2e18d145f292068095fef543c83bc9a16a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ffc2e18d145f292068095fef543c83bc9a16a", "html_url": "https://github.com/rust-lang/rust/commit/dd5ffc2e18d145f292068095fef543c83bc9a16a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ffc2e18d145f292068095fef543c83bc9a16a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54648091dd65ecc2b414399916d6fea96ab4d0a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/54648091dd65ecc2b414399916d6fea96ab4d0a9", "html_url": "https://github.com/rust-lang/rust/commit/54648091dd65ecc2b414399916d6fea96ab4d0a9"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "55c5d6d7a8b48ed062e1ba6eb7855feb4f08d2b5", "filename": "src/abi/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dd5ffc2e18d145f292068095fef543c83bc9a16a/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd5ffc2e18d145f292068095fef543c83bc9a16a/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=dd5ffc2e18d145f292068095fef543c83bc9a16a", "patch": "@@ -149,13 +149,23 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n                         size: 16,\n                     }));\n                 args.insert(0, ret_ptr.get_addr(self));\n-                self.lib_call(name, params, vec![], &args);\n+                self.lib_call_unadjusted(name, params, vec![], &args);\n                 return Cow::Owned(vec![ret_ptr.load(self, types::I128, MemFlags::trusted())]);\n             } else {\n-                return self.lib_call(name, params, returns, &args);\n+                return self.lib_call_unadjusted(name, params, returns, &args);\n             }\n         }\n \n+        self.lib_call_unadjusted(name, params, returns, args)\n+    }\n+\n+    pub(crate) fn lib_call_unadjusted(\n+        &mut self,\n+        name: &str,\n+        params: Vec<AbiParam>,\n+        returns: Vec<AbiParam>,\n+        args: &[Value],\n+    ) -> Cow<'_, [Value]> {\n         let sig = Signature { params, returns, call_conv: self.target_config.default_call_conv };\n         let func_id = self.module.declare_function(name, Linkage::Import, &sig).unwrap();\n         let func_ref = self.module.declare_func_in_func(func_id, &mut self.bcx.func);"}]}