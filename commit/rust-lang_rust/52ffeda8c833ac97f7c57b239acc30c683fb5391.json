{"sha": "52ffeda8c833ac97f7c57b239acc30c683fb5391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZmZlZGE4YzgzM2FjOTdmN2M1N2IyMzlhY2MzMGM2ODNmYjUzOTE=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-14T01:22:02Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-15T18:27:57Z"}, "message": "Fix type retrieval for Switch translation\n\nPreviously it would go through def_id and retrieve a type that\u2019s not always correct, monomorphized,\netc.", "tree": {"sha": "cf4c6a6f8167c2323d197536773b1bf7823a0a7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4c6a6f8167c2323d197536773b1bf7823a0a7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52ffeda8c833ac97f7c57b239acc30c683fb5391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52ffeda8c833ac97f7c57b239acc30c683fb5391", "html_url": "https://github.com/rust-lang/rust/commit/52ffeda8c833ac97f7c57b239acc30c683fb5391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52ffeda8c833ac97f7c57b239acc30c683fb5391/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "html_url": "https://github.com/rust-lang/rust/commit/ac16d323c9381614e8eb8b466a8b768fc5d47bd9"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "ad5b0069a48d9b17ef578e9a1b996b439528c41e", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/52ffeda8c833ac97f7c57b239acc30c683fb5391/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52ffeda8c833ac97f7c57b239acc30c683fb5391/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=52ffeda8c833ac97f7c57b239acc30c683fb5391", "patch": "@@ -48,11 +48,10 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             }\n \n             mir::Terminator::Switch { ref discr, ref adt_def, ref targets } => {\n-                let adt_ty = bcx.tcx().lookup_item_type(adt_def.did).ty;\n-                let represented_ty = adt::represent_type(bcx.ccx(), adt_ty);\n-\n                 let discr_lvalue = self.trans_lvalue(bcx, discr);\n-                let discr = adt::trans_get_discr(bcx, &represented_ty, discr_lvalue.llval, None);\n+                let ty = discr_lvalue.ty.to_ty(bcx.tcx());\n+                let repr = adt::represent_type(bcx.ccx(), ty);\n+                let discr = adt::trans_get_discr(bcx, &repr, discr_lvalue.llval, None);\n \n                 // The else branch of the Switch can't be hit, so branch to an unreachable\n                 // instruction so LLVM knows that\n@@ -61,7 +60,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 let switch = build::Switch(bcx, discr, unreachable_blk.llbb, targets.len());\n                 assert_eq!(adt_def.variants.len(), targets.len());\n                 for (adt_variant, target) in adt_def.variants.iter().zip(targets) {\n-                    let llval = adt::trans_case(bcx, &*represented_ty, adt_variant.disr_val);\n+                    let llval = adt::trans_case(bcx, &*repr, adt_variant.disr_val);\n                     let llbb = self.llblock(*target);\n \n                     build::AddCase(switch, llval, llbb)"}]}