{"sha": "cf238fd057651371731fde47a2ebf251bf37cfb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMjM4ZmQwNTc2NTEzNzE3MzFmZGU0N2EyZWJmMjUxYmYzN2NmYjU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-07T00:01:01Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-16T08:11:30Z"}, "message": "Inline QueryAccessor::query.", "tree": {"sha": "20e5ba77f1e4f59ba4bb21d4d2ec53f423d71ccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e5ba77f1e4f59ba4bb21d4d2ec53f423d71ccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf238fd057651371731fde47a2ebf251bf37cfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf238fd057651371731fde47a2ebf251bf37cfb5", "html_url": "https://github.com/rust-lang/rust/commit/cf238fd057651371731fde47a2ebf251bf37cfb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf238fd057651371731fde47a2ebf251bf37cfb5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc82376bc437d4494832b171d924e2f116174578", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc82376bc437d4494832b171d924e2f116174578", "html_url": "https://github.com/rust-lang/rust/commit/fc82376bc437d4494832b171d924e2f116174578"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "29b9e0c3b40ef2c223cea26139f566743be23be2", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf238fd057651371731fde47a2ebf251bf37cfb5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf238fd057651371731fde47a2ebf251bf37cfb5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=cf238fd057651371731fde47a2ebf251bf37cfb5", "patch": "@@ -2,7 +2,7 @@ use crate::dep_graph::SerializedDepNodeIndex;\n use crate::dep_graph::{DepKind, DepNode};\n use crate::ty::query::caches::QueryCache;\n use crate::ty::query::plumbing::CycleError;\n-use crate::ty::query::{Query, QueryState};\n+use crate::ty::query::QueryState;\n use crate::ty::TyCtxt;\n use rustc_data_structures::profiling::ProfileCategory;\n use rustc_hir::def_id::DefId;\n@@ -32,8 +32,6 @@ pub(crate) trait QueryAccessors<'tcx>: QueryConfig<'tcx> {\n \n     type Cache: QueryCache<Self::Key, Self::Value>;\n \n-    fn query(key: Self::Key) -> Query<'tcx>;\n-\n     // Don't use this method to access query results, instead use the methods on TyCtxt\n     fn query_state<'a>(tcx: TyCtxt<'tcx>) -> &'a QueryState<'tcx, Self>;\n "}, {"sha": "32138b3e1d5fe3116bb6b698208f6fd1c0ba67be", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf238fd057651371731fde47a2ebf251bf37cfb5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf238fd057651371731fde47a2ebf251bf37cfb5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=cf238fd057651371731fde47a2ebf251bf37cfb5", "patch": "@@ -877,7 +877,7 @@ macro_rules! define_queries_inner {\n                                 };\n                                 let info = QueryInfo {\n                                     span: job.span,\n-                                    query: queries::$name::query(k.clone())\n+                                    query: Query::$name(k.clone())\n                                 };\n                                 Some((id, QueryJobInfo { info,  job: job.clone() }))\n                         } else {\n@@ -965,11 +965,6 @@ macro_rules! define_queries_inner {\n \n             type Cache = query_storage!([$($modifiers)*][$K, $V]);\n \n-            #[inline(always)]\n-            fn query(key: Self::Key) -> Query<'tcx> {\n-                Query::$name(key)\n-            }\n-\n             #[inline(always)]\n             fn query_state<'a>(tcx: TyCtxt<$tcx>) -> &'a QueryState<$tcx, Self> {\n                 &tcx.queries.$name"}]}