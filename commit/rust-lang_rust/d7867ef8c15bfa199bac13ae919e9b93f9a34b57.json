{"sha": "d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODY3ZWY4YzE1YmZhMTk5YmFjMTNhZTkxOWU5YjkzZjlhMzRiNTc=", "commit": {"author": {"name": "Laura Peskin", "email": "laura.peskin@gmail.com", "date": "2017-09-25T06:00:21Z"}, "committer": {"name": "Laura Peskin", "email": "laura.peskin@gmail.com", "date": "2017-09-25T06:00:21Z"}, "message": "add lint for mutable borrow; may have false positives. pushed for feedback", "tree": {"sha": "f6f8c6ec195dba091c03432110f19a6ff0b1c21a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6f8c6ec195dba091c03432110f19a6ff0b1c21a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "html_url": "https://github.com/rust-lang/rust/commit/d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7867ef8c15bfa199bac13ae919e9b93f9a34b57/comments", "author": {"login": "lpesk", "id": 7589231, "node_id": "MDQ6VXNlcjc1ODkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7589231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpesk", "html_url": "https://github.com/lpesk", "followers_url": "https://api.github.com/users/lpesk/followers", "following_url": "https://api.github.com/users/lpesk/following{/other_user}", "gists_url": "https://api.github.com/users/lpesk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpesk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpesk/subscriptions", "organizations_url": "https://api.github.com/users/lpesk/orgs", "repos_url": "https://api.github.com/users/lpesk/repos", "events_url": "https://api.github.com/users/lpesk/events{/privacy}", "received_events_url": "https://api.github.com/users/lpesk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lpesk", "id": 7589231, "node_id": "MDQ6VXNlcjc1ODkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7589231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpesk", "html_url": "https://github.com/lpesk", "followers_url": "https://api.github.com/users/lpesk/followers", "following_url": "https://api.github.com/users/lpesk/following{/other_user}", "gists_url": "https://api.github.com/users/lpesk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpesk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpesk/subscriptions", "organizations_url": "https://api.github.com/users/lpesk/orgs", "repos_url": "https://api.github.com/users/lpesk/repos", "events_url": "https://api.github.com/users/lpesk/events{/privacy}", "received_events_url": "https://api.github.com/users/lpesk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe968774abcaa806fc7227f70bd2416d2a4a71f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe968774abcaa806fc7227f70bd2416d2a4a71f", "html_url": "https://github.com/rust-lang/rust/commit/2fe968774abcaa806fc7227f70bd2416d2a4a71f"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "c82ddb7383d312ec0ec83f93c162303d4aa2ab67", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d7867ef8c15bfa199bac13ae919e9b93f9a34b57/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7867ef8c15bfa199bac13ae919e9b93f9a34b57/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "patch": "@@ -1327,7 +1327,20 @@ impl<'tcx> Delegate<'tcx> for MutateDelegate {\n     fn consume_pat(&mut self, _: &Pat, _: cmt<'tcx>, _: ConsumeMode) {\n     }\n \n-    fn borrow(&mut self, _: NodeId, _: Span, _: cmt<'tcx>, _: ty::Region, _: ty::BorrowKind, _: LoanCause) {        \n+    fn borrow(&mut self, _: NodeId, sp: Span, cmt: cmt<'tcx>, _: ty::Region, bk: ty::BorrowKind, _: LoanCause) {\n+        match bk {\n+            ty::BorrowKind::MutBorrow => {\n+                if let Categorization::Local(id) = cmt.cat {\n+                    if Some(id) == self.node_id_low {\n+                        self.span_low = Some(sp)\n+                    }\n+                    if Some(id) == self.node_id_high {\n+                        self.span_high = Some(sp)\n+                    }\n+                }\n+            },\n+            _ => (),\n+        }\n     }\n \n     fn mutate(&mut self, _: NodeId, sp: Span, cmt: cmt<'tcx>, _: MutateMode) {\n@@ -1390,8 +1403,8 @@ fn check_for_mutability(cx: &LateContext, bound: &Expr) -> Option<NodeId> {\n \n fn check_for_mutation(cx: &LateContext, body: &Expr, bound_ids: Vec<Option<NodeId>>) -> (Option<Span>, Option<Span>) {\n     let mut delegate = MutateDelegate { node_id_low: bound_ids[0], node_id_high: bound_ids[1], span_low: None, span_high: None };\n-    let d = def_id::DefId::local(body.hir_id.owner);\n-    let region_scope_tree = &cx.tcx.region_scope_tree(d);\n+    let def_id = def_id::DefId::local(body.hir_id.owner);\n+    let region_scope_tree = &cx.tcx.region_scope_tree(def_id);\n     ExprUseVisitor::new(&mut delegate, cx.tcx, cx.param_env, region_scope_tree, cx.tables).walk_expr(body);\n     return delegate.mutation_span();\n }"}, {"sha": "1a7159c330e3bdfb21ec6914c77a40974d66db75", "filename": "tests/run-pass/mut_range_bound_tmp.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d7867ef8c15bfa199bac13ae919e9b93f9a34b57/tests%2Frun-pass%2Fmut_range_bound_tmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7867ef8c15bfa199bac13ae919e9b93f9a34b57/tests%2Frun-pass%2Fmut_range_bound_tmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_range_bound_tmp.rs?ref=d7867ef8c15bfa199bac13ae919e9b93f9a34b57", "patch": "@@ -9,6 +9,8 @@ fn main() {\n     mut_range_bound_both();\n     mut_range_bound_no_mutation();\n     immut_range_bound();\n+    mut_borrow_range_bound();\n+    immut_borrow_range_bound();\n }\n \n fn mut_range_bound_upper() {\n@@ -35,8 +37,15 @@ fn mut_range_bound_no_mutation() {\n fn mut_borrow_range_bound() {\n     let mut m = 4;\n     for i in 0..m {\n-        let n = &mut m;\n-        *n += 1;\n+        let n = &mut m;  // warning here?\n+        *n += 1;         // or here?\n+    }\n+}\n+\n+fn immut_borrow_range_bound() {\n+    let mut m = 4;\n+    for i in 0..m {\n+        let n = &m;   // should be no warning?\n     }\n }\n "}]}