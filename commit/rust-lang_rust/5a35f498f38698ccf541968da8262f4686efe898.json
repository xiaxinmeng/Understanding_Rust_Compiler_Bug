{"sha": "5a35f498f38698ccf541968da8262f4686efe898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMzVmNDk4ZjM4Njk4Y2NmNTQxOTY4ZGE4MjYyZjQ2ODZlZmU4OTg=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-11-04T16:39:25Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-11-04T18:30:04Z"}, "message": "[MIR-trans] Fix handling of non-alloca temps in trans_operand_into()", "tree": {"sha": "4f257e83350bff909e94bf9ff823d23e10281368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f257e83350bff909e94bf9ff823d23e10281368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a35f498f38698ccf541968da8262f4686efe898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a35f498f38698ccf541968da8262f4686efe898", "html_url": "https://github.com/rust-lang/rust/commit/5a35f498f38698ccf541968da8262f4686efe898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a35f498f38698ccf541968da8262f4686efe898/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe3a609b0b3e51423165320b356440047fe10a59", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3a609b0b3e51423165320b356440047fe10a59", "html_url": "https://github.com/rust-lang/rust/commit/fe3a609b0b3e51423165320b356440047fe10a59"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "fb529d8975e1841a1416549aad1deae805485ac0", "filename": "src/librustc_trans/trans/mir/operand.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5a35f498f38698ccf541968da8262f4686efe898/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a35f498f38698ccf541968da8262f4686efe898/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs?ref=5a35f498f38698ccf541968da8262f4686efe898", "patch": "@@ -92,19 +92,10 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                bcx.val_to_string(lldest),\n                operand);\n \n-        match *operand {\n-            mir::Operand::Consume(ref lvalue) => {\n-                let tr_lvalue = self.trans_lvalue(bcx, lvalue);\n-                let lvalue_ty = tr_lvalue.ty.to_ty(bcx.tcx());\n-                debug!(\"trans_operand_into: tr_lvalue={} @ {:?}\",\n-                       bcx.val_to_string(tr_lvalue.llval),\n-                       lvalue_ty);\n-                base::memcpy_ty(bcx, lldest, tr_lvalue.llval, lvalue_ty);\n-            }\n-\n-            mir::Operand::Constant(..) => {\n-                unimplemented!()\n-            }\n-        }\n+        let o = self.trans_operand(bcx, operand);\n+        match datum::appropriate_rvalue_mode(bcx.ccx(), o.ty) {\n+            datum::ByValue => base::store_ty(bcx, o.llval, lldest, o.ty),\n+            datum::ByRef => base::memcpy_ty(bcx, lldest, o.llval, o.ty),\n+        };\n     }\n }"}]}