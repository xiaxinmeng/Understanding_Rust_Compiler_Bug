{"sha": "013710e8e8b322f1e902b1234ee674e395c44859", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMzcxMGU4ZThiMzIyZjFlOTAyYjEyMzRlZTY3NGUzOTVjNDQ4NTk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-30T23:01:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-30T23:01:42Z"}, "message": "Use suggestion for dereference help", "tree": {"sha": "569dff0a53cfcda4ae02c6cc99d68d095e1a447b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/569dff0a53cfcda4ae02c6cc99d68d095e1a447b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/013710e8e8b322f1e902b1234ee674e395c44859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/013710e8e8b322f1e902b1234ee674e395c44859", "html_url": "https://github.com/rust-lang/rust/commit/013710e8e8b322f1e902b1234ee674e395c44859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/013710e8e8b322f1e902b1234ee674e395c44859/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da9ba98fad3a8278d8c6ff570d74592bc10e9870", "url": "https://api.github.com/repos/rust-lang/rust/commits/da9ba98fad3a8278d8c6ff570d74592bc10e9870", "html_url": "https://github.com/rust-lang/rust/commit/da9ba98fad3a8278d8c6ff570d74592bc10e9870"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "edfa62f10953877f9f7e0ef26a99ef0c07edf949", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/013710e8e8b322f1e902b1234ee674e395c44859/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013710e8e8b322f1e902b1234ee674e395c44859/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=013710e8e8b322f1e902b1234ee674e395c44859", "patch": "@@ -256,14 +256,19 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     let source_map = self.tcx.sess.source_map();\n                     match is_assign {\n                         IsAssign::Yes => {\n-                            let mut err = struct_span_err!(self.tcx.sess, expr.span, E0368,\n-                                                \"binary assignment operation `{}=` \\\n-                                                cannot be applied to type `{}`\",\n-                                                op.node.as_str(),\n-                                                lhs_ty);\n-                            err.span_label(lhs_expr.span,\n-                                    format!(\"cannot use `{}=` on type `{}`\",\n-                                    op.node.as_str(), lhs_ty));\n+                            let mut err = struct_span_err!(\n+                                self.tcx.sess,\n+                                expr.span,\n+                                E0368,\n+                                \"binary assignment operation `{}=` cannot be applied to type `{}`\",\n+                                op.node.as_str(),\n+                                lhs_ty,\n+                            );\n+                            err.span_label(\n+                                lhs_expr.span,\n+                                format!(\"cannot use `{}=` on type `{}`\",\n+                                op.node.as_str(), lhs_ty),\n+                            );\n                             let mut suggested_deref = false;\n                             if let Ref(_, mut rty, _) = lhs_ty.sty {\n                                 if {\n@@ -280,13 +285,17 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                             rty = rty_inner;\n                                         }\n                                         let msg = &format!(\n-                                                \"`{}=` can be used on '{}', you can \\\n-                                                dereference `{2}`: `*{2}`\",\n-                                                op.node.as_str(),\n-                                                rty,\n-                                                lstring\n+                                            \"`{}=` can be used on '{}', you can dereference `{}`\",\n+                                            op.node.as_str(),\n+                                            rty,\n+                                            lstring,\n+                                        );\n+                                        err.span_suggestion_with_applicability(\n+                                            lhs_expr.span,\n+                                            msg,\n+                                            format!(\"*{}\", lstring),\n+                                            errors::Applicability::MachineApplicable,\n                                         );\n-                                        err.help(msg);\n                                         suggested_deref = true;\n                                     }\n                                 }"}, {"sha": "f9191a9fd8229acc496517ffd08bbd07daa5cbaa", "filename": "src/test/ui/issues/issue-5239-1.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/013710e8e8b322f1e902b1234ee674e395c44859/src%2Ftest%2Fui%2Fissues%2Fissue-5239-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/013710e8e8b322f1e902b1234ee674e395c44859/src%2Ftest%2Fui%2Fissues%2Fissue-5239-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5239-1.stderr?ref=013710e8e8b322f1e902b1234ee674e395c44859", "patch": "@@ -5,8 +5,10 @@ LL |     let x = |ref x: isize| { x += 1; };\n    |                              -^^^^^\n    |                              |\n    |                              cannot use `+=` on type `&isize`\n+help: `+=` can be used on 'isize', you can dereference `x`\n    |\n-   = help: `+=` can be used on 'isize', you can dereference `x`: `*x`\n+LL |     let x = |ref x: isize| { *x += 1; };\n+   |                              ^^\n \n error: aborting due to previous error\n "}]}