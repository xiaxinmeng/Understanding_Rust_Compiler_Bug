{"sha": "1807f27a338e8e3f8c3a9c99fde2223b5942e640", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MDdmMjdhMzM4ZThlM2Y4YzNhOWM5OWZkZTIyMjNiNTk0MmU2NDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-12T11:20:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-12T11:20:16Z"}, "message": "Auto merge of #45176 - michaelwoerister:fix-region-and-trans-item-order, r=nikomatsakis\n\nincr.comp.: Fix HashStable for ty::RegionKind and trans item order\n\nFixes #45161 and the failing rust-icci tests.\n\nr? @nikomatsakis", "tree": {"sha": "8041ab852ad6099133352a7a9cec1e22471d4b54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8041ab852ad6099133352a7a9cec1e22471d4b54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1807f27a338e8e3f8c3a9c99fde2223b5942e640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1807f27a338e8e3f8c3a9c99fde2223b5942e640", "html_url": "https://github.com/rust-lang/rust/commit/1807f27a338e8e3f8c3a9c99fde2223b5942e640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1807f27a338e8e3f8c3a9c99fde2223b5942e640/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39fd958520c1319a457fba98ccc501bdea537c04", "url": "https://api.github.com/repos/rust-lang/rust/commits/39fd958520c1319a457fba98ccc501bdea537c04", "html_url": "https://github.com/rust-lang/rust/commit/39fd958520c1319a457fba98ccc501bdea537c04"}, {"sha": "1235836f678eeae33c841ae5b8975b3967be886f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1235836f678eeae33c841ae5b8975b3967be886f", "html_url": "https://github.com/rust-lang/rust/commit/1235836f678eeae33c841ae5b8975b3967be886f"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "f719ce150924f0652d28bdb55657a72923dbaeb5", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1807f27a338e8e3f8c3a9c99fde2223b5942e640/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1807f27a338e8e3f8c3a9c99fde2223b5942e640/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=1807f27a338e8e3f8c3a9c99fde2223b5942e640", "patch": "@@ -61,6 +61,9 @@ for ty::RegionKind {\n                 def_id.hash_stable(hcx, hasher);\n                 name.hash_stable(hcx, hasher);\n             }\n+            ty::ReLateBound(db, ty::BrEnv) => {\n+                db.depth.hash_stable(hcx, hasher);\n+            }\n             ty::ReEarlyBound(ty::EarlyBoundRegion { def_id, index, name }) => {\n                 def_id.hash_stable(hcx, hasher);\n                 index.hash_stable(hcx, hasher);"}, {"sha": "386806e4c9c9f27e96ccb2bb51fb8af31c3272fa", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1807f27a338e8e3f8c3a9c99fde2223b5942e640/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1807f27a338e8e3f8c3a9c99fde2223b5942e640/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=1807f27a338e8e3f8c3a9c99fde2223b5942e640", "patch": "@@ -163,10 +163,27 @@ pub trait CodegenUnitExt<'tcx> {\n         fn item_sort_key<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                    item: TransItem<'tcx>) -> ItemSortKey {\n             ItemSortKey(match item {\n-                TransItem::Fn(instance) => {\n-                    tcx.hir.as_local_node_id(instance.def_id())\n+                TransItem::Fn(ref instance) => {\n+                    match instance.def {\n+                        // We only want to take NodeIds of user-defined\n+                        // instances into account. The others don't matter for\n+                        // the codegen tests and can even make item order\n+                        // unstable.\n+                        InstanceDef::Item(def_id) => {\n+                            tcx.hir.as_local_node_id(def_id)\n+                        }\n+                        InstanceDef::Intrinsic(..) |\n+                        InstanceDef::FnPtrShim(..) |\n+                        InstanceDef::Virtual(..) |\n+                        InstanceDef::ClosureOnceShim { .. } |\n+                        InstanceDef::DropGlue(..) |\n+                        InstanceDef::CloneShim(..) => {\n+                            None\n+                        }\n+                    }\n                 }\n-                TransItem::Static(node_id) | TransItem::GlobalAsm(node_id) => {\n+                TransItem::Static(node_id) |\n+                TransItem::GlobalAsm(node_id) => {\n                     Some(node_id)\n                 }\n             }, item.symbol_name(tcx))"}]}