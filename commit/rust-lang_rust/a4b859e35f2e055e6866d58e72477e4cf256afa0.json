{"sha": "a4b859e35f2e055e6866d58e72477e4cf256afa0", "node_id": "C_kwDOAAsO6NoAKGE0Yjg1OWUzNWYyZTA1NWU2ODY2ZDU4ZTcyNDc3ZTRjZjI1NmFmYTA", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-01T21:00:19Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-09T18:10:00Z"}, "message": "Delete unused polymorphization code", "tree": {"sha": "765b1733e187ba04bac50f9b8e9c9978a2d043db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/765b1733e187ba04bac50f9b8e9c9978a2d043db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4b859e35f2e055e6866d58e72477e4cf256afa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b859e35f2e055e6866d58e72477e4cf256afa0", "html_url": "https://github.com/rust-lang/rust/commit/a4b859e35f2e055e6866d58e72477e4cf256afa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4b859e35f2e055e6866d58e72477e4cf256afa0/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2855794257e36ec7393f3b7d8f4b99e5776f550f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2855794257e36ec7393f3b7d8f4b99e5776f550f", "html_url": "https://github.com/rust-lang/rust/commit/2855794257e36ec7393f3b7d8f4b99e5776f550f"}], "stats": {"total": 47, "additions": 1, "deletions": 46}, "files": [{"sha": "c8fc69eb856abdc5b12b202122e5fbde68851f75", "filename": "compiler/rustc_monomorphize/src/polymorphize.rs", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a4b859e35f2e055e6866d58e72477e4cf256afa0/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b859e35f2e055e6866d58e72477e4cf256afa0/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs?ref=a4b859e35f2e055e6866d58e72477e4cf256afa0", "patch": "@@ -340,55 +340,10 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for MarkUsedGenericParams<'a, 'tcx> {\n             }\n             ty::Param(param) => {\n                 debug!(?param);\n-                self.unused_parameters.clear(param.index);\n+                self.unused_parameters.mark_used(param.index);\n                 ControlFlow::CONTINUE\n             }\n             _ => ty.super_visit_with(self),\n         }\n     }\n }\n-\n-/// Visitor used to check if a generic parameter is used.\n-struct HasUsedGenericParams<'a> {\n-    unused_parameters: &'a FiniteBitSet<u32>,\n-}\n-\n-impl<'a, 'tcx> TypeVisitor<'tcx> for HasUsedGenericParams<'a> {\n-    type BreakTy = ();\n-\n-    #[instrument(level = \"debug\", skip(self))]\n-    fn visit_const(&mut self, c: Const<'tcx>) -> ControlFlow<Self::BreakTy> {\n-        if !c.has_non_region_param() {\n-            return ControlFlow::CONTINUE;\n-        }\n-\n-        match c.kind() {\n-            ty::ConstKind::Param(param) => {\n-                if self.unused_parameters.contains(param.index).unwrap_or(false) {\n-                    ControlFlow::CONTINUE\n-                } else {\n-                    ControlFlow::BREAK\n-                }\n-            }\n-            _ => c.super_visit_with(self),\n-        }\n-    }\n-\n-    #[instrument(level = \"debug\", skip(self))]\n-    fn visit_ty(&mut self, ty: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n-        if !ty.has_non_region_param() {\n-            return ControlFlow::CONTINUE;\n-        }\n-\n-        match ty.kind() {\n-            ty::Param(param) => {\n-                if self.unused_parameters.contains(param.index).unwrap_or(false) {\n-                    ControlFlow::CONTINUE\n-                } else {\n-                    ControlFlow::BREAK\n-                }\n-            }\n-            _ => ty.super_visit_with(self),\n-        }\n-    }\n-}"}]}