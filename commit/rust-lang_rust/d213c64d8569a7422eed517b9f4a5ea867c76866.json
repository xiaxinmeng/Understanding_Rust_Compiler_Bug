{"sha": "d213c64d8569a7422eed517b9f4a5ea867c76866", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMTNjNjRkODU2OWE3NDIyZWVkNTE3YjlmNGE1ZWE4NjdjNzY4NjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-31T13:15:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-31T13:15:14Z"}, "message": "let the user skip the sysroot consistency check", "tree": {"sha": "b9cddfe40a4587d0232374db0ed5c06b0429c1f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9cddfe40a4587d0232374db0ed5c06b0429c1f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d213c64d8569a7422eed517b9f4a5ea867c76866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d213c64d8569a7422eed517b9f4a5ea867c76866", "html_url": "https://github.com/rust-lang/rust/commit/d213c64d8569a7422eed517b9f4a5ea867c76866", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d213c64d8569a7422eed517b9f4a5ea867c76866/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "effffd8ea2ccfb611a32b8de45434915914459ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/effffd8ea2ccfb611a32b8de45434915914459ef", "html_url": "https://github.com/rust-lang/rust/commit/effffd8ea2ccfb611a32b8de45434915914459ef"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "b46742efe72ae7dfabb19d6bf2e5184ee6254b86", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d213c64d8569a7422eed517b9f4a5ea867c76866/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d213c64d8569a7422eed517b9f4a5ea867c76866/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=d213c64d8569a7422eed517b9f4a5ea867c76866", "patch": "@@ -141,6 +141,13 @@ fn test_sysroot_consistency() {\n             .unwrap_or_else(|_| panic!(\"Failed to canonicalize sysroot: {}\", stdout))\n     }\n \n+    // We let the user skip this check if they really want to.\n+    // (`bootstrap` needs this because Miri gets built by the stage1 compiler\n+    // but run with the stage2 sysroot.)\n+    if std::env::var(\"MIRI_SKIP_SYSROOT_CHECK\").is_ok() {\n+        return;\n+    }\n+\n     let rustc_sysroot = get_sysroot(Command::new(\"rustc\"));\n     let miri_sysroot = get_sysroot(Command::new(find_miri()));\n "}]}