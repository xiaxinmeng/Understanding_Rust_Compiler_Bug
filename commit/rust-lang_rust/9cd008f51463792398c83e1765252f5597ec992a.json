{"sha": "9cd008f51463792398c83e1765252f5597ec992a", "node_id": "C_kwDOAAsO6NoAKDljZDAwOGY1MTQ2Mzc5MjM5OGM4M2UxNzY1MjUyZjU1OTdlYzk5MmE", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2022-04-10T07:28:31Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-09-11T06:04:18Z"}, "message": "fix tests after rebase", "tree": {"sha": "89b5c7f1017209b2cb6aa4b5184f1a44ecb81c9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89b5c7f1017209b2cb6aa4b5184f1a44ecb81c9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cd008f51463792398c83e1765252f5597ec992a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cd008f51463792398c83e1765252f5597ec992a", "html_url": "https://github.com/rust-lang/rust/commit/9cd008f51463792398c83e1765252f5597ec992a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cd008f51463792398c83e1765252f5597ec992a/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a17229dcde2366c9a3fd300682f596318192c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a17229dcde2366c9a3fd300682f596318192c4", "html_url": "https://github.com/rust-lang/rust/commit/d9a17229dcde2366c9a3fd300682f596318192c4"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "83c51526b7b0984db21adbcb89c8961bffe3b120", "filename": "src/test/ui/generator/clone-impl-async.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.rs?ref=9cd008f51463792398c83e1765252f5597ec992a", "patch": "@@ -15,24 +15,24 @@ fn main() {\n         drop(non_clone);\n     };\n     check_copy(&inner_non_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n     check_clone(&inner_non_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n \n     let non_clone = NonClone;\n     let outer_non_clone = async move {\n         drop(non_clone);\n     };\n     check_copy(&outer_non_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n     check_clone(&outer_non_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n \n     let maybe_copy_clone = async move {};\n     check_copy(&maybe_copy_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n     check_clone(&maybe_copy_clone);\n-    //~^ ERROR the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+    //~^ ERROR the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n \n     let inner_non_clone_fn = the_inner_non_clone_fn();\n     check_copy(&inner_non_clone_fn);"}, {"sha": "cbb58d2af18e7acdce2e98811c0115f37279603f", "filename": "src/test/ui/generator/clone-impl-async.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-async.stderr?ref=9cd008f51463792398c83e1765252f5597ec992a", "patch": "@@ -1,8 +1,8 @@\n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n   --> $DIR/clone-impl-async.rs:17:16\n    |\n LL |     check_copy(&inner_non_clone);\n-   |     ---------- ^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = [async output]>`\n+   |     ---------- ^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -12,11 +12,11 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n   --> $DIR/clone-impl-async.rs:19:17\n    |\n LL |     check_clone(&inner_non_clone);\n-   |     ----------- ^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = [async output]>`\n+   |     ----------- ^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -26,11 +26,11 @@ note: required by a bound in `check_clone`\n LL | fn check_clone<T: Clone>(_x: &T) {}\n    |                   ^^^^^ required by this bound in `check_clone`\n \n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n   --> $DIR/clone-impl-async.rs:26:16\n    |\n LL |     check_copy(&outer_non_clone);\n-   |     ---------- ^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = [async output]>`\n+   |     ---------- ^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -40,11 +40,11 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n   --> $DIR/clone-impl-async.rs:28:17\n    |\n LL |     check_clone(&outer_non_clone);\n-   |     ----------- ^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = [async output]>`\n+   |     ----------- ^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -54,11 +54,11 @@ note: required by a bound in `check_clone`\n LL | fn check_clone<T: Clone>(_x: &T) {}\n    |                   ^^^^^ required by this bound in `check_clone`\n \n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Copy` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Copy` is not satisfied\n   --> $DIR/clone-impl-async.rs:32:16\n    |\n LL |     check_copy(&maybe_copy_clone);\n-   |     ---------- ^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = [async output]>`\n+   |     ---------- ^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -68,11 +68,11 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `impl Future<Output = [async output]>: Clone` is not satisfied\n+error[E0277]: the trait bound `impl Future<Output = ()>: Clone` is not satisfied\n   --> $DIR/clone-impl-async.rs:34:17\n    |\n LL |     check_clone(&maybe_copy_clone);\n-   |     ----------- ^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = [async output]>`\n+   |     ----------- ^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `impl Future<Output = ()>`\n    |     |\n    |     required by a bound introduced by this call\n    |"}, {"sha": "e097250cca86faa3c38d7ca67b714fa184b8e202", "filename": "src/test/ui/generator/clone-impl.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cd008f51463792398c83e1765252f5597ec992a/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr?ref=9cd008f51463792398c83e1765252f5597ec992a", "patch": "@@ -133,6 +133,10 @@ note: required by a bound in `check_copy`\n    |\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n+help: consider annotating `NonClone` with `#[derive(Copy)]`\n+   |\n+LL | #[derive(Copy)]\n+   |\n \n error[E0277]: the trait bound `NonClone: Clone` is not satisfied in `[generator@$DIR/clone-impl.rs:62:25: 65:6]`\n   --> $DIR/clone-impl.rs:68:5\n@@ -157,6 +161,10 @@ note: required by a bound in `check_clone`\n    |\n LL | fn check_clone<T: Clone>(_x: &T) {}\n    |                   ^^^^^ required by this bound in `check_clone`\n+help: consider annotating `NonClone` with `#[derive(Clone)]`\n+   |\n+LL | #[derive(Clone)]\n+   |\n \n error: aborting due to 6 previous errors\n "}]}