{"sha": "099b3d86f92166ca5974a103e6998fdbaf6a9872", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OWIzZDg2ZjkyMTY2Y2E1OTc0YTEwM2U2OTk4ZmRiYWY2YTk4NzI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-09T18:49:21Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-12T13:17:26Z"}, "message": "resolve: Assign `pub` and `pub(crate)` visibilities to `macro_rules` items", "tree": {"sha": "82b44f57c845509a1bbc9d495f8a506cf0832596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82b44f57c845509a1bbc9d495f8a506cf0832596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/099b3d86f92166ca5974a103e6998fdbaf6a9872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/099b3d86f92166ca5974a103e6998fdbaf6a9872", "html_url": "https://github.com/rust-lang/rust/commit/099b3d86f92166ca5974a103e6998fdbaf6a9872", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/099b3d86f92166ca5974a103e6998fdbaf6a9872/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "html_url": "https://github.com/rust-lang/rust/commit/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b"}], "stats": {"total": 63, "additions": 20, "deletions": 43}, "files": [{"sha": "7856661741da7abeb7a9224deb2bec4a566e1fcb", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=099b3d86f92166ca5974a103e6998fdbaf6a9872", "patch": "@@ -1073,17 +1073,21 @@ impl<'a> Resolver<'a> {\n             let ident = ident.modern();\n             self.macro_names.insert(ident);\n             let def = Def::Macro(def_id, MacroKind::Bang);\n-            let vis = ty::Visibility::Invisible; // Doesn't matter for legacy bindings\n+            let is_macro_export = attr::contains_name(&item.attrs, \"macro_export\");\n+            let vis = if is_macro_export {\n+                ty::Visibility::Public\n+            } else {\n+                ty::Visibility::Restricted(DefId::local(CRATE_DEF_INDEX))\n+            };\n             let binding = (def, vis, item.span, expansion).to_name_binding(self.arenas);\n             self.set_binding_parent_module(binding, self.current_module);\n             let legacy_binding = self.arenas.alloc_legacy_binding(LegacyBinding {\n                 parent_legacy_scope: *current_legacy_scope, binding, ident\n             });\n             *current_legacy_scope = LegacyScope::Binding(legacy_binding);\n             self.all_macros.insert(ident.name, def);\n-            if attr::contains_name(&item.attrs, \"macro_export\") {\n+            if is_macro_export {\n                 let module = self.graph_root;\n-                let vis = ty::Visibility::Public;\n                 self.define(module, ident, MacroNS,\n                             (def, vis, item.span, expansion, IsMacroExport));\n             } else {"}, {"sha": "e3c1b4e8ab33afa4ca00351371869fa634e1340d", "filename": "src/test/ui/rust-2018/uniform-paths/macro-rules.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.rs?ref=099b3d86f92166ca5974a103e6998fdbaf6a9872", "patch": "@@ -1,23 +1,22 @@\n // edition:2018\n \n-// For the time being `macro_rules` items are treated as *very* private...\n-\n #![feature(decl_macro, uniform_paths)]\n-#![allow(non_camel_case_types)]\n \n mod m1 {\n+    // Non-exported legacy macros are treated as `pub(crate)`.\n     macro_rules! legacy_macro { () => () }\n \n-    // ... so they can't be imported by themselves, ...\n-    use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n+    use legacy_macro as _; // OK\n+    pub(crate) use legacy_macro as _; // OK\n+    pub use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n }\n \n mod m2 {\n     macro_rules! legacy_macro { () => () }\n \n     type legacy_macro = u8;\n \n-    // ... but don't prevent names from other namespaces from being imported, ...\n+    // Legacy macro imports don't prevent names from other namespaces from being imported.\n     use legacy_macro as _; // OK\n }\n \n@@ -27,19 +26,17 @@ mod m3 {\n     fn f() {\n         macro_rules! legacy_macro { () => () }\n \n-        // ... but still create ambiguities with other names in the same namespace.\n+        // Legacy macro imports create ambiguities with other names in the same namespace.\n         use legacy_macro as _; //~ ERROR `legacy_macro` is ambiguous\n-                               //~| ERROR `legacy_macro` is private, and cannot be re-exported\n     }\n }\n \n mod exported {\n-    // Exported macros are treated as private as well,\n-    // some better rules need to be figured out later.\n+    // Exported legacy macros are treated as `pub`.\n     #[macro_export]\n     macro_rules! legacy_macro { () => () }\n \n-    use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n+    pub use legacy_macro as _; // OK\n }\n \n fn main() {}"}, {"sha": "684f5fceac15fc6f191d99bc6e07031553c99d3d", "filename": "src/test/ui/rust-2018/uniform-paths/macro-rules.stderr", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/099b3d86f92166ca5974a103e6998fdbaf6a9872/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr?ref=099b3d86f92166ca5974a103e6998fdbaf6a9872", "patch": "@@ -1,39 +1,15 @@\n error[E0364]: `legacy_macro` is private, and cannot be re-exported\n-  --> $DIR/macro-rules.rs:12:9\n+  --> $DIR/macro-rules.rs:11:13\n    |\n-LL |     use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n-   |         ^^^^^^^^^^^^^^^^^\n-   |\n-note: consider marking `legacy_macro` as `pub` in the imported module\n-  --> $DIR/macro-rules.rs:12:9\n-   |\n-LL |     use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n-   |         ^^^^^^^^^^^^^^^^^\n-\n-error[E0364]: `legacy_macro` is private, and cannot be re-exported\n-  --> $DIR/macro-rules.rs:31:13\n-   |\n-LL |         use legacy_macro as _; //~ ERROR `legacy_macro` is ambiguous\n+LL |     pub use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n    |             ^^^^^^^^^^^^^^^^^\n    |\n note: consider marking `legacy_macro` as `pub` in the imported module\n-  --> $DIR/macro-rules.rs:31:13\n+  --> $DIR/macro-rules.rs:11:13\n    |\n-LL |         use legacy_macro as _; //~ ERROR `legacy_macro` is ambiguous\n+LL |     pub use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n    |             ^^^^^^^^^^^^^^^^^\n \n-error[E0364]: `legacy_macro` is private, and cannot be re-exported\n-  --> $DIR/macro-rules.rs:42:9\n-   |\n-LL |     use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n-   |         ^^^^^^^^^^^^^^^^^\n-   |\n-note: consider marking `legacy_macro` as `pub` in the imported module\n-  --> $DIR/macro-rules.rs:42:9\n-   |\n-LL |     use legacy_macro as _; //~ ERROR `legacy_macro` is private, and cannot be re-exported\n-   |         ^^^^^^^^^^^^^^^^^\n-\n error[E0659]: `legacy_macro` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/macro-rules.rs:31:13\n    |\n@@ -52,7 +28,7 @@ LL |     macro legacy_macro() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `self::legacy_macro` to refer to this macro unambiguously\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors occurred: E0364, E0659.\n For more information about an error, try `rustc --explain E0364`."}]}