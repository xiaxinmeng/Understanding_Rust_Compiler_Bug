{"sha": "ab3fb1e775ff20f80096953080dfc650950041b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiM2ZiMWU3NzVmZjIwZjgwMDk2OTUzMDgwZGZjNjUwOTUwMDQxYjA=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-04T21:59:06Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-05T12:45:00Z"}, "message": "Drop span argument from mk_list_item", "tree": {"sha": "6b1f8bd42020d95ca0b60a507b9caea70d507379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b1f8bd42020d95ca0b60a507b9caea70d507379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab3fb1e775ff20f80096953080dfc650950041b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3fb1e775ff20f80096953080dfc650950041b0", "html_url": "https://github.com/rust-lang/rust/commit/ab3fb1e775ff20f80096953080dfc650950041b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab3fb1e775ff20f80096953080dfc650950041b0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be067558962c004b638e4c6f162d50f7c0c98b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be067558962c004b638e4c6f162d50f7c0c98b6", "html_url": "https://github.com/rust-lang/rust/commit/4be067558962c004b638e4c6f162d50f7c0c98b6"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "493083c680aad0f4585cde7b9a3fcaa89c50cbb2", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -5176,11 +5176,10 @@ impl<'a> LoweringContext<'a> {\n                 let attr = {\n                     // `allow(unreachable_code)`\n                     let allow = {\n-                        let allow_ident = Ident::with_empty_ctxt(sym::allow).with_span_pos(e.span);\n-                        let uc_ident = Ident::with_empty_ctxt(sym::unreachable_code)\n-                            .with_span_pos(e.span);\n+                        let allow_ident = Ident::new(sym::allow, e.span);\n+                        let uc_ident = Ident::new(sym::unreachable_code, e.span);\n                         let uc_nested = attr::mk_nested_word_item(uc_ident);\n-                        attr::mk_list_item(e.span, allow_ident, vec![uc_nested])\n+                        attr::mk_list_item(allow_ident, vec![uc_nested])\n                     };\n                     attr::mk_attr_outer(allow)\n                 };"}, {"sha": "7eea1aad8eadf8f2af69e41f164c3cf9c0eba8f1", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -355,8 +355,8 @@ pub fn mk_name_value_item(span: Span, ident: Ident, lit_kind: LitKind, lit_span:\n     MetaItem { path: Path::from_ident(ident), span, node: MetaItemKind::NameValue(lit) }\n }\n \n-pub fn mk_list_item(span: Span, ident: Ident, items: Vec<NestedMetaItem>) -> MetaItem {\n-    MetaItem { path: Path::from_ident(ident), span, node: MetaItemKind::List(items) }\n+pub fn mk_list_item(ident: Ident, items: Vec<NestedMetaItem>) -> MetaItem {\n+    MetaItem { path: Path::from_ident(ident), span: ident.span, node: MetaItemKind::List(items) }\n }\n \n pub fn mk_word_item(ident: Ident) -> MetaItem {"}, {"sha": "83d9521685096e3f78bd42a5d82744ee7e917c70", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -879,7 +879,7 @@ impl<'a> ExtCtxt<'a> {\n \n     pub fn meta_list(&self, sp: Span, name: ast::Name, mis: Vec<ast::NestedMetaItem>)\n                  -> ast::MetaItem {\n-        attr::mk_list_item(sp, Ident::new(name, sp), mis)\n+        attr::mk_list_item(Ident::new(name, sp), mis)\n     }\n \n     pub fn meta_name_value(&self, span: Span, name: ast::Name, lit_kind: ast::LitKind)"}, {"sha": "964c81dd4664103743ca0cfd505acc6c3105acfa", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -1272,7 +1272,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                             ];\n \n                             let include_ident = Ident::with_empty_ctxt(sym::include);\n-                            let item = attr::mk_list_item(DUMMY_SP, include_ident, include_info);\n+                            let item = attr::mk_list_item(include_ident, include_info);\n                             items.push(ast::NestedMetaItem::MetaItem(item));\n                         }\n                         Err(e) => {\n@@ -1333,7 +1333,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                 }\n             }\n \n-            let meta = attr::mk_list_item(DUMMY_SP, Ident::with_empty_ctxt(sym::doc), items);\n+            let meta = attr::mk_list_item(Ident::with_empty_ctxt(sym::doc), items);\n             *at = attr::Attribute {\n                 span: at.span,\n                 id: at.id,"}, {"sha": "803426877335e8fb8e76a63bf1aa5ecee56679c8", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -15,7 +15,7 @@ use crate::tokenstream::{self, TokenStream, TokenTree};\n \n use rustc_target::spec::abi::{self, Abi};\n use syntax_pos::{self, BytePos};\n-use syntax_pos::{DUMMY_SP, FileName, Span};\n+use syntax_pos::{FileName, Span};\n \n use std::borrow::Cow;\n \n@@ -124,8 +124,7 @@ pub fn print_crate<'a>(cm: &'a SourceMap,\n \n         // #![feature(prelude_import)]\n         let pi_nested = attr::mk_nested_word_item(ast::Ident::with_empty_ctxt(sym::prelude_import));\n-        let list = attr::mk_list_item(\n-            DUMMY_SP, ast::Ident::with_empty_ctxt(sym::feature), vec![pi_nested]);\n+        let list = attr::mk_list_item(ast::Ident::with_empty_ctxt(sym::feature), vec![pi_nested]);\n         let fake_attr = attr::mk_attr_inner(list);\n         s.print_attribute(&fake_attr);\n "}, {"sha": "eec8a3f802343f9a286a5ae65148218e86603f1b", "filename": "src/libsyntax_ext/test_harness.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax_ext%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3fb1e775ff20f80096953080dfc650950041b0/src%2Flibsyntax_ext%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest_harness.rs?ref=ab3fb1e775ff20f80096953080dfc650950041b0", "patch": "@@ -157,8 +157,7 @@ impl MutVisitor for EntryPointCleaner {\n                 item.map(|ast::Item {id, ident, attrs, node, vis, span, tokens}| {\n                     let allow_ident = Ident::with_empty_ctxt(sym::allow);\n                     let dc_nested = attr::mk_nested_word_item(Ident::from_str(\"dead_code\"));\n-                    let allow_dead_code_item = attr::mk_list_item(DUMMY_SP, allow_ident,\n-                                                                  vec![dc_nested]);\n+                    let allow_dead_code_item = attr::mk_list_item(allow_ident, vec![dc_nested]);\n                     let allow_dead_code = attr::mk_attr_outer(allow_dead_code_item);\n \n                     ast::Item {"}]}