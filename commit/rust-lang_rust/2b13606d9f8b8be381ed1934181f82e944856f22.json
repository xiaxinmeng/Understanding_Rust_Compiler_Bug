{"sha": "2b13606d9f8b8be381ed1934181f82e944856f22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMTM2MDZkOWY4YjhiZTM4MWVkMTkzNDE4MWY4MmU5NDQ4NTZmMjI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-14T01:41:11Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-14T01:41:11Z"}, "message": "update the libstd docstring for the rename", "tree": {"sha": "2957807faee71de2d99e6fca1fccd9adf2a68f33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2957807faee71de2d99e6fca1fccd9adf2a68f33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b13606d9f8b8be381ed1934181f82e944856f22", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b13606d9f8b8be381ed1934181f82e944856f22", "html_url": "https://github.com/rust-lang/rust/commit/2b13606d9f8b8be381ed1934181f82e944856f22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b13606d9f8b8be381ed1934181f82e944856f22/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b417bc8511a0a38e73312cee8086ed04eeb21b75", "url": "https://api.github.com/repos/rust-lang/rust/commits/b417bc8511a0a38e73312cee8086ed04eeb21b75", "html_url": "https://github.com/rust-lang/rust/commit/b417bc8511a0a38e73312cee8086ed04eeb21b75"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "3b7f069c5331910ae3bc296197cee888b520767a", "filename": "src/libstd/core.rc", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2b13606d9f8b8be381ed1934181f82e944856f22/src%2Flibstd%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/2b13606d9f8b8be381ed1934181f82e944856f22/src%2Flibstd%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcore.rc?ref=2b13606d9f8b8be381ed1934181f82e944856f22", "patch": "@@ -10,49 +10,49 @@\n \n /*!\n \n-# The Rust core library\n+# The Rust standard library\n \n-The Rust core library provides runtime features required by the language,\n+The Rust standard library provides runtime features required by the language,\n including the task scheduler and memory allocators, as well as library\n support for Rust built-in types, platform abstractions, and other commonly\n used features.\n \n-`core` includes modules corresponding to each of the integer types, each of\n+`std` includes modules corresponding to each of the integer types, each of\n the floating point types, the `bool` type, tuples, characters, strings\n (`str`), vectors (`vec`), managed boxes (`managed`), owned boxes (`owned`),\n-and unsafe and borrowed pointers (`ptr`).  Additionally, `core` provides\n+and unsafe and borrowed pointers (`ptr`).  Additionally, `std` provides\n pervasive types (`option` and `result`), task creation and communication\n primitives (`task`, `comm`), platform abstractions (`os` and `path`), basic\n I/O abstractions (`io`), common traits (`kinds`, `ops`, `cmp`, `num`,\n `to_str`), and complete bindings to the C standard library (`libc`).\n \n-# Core injection and the Rust prelude\n+# Standard library injection and the Rust prelude\n \n-`core` is imported at the topmost level of every crate by default, as\n+`std` is imported at the topmost level of every crate by default, as\n if the first line of each crate was\n \n-    extern mod core;\n+    extern mod std;\n \n-This means that the contents of core can be accessed from any context\n-with the `core::` path prefix, as in `use core::vec`, `use core::task::spawn`,\n+This means that the contents of std can be accessed from any context\n+with the `std::` path prefix, as in `use std::vec`, `use std::task::spawn`,\n etc.\n \n-Additionally, `core` contains a `prelude` module that reexports many of the\n-most common core modules, types and traits. The contents of the prelude are\n+Additionally, `std` contains a `prelude` module that reexports many of the\n+most common std modules, types and traits. The contents of the prelude are\n imported into every *module* by default.  Implicitly, all modules behave as if\n they contained the following prologue:\n \n-    use core::prelude::*;\n+    use std::prelude::*;\n \n */\n \n \n #[link(name = \"std\",\n        vers = \"0.7-pre\",\n        uuid = \"c70c24a7-5551-4f73-8e37-380b11d80be8\",\n-       url = \"https://github.com/mozilla/rust/tree/master/src/libcore\")];\n+       url = \"https://github.com/mozilla/rust/tree/master/src/libstd\")];\n \n-#[comment = \"The Rust core library\"];\n+#[comment = \"The Rust standard library\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n "}]}