{"sha": "c84b7815b363ad5f2dec9d5f830666ccef440458", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGI3ODE1YjM2M2FkNWYyZGVjOWQ1ZjgzMDY2NmNjZWY0NDA0NTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-02-27T22:36:33Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-02-28T15:33:16Z"}, "message": "add a comment", "tree": {"sha": "ab9c03d9b3883eb2809b01b077e73170c64c5473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab9c03d9b3883eb2809b01b077e73170c64c5473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84b7815b363ad5f2dec9d5f830666ccef440458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84b7815b363ad5f2dec9d5f830666ccef440458", "html_url": "https://github.com/rust-lang/rust/commit/c84b7815b363ad5f2dec9d5f830666ccef440458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84b7815b363ad5f2dec9d5f830666ccef440458/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7c7c8a4d7439e69f22386af1bb44f7686252f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c7c8a4d7439e69f22386af1bb44f7686252f12", "html_url": "https://github.com/rust-lang/rust/commit/a7c7c8a4d7439e69f22386af1bb44f7686252f12"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "39e757c52ff2974ed709d62b6e0d3dbb56d8b781", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c84b7815b363ad5f2dec9d5f830666ccef440458/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84b7815b363ad5f2dec9d5f830666ccef440458/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=c84b7815b363ad5f2dec9d5f830666ccef440458", "patch": "@@ -370,6 +370,9 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n         // Here the default `Vec<[u32]>` is not WF because `[u32]: Sized` does not hold.\n         for d in generics.types.iter().cloned().filter(is_our_default).map(|p| p.def_id) {\n             let ty = fcx.tcx.type_of(d);\n+            // ignore dependent defaults -- that is, where the default of one type\n+            // parameter includes another (e.g., <T, U = T>). In those cases, we can't\n+            // be sure if it will error or not as user might always specify the other.\n             if !ty.needs_subst() {\n                 fcx.register_wf_obligation(ty, fcx.tcx.def_span(d), self.code.clone());\n             }"}]}