{"sha": "e17ac668997410a1a9d2da8725329afb8b5f2901", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxN2FjNjY4OTk3NDEwYTFhOWQyZGE4NzI1MzI5YWZiOGI1ZjI5MDE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-13T15:03:37Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-14T09:36:02Z"}, "message": "* Update aliases data struct from HashMap to BTreeMap to have more deterministic results\n  * Update Javascript to take this change into account\n* Update CrateData::aliases field to take a reference instead (it allowed to remove a conversion loop)", "tree": {"sha": "69776f1b4405193f8d3937e0f122b1a5a33acaac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69776f1b4405193f8d3937e0f122b1a5a33acaac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e17ac668997410a1a9d2da8725329afb8b5f2901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e17ac668997410a1a9d2da8725329afb8b5f2901", "html_url": "https://github.com/rust-lang/rust/commit/e17ac668997410a1a9d2da8725329afb8b5f2901", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e17ac668997410a1a9d2da8725329afb8b5f2901/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4d9318be6a493da4c6aa307dd4de7e24a15120a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d9318be6a493da4c6aa307dd4de7e24a15120a", "html_url": "https://github.com/rust-lang/rust/commit/c4d9318be6a493da4c6aa307dd4de7e24a15120a"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "57d385de32096d88e11c5682a94ffe6213b05716", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e17ac668997410a1a9d2da8725329afb8b5f2901/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e17ac668997410a1a9d2da8725329afb8b5f2901/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=e17ac668997410a1a9d2da8725329afb8b5f2901", "patch": "@@ -120,7 +120,7 @@ crate struct Cache {\n \n     /// Aliases added through `#[doc(alias = \"...\")]`. Since a few items can have the same alias,\n     /// we need the alias element to have an array of items.\n-    pub(super) aliases: FxHashMap<String, Vec<usize>>,\n+    pub(super) aliases: BTreeMap<String, Vec<usize>>,\n }\n \n impl Cache {\n@@ -331,7 +331,7 @@ impl DocFolder for Cache {\n                         for alias in item.attrs.get_doc_aliases() {\n                             self.aliases\n                                 .entry(alias.to_lowercase())\n-                                .or_insert(Vec::with_capacity(1))\n+                                .or_insert(Vec::new())\n                                 .push(self.search_index.len() - 1);\n                         }\n                     }\n@@ -553,10 +553,10 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n                 parent_idx: None,\n                 search_type: get_index_search_type(&item),\n             });\n-            for alias in item.attrs.get_doc_aliases().into_iter() {\n+            for alias in item.attrs.get_doc_aliases() {\n                 aliases\n                     .entry(alias.to_lowercase())\n-                    .or_insert(Vec::with_capacity(1))\n+                    .or_insert(Vec::new())\n                     .push(search_index.len() - 1);\n             }\n         }\n@@ -600,9 +600,6 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n         .map(|module| shorten(plain_summary_line(module.doc_value())))\n         .unwrap_or(String::new());\n \n-    let crate_aliases =\n-        aliases.iter().map(|(k, values)| (k.clone(), values.clone())).collect::<Vec<_>>();\n-\n     #[derive(Serialize)]\n     struct CrateData<'a> {\n         doc: String,\n@@ -614,7 +611,8 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n         //\n         // To be noted: the `usize` elements are indexes to `items`.\n         #[serde(rename = \"a\")]\n-        aliases: Option<Vec<(String, Vec<usize>)>>,\n+        #[serde(skip_serializing_if = \"BTreeMap::is_empty\")]\n+        aliases: &'a BTreeMap<String, Vec<usize>>,\n     }\n \n     // Collect the index into a string\n@@ -625,7 +623,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n             doc: crate_doc,\n             items: crate_items,\n             paths: crate_paths,\n-            aliases: if crate_aliases.is_empty() { None } else { Some(crate_aliases) },\n+            aliases,\n         })\n         .expect(\"failed serde conversion\")\n         // All these `replace` calls are because we have to go through JS string for JSON content."}, {"sha": "9b498d66249e2fde35175429162a10f83da2690f", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e17ac668997410a1a9d2da8725329afb8b5f2901/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/e17ac668997410a1a9d2da8725329afb8b5f2901/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=e17ac668997410a1a9d2da8725329afb8b5f2901", "patch": "@@ -1781,12 +1781,13 @@ function getSearchElement() {\n                 if (aliases) {\n                     ALIASES[crate] = {};\n                     var j, local_aliases;\n-                    for (i = 0; i < aliases.length; ++i) {\n-                        var alias_name = aliases[i][0];\n+                    for (var alias_name in aliases) {\n+                        if (!aliases.hasOwnProperty(alias_name)) { continue; }\n+\n                         if (!ALIASES[crate].hasOwnProperty(alias_name)) {\n                             ALIASES[crate][alias_name] = [];\n                         }\n-                        local_aliases = aliases[i][1];\n+                        local_aliases = aliases[alias_name];\n                         for (j = 0; j < local_aliases.length; ++j) {\n                             ALIASES[crate][alias_name].push(local_aliases[j] + currentIndex);\n                         }"}]}