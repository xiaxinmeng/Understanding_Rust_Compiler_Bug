{"sha": "197da45e183097f108c6f5f283a30070845f182d", "node_id": "C_kwDOAAsO6NoAKDE5N2RhNDVlMTgzMDk3ZjEwOGM2ZjVmMjgzYTMwMDcwODQ1ZjE4MmQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-30T18:30:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-30T18:30:28Z"}, "message": "Rollup merge of #90399 - yuvaldolev:as-ref-overly-verbose-diagnostic, r=estebank\n\nSkipping verbose diagnostic suggestions when calling .as_ref() on type not implementing AsRef\n\nAddresses #89806\n\nSkipping suggestions when calling `.as_ref()` for types that do not implement the `AsRef` trait.\n\nr? `@estebank`", "tree": {"sha": "8820759ebacf4078fb73111d6660626db112643a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8820759ebacf4078fb73111d6660626db112643a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/197da45e183097f108c6f5f283a30070845f182d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfY9FCRBK7hj4Ov3rIwAAuHQIAJXATU3bQIDzSzpc4cw7dMy5\nI9cBQkwAuRQMsQerHaSQob0laUw8b8FsFvfkKbRGBam/dmBKX2b63CCGWS70COOa\nWpwX3L3h1ZQrJtOolMHefBr+Vj+t/vDwl41f6ZwKEhvV3RCrK3XEGLEZR/4G0m/E\nUM360CT2t64t5Btwn+LyUPmu8QTAqShzz8BNkc5kTch3Hl6ESVag9WfVlr90wfcw\nX1xsrsivtjowNymDjWiWCxU9GoNbCT3+xS0Cq4Fk3cZGA8/g2CKp4Dr8OJ9xAnTv\nYv/vdc7DbK1UDblMzH+ObmPkw4FjAISMJ9X/umKGJydnQmEkNk83nWtmPYAMtlI=\n=TsIj\n-----END PGP SIGNATURE-----\n", "payload": "tree 8820759ebacf4078fb73111d6660626db112643a\nparent 06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc\nparent cad2d21cb669b21b6a31edc0c60b2d0748f3a4f2\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1635618628 +0200\ncommitter GitHub <noreply@github.com> 1635618628 +0200\n\nRollup merge of #90399 - yuvaldolev:as-ref-overly-verbose-diagnostic, r=estebank\n\nSkipping verbose diagnostic suggestions when calling .as_ref() on type not implementing AsRef\n\nAddresses #89806\n\nSkipping suggestions when calling `.as_ref()` for types that do not implement the `AsRef` trait.\n\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/197da45e183097f108c6f5f283a30070845f182d", "html_url": "https://github.com/rust-lang/rust/commit/197da45e183097f108c6f5f283a30070845f182d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/197da45e183097f108c6f5f283a30070845f182d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "html_url": "https://github.com/rust-lang/rust/commit/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc"}, {"sha": "cad2d21cb669b21b6a31edc0c60b2d0748f3a4f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad2d21cb669b21b6a31edc0c60b2d0748f3a4f2", "html_url": "https://github.com/rust-lang/rust/commit/cad2d21cb669b21b6a31edc0c60b2d0748f3a4f2"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "8007b9f23776a169f141afa3d63ca7f61617839a", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/197da45e183097f108c6f5f283a30070845f182d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197da45e183097f108c6f5f283a30070845f182d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=197da45e183097f108c6f5f283a30070845f182d", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::ty::print::with_crate_prefix;\n use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_span::lev_distance;\n use rustc_span::symbol::{kw, sym, Ident};\n-use rustc_span::{source_map, FileName, MultiSpan, Span};\n+use rustc_span::{source_map, FileName, MultiSpan, Span, Symbol};\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc_trait_selection::traits::{FulfillmentError, Obligation};\n \n@@ -1251,6 +1251,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 self.tcx.lang_items().deref_trait(),\n                 self.tcx.lang_items().deref_mut_trait(),\n                 self.tcx.lang_items().drop_trait(),\n+                self.tcx.get_diagnostic_item(sym::AsRef),\n             ];\n             // Try alternative arbitrary self types that could fulfill this call.\n             // FIXME: probe for all types that *could* be arbitrary self-types, not\n@@ -1300,7 +1301,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             // We don't want to suggest a container type when the missing\n                             // method is `.clone()` or `.deref()` otherwise we'd suggest\n                             // `Arc::new(foo).clone()`, which is far from what the user wants.\n-                            let skip = skippable.contains(&did);\n+                            // Explicitly ignore the `Pin::as_ref()` method as `Pin` does not\n+                            // implement the `AsRef` trait.\n+                            let skip = skippable.contains(&did)\n+                                || ((\"Pin::new\" == *pre)\n+                                    && (Symbol::intern(\"as_ref\") == item_name.name));\n                             // Make sure the method is defined for the *actual* receiver: we don't\n                             // want to treat `Box<Self>` as a receiver if it only works because of\n                             // an autoderef to `&self`"}, {"sha": "69cec08652ae92f690eee2b7ef079c7d0f7dff89", "filename": "src/test/ui/typeck/issue-89806.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/197da45e183097f108c6f5f283a30070845f182d/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197da45e183097f108c6f5f283a30070845f182d/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs?ref=197da45e183097f108c6f5f283a30070845f182d", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    0u8.as_ref(); //~ ERROR no method named `as_ref` found for type `u8` in the current scope\n+}"}, {"sha": "c36b4967ee9962bf84b3b5e9464b83932be3a8a3", "filename": "src/test/ui/typeck/issue-89806.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/197da45e183097f108c6f5f283a30070845f182d/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/197da45e183097f108c6f5f283a30070845f182d/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr?ref=197da45e183097f108c6f5f283a30070845f182d", "patch": "@@ -0,0 +1,9 @@\n+error[E0599]: no method named `as_ref` found for type `u8` in the current scope\n+  --> $DIR/issue-89806.rs:2:9\n+   |\n+LL |     0u8.as_ref();\n+   |         ^^^^^^ method not found in `u8`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}