{"sha": "77ceba2bc033a230f77d6ac96a277191ca73fff2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Y2ViYTJiYzAzM2EyMzBmNzdkNmFjOTZhMjc3MTkxY2E3M2ZmZjI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-27T04:24:58Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-27T04:25:54Z"}, "message": "Write to the supplied buffer if one is supplied to format_input", "tree": {"sha": "7c9e8058d015691af4b0d8f5a7a87e1ea2c0252f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c9e8058d015691af4b0d8f5a7a87e1ea2c0252f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77ceba2bc033a230f77d6ac96a277191ca73fff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77ceba2bc033a230f77d6ac96a277191ca73fff2", "html_url": "https://github.com/rust-lang/rust/commit/77ceba2bc033a230f77d6ac96a277191ca73fff2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77ceba2bc033a230f77d6ac96a277191ca73fff2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17c5d389f5a0534d41105ada08f38640d61d5154", "url": "https://api.github.com/repos/rust-lang/rust/commits/17c5d389f5a0534d41105ada08f38640d61d5154", "html_url": "https://github.com/rust-lang/rust/commit/17c5d389f5a0534d41105ada08f38640d61d5154"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "ea45defe55cfa159e0ecbff31c6abc62b3cfe3cd", "filename": "src/filemap.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77ceba2bc033a230f77d6ac96a277191ca73fff2/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ceba2bc033a230f77d6ac96a277191ca73fff2/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=77ceba2bc033a230f77d6ac96a277191ca73fff2", "patch": "@@ -14,7 +14,7 @@\n use strings::string_buffer::StringBuffer;\n \n use std::fs::{self, File};\n-use std::io::{self, Write, Read, stdout, BufWriter};\n+use std::io::{self, Write, Read, sBufWriter};\n \n use config::{NewlineStyle, Config, WriteMode};\n use rustfmt_diff::{make_diff, print_diff, Mismatch};\n@@ -133,15 +133,11 @@ pub fn write_file<T>(text: &StringBuffer,\n             try!(write_system_newlines(file, text, config));\n         }\n         WriteMode::Plain => {\n-            let stdout = stdout();\n-            let stdout = stdout.lock();\n-            try!(write_system_newlines(stdout, text, config));\n+            try!(write_system_newlines(out, text, config));\n         }\n         WriteMode::Display | WriteMode::Coverage => {\n             println!(\"{}:\\n\", filename);\n-            let stdout = stdout();\n-            let stdout = stdout.lock();\n-            try!(write_system_newlines(stdout, text, config));\n+            try!(write_system_newlines(out, text, config));\n         }\n         WriteMode::Diff => {\n             if let Ok((ori, fmt)) = source_and_formatted_text(text, filename, config) {"}]}