{"sha": "18a48c1d6c7815eb56bac3798819a3d109e5c95c", "node_id": "C_kwDOAAsO6NoAKDE4YTQ4YzFkNmM3ODE1ZWI1NmJhYzM3OTg4MTlhM2QxMDllNWM5NWM", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T10:31:44Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port anonymous parameter diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "96983f3719f71fff5cbddbf39b91b2204506e5b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96983f3719f71fff5cbddbf39b91b2204506e5b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a48c1d6c7815eb56bac3798819a3d109e5c95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a48c1d6c7815eb56bac3798819a3d109e5c95c", "html_url": "https://github.com/rust-lang/rust/commit/18a48c1d6c7815eb56bac3798819a3d109e5c95c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a48c1d6c7815eb56bac3798819a3d109e5c95c/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "284ec37810f7d93cee6fd0a177220fc55afb7755", "url": "https://api.github.com/repos/rust-lang/rust/commits/284ec37810f7d93cee6fd0a177220fc55afb7755", "html_url": "https://github.com/rust-lang/rust/commit/284ec37810f7d93cee6fd0a177220fc55afb7755"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "4f8366bbedb46842684ad70d8eae9880c48f1e13", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/18a48c1d6c7815eb56bac3798819a3d109e5c95c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/18a48c1d6c7815eb56bac3798819a3d109e5c95c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=18a48c1d6c7815eb56bac3798819a3d109e5c95c", "patch": "@@ -331,3 +331,6 @@ lint-builtin-missing-copy-impl = type could implement `Copy`; consider adding `i\n \n lint-builtin-missing-debug-impl =\n     type does not implement `{$debug}`; consider adding `#[derive(Debug)]` or a manual implementation\n+\n+lint-builtin-anonymous-params = anonymous parameters are deprecated and will be removed in the next edition\n+    .suggestion = try naming the parameter or explicitly ignoring it"}, {"sha": "b14a3294fbcdb5aa40ddaa175377262daba307e1", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/18a48c1d6c7815eb56bac3798819a3d109e5c95c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a48c1d6c7815eb56bac3798819a3d109e5c95c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=18a48c1d6c7815eb56bac3798819a3d109e5c95c", "patch": "@@ -937,18 +937,14 @@ impl EarlyLintPass for AnonymousParameters {\n                                 (\"<type>\", Applicability::HasPlaceholders)\n                             };\n \n-                            lint.build(\n-                                \"anonymous parameters are deprecated and will be \\\n-                                     removed in the next edition\",\n-                            )\n-                            .span_suggestion(\n-                                arg.pat.span,\n-                                \"try naming the parameter or explicitly \\\n-                                            ignoring it\",\n-                                format!(\"_: {}\", ty_snip),\n-                                appl,\n-                            )\n-                            .emit();\n+                            lint.build(fluent::lint::builtin_anonymous_params)\n+                                .span_suggestion(\n+                                    arg.pat.span,\n+                                    fluent::lint::suggestion,\n+                                    format!(\"_: {}\", ty_snip),\n+                                    appl,\n+                                )\n+                                .emit();\n                         })\n                     }\n                 }"}]}