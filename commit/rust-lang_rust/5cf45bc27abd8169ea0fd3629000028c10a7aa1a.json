{"sha": "5cf45bc27abd8169ea0fd3629000028c10a7aa1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZjQ1YmMyN2FiZDgxNjllYTBmZDM2MjkwMDAwMjhjMTBhN2FhMWE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-17T18:18:12Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:11:19Z"}, "message": "Fix rebase issue", "tree": {"sha": "39e3c8ce68339e0c4489d90f1b04562f454d9374", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39e3c8ce68339e0c4489d90f1b04562f454d9374"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cf45bc27abd8169ea0fd3629000028c10a7aa1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf45bc27abd8169ea0fd3629000028c10a7aa1a", "html_url": "https://github.com/rust-lang/rust/commit/5cf45bc27abd8169ea0fd3629000028c10a7aa1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cf45bc27abd8169ea0fd3629000028c10a7aa1a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "972e25410651e31a9458a4a47cc739ecd446f35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/972e25410651e31a9458a4a47cc739ecd446f35a", "html_url": "https://github.com/rust-lang/rust/commit/972e25410651e31a9458a4a47cc739ecd446f35a"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "0d09644a3101fd1bc68cc4e4733f15b8c88b7f04", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cf45bc27abd8169ea0fd3629000028c10a7aa1a/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf45bc27abd8169ea0fd3629000028c10a7aa1a/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=5cf45bc27abd8169ea0fd3629000028c10a7aa1a", "patch": "@@ -1368,8 +1368,6 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         &self,\n         vid: ty::ConstVid<'tcx>\n     ) -> Result<&'tcx ty::Const<'tcx>, ty::UniverseIndex> {\n-        use self::unify_key::ConstVariableValue;\n-\n         match self.const_unification_table.borrow_mut().probe_value(vid).val {\n             ConstVariableValue::Known { value } => Ok(value),\n             ConstVariableValue::Unknown { universe } => Err(universe),"}]}