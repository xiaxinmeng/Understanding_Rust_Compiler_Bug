{"sha": "a154ef7ca1010b890e7dbe913d00140ed029945c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTRlZjdjYTEwMTBiODkwZTdkYmU5MTNkMDAxNDBlZDAyOTk0NWM=", "commit": {"author": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-16T14:57:14Z"}, "committer": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-18T09:22:27Z"}, "message": "Remove movable array, improve client code", "tree": {"sha": "4f077e645da76b97e25159dac77de0d0d4f7c909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f077e645da76b97e25159dac77de0d0d4f7c909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a154ef7ca1010b890e7dbe913d00140ed029945c", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEcPkYW+t8+2SKgl5T2MS9WuTZzE0FAmBTG9MACgkQ2MS9WuTZ\nzE29hwf+IoUkNnImAv74dejIZlLpYovsCcGV4PIFzQEcvDOGN6o/2z3eNoVPkW9U\nH6CVWha4oXzpMKqaPPF4Pcdpq7Gu2MN5TPoY9x9uWIuV1az3EMZzLZlahKE1wMaT\n3lGpO6nEzmLWc2l46j5Vt+KkX1Bi2xekCaL8TRRkF6e7wC9w8uh/hk6n6hvCqHt1\nlqSx4Z3RJdxSZylNeU1AeQ53IJKvuAe1v33OuTb54A1dSONWzYZhW577wwoskgDr\nA2AUvJ94WJ7DtzrcwoVsNdrMJMI+52keIaIBD/YqSRutnOrgeHA9MyCFJZOemvXg\niVoPSFoKecxA2vuTDqC0B8vXYR530A==\n=C+dF\n-----END PGP SIGNATURE-----", "payload": "tree 4f077e645da76b97e25159dac77de0d0d4f7c909\nparent 7d604584954660d255ad0929d3be8ce03f879d0c\nauthor ivan770 <leshenko.ivan770@gmail.com> 1615906634 +0200\ncommitter ivan770 <leshenko.ivan770@gmail.com> 1616059347 +0200\n\nRemove movable array, improve client code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a154ef7ca1010b890e7dbe913d00140ed029945c", "html_url": "https://github.com/rust-lang/rust/commit/a154ef7ca1010b890e7dbe913d00140ed029945c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a154ef7ca1010b890e7dbe913d00140ed029945c/comments", "author": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d604584954660d255ad0929d3be8ce03f879d0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d604584954660d255ad0929d3be8ce03f879d0c", "html_url": "https://github.com/rust-lang/rust/commit/7d604584954660d255ad0929d3be8ce03f879d0c"}], "stats": {"total": 44, "additions": 14, "deletions": 30}, "files": [{"sha": "5a0faaf7b0caf93ab5fcd2a1a561b97583fcac85", "filename": "crates/ide/src/move_item.rs", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a154ef7ca1010b890e7dbe913d00140ed029945c/crates%2Fide%2Fsrc%2Fmove_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a154ef7ca1010b890e7dbe913d00140ed029945c/crates%2Fide%2Fsrc%2Fmove_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmove_item.rs?ref=a154ef7ca1010b890e7dbe913d00140ed029945c", "patch": "@@ -33,44 +33,25 @@ pub(crate) fn move_item(\n }\n \n fn find_ancestors(item: SyntaxElement, direction: Direction) -> Option<TextEdit> {\n-    let movable = [\n-        SyntaxKind::MATCH_ARM,\n-        // https://github.com/intellij-rust/intellij-rust/blob/master/src/main/kotlin/org/rust/ide/actions/mover/RsStatementUpDownMover.kt\n-        SyntaxKind::LET_STMT,\n-        SyntaxKind::EXPR_STMT,\n-        SyntaxKind::MATCH_EXPR,\n-        // https://github.com/intellij-rust/intellij-rust/blob/master/src/main/kotlin/org/rust/ide/actions/mover/RsItemUpDownMover.kt\n-        SyntaxKind::TRAIT,\n-        SyntaxKind::IMPL,\n-        SyntaxKind::MACRO_CALL,\n-        SyntaxKind::MACRO_DEF,\n-        SyntaxKind::STRUCT,\n-        SyntaxKind::ENUM,\n-        SyntaxKind::MODULE,\n-        SyntaxKind::USE,\n-        SyntaxKind::FN,\n-        SyntaxKind::CONST,\n-        SyntaxKind::TYPE_ALIAS,\n-    ];\n-\n     let root = match item {\n         NodeOrToken::Node(node) => node,\n         NodeOrToken::Token(token) => token.parent(),\n     };\n \n     let ancestor = once(root.clone())\n         .chain(root.ancestors())\n-        .filter(|ancestor| movable.contains(&ancestor.kind()))\n-        .max_by_key(|ancestor| kind_priority(ancestor.kind()))?;\n+        .filter_map(|ancestor| kind_priority(ancestor.kind()).map(|priority| (priority, ancestor)))\n+        .max_by_key(|(priority, _)| *priority)\n+        .map(|(_, ancestor)| ancestor)?;\n \n     move_in_direction(&ancestor, direction)\n }\n \n-fn kind_priority(kind: SyntaxKind) -> i32 {\n+fn kind_priority(kind: SyntaxKind) -> Option<i32> {\n     match kind {\n-        SyntaxKind::MATCH_ARM => 4,\n+        SyntaxKind::MATCH_ARM => Some(4),\n \n-        SyntaxKind::LET_STMT | SyntaxKind::EXPR_STMT | SyntaxKind::MATCH_EXPR => 3,\n+        SyntaxKind::LET_STMT | SyntaxKind::EXPR_STMT | SyntaxKind::MATCH_EXPR => Some(3),\n \n         SyntaxKind::TRAIT\n         | SyntaxKind::IMPL\n@@ -82,10 +63,9 @@ fn kind_priority(kind: SyntaxKind) -> i32 {\n         | SyntaxKind::USE\n         | SyntaxKind::FN\n         | SyntaxKind::CONST\n-        | SyntaxKind::TYPE_ALIAS => 2,\n+        | SyntaxKind::TYPE_ALIAS => Some(2),\n \n-        // Placeholder for items, that are non-movable, and filtered even before kind_priority call\n-        _ => 1,\n+        _ => None,\n     }\n }\n "}, {"sha": "ad0b533b936781f680ea040dd8880ae44a558f26", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a154ef7ca1010b890e7dbe913d00140ed029945c/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a154ef7ca1010b890e7dbe913d00140ed029945c/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=a154ef7ca1010b890e7dbe913d00140ed029945c", "patch": "@@ -148,16 +148,20 @@ export function moveItem(ctx: Ctx, direction: ra.Direction): Cmd {\n         const client = ctx.client;\n         if (!editor || !client) return;\n \n-        const edit: lc.TextDocumentEdit = await client.sendRequest(ra.moveItem, {\n+        const edit = await client.sendRequest(ra.moveItem, {\n             range: client.code2ProtocolConverter.asRange(editor.selection),\n             textDocument: ctx.client.code2ProtocolConverter.asTextDocumentIdentifier(editor.document),\n             direction\n         });\n \n+        if(!edit) return;\n+\n         await editor.edit((builder) => {\n             client.protocol2CodeConverter.asTextEdits(edit.edits).forEach((edit: any) => {\n                 builder.replace(edit.range, edit.newText);\n             });\n+        }).then(() => {\n+            editor.selection = new vscode.Selection(editor.selection.end, editor.selection.end);\n         });\n     };\n }"}, {"sha": "4c070beb0a8154acd891e53536295fe0a374b8e2", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a154ef7ca1010b890e7dbe913d00140ed029945c/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a154ef7ca1010b890e7dbe913d00140ed029945c/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=a154ef7ca1010b890e7dbe913d00140ed029945c", "patch": "@@ -128,7 +128,7 @@ export interface OpenCargoTomlParams {\n     textDocument: lc.TextDocumentIdentifier;\n }\n \n-export const moveItem = new lc.RequestType<MoveItemParams, lc.TextDocumentEdit, void>(\"experimental/moveItem\");\n+export const moveItem = new lc.RequestType<MoveItemParams, lc.TextDocumentEdit | void, void>(\"experimental/moveItem\");\n \n export interface MoveItemParams {\n     textDocument: lc.TextDocumentIdentifier,"}]}