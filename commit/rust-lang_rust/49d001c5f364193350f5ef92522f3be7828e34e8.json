{"sha": "49d001c5f364193350f5ef92522f3be7828e34e8", "node_id": "C_kwDOAAsO6NoAKDQ5ZDAwMWM1ZjM2NDE5MzM1MGY1ZWY5MjUyMmYzYmU3ODI4ZTM0ZTg", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-08-01T19:15:58Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-08-01T19:15:58Z"}, "message": "fmt...", "tree": {"sha": "c6e05659068d243178b6352f93a8e36faa8ae387", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e05659068d243178b6352f93a8e36faa8ae387"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49d001c5f364193350f5ef92522f3be7828e34e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49d001c5f364193350f5ef92522f3be7828e34e8", "html_url": "https://github.com/rust-lang/rust/commit/49d001c5f364193350f5ef92522f3be7828e34e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49d001c5f364193350f5ef92522f3be7828e34e8/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "html_url": "https://github.com/rust-lang/rust/commit/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "ca7862c9dc46778be5f69fa54b76bf54bfc48a86", "filename": "compiler/rustc_infer/src/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/49d001c5f364193350f5ef92522f3be7828e34e8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d001c5f364193350f5ef92522f3be7828e34e8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=49d001c5f364193350f5ef92522f3be7828e34e8", "patch": "@@ -511,7 +511,9 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Canonicalizer<'cx, 'tcx> {\n             }\n             ty::ConstKind::Placeholder(placeholder) => {\n                 return self.canonicalize_const_var(\n-                    CanonicalVarInfo { kind: CanonicalVarKind::PlaceholderConst(placeholder, ct.ty()) },\n+                    CanonicalVarInfo {\n+                        kind: CanonicalVarKind::PlaceholderConst(placeholder, ct.ty()),\n+                    },\n                     ct,\n                 );\n             }\n@@ -696,10 +698,13 @@ impl<'cx, 'tcx> Canonicalizer<'cx, 'tcx> {\n                         })\n                     }\n                     CanonicalVarKind::PlaceholderConst(placeholder, t) => {\n-                        CanonicalVarKind::PlaceholderConst(ty::Placeholder {\n-                            universe: reverse_universe_map[&placeholder.universe],\n-                            ..placeholder\n-                        }, t)\n+                        CanonicalVarKind::PlaceholderConst(\n+                            ty::Placeholder {\n+                                universe: reverse_universe_map[&placeholder.universe],\n+                                ..placeholder\n+                            },\n+                            t,\n+                        )\n                     }\n                 },\n             })"}, {"sha": "9c2f1371b02bc80a2527a1211edbba8dbd63fe61", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49d001c5f364193350f5ef92522f3be7828e34e8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d001c5f364193350f5ef92522f3be7828e34e8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=49d001c5f364193350f5ef92522f3be7828e34e8", "patch": "@@ -744,10 +744,7 @@ impl<'tcx> TypeFolder<'tcx> for BoundVarReplacer<'_, 'tcx> {\n             }\n             ty::ConstKind::Bound(debruijn, bound_const) if debruijn >= self.current_index => {\n                 let universe = self.universe_for(debruijn);\n-                let p = ty::PlaceholderConst {\n-                    universe,\n-                    name: bound_const,\n-                };\n+                let p = ty::PlaceholderConst { universe, name: bound_const };\n                 self.mapped_consts.insert(p, bound_const);\n                 self.infcx\n                     .tcx"}]}