{"sha": "145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTE5MGJkMmFlYzNiNmFkOWU0ZWQ0ZGE4NDkwZDgxMGM5ZDBiZWU=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2016-02-24T18:55:49Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2016-02-24T18:56:28Z"}, "message": "Capitalize some occurences of Rust in documentation", "tree": {"sha": "8bd49894fa777aecc266e4a505f75427546a1a11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bd49894fa777aecc266e4a505f75427546a1a11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "html_url": "https://github.com/rust-lang/rust/commit/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef8d426050318934d16d962325ec002eaf0c29d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef8d426050318934d16d962325ec002eaf0c29d", "html_url": "https://github.com/rust-lang/rust/commit/0ef8d426050318934d16d962325ec002eaf0c29d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "70d71c14ddf1686da0714ea4612285ac716181db", "filename": "src/doc/book/ownership.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Fbook%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Fbook%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fownership.md?ref=145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "patch": "@@ -157,7 +157,7 @@ this point of time). These two parts of the vector (the one on the stack and\n one on the heap) must agree with each other at all times with regards to\n things like the length, capacity etc.\n \n-When we move `v` to `v2`, rust actually does a bitwise copy of the vector\n+When we move `v` to `v2`, Rust actually does a bitwise copy of the vector\n object `v` into the stack allocation represented by `v2`. This shallow copy\n does not create a copy of the heap allocation containing the actual data.\n Which means that there would be two pointers to the contents of the vector"}, {"sha": "b124f3ffc4652d48488bba4a03b22a19ba46b48c", "filename": "src/doc/nomicon/other-reprs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Fnomicon%2Fother-reprs.md", "raw_url": "https://github.com/rust-lang/rust/raw/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Fnomicon%2Fother-reprs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fother-reprs.md?ref=145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "patch": "@@ -57,7 +57,7 @@ These reprs have no effect on a struct.\n \n # repr(packed)\n \n-`repr(packed)` forces rust to strip any padding, and only align the type to a\n+`repr(packed)` forces Rust to strip any padding, and only align the type to a\n byte. This may improve the memory footprint, but will likely have other negative\n side-effects.\n "}, {"sha": "718822b2bd0ac40ce66fe75c0149bc816950659d", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/145190bd2aec3b6ad9e4ed4da8490d810c9d0bee/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=145190bd2aec3b6ad9e4ed4da8490d810c9d0bee", "patch": "@@ -1764,7 +1764,7 @@ pub mod submodule {\n # fn main() {}\n ```\n \n-For a rust program to pass the privacy checking pass, all paths must be valid\n+For a Rust program to pass the privacy checking pass, all paths must be valid\n accesses given the two rules above. This includes all use statements,\n expressions, types, etc.\n "}]}