{"sha": "d5bb6056f16bae301b498bd44ad286685bb5e618", "node_id": "C_kwDOAAsO6NoAKGQ1YmI2MDU2ZjE2YmFlMzAxYjQ5OGJkNDRhZDI4NjY4NWJiNWU2MTg", "commit": {"author": {"name": "bmoxb", "email": "maxoblack@yahoo.com", "date": "2023-03-09T18:55:28Z"}, "committer": {"name": "bmoxb", "email": "maxoblack@yahoo.com", "date": "2023-03-09T18:55:33Z"}, "message": "Document the resulting values produced when using `From<bool>` on floats", "tree": {"sha": "08250d7bf96601dc98461757d939a9dc59d98891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08250d7bf96601dc98461757d939a9dc59d98891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5bb6056f16bae301b498bd44ad286685bb5e618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5bb6056f16bae301b498bd44ad286685bb5e618", "html_url": "https://github.com/rust-lang/rust/commit/d5bb6056f16bae301b498bd44ad286685bb5e618", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5bb6056f16bae301b498bd44ad286685bb5e618/comments", "author": {"login": "bmoxb", "id": 42641081, "node_id": "MDQ6VXNlcjQyNjQxMDgx", "avatar_url": "https://avatars.githubusercontent.com/u/42641081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmoxb", "html_url": "https://github.com/bmoxb", "followers_url": "https://api.github.com/users/bmoxb/followers", "following_url": "https://api.github.com/users/bmoxb/following{/other_user}", "gists_url": "https://api.github.com/users/bmoxb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmoxb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmoxb/subscriptions", "organizations_url": "https://api.github.com/users/bmoxb/orgs", "repos_url": "https://api.github.com/users/bmoxb/repos", "events_url": "https://api.github.com/users/bmoxb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmoxb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bmoxb", "id": 42641081, "node_id": "MDQ6VXNlcjQyNjQxMDgx", "avatar_url": "https://avatars.githubusercontent.com/u/42641081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmoxb", "html_url": "https://github.com/bmoxb", "followers_url": "https://api.github.com/users/bmoxb/followers", "following_url": "https://api.github.com/users/bmoxb/following{/other_user}", "gists_url": "https://api.github.com/users/bmoxb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmoxb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmoxb/subscriptions", "organizations_url": "https://api.github.com/users/bmoxb/orgs", "repos_url": "https://api.github.com/users/bmoxb/repos", "events_url": "https://api.github.com/users/bmoxb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmoxb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39f2657d1101b50f9b71ae460b762d330cc8426b", "url": "https://api.github.com/repos/rust-lang/rust/commits/39f2657d1101b50f9b71ae460b762d330cc8426b", "html_url": "https://github.com/rust-lang/rust/commit/39f2657d1101b50f9b71ae460b762d330cc8426b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "8c407d07c51cede72edd19507dd81bf9c2d502aa", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5bb6056f16bae301b498bd44ad286685bb5e618/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5bb6056f16bae301b498bd44ad286685bb5e618/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=d5bb6056f16bae301b498bd44ad286685bb5e618", "patch": "@@ -172,7 +172,8 @@ impl_from! { f32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\"\n #[stable(feature = \"float_from_bool\", since = \"1.68.0\")]\n #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n impl const From<bool> for f32 {\n-    /// Converts `bool` to `f32` losslessly.\n+    /// Converts `bool` to `f32` losslessly. The resulting value is `0.0` for\n+    /// `false` and `1.0` for `true` values.\n     #[inline]\n     fn from(small: bool) -> Self {\n         small as u8 as Self"}]}