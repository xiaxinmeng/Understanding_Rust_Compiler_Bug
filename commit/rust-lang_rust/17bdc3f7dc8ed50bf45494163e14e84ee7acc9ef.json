{"sha": "17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YmRjM2Y3ZGM4ZWQ1MGJmNDU0OTQxNjNlMTRlODRlZTdhY2M5ZWY=", "commit": {"author": {"name": "Titouan Vervack", "email": "tivervac@gmail.com", "date": "2014-12-25T18:11:01Z"}, "committer": {"name": "Titouan Vervack", "email": "tivervac@gmail.com", "date": "2014-12-25T18:11:01Z"}, "message": "Fixed a small typo", "tree": {"sha": "cb67c7aba8be547d627776ddf8983d1ab1900cf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb67c7aba8be547d627776ddf8983d1ab1900cf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef", "html_url": "https://github.com/rust-lang/rust/commit/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef/comments", "author": {"login": "tivervac", "id": 3389524, "node_id": "MDQ6VXNlcjMzODk1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3389524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tivervac", "html_url": "https://github.com/tivervac", "followers_url": "https://api.github.com/users/tivervac/followers", "following_url": "https://api.github.com/users/tivervac/following{/other_user}", "gists_url": "https://api.github.com/users/tivervac/gists{/gist_id}", "starred_url": "https://api.github.com/users/tivervac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tivervac/subscriptions", "organizations_url": "https://api.github.com/users/tivervac/orgs", "repos_url": "https://api.github.com/users/tivervac/repos", "events_url": "https://api.github.com/users/tivervac/events{/privacy}", "received_events_url": "https://api.github.com/users/tivervac/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tivervac", "id": 3389524, "node_id": "MDQ6VXNlcjMzODk1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3389524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tivervac", "html_url": "https://github.com/tivervac", "followers_url": "https://api.github.com/users/tivervac/followers", "following_url": "https://api.github.com/users/tivervac/following{/other_user}", "gists_url": "https://api.github.com/users/tivervac/gists{/gist_id}", "starred_url": "https://api.github.com/users/tivervac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tivervac/subscriptions", "organizations_url": "https://api.github.com/users/tivervac/orgs", "repos_url": "https://api.github.com/users/tivervac/repos", "events_url": "https://api.github.com/users/tivervac/events{/privacy}", "received_events_url": "https://api.github.com/users/tivervac/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f673e9841f58a2196efd3b757804efa2575f8b79", "url": "https://api.github.com/repos/rust-lang/rust/commits/f673e9841f58a2196efd3b757804efa2575f8b79", "html_url": "https://github.com/rust-lang/rust/commit/f673e9841f58a2196efd3b757804efa2575f8b79"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1e4816e122e1155e3d62661d1c474d4aa3342ed0", "filename": "src/doc/guide.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=17bdc3f7dc8ed50bf45494163e14e84ee7acc9ef", "patch": "@@ -4152,7 +4152,7 @@ We've made a struct that represents a circle. We then write an `impl` block,\n and inside it, define a method, `area`. Methods take a  special first\n parameter, `&self`. There are three variants: `self`, `&self`, and `&mut self`.\n You can think of this first parameter as being the `x` in `x.foo()`. The three\n-variants correspond to the three kinds of thing `x` could be: `self` if it's\n+variants correspond to the three kinds of things `x` could be: `self` if it's\n just a value on the stack, `&self` if it's a reference, and `&mut self` if it's\n a mutable reference. We should default to using `&self`, as it's the most\n common."}]}