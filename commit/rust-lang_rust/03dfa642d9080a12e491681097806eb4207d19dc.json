{"sha": "03dfa642d9080a12e491681097806eb4207d19dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZGZhNjQyZDkwODBhMTJlNDkxNjgxMDk3ODA2ZWI0MjA3ZDE5ZGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T05:42:42Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:26Z"}, "message": "lints: promote levels.rs to lint.rs & extract passes.rs", "tree": {"sha": "60c8f554ec858b4d340e28c8f36a037e80dec37d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60c8f554ec858b4d340e28c8f36a037e80dec37d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03dfa642d9080a12e491681097806eb4207d19dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03dfa642d9080a12e491681097806eb4207d19dc", "html_url": "https://github.com/rust-lang/rust/commit/03dfa642d9080a12e491681097806eb4207d19dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03dfa642d9080a12e491681097806eb4207d19dc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16bf2783b5cd5f0a6155094f885890f4c0834477", "url": "https://api.github.com/repos/rust-lang/rust/commits/16bf2783b5cd5f0a6155094f885890f4c0834477", "html_url": "https://github.com/rust-lang/rust/commit/16bf2783b5cd5f0a6155094f885890f4c0834477"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "c4332fa0c63468b27f307711a690b094ae74bc88", "filename": "src/librustc/lint.rs", "status": "renamed", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -1,12 +1,12 @@\n use std::cmp;\n \n use crate::ich::StableHashingContext;\n-use crate::lint::context::{CheckLintNameResult, LintStore};\n+use crate::lint::context::CheckLintNameResult;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir::HirId;\n-use rustc_session::lint::{builtin, Level, Lint, LintId};\n+pub use rustc_session::lint::{builtin, Level, Lint, LintId, LintPass};\n use rustc_session::{DiagnosticMessageId, Session};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n@@ -19,6 +19,14 @@ use syntax::sess::feature_err;\n \n use rustc_error_codes::*;\n \n+mod context;\n+pub mod internal;\n+mod passes;\n+\n+pub use context::add_elided_lifetime_in_path_suggestion;\n+pub use context::{EarlyContext, LateContext, LintContext, LintStore};\n+pub use passes::{EarlyLintPass, EarlyLintPassObject, LateLintPass, LateLintPassObject};\n+\n /// How a lint level was set.\n #[derive(Clone, Copy, PartialEq, Eq, HashStable)]\n pub enum LintSource {", "previous_filename": "src/librustc/lint/levels.rs"}, {"sha": "702d707346bd8800fcbd45c6fbd654fe0b1a38e7", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -17,8 +17,8 @@\n use self::TargetLint::*;\n \n use crate::hir::map::definitions::{DefPathData, DisambiguatedDefPathData};\n-use crate::lint::levels::LintLevelsBuilder;\n-use crate::lint::{EarlyLintPassObject, LateLintPassObject};\n+use crate::lint::passes::{EarlyLintPassObject, LateLintPassObject};\n+use crate::lint::LintLevelsBuilder;\n use crate::middle::privacy::AccessLevels;\n use crate::middle::stability;\n use crate::ty::layout::{LayoutError, LayoutOf, TyLayout};"}, {"sha": "33282a7291eb9a11cd927666bcfecedce63dd3c2", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -1,7 +1,8 @@\n //! Some lints that are only useful in the compiler or crates that use compiler internals, such as\n //! Clippy.\n \n-use crate::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n+use crate::lint::context::{EarlyContext, LateContext, LintContext};\n+use crate::lint::passes::{EarlyLintPass, LateLintPass};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n use rustc_hir::{GenericArg, HirId, MutTy, Mutability, Path, PathSegment, QPath, Ty, TyKind};"}, {"sha": "41671ccc6c0fc1ad7cd6e9ea04823966c375fa71", "filename": "src/librustc/lint/passes.rs", "status": "renamed", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Flint%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fpasses.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -18,8 +18,8 @@\n //! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n //! in `context.rs`.\n \n-pub use self::levels::LintSource::{self, *};\n pub use self::Level::*;\n+pub use crate::lint::LintSource::{self, *};\n \n use rustc_data_structures::sync;\n use rustc_hir as hir;\n@@ -308,9 +308,3 @@ macro_rules! declare_combined_early_lint_pass {\n pub type EarlyLintPassObject = Box<dyn EarlyLintPass + sync::Send + sync::Sync + 'static>;\n pub type LateLintPassObject =\n     Box<dyn for<'a, 'tcx> LateLintPass<'a, 'tcx> + sync::Send + sync::Sync + 'static>;\n-\n-mod context;\n-pub mod internal;\n-mod levels;\n-\n-pub use self::levels::{struct_lint_level, LintLevelMap, LintLevelSets, LintLevelsBuilder};", "previous_filename": "src/librustc/lint/mod.rs"}, {"sha": "8643bd63d8cba29e9ab99dbf4e14fcba938c2ed1", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -154,7 +154,7 @@ impl<'tcx> ConstEvalErr<'tcx> {\n                 .next()\n                 .unwrap_or(lint_root);\n             tcx.struct_span_lint_hir(\n-                crate::rustc::lint::builtin::CONST_ERR,\n+                rustc_session::lint::builtin::CONST_ERR,\n                 hir_id,\n                 tcx.span,\n                 message,"}, {"sha": "7f053f9de2953f977ac35e6639c093caa2cd5020", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -1,8 +1,9 @@\n-use rustc::lint::{FutureIncompatibleInfo, LateContext, LateLintPass, LintContext};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::symbol::sym;\n \n declare_lint! {"}, {"sha": "f2778b2aa6bcd220d38ba71e8c9a341243302851", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -3,7 +3,6 @@\n // from live codes are live, and everything else is dead.\n \n use rustc::hir::map::Map;\n-use rustc::lint;\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::middle::privacy;\n use rustc::ty::{self, DefIdTree, TyCtxt};\n@@ -14,6 +13,7 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{Node, PatKind, TyKind};\n+use rustc_session::lint;\n \n use rustc_span;\n use rustc_span::symbol::sym;"}, {"sha": "61a7bc765bcf241c572863a9a27d3601081d6afb", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -1,4 +1,3 @@\n-use rustc::lint;\n use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevels;\n use rustc::session::config::ErrorOutputType;\n@@ -14,6 +13,7 @@ use rustc_hir::HirId;\n use rustc_interface::interface;\n use rustc_lint;\n use rustc_resolve as resolve;\n+use rustc_session::lint;\n \n use rustc_errors::emitter::{Emitter, EmitterWriter};\n use rustc_errors::json::JsonEmitter;"}, {"sha": "032a5c83d1724cd981b5a6199ce3552bfe5039ca", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03dfa642d9080a12e491681097806eb4207d19dc/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=03dfa642d9080a12e491681097806eb4207d19dc", "patch": "@@ -36,6 +36,7 @@ extern crate rustc_metadata;\n extern crate rustc_mir;\n extern crate rustc_parse;\n extern crate rustc_resolve;\n+extern crate rustc_session;\n extern crate rustc_span as rustc_span;\n extern crate rustc_target;\n extern crate rustc_typeck;"}]}