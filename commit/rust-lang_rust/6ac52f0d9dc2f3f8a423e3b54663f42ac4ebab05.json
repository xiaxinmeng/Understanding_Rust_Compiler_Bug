{"sha": "6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYzUyZjBkOWRjMmYzZjhhNDIzZTNiNTQ2NjNmNDJhYzRlYmFiMDU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-24T23:55:05Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-25T01:45:01Z"}, "message": "Don't process `[]` and `()` in intra-doc links\n\nThese caused several false positives when documenting rustc, which means\nthere will likely be many more false positives in the rest of the\necosystem.", "tree": {"sha": "0c9b0afae7e303c05224e65f44fd1bfe15e66aac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c9b0afae7e303c05224e65f44fd1bfe15e66aac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "html_url": "https://github.com/rust-lang/rust/commit/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8842c1ccf33649f00e72a6f0be284919a847e69b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8842c1ccf33649f00e72a6f0be284919a847e69b", "html_url": "https://github.com/rust-lang/rust/commit/8842c1ccf33649f00e72a6f0be284919a847e69b"}], "stats": {"total": 141, "additions": 109, "deletions": 32}, "files": [{"sha": "1fd0b3a293190a5376842d727f128bce9f20fca8", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "patch": "@@ -1020,7 +1020,7 @@ impl LinkCollector<'_, '_> {\n             (link.trim(), None)\n         };\n \n-        if path_str.contains(|ch: char| !(ch.is_alphanumeric() || \":_<>, !*()[]&;\".contains(ch))) {\n+        if path_str.contains(|ch: char| !(ch.is_alphanumeric() || \":_<>, !*&;\".contains(ch))) {\n             return None;\n         }\n \n@@ -2085,10 +2085,11 @@ fn resolve_primitive(path_str: &str, ns: Namespace) -> Option<Res> {\n         \"char\" => Char,\n         \"bool\" | \"true\" | \"false\" => Bool,\n         \"str\" => Str,\n-        \"slice\" | \"&[]\" | \"[T]\" => Slice,\n-        \"array\" | \"[]\" | \"[T;N]\" => Array,\n-        \"tuple\" | \"(,)\" => Tuple,\n-        \"unit\" | \"()\" => Unit,\n+        // See #80181 for why these don't have symbols associated.\n+        \"slice\" => Slice,\n+        \"array\" => Array,\n+        \"tuple\" => Tuple,\n+        \"unit\" => Unit,\n         \"pointer\" | \"*\" | \"*const\" | \"*mut\" => RawPointer,\n         \"reference\" | \"&\" | \"&mut\" => Reference,\n         \"fn\" => Fn,"}, {"sha": "114502b0ddf4ebfce1cfd6a9c23be74433d89888", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs?ref=6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "patch": "@@ -0,0 +1,34 @@\n+#![deny(broken_intra_doc_links)]\n+// These are links that could reasonably expected to work, but don't.\n+\n+// `[]` isn't supported because it had too many false positives.\n+//! [X]([T]::not_here)\n+//! [Y](&[]::not_here)\n+//! [X]([]::not_here)\n+//! [Y]([T;N]::not_here)\n+\n+// These don't work because markdown syntax doesn't allow it.\n+//! [[T]::rotate_left] //~ ERROR unresolved link to `T`\n+//! [&[]::not_here]\n+//![Z]([T; N]::map) //~ ERROR unresolved link to `Z`\n+//! [`[T; N]::map`]\n+//! [[]::map]\n+//! [Z][] //~ ERROR unresolved link to `Z`\n+//!\n+//! [Z]: [T; N]::map //~ ERROR unresolved link to `Z`\n+\n+// `()` isn't supported because it had too many false positives.\n+//! [()::not_here]\n+//! [X]((,)::not_here)\n+//! [(,)::not_here]\n+\n+// FIXME: Associated items on some primitives aren't working, because the impls\n+// are part of the compiler instead of being part of the source code.\n+//! [unit::eq] //~ ERROR unresolved\n+//! [tuple::eq] //~ ERROR unresolved\n+//! [fn::eq] //~ ERROR unresolved\n+//! [never::eq] //~ ERROR unresolved\n+\n+// FIXME(#78800): This breaks because it's a blanket impl\n+// (I think? Might break for other reasons too.)\n+//! [reference::deref] //~ ERROR unresolved"}, {"sha": "ea831e648f63805811ec1f6ceb213c895d4d9bc9", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.stderr", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr?ref=6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "patch": "@@ -0,0 +1,69 @@\n+error: unresolved link to `T`\n+  --> $DIR/non-path-primitives.rs:11:7\n+   |\n+LL | //! [[T]::rotate_left]\n+   |       ^ no item named `T` in scope\n+   |\n+note: the lint level is defined here\n+  --> $DIR/non-path-primitives.rs:1:9\n+   |\n+LL | #![deny(broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n+\n+error: unresolved link to `Z`\n+  --> $DIR/non-path-primitives.rs:13:5\n+   |\n+LL | //![Z]([T; N]::map)\n+   |     ^ no item named `Z` in scope\n+   |\n+   = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n+\n+error: unresolved link to `Z`\n+  --> $DIR/non-path-primitives.rs:16:6\n+   |\n+LL | //! [Z][]\n+   |      ^ no item named `Z` in scope\n+   |\n+   = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n+\n+error: unresolved link to `Z`\n+  --> $DIR/non-path-primitives.rs:18:6\n+   |\n+LL | //! [Z]: [T; N]::map\n+   |      ^ no item named `Z` in scope\n+   |\n+   = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n+\n+error: unresolved link to `unit::eq`\n+  --> $DIR/non-path-primitives.rs:27:6\n+   |\n+LL | //! [unit::eq]\n+   |      ^^^^^^^^ the builtin type `unit` has no associated item named `eq`\n+\n+error: unresolved link to `tuple::eq`\n+  --> $DIR/non-path-primitives.rs:28:6\n+   |\n+LL | //! [tuple::eq]\n+   |      ^^^^^^^^^ the builtin type `tuple` has no associated item named `eq`\n+\n+error: unresolved link to `fn::eq`\n+  --> $DIR/non-path-primitives.rs:29:6\n+   |\n+LL | //! [fn::eq]\n+   |      ^^^^^^ the builtin type `fn` has no associated item named `eq`\n+\n+error: unresolved link to `never::eq`\n+  --> $DIR/non-path-primitives.rs:30:6\n+   |\n+LL | //! [never::eq]\n+   |      ^^^^^^^^^ the builtin type `never` has no associated item named `eq`\n+\n+error: unresolved link to `reference::deref`\n+  --> $DIR/non-path-primitives.rs:34:6\n+   |\n+LL | //! [reference::deref]\n+   |      ^^^^^^^^^^^^^^^^ the builtin type `reference` has no associated item named `deref`\n+\n+error: aborting due to 9 previous errors\n+"}, {"sha": "ad4f6ddd9de698e53248e713d656187a10de3f57", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=6ac52f0d9dc2f3f8a423e3b54663f42ac4ebab05", "patch": "@@ -3,28 +3,10 @@\n #![deny(broken_intra_doc_links)]\n \n // @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'slice::rotate_left'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'X'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'Y'\n //! [slice::rotate_left]\n-//! [X]([T]::rotate_left)\n-//! [Y](&[]::rotate_left)\n-// These don't work because markdown syntax doesn't allow it.\n-// [[T]::rotate_left]\n-//! [&[]::rotate_left]\n \n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html#method.map\"]' 'array::map'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html#method.map\"]' 'X'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html#method.map\"]' 'Y'\n //! [array::map]\n-//! [X]([]::map)\n-//! [Y]([T;N]::map)\n-// These don't work because markdown syntax doesn't allow it.\n-// [Z]([T; N]::map)\n-//! [`[T; N]::map`]\n-//! [[]::map]\n-// [Z][]\n-//\n-// [Z]: [T; N]::map\n \n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' 'pointer::is_null'\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' '*const::is_null'\n@@ -35,20 +17,11 @@\n //! [*mut::is_null]\n //! [*::is_null]\n \n-// FIXME: Associated items on some primitives aren't working, because the impls\n-// are part of the compiler instead of being part of the source code.\n-\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\"]' 'unit'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\"]' '()'\n //! [unit]\n-//! [()]\n \n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\"]' 'tuple'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\"]' 'X'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\"]' '(,)'\n //! [tuple]\n-//! [X]((,))\n-//! [(,)]\n \n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\"]' 'reference'\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\"]' '&'"}]}