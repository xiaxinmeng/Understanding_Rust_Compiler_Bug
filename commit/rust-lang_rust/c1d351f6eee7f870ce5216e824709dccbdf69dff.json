{"sha": "c1d351f6eee7f870ce5216e824709dccbdf69dff", "node_id": "C_kwDOAAsO6NoAKGMxZDM1MWY2ZWVlN2Y4NzBjZTUyMTZlODI0NzA5ZGNjYmRmNjlkZmY", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-01-23T00:49:12Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-03-16T15:35:24Z"}, "message": "rustc_error: make ErrorReported impossible to construct\n\nThere are a few places were we have to construct it, though, and a few\nplaces that are more invasive to change. To do this, we create a\nconstructor with a long obvious name.", "tree": {"sha": "d43ac86e04b45e9887156cdc4132c6f84a698e79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43ac86e04b45e9887156cdc4132c6f84a698e79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1d351f6eee7f870ce5216e824709dccbdf69dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d351f6eee7f870ce5216e824709dccbdf69dff", "html_url": "https://github.com/rust-lang/rust/commit/c1d351f6eee7f870ce5216e824709dccbdf69dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1d351f6eee7f870ce5216e824709dccbdf69dff/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a918d8b55bd7ec9bbec0c01c1362e842342d7729", "url": "https://api.github.com/repos/rust-lang/rust/commits/a918d8b55bd7ec9bbec0c01c1362e842342d7729", "html_url": "https://github.com/rust-lang/rust/commit/a918d8b55bd7ec9bbec0c01c1362e842342d7729"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a8c2feec453c8a87ec742a5656c13087abcdb4d2", "filename": "src/parse/macros/lazy_static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fmacros%2Flazy_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fmacros%2Flazy_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fmacros%2Flazy_static.rs?ref=c1d351f6eee7f870ce5216e824709dccbdf69dff", "patch": "@@ -16,7 +16,7 @@ pub(crate) fn parse_lazy_static(\n         ($method:ident $(,)* $($arg:expr),* $(,)*) => {\n             match parser.$method($($arg,)*) {\n                 Ok(val) => {\n-                    if parser.sess.span_diagnostic.has_errors() {\n+                    if parser.sess.span_diagnostic.has_errors().is_some() {\n                         parser.sess.span_diagnostic.reset_err_count();\n                         return None;\n                     } else {"}, {"sha": "3728f3a19b44fc40ceccb60342ed4f5d99aeee75", "filename": "src/parse/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fmacros%2Fmod.rs?ref=c1d351f6eee7f870ce5216e824709dccbdf69dff", "patch": "@@ -28,7 +28,7 @@ fn parse_macro_arg<'a, 'b: 'a>(parser: &'a mut Parser<'b>) -> Option<MacroArg> {\n             let mut cloned_parser = (*parser).clone();\n             match $parser(&mut cloned_parser) {\n                 Ok(x) => {\n-                    if parser.sess.span_diagnostic.has_errors() {\n+                    if parser.sess.span_diagnostic.has_errors().is_some() {\n                         parser.sess.span_diagnostic.reset_err_count();\n                     } else {\n                         // Parsing succeeded."}, {"sha": "a34ceed3fc91fe76ea306acdae1b07077d4991dc", "filename": "src/parse/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1d351f6eee7f870ce5216e824709dccbdf69dff/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=c1d351f6eee7f870ce5216e824709dccbdf69dff", "patch": "@@ -235,7 +235,7 @@ impl ParseSess {\n     }\n \n     pub(super) fn has_errors(&self) -> bool {\n-        self.parse_sess.span_diagnostic.has_errors()\n+        self.parse_sess.span_diagnostic.has_errors().is_some()\n     }\n \n     pub(super) fn reset_errors(&self) {"}]}