{"sha": "b5c64e2e261ab2d3a009ccf1630d532202400009", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1YzY0ZTJlMjYxYWIyZDNhMDA5Y2NmMTYzMGQ1MzIyMDI0MDAwMDk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-09-30T16:28:34Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-10-07T12:46:22Z"}, "message": "Clarify docs for when binary_search has many matches.\n\nFixes https://github.com/rust-lang/rust/issues/51817.", "tree": {"sha": "e13b5400049d27c770b56cdf8173ec186cd17dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e13b5400049d27c770b56cdf8173ec186cd17dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5c64e2e261ab2d3a009ccf1630d532202400009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c64e2e261ab2d3a009ccf1630d532202400009", "html_url": "https://github.com/rust-lang/rust/commit/b5c64e2e261ab2d3a009ccf1630d532202400009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5c64e2e261ab2d3a009ccf1630d532202400009/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "html_url": "https://github.com/rust-lang/rust/commit/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "fb8f2e3e84a855054e006a2f67a8273434be3041", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b5c64e2e261ab2d3a009ccf1630d532202400009/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5c64e2e261ab2d3a009ccf1630d532202400009/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=b5c64e2e261ab2d3a009ccf1630d532202400009", "patch": "@@ -1174,9 +1174,10 @@ impl<T> [T] {\n \n     /// Binary searches this sorted slice for a given element.\n     ///\n-    /// If the value is found then `Ok` is returned, containing the\n-    /// index of the matching element; if the value is not found then\n-    /// `Err` is returned, containing the index where a matching\n+    /// If the value is found then [`Result::Ok`] is returned, containing the\n+    /// index of the matching element. If there are multiple matches, then any\n+    /// one of the matches could be returned. If the value is not found then\n+    /// [`Result::Err`] is returned, containing the index where a matching\n     /// element could be inserted while maintaining sorted order.\n     ///\n     /// # Examples\n@@ -1208,9 +1209,10 @@ impl<T> [T] {\n     /// order code that indicates whether its argument is `Less`,\n     /// `Equal` or `Greater` the desired target.\n     ///\n-    /// If a matching value is found then returns `Ok`, containing\n-    /// the index for the matched element; if no match is found then\n-    /// `Err` is returned, containing the index where a matching\n+    /// If the value is found then [`Result::Ok`] is returned, containing the\n+    /// index of the matching element. If there are multiple matches, then any\n+    /// one of the matches could be returned. If the value is not found then\n+    /// [`Result::Err`] is returned, containing the index where a matching\n     /// element could be inserted while maintaining sorted order.\n     ///\n     /// # Examples\n@@ -1264,10 +1266,11 @@ impl<T> [T] {\n     /// Assumes that the slice is sorted by the key, for instance with\n     /// [`sort_by_key`] using the same key extraction function.\n     ///\n-    /// If a matching value is found then returns `Ok`, containing the\n-    /// index for the matched element; if no match is found then `Err`\n-    /// is returned, containing the index where a matching element could\n-    /// be inserted while maintaining sorted order.\n+    /// If the value is found then [`Result::Ok`] is returned, containing the\n+    /// index of the matching element. If there are multiple matches, then any\n+    /// one of the matches could be returned. If the value is not found then\n+    /// [`Result::Err`] is returned, containing the index where a matching\n+    /// element could be inserted while maintaining sorted order.\n     ///\n     /// [`sort_by_key`]: #method.sort_by_key\n     ///"}]}