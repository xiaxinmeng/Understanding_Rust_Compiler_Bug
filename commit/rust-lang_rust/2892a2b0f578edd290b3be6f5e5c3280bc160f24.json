{"sha": "2892a2b0f578edd290b3be6f5e5c3280bc160f24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OTJhMmIwZjU3OGVkZDI5MGIzYmU2ZjVlNWMzMjgwYmMxNjBmMjQ=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-24T14:22:54Z"}, "committer": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-24T14:22:54Z"}, "message": "Fix FP in `print_stdout`\n\nThis lint shouldn't be emitted in `build.rs` as `println!` and `print!` are used for the build script.", "tree": {"sha": "83c3d687bfbbfa0402ec623dd825406c596eaf43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83c3d687bfbbfa0402ec623dd825406c596eaf43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2892a2b0f578edd290b3be6f5e5c3280bc160f24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2892a2b0f578edd290b3be6f5e5c3280bc160f24", "html_url": "https://github.com/rust-lang/rust/commit/2892a2b0f578edd290b3be6f5e5c3280bc160f24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2892a2b0f578edd290b3be6f5e5c3280bc160f24/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78fbb04edbcd6c7065d87ffcdb02314d1c8a3e6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/78fbb04edbcd6c7065d87ffcdb02314d1c8a3e6d", "html_url": "https://github.com/rust-lang/rust/commit/78fbb04edbcd6c7065d87ffcdb02314d1c8a3e6d"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "780d474ee96999948d5e2371ac9e98f06bda638c", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2892a2b0f578edd290b3be6f5e5c3280bc160f24/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2892a2b0f578edd290b3be6f5e5c3280bc160f24/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=2892a2b0f578edd290b3be6f5e5c3280bc160f24", "patch": "@@ -2,6 +2,7 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n+use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, MacCall, StrLit, StrStyle};\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n@@ -11,7 +12,7 @@ use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_parse::parser;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::Symbol;\n-use rustc_span::{BytePos, Span};\n+use rustc_span::{BytePos, FileName, Span};\n \n declare_clippy_lint! {\n     /// **What it does:** This lint warns when you use `println!(\"\")` to\n@@ -236,7 +237,15 @@ impl EarlyLintPass for Write {\n \n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &MacCall) {\n         if mac.path == sym!(println) {\n-            span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `println!`\");\n+            let filename = cx.sess.source_map().span_to_filename(mac.span());\n+            if_chain! {\n+                if let FileName::Real(filename) = filename;\n+                if let Some(filename) = filename.local_path().file_name();\n+                if filename != \"build.rs\";\n+                then {\n+                    span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `println!`\");\n+                }\n+            }\n             if let (Some(fmt_str), _) = self.check_tts(cx, mac.args.inner_tokens(), false) {\n                 if fmt_str.symbol == Symbol::intern(\"\") {\n                     span_lint_and_sugg(\n@@ -251,7 +260,15 @@ impl EarlyLintPass for Write {\n                 }\n             }\n         } else if mac.path == sym!(print) {\n-            span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `print!`\");\n+            if_chain! {\n+                let filename = cx.sess.source_map().span_to_filename(mac.span());\n+                if let FileName::Real(filename) = filename;\n+                if let Some(filename) = filename.local_path().file_name();\n+                if filename != \"build.rs\";\n+                then {\n+                    span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `print!`\");\n+                }\n+            }\n             if let (Some(fmt_str), _) = self.check_tts(cx, mac.args.inner_tokens(), false) {\n                 if check_newlines(&fmt_str) {\n                     span_lint_and_then("}, {"sha": "2d43d452a4fab72e361c401c7b4e268e141215b8", "filename": "tests/ui/build.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2892a2b0f578edd290b3be6f5e5c3280bc160f24/tests%2Fui%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2892a2b0f578edd290b3be6f5e5c3280bc160f24/tests%2Fui%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuild.rs?ref=2892a2b0f578edd290b3be6f5e5c3280bc160f24", "patch": "@@ -0,0 +1,10 @@\n+#![warn(clippy::print_stdout)]\n+\n+fn main() {\n+    // Fix #6041\n+    //\n+    // The `print_stdout` shouldn't be linted in `build.rs`\n+    // as these methods are used for the build script.\n+    println!(\"Hello\");\n+    print!(\"Hello\");\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/build.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2892a2b0f578edd290b3be6f5e5c3280bc160f24/tests%2Fui%2Fbuild.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2892a2b0f578edd290b3be6f5e5c3280bc160f24/tests%2Fui%2Fbuild.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuild.stderr?ref=2892a2b0f578edd290b3be6f5e5c3280bc160f24"}]}