{"sha": "d6d78cdbbec1600cf2bd9f77a96d23df135ab550", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZDc4Y2RiYmVjMTYwMGNmMmJkOWY3N2E5NmQyM2RmMTM1YWI1NTA=", "commit": {"author": {"name": "Zaki Manian", "email": "zaki@manian.org", "date": "2017-09-02T21:19:45Z"}, "committer": {"name": "Zaki Manian", "email": "zaki@manian.org", "date": "2017-09-02T21:19:45Z"}, "message": "Check method calls", "tree": {"sha": "68419b415250b70578dfa8dfef225deeebe9bf26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68419b415250b70578dfa8dfef225deeebe9bf26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6d78cdbbec1600cf2bd9f77a96d23df135ab550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6d78cdbbec1600cf2bd9f77a96d23df135ab550", "html_url": "https://github.com/rust-lang/rust/commit/d6d78cdbbec1600cf2bd9f77a96d23df135ab550", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6d78cdbbec1600cf2bd9f77a96d23df135ab550/comments", "author": {"login": "zmanian", "id": 93434, "node_id": "MDQ6VXNlcjkzNDM0", "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmanian", "html_url": "https://github.com/zmanian", "followers_url": "https://api.github.com/users/zmanian/followers", "following_url": "https://api.github.com/users/zmanian/following{/other_user}", "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions", "organizations_url": "https://api.github.com/users/zmanian/orgs", "repos_url": "https://api.github.com/users/zmanian/repos", "events_url": "https://api.github.com/users/zmanian/events{/privacy}", "received_events_url": "https://api.github.com/users/zmanian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zmanian", "id": 93434, "node_id": "MDQ6VXNlcjkzNDM0", "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmanian", "html_url": "https://github.com/zmanian", "followers_url": "https://api.github.com/users/zmanian/followers", "following_url": "https://api.github.com/users/zmanian/following{/other_user}", "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions", "organizations_url": "https://api.github.com/users/zmanian/orgs", "repos_url": "https://api.github.com/users/zmanian/repos", "events_url": "https://api.github.com/users/zmanian/events{/privacy}", "received_events_url": "https://api.github.com/users/zmanian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a97aadacf2907b82bd57d0dafe8aa4f7e904153", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a97aadacf2907b82bd57d0dafe8aa4f7e904153", "html_url": "https://github.com/rust-lang/rust/commit/2a97aadacf2907b82bd57d0dafe8aa4f7e904153"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "63bdaaa523165e684ad544cc74765024634e337f", "filename": "clippy_lints/src/is_unit_expr.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d6d78cdbbec1600cf2bd9f77a96d23df135ab550/clippy_lints%2Fsrc%2Fis_unit_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6d78cdbbec1600cf2bd9f77a96d23df135ab550/clippy_lints%2Fsrc%2Fis_unit_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fis_unit_expr.rs?ref=d6d78cdbbec1600cf2bd9f77a96d23df135ab550", "patch": "@@ -46,12 +46,31 @@ impl EarlyLintPass for UnitExpr {\n                 )\n             }\n         }\n-        // if let ExprKind::MethodCall(ref path, ref args) = expr.node {\n-        //     unimplemented!();\n-        // }\n-        // if let ExprKind::Call(ref path, ref args) = expr.node{\n-        //     unimplemented!();\n-        // }\n+        if let ExprKind::MethodCall(_, ref args) = expr.node {\n+            for ref arg in args{\n+                if is_unit_expr(arg){\n+                    span_lint_and_sugg(\n+                        cx,\n+                        UNIT_EXPR,\n+                        arg.span,\n+                        \"trailing semicolons can be tricky\",\n+                        \"remove the last semicolon\",\n+                        \"TODO\".to_owned()\n+                    )\n+                }            }\n+        }\n+        if let ExprKind::Call( _, ref args) = expr.node{\n+            for ref arg in args{\n+                if is_unit_expr(arg){\n+                    span_lint_and_sugg(\n+                        cx,\n+                        UNIT_EXPR,\n+                        arg.span,\n+                        \"trailing semicolons can be tricky\",\n+                        \"remove the last semicolon\",\n+                        \"TODO\".to_owned()\n+                    )\n+                }            }        }\n     }\n \n     fn check_stmt(&mut self, cx: &EarlyContext, stmt: &Stmt) {"}]}