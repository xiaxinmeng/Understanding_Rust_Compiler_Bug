{"sha": "b69de642026176f89c52e36f0b2f52cb0777456a", "node_id": "C_kwDOAAsO6NoAKGI2OWRlNjQyMDI2MTc2Zjg5YzUyZTM2ZjBiMmY1MmNiMDc3NzQ1NmE", "commit": {"author": {"name": "Tobias Decking", "email": "Tobias.Decking@gmail.com", "date": "2023-03-03T23:10:52Z"}, "committer": {"name": "Tobias Decking", "email": "Tobias.Decking@gmail.com", "date": "2023-03-03T23:10:52Z"}, "message": "Add inlining annotations", "tree": {"sha": "c23724e1ea598ad5ebccd48d7d855951c7bae02e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c23724e1ea598ad5ebccd48d7d855951c7bae02e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b69de642026176f89c52e36f0b2f52cb0777456a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b69de642026176f89c52e36f0b2f52cb0777456a", "html_url": "https://github.com/rust-lang/rust/commit/b69de642026176f89c52e36f0b2f52cb0777456a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b69de642026176f89c52e36f0b2f52cb0777456a/comments", "author": {"login": "TDecking", "id": 15847799, "node_id": "MDQ6VXNlcjE1ODQ3Nzk5", "avatar_url": "https://avatars.githubusercontent.com/u/15847799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TDecking", "html_url": "https://github.com/TDecking", "followers_url": "https://api.github.com/users/TDecking/followers", "following_url": "https://api.github.com/users/TDecking/following{/other_user}", "gists_url": "https://api.github.com/users/TDecking/gists{/gist_id}", "starred_url": "https://api.github.com/users/TDecking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TDecking/subscriptions", "organizations_url": "https://api.github.com/users/TDecking/orgs", "repos_url": "https://api.github.com/users/TDecking/repos", "events_url": "https://api.github.com/users/TDecking/events{/privacy}", "received_events_url": "https://api.github.com/users/TDecking/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TDecking", "id": 15847799, "node_id": "MDQ6VXNlcjE1ODQ3Nzk5", "avatar_url": "https://avatars.githubusercontent.com/u/15847799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TDecking", "html_url": "https://github.com/TDecking", "followers_url": "https://api.github.com/users/TDecking/followers", "following_url": "https://api.github.com/users/TDecking/following{/other_user}", "gists_url": "https://api.github.com/users/TDecking/gists{/gist_id}", "starred_url": "https://api.github.com/users/TDecking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TDecking/subscriptions", "organizations_url": "https://api.github.com/users/TDecking/orgs", "repos_url": "https://api.github.com/users/TDecking/repos", "events_url": "https://api.github.com/users/TDecking/events{/privacy}", "received_events_url": "https://api.github.com/users/TDecking/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a809ce8997a1697b166b4bb2594993e87d69f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a809ce8997a1697b166b4bb2594993e87d69f31", "html_url": "https://github.com/rust-lang/rust/commit/7a809ce8997a1697b166b4bb2594993e87d69f31"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "3e8d75df37868bb960e43c188e7aeb13a02dd497", "filename": "library/core/src/num/dec2flt/common.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs?ref=b69de642026176f89c52e36f0b2f52cb0777456a", "patch": "@@ -192,6 +192,7 @@ pub struct BiasedFp {\n }\n \n impl BiasedFp {\n+    #[inline]\n     pub const fn zero_pow2(e: i32) -> Self {\n         Self { f: 0, e }\n     }"}, {"sha": "1c9d68999d6f81957935a1e8f9cfcac15dcf3128", "filename": "library/core/src/num/dec2flt/float.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Ffloat.rs?ref=b69de642026176f89c52e36f0b2f52cb0777456a", "patch": "@@ -118,11 +118,13 @@ impl RawFloat for f32 {\n     const SMALLEST_POWER_OF_TEN: i32 = -65;\n     const LARGEST_POWER_OF_TEN: i32 = 38;\n \n+    #[inline]\n     fn from_u64(v: u64) -> Self {\n         debug_assert!(v <= Self::MAX_MANTISSA_FAST_PATH);\n         v as _\n     }\n \n+    #[inline]\n     fn from_u64_bits(v: u64) -> Self {\n         f32::from_bits((v & 0xFFFFFFFF) as u32)\n     }\n@@ -169,11 +171,13 @@ impl RawFloat for f64 {\n     const SMALLEST_POWER_OF_TEN: i32 = -342;\n     const LARGEST_POWER_OF_TEN: i32 = 308;\n \n+    #[inline]\n     fn from_u64(v: u64) -> Self {\n         debug_assert!(v <= Self::MAX_MANTISSA_FAST_PATH);\n         v as _\n     }\n \n+    #[inline]\n     fn from_u64_bits(v: u64) -> Self {\n         f64::from_bits(v)\n     }"}, {"sha": "3bc052df7a6c180eb71a8cafba0c8a5ab34d2b9f", "filename": "library/core/src/num/dec2flt/lemire.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Flemire.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Flemire.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Flemire.rs?ref=b69de642026176f89c52e36f0b2f52cb0777456a", "patch": "@@ -118,10 +118,12 @@ pub fn compute_float<F: RawFloat>(q: i64, mut w: u64) -> BiasedFp {\n /// This uses a pre-computed integer approximation for\n /// log2(10), where 217706 / 2^16 is accurate for the\n /// entire range of non-finite decimal exponents.\n+#[inline]\n fn power(q: i32) -> i32 {\n     (q.wrapping_mul(152_170 + 65536) >> 16) + 63\n }\n \n+#[inline]\n fn full_multiplication(a: u64, b: u64) -> (u64, u64) {\n     let r = (a as u128) * (b as u128);\n     (r as u64, (r >> 64) as u64)"}, {"sha": "e9fe65716863a3bb50f6ca9b58f0efcaa45e2f41", "filename": "library/core/src/num/dec2flt/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs?ref=b69de642026176f89c52e36f0b2f52cb0777456a", "patch": "@@ -147,7 +147,13 @@ macro_rules! from_str_float_impl {\n             /// representable floating-point number to the number represented\n             /// by `src` (following the same rules for rounding as for the\n             /// results of primitive operations).\n-            #[inline]\n+            // We add the `#[inline(never)]` attribute, since its content will\n+            // be filled with that of `dec2flt`, which has #[inline(always)].\n+            // Since `dec2flt` is generic, a normal inline attribute on this function\n+            // with `dec2flt` having no attributes results in heavily repeated\n+            // generation of `dec2flt`, despite the fact only a maximum of 2\n+            // posiible instances. Adding #[inline(never)] avoids this.\n+            #[inline(never)]\n             fn from_str(src: &str) -> Result<Self, ParseFloatError> {\n                 dec2flt(src)\n             }\n@@ -202,12 +208,14 @@ impl fmt::Display for ParseFloatError {\n     }\n }\n \n+#[inline]\n pub(super) fn pfe_empty() -> ParseFloatError {\n     ParseFloatError { kind: FloatErrorKind::Empty }\n }\n \n // Used in unit tests, keep public.\n // This is much better than making FloatErrorKind and ParseFloatError::kind public.\n+#[inline]\n pub fn pfe_invalid() -> ParseFloatError {\n     ParseFloatError { kind: FloatErrorKind::Invalid }\n }\n@@ -220,6 +228,7 @@ fn biased_fp_to_float<T: RawFloat>(x: BiasedFp) -> T {\n }\n \n /// Converts a decimal string into a floating point number.\n+#[inline(always)] // Will be inlined into a function with `#[inline(never)]`, see above\n pub fn dec2flt<F: RawFloat>(s: &str) -> Result<F, ParseFloatError> {\n     let mut s = s.as_bytes();\n     let c = if let Some(&c) = s.first() {"}, {"sha": "8589e2bbd4fac2a58e4fb8d60e161c508a26e677", "filename": "library/core/src/num/dec2flt/number.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fnumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69de642026176f89c52e36f0b2f52cb0777456a/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fnumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fnumber.rs?ref=b69de642026176f89c52e36f0b2f52cb0777456a", "patch": "@@ -33,6 +33,7 @@ pub struct Number {\n \n impl Number {\n     /// Detect if the float can be accurately reconstructed from native floats.\n+    #[inline]\n     fn is_fast_path<F: RawFloat>(&self) -> bool {\n         F::MIN_EXPONENT_FAST_PATH <= self.exponent\n             && self.exponent <= F::MAX_EXPONENT_DISGUISED_FAST_PATH"}]}