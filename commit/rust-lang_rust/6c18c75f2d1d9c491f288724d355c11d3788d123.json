{"sha": "6c18c75f2d1d9c491f288724d355c11d3788d123", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMThjNzVmMmQxZDljNDkxZjI4ODcyNGQzNTVjMTFkMzc4OGQxMjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-06T02:04:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-06T02:04:29Z"}, "message": "rt: Stop zeroing out all allocations. Unobservable perf win. Closes #2682. rs=negligible-perf-win", "tree": {"sha": "443ac6d6aff3d2690eee49d9345e13c709361722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/443ac6d6aff3d2690eee49d9345e13c709361722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c18c75f2d1d9c491f288724d355c11d3788d123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c18c75f2d1d9c491f288724d355c11d3788d123", "html_url": "https://github.com/rust-lang/rust/commit/6c18c75f2d1d9c491f288724d355c11d3788d123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c18c75f2d1d9c491f288724d355c11d3788d123/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b245d46ed5fc93d3251e9e07f50e9b09b1f42c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b245d46ed5fc93d3251e9e07f50e9b09b1f42c4", "html_url": "https://github.com/rust-lang/rust/commit/7b245d46ed5fc93d3251e9e07f50e9b09b1f42c4"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8197d9c5450e80cc4b8966d14f8a0429c2c7f77a", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c18c75f2d1d9c491f288724d355c11d3788d123/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6c18c75f2d1d9c491f288724d355c11d3788d123/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=6c18c75f2d1d9c491f288724d355c11d3788d123", "patch": "@@ -158,8 +158,7 @@ upcall_s_exchange_malloc(s_exchange_malloc_args *args) {\n     LOG_UPCALL_ENTRY(task);\n \n     size_t total_size = get_box_size(args->size, args->td->align);\n-    // FIXME--does this have to be calloc? (Issue #2682)\n-    void *p = task->kernel->calloc(total_size, \"exchange malloc\");\n+    void *p = task->kernel->malloc(total_size, \"exchange malloc\");\n \n     rust_opaque_box *header = static_cast<rust_opaque_box*>(p);\n     header->ref_count = -1; // This is not ref counted\n@@ -234,8 +233,7 @@ upcall_s_malloc(s_malloc_args *args) {\n     LOG_UPCALL_ENTRY(task);\n     LOG(task, mem, \"upcall malloc(0x%\" PRIxPTR \")\", args->td);\n \n-    // FIXME--does this have to be calloc? (Issue #2682)\n-    rust_opaque_box *box = task->boxed.calloc(args->td, args->size);\n+    rust_opaque_box *box = task->boxed.malloc(args->td, args->size);\n     void *body = box_body(box);\n \n     debug::maybe_track_origin(task, box);"}]}