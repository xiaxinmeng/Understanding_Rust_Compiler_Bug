{"sha": "3aead52586d26f375e6318fb6980280db18b70b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZWFkNTI1ODZkMjZmMzc1ZTYzMThmYjY5ODAyODBkYjE4YjcwYjc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-14T20:37:52Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-14T20:51:55Z"}, "message": "iter: move Counter impl to the proper place", "tree": {"sha": "5cd5e24a59b185057f7ee7b2231bac4626834d11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cd5e24a59b185057f7ee7b2231bac4626834d11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aead52586d26f375e6318fb6980280db18b70b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aead52586d26f375e6318fb6980280db18b70b7", "html_url": "https://github.com/rust-lang/rust/commit/3aead52586d26f375e6318fb6980280db18b70b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aead52586d26f375e6318fb6980280db18b70b7/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c8978edbb53fda8b33758a0bf3f9154b20dc9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/10c8978edbb53fda8b33758a0bf3f9154b20dc9e", "html_url": "https://github.com/rust-lang/rust/commit/10c8978edbb53fda8b33758a0bf3f9154b20dc9e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "faa2d715df48ca04903285c0bd7af2300c8f48a8", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3aead52586d26f375e6318fb6980280db18b70b7/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aead52586d26f375e6318fb6980280db18b70b7/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=3aead52586d26f375e6318fb6980280db18b70b7", "patch": "@@ -1719,6 +1719,20 @@ pub fn count<A>(start: A, step: A) -> Counter<A> {\n     Counter{state: start, step: step}\n }\n \n+impl<A: Add<A, A> + Clone> Iterator<A> for Counter<A> {\n+    #[inline]\n+    fn next(&mut self) -> Option<A> {\n+        let result = self.state.clone();\n+        self.state = self.state + self.step;\n+        Some(result)\n+    }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) {\n+        (uint::max_value, None) // Too bad we can't specify an infinite lower bound\n+    }\n+}\n+\n /// An iterator over the range [start, stop)\n #[deriving(Clone, DeepClone)]\n pub struct Range<A> {\n@@ -1824,20 +1838,6 @@ impl<A: Sub<A, A> + Integer + Ord + Clone> DoubleEndedIterator<A> for RangeInclu\n     }\n }\n \n-impl<A: Add<A, A> + Clone> Iterator<A> for Counter<A> {\n-    #[inline]\n-    fn next(&mut self) -> Option<A> {\n-        let result = self.state.clone();\n-        self.state = self.state + self.step;\n-        Some(result)\n-    }\n-\n-    #[inline]\n-    fn size_hint(&self) -> (uint, Option<uint>) {\n-        (uint::max_value, None) // Too bad we can't specify an infinite lower bound\n-    }\n-}\n-\n /// An iterator that repeats an element endlessly\n #[deriving(Clone, DeepClone)]\n pub struct Repeat<A> {"}]}