{"sha": "012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMjUzN2JkNmNkZjIzNDhkYzdiYzRlYzg5YzhlY2JiOTU3OGY1YjM=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-18T21:13:55Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-19T20:12:18Z"}, "message": "Fix at_ts doc comment", "tree": {"sha": "2515e3d4363f44382fc0e9727a93a9733156f92b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2515e3d4363f44382fc0e9727a93a9733156f92b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "html_url": "https://github.com/rust-lang/rust/commit/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "url": "https://api.github.com/repos/rust-lang/rust/commits/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "html_url": "https://github.com/rust-lang/rust/commit/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "512823ddfc26e77da3ead4a39c1591428a3fe237", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "patch": "@@ -416,7 +416,7 @@ fn path_expr(p: &mut Parser, r: Restrictions) -> CompletedMarker {\n             m.complete(p, STRUCT_LIT)\n         }\n         EXCL => {\n-            items::macro_call_after_excl(p);\n+            items::macro_call_after_excl(p); // TODO: Use return type (BlockLike)\n             m.complete(p, MACRO_CALL)\n         }\n         _ => m.complete(p, PATH_EXPR),"}]}