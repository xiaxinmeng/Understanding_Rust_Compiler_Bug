{"sha": "9bbc9cb597a37385f423c49e0bbf8ddafb128bbf", "node_id": "C_kwDOAAsO6NoAKDliYmM5Y2I1OTdhMzczODVmNDIzYzQ5ZTBiYmY4ZGRhZmIxMjhiYmY", "commit": {"author": {"name": "kit", "email": "kit@hastur.io", "date": "2021-11-08T09:45:04Z"}, "committer": {"name": "kit", "email": "kit@hastur.io", "date": "2021-11-14T07:49:15Z"}, "message": "Add a helper method for linker arguments\n\nLinker arguments must transformed when Rust is interacting with the\nlinker through a compiler. This commit introduces a helper function\nthat abstracts away details of this transformation.", "tree": {"sha": "1414730290c0e75d626f3a7c3ac979d70a1d67a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1414730290c0e75d626f3a7c3ac979d70a1d67a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf", "html_url": "https://github.com/rust-lang/rust/commit/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf/comments", "author": {"login": "kit-981", "id": 86507480, "node_id": "MDQ6VXNlcjg2NTA3NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/86507480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kit-981", "html_url": "https://github.com/kit-981", "followers_url": "https://api.github.com/users/kit-981/followers", "following_url": "https://api.github.com/users/kit-981/following{/other_user}", "gists_url": "https://api.github.com/users/kit-981/gists{/gist_id}", "starred_url": "https://api.github.com/users/kit-981/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kit-981/subscriptions", "organizations_url": "https://api.github.com/users/kit-981/orgs", "repos_url": "https://api.github.com/users/kit-981/repos", "events_url": "https://api.github.com/users/kit-981/events{/privacy}", "received_events_url": "https://api.github.com/users/kit-981/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kit-981", "id": 86507480, "node_id": "MDQ6VXNlcjg2NTA3NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/86507480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kit-981", "html_url": "https://github.com/kit-981", "followers_url": "https://api.github.com/users/kit-981/followers", "following_url": "https://api.github.com/users/kit-981/following{/other_user}", "gists_url": "https://api.github.com/users/kit-981/gists{/gist_id}", "starred_url": "https://api.github.com/users/kit-981/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kit-981/subscriptions", "organizations_url": "https://api.github.com/users/kit-981/orgs", "repos_url": "https://api.github.com/users/kit-981/repos", "events_url": "https://api.github.com/users/kit-981/events{/privacy}", "received_events_url": "https://api.github.com/users/kit-981/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43192ca3d72ed0ca42ba913137585219ba0a691f", "url": "https://api.github.com/repos/rust-lang/rust/commits/43192ca3d72ed0ca42ba913137585219ba0a691f", "html_url": "https://github.com/rust-lang/rust/commit/43192ca3d72ed0ca42ba913137585219ba0a691f"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "1e29c3085a3fd0d8ee9798638dd3dbda9bb8b6c8", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbc9cb597a37385f423c49e0bbf8ddafb128bbf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=9bbc9cb597a37385f423c49e0bbf8ddafb128bbf", "patch": "@@ -219,19 +219,36 @@ pub struct GccLinker<'a> {\n }\n \n impl<'a> GccLinker<'a> {\n-    /// Argument that must be passed *directly* to the linker\n+    /// Passes an argument directly to the linker.\n     ///\n-    /// These arguments need to be prepended with `-Wl`, when a GCC-style linker is used.\n-    fn linker_arg<S>(&mut self, arg: S) -> &mut Self\n-    where\n-        S: AsRef<OsStr>,\n-    {\n-        if !self.is_ld {\n-            let mut os = OsString::from(\"-Wl,\");\n-            os.push(arg.as_ref());\n-            self.cmd.arg(os);\n+    /// When the linker is not ld-like such as when using a compiler as a linker, the argument is\n+    /// prepended by `-Wl,`.\n+    fn linker_arg(&mut self, arg: impl AsRef<OsStr>) -> &mut Self {\n+        self.linker_args(&[arg]);\n+        self\n+    }\n+\n+    /// Passes a series of arguments directly to the linker.\n+    ///\n+    /// When the linker is ld-like, the arguments are simply appended to the command. When the\n+    /// linker is not ld-like such as when using a compiler as a linker, the arguments are joined by\n+    /// commas to form an argument that is then prepended with `-Wl`. In this situation, only a\n+    /// single argument is appended to the command to ensure that the order of the arguments is\n+    /// preserved by the compiler.\n+    fn linker_args(&mut self, args: &[impl AsRef<OsStr>]) -> &mut Self {\n+        if self.is_ld {\n+            args.into_iter().for_each(|a| {\n+                self.cmd.arg(a);\n+            });\n         } else {\n-            self.cmd.arg(arg);\n+            if !args.is_empty() {\n+                let mut s = OsString::from(\"-Wl\");\n+                for a in args {\n+                    s.push(\",\");\n+                    s.push(a);\n+                }\n+                self.cmd.arg(s);\n+            }\n         }\n         self\n     }"}]}