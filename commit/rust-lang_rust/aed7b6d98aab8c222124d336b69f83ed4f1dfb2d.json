{"sha": "aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZDdiNmQ5OGFhYjhjMjIyMTI0ZDMzNmI2OWY4M2VkNGYxZGZiMmQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-17T22:45:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-17T22:45:32Z"}, "message": "Merge #6271\n\n6271: Complete methods when receiver is a macro r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "425f5c6dda7b123b0654534387cb6dd351868847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/425f5c6dda7b123b0654534387cb6dd351868847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfi3QMCRBK7hj4Ov3rIwAAdHIIAH2INMabLr2LQhmErwPVSgu1\nesBZm9DtZ43KKnegnAoVaY26UceAKAOK1mKpZyBhriS0Z9jUMRpUbik1GnbYyXRk\nBtKjS7JdaMGi9iJ0Crh/ZzAK4TSBzs0PUKL0p8WSjG+yEvEtPJq8nUwy/gsIxeXJ\nsm7P81rNRq9nmLoOAgzTjN5uqI2ts6Y7zSl/IiZn5K0AMk1dYLVc1rd1XqRN7nOB\niiYELCwrpZmm8DApuVgg1XgyYN9IFnLniCWOzP+8+uL3sV0u1M4U3S9DjacDs/0P\nFSNEvwXOkkhBaVxq/Eio7bIzkjUzFdHZGixgIgBw4fILfhvzWYaY2af4Ms8+RYo=\n=vr9E\n-----END PGP SIGNATURE-----\n", "payload": "tree 425f5c6dda7b123b0654534387cb6dd351868847\nparent 63956e509eea1aba1a303c58bf60d068863a61dd\nparent 13451d3dc4477cc1dab38d6d66643de4bd4aa59e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602974732 +0000\ncommitter GitHub <noreply@github.com> 1602974732 +0000\n\nMerge #6271\n\n6271: Complete methods when receiver is a macro r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "html_url": "https://github.com/rust-lang/rust/commit/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63956e509eea1aba1a303c58bf60d068863a61dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/63956e509eea1aba1a303c58bf60d068863a61dd", "html_url": "https://github.com/rust-lang/rust/commit/63956e509eea1aba1a303c58bf60d068863a61dd"}, {"sha": "13451d3dc4477cc1dab38d6d66643de4bd4aa59e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13451d3dc4477cc1dab38d6d66643de4bd4aa59e", "html_url": "https://github.com/rust-lang/rust/commit/13451d3dc4477cc1dab38d6d66643de4bd4aa59e"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "d51036e4f620f110164e43e174b3ccfae471be21", "filename": "crates/hir_def/src/body.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fhir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fhir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody.rs?ref=aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "patch": "@@ -105,14 +105,16 @@ impl Expander {\n \n         let macro_call = InFile::new(self.current_file_id, &macro_call);\n \n-        if let Some(call_id) = macro_call.as_call_id(db, self.crate_def_map.krate, |path| {\n+        let resolver = |path: ModPath| -> Option<MacroDefId> {\n             if let Some(local_scope) = local_scope {\n                 if let Some(def) = path.as_ident().and_then(|n| local_scope.get_legacy_macro(n)) {\n                     return Some(def);\n                 }\n             }\n             self.resolve_path_as_macro(db, &path)\n-        }) {\n+        };\n+\n+        if let Some(call_id) = macro_call.as_call_id(db, self.crate_def_map.krate, resolver) {\n             let file_id = call_id.as_file();\n             if let Some(node) = db.parse_or_expand(file_id) {\n                 if let Some(expr) = T::cast(node) {"}, {"sha": "ade57ac1b5d494c0a1f8e5dd7c6429486f967683", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "patch": "@@ -389,6 +389,7 @@ fn to_fragment_kind(db: &dyn AstDatabase, id: MacroCallId) -> FragmentKind {\n         CALL_EXPR => FragmentKind::Expr,\n         INDEX_EXPR => FragmentKind::Expr,\n         METHOD_CALL_EXPR => FragmentKind::Expr,\n+        FIELD_EXPR => FragmentKind::Expr,\n         AWAIT_EXPR => FragmentKind::Expr,\n         CAST_EXPR => FragmentKind::Expr,\n         REF_EXPR => FragmentKind::Expr,"}, {"sha": "f0f9a7f1da2417cd6e75fa1afa78adee0b232ebb", "filename": "crates/ide/src/completion/complete_dot.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed7b6d98aab8c222124d336b69f83ed4f1dfb2d/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=aed7b6d98aab8c222124d336b69f83ed4f1dfb2d", "patch": "@@ -413,4 +413,19 @@ fn foo() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn completes_method_call_when_receiver_is_a_macro_call() {\n+        check(\n+            r#\"\n+struct S;\n+impl S { fn foo(&self) {} }\n+macro_rules! make_s { () => { S }; }\n+fn main() { make_s!().f<|>; }\n+\"#,\n+            expect![[r#\"\n+                me foo() fn foo(&self)\n+            \"#]],\n+        )\n+    }\n }"}]}