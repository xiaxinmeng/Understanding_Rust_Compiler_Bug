{"sha": "02d33c98561ed027800d3fd2e9c5102b76c4d991", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDMzYzk4NTYxZWQwMjc4MDBkM2ZkMmU5YzUxMDJiNzZjNGQ5OTE=", "commit": {"author": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-04T16:27:45Z"}, "committer": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-04T21:45:31Z"}, "message": "eliminate find_use_path and show 'as' and 'use'", "tree": {"sha": "5285fadf5d0dbe8973e55ca16c874b311f1b949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5285fadf5d0dbe8973e55ca16c874b311f1b949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d33c98561ed027800d3fd2e9c5102b76c4d991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d33c98561ed027800d3fd2e9c5102b76c4d991", "html_url": "https://github.com/rust-lang/rust/commit/02d33c98561ed027800d3fd2e9c5102b76c4d991", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d33c98561ed027800d3fd2e9c5102b76c4d991/comments", "author": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "486bffc23e4f5a096f0dfe9a39bd91f1d3ea3bab", "url": "https://api.github.com/repos/rust-lang/rust/commits/486bffc23e4f5a096f0dfe9a39bd91f1d3ea3bab", "html_url": "https://github.com/rust-lang/rust/commit/486bffc23e4f5a096f0dfe9a39bd91f1d3ea3bab"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "8a0d79cfa144837fd0e9ab1842528c533440b54f", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=02d33c98561ed027800d3fd2e9c5102b76c4d991", "patch": "@@ -295,6 +295,7 @@ impl CompletionItem {\n             label,\n             insert_text: None,\n             is_snippet: false,\n+            trait_name: None,\n             detail: None,\n             documentation: None,\n             lookup: None,\n@@ -398,6 +399,7 @@ pub(crate) struct Builder {\n     source_range: TextRange,\n     completion_kind: CompletionKind,\n     import_to_add: Option<ImportEdit>,\n+    trait_name: Option<String>,\n     label: String,\n     insert_text: Option<String>,\n     is_snippet: bool,\n@@ -434,6 +436,8 @@ impl Builder {\n             } else {\n                 format_to!(label, \" ({})\", original_path)\n             }\n+        } else if let Some(trait_name) = self.trait_name {\n+            format_to!(label, \" ({})\", trait_name)\n         }\n \n         let text_edit = match self.text_edit {\n@@ -468,6 +472,10 @@ impl Builder {\n         self.label = label.into();\n         self\n     }\n+    pub(crate) fn trait_name(&mut self, trait_name: impl Into<String>) -> &mut Builder {\n+        self.trait_name = Some(trait_name.into());\n+        self\n+    }\n     pub(crate) fn insert_text(&mut self, insert_text: impl Into<String>) -> &mut Builder {\n         self.insert_text = Some(insert_text.into());\n         self"}, {"sha": "0a17d8023d86846bf996e521e22e3e0c56ba52d0", "filename": "crates/ide_completion/src/render/const_.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs?ref=02d33c98561ed027800d3fd2e9c5102b76c4d991", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for `const` fields.\n \n-use hir::{AsAssocItem, HasSource, ModuleDef};\n+use hir::{AsAssocItem, HasSource};\n use ide_db::SymbolKind;\n use syntax::{\n     ast::{Const, NameOwner},\n@@ -49,11 +49,8 @@ impl<'a> ConstRender<'a> {\n         let db = self.ctx.db();\n         if let Some(actm) = self.const_.as_assoc_item(db) {\n             if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n-                let module = self.ctx.completion.scope.module().unwrap();\n-                if let Some(path) = module.find_use_path(db, ModuleDef::Trait(trt)) {\n-                    item.label(format!(\"{} ({})\", name.clone(), path));\n-                    item.insert_text(name.clone());\n-                }\n+                item.trait_name(trt.name(db).to_string());\n+                item.insert_text(name.clone());\n             }\n         }\n "}, {"sha": "5ad1c899eebca80836c547b213a29298a9fb87ac", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=02d33c98561ed027800d3fd2e9c5102b76c4d991", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for function calls.\n \n-use hir::{AsAssocItem, HasSource, HirDisplay, ModuleDef};\n+use hir::{AsAssocItem, HasSource, HirDisplay};\n use ide_db::SymbolKind;\n use itertools::Itertools;\n use syntax::ast::Fn;\n@@ -79,14 +79,7 @@ impl<'a> FunctionRender<'a> {\n             let db = self.ctx.db();\n             if let Some(actm) = self.func.as_assoc_item(db) {\n                 if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n-                    let module = self.ctx.completion.scope.module().unwrap();\n-                    if let Some(path) = module.find_use_path(db, ModuleDef::Trait(trt)) {\n-                        item.label(format!(\n-                            \"{} ({})\",\n-                            item.clone().build().label().to_owned(),\n-                            path\n-                        ));\n-                    }\n+                    item.trait_name(trt.name(db).to_string());\n                 }\n             }\n         }"}, {"sha": "9549678b69e58e4109edb63ba7d95f258ed66e47", "filename": "crates/ide_completion/src/render/type_alias.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d33c98561ed027800d3fd2e9c5102b76c4d991/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs?ref=02d33c98561ed027800d3fd2e9c5102b76c4d991", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for type aliases.\n \n-use hir::{AsAssocItem, HasSource, ModuleDef};\n+use hir::{AsAssocItem, HasSource};\n use ide_db::SymbolKind;\n use syntax::{\n     ast::{NameOwner, TypeAlias},\n@@ -62,11 +62,8 @@ impl<'a> TypeAliasRender<'a> {\n         let db = self.ctx.db();\n         if let Some(actm) = self.type_alias.as_assoc_item(db) {\n             if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n-                let module = self.ctx.completion.scope.module().unwrap();\n-                if let Some(path) = module.find_use_path(db, ModuleDef::Trait(trt)) {\n-                    item.label(format!(\"{} ({})\", name.clone(), path));\n-                    item.insert_text(name.clone());\n-                }\n+                item.trait_name(trt.name(db).to_string());\n+                item.insert_text(name.clone());\n             }\n         }\n "}]}