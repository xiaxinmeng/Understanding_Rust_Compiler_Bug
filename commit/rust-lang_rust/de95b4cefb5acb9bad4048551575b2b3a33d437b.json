{"sha": "de95b4cefb5acb9bad4048551575b2b3a33d437b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOTViNGNlZmI1YWNiOWJhZDQwNDg1NTE1NzViMmIzYTMzZDQzN2I=", "commit": {"author": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-03-12T05:50:30Z"}, "committer": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-03-12T05:50:30Z"}, "message": "Removed unneeded pattern matching", "tree": {"sha": "27139943d3fc645487e69571d0550f3b5952924d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27139943d3fc645487e69571d0550f3b5952924d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de95b4cefb5acb9bad4048551575b2b3a33d437b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de95b4cefb5acb9bad4048551575b2b3a33d437b", "html_url": "https://github.com/rust-lang/rust/commit/de95b4cefb5acb9bad4048551575b2b3a33d437b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de95b4cefb5acb9bad4048551575b2b3a33d437b/comments", "author": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34651c4f78d811e01a87d6705c85c978d2ed452d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34651c4f78d811e01a87d6705c85c978d2ed452d", "html_url": "https://github.com/rust-lang/rust/commit/34651c4f78d811e01a87d6705c85c978d2ed452d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2eb4afa22fbac0af99a1115fca987865bc19fbf6", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de95b4cefb5acb9bad4048551575b2b3a33d437b/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de95b4cefb5acb9bad4048551575b2b3a33d437b/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=de95b4cefb5acb9bad4048551575b2b3a33d437b", "patch": "@@ -209,7 +209,7 @@ impl<'a> FmtVisitor<'a> {\n                 }\n             }\n             // FIXME(#78): format traits.\n-            ast::Item_::ItemTrait(unsafety, ref generics, ref param_bounds, ref trait_items) => {\n+            ast::Item_::ItemTrait(..) => {\n                 self.format_missing_with_indent(item.span.lo);\n                 if let Some(trait_str) = format_trait(&self.get_context(),\n                                                       item,"}]}