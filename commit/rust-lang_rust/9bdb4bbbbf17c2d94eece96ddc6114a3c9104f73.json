{"sha": "9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZGI0YmJiYmYxN2MyZDk0ZWVjZTk2ZGRjNjExNGEzYzkxMDRmNzM=", "commit": {"author": {"name": "JOE1994", "email": "joseph942010@gmail.com", "date": "2020-03-29T17:13:42Z"}, "committer": {"name": "JOE1994", "email": "joseph942010@gmail.com", "date": "2020-03-29T17:13:42Z"}, "message": "Move definition of 'fn windows_check_buffer_size' to top of 'src/shims/env.rs'", "tree": {"sha": "54904dc65cbe4be57b2624333bd939a9ac4e6e00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54904dc65cbe4be57b2624333bd939a9ac4e6e00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73", "html_url": "https://github.com/rust-lang/rust/commit/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73/comments", "author": {"login": "JOE1994", "id": 10286488, "node_id": "MDQ6VXNlcjEwMjg2NDg4", "avatar_url": "https://avatars.githubusercontent.com/u/10286488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JOE1994", "html_url": "https://github.com/JOE1994", "followers_url": "https://api.github.com/users/JOE1994/followers", "following_url": "https://api.github.com/users/JOE1994/following{/other_user}", "gists_url": "https://api.github.com/users/JOE1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/JOE1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JOE1994/subscriptions", "organizations_url": "https://api.github.com/users/JOE1994/orgs", "repos_url": "https://api.github.com/users/JOE1994/repos", "events_url": "https://api.github.com/users/JOE1994/events{/privacy}", "received_events_url": "https://api.github.com/users/JOE1994/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JOE1994", "id": 10286488, "node_id": "MDQ6VXNlcjEwMjg2NDg4", "avatar_url": "https://avatars.githubusercontent.com/u/10286488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JOE1994", "html_url": "https://github.com/JOE1994", "followers_url": "https://api.github.com/users/JOE1994/followers", "following_url": "https://api.github.com/users/JOE1994/following{/other_user}", "gists_url": "https://api.github.com/users/JOE1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/JOE1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JOE1994/subscriptions", "organizations_url": "https://api.github.com/users/JOE1994/orgs", "repos_url": "https://api.github.com/users/JOE1994/repos", "events_url": "https://api.github.com/users/JOE1994/events{/privacy}", "received_events_url": "https://api.github.com/users/JOE1994/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b0abc5797fa4e3d32a74b80ed653da1a9ab98ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b0abc5797fa4e3d32a74b80ed653da1a9ab98ef", "html_url": "https://github.com/rust-lang/rust/commit/1b0abc5797fa4e3d32a74b80ed653da1a9ab98ef"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "5846f51b90428bd8fa1dffea647a157e0e1ce0d3", "filename": "src/shims/env.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=9bdb4bbbbf17c2d94eece96ddc6114a3c9104f73", "patch": "@@ -10,6 +10,21 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc::ty::layout::Size;\n use rustc_mir::interpret::Pointer;\n \n+/// Check whether an operation that writes to a target buffer was successful.\n+/// Accordingly select return value.\n+/// Local helper function to be used in Windows shims.\n+fn windows_check_buffer_size((success, len): (bool, u64)) -> u32 {\n+    if success {\n+        // If the function succeeds, the return value is the number of characters stored in the target buffer,\n+        // not including the terminating null character.\n+        u32::try_from(len).unwrap()\n+    } else {\n+        // If the target buffer was not large enough to hold the data, the return value is the buffer size, in characters,\n+        // required to hold the string and its terminating null character.\n+        u32::try_from(len.checked_add(1).unwrap()).unwrap()\n+    }\n+}\n+\n #[derive(Default)]\n pub struct EnvVars<'tcx> {\n     /// Stores pointers to the environment variables. These variables must be stored as\n@@ -399,18 +414,3 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(())\n     }\n }\n-\n-/// Check whether an operation that writes to a target buffer was successful.\n-/// Accordingly select return value.\n-/// Local helper function to be used in Windows shims.\n-fn windows_check_buffer_size((success, len): (bool, u64)) -> u32 {\n-    if success {\n-        // If the function succeeds, the return value is the number of characters stored in the target buffer,\n-        // not including the terminating null character.\n-        u32::try_from(len).unwrap()\n-    } else {\n-        // If the target buffer was not large enough to hold the data, the return value is the buffer size, in characters,\n-        // required to hold the string and its terminating null character.\n-        u32::try_from(len.checked_add(1).unwrap()).unwrap()\n-    }\n-}"}]}