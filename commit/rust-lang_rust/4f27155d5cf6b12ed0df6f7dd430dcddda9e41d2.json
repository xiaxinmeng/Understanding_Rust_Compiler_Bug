{"sha": "4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMjcxNTVkNWNmNmIxMmVkMGRmNmY3ZGQ0MzBkY2RkZGE5ZTQxZDI=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-03T11:56:03Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-03T11:56:03Z"}, "message": "Simplify paths searches", "tree": {"sha": "393726f2a137e27a609a1859ab5b5094468ed6b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/393726f2a137e27a609a1859ab5b5094468ed6b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "html_url": "https://github.com/rust-lang/rust/commit/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcf5bbbbeb1ab48e80d45483c810bae708f848a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf5bbbbeb1ab48e80d45483c810bae708f848a1", "html_url": "https://github.com/rust-lang/rust/commit/fcf5bbbbeb1ab48e80d45483c810bae708f848a1"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "e908ab1fc0341e413fdc84d12d55ce1982e387ea", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "patch": "@@ -1,7 +1,6 @@\n use hir::{db::HirDatabase, ModPath};\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxKind::{NAME_REF, USE_ITEM},\n     SyntaxNode,\n };\n \n@@ -33,11 +32,11 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n ) -> Option<Assist> {\n     let path_to_import: ast::Path = ctx.find_node_at_offset()?;\n     let path_to_import_syntax = path_to_import.syntax();\n-    if path_to_import_syntax.ancestors().find(|ancestor| ancestor.kind() == USE_ITEM).is_some() {\n+    if path_to_import_syntax.ancestors().find_map(ast::UseItem::cast).is_some() {\n         return None;\n     }\n     let name_to_import =\n-        path_to_import_syntax.descendants().find(|child| child.kind() == NAME_REF)?;\n+        path_to_import_syntax.descendants().find_map(ast::NameRef::cast)?.syntax().to_string();\n \n     let module = path_to_import_syntax.ancestors().find_map(ast::Module::cast);\n     let position = match module.and_then(|it| it.item_list()) {\n@@ -54,7 +53,7 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     }\n \n     let proposed_imports = imports_locator\n-        .find_imports(&name_to_import.to_string())\n+        .find_imports(&name_to_import)\n         .into_iter()\n         .filter_map(|module_def| module_with_name_to_import.find_use_path(ctx.db, module_def))\n         .filter(|use_path| !use_path.segments.is_empty())"}]}