{"sha": "8c9019dcadf3273ed23f5e716a96ebd15d595268", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOTAxOWRjYWRmMzI3M2VkMjNmNWU3MTZhOTZlYmQxNWQ1OTUyNjg=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2017-02-05T19:19:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T19:19:00Z"}, "message": "Merge pull request #1514 from pengowen123/patch-empty_enum\n\nAdd empty_enum lint for enums with no variants", "tree": {"sha": "819eedb01c503582af026fbc517534cdad71364b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/819eedb01c503582af026fbc517534cdad71364b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c9019dcadf3273ed23f5e716a96ebd15d595268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c9019dcadf3273ed23f5e716a96ebd15d595268", "html_url": "https://github.com/rust-lang/rust/commit/8c9019dcadf3273ed23f5e716a96ebd15d595268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c9019dcadf3273ed23f5e716a96ebd15d595268/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fbaacd76828f332448a874e2f895f8b95646c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fbaacd76828f332448a874e2f895f8b95646c21", "html_url": "https://github.com/rust-lang/rust/commit/3fbaacd76828f332448a874e2f895f8b95646c21"}, {"sha": "59e0ae75d05332ce0c8413000ba1bae0b1b16848", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e0ae75d05332ce0c8413000ba1bae0b1b16848", "html_url": "https://github.com/rust-lang/rust/commit/59e0ae75d05332ce0c8413000ba1bae0b1b16848"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "b446de51c02b322cddf48d46a1c3ce9f0aa662bc", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -306,6 +306,7 @@ All notable changes to this project will be documented in this file.\n [`double_parens`]: https://github.com/Manishearth/rust-clippy/wiki#double_parens\n [`drop_ref`]: https://github.com/Manishearth/rust-clippy/wiki#drop_ref\n [`duplicate_underscore_argument`]: https://github.com/Manishearth/rust-clippy/wiki#duplicate_underscore_argument\n+[`empty_enum`]: https://github.com/Manishearth/rust-clippy/wiki#empty_enum\n [`empty_loop`]: https://github.com/Manishearth/rust-clippy/wiki#empty_loop\n [`enum_clike_unportable_variant`]: https://github.com/Manishearth/rust-clippy/wiki#enum_clike_unportable_variant\n [`enum_glob_use`]: https://github.com/Manishearth/rust-clippy/wiki#enum_glob_use"}, {"sha": "eb1af46c23465cfce968b7c726bf97a471fb439a", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -180,7 +180,7 @@ transparently:\n \n ## Lints\n \n-There are 184 lints included in this crate:\n+There are 185 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -220,6 +220,7 @@ name\n [double_parens](https://github.com/Manishearth/rust-clippy/wiki#double_parens)                                         | warn    | Warn on unnecessary double parentheses\n [drop_ref](https://github.com/Manishearth/rust-clippy/wiki#drop_ref)                                                   | warn    | calls to `std::mem::drop` with a reference instead of an owned value\n [duplicate_underscore_argument](https://github.com/Manishearth/rust-clippy/wiki#duplicate_underscore_argument)         | warn    | function arguments having names which only differ by an underscore\n+[empty_enum](https://github.com/Manishearth/rust-clippy/wiki#empty_enum)                                               | allow   | enum with no variants\n [empty_loop](https://github.com/Manishearth/rust-clippy/wiki#empty_loop)                                               | warn    | empty `loop {}`, which should block or sleep\n [enum_clike_unportable_variant](https://github.com/Manishearth/rust-clippy/wiki#enum_clike_unportable_variant)         | warn    | C-like enums that are `repr(isize/usize)` and have values that don't fit into an `i32`\n [enum_glob_use](https://github.com/Manishearth/rust-clippy/wiki#enum_glob_use)                                         | allow   | use items that import all variants of an enum"}, {"sha": "631ac8b0fe2619d9224a84d17d10b84748c52f43", "filename": "clippy_lints/src/empty_enum.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -0,0 +1,46 @@\n+//! lint when there is an enum with no variants\n+\n+use rustc::lint::*;\n+use rustc::hir::*;\n+use utils::span_lint_and_then;\n+\n+/// **What it does:** Checks for `enum`s with no variants.\n+///\n+/// **Why is this bad?** Enum's with no variants should be replaced with `!`, the uninhabited type,\n+/// or a wrapper around it.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// enum Test {}\n+/// ```\n+declare_lint! {\n+    pub EMPTY_ENUM,\n+    Allow,\n+    \"enum with no variants\"\n+}\n+\n+#[derive(Copy,Clone)]\n+pub struct EmptyEnum;\n+\n+impl LintPass for EmptyEnum {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(EMPTY_ENUM)\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EmptyEnum {\n+    fn check_item(&mut self, cx: &LateContext, item: &Item) {\n+        let did = cx.tcx.hir.local_def_id(item.id);\n+        if let ItemEnum(..) = item.node {\n+            let ty = cx.tcx.item_type(did);\n+            let adt = ty.ty_adt_def().expect(\"already checked whether this is an enum\");\n+            if adt.variants.is_empty() {\n+                span_lint_and_then(cx, EMPTY_ENUM, item.span, \"enum with no variants\", |db| {\n+                    db.span_help(item.span, \"consider using the uninhabited type `!` or a wrapper around it\");\n+                });\n+            }\n+        }\n+    }\n+}"}, {"sha": "c4f5458b002f2360668b71c351cc85493c99f93b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -72,6 +72,7 @@ pub mod derive;\n pub mod doc;\n pub mod double_parens;\n pub mod drop_forget_ref;\n+pub mod empty_enum;\n pub mod entry;\n pub mod enum_clike;\n pub mod enum_glob_use;\n@@ -265,6 +266,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         max_single_char_names: conf.max_single_char_names,\n     });\n     reg.register_late_lint_pass(box drop_forget_ref::Pass);\n+    reg.register_late_lint_pass(box empty_enum::EmptyEnum);\n     reg.register_late_lint_pass(box types::AbsurdExtremeComparisons);\n     reg.register_late_lint_pass(box types::InvalidUpcastComparisons);\n     reg.register_late_lint_pass(box regex::Pass::default());\n@@ -304,6 +306,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         booleans::NONMINIMAL_BOOL,\n+        empty_enum::EMPTY_ENUM,\n         enum_glob_use::ENUM_GLOB_USE,\n         enum_variants::PUB_ENUM_VARIANT_NAMES,\n         enum_variants::STUTTER,"}, {"sha": "ac9b314c00a69e2a6c3e00c493001a996bc19aaf", "filename": "tests/compile-fail/empty_enum.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/tests%2Fcompile-fail%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/tests%2Fcompile-fail%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fempty_enum.rs?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -0,0 +1,11 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![allow(dead_code)]\n+#![deny(empty_enum)]\n+\n+enum Empty {} //~ ERROR enum with no variants\n+    //~^ HELP consider using the uninhabited type `!` or a wrapper around it\n+\n+fn main() {\n+}"}, {"sha": "86539c2b13efe48a4348a011a21a6a3fb3dad0a1", "filename": "tests/compile-fail/enum_glob_use.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c9019dcadf3273ed23f5e716a96ebd15d595268/tests%2Fcompile-fail%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9019dcadf3273ed23f5e716a96ebd15d595268/tests%2Fcompile-fail%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fenum_glob_use.rs?ref=8c9019dcadf3273ed23f5e716a96ebd15d595268", "patch": "@@ -5,7 +5,9 @@\n \n use std::cmp::Ordering::*; //~ ERROR: don't use glob imports for enum variants\n \n-enum Enum {}\n+enum Enum {\n+    _Foo,\n+}\n \n use self::Enum::*; //~ ERROR: don't use glob imports for enum variants\n "}]}