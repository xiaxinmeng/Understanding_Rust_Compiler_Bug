{"sha": "2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNzZiYjVhMGI3MGFlODM4MjRhYTJlMDk0YWUyZjU5MmRjZWU2OTQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-04T19:20:54Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-04T19:20:54Z"}, "message": "Refactor a bit", "tree": {"sha": "88ed0af87289ce11369a03593430f697a436c565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ed0af87289ce11369a03593430f697a436c565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "html_url": "https://github.com/rust-lang/rust/commit/2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a76bb5a0b70ae83824aa2e094ae2f592dcee694/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "604bdc6ffeea69dffed6d03f10b2fd4e05d04cda", "url": "https://api.github.com/repos/rust-lang/rust/commits/604bdc6ffeea69dffed6d03f10b2fd4e05d04cda", "html_url": "https://github.com/rust-lang/rust/commit/604bdc6ffeea69dffed6d03f10b2fd4e05d04cda"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "e2860371f70b779b85c19a75f3a23a17a3f03a97", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2a76bb5a0b70ae83824aa2e094ae2f592dcee694/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a76bb5a0b70ae83824aa2e094ae2f592dcee694/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "patch": "@@ -151,8 +151,7 @@ pub(crate) fn parse_macro_with_info(\n     let arg_start = arg_tt.map(|t| t.syntax().text_range().start());\n     let def_start = def_tt.map(|t| t.syntax().text_range().start());\n \n-    let macro_rules = db.macro_def(loc.def).ok_or(\"Fail to find macro definition\").ok()?.0;\n-    let shift = macro_rules.shift();\n+    let shift = db.macro_def(loc.def)?.0.shift();\n \n     let arg_map = arg_start\n         .map(|start| exp_map.map_ranges(&expand_info.arg_map, start, shift))"}, {"sha": "02ddd25e7a3c6e610a123c3c8b2a45da79d37aeb", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2a76bb5a0b70ae83824aa2e094ae2f592dcee694/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a76bb5a0b70ae83824aa2e094ae2f592dcee694/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=2a76bb5a0b70ae83824aa2e094ae2f592dcee694", "patch": "@@ -133,7 +133,7 @@ impl TokenMap {\n }\n \n impl ExpandedRangeMap {\n-    fn set(&mut self, relative_range: TextRange, token_id: &tt::TokenId) {\n+    fn add(&mut self, relative_range: TextRange, token_id: &tt::TokenId) {\n         self.ranges.push((relative_range, token_id.clone()))\n     }\n \n@@ -145,13 +145,11 @@ impl ExpandedRangeMap {\n     ) -> Vec<(TextRange, TextRange)> {\n         self.ranges\n             .iter()\n-            .filter_map(|(r, tid)| if shift <= tid.0 { Some((r, tid.0 - shift)) } else { None })\n             .filter_map(|(r, tid)| {\n-                if let Some(to_range) = to.relative_range_of(tt::TokenId(tid)) {\n-                    Some((*r, TextRange::from_to(to_range.start() + start, to_range.end() + start)))\n-                } else {\n-                    None\n-                }\n+                let adjusted_id = tt::TokenId(tid.0.checked_sub(shift)?);\n+                let to_range = to.relative_range_of(adjusted_id)?;\n+                \n+                Some((*r, TextRange::offset_len(to_range.start() + start, to_range.len())))\n             })\n             .collect()\n     }\n@@ -361,8 +359,7 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n                                 self.text_pos + TextUnit::of_str(&self.buf),\n                                 TextUnit::of_str(&ident.text),\n                             );\n-                            let token_id = ident.id;\n-                            self.range_map.set(range, &token_id);\n+                            self.range_map.add(range, &ident.id);\n                         }\n                     }\n "}]}