{"sha": "959f76ddeb795298b88ef42da0c69fa5198f4fe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OWY3NmRkZWI3OTUyOThiODhlZjQyZGEwYzY5ZmE1MTk4ZjRmZTg=", "commit": {"author": {"name": "Jim Blandy", "email": "jimb@red-bean.com", "date": "2012-09-04T07:40:18Z"}, "committer": {"name": "Jim Blandy", "email": "jimb@red-bean.com", "date": "2012-09-04T08:12:12Z"}, "message": "In DuplexStream explanation: change 'There' to 'The'.", "tree": {"sha": "22e49b28438e5e986a2bb3056dd24bb95b7c04e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e49b28438e5e986a2bb3056dd24bb95b7c04e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959f76ddeb795298b88ef42da0c69fa5198f4fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959f76ddeb795298b88ef42da0c69fa5198f4fe8", "html_url": "https://github.com/rust-lang/rust/commit/959f76ddeb795298b88ef42da0c69fa5198f4fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959f76ddeb795298b88ef42da0c69fa5198f4fe8/comments", "author": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80c4f74c29ede062909db2b048b5b75820730994", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c4f74c29ede062909db2b048b5b75820730994", "html_url": "https://github.com/rust-lang/rust/commit/80c4f74c29ede062909db2b048b5b75820730994"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e639ce6e9f40dfff26118a6ff03771070efcf4d5", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/959f76ddeb795298b88ef42da0c69fa5198f4fe8/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/959f76ddeb795298b88ef42da0c69fa5198f4fe8/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=959f76ddeb795298b88ef42da0c69fa5198f4fe8", "patch": "@@ -2593,7 +2593,7 @@ let result = port.recv();\n ## Creating a task with a bi-directional communication path\n \n A very common thing to do is to spawn a child task where the parent\n-and child both need to exchange messages with each other. There\n+and child both need to exchange messages with each other. The\n function `std::comm::DuplexStream()` supports this pattern.  We'll\n look briefly at how it is used.\n "}]}