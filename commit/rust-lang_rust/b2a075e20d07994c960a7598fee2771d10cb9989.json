{"sha": "b2a075e20d07994c960a7598fee2771d10cb9989", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYTA3NWUyMGQwNzk5NGM5NjBhNzU5OGZlZTI3NzFkMTBjYjk5ODk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-03T05:22:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:55Z"}, "message": "rt: Protect rust_task::state with a lock", "tree": {"sha": "4e7a2fd278e8fb43ea692c15a89b7daac158adf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e7a2fd278e8fb43ea692c15a89b7daac158adf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2a075e20d07994c960a7598fee2771d10cb9989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a075e20d07994c960a7598fee2771d10cb9989", "html_url": "https://github.com/rust-lang/rust/commit/b2a075e20d07994c960a7598fee2771d10cb9989", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2a075e20d07994c960a7598fee2771d10cb9989/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7298a797b1041e9e997378bdb3cd4923567b2d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7298a797b1041e9e997378bdb3cd4923567b2d4", "html_url": "https://github.com/rust-lang/rust/commit/d7298a797b1041e9e997378bdb3cd4923567b2d4"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "dd0ae7846bcb6673b8ec5058faf2c061f3443c8f", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=b2a075e20d07994c960a7598fee2771d10cb9989", "patch": "@@ -74,7 +74,6 @@ rust_task::rust_task(rust_task_thread *thread, rust_task_list *state,\n     cache(NULL),\n     kernel(thread->kernel),\n     name(name),\n-    state(state),\n     cond(NULL),\n     cond_name(\"none\"),\n     list_index(-1),\n@@ -87,6 +86,7 @@ rust_task::rust_task(rust_task_thread *thread, rust_task_list *state,\n     dynastack(this),\n     cc_counter(0),\n     total_stack_sz(0),\n+    state(state),\n     killed(false),\n     reentered_rust_stack(false),\n     c_stack(NULL),\n@@ -355,12 +355,14 @@ rust_task::get_frame_glue_fns(uintptr_t fp) {\n bool\n rust_task::running()\n {\n+    scoped_lock with(state_lock);\n     return state == &thread->running_tasks;\n }\n \n bool\n rust_task::blocked()\n {\n+    scoped_lock with(state_lock);\n     return state == &thread->blocked_tasks;\n }\n \n@@ -373,6 +375,7 @@ rust_task::blocked_on(rust_cond *on)\n bool\n rust_task::dead()\n {\n+    scoped_lock with(state_lock);\n     return state == &thread->dead_tasks;\n }\n \n@@ -407,7 +410,10 @@ rust_task::transition(rust_task_list *src, rust_task_list *dst) {\n     I(thread, state == src);\n     src->remove(this);\n     dst->append(this);\n-    state = dst;\n+    {\n+        scoped_lock with(state_lock);\n+        state = dst;\n+    }\n     thread->lock.signal();\n     if(unlock)\n         thread->lock.unlock();"}, {"sha": "cc4a2a0ffe3e3bd5b636f67677f69e8330766d94", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=b2a075e20d07994c960a7598fee2771d10cb9989", "patch": "@@ -68,7 +68,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     // Fields known only to the runtime.\n     rust_kernel *kernel;\n     const char *const name;\n-    rust_task_list *state;\n     rust_cond *cond;\n     const char *cond_name;\n     int32_t list_index;\n@@ -107,6 +106,9 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n private:\n \n+    lock_and_signal state_lock;\n+    rust_task_list *state;\n+\n     // Protects the killed flag\n     lock_and_signal kill_lock;\n     // Indicates that the task was killed and needs to unwind\n@@ -218,6 +220,8 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     bool have_c_stack() { return c_stack != NULL; }\n \n     rust_port_selector *get_port_selector() { return &port_selector; }\n+\n+    rust_task_list *get_state() { return state; }\n };\n \n // This stuff is on the stack-switching fast path"}, {"sha": "cb05a9864767f84bac8034d21c5da48c1bde84b3", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b2a075e20d07994c960a7598fee2771d10cb9989/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=b2a075e20d07994c960a7598fee2771d10cb9989", "patch": "@@ -259,7 +259,7 @@ rust_task_thread::start_main_loop() {\n              \", state: %s\",\n              scheduled_task->name,\n              (uintptr_t)scheduled_task,\n-             scheduled_task->state->name);\n+             scheduled_task->get_state()->name);\n \n         place_task_in_tls(scheduled_task);\n \n@@ -273,7 +273,7 @@ rust_task_thread::start_main_loop() {\n              \" in state '%s', worker id=%d\" PRIxPTR,\n              scheduled_task->name,\n              (uintptr_t)scheduled_task,\n-             scheduled_task->state->name,\n+             scheduled_task->get_state()->name,\n              id);\n \n         reap_dead_tasks();"}]}