{"sha": "6bf41476465278b82ad875ee15d88f371e51b1dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZjQxNDc2NDY1Mjc4YjgyYWQ4NzVlZTE1ZDg4ZjM3MWU1MWIxZGM=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-03-07T14:09:39Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-03-11T18:42:40Z"}, "message": "Add `-Z unpretty` flag for the THIR", "tree": {"sha": "e6ddb58d85d0d9ed9f72b85d5d317bbe97ddfc46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6ddb58d85d0d9ed9f72b85d5d317bbe97ddfc46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bf41476465278b82ad875ee15d88f371e51b1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf41476465278b82ad875ee15d88f371e51b1dc", "html_url": "https://github.com/rust-lang/rust/commit/6bf41476465278b82ad875ee15d88f371e51b1dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bf41476465278b82ad875ee15d88f371e51b1dc/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a3442825335fe55ba30ef000f472bffb0ee9fe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3442825335fe55ba30ef000f472bffb0ee9fe9", "html_url": "https://github.com/rust-lang/rust/commit/2a3442825335fe55ba30ef000f472bffb0ee9fe9"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "2c9eaebb5fdc2f7ce35bd3bad8ad0a5c7dd22c3b", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf41476465278b82ad875ee15d88f371e51b1dc/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6bf41476465278b82ad875ee15d88f371e51b1dc/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6bf41476465278b82ad875ee15d88f371e51b1dc", "patch": "@@ -3870,13 +3870,15 @@ dependencies = [\n  \"rustc_metadata\",\n  \"rustc_middle\",\n  \"rustc_mir\",\n+ \"rustc_mir_build\",\n  \"rustc_parse\",\n  \"rustc_plugin_impl\",\n  \"rustc_save_analysis\",\n  \"rustc_serialize\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n+ \"rustc_typeck\",\n  \"tracing\",\n  \"tracing-subscriber\",\n  \"tracing-tree\","}, {"sha": "c521f2041d8919ceadb8c84242e951c5fbc8ead0", "filename": "compiler/rustc_driver/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2FCargo.toml?ref=6bf41476465278b82ad875ee15d88f371e51b1dc", "patch": "@@ -34,6 +34,8 @@ rustc_interface = { path = \"../rustc_interface\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n+rustc_mir_build = { path = \"../rustc_mir_build\" }\n+rustc_typeck = { path = \"../rustc_typeck\" }\n \n [target.'cfg(windows)'.dependencies]\n winapi = { version = \"0.3\", features = [\"consoleapi\", \"debugapi\", \"processenv\"] }"}, {"sha": "5512bd74453e54eace3b0bd17fc11847eb464f38", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=6bf41476465278b82ad875ee15d88f371e51b1dc", "patch": "@@ -9,12 +9,14 @@ use rustc_hir_pretty as pprust_hir;\n use rustc_middle::hir::map as hir_map;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n+use rustc_mir_build::thir;\n use rustc_session::config::{Input, PpAstTreeMode, PpHirMode, PpMode, PpSourceMode};\n use rustc_session::Session;\n use rustc_span::symbol::Ident;\n use rustc_span::FileName;\n \n use std::cell::Cell;\n+use std::fmt::Write;\n use std::path::Path;\n \n pub use self::PpMode::*;\n@@ -469,6 +471,21 @@ pub fn print_after_hir_lowering<'tcx>(\n             format!(\"{:#?}\", krate)\n         }),\n \n+        ThirTree => {\n+            let mut out = String::new();\n+            abort_on_err(rustc_typeck::check_crate(tcx), tcx.sess);\n+            debug!(\"pretty printing THIR tree\");\n+            for did in tcx.body_owners() {\n+                let hir = tcx.hir();\n+                let body = hir.body(hir.body_owned_by(hir.local_def_id_to_hir_id(did)));\n+                let arena = thir::Arena::default();\n+                let thir =\n+                    thir::build_thir(tcx, ty::WithOptConstParam::unknown(did), &arena, &body.value);\n+                let _ = writeln!(out, \"{:?}:\\n{:#?}\\n\", did, thir);\n+            }\n+            out\n+        }\n+\n         _ => unreachable!(),\n     };\n "}, {"sha": "c1be90efc7299773393741749bdbf0096279b5d1", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf41476465278b82ad875ee15d88f371e51b1dc/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=6bf41476465278b82ad875ee15d88f371e51b1dc", "patch": "@@ -2074,6 +2074,7 @@ fn parse_pretty(\n             (\"hir,identified\", true) => Hir(PpHirMode::Identified),\n             (\"hir,typed\", true) => Hir(PpHirMode::Typed),\n             (\"hir-tree\", true) => HirTree,\n+            (\"thir-tree\", true) => ThirTree,\n             (\"mir\", true) => Mir,\n             (\"mir-cfg\", true) => MirCFG,\n             _ => {\n@@ -2265,6 +2266,8 @@ pub enum PpMode {\n     Hir(PpHirMode),\n     /// `-Zunpretty=hir-tree`\n     HirTree,\n+    /// `-Zunpretty=thir-tree`\n+    ThirTree,\n     /// `-Zunpretty=mir`\n     Mir,\n     /// `-Zunpretty=mir-cfg`\n@@ -2282,6 +2285,7 @@ impl PpMode {\n             | AstTree(PpAstTreeMode::Expanded)\n             | Hir(_)\n             | HirTree\n+            | ThirTree\n             | Mir\n             | MirCFG => true,\n         }"}]}