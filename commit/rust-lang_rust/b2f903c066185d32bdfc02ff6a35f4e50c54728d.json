{"sha": "b2f903c066185d32bdfc02ff6a35f4e50c54728d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZjkwM2MwNjYxODVkMzJiZGZjMDJmZjZhMzVmNGU1MGM1NDcyOGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-07T14:00:09Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-15T16:50:44Z"}, "message": "or-patterns: `hir::Arm::pats` -> `::pat` + `Arm::top_pats_hack`.", "tree": {"sha": "75e31206184e0aeb3a6ff862d4a564e0d729574f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75e31206184e0aeb3a6ff862d4a564e0d729574f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2f903c066185d32bdfc02ff6a35f4e50c54728d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f903c066185d32bdfc02ff6a35f4e50c54728d", "html_url": "https://github.com/rust-lang/rust/commit/b2f903c066185d32bdfc02ff6a35f4e50c54728d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2f903c066185d32bdfc02ff6a35f4e50c54728d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "146cb8eda667e5d76bebdef3acc61adaeaa025b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/146cb8eda667e5d76bebdef3acc61adaeaa025b0", "html_url": "https://github.com/rust-lang/rust/commit/146cb8eda667e5d76bebdef3acc61adaeaa025b0"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "1b32979eda5f408cfa6501c91a226bb75a92b91c", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b2f903c066185d32bdfc02ff6a35f4e50c54728d/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f903c066185d32bdfc02ff6a35f4e50c54728d/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=b2f903c066185d32bdfc02ff6a35f4e50c54728d", "patch": "@@ -1259,21 +1259,32 @@ pub struct Local {\n }\n \n /// Represents a single arm of a `match` expression, e.g.\n-/// `<pats> (if <guard>) => <body>`.\n+/// `<pat> (if <guard>) => <body>`.\n #[derive(RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub struct Arm {\n     #[stable_hasher(ignore)]\n     pub hir_id: HirId,\n     pub span: Span,\n     pub attrs: HirVec<Attribute>,\n-    /// Multiple patterns can be combined with `|`\n-    pub pats: HirVec<P<Pat>>,\n+    /// If this pattern and the optional guard matches, then `body` is evaluated.\n+    pub pat: P<Pat>,\n     /// Optional guard clause.\n     pub guard: Option<Guard>,\n     /// The expression the arm evaluates to if this arm matches.\n     pub body: P<Expr>,\n }\n \n+impl Arm {\n+    // HACK(or_patterns; Centril | dlrobertson): Remove this and\n+    // correctly handle each case in which this method is used.\n+    pub fn top_pats_hack(&self) -> &[P<Pat>] {\n+        match &self.pat.node {\n+            PatKind::Or(pats) => pats,\n+            _ => std::slice::from_ref(&self.pat),\n+        }\n+    }\n+}\n+\n #[derive(RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub enum Guard {\n     If(P<Expr>),"}]}