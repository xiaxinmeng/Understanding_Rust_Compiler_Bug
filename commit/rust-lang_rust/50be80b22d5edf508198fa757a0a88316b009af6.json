{"sha": "50be80b22d5edf508198fa757a0a88316b009af6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYmU4MGIyMmQ1ZWRmNTA4MTk4ZmE3NTdhMGE4ODMxNmIwMDlhZjY=", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-07-21T10:41:27Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-08-04T21:36:13Z"}, "message": "Improve/add comments", "tree": {"sha": "f4a52b434a12eea3ca4fda2b4a84167a26608c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4a52b434a12eea3ca4fda2b4a84167a26608c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50be80b22d5edf508198fa757a0a88316b009af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50be80b22d5edf508198fa757a0a88316b009af6", "html_url": "https://github.com/rust-lang/rust/commit/50be80b22d5edf508198fa757a0a88316b009af6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50be80b22d5edf508198fa757a0a88316b009af6/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89908231bede75f2e21959dfd851df85efd25c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89908231bede75f2e21959dfd851df85efd25c5", "html_url": "https://github.com/rust-lang/rust/commit/e89908231bede75f2e21959dfd851df85efd25c5"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b088b6e730bdcb832884e3525d0b88c2c76e45bc", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50be80b22d5edf508198fa757a0a88316b009af6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50be80b22d5edf508198fa757a0a88316b009af6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=50be80b22d5edf508198fa757a0a88316b009af6", "patch": "@@ -80,8 +80,7 @@ pub struct CodegenCx<'ll, 'tcx> {\n     pub isize_ty: &'ll Type,\n \n     /// Cache for the mapping from source index to llvm index for struct fields,\n-    /// necessary because the mapping depends on padding and thus depens on\n-    /// TyAndLayout.\n+    /// only present if synthetic fields are inserted for padding.\n     pub field_projection_cache: RefCell<FxHashMap<TyAndLayout<'tcx>, Vec<u32>>>,\n \n     pub coverage_cx: Option<coverageinfo::CrateCoverageContext<'ll, 'tcx>>,"}, {"sha": "79bf51929e9db76dc4f000abe36e8deda21f0336", "filename": "compiler/rustc_codegen_llvm/src/type_of.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50be80b22d5edf508198fa757a0a88316b009af6/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50be80b22d5edf508198fa757a0a88316b009af6/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs?ref=50be80b22d5edf508198fa757a0a88316b009af6", "patch": "@@ -363,6 +363,8 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyAndLayout<'tcx> {\n \n             FieldsShape::Array { .. } => index as u64,\n \n+            // Look up llvm field index in projection cache if present. If no projection cache\n+            // is present no padding is used and the llvm field index matches the memory index.\n             FieldsShape::Arbitrary { .. } => match cx.field_projection_cache.borrow().get(self) {\n                 Some(projection) => projection[index] as u64,\n                 None => self.fields.memory_index(index) as u64,"}]}