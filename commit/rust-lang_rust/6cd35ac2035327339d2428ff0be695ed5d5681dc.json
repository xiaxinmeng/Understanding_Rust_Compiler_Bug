{"sha": "6cd35ac2035327339d2428ff0be695ed5d5681dc", "node_id": "C_kwDOAAsO6NoAKDZjZDM1YWMyMDM1MzI3MzM5ZDI0MjhmZjBiZTY5NWVkNWQ1NjgxZGM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-25T03:39:20Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-25T03:39:20Z"}, "message": "Simplify `cast_shift_expr_rhs`.\n\nIt's only ever used with shift operators.", "tree": {"sha": "4a8baceec37b5b0b32a6cee606dc78debb609eeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a8baceec37b5b0b32a6cee606dc78debb609eeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd35ac2035327339d2428ff0be695ed5d5681dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd35ac2035327339d2428ff0be695ed5d5681dc", "html_url": "https://github.com/rust-lang/rust/commit/6cd35ac2035327339d2428ff0be695ed5d5681dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd35ac2035327339d2428ff0be695ed5d5681dc/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c02f4d05d8840e387a97faad577187e80d3da88", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c02f4d05d8840e387a97faad577187e80d3da88", "html_url": "https://github.com/rust-lang/rust/commit/8c02f4d05d8840e387a97faad577187e80d3da88"}], "stats": {"total": 42, "additions": 18, "deletions": 24}, "files": [{"sha": "84b89cd71a6d3047ba3fc9974b40ec6d4eee08c0", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6cd35ac2035327339d2428ff0be695ed5d5681dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd35ac2035327339d2428ff0be695ed5d5681dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=6cd35ac2035327339d2428ff0be695ed5d5681dc", "patch": "@@ -337,31 +337,26 @@ pub fn coerce_unsized_into<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n \n pub fn cast_shift_expr_rhs<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     bx: &mut Bx,\n-    op: hir::BinOpKind,\n     lhs: Bx::Value,\n     rhs: Bx::Value,\n ) -> Bx::Value {\n     // Shifts may have any size int on the rhs\n-    if op.is_shift() {\n-        let mut rhs_llty = bx.cx().val_ty(rhs);\n-        let mut lhs_llty = bx.cx().val_ty(lhs);\n-        if bx.cx().type_kind(rhs_llty) == TypeKind::Vector {\n-            rhs_llty = bx.cx().element_type(rhs_llty)\n-        }\n-        if bx.cx().type_kind(lhs_llty) == TypeKind::Vector {\n-            lhs_llty = bx.cx().element_type(lhs_llty)\n-        }\n-        let rhs_sz = bx.cx().int_width(rhs_llty);\n-        let lhs_sz = bx.cx().int_width(lhs_llty);\n-        if lhs_sz < rhs_sz {\n-            bx.trunc(rhs, lhs_llty)\n-        } else if lhs_sz > rhs_sz {\n-            // FIXME (#1877: If in the future shifting by negative\n-            // values is no longer undefined then this is wrong.\n-            bx.zext(rhs, lhs_llty)\n-        } else {\n-            rhs\n-        }\n+    let mut rhs_llty = bx.cx().val_ty(rhs);\n+    let mut lhs_llty = bx.cx().val_ty(lhs);\n+    if bx.cx().type_kind(rhs_llty) == TypeKind::Vector {\n+        rhs_llty = bx.cx().element_type(rhs_llty)\n+    }\n+    if bx.cx().type_kind(lhs_llty) == TypeKind::Vector {\n+        lhs_llty = bx.cx().element_type(lhs_llty)\n+    }\n+    let rhs_sz = bx.cx().int_width(rhs_llty);\n+    let lhs_sz = bx.cx().int_width(lhs_llty);\n+    if lhs_sz < rhs_sz {\n+        bx.trunc(rhs, lhs_llty)\n+    } else if lhs_sz > rhs_sz {\n+        // FIXME (#1877: If in the future shifting by negative\n+        // values is no longer undefined then this is wrong.\n+        bx.zext(rhs, lhs_llty)\n     } else {\n         rhs\n     }"}, {"sha": "71f9179d02cca4d8755242083bf1e43b0e27812a", "filename": "compiler/rustc_codegen_ssa/src/common.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6cd35ac2035327339d2428ff0be695ed5d5681dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd35ac2035327339d2428ff0be695ed5d5681dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs?ref=6cd35ac2035327339d2428ff0be695ed5d5681dc", "patch": "@@ -1,7 +1,6 @@\n #![allow(non_camel_case_types)]\n \n use rustc_errors::struct_span_err;\n-use rustc_hir as hir;\n use rustc_hir::LangItem;\n use rustc_middle::mir::interpret::ConstValue;\n use rustc_middle::ty::{self, layout::TyAndLayout, Ty, TyCtxt};\n@@ -140,7 +139,7 @@ pub fn build_unchecked_lshift<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     lhs: Bx::Value,\n     rhs: Bx::Value,\n ) -> Bx::Value {\n-    let rhs = base::cast_shift_expr_rhs(bx, hir::BinOpKind::Shl, lhs, rhs);\n+    let rhs = base::cast_shift_expr_rhs(bx, lhs, rhs);\n     // #1877, #10183: Ensure that input is always valid\n     let rhs = shift_mask_rhs(bx, rhs);\n     bx.shl(lhs, rhs)\n@@ -152,7 +151,7 @@ pub fn build_unchecked_rshift<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     lhs: Bx::Value,\n     rhs: Bx::Value,\n ) -> Bx::Value {\n-    let rhs = base::cast_shift_expr_rhs(bx, hir::BinOpKind::Shr, lhs, rhs);\n+    let rhs = base::cast_shift_expr_rhs(bx, lhs, rhs);\n     // #1877, #10183: Ensure that input is always valid\n     let rhs = shift_mask_rhs(bx, rhs);\n     let is_signed = lhs_t.is_signed();"}]}