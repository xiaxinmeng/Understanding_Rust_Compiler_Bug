{"sha": "e3faeb486a962d19e1f533a206511b669aced988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZmFlYjQ4NmE5NjJkMTllMWY1MzNhMjA2NTExYjY2OWFjZWQ5ODg=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-01-21T17:10:40Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-01-21T19:17:05Z"}, "message": "mir: Improve size_of handling when arg is unsized", "tree": {"sha": "d0564b99aedb435e490b119845ed5b6a34776a2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0564b99aedb435e490b119845ed5b6a34776a2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3faeb486a962d19e1f533a206511b669aced988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3faeb486a962d19e1f533a206511b669aced988", "html_url": "https://github.com/rust-lang/rust/commit/e3faeb486a962d19e1f533a206511b669aced988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3faeb486a962d19e1f533a206511b669aced988/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a243ad280a4ac57c1b8427e30e31c5b505cf10de", "url": "https://api.github.com/repos/rust-lang/rust/commits/a243ad280a4ac57c1b8427e30e31c5b505cf10de", "html_url": "https://github.com/rust-lang/rust/commit/a243ad280a4ac57c1b8427e30e31c5b505cf10de"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "cf931ece712b0acd8e217d4463804624f0e0d84b", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3faeb486a962d19e1f533a206511b669aced988/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3faeb486a962d19e1f533a206511b669aced988/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=e3faeb486a962d19e1f533a206511b669aced988", "patch": "@@ -127,6 +127,8 @@ pub enum InvalidProgramInfo<'tcx> {\n     Layout(layout::LayoutError<'tcx>),\n     /// An invalid transmute happened.\n     TransmuteSizeDiff(Ty<'tcx>, Ty<'tcx>),\n+    /// SizeOf of unsized type was requested.\n+    SizeOfUnsizedType(Ty<'tcx>),\n }\n \n impl fmt::Display for InvalidProgramInfo<'_> {\n@@ -144,6 +146,7 @@ impl fmt::Display for InvalidProgramInfo<'_> {\n                 \"transmuting `{}` to `{}` is not possible, because these types do not have the same size\",\n                 from_ty, to_ty\n             ),\n+            SizeOfUnsizedType(ty) => write!(f, \"size_of called on unsized type `{}`\", ty),\n         }\n     }\n }"}, {"sha": "fbc72ad8adc9656c3fbf2f51d7888fab76ceecc0", "filename": "compiler/rustc_mir/src/interpret/step.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3faeb486a962d19e1f533a206511b669aced988/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3faeb486a962d19e1f533a206511b669aced988/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs?ref=e3faeb486a962d19e1f533a206511b669aced988", "patch": "@@ -270,6 +270,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         self.frame().current_span(),\n                         &format!(\"SizeOf nullary MIR operator called for unsized type {}\", ty),\n                     );\n+                    throw_inval!(SizeOfUnsizedType(ty));\n                 }\n                 self.write_scalar(Scalar::from_machine_usize(layout.size.bytes(), self), dest)?;\n             }"}, {"sha": "26f9c786ba13b9ce60a8dd01720590a44c03dc89", "filename": "src/test/ui/mir/issue-80742.stderr", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e3faeb486a962d19e1f533a206511b669aced988/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3faeb486a962d19e1f533a206511b669aced988/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr?ref=e3faeb486a962d19e1f533a206511b669aced988", "patch": "@@ -1,3 +1,17 @@\n+error[E0080]: evaluation of constant value failed\n+  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+   |\n+LL |     intrinsics::size_of::<T>()\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     size_of called on unsized type `dyn Debug`\n+   |     inside `std::mem::size_of::<dyn Debug>` at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+   | \n+  ::: $DIR/issue-80742.rs:23:10\n+   |\n+LL |     [u8; size_of::<T>() + 1]: ,\n+   |          -------------- inside `Inline::<dyn Debug>::{constant#0}` at $DIR/issue-80742.rs:23:10\n+\n error[E0599]: no function or associated item named `new` found for struct `Inline<dyn Debug>` in the current scope\n   --> $DIR/issue-80742.rs:31:36\n    |\n@@ -21,6 +35,20 @@ LL |   pub trait Debug {\n    = note: the method `new` exists but the following trait bounds were not satisfied:\n            `dyn Debug: Sized`\n \n+error[E0080]: evaluation of constant value failed\n+  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+   |\n+LL |     intrinsics::size_of::<T>()\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     size_of called on unsized type `dyn Debug`\n+   |     inside `std::mem::size_of::<dyn Debug>` at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+   | \n+  ::: $DIR/issue-80742.rs:15:10\n+   |\n+LL |     [u8; size_of::<T>() + 1]: ,\n+   |          -------------- inside `Inline::<dyn Debug>::{constant#0}` at $DIR/issue-80742.rs:15:10\n+\n error[E0277]: the size for values of type `dyn Debug` cannot be known at compilation time\n   --> $DIR/issue-80742.rs:31:15\n    |\n@@ -36,7 +64,7 @@ help: consider relaxing the implicit `Sized` restriction\n LL | struct Inline<T: ?Sized>\n    |                ^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0277, E0599.\n-For more information about an error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0080, E0277, E0599.\n+For more information about an error, try `rustc --explain E0080`."}]}