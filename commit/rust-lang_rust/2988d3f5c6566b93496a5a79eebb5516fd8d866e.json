{"sha": "2988d3f5c6566b93496a5a79eebb5516fd8d866e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ODhkM2Y1YzY1NjZiOTM0OTZhNWE3OWVlYmI1NTE2ZmQ4ZDg2NmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-17T22:47:01Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-18T04:15:17Z"}, "message": "fix repr of @mut vectors", "tree": {"sha": "21b017267716ddbf45d675528c0ef36879090aa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21b017267716ddbf45d675528c0ef36879090aa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2988d3f5c6566b93496a5a79eebb5516fd8d866e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2988d3f5c6566b93496a5a79eebb5516fd8d866e", "html_url": "https://github.com/rust-lang/rust/commit/2988d3f5c6566b93496a5a79eebb5516fd8d866e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2988d3f5c6566b93496a5a79eebb5516fd8d866e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7b220f20367cde776b9e854b905745c9a271e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7b220f20367cde776b9e854b905745c9a271e2", "html_url": "https://github.com/rust-lang/rust/commit/0c7b220f20367cde776b9e854b905745c9a271e2"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "4df2ace1056a5184e09e8344f3655d3db99a6e16", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2988d3f5c6566b93496a5a79eebb5516fd8d866e/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2988d3f5c6566b93496a5a79eebb5516fd8d866e/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=2988d3f5c6566b93496a5a79eebb5516fd8d866e", "patch": "@@ -200,7 +200,7 @@ impl ReprVisitor {\n     }\n \n     pub fn write_vec_range(&self,\n-                           mtbl: uint,\n+                           _mtbl: uint,\n                            ptr: *u8,\n                            len: uint,\n                            inner: *TyDesc)\n@@ -218,7 +218,6 @@ impl ReprVisitor {\n             } else {\n                 self.writer.write_str(\", \");\n             }\n-            self.write_mut_qualifier(mtbl);\n             self.visit_ptr_inner(p as *c_void, inner);\n             p = align(ptr::offset(p, sz) as uint, al) as *u8;\n             left -= dec;\n@@ -303,18 +302,16 @@ impl TyVisitor for ReprVisitor {\n         }\n     }\n \n-    fn visit_uniq(&self, mtbl: uint, inner: *TyDesc) -> bool {\n+    fn visit_uniq(&self, _mtbl: uint, inner: *TyDesc) -> bool {\n         self.writer.write_char('~');\n-        self.write_mut_qualifier(mtbl);\n         do self.get::<*c_void> |b| {\n             self.visit_ptr_inner(*b, inner);\n         }\n     }\n \n     #[cfg(not(stage0))]\n-    fn visit_uniq_managed(&self, mtbl: uint, inner: *TyDesc) -> bool {\n+    fn visit_uniq_managed(&self, _mtbl: uint, inner: *TyDesc) -> bool {\n         self.writer.write_char('~');\n-        self.write_mut_qualifier(mtbl);\n         do self.get::<&managed::raw::BoxRepr> |b| {\n             let p = ptr::to_unsafe_ptr(&b.data) as *c_void;\n             self.visit_ptr_inner(p, inner);\n@@ -349,6 +346,7 @@ impl TyVisitor for ReprVisitor {\n     fn visit_evec_box(&self, mtbl: uint, inner: *TyDesc) -> bool {\n         do self.get::<&VecRepr> |b| {\n             self.writer.write_char('@');\n+            self.write_mut_qualifier(mtbl);\n             self.write_unboxed_vec_repr(mtbl, &b.unboxed, inner);\n         }\n     }\n@@ -630,6 +628,7 @@ fn test_repr() {\n     exact_test(&(&10), \"&10\");\n     let mut x = 10;\n     exact_test(&(&mut x), \"&mut 10\");\n+    exact_test(&(@mut [1, 2]), \"@mut [1, 2]\");\n \n     exact_test(&(1,), \"(1,)\");\n     exact_test(&(@[1,2,3,4,5,6,7,8]),"}]}