{"sha": "4024f2ce5b82677c33596fc1e3c1ac756abd4a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMjRmMmNlNWI4MjY3N2MzMzU5NmZjMWUzYzFhYzc1NmFiZDRhOTU=", "commit": {"author": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2017-04-19T10:17:12Z"}, "committer": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2017-04-19T10:17:12Z"}, "message": "Fixes compilation error with latest nightly rust (1.18.0-nightly (9f2abadca 2017-04-18))", "tree": {"sha": "8effae0b75d323b5a858c5337688896dc34f97f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8effae0b75d323b5a858c5337688896dc34f97f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4024f2ce5b82677c33596fc1e3c1ac756abd4a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4024f2ce5b82677c33596fc1e3c1ac756abd4a95", "html_url": "https://github.com/rust-lang/rust/commit/4024f2ce5b82677c33596fc1e3c1ac756abd4a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4024f2ce5b82677c33596fc1e3c1ac756abd4a95/comments", "author": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f2fe14405fc33d4c21641f85e44fef6ade63f13", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f2fe14405fc33d4c21641f85e44fef6ade63f13", "html_url": "https://github.com/rust-lang/rust/commit/6f2fe14405fc33d4c21641f85e44fef6ade63f13"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9ca07e27406b8243039ec4a8df1f237133554876", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4024f2ce5b82677c33596fc1e3c1ac756abd4a95/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4024f2ce5b82677c33596fc1e3c1ac756abd4a95/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=4024f2ce5b82677c33596fc1e3c1ac756abd4a95", "patch": "@@ -44,7 +44,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n                 let variant = &var.node;\n                 if let Some(body_id) = variant.disr_expr {\n                     use rustc_const_eval::*;\n-                    let constcx = ConstContext::new(cx.tcx, body_id);\n+                    let constcx = ConstContext::with_tables(cx.tcx, cx.tcx.body_tables(body_id));\n                     let bad = match constcx.eval(&cx.tcx.hir.body(body_id).value) {\n                         Ok(ConstVal::Integral(Usize(Us64(i)))) => i as u32 as u64 != i,\n                         Ok(ConstVal::Integral(Isize(Is64(i)))) => i as i32 as i64 != i,"}]}