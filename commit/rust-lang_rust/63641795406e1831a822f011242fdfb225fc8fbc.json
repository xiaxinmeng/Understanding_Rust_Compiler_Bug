{"sha": "63641795406e1831a822f011242fdfb225fc8fbc", "node_id": "C_kwDOAAsO6NoAKDYzNjQxNzk1NDA2ZTE4MzFhODIyZjAxMTI0MmZkZmIyMjVmYzhmYmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T14:30:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T14:30:36Z"}, "message": "Auto merge of #97137 - Kobzol:ci-llvm-pgo-pid, r=Mark-Simulacrum\n\nAdd PID to LLVM PGO profile path\n\nThis is a continuation of https://github.com/rust-lang/rust/pull/97110, which adds PID to the filename pattern of LLVM profiles. It also adds some metrics to the pgo.sh script, so that we can observe how many profiles there are and how large are they.\n\nr? `@lqd`", "tree": {"sha": "21b126bb8fb93b7f8c748f9f559a1fe5a05e32c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21b126bb8fb93b7f8c748f9f559a1fe5a05e32c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63641795406e1831a822f011242fdfb225fc8fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63641795406e1831a822f011242fdfb225fc8fbc", "html_url": "https://github.com/rust-lang/rust/commit/63641795406e1831a822f011242fdfb225fc8fbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63641795406e1831a822f011242fdfb225fc8fbc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b0452ece11bf714f7cf2003747231931504d59", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b0452ece11bf714f7cf2003747231931504d59", "html_url": "https://github.com/rust-lang/rust/commit/c7b0452ece11bf714f7cf2003747231931504d59"}, {"sha": "87e97c9035273acf187b5a4eab5a32b8ccebe13b", "url": "https://api.github.com/repos/rust-lang/rust/commits/87e97c9035273acf187b5a4eab5a32b8ccebe13b", "html_url": "https://github.com/rust-lang/rust/commit/87e97c9035273acf187b5a4eab5a32b8ccebe13b"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "79f2338b7abb9618e81f3c652db133c222139da1", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/63641795406e1831a822f011242fdfb225fc8fbc/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63641795406e1831a822f011242fdfb225fc8fbc/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=63641795406e1831a822f011242fdfb225fc8fbc", "patch": "@@ -300,6 +300,9 @@ impl Step for Llvm {\n \n         if builder.config.llvm_profile_generate {\n             cfg.define(\"LLVM_BUILD_INSTRUMENTED\", \"IR\");\n+            if let Ok(llvm_profile_dir) = std::env::var(\"LLVM_PROFILE_DIR\") {\n+                cfg.define(\"LLVM_PROFILE_DATA_DIR\", llvm_profile_dir);\n+            }\n             cfg.define(\"LLVM_BUILD_RUNTIME\", \"No\");\n         }\n         if let Some(path) = builder.config.llvm_profile_use.as_ref() {"}, {"sha": "9de970c9c2aa5be160d1221d1c1a8320b961573d", "filename": "src/ci/pgo.sh", "status": "modified", "additions": 36, "deletions": 10, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/63641795406e1831a822f011242fdfb225fc8fbc/src%2Fci%2Fpgo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/63641795406e1831a822f011242fdfb225fc8fbc/src%2Fci%2Fpgo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpgo.sh?ref=63641795406e1831a822f011242fdfb225fc8fbc", "patch": "@@ -39,12 +39,19 @@ gather_profiles () {\n \n rm -rf /tmp/rustc-pgo\n \n+# This path has to be absolute\n+LLVM_PROFILE_DIRECTORY_ROOT=/tmp/llvm-pgo\n+\n # We collect LLVM profiling information and rustc profiling information in\n # separate phases. This increases build time -- though not by a huge amount --\n # but prevents any problems from arising due to different profiling runtimes\n # being simultaneously linked in.\n-\n-python3 ../x.py build --target=$PGO_HOST --host=$PGO_HOST \\\n+# LLVM IR PGO does not respect LLVM_PROFILE_FILE, so we have to set the profiling file\n+# path through our custom environment variable. We include the PID in the directory path\n+# to avoid updates to profile files being lost because of race conditions.\n+LLVM_PROFILE_DIR=${LLVM_PROFILE_DIRECTORY_ROOT}/prof-%p python3 ../x.py build \\\n+    --target=$PGO_HOST \\\n+    --host=$PGO_HOST \\\n     --stage 2 library/std \\\n     --llvm-profile-generate\n \n@@ -64,11 +71,18 @@ RUSTC_BOOTSTRAP=1 \\\n gather_profiles \"Debug,Opt\" \"Full\" \\\n \"syn-1.0.89,cargo-0.60.0,serde-1.0.136,ripgrep-13.0.0,regex-1.5.5,clap-3.1.6,hyper-0.14.18\"\n \n+LLVM_PROFILE_MERGED_FILE=/tmp/llvm-pgo.profdata\n+\n # Merge the profile data we gathered for LLVM\n # Note that this uses the profdata from the clang we used to build LLVM,\n # which likely has a different version than our in-tree clang.\n-/rustroot/bin/llvm-profdata \\\n-    merge -o /tmp/llvm-pgo.profdata ./build/$PGO_HOST/llvm/build/profiles\n+/rustroot/bin/llvm-profdata merge -o ${LLVM_PROFILE_MERGED_FILE} ${LLVM_PROFILE_DIRECTORY_ROOT}\n+\n+echo \"LLVM PGO statistics\"\n+du -sh ${LLVM_PROFILE_MERGED_FILE}\n+du -sh ${LLVM_PROFILE_DIRECTORY_ROOT}\n+echo \"Profile file count\"\n+find ${LLVM_PROFILE_DIRECTORY_ROOT} -type f | wc -l\n \n # Rustbuild currently doesn't support rebuilding LLVM when PGO options\n # change (or any other llvm-related options); so just clear out the relevant\n@@ -77,22 +91,34 @@ rm -r ./build/$PGO_HOST/llvm ./build/$PGO_HOST/lld\n \n # Okay, LLVM profiling is done, switch to rustc PGO.\n \n+# The path has to be absolute\n+RUSTC_PROFILE_DIRECTORY_ROOT=/tmp/rustc-pgo\n+\n python3 ../x.py build --target=$PGO_HOST --host=$PGO_HOST \\\n     --stage 2 library/std \\\n-    --rust-profile-generate=/tmp/rustc-pgo\n+    --rust-profile-generate=${RUSTC_PROFILE_DIRECTORY_ROOT}\n \n # Here we're profiling the `rustc` frontend, so we also include `Check`.\n # The benchmark set includes various stress tests that put the frontend under pressure.\n # The profile data is written into a single filepath that is being repeatedly merged when each\n # rustc invocation ends. Empirically, this can result in some profiling data being lost.\n # That's why we override the profile path to include the PID. This will produce many more profiling\n # files, but the resulting profile will produce a slightly faster rustc binary.\n-LLVM_PROFILE_FILE=/tmp/rustc-pgo/default_%m_%p.profraw gather_profiles \"Check,Debug,Opt\" \"All\" \\\n-\"externs,ctfe-stress-5,cargo-0.60.0,token-stream-stress,match-stress,tuple-stress,diesel-1.4.8,bitmaps-3.1.0\"\n+LLVM_PROFILE_FILE=${RUSTC_PROFILE_DIRECTORY_ROOT}/default_%m_%p.profraw gather_profiles \\\n+  \"Check,Debug,Opt\" \"All\" \\\n+  \"externs,ctfe-stress-5,cargo-0.60.0,token-stream-stress,match-stress,tuple-stress,diesel-1.4.8,bitmaps-3.1.0\"\n+\n+RUSTC_PROFILE_MERGED_FILE=/tmp/rustc-pgo.profdata\n \n # Merge the profile data we gathered\n ./build/$PGO_HOST/llvm/bin/llvm-profdata \\\n-    merge -o /tmp/rustc-pgo.profdata /tmp/rustc-pgo\n+    merge -o ${RUSTC_PROFILE_MERGED_FILE} ${RUSTC_PROFILE_DIRECTORY_ROOT}\n+\n+echo \"Rustc PGO statistics\"\n+du -sh ${RUSTC_PROFILE_MERGED_FILE}\n+du -sh ${RUSTC_PROFILE_DIRECTORY_ROOT}\n+echo \"Profile file count\"\n+find ${RUSTC_PROFILE_DIRECTORY_ROOT} -type f | wc -l\n \n # Rustbuild currently doesn't support rebuilding LLVM when PGO options\n # change (or any other llvm-related options); so just clear out the relevant\n@@ -102,5 +128,5 @@ rm -r ./build/$PGO_HOST/llvm ./build/$PGO_HOST/lld\n # This produces the actual final set of artifacts, using both the LLVM and rustc\n # collected profiling data.\n $@ \\\n-    --rust-profile-use=/tmp/rustc-pgo.profdata \\\n-    --llvm-profile-use=/tmp/llvm-pgo.profdata\n+    --rust-profile-use=${RUSTC_PROFILE_MERGED_FILE} \\\n+    --llvm-profile-use=${LLVM_PROFILE_MERGED_FILE}"}]}