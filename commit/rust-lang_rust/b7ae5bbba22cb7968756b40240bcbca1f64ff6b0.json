{"sha": "b7ae5bbba22cb7968756b40240bcbca1f64ff6b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YWU1YmJiYTIyY2I3OTY4NzU2YjQwMjQwYmNiY2ExZjY0ZmY2YjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-27T22:12:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-27T22:12:49Z"}, "message": "Simplify", "tree": {"sha": "d6d2572461b013be548864ff2ca8516702fca3f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6d2572461b013be548864ff2ca8516702fca3f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0", "html_url": "https://github.com/rust-lang/rust/commit/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da9bfacd98758438a5e733f1a3c42d8244c74eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/da9bfacd98758438a5e733f1a3c42d8244c74eed", "html_url": "https://github.com/rust-lang/rust/commit/da9bfacd98758438a5e733f1a3c42d8244c74eed"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "7706690cc97ca1ec8f1237d2381b3e460230aee4", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7ae5bbba22cb7968756b40240bcbca1f64ff6b0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=b7ae5bbba22cb7968756b40240bcbca1f64ff6b0", "patch": "@@ -103,18 +103,27 @@ fn struct_item(p: &mut Parser) {\n }\n \n fn named_fields(p: &mut Parser) {\n-    p.curly_block(|p| comma_list(p, EOF, |p| {\n+    assert!(p.at(L_CURLY));\n+    p.bump();\n+    while !p.at(R_CURLY) && !p.at(EOF) {\n         named_field(p);\n-        true\n-    }));\n+        if !p.at(R_CURLY) {\n+            p.expect(COMMA);\n+        }\n+    }\n+    p.expect(R_CURLY);\n \n     fn named_field(p: &mut Parser) {\n         let field = p.start();\n         visibility(p);\n-        if p.expect(IDENT) && p.expect(COLON) {\n+        if p.expect(IDENT) {\n+            p.expect(COLON);\n             types::type_ref(p);\n-        };\n-        field.complete(p, NAMED_FIELD);\n+            field.complete(p, NAMED_FIELD);\n+        } else {\n+            field.abandon(p);\n+            p.err_and_bump(\"expected field declaration\");\n+        }\n     }\n }\n "}]}