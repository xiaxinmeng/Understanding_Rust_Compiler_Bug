{"sha": "bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMmY4NGJmZTM2N2Q1YTFmNGI4ZjA5MmZiMjJmNTM1ZTZlOTVhNDA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-12-17T14:13:38Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-12-22T15:06:22Z"}, "message": "Add an unstable `--xpretty _` option to `rustc`.  Moved `flowgraph`\nand `everybody_loops` options to `--xpretty`.", "tree": {"sha": "602c25ed20b220ad50b17a21fdf4df9541d5e245", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/602c25ed20b220ad50b17a21fdf4df9541d5e245"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "html_url": "https://github.com/rust-lang/rust/commit/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41def27bda80eb5e1b3bfa75d34fd4f9e31e0988", "url": "https://api.github.com/repos/rust-lang/rust/commits/41def27bda80eb5e1b3bfa75d34fd4f9e31e0988", "html_url": "https://github.com/rust-lang/rust/commit/41def27bda80eb5e1b3bfa75d34fd4f9e31e0988"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "e3bd2648588d6d0b3a28520ceeb25156ae83eb59", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "patch": "@@ -811,10 +811,15 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n                    \"Pretty-print the input instead of compiling;\n                    valid types are: `normal` (un-annotated source),\n                    `expanded` (crates expanded),\n-                   `typed` (crates expanded, with type annotations),\n-                   `expanded,identified` (fully parenthesized, AST nodes with IDs), or\n-                   `flowgraph=<nodeid>` (graphviz formatted flowgraph for node)\",\n+                   `typed` (crates expanded, with type annotations), or\n+                   `expanded,identified` (fully parenthesized, AST nodes with IDs).\",\n                  \"TYPE\"),\n+        opt::flagopt_u(\"\", \"xpretty\",\n+                     \"Pretty-print the input instead of compiling, unstable variants;\n+                      valid types are any of the types for `--pretty`, as well as:\n+                      `flowgraph=<nodeid>` (graphviz formatted flowgraph for node), or\n+                      `everybody_loops` (all function bodies replaced with `loop {}`).\",\n+                     \"TYPE\"),\n         opt::flagopt(\"\", \"dep-info\",\n                  \"Output dependency info to <filename> after compiling, \\\n                   in a format suitable for use by Makefiles\", \"FILENAME\"),"}, {"sha": "64f4d8bdc783f563b77686bf4524dcf9d10ac763", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "patch": "@@ -138,8 +138,19 @@ fn run_compiler(args: &[String]) {\n     }\n \n     let pretty = matches.opt_default(\"pretty\", \"normal\").map(|a| {\n-        pretty::parse_pretty(&sess, a.as_slice())\n+        // stable pretty-print variants only\n+        pretty::parse_pretty(&sess, a.as_slice(), false)\n     });\n+    let pretty = if pretty.is_none() &&\n+        sess.debugging_opt(config::UNSTABLE_OPTIONS) {\n+            matches.opt_str(\"xpretty\").map(|a| {\n+                // extended with unstable pretty-print variants\n+                pretty::parse_pretty(&sess, a.as_slice(), true)\n+            })\n+        } else {\n+            pretty\n+        };\n+\n     match pretty.into_iter().next() {\n         Some((ppm, opt_uii)) => {\n             pretty::pretty_print_input(sess, cfg, &input, ppm, opt_uii, ofile);"}, {"sha": "3b6ad75243e229d6f105b566e6ed4f75ed7dac0c", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=bf2f84bfe367d5a1f4b8f092fb22f535e6e95a40", "patch": "@@ -59,24 +59,33 @@ pub enum PpMode {\n     PpmFlowGraph,\n }\n \n-pub fn parse_pretty(sess: &Session, name: &str) -> (PpMode, Option<UserIdentifiedItem>) {\n+pub fn parse_pretty(sess: &Session,\n+                    name: &str,\n+                    extended: bool) -> (PpMode, Option<UserIdentifiedItem>) {\n     let mut split = name.splitn(1, '=');\n     let first = split.next().unwrap();\n     let opt_second = split.next();\n-    let first = match first {\n-        \"normal\"       => PpmSource(PpmNormal),\n-        \"everybody_loops\" => PpmSource(PpmEveryBodyLoops),\n-        \"expanded\"     => PpmSource(PpmExpanded),\n-        \"typed\"        => PpmSource(PpmTyped),\n-        \"expanded,identified\" => PpmSource(PpmExpandedIdentified),\n-        \"expanded,hygiene\" => PpmSource(PpmExpandedHygiene),\n-        \"identified\"   => PpmSource(PpmIdentified),\n-        \"flowgraph\"    => PpmFlowGraph,\n+    let first = match (first, extended) {\n+        (\"normal\", _)       => PpmSource(PpmNormal),\n+        (\"everybody_loops\", true) => PpmSource(PpmEveryBodyLoops),\n+        (\"expanded\", _)     => PpmSource(PpmExpanded),\n+        (\"typed\", _)        => PpmSource(PpmTyped),\n+        (\"expanded,identified\", _) => PpmSource(PpmExpandedIdentified),\n+        (\"expanded,hygiene\", _) => PpmSource(PpmExpandedHygiene),\n+        (\"identified\", _)   => PpmSource(PpmIdentified),\n+        (\"flowgraph\", true)    => PpmFlowGraph,\n         _ => {\n-            sess.fatal(format!(\n-                \"argument to `pretty` must be one of `normal`, \\\n-                 `expanded`, `flowgraph=<nodeid>`, `typed`, `identified`, \\\n-                 or `expanded,identified`; got {}\", name).as_slice());\n+            if extended {\n+                sess.fatal(format!(\n+                    \"argument to `xpretty` must be one of `normal`, \\\n+                     `expanded`, `flowgraph=<nodeid>`, `typed`, `identified`, \\\n+                     `expanded,identified`, or `everybody_loops`; got {}\", name).as_slice());\n+            } else {\n+                sess.fatal(format!(\n+                    \"argument to `pretty` must be one of `normal`, \\\n+                     `expanded`, `typed`, `identified`, \\\n+                     or `expanded,identified`; got {}\", name).as_slice());\n+            }\n         }\n     };\n     let opt_second = opt_second.and_then::<UserIdentifiedItem, _>(from_str);"}]}