{"sha": "5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "node_id": "C_kwDOAAsO6NoAKDVjMGFlZTAxM2U5M2U0MGFiNTRkMTkyOGUyZTE1YWFjODFkMWFhZWE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-05T22:34:37Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-05T22:34:37Z"}, "message": "Fix highlighting of `Self`", "tree": {"sha": "0b8033b77a7fdca1c845de6832407a6722e2fde2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b8033b77a7fdca1c845de6832407a6722e2fde2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "html_url": "https://github.com/rust-lang/rust/commit/5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0d64711434644e7da02a3be718cd36270d37d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d64711434644e7da02a3be718cd36270d37d0a", "html_url": "https://github.com/rust-lang/rust/commit/c0d64711434644e7da02a3be718cd36270d37d0a"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "968aa331164b5084d614d8e03b9c8058a7c4ba89", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -118,6 +118,7 @@ pub struct HlRange {\n // parameter:: Emitted for non-self function parameters.\n // property:: Emitted for struct and union fields.\n // selfKeyword:: Emitted for the self function parameter and self path-specifier.\n+// selfTypeKeyword:: Emitted for the Self type parameter.\n // toolModule:: Emitted for tool modules.\n // typeParameter:: Emitted for type parameters.\n // unresolvedReference:: Emitted for unresolved references, names that rust-analyzer can't find the definition of."}, {"sha": "bf532b5bb2a5a35076cce5fc9fe90c8cbbb3d9c9", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -190,6 +190,7 @@ fn keyword(\n         T![for] if parent_matches::<ast::ForExpr>(&token) => h | HlMod::ControlFlow,\n         T![unsafe] => h | HlMod::Unsafe,\n         T![true] | T![false] => HlTag::BoolLiteral.into(),\n+        T![Self] => return Some(HlTag::Symbol(SymbolKind::SelfType).into()),\n         // crate is handled just as a token if it's in an `extern crate`\n         T![crate] if parent_matches::<ast::ExternCrate>(&token) => h,\n         // self, crate and super are handled as either a Name or NameRef already, unless they"}, {"sha": "cb9d36f8304c91276df07d258227d6e2dadc54b8", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -141,6 +141,7 @@ impl HlTag {\n                 SymbolKind::Macro => \"macro\",\n                 SymbolKind::Module => \"module\",\n                 SymbolKind::SelfParam => \"self_keyword\",\n+                SymbolKind::SelfType => \"self_type_keyword\",\n                 SymbolKind::Static => \"static\",\n                 SymbolKind::Struct => \"struct\",\n                 SymbolKind::ToolModule => \"tool_module\","}, {"sha": "27e3e57065c6713736df0f5ec029c008bab5c399", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_general.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -59,11 +59,11 @@\n     <span class=\"field declaration\">x</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"keyword\">where</span> <span class=\"keyword\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"keyword\">where</span> <span class=\"self_type_keyword\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"keyword\">where</span> <span class=\"keyword\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"keyword\">where</span> <span class=\"self_type_keyword\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n@@ -210,7 +210,7 @@\n \n <span class=\"keyword\">impl</span> <span class=\"enum public\">Bool</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function associated consuming declaration public\">to_primitive</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n-        <span class=\"unresolved_reference\">matches</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"keyword\">self</span><span class=\"comma\">,</span> <span class=\"keyword\">Self</span><span class=\"colon\">:</span><span class=\"colon\">:</span>True<span class=\"parenthesis\">)</span>\n+        <span class=\"unresolved_reference\">matches</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"keyword\">self</span><span class=\"comma\">,</span> <span class=\"self_type_keyword\">Self</span><span class=\"colon\">:</span><span class=\"colon\">:</span>True<span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n <span class=\"keyword\">const</span> <span class=\"constant declaration\">USAGE_OF_BOOL</span><span class=\"colon\">:</span><span class=\"builtin_type\">bool</span> <span class=\"operator\">=</span> <span class=\"enum public\">Bool</span><span class=\"operator\">::</span><span class=\"enum_variant public\">True</span><span class=\"operator\">.</span><span class=\"function associated consuming public\">to_primitive</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>"}, {"sha": "32b14764a109d906766dc2cb48f8397f7b789dfb", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -260,6 +260,7 @@ impl CompletionItemKind {\n                 SymbolKind::Macro => \"ma\",\n                 SymbolKind::Module => \"md\",\n                 SymbolKind::SelfParam => \"sp\",\n+                SymbolKind::SelfType => \"sy\",\n                 SymbolKind::Static => \"sc\",\n                 SymbolKind::Struct => \"st\",\n                 SymbolKind::ToolModule => \"tm\","}, {"sha": "3f64c0a124394d93486ba68c2d41512024c7bf6f", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -163,6 +163,7 @@ pub enum SymbolKind {\n     Macro,\n     Module,\n     SelfParam,\n+    SelfType,\n     Static,\n     Struct,\n     ToolModule,"}, {"sha": "5fb945ea98727c50875ae87fabba8b9297a45ac9", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -66,6 +66,7 @@ define_semantic_token_types![\n     (PARENTHESIS, \"parenthesis\"),\n     (PUNCTUATION, \"punctuation\"),\n     (SELF_KEYWORD, \"selfKeyword\"),\n+    (SELF_TYPE_KEYWORD, \"selfTypeKeyword\"),\n     (SEMICOLON, \"semicolon\"),\n     (TYPE_ALIAS, \"typeAlias\"),\n     (TOOL_MODULE, \"toolModule\"),"}, {"sha": "4a2b3a1b47ba5f2d12b07413588ab252d8bcb516", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -55,7 +55,9 @@ pub(crate) fn symbol_kind(symbol_kind: SymbolKind) -> lsp_types::SymbolKind {\n         | SymbolKind::Attribute\n         | SymbolKind::Derive => lsp_types::SymbolKind::FUNCTION,\n         SymbolKind::Module | SymbolKind::ToolModule => lsp_types::SymbolKind::MODULE,\n-        SymbolKind::TypeAlias | SymbolKind::TypeParam => lsp_types::SymbolKind::TYPE_PARAMETER,\n+        SymbolKind::TypeAlias | SymbolKind::TypeParam | SymbolKind::SelfType => {\n+            lsp_types::SymbolKind::TYPE_PARAMETER\n+        }\n         SymbolKind::Field => lsp_types::SymbolKind::FIELD,\n         SymbolKind::Static => lsp_types::SymbolKind::CONSTANT,\n         SymbolKind::Const => lsp_types::SymbolKind::CONSTANT,\n@@ -124,6 +126,7 @@ pub(crate) fn completion_item_kind(\n             SymbolKind::Macro => lsp_types::CompletionItemKind::FUNCTION,\n             SymbolKind::Module => lsp_types::CompletionItemKind::MODULE,\n             SymbolKind::SelfParam => lsp_types::CompletionItemKind::VALUE,\n+            SymbolKind::SelfType => lsp_types::CompletionItemKind::TYPE_PARAMETER,\n             SymbolKind::Static => lsp_types::CompletionItemKind::VALUE,\n             SymbolKind::Struct => lsp_types::CompletionItemKind::STRUCT,\n             SymbolKind::Trait => lsp_types::CompletionItemKind::INTERFACE,\n@@ -483,6 +486,7 @@ fn semantic_token_type_and_modifiers(\n             SymbolKind::Label => semantic_tokens::LABEL,\n             SymbolKind::ValueParam => lsp_types::SemanticTokenType::PARAMETER,\n             SymbolKind::SelfParam => semantic_tokens::SELF_KEYWORD,\n+            SymbolKind::SelfType => semantic_tokens::SELF_TYPE_KEYWORD,\n             SymbolKind::Local => lsp_types::SemanticTokenType::VARIABLE,\n             SymbolKind::Function => {\n                 if highlight.mods.contains(HlMod::Associated) {"}, {"sha": "fb519be4615bdb0551b8eadfc99809a95129bfb5", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/5c0aee013e93e40ab54d1928e2e15aac81d1aaea/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=5c0aee013e93e40ab54d1928e2e15aac81d1aaea", "patch": "@@ -1294,6 +1294,11 @@\n                 \"description\": \"Style for the self keyword\",\n                 \"superType\": \"keyword\"\n             },\n+            {\n+                \"id\": \"selfTypeKeyword\",\n+                \"description\": \"Style for the self type keyword\",\n+                \"superType\": \"typeParameter\"\n+            },\n             {\n                 \"id\": \"semicolon\",\n                 \"description\": \"Style for ;\","}]}