{"sha": "37d5a6264c3ad22f878351267fbbfe47e62cd35b", "node_id": "C_kwDOAAsO6NoAKDM3ZDVhNjI2NGMzYWQyMmY4NzgzNTEyNjdmYmJmZTQ3ZTYyY2QzNWI", "commit": {"author": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-28T09:18:20Z"}, "committer": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-30T18:12:58Z"}, "message": "changes after review", "tree": {"sha": "13c45d4c214c0cf1e9ba84313446ef610b95d8e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c45d4c214c0cf1e9ba84313446ef610b95d8e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37d5a6264c3ad22f878351267fbbfe47e62cd35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37d5a6264c3ad22f878351267fbbfe47e62cd35b", "html_url": "https://github.com/rust-lang/rust/commit/37d5a6264c3ad22f878351267fbbfe47e62cd35b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37d5a6264c3ad22f878351267fbbfe47e62cd35b/comments", "author": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33383a418d6e57995a35a08b6b3d74dc010b9189", "url": "https://api.github.com/repos/rust-lang/rust/commits/33383a418d6e57995a35a08b6b3d74dc010b9189", "html_url": "https://github.com/rust-lang/rust/commit/33383a418d6e57995a35a08b6b3d74dc010b9189"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "6269719e696c3d281c2766226edb5fb99d1751d5", "filename": "clippy_lints/src/unit_like_struct_brackets.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/37d5a6264c3ad22f878351267fbbfe47e62cd35b/clippy_lints%2Fsrc%2Funit_like_struct_brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d5a6264c3ad22f878351267fbbfe47e62cd35b/clippy_lints%2Fsrc%2Funit_like_struct_brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_like_struct_brackets.rs?ref=37d5a6264c3ad22f878351267fbbfe47e62cd35b", "patch": "@@ -21,7 +21,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// struct Cookie;\n     /// ```\n-    #[clippy::version = \"1.61.0\"]\n+    #[clippy::version = \"1.62.0\"]\n     pub UNIT_LIKE_STRUCT_BRACKETS,\n     style,\n     \"finds struct declarations with empty brackets\"\n@@ -32,7 +32,9 @@ impl EarlyLintPass for UnitLikeStructBrackets {\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n         let span_after_ident = item.span.with_lo(item.ident.span.hi());\n \n-        if let ItemKind::Struct(var_data, _) = &item.kind && has_no_fields(cx, var_data, span_after_ident) {\n+        if let ItemKind::Struct(var_data, _) = &item.kind\n+            && !is_unit_like_struct(var_data)\n+            && has_no_fields(cx, var_data, span_after_ident) {\n             span_lint_and_then(\n                 cx,\n                 UNIT_LIKE_STRUCT_BRACKETS,\n@@ -50,23 +52,20 @@ impl EarlyLintPass for UnitLikeStructBrackets {\n     }\n }\n \n-fn has_fields_in_hir(var_data: &VariantData) -> bool {\n-    match var_data {\n-        VariantData::Struct(defs, _) | VariantData::Tuple(defs, _) => !defs.is_empty(),\n-        VariantData::Unit(_) => true,\n-    }\n-}\n-\n fn has_no_ident_token(braces_span_str: &str) -> bool {\n     !rustc_lexer::tokenize(braces_span_str).any(|t| t.kind == TokenKind::Ident)\n }\n \n+fn is_unit_like_struct(var_data: &VariantData) -> bool {\n+    matches!(var_data, VariantData::Unit(_))\n+}\n+\n fn has_no_fields(cx: &EarlyContext<'_>, var_data: &VariantData, braces_span: Span) -> bool {\n-    if has_fields_in_hir(var_data) {\n+    if !var_data.fields().is_empty() {\n         return false;\n     }\n \n-    // there might still be field declarations hidden from HIR\n+    // there might still be field declarations hidden from the AST\n     // (conditionaly compiled code using #[cfg(..)])\n \n     let Some(braces_span_str) = snippet_opt(cx, braces_span) else {"}, {"sha": "2769920c5fe9c4b9e21e2351b671cf3cf6640d14", "filename": "tests/ui/unit_like_struct_brackets.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37d5a6264c3ad22f878351267fbbfe47e62cd35b/tests%2Fui%2Funit_like_struct_brackets.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/37d5a6264c3ad22f878351267fbbfe47e62cd35b/tests%2Fui%2Funit_like_struct_brackets.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_like_struct_brackets.fixed?ref=37d5a6264c3ad22f878351267fbbfe47e62cd35b", "patch": "@@ -19,5 +19,7 @@ struct MyStruct {\n     field: u8,\n }\n struct MyTupleStruct(usize, String); // should not trigger lint\n+struct MySingleTupleStruct(usize); // should not trigger lint\n+struct MyUnitLikeStruct; // should not trigger lint\n \n fn main() {}"}, {"sha": "b20f8516bd117448cc761dd29f7f73f469f60e07", "filename": "tests/ui/unit_like_struct_brackets.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37d5a6264c3ad22f878351267fbbfe47e62cd35b/tests%2Fui%2Funit_like_struct_brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d5a6264c3ad22f878351267fbbfe47e62cd35b/tests%2Fui%2Funit_like_struct_brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_like_struct_brackets.rs?ref=37d5a6264c3ad22f878351267fbbfe47e62cd35b", "patch": "@@ -19,5 +19,7 @@ struct MyStruct {\n     field: u8,\n }\n struct MyTupleStruct(usize, String); // should not trigger lint\n+struct MySingleTupleStruct(usize); // should not trigger lint\n+struct MyUnitLikeStruct; // should not trigger lint\n \n fn main() {}"}]}