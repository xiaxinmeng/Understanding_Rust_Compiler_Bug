{"sha": "e0fc2af1184bed5af0a74276c261c79f685fa5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZmMyYWYxMTg0YmVkNWFmMGE3NDI3NmMyNjFjNzlmNjg1ZmE1ZDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-12T12:06:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-12T12:06:26Z"}, "message": "Merge #7651\n\n7651: Pin Rust to 1.49.0 on CI r=jonas-schievink a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "a889b01d490f653970ff54320e2edcb91c1893b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a889b01d490f653970ff54320e2edcb91c1893b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0fc2af1184bed5af0a74276c261c79f685fa5d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgJm9CCRBK7hj4Ov3rIwAAdHIIAFn1KtX/wWv9ZeiLF3WYerDS\n6NuiONV1pVH4CSmDiRZwyzcAbnVo/ZLGh0pdxMfl0gq8ptFuWweY2ItLLWpxSKId\ngoEKXJFZSUq9K9aisybuie/sXiTkhafBob9s4iaFSSlxViqbYqOfV6Mi+L2RgKRQ\n0cXYmEt1iTnECuNsElhntTOsf1ni9GyJGirMJ147BsurdeexjEj+pDC1Ie0G3XBz\nyaOX1Ot6ycpKqJrg+CGfp+i3dSa+qv0i5EKI2u8S9gNB8cDUYK1CroR42BM554RT\nePPZpggSs7iFt6k16pi3Y98YKGDZNrO1POMI/VE+l4GEq+Dr3OJQxjmUN9rs3bc=\n=2ePh\n-----END PGP SIGNATURE-----\n", "payload": "tree a889b01d490f653970ff54320e2edcb91c1893b1\nparent b0f20a795d6b1f8d36d1cbe294e54ac592b98f5e\nparent 70f388cedba89c204131ebc81a202563a8e19437\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613131586 +0000\ncommitter GitHub <noreply@github.com> 1613131586 +0000\n\nMerge #7651\n\n7651: Pin Rust to 1.49.0 on CI r=jonas-schievink a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0fc2af1184bed5af0a74276c261c79f685fa5d7", "html_url": "https://github.com/rust-lang/rust/commit/e0fc2af1184bed5af0a74276c261c79f685fa5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0fc2af1184bed5af0a74276c261c79f685fa5d7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0f20a795d6b1f8d36d1cbe294e54ac592b98f5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f20a795d6b1f8d36d1cbe294e54ac592b98f5e", "html_url": "https://github.com/rust-lang/rust/commit/b0f20a795d6b1f8d36d1cbe294e54ac592b98f5e"}, {"sha": "70f388cedba89c204131ebc81a202563a8e19437", "url": "https://api.github.com/repos/rust-lang/rust/commits/70f388cedba89c204131ebc81a202563a8e19437", "html_url": "https://github.com/rust-lang/rust/commit/70f388cedba89c204131ebc81a202563a8e19437"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "ec9ef59a88056fd9c64920619ad15f1178f18fba", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0fc2af1184bed5af0a74276c261c79f685fa5d7/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/e0fc2af1184bed5af0a74276c261c79f685fa5d7/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=e0fc2af1184bed5af0a74276c261c79f685fa5d7", "patch": "@@ -53,11 +53,19 @@ jobs:\n     - name: Install Rust toolchain\n       uses: actions-rs/toolchain@v1\n       with:\n-        toolchain: stable\n+        toolchain: 1.49.0   # FIXME: CI is failing on 1.50\n         profile: minimal\n         override: true\n         components: rustfmt, rust-src\n \n+    - name: Install rustfmt\n+      uses: actions-rs/toolchain@v1\n+      with:\n+        toolchain: stable\n+        profile: minimal\n+        override: false\n+        components: rustfmt\n+\n     - name: Cache cargo directories\n       uses: actions/cache@v2\n       with:"}, {"sha": "ebb1ce7dda3f918f98550ba76c920807f3af89a4", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=e0fc2af1184bed5af0a74276c261c79f685fa5d7", "patch": "@@ -415,9 +415,9 @@ fn rename_reference(\n ) -> RenameResult<SourceChange> {\n     let ident_kind = check_identifier(new_name)?;\n \n-    let def_is_lbl_or_lt = matches!(def,\n-        Definition::GenericParam(hir::GenericParam::LifetimeParam(_))\n-        | Definition::Label(_)\n+    let def_is_lbl_or_lt = matches!(\n+        def,\n+        Definition::GenericParam(hir::GenericParam::LifetimeParam(_)) | Definition::Label(_)\n     );\n     match (ident_kind, def) {\n         (IdentifierKind::ToSelf, _)"}, {"sha": "e313f6fb7f1350a4065fd1fad5f0d3895958506e", "filename": "crates/parser/src/grammar/params.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs?ref=e0fc2af1184bed5af0a74276c261c79f685fa5d7", "patch": "@@ -169,11 +169,12 @@ fn opt_self_param(p: &mut Parser, m: Marker) {\n         let la1 = p.nth(1);\n         let la2 = p.nth(2);\n         let la3 = p.nth(3);\n-        if !matches!((p.current(), la1, la2, la3),\n-              (T![&], T![self], _, _)\n-            | (T![&], T![mut], T![self], _)\n-            | (T![&], LIFETIME_IDENT, T![self], _)\n-            | (T![&], LIFETIME_IDENT, T![mut], T![self])\n+        if !matches!(\n+            (p.current(), la1, la2, la3),\n+            (T![&], T![self], _, _)\n+                | (T![&], T![mut], T![self], _)\n+                | (T![&], LIFETIME_IDENT, T![self], _)\n+                | (T![&], LIFETIME_IDENT, T![mut], T![self])\n         ) {\n             return m.abandon(p);\n         }"}, {"sha": "bdffff5aebf0b6dad6158c11835f3edc1564a11c", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=e0fc2af1184bed5af0a74276c261c79f685fa5d7", "patch": "@@ -398,7 +398,7 @@ impl GlobalState {\n         }\n \n         let state_changed = self.process_changes();\n-        let is_ready = matches!(self.status, Status::Ready { .. } );\n+        let is_ready = matches!(self.status, Status::Ready { .. });\n         if prev_status == Status::Loading && is_ready {\n             for flycheck in &self.flycheck {\n                 flycheck.update();"}, {"sha": "be10ac1aeea4c94bf45c150eed22e13d46b3eff0", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0fc2af1184bed5af0a74276c261c79f685fa5d7/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=e0fc2af1184bed5af0a74276c261c79f685fa5d7", "patch": "@@ -528,7 +528,8 @@ pub(crate) fn url_from_abs_path(path: &Path) -> lsp_types::Url {\n     assert!(path.is_absolute());\n     let url = lsp_types::Url::from_file_path(path).unwrap();\n     match path.components().next() {\n-        Some(path::Component::Prefix(prefix)) if matches!(prefix.kind(), path::Prefix::Disk(_) | path::Prefix::VerbatimDisk(_)) =>\n+        Some(path::Component::Prefix(prefix))\n+            if matches!(prefix.kind(), path::Prefix::Disk(_) | path::Prefix::VerbatimDisk(_)) =>\n         {\n             // Need to lowercase driver letter\n         }"}]}