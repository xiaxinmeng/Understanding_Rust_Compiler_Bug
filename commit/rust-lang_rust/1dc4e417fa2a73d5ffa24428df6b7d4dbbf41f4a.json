{"sha": "1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzRlNDE3ZmEyYTczZDVmZmEyNDQyOGRmNmI3ZDRkYmJmNDFmNGE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-18T10:40:53Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-18T10:40:53Z"}, "message": "Manually inline a function that was only used once", "tree": {"sha": "a78cb0aea86cb087d3e1d7c17dc057f05c0f17e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a78cb0aea86cb087d3e1d7c17dc057f05c0f17e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "html_url": "https://github.com/rust-lang/rust/commit/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daa53a52a2667533d5fe59bfcc5b8614b79c3d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/daa53a52a2667533d5fe59bfcc5b8614b79c3d31", "html_url": "https://github.com/rust-lang/rust/commit/daa53a52a2667533d5fe59bfcc5b8614b79c3d31"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "2fdcb2681db0b451544ce8dd802c5edabe416a56", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "patch": "@@ -2946,16 +2946,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         }\n     }\n \n-    /// Given the DefId of an item, returns its MIR, borrowed immutably.\n-    /// Returns None if there is no MIR for the DefId\n-    pub fn maybe_optimized_mir(self, did: DefId) -> Option<&'gcx Mir<'gcx>> {\n-        if self.is_mir_available(did) {\n-            Some(self.optimized_mir(did))\n-        } else {\n-            None\n-        }\n-    }\n-\n     /// Get the attributes of a definition.\n     pub fn get_attrs(self, did: DefId) -> Attributes<'gcx> {\n         if let Some(id) = self.hir().as_local_node_id(did) {"}, {"sha": "90f7ba761ea1daac494eeb834b310ed39171c7ab", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=1dc4e417fa2a73d5ffa24428df6b7d4dbbf41f4a", "patch": "@@ -265,11 +265,11 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         }\n         trace!(\"load mir {:?}\", instance);\n         match instance {\n-            ty::InstanceDef::Item(def_id) => {\n-                self.tcx.maybe_optimized_mir(def_id).ok_or_else(||\n-                    EvalErrorKind::NoMirFor(self.tcx.item_path_str(def_id)).into()\n-                )\n-            }\n+            ty::InstanceDef::Item(def_id) => if self.tcx.is_mir_available(did) {\n+                Ok(self.tcx.optimized_mir(did))\n+            } else {\n+                err!(NoMirFor(self.tcx.item_path_str(def_id)))\n+            },\n             _ => Ok(self.tcx.instance_mir(instance)),\n         }\n     }"}]}