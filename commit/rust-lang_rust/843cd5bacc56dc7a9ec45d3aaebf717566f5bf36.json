{"sha": "843cd5bacc56dc7a9ec45d3aaebf717566f5bf36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0M2NkNWJhY2M1NmRjN2E5ZWM0NWQzYWFlYmY3MTc1NjZmNWJmMzY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-25T06:17:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-25T06:17:37Z"}, "message": "Fix error", "tree": {"sha": "a00c1a3f79669b1cf8aeb66e748c68a249959d7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a00c1a3f79669b1cf8aeb66e748c68a249959d7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36", "html_url": "https://github.com/rust-lang/rust/commit/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "html_url": "https://github.com/rust-lang/rust/commit/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "f51a463fcc23e86c30bb57335f4d5d9b78b58585", "filename": "src/librustc_trans_utils/trans_crate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/843cd5bacc56dc7a9ec45d3aaebf717566f5bf36/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Ftrans_crate.rs?ref=843cd5bacc56dc7a9ec45d3aaebf717566f5bf36", "patch": "@@ -198,8 +198,7 @@ impl TransCrate for MetadataOnlyTransCrate {\n         tcx.sess.abort_if_errors();\n \n         let crate_hash = tcx.dep_graph\n-                        .fingerprint_of(&DepNode::new_no_params(DepKind::Krate))\n-                        .unwrap();\n+                        .fingerprint_of(&DepNode::new_no_params(DepKind::Krate));\n         let link_meta = build_link_meta(crate_hash);\n         let exported_symbols = ::find_exported_symbols(tcx);\n         let (metadata, _hashes) = tcx.encode_metadata(&link_meta, &exported_symbols);"}]}