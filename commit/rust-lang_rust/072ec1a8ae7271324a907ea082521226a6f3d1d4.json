{"sha": "072ec1a8ae7271324a907ea082521226a6f3d1d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MmVjMWE4YWU3MjcxMzI0YTkwN2VhMDgyNTIxMjI2YTZmM2QxZDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:20:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:24:28Z"}, "message": "Fix tests", "tree": {"sha": "7f5de3065ecf92c93eed0b03effa563ff3aa0b44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f5de3065ecf92c93eed0b03effa563ff3aa0b44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072ec1a8ae7271324a907ea082521226a6f3d1d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072ec1a8ae7271324a907ea082521226a6f3d1d4", "html_url": "https://github.com/rust-lang/rust/commit/072ec1a8ae7271324a907ea082521226a6f3d1d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072ec1a8ae7271324a907ea082521226a6f3d1d4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "994000b5ddfd5bb3b7dc7d66aabe02a0f337770f", "url": "https://api.github.com/repos/rust-lang/rust/commits/994000b5ddfd5bb3b7dc7d66aabe02a0f337770f", "html_url": "https://github.com/rust-lang/rust/commit/994000b5ddfd5bb3b7dc7d66aabe02a0f337770f"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "8eba13e99c264ce2865c012f649fe7b2195f77ca", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=072ec1a8ae7271324a907ea082521226a6f3d1d4", "patch": "@@ -287,7 +287,7 @@ mod tests {\n \n     #[test]\n     fn search_filters_by_range() {\n-        covers!(search_filters_by_range);\n+        covers!(ra_ide_db::search_filters_by_range);\n         let code = r#\"\n             fn foo() {\n                 let spam<|> = 92;\n@@ -603,7 +603,10 @@ mod tests {\n     fn check_result(res: ReferenceSearchResult, expected_decl: &str, expected_refs: &[&str]) {\n         res.declaration().assert_match(expected_decl);\n         assert_eq!(res.references.len(), expected_refs.len());\n-        res.references().iter().enumerate().for_each(|(i, r)| r.assert_match(expected_refs[i]));\n+        res.references()\n+            .iter()\n+            .enumerate()\n+            .for_each(|(i, r)| ref_assert_match(r, expected_refs[i]));\n     }\n \n     impl Declaration {\n@@ -621,21 +624,16 @@ mod tests {\n         }\n     }\n \n-    impl Reference {\n-        fn debug_render(&self) -> String {\n-            let mut s = format!(\n-                \"{:?} {:?} {:?}\",\n-                self.file_range.file_id, self.file_range.range, self.kind\n-            );\n-            if let Some(access) = self.access {\n-                s.push_str(&format!(\" {:?}\", access));\n-            }\n-            s\n+    fn ref_debug_render(r: &Reference) -> String {\n+        let mut s = format!(\"{:?} {:?} {:?}\", r.file_range.file_id, r.file_range.range, r.kind);\n+        if let Some(access) = r.access {\n+            s.push_str(&format!(\" {:?}\", access));\n         }\n+        s\n+    }\n \n-        fn assert_match(&self, expected: &str) {\n-            let actual = self.debug_render();\n-            test_utils::assert_eq_text!(expected.trim(), actual.trim(),);\n-        }\n+    fn ref_assert_match(r: &Reference, expected: &str) {\n+        let actual = ref_debug_render(r);\n+        test_utils::assert_eq_text!(expected.trim(), actual.trim(),);\n     }\n }"}, {"sha": "4f0a22af031656bceb1da5090b1175ab00b0845c", "filename": "crates/ra_ide_db/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide_db%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide_db%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fmarks.rs?ref=072ec1a8ae7271324a907ea082521226a6f3d1d4", "patch": "@@ -6,4 +6,5 @@ test_utils::marks![\n     goto_def_for_fields\n     goto_def_for_record_fields\n     goto_def_for_field_init_shorthand\n+    search_filters_by_range\n ];"}, {"sha": "0963ea25783391050f0122fef16beb3221edbcec", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072ec1a8ae7271324a907ea082521226a6f3d1d4/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=072ec1a8ae7271324a907ea082521226a6f3d1d4", "patch": "@@ -12,6 +12,7 @@ use ra_syntax::{\n     algo::find_node_at_offset, ast, match_ast, AstNode, TextRange, TextUnit, TokenAtOffset,\n };\n use rustc_hash::FxHashMap;\n+use test_utils::tested_by;\n \n use crate::{\n     defs::{classify_name_ref, Definition},\n@@ -206,7 +207,7 @@ impl Definition {\n             for (idx, _) in text.match_indices(pat) {\n                 let offset = TextUnit::from_usize(idx);\n                 if !search_range.contains_inclusive(offset) {\n-                    // tested_by!(search_filters_by_range);\n+                    tested_by!(search_filters_by_range; force);\n                     continue;\n                 }\n "}]}