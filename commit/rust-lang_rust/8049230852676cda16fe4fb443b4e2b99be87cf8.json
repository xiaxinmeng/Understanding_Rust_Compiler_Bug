{"sha": "8049230852676cda16fe4fb443b4e2b99be87cf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNDkyMzA4NTI2NzZjZGExNmZlNGZiNDQzYjRlMmI5OWJlODdjZjg=", "commit": {"author": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-19T07:59:05Z"}, "committer": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-19T07:59:05Z"}, "message": "Saturate negative division", "tree": {"sha": "f7dea3ed930a85bfb28626703e059840c5166730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7dea3ed930a85bfb28626703e059840c5166730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8049230852676cda16fe4fb443b4e2b99be87cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8049230852676cda16fe4fb443b4e2b99be87cf8", "html_url": "https://github.com/rust-lang/rust/commit/8049230852676cda16fe4fb443b4e2b99be87cf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8049230852676cda16fe4fb443b4e2b99be87cf8/comments", "author": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f136eea97c8a1aff9814c4ec2779884bd870feed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f136eea97c8a1aff9814c4ec2779884bd870feed", "html_url": "https://github.com/rust-lang/rust/commit/f136eea97c8a1aff9814c4ec2779884bd870feed"}], "stats": {"total": 59, "additions": 46, "deletions": 13}, "files": [{"sha": "b06ed36689cdaeaf19239e19722209f0b03ae9d2", "filename": "library/core/src/num/saturating.rs", "status": "modified", "additions": 46, "deletions": 13, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8049230852676cda16fe4fb443b4e2b99be87cf8/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8049230852676cda16fe4fb443b4e2b99be87cf8/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs?ref=8049230852676cda16fe4fb443b4e2b99be87cf8", "patch": "@@ -266,19 +266,6 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl MulAssign, mul_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n-        impl Div for Saturating<$t> {\n-            type Output = Saturating<$t>;\n-\n-            #[inline]\n-            fn div(self, other: Saturating<$t>) -> Saturating<$t> {\n-                // saturating div is the default behavior?\n-                Saturating(self.0.div(other.0))\n-            }\n-        }\n-        forward_ref_binop! { impl Div, div for Saturating<$t>, Saturating<$t>,\n-                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n-\n         #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl DivAssign for Saturating<$t> {\n             #[inline]\n@@ -864,6 +851,40 @@ macro_rules! saturating_int_impl_signed {\n         }\n         forward_ref_unop! { impl Neg, neg for Saturating<$t>,\n                 #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n+\n+        /// # Examples\n+        ///\n+        /// Basic usage:\n+        ///\n+        /// ```\n+        /// #![feature(saturating_int_impl)]\n+        /// use std::num::Saturating;\n+        ///\n+        #[doc = concat!(\"assert_eq!(Saturating(\", stringify!($t), \"::MIN + 1), Saturating(\", stringify!($t), \"::MAX) / Saturating(-1));\")]\n+        #[doc = concat!(\"assert_eq!(Saturating(\", stringify!($t), \"::MAX), Saturating(\", stringify!($t), \"::MIN) / Saturating(-1));\")]\n+        #[doc = concat!(\"assert_eq!(Saturating(\", stringify!($t), \"::MAX), Saturating(\", stringify!($t), \"::MAX) / Saturating(1));\")]\n+        #[doc = concat!(\"assert_eq!(Saturating(\", stringify!($t), \"::MIN), Saturating(\", stringify!($t), \"::MIN) / Saturating(1));\")]\n+        /// ```\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n+        impl Div for Saturating<$t> {\n+            type Output = Saturating<$t>;\n+\n+            #[inline]\n+            fn div(self, other: Saturating<$t>) -> Saturating<$t> {\n+                let expected_signum = self.0.signum() * other.0.signum();\n+                let (result, overflowed) = self.0.overflowing_div(other.0);\n+\n+                if !overflowed {\n+                    Saturating(result)\n+                } else if expected_signum < 0 {\n+                    Saturating(<$t>::MIN)\n+                } else {\n+                    Saturating(<$t>::MAX)\n+                }\n+            }\n+        }\n+        forward_ref_binop! { impl Div, div for Saturating<$t>, Saturating<$t>,\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n     )*)\n }\n \n@@ -912,6 +933,18 @@ macro_rules! saturating_int_impl_unsigned {\n             }\n \n         }\n+\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n+        impl Div for Saturating<$t> {\n+            type Output = Saturating<$t>;\n+\n+            #[inline]\n+            fn div(self, other: Saturating<$t>) -> Saturating<$t> {\n+                Saturating(self.0.div(other.0))\n+            }\n+        }\n+        forward_ref_binop! { impl Div, div for Saturating<$t>, Saturating<$t>,\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n     )*)\n }\n "}]}