{"sha": "c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YzliNGU5ZWRhMzdiY2M4MzdmZWRlNDUyOGE1NGRkMjBkYzM5ODk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-13T16:41:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-13T16:41:25Z"}, "message": "Merge #8823\n\n8823: Enable OPTION::ENABLE_TASKLISTS in pulldown_cmark r=Veykril a=Veykril\n\nCloses #8821\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "19315db3733c3659e471891a9640496bcccda6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19315db3733c3659e471891a9640496bcccda6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgnVa1CRBK7hj4Ov3rIwAAwWMIAAlqXCVpmZn5JMg/ir1IHahy\nvZB5OD541t5ZnhQChnoxpRXrlCc3kkunvZnVaqfUNMAYIpPF1kpFwhQM98Rl609z\np+hukgfWjXsC0guwZVKGger66coz+nR9Lv4RPs91zN2pmBTTiJUe+sbXOBkixWaK\nJyhCXMKqzNH4u3c7cx6riByP8vMh+b0SMOCc1Bnq9TNCtXpB/ERsO1PCiPD7UOWp\nAa6q6Obqlxn/4RUlmHMR2ImAtoYWluTEyBOQPcZbYh81pDt6jYoGXO/7nlxy7YTx\nV7GLUN3yiWEkvLzrTu9aWXVdt6thBoZUGyHQ6s+vb8YKckrO8GLG9ltXYuNCJxM=\n=1Mg4\n-----END PGP SIGNATURE-----\n", "payload": "tree 19315db3733c3659e471891a9640496bcccda6e7\nparent 38a53c29ea527d938c8d3922260d6b6e0a34183b\nparent 07fe9a890d2e201e64a8f35fa3ca741dbacf274d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620924085 +0000\ncommitter GitHub <noreply@github.com> 1620924085 +0000\n\nMerge #8823\n\n8823: Enable OPTION::ENABLE_TASKLISTS in pulldown_cmark r=Veykril a=Veykril\n\nCloses #8821\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "html_url": "https://github.com/rust-lang/rust/commit/c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c9b4e9eda37bcc837fede4528a54dd20dc3989/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a53c29ea527d938c8d3922260d6b6e0a34183b", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a53c29ea527d938c8d3922260d6b6e0a34183b", "html_url": "https://github.com/rust-lang/rust/commit/38a53c29ea527d938c8d3922260d6b6e0a34183b"}, {"sha": "07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "url": "https://api.github.com/repos/rust-lang/rust/commits/07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "html_url": "https://github.com/rust-lang/rust/commit/07fe9a890d2e201e64a8f35fa3ca741dbacf274d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "320694a17ad308814f3bada19c4f229b1e106755", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c9c9b4e9eda37bcc837fede4528a54dd20dc3989/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c9b4e9eda37bcc837fede4528a54dd20dc3989/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "patch": "@@ -29,7 +29,8 @@ pub(crate) type DocumentationLink = String;\n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)\n pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Definition) -> String {\n     let mut cb = broken_link_clone_cb;\n-    let doc = Parser::new_with_broken_link_callback(markdown, Options::empty(), Some(&mut cb));\n+    let doc =\n+        Parser::new_with_broken_link_callback(markdown, Options::ENABLE_TASKLISTS, Some(&mut cb));\n \n     let doc = map_links(doc, |target, title: &str| {\n         // This check is imperfect, there's some overlap between valid intra-doc links\n@@ -64,8 +65,7 @@ pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Defi\n pub(crate) fn remove_links(markdown: &str) -> String {\n     let mut drop_link = false;\n \n-    let mut opts = Options::empty();\n-    opts.insert(Options::ENABLE_FOOTNOTES);\n+    let opts = Options::ENABLE_TASKLISTS | Options::ENABLE_FOOTNOTES;\n \n     let mut cb = |_: BrokenLink| {\n         let empty = InlineStr::try_from(\"\").unwrap();\n@@ -123,7 +123,7 @@ pub(crate) fn extract_definitions_from_markdown(\n ) -> Vec<(TextRange, String, Option<hir::Namespace>)> {\n     Parser::new_with_broken_link_callback(\n         markdown,\n-        Options::empty(),\n+        Options::ENABLE_TASKLISTS,\n         Some(&mut broken_link_clone_cb),\n     )\n     .into_offset_iter()"}]}