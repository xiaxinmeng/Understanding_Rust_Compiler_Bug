{"sha": "3fe1c7071d9585f53748d8d0ccb5a06c7b850287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZTFjNzA3MWQ5NTg1ZjUzNzQ4ZDhkMGNjYjVhMDZjN2I4NTAyODc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-05T23:33:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-05T23:33:28Z"}, "message": "std: Some fixes to url parsing", "tree": {"sha": "853e11fab60e713b51187c504a998fb2cf1a3b3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/853e11fab60e713b51187c504a998fb2cf1a3b3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fe1c7071d9585f53748d8d0ccb5a06c7b850287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe1c7071d9585f53748d8d0ccb5a06c7b850287", "html_url": "https://github.com/rust-lang/rust/commit/3fe1c7071d9585f53748d8d0ccb5a06c7b850287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fe1c7071d9585f53748d8d0ccb5a06c7b850287/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbf58716dfe1dd502ea37d5a613847406a9736c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf58716dfe1dd502ea37d5a613847406a9736c9", "html_url": "https://github.com/rust-lang/rust/commit/dbf58716dfe1dd502ea37d5a613847406a9736c9"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "dd97c1fdeb26489da63b01b21eed8e37105ac5b6", "filename": "src/libstd/net_url.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1c7071d9585f53748d8d0ccb5a06c7b850287/src%2Flibstd%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1c7071d9585f53748d8d0ccb5a06c7b850287/src%2Flibstd%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_url.rs?ref=3fe1c7071d9585f53748d8d0ccb5a06c7b850287", "patch": "@@ -489,10 +489,17 @@ fn get_authority(rawurl: ~str) ->\n         end = i;\n     }\n \n+    let end = end; // make end immutable so it can be captured\n+\n+    let host_is_end_plus_one = || {\n+        end+1 == len\n+            && !['?', '#', '/'].contains(rawurl[end] as char)\n+    };\n+\n     // finish up\n     match st {\n       start {\n-        if end+1 == len {\n+        if host_is_end_plus_one() {\n             host = str::slice(rawurl, begin, end+1);\n         } else {\n             host = str::slice(rawurl, begin, end);\n@@ -516,7 +523,7 @@ fn get_authority(rawurl: ~str) ->\n       }\n     }\n \n-    let rest = if end+1 == len { ~\"\" }\n+    let rest = if host_is_end_plus_one() { ~\"\" }\n     else { str::slice(rawurl, end, len) };\n     return result::ok((userinfo, host, port, rest));\n }\n@@ -779,6 +786,15 @@ mod tests {\n         assert option::unwrap(copy u.fragment) == ~\"something\";\n     }\n \n+    #[test]\n+    fn test_url_parse_host_slash() {\n+        let urlstr = ~\"http://0.42.42.42/\";\n+        let url = from_str(urlstr).get();\n+        #debug(\"url: %?\", url);\n+        assert url.host == ~\"0.42.42.42\";\n+        assert url.path == ~\"/\";\n+    }\n+\n     #[test]\n     fn test_no_scheme() {\n         assert result::is_err(get_scheme(~\"noschemehere.html\"));"}]}