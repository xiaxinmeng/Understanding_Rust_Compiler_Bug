{"sha": "9215ead1ee94bef156c109693c9aa5bb4981d098", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTVlYWQxZWU5NGJlZjE1NmMxMDk2OTNjOWFhNWJiNDk4MWQwOTg=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-05-08T20:00:33Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-05-18T13:41:34Z"}, "message": "Fix handling on InlineAsm for the unconditional recursion lint.", "tree": {"sha": "67de210c6f861d1a5b2876fa85331ec83cebb24e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67de210c6f861d1a5b2876fa85331ec83cebb24e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9215ead1ee94bef156c109693c9aa5bb4981d098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9215ead1ee94bef156c109693c9aa5bb4981d098", "html_url": "https://github.com/rust-lang/rust/commit/9215ead1ee94bef156c109693c9aa5bb4981d098", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9215ead1ee94bef156c109693c9aa5bb4981d098/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46db0dfe8c5f26c687b5ce269b55ad1aa6d3dc95", "url": "https://api.github.com/repos/rust-lang/rust/commits/46db0dfe8c5f26c687b5ce269b55ad1aa6d3dc95", "html_url": "https://github.com/rust-lang/rust/commit/46db0dfe8c5f26c687b5ce269b55ad1aa6d3dc95"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "dbafc98fb50f1633809557d5721d1b67680779eb", "filename": "src/librustc_mir_build/lints.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9215ead1ee94bef156c109693c9aa5bb4981d098/src%2Flibrustc_mir_build%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9215ead1ee94bef156c109693c9aa5bb4981d098/src%2Flibrustc_mir_build%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Flints.rs?ref=9215ead1ee94bef156c109693c9aa5bb4981d098", "patch": "@@ -114,9 +114,14 @@ impl<'mir, 'tcx> TriColorVisitor<&'mir Body<'tcx>> for Search<'mir, 'tcx> {\n             | TerminatorKind::Unreachable\n             | TerminatorKind::Yield { .. } => ControlFlow::Break(NonRecursive),\n \n-            // FIXME(Amanieu): I am not 100% sure about this, but it triggers\n-            // a spurious warning otherwise.\n-            TerminatorKind::InlineAsm { .. } => ControlFlow::Break(NonRecursive),\n+            // A diverging InlineAsm is treated as non-recursing\n+            TerminatorKind::InlineAsm { destination, .. } => {\n+                if destination.is_some() {\n+                    ControlFlow::Continue\n+                } else {\n+                    ControlFlow::Break(NonRecursive)\n+                }\n+            }\n \n             // These do not.\n             TerminatorKind::Assert { .. }"}]}