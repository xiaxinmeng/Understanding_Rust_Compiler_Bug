{"sha": "4899e7be76c5c8309222c8afe1c0f74dc59a4345", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4OTllN2JlNzZjNWM4MzA5MjIyYzhhZmUxYzBmNzRkYzU5YTQzNDU=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-24T21:19:16Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-24T21:19:16Z"}, "message": "Support universal function call syntax in function calls", "tree": {"sha": "986351c9e622ca516057e592cdc202fc724d6453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/986351c9e622ca516057e592cdc202fc724d6453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4899e7be76c5c8309222c8afe1c0f74dc59a4345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4899e7be76c5c8309222c8afe1c0f74dc59a4345", "html_url": "https://github.com/rust-lang/rust/commit/4899e7be76c5c8309222c8afe1c0f74dc59a4345", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4899e7be76c5c8309222c8afe1c0f74dc59a4345/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb9bfe44dfe1fb0685ead5e000ed281c55c8968", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb9bfe44dfe1fb0685ead5e000ed281c55c8968", "html_url": "https://github.com/rust-lang/rust/commit/abb9bfe44dfe1fb0685ead5e000ed281c55c8968"}], "stats": {"total": 232, "additions": 226, "deletions": 6}, "files": [{"sha": "7ee32fa7c2d7ce53497fa6f39bdc49d45eab00f9", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -305,6 +305,8 @@ fn postfix_expr(\n // fn foo() {\n //     let _ = f();\n //     let _ = f()(1)(1, 2,);\n+//     let _ = f(<Foo>::func());\n+//     f(<Foo as Trait>::func());\n // }\n fn call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     assert!(p.at(L_PAREN));"}, {"sha": "5feca090c7c20c406482bdcee6e9a6b956da715e", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -40,6 +40,7 @@ pub(super) const ATOM_EXPR_FIRST: TokenSet = LITERAL_FIRST.union(token_set![\n     L_PAREN,\n     L_CURLY,\n     L_BRACK,\n+    L_ANGLE, // Universal function call syntax\n     PIPE,\n     MOVE_KW,\n     IF_KW,"}, {"sha": "ffbf46d6d1f39d2640229b49e847cfe750ad7d44", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0042_call_expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.rs?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -1,4 +1,6 @@\n fn foo() {\n     let _ = f();\n     let _ = f()(1)(1, 2,);\n+    let _ = f(<Foo>::func());\n+    f(<Foo as Trait>::func());\n }"}, {"sha": "0ddf393f239d8a5ffa2141cbc823bf107d5a6172", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0042_call_expr.txt", "status": "modified", "additions": 83, "deletions": 6, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0042_call_expr.txt?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 57)\n-  FN_DEF@[0; 56)\n+SOURCE_FILE@[0; 118)\n+  FN_DEF@[0; 117)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 57)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 56)\n+    BLOCK@[9; 117)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n       LET_STMT@[15; 27)\n@@ -65,6 +65,83 @@ SOURCE_FILE@[0; 57)\n             COMMA@[51; 52)\n             R_PAREN@[52; 53)\n         SEMI@[53; 54)\n-      WHITESPACE@[54; 55)\n-      R_CURLY@[55; 56)\n-  WHITESPACE@[56; 57)\n+      WHITESPACE@[54; 59)\n+      LET_STMT@[59; 84)\n+        LET_KW@[59; 62)\n+        WHITESPACE@[62; 63)\n+        PLACEHOLDER_PAT@[63; 64)\n+          UNDERSCORE@[63; 64)\n+        WHITESPACE@[64; 65)\n+        EQ@[65; 66)\n+        WHITESPACE@[66; 67)\n+        CALL_EXPR@[67; 83)\n+          PATH_EXPR@[67; 68)\n+            PATH@[67; 68)\n+              PATH_SEGMENT@[67; 68)\n+                NAME_REF@[67; 68)\n+                  IDENT@[67; 68) \"f\"\n+          ARG_LIST@[68; 83)\n+            L_PAREN@[68; 69)\n+            CALL_EXPR@[69; 82)\n+              PATH_EXPR@[69; 80)\n+                PATH@[69; 80)\n+                  PATH@[69; 74)\n+                    PATH_SEGMENT@[69; 74)\n+                      L_ANGLE@[69; 70)\n+                      PATH_TYPE@[70; 73)\n+                        PATH@[70; 73)\n+                          PATH_SEGMENT@[70; 73)\n+                            NAME_REF@[70; 73)\n+                              IDENT@[70; 73) \"Foo\"\n+                      R_ANGLE@[73; 74)\n+                  COLONCOLON@[74; 76)\n+                  PATH_SEGMENT@[76; 80)\n+                    NAME_REF@[76; 80)\n+                      IDENT@[76; 80) \"func\"\n+              ARG_LIST@[80; 82)\n+                L_PAREN@[80; 81)\n+                R_PAREN@[81; 82)\n+            R_PAREN@[82; 83)\n+        SEMI@[83; 84)\n+      WHITESPACE@[84; 89)\n+      EXPR_STMT@[89; 115)\n+        CALL_EXPR@[89; 114)\n+          PATH_EXPR@[89; 90)\n+            PATH@[89; 90)\n+              PATH_SEGMENT@[89; 90)\n+                NAME_REF@[89; 90)\n+                  IDENT@[89; 90) \"f\"\n+          ARG_LIST@[90; 114)\n+            L_PAREN@[90; 91)\n+            CALL_EXPR@[91; 113)\n+              PATH_EXPR@[91; 111)\n+                PATH@[91; 111)\n+                  PATH@[91; 105)\n+                    PATH_SEGMENT@[91; 105)\n+                      L_ANGLE@[91; 92)\n+                      PATH_TYPE@[92; 95)\n+                        PATH@[92; 95)\n+                          PATH_SEGMENT@[92; 95)\n+                            NAME_REF@[92; 95)\n+                              IDENT@[92; 95) \"Foo\"\n+                      WHITESPACE@[95; 96)\n+                      AS_KW@[96; 98)\n+                      WHITESPACE@[98; 99)\n+                      PATH_TYPE@[99; 104)\n+                        PATH@[99; 104)\n+                          PATH_SEGMENT@[99; 104)\n+                            NAME_REF@[99; 104)\n+                              IDENT@[99; 104) \"Trait\"\n+                      R_ANGLE@[104; 105)\n+                  COLONCOLON@[105; 107)\n+                  PATH_SEGMENT@[107; 111)\n+                    NAME_REF@[107; 111)\n+                      IDENT@[107; 111) \"func\"\n+              ARG_LIST@[111; 113)\n+                L_PAREN@[111; 112)\n+                R_PAREN@[112; 113)\n+            R_PAREN@[113; 114)\n+        SEMI@[114; 115)\n+      WHITESPACE@[115; 116)\n+      R_CURLY@[116; 117)\n+  WHITESPACE@[117; 118)"}, {"sha": "6c02e65ed7dbf59f5cd92b9ccce1ea89c462728f", "filename": "crates/ra_syntax/tests/data/parser/ok/0042_ufcs_call_list.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.rs?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -0,0 +1,15 @@\n+// https://github.com/rust-analyzer/rust-analyzer/issues/596\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn bar() -> bool {\n+        unimplemented!()\n+    }\n+}\n+\n+fn baz(_: bool) {}\n+\n+fn main() {\n+    baz(<Foo>::bar())\n+}"}, {"sha": "d1d890e5010287fd56175ba4cbd5606d3d9e28cd", "filename": "crates/ra_syntax/tests/data/parser/ok/0042_ufcs_call_list.txt", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4899e7be76c5c8309222c8afe1c0f74dc59a4345/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0042_ufcs_call_list.txt?ref=4899e7be76c5c8309222c8afe1c0f74dc59a4345", "patch": "@@ -0,0 +1,123 @@\n+SOURCE_FILE@[0; 199)\n+  COMMENT@[0; 60)\n+  WHITESPACE@[60; 62)\n+  STRUCT_DEF@[62; 73)\n+    STRUCT_KW@[62; 68)\n+    WHITESPACE@[68; 69)\n+    NAME@[69; 72)\n+      IDENT@[69; 72) \"Foo\"\n+    SEMI@[72; 73)\n+  WHITESPACE@[73; 75)\n+  IMPL_BLOCK@[75; 141)\n+    IMPL_KW@[75; 79)\n+    WHITESPACE@[79; 80)\n+    PATH_TYPE@[80; 83)\n+      PATH@[80; 83)\n+        PATH_SEGMENT@[80; 83)\n+          NAME_REF@[80; 83)\n+            IDENT@[80; 83) \"Foo\"\n+    WHITESPACE@[83; 84)\n+    ITEM_LIST@[84; 141)\n+      L_CURLY@[84; 85)\n+      WHITESPACE@[85; 90)\n+      FN_DEF@[90; 139)\n+        FN_KW@[90; 92)\n+        WHITESPACE@[92; 93)\n+        NAME@[93; 96)\n+          IDENT@[93; 96) \"bar\"\n+        PARAM_LIST@[96; 98)\n+          L_PAREN@[96; 97)\n+          R_PAREN@[97; 98)\n+        WHITESPACE@[98; 99)\n+        RET_TYPE@[99; 106)\n+          THIN_ARROW@[99; 101)\n+          WHITESPACE@[101; 102)\n+          PATH_TYPE@[102; 106)\n+            PATH@[102; 106)\n+              PATH_SEGMENT@[102; 106)\n+                NAME_REF@[102; 106)\n+                  IDENT@[102; 106) \"bool\"\n+        WHITESPACE@[106; 107)\n+        BLOCK@[107; 139)\n+          L_CURLY@[107; 108)\n+          WHITESPACE@[108; 117)\n+          MACRO_CALL@[117; 133)\n+            PATH@[117; 130)\n+              PATH_SEGMENT@[117; 130)\n+                NAME_REF@[117; 130)\n+                  IDENT@[117; 130) \"unimplemented\"\n+            EXCL@[130; 131)\n+            TOKEN_TREE@[131; 133)\n+              L_PAREN@[131; 132)\n+              R_PAREN@[132; 133)\n+          WHITESPACE@[133; 138)\n+          R_CURLY@[138; 139)\n+      WHITESPACE@[139; 140)\n+      R_CURLY@[140; 141)\n+  WHITESPACE@[141; 143)\n+  FN_DEF@[143; 161)\n+    FN_KW@[143; 145)\n+    WHITESPACE@[145; 146)\n+    NAME@[146; 149)\n+      IDENT@[146; 149) \"baz\"\n+    PARAM_LIST@[149; 158)\n+      L_PAREN@[149; 150)\n+      PARAM@[150; 157)\n+        PLACEHOLDER_PAT@[150; 151)\n+          UNDERSCORE@[150; 151)\n+        COLON@[151; 152)\n+        WHITESPACE@[152; 153)\n+        PATH_TYPE@[153; 157)\n+          PATH@[153; 157)\n+            PATH_SEGMENT@[153; 157)\n+              NAME_REF@[153; 157)\n+                IDENT@[153; 157) \"bool\"\n+      R_PAREN@[157; 158)\n+    WHITESPACE@[158; 159)\n+    BLOCK@[159; 161)\n+      L_CURLY@[159; 160)\n+      R_CURLY@[160; 161)\n+  WHITESPACE@[161; 163)\n+  FN_DEF@[163; 198)\n+    FN_KW@[163; 165)\n+    WHITESPACE@[165; 166)\n+    NAME@[166; 170)\n+      IDENT@[166; 170) \"main\"\n+    PARAM_LIST@[170; 172)\n+      L_PAREN@[170; 171)\n+      R_PAREN@[171; 172)\n+    WHITESPACE@[172; 173)\n+    BLOCK@[173; 198)\n+      L_CURLY@[173; 174)\n+      WHITESPACE@[174; 179)\n+      CALL_EXPR@[179; 196)\n+        PATH_EXPR@[179; 182)\n+          PATH@[179; 182)\n+            PATH_SEGMENT@[179; 182)\n+              NAME_REF@[179; 182)\n+                IDENT@[179; 182) \"baz\"\n+        ARG_LIST@[182; 196)\n+          L_PAREN@[182; 183)\n+          CALL_EXPR@[183; 195)\n+            PATH_EXPR@[183; 193)\n+              PATH@[183; 193)\n+                PATH@[183; 188)\n+                  PATH_SEGMENT@[183; 188)\n+                    L_ANGLE@[183; 184)\n+                    PATH_TYPE@[184; 187)\n+                      PATH@[184; 187)\n+                        PATH_SEGMENT@[184; 187)\n+                          NAME_REF@[184; 187)\n+                            IDENT@[184; 187) \"Foo\"\n+                    R_ANGLE@[187; 188)\n+                COLONCOLON@[188; 190)\n+                PATH_SEGMENT@[190; 193)\n+                  NAME_REF@[190; 193)\n+                    IDENT@[190; 193) \"bar\"\n+            ARG_LIST@[193; 195)\n+              L_PAREN@[193; 194)\n+              R_PAREN@[194; 195)\n+          R_PAREN@[195; 196)\n+      WHITESPACE@[196; 197)\n+      R_CURLY@[197; 198)\n+  WHITESPACE@[198; 199)"}]}