{"sha": "2285f11724e2fa3251c94c9ab7672544099600e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyODVmMTE3MjRlMmZhMzI1MWM5NGM5YWI3NjcyNTQ0MDk5NjAwZTI=", "commit": {"author": {"name": "Soveu", "email": "marx.tomasz@gmail.com", "date": "2021-03-15T20:26:22Z"}, "committer": {"name": "Soveu", "email": "marx.tomasz@gmail.com", "date": "2021-03-15T20:26:22Z"}, "message": "Vec::dedup optimization - add test for panic", "tree": {"sha": "379306641cbc95a7abfb0f3fbabe1e60678e9a10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/379306641cbc95a7abfb0f3fbabe1e60678e9a10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2285f11724e2fa3251c94c9ab7672544099600e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2285f11724e2fa3251c94c9ab7672544099600e2", "html_url": "https://github.com/rust-lang/rust/commit/2285f11724e2fa3251c94c9ab7672544099600e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2285f11724e2fa3251c94c9ab7672544099600e2/comments", "author": {"login": "Soveu", "id": 34382234, "node_id": "MDQ6VXNlcjM0MzgyMjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34382234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soveu", "html_url": "https://github.com/Soveu", "followers_url": "https://api.github.com/users/Soveu/followers", "following_url": "https://api.github.com/users/Soveu/following{/other_user}", "gists_url": "https://api.github.com/users/Soveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soveu/subscriptions", "organizations_url": "https://api.github.com/users/Soveu/orgs", "repos_url": "https://api.github.com/users/Soveu/repos", "events_url": "https://api.github.com/users/Soveu/events{/privacy}", "received_events_url": "https://api.github.com/users/Soveu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Soveu", "id": 34382234, "node_id": "MDQ6VXNlcjM0MzgyMjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34382234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soveu", "html_url": "https://github.com/Soveu", "followers_url": "https://api.github.com/users/Soveu/followers", "following_url": "https://api.github.com/users/Soveu/following{/other_user}", "gists_url": "https://api.github.com/users/Soveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soveu/subscriptions", "organizations_url": "https://api.github.com/users/Soveu/orgs", "repos_url": "https://api.github.com/users/Soveu/repos", "events_url": "https://api.github.com/users/Soveu/events{/privacy}", "received_events_url": "https://api.github.com/users/Soveu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afdbc9ece176ccac7b1d156efcb397d089d88b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/afdbc9ece176ccac7b1d156efcb397d089d88b5a", "html_url": "https://github.com/rust-lang/rust/commit/afdbc9ece176ccac7b1d156efcb397d089d88b5a"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "536fb4af5647dc4c8be360c1e64b7b83035f0f7d", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/2285f11724e2fa3251c94c9ab7672544099600e2/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2285f11724e2fa3251c94c9ab7672544099600e2/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=2285f11724e2fa3251c94c9ab7672544099600e2", "patch": "@@ -7,6 +7,7 @@ use std::mem::{size_of, swap};\n use std::ops::Bound::*;\n use std::panic::{catch_unwind, AssertUnwindSafe};\n use std::rc::Rc;\n+use std::sync::atomic::{AtomicU32, Ordering};\n use std::vec::{Drain, IntoIter};\n \n struct DropCounter<'a> {\n@@ -2169,3 +2170,56 @@ fn test_vec_dedup() {\n         assert_eq!(vec, dedup);\n     }\n }\n+\n+#[test]\n+fn test_vec_dedup_panicking() {\n+    #[derive(Debug)]\n+    struct Panic {\n+        drop_counter: &'static AtomicU32,\n+        value: bool,\n+        index: usize,\n+    }\n+\n+    impl PartialEq for Panic {\n+        fn eq(&self, other: &Self) -> bool {\n+            self.value == other.value\n+        }\n+    }\n+\n+    impl Drop for Panic {\n+        fn drop(&mut self) {\n+            let x = self.drop_counter.fetch_add(1, Ordering::SeqCst);\n+            assert!(x != 4);\n+        }\n+    }\n+\n+    static DROP_COUNTER: AtomicU32 = AtomicU32::new(0);\n+    let expected = [\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 0 },\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 5 },\n+        Panic { drop_counter: &DROP_COUNTER, value: true, index: 6 },\n+        Panic { drop_counter: &DROP_COUNTER, value: true, index: 7 },\n+    ];\n+    let mut vec = vec![\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 0 },\n+        // these elements get deduplicated\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 1 },\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 2 },\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 3 },\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 4 },\n+        // here it panics\n+        Panic { drop_counter: &DROP_COUNTER, value: false, index: 5 },\n+        Panic { drop_counter: &DROP_COUNTER, value: true, index: 6 },\n+        Panic { drop_counter: &DROP_COUNTER, value: true, index: 7 },\n+    ];\n+\n+    let _ = std::panic::catch_unwind(std::panic::AssertUnwindSafe(|| {\n+        vec.dedup();\n+    }));\n+\n+    let ok = vec.iter().zip(expected.iter()).all(|(x, y)| x.index == y.index);\n+\n+    if !ok {\n+        panic!(\"expected: {:?}\\ngot: {:?}\\n\", expected, vec);\n+    }\n+}"}]}