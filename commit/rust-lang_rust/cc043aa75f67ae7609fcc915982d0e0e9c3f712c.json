{"sha": "cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "node_id": "C_kwDOAAsO6NoAKGNjMDQzYWE3NWY2N2FlNzYwOWZjYzkxNTk4MmQwZTBlOWMzZjcxMmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T13:49:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T13:49:42Z"}, "message": "Rollup merge of #92037 - fee1-dead:fix_env_dmbic, r=oli-obk\n\nUse a const ParamEnv when in default_method_body_is_const\n\nr? `@oli-obk`\n\nThis PR fixes the param_env function to return `constness: Const` correctly for trait methods marked with `#[default_method_body_is_const]`. The snippet below is erroneously accepted by the compiler and has been fixed by this change. ([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=12dc6681b2eeee5f604203d96259eeb4))\n\n```rust\n#![feature(const_fn_trait_bound)]\n#![feature(const_trait_impl)]\n\ntrait Tr {}\nimpl Tr for () {}\n\nconst fn foo<T>() where T: ~const Tr {}\n\npub trait Foo {\n    #[default_method_body_is_const]\n    fn foo() {\n        foo::<()>();\n    }\n}\n```", "tree": {"sha": "91f4eda838c2518b319dbf17e8511eac4e3b1b89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91f4eda838c2518b319dbf17e8511eac4e3b1b89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhveb2CRBK7hj4Ov3rIwAAecwIAJf+WMyRjcOcz2vhqfphO33T\nCHfsR8G7LNJAtI8EI9b65TqVH7XtjTg3NxkSmBWW8Xp3QcdG+ENdC6XzfljRJq5Y\nKWrOhUND6z1SZ43DI3PJ3B3FdUU5eB08GvSrJJ1o+Z2c5vY2I8cemUaubxtq4CVl\nhJqcYnRnh4YbNWapVssuEf9KK+d9UHtdajUz2n/49mnm0icXG8CKuxb/yFu3lqoF\nWXAWbOEYwudwC3QF+LtxBy+wvEE7/TzeFqYEvkVoTldv2PY5iARkJAY8jKhKm+gr\nZ1/2Yn1sXVaAPg+f/VIJMWyZ2QOdGwRccI0JSqmZvYVmrQrfyAJjYq3ga6EUG/E=\n=X+dc\n-----END PGP SIGNATURE-----\n", "payload": "tree 91f4eda838c2518b319dbf17e8511eac4e3b1b89\nparent 53a95ea289941ffeacb95f2ca7a7a7f1a9aae679\nparent a1f91aa4104c330d5592c56653a1c68394251120\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639835382 +0100\ncommitter GitHub <noreply@github.com> 1639835382 +0100\n\nRollup merge of #92037 - fee1-dead:fix_env_dmbic, r=oli-obk\n\nUse a const ParamEnv when in default_method_body_is_const\n\nr? `@oli-obk`\n\nThis PR fixes the param_env function to return `constness: Const` correctly for trait methods marked with `#[default_method_body_is_const]`. The snippet below is erroneously accepted by the compiler and has been fixed by this change. ([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=12dc6681b2eeee5f604203d96259eeb4))\n\n```rust\n#![feature(const_fn_trait_bound)]\n#![feature(const_trait_impl)]\n\ntrait Tr {}\nimpl Tr for () {}\n\nconst fn foo<T>() where T: ~const Tr {}\n\npub trait Foo {\n    #[default_method_body_is_const]\n    fn foo() {\n        foo::<()>();\n    }\n}\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "html_url": "https://github.com/rust-lang/rust/commit/cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a95ea289941ffeacb95f2ca7a7a7f1a9aae679", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a95ea289941ffeacb95f2ca7a7a7f1a9aae679", "html_url": "https://github.com/rust-lang/rust/commit/53a95ea289941ffeacb95f2ca7a7a7f1a9aae679"}, {"sha": "a1f91aa4104c330d5592c56653a1c68394251120", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f91aa4104c330d5592c56653a1c68394251120", "html_url": "https://github.com/rust-lang/rust/commit/a1f91aa4104c330d5592c56653a1c68394251120"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "6c2657bd64bdbe47de19dafaa50545a05425063a", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "patch": "@@ -3,7 +3,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Binder, Predicate, PredicateKind, ToPredicate, Ty, TyCtxt};\n-use rustc_span::Span;\n+use rustc_span::{sym, Span};\n use rustc_trait_selection::traits;\n \n fn sized_constraint_for_ty<'tcx>(\n@@ -285,6 +285,12 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n \n     let constness = match hir_id {\n         Some(hir_id) => match tcx.hir().get(hir_id) {\n+            hir::Node::TraitItem(hir::TraitItem { kind: hir::TraitItemKind::Fn(..), .. })\n+                if tcx.has_attr(def_id, sym::default_method_body_is_const) =>\n+            {\n+                hir::Constness::Const\n+            }\n+\n             hir::Node::Item(hir::Item { kind: hir::ItemKind::Const(..), .. })\n             | hir::Node::Item(hir::Item { kind: hir::ItemKind::Static(..), .. })\n             | hir::Node::TraitItem(hir::TraitItem {"}, {"sha": "7db04fe1ac3f13646867dfd513993bd037b942bf", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-body-checking.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs?ref=cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "patch": "@@ -0,0 +1,17 @@\n+#![feature(const_fn_trait_bound)]\n+#![feature(const_trait_impl)]\n+\n+trait Tr {}\n+impl Tr for () {}\n+\n+const fn foo<T>() where T: ~const Tr {}\n+\n+pub trait Foo {\n+    #[default_method_body_is_const]\n+    fn foo() {\n+        foo::<()>();\n+        //~^ ERROR the trait bound `(): Tr` is not satisfied\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "6e7e4b3a472d6b715940a315429141225259d5f1", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-body-checking.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc043aa75f67ae7609fcc915982d0e0e9c3f712c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr?ref=cc043aa75f67ae7609fcc915982d0e0e9c3f712c", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: the trait bound `(): Tr` is not satisfied\n+  --> $DIR/default-method-body-is-const-body-checking.rs:12:15\n+   |\n+LL |         foo::<()>();\n+   |               ^^ the trait `Tr` is not implemented for `()`\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/default-method-body-is-const-body-checking.rs:7:28\n+   |\n+LL | const fn foo<T>() where T: ~const Tr {}\n+   |                            ^^^^^^^^^ required by this bound in `foo`\n+help: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\n+   |\n+LL | pub trait Foo where (): Tr {\n+   |               ++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}