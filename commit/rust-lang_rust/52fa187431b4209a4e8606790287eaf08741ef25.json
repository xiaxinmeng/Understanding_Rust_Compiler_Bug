{"sha": "52fa187431b4209a4e8606790287eaf08741ef25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZmExODc0MzFiNDIwOWE0ZTg2MDY3OTAyODdlYWYwODc0MWVmMjU=", "commit": {"author": {"name": "defuz", "email": "defuz.net@gmail.com", "date": "2015-01-22T19:56:27Z"}, "committer": {"name": "defuz", "email": "defuz.net@gmail.com", "date": "2015-02-28T08:56:46Z"}, "message": "FIX #21475: Interval match patterns won't parse namespace specifiers correctly", "tree": {"sha": "2a86723302629206bf9eb23115f70b2d243a13ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a86723302629206bf9eb23115f70b2d243a13ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52fa187431b4209a4e8606790287eaf08741ef25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52fa187431b4209a4e8606790287eaf08741ef25", "html_url": "https://github.com/rust-lang/rust/commit/52fa187431b4209a4e8606790287eaf08741ef25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52fa187431b4209a4e8606790287eaf08741ef25/comments", "author": {"login": "defuz", "id": 276041, "node_id": "MDQ6VXNlcjI3NjA0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/276041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defuz", "html_url": "https://github.com/defuz", "followers_url": "https://api.github.com/users/defuz/followers", "following_url": "https://api.github.com/users/defuz/following{/other_user}", "gists_url": "https://api.github.com/users/defuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/defuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defuz/subscriptions", "organizations_url": "https://api.github.com/users/defuz/orgs", "repos_url": "https://api.github.com/users/defuz/repos", "events_url": "https://api.github.com/users/defuz/events{/privacy}", "received_events_url": "https://api.github.com/users/defuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "defuz", "id": 276041, "node_id": "MDQ6VXNlcjI3NjA0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/276041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defuz", "html_url": "https://github.com/defuz", "followers_url": "https://api.github.com/users/defuz/followers", "following_url": "https://api.github.com/users/defuz/following{/other_user}", "gists_url": "https://api.github.com/users/defuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/defuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defuz/subscriptions", "organizations_url": "https://api.github.com/users/defuz/orgs", "repos_url": "https://api.github.com/users/defuz/repos", "events_url": "https://api.github.com/users/defuz/events{/privacy}", "received_events_url": "https://api.github.com/users/defuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48aeaba9347a25b2e3848e0dcbc1d8f6b0076718", "url": "https://api.github.com/repos/rust-lang/rust/commits/48aeaba9347a25b2e3848e0dcbc1d8f6b0076718", "html_url": "https://github.com/rust-lang/rust/commit/48aeaba9347a25b2e3848e0dcbc1d8f6b0076718"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "1ef62cdf315d5a7247a49cd97136eff1ca528d62", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/52fa187431b4209a4e8606790287eaf08741ef25/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fa187431b4209a4e8606790287eaf08741ef25/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=52fa187431b4209a4e8606790287eaf08741ef25", "patch": "@@ -3539,6 +3539,19 @@ impl<'a> Parser<'a> {\n                         self.bump();\n                         pat = PatStruct(enum_path, fields, etc);\n                     }\n+                    token::DotDotDot => {\n+                        let hi = self.last_span.hi;\n+                        let start = self.mk_expr(lo, hi, ExprPath(enum_path));\n+                        self.eat(&token::DotDotDot);\n+                        let end = if self.token.is_ident() || self.token.is_path() {\n+                            let path = self.parse_path(LifetimeAndTypesWithColons);\n+                            let hi = self.span.hi;\n+                            self.mk_expr(lo, hi, ExprPath(path))\n+                        } else {\n+                            self.parse_literal_maybe_minus()\n+                        };\n+                        pat = PatRange(start, end);\n+                    }\n                     _ => {\n                         let mut args: Vec<P<Pat>> = Vec::new();\n                         match self.token {"}, {"sha": "b0f5fe628b01f0bb15675cb6668769d644982810", "filename": "src/test/run-pass/issue-21475.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/52fa187431b4209a4e8606790287eaf08741ef25/src%2Ftest%2Frun-pass%2Fissue-21475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fa187431b4209a4e8606790287eaf08741ef25/src%2Ftest%2Frun-pass%2Fissue-21475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21475.rs?ref=52fa187431b4209a4e8606790287eaf08741ef25", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use m::{START, END};\n+\n+fn main() {\n+    match 42u32 {\n+        m::START...m::END => {},\n+        // FIXME: Should also work (now: mismatched types in range [E0031])\n+        // 0u32...m::END => {},\n+        // m::START...59u32 => {},\n+        _  => {},\n+    }\n+}\n+\n+mod m {\n+  pub const START: u32 = 4;\n+  pub const END:   u32 = 14;\n+}"}]}