{"sha": "02312b1fdb586734b5a68651b1268273e4c09f2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMzEyYjFmZGI1ODY3MzRiNWE2ODY1MWIxMjY4MjczZTRjMDlmMmQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-11-12T08:38:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-12T08:38:38Z"}, "message": "Rollup merge of #37584 - alexcrichton:travis, r=brson\n\nMove all Linux/OSX CI infastructure to Travis\n\nThis commit configures our `.travis.yml` to test the full suite of tests we have\non Buildbot right now. A whole mess of docker images are added to the `src/ci`\ndirectory which represent all the build environments for each configuration.\nEach of these environments is then configured in `.travis.yml` to run on the\nauto branch.\n\nNote that the full matrix of tests aren't intended to be run on all PRs.\nInstead, we continue to run only one entry in the matrix, forcing all others to\nfinish quickly. Only the `auto` branch should run the full matrix of builds.\n\nAlso note that the infrastructure hasn't quite been allocated yet to the\nrust-lang/rust repository, so everything is disabled for now except for the one\nbuild that happens on PRs. Once that infrastructure is allocated though we can\nenable this and let it fly!\n\nNotable modifications from the current test suite today:\n\n* Android tests are run in rustbuild instead of the makefiles, for whatever\n  reason I couldn't get the makefiles to work on Travis.\n* A debuginfo test was updated to work with the current version of the Android\n  NDK.\n* Some dependencies in `mk/tests.mk` were fixed to allow running tests in\n  parallel.", "tree": {"sha": "bf0be11a6fe83239dcf90ed0c4aeb5e03fd82ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0be11a6fe83239dcf90ed0c4aeb5e03fd82ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02312b1fdb586734b5a68651b1268273e4c09f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02312b1fdb586734b5a68651b1268273e4c09f2d", "html_url": "https://github.com/rust-lang/rust/commit/02312b1fdb586734b5a68651b1268273e4c09f2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02312b1fdb586734b5a68651b1268273e4c09f2d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19f9399947c6172168cfaae2c45ba7d9f08d624", "url": "https://api.github.com/repos/rust-lang/rust/commits/f19f9399947c6172168cfaae2c45ba7d9f08d624", "html_url": "https://github.com/rust-lang/rust/commit/f19f9399947c6172168cfaae2c45ba7d9f08d624"}, {"sha": "008cc2d999012780514abc5b0c7510e648b0728c", "url": "https://api.github.com/repos/rust-lang/rust/commits/008cc2d999012780514abc5b0c7510e648b0728c", "html_url": "https://github.com/rust-lang/rust/commit/008cc2d999012780514abc5b0c7510e648b0728c"}], "stats": {"total": 759, "additions": 734, "deletions": 25}, "files": [{"sha": "e06444ddf6d0f06c763a27b198cf45287ef343ea", "filename": ".travis.yml", "status": "modified", "additions": 68, "deletions": 19, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -1,33 +1,82 @@\n-language: generic\n+language: rust\n sudo: required\n+dist: trusty\n services:\n   - docker\n \n-# LLVM takes awhile to check out and otherwise we'll manage the submodules in\n-# our configure script, so disable auto submodule management.\n git:\n-  submodules: false\n   depth: 1\n+  submodules: false\n \n-before_install:\n-  - docker build -t rust -f src/etc/Dockerfile src/etc\n+matrix:\n+  include:\n+    # Linux builders, all docker images\n+    - env: IMAGE=arm-android\n+    - env: IMAGE=cross\n+    - env: IMAGE=i686-gnu\n+    - env: IMAGE=i686-gnu-nopt\n+    - env: IMAGE=x86_64-freebsd\n+    - env: IMAGE=x86_64-gnu\n+    - env: IMAGE=x86_64-gnu-cargotest\n+    - env: IMAGE=x86_64-gnu-debug\n+    - env: IMAGE=x86_64-gnu-nopt\n+    - env: IMAGE=x86_64-gnu-rustbuild\n+    - env: IMAGE=x86_64-gnu-llvm-3.7 ALLOW_PR=1\n+    - env: IMAGE=x86_64-musl\n+\n+    # OSX builders\n+    - env: >\n+        RUST_CHECK_TARGET=check\n+        RUST_CONFIGURE_ARGS=--target=x86_64-apple-darwin\n+        SRC=.\n+      os: osx\n+      install: brew install ccache\n+    - env: >\n+        RUST_CHECK_TARGET=check\n+        RUST_CONFIGURE_ARGS=--target=i686-apple-darwin\n+        SRC=.\n+      os: osx\n+      install: brew install ccache\n+    - env: >\n+        RUST_CHECK_TARGET=check\n+        RUST_CONFIGURE_ARGS=--target=x86_64-apple-darwin --enable-rustbuild\n+        SRC=.\n+      os: osx\n+      install: brew install ccache\n+    - env: >\n+        RUST_CHECK_TARGET=\n+        RUST_CONFIGURE_ARGS=--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios\n+        SRC=.\n+      os: osx\n+      install: brew install ccache\n \n script:\n-  - docker run -v `pwd`:/build rust\n-    sh -c \"\n-      ./configure --enable-vendor --enable-rustbuild --llvm-root=/usr/lib/llvm-3.7 --enable-quiet-tests &&\n-      make tidy &&\n-      make check -j4\n-    \"\n+  - if [ -z \"$ALLOW_PR\" ] && [ \"$TRAVIS_BRANCH\" != \"auto\" ]; then\n+        echo skipping, not a full build;\n+    elif [ -z \"$ENABLE_AUTO\" ] then\n+        echo skipping, not quite ready yet\n+    elif [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n+        git submodule update --init;\n+        src/ci/run.sh;\n+    else\n+        git submodule update --init;\n+        src/ci/docker/run.sh $IMAGE;\n+    fi\n \n-# Real testing happens on http://buildbot.rust-lang.org/\n-#\n-# See https://github.com/rust-lang/rust-buildbot\n-#     CONTRIBUTING.md#pull-requests\n+# Save tagged docker images we created and load them if they're available\n+before_cache:\n+  - docker history -q rust-ci |\n+    grep -v missing |\n+    xargs docker save |\n+    gzip -9 > $HOME/docker/rust-ci.tar.gz\n+before_install:\n+  - zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n \n notifications:\n   email: false\n \n-branches:\n-  only:\n-    - master\n+cache:\n+  directories:\n+    - $HOME/docker\n+    - $HOME/.ccache\n+    - $HOME/.cargo"}, {"sha": "35ee7697a7a6974da5e9204d5a26933d0a5a2b35", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -697,6 +697,8 @@ CTEST_DEPS_ui_$(1)-T-$(2)-H-$(3) = $$(UI_TESTS)\n CTEST_DEPS_mir-opt_$(1)-T-$(2)-H-$(3) = $$(MIR_OPT_TESTS)\n CTEST_DEPS_rustdocck_$(1)-T-$(2)-H-$(3) = $$(RUSTDOCCK_TESTS) \\\n \t\t$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n+\t\t$$(CSREQ$(1)_T_$(3)_H_$(3)) \\\n+\t\t$$(SREQ$(1)_T_$(3)_H_$(3)) \\\n \t\t$(S)src/etc/htmldocck.py\n \n endef"}, {"sha": "1e73595ec998387d64014d21b08831bd77899399", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -57,6 +57,9 @@ else\n \t$(Q)$(BOOTSTRAP) dist --install $(BOOTSTRAP_ARGS)\n endif\n tidy:\n-\t$(Q)$(BOOTSTRAP) test src/tools/tidy $(BOOTSTRAP_ARGS)\n+\t$(Q)$(BOOTSTRAP) test src/tools/tidy $(BOOTSTRAP_ARGS) --stage 0\n+\n+check-stage2-android:\n+\t$(Q)$(BOOTSTRAP) --step check-target --target arm-linux-androideabi\n \n .PHONY: dist"}, {"sha": "c5b70c227c4080c5e2c7ab307f21668f75054eb5", "filename": "src/ci/docker/arm-android/Dockerfile", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,46 @@\n+FROM ubuntu:16.04\n+\n+RUN dpkg --add-architecture i386 && \\\n+    apt-get update && \\\n+    apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  unzip \\\n+  expect \\\n+  openjdk-9-jre \\\n+  sudo \\\n+  libstdc++6:i386\n+\n+WORKDIR /android/\n+ENV PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools\n+\n+COPY install-ndk.sh install-sdk.sh accept-licenses.sh /android/\n+RUN sh /android/install-ndk.sh\n+RUN sh /android/install-sdk.sh\n+\n+COPY start-emulator.sh /android/\n+ENTRYPOINT [\"/android/start-emulator.sh\"]\n+\n+ENV TARGETS=arm-linux-androideabi\n+ENV TARGETS=$TARGETS,i686-linux-android\n+ENV TARGETS=$TARGETS,aarch64-linux-android\n+ENV TARGETS=$TARGETS,armv7-linux-androideabi\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --target=$TARGETS \\\n+      --arm-linux-androideabi-ndk=/android/ndk-arm-9 \\\n+      --armv7-linux-androideabi-ndk=/android/ndk-arm-9 \\\n+      --i686-linux-android-ndk=/android/ndk-x86-9 \\\n+      --aarch64-linux-android-ndk=/android/ndk-aarch64 \\\n+      --enable-rustbuild\n+ENV RUST_CHECK_TARGET check-stage2-android\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "8d8f60a5ec2604606571cdb6a7d231d5754aa38f", "filename": "src/ci/docker/arm-android/accept-licenses.sh", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/expect -f\n+# ignore-license\n+\n+set timeout 1800\n+set cmd [lindex $argv 0]\n+set licenses [lindex $argv 1]\n+\n+spawn {*}$cmd\n+expect {\n+  \"Do you accept the license '*'*\" {\n+        exp_send \"y\\r\"\n+        exp_continue\n+  }\n+  eof\n+}"}, {"sha": "418ce69c5b1e5769e252034b918afa427dcfd2d6", "filename": "src/ci/docker/arm-android/install-ndk.sh", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,45 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+cpgdb() {\n+  cp android-ndk-r11c/prebuilt/linux-x86_64/bin/gdb /android/$1/bin/$2-gdb\n+  cp android-ndk-r11c/prebuilt/linux-x86_64/bin/gdb-orig /android/$1/bin/gdb-orig\n+  cp -r android-ndk-r11c/prebuilt/linux-x86_64/share /android/$1/share\n+}\n+\n+# Prep the Android NDK\n+#\n+# See https://github.com/servo/servo/wiki/Building-for-Android\n+curl -O https://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\n+unzip -q android-ndk-r11c-linux-x86_64.zip\n+bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n+        --platform=android-9 \\\n+        --toolchain=arm-linux-androideabi-4.9 \\\n+        --install-dir=/android/ndk-arm-9 \\\n+        --ndk-dir=/android/android-ndk-r11c \\\n+        --arch=arm\n+cpgdb ndk-arm-9 arm-linux-androideabi\n+bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n+        --platform=android-21 \\\n+        --toolchain=aarch64-linux-android-4.9 \\\n+        --install-dir=/android/ndk-aarch64 \\\n+        --ndk-dir=/android/android-ndk-r11c \\\n+        --arch=arm64\n+bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n+        --platform=android-9 \\\n+        --toolchain=x86-4.9 \\\n+        --install-dir=/android/ndk-x86-9 \\\n+        --ndk-dir=/android/android-ndk-r11c \\\n+        --arch=x86\n+\n+rm -rf ./android-ndk-r11c-linux-x86_64.zip ./android-ndk-r11c"}, {"sha": "2db1d46ba2273e89cfdb655ba59ef427ba0974ba", "filename": "src/ci/docker/arm-android/install-sdk.sh", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,33 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+# Prep the SDK and emulator\n+#\n+# Note that the update process requires that we accept a bunch of licenses, and\n+# we can't just pipe `yes` into it for some reason, so we take the same strategy\n+# located in https://github.com/appunite/docker by just wrapping it in a script\n+# which apparently magically accepts the licenses.\n+\n+mkdir sdk\n+curl https://dl.google.com/android/android-sdk_r24.4-linux.tgz | \\\n+    tar xzf - -C sdk --strip-components=1\n+\n+filter=\"platform-tools,android-18\"\n+filter=\"$filter,sys-img-armeabi-v7a-android-18\"\n+\n+./accept-licenses.sh \"android - update sdk -a --no-ui --filter $filter\"\n+\n+echo \"no\" | android create avd \\\n+                --name arm-18 \\\n+                --target android-18 \\\n+                --abi armeabi-v7a"}, {"sha": "93f20b28b8689e4d37ce95bc648f174f8558353d", "filename": "src/ci/docker/arm-android/start-emulator.sh", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,15 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+ANDROID_EMULATOR_FORCE_32BIT=true \\\n+  emulator @arm-18 -no-window -partition-size 2047 &\n+exec \"$@\""}, {"sha": "d8af878a95863f05dd32c5193f42ec3f37ef225b", "filename": "src/ci/docker/cross/Dockerfile", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,66 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gcc-aarch64-linux-gnu libc6-dev-arm64-cross \\\n+  gcc-arm-linux-gnueabi libc6-dev-armel-cross \\\n+  gcc-arm-linux-gnueabihf libc6-dev-armhf-cross \\\n+  gcc-mips-linux-gnu libc6-dev-mips-cross \\\n+  gcc-mipsel-linux-gnu libc6-dev-mipsel-cross \\\n+  gcc-mips64-linux-gnuabi64 libc6-dev-mips64-cross \\\n+  gcc-mips64el-linux-gnuabi64 libc6-dev-mips64el-cross \\\n+  gcc-powerpc-linux-gnu libc6-dev-powerpc-cross \\\n+  gcc-powerpc64-linux-gnu libc6-dev-ppc64-cross \\\n+  gcc-powerpc64le-linux-gnu libc6-dev-ppc64el-cross \\\n+  gcc-s390x-linux-gnu libc6-dev-s390x-cross\n+\n+ENV TARGETS=aarch64-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,arm-unknown-linux-gnueabi\n+ENV TARGETS=$TARGETS,arm-unknown-linux-gnueabihf\n+ENV TARGETS=$TARGETS,armv7-unknown-linux-gnueabihf\n+ENV TARGETS=$TARGETS,asmjs-unknown-emscripten\n+ENV TARGETS=$TARGETS,mips-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,mips64-unknown-linux-gnuabi64\n+ENV TARGETS=$TARGETS,mips64el-unknown-linux-gnuabi64\n+ENV TARGETS=$TARGETS,mipsel-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,powerpc-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,powerpc64-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,powerpc64le-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,s390x-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,wasm32-unknown-emscripten\n+\n+#ENV TARGETS=$TARGETS,mips-unknown-linux-musl\n+#ENV TARGETS=$TARGETS,arm-unknown-linux-musleabi\n+#ENV TARGETS=$TARGETS,arm-unknown-linux-musleabihf\n+#ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\n+#ENV TARGETS=$TARGETS,x86_64-rumprun-netbsd\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --target=$TARGETS \\\n+      --enable-rustbuild\n+ENV RUST_CHECK_TARGET \"\"\n+\n+ENV AR_s390x_unknown_linux_gnu=s390x-linux-gnu-ar \\\n+    CC_s390x_unknown_linux_gnu=s390x-linux-gnu-gcc \\\n+    AR_mips64_unknown_linux_gnuabi64=mips64-linux-gnuabi64-ar \\\n+    CC_mips64_unknown_linux_gnuabi64=mips64-linux-gnuabi64-gcc \\\n+    AR_mips64el_unknown_linux_gnuabi64=mips64el-linux-gnuabi64-ar \\\n+    CC_mips64el_unknown_linux_gnuabi64=mips64el-linux-gnuabi64-gcc \\\n+    AR_powerpc64_unknown_linux_gnu=powerpc64-linux-gnu-ar \\\n+    CC_powerpc64_unknown_linux_gnu=powerpc64-linux-gnu-gcc\n+\n+# FIXME(rust-lang/rust#36150): powerpc unfortunately aborts right now\n+ENV NO_LLVM_ASSERTIONS=1\n+\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "a9ef29daaf1a18cd0bd46bc2666d5bc6462c5319", "filename": "src/ci/docker/i686-gnu-nopt/Dockerfile", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,19 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++-multilib \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "d0ddde95b447364f241f3f22caeff6be833ea087", "filename": "src/ci/docker/i686-gnu/Dockerfile", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,19 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++-multilib \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "c5b1d00fb7cc18420eddbd237b666d0f90ced724", "filename": "src/ci/docker/run.sh", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,42 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -e\n+\n+script=`cd $(dirname $0) && pwd`/`basename $0`\n+image=$1\n+\n+docker_dir=\"`dirname $script`\"\n+ci_dir=\"`dirname $docker_dir`\"\n+src_dir=\"`dirname $ci_dir`\"\n+root_dir=\"`dirname $src_dir`\"\n+\n+docker build \\\n+  --rm \\\n+  -t rust-ci \\\n+  \"`dirname \"$script\"`/$image\"\n+\n+mkdir -p $HOME/.ccache\n+mkdir -p $HOME/.cargo\n+\n+exec docker run \\\n+  --volume \"$root_dir:/checkout:ro\" \\\n+  --workdir /tmp/obj \\\n+  --env SRC=/checkout \\\n+  --env CCACHE_DIR=/ccache \\\n+  --volume \"$HOME/.ccache:/ccache\" \\\n+  --env CARGO_HOME=/cargo \\\n+  --env LOCAL_USER_ID=`id -u` \\\n+  --volume \"$HOME/.cargo:/cargo\" \\\n+  --interactive \\\n+  --tty \\\n+  rust-ci \\\n+  /checkout/src/ci/run.sh"}, {"sha": "dc16c39961c45e25af2d643f04e1831ce6ff05ae", "filename": "src/ci/docker/x86_64-freebsd/Dockerfile", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-freebsd%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,29 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  bzip2 \\\n+  xz-utils \\\n+  wget\n+\n+COPY build-toolchain.sh /tmp/\n+RUN sh /tmp/build-toolchain.sh\n+\n+ENV \\\n+    AR_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-ar \\\n+    CC_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-gcc\n+\n+ENV RUST_CONFIGURE_ARGS --target=x86_64-unknown-freebsd --enable-rustbuild\n+ENV RUST_CHECK_TARGET \"\"\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "d4bc886d50ea4952231782ff5835f634b9bebc6e", "filename": "src/ci/docker/x86_64-freebsd/build-toolchain.sh", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-freebsd%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-freebsd%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-freebsd%2Fbuild-toolchain.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,96 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+ARCH=x86_64\n+BINUTILS=2.25.1\n+GCC=5.3.0\n+\n+mkdir binutils\n+cd binutils\n+\n+# First up, build binutils\n+curl https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS.tar.bz2 | tar xjf -\n+mkdir binutils-build\n+cd binutils-build\n+../binutils-$BINUTILS/configure \\\n+  --target=$ARCH-unknown-freebsd10\n+make -j10\n+make install\n+cd ../..\n+rm -rf binutils\n+\n+# Next, download the FreeBSD libc and relevant header files\n+\n+mkdir freebsd\n+case \"$ARCH\" in\n+    x86_64)\n+        URL=ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/10.2-RELEASE/base.txz\n+        ;;\n+    i686)\n+        URL=ftp://ftp.freebsd.org/pub/FreeBSD/releases/i386/10.2-RELEASE/base.txz\n+        ;;\n+esac\n+curl $URL | tar xJf - -C freebsd ./usr/include ./usr/lib ./lib\n+\n+dst=/usr/local/$ARCH-unknown-freebsd10\n+\n+cp -r freebsd/usr/include $dst/\n+cp freebsd/usr/lib/crt1.o $dst/lib\n+cp freebsd/usr/lib/Scrt1.o $dst/lib\n+cp freebsd/usr/lib/crti.o $dst/lib\n+cp freebsd/usr/lib/crtn.o $dst/lib\n+cp freebsd/usr/lib/libc.a $dst/lib\n+cp freebsd/usr/lib/libutil.a $dst/lib\n+cp freebsd/usr/lib/libutil_p.a $dst/lib\n+cp freebsd/usr/lib/libm.a $dst/lib\n+cp freebsd/usr/lib/librt.so.1 $dst/lib\n+cp freebsd/usr/lib/libexecinfo.so.1 $dst/lib\n+cp freebsd/lib/libc.so.7 $dst/lib\n+cp freebsd/lib/libm.so.5 $dst/lib\n+cp freebsd/lib/libutil.so.9 $dst/lib\n+cp freebsd/lib/libthr.so.3 $dst/lib/libpthread.so\n+\n+ln -s libc.so.7 $dst/lib/libc.so\n+ln -s libm.so.5 $dst/lib/libm.so\n+ln -s librt.so.1 $dst/lib/librt.so\n+ln -s libutil.so.9 $dst/lib/libutil.so\n+ln -s libexecinfo.so.1 $dst/lib/libexecinfo.so\n+rm -rf freebsd\n+\n+# Finally, download and build gcc to target FreeBSD\n+mkdir gcc\n+cd gcc\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n+cd gcc-$GCC\n+./contrib/download_prerequisites\n+\n+mkdir ../gcc-build\n+cd ../gcc-build\n+../gcc-$GCC/configure                            \\\n+  --enable-languages=c                           \\\n+  --target=$ARCH-unknown-freebsd10               \\\n+  --disable-multilib                             \\\n+  --disable-nls                                  \\\n+  --disable-libgomp                              \\\n+  --disable-libquadmath                          \\\n+  --disable-libssp                               \\\n+  --disable-libvtv                               \\\n+  --disable-libcilkrts                           \\\n+  --disable-libada                               \\\n+  --disable-libsanitizer                         \\\n+  --disable-libquadmath-support                  \\\n+  --disable-lto\n+make -j10\n+make install\n+cd ../..\n+rm -rf gcc"}, {"sha": "1db01f2b48d4691f3faee775c64fc1d0c38e9b33", "filename": "src/ci/docker/x86_64-gnu-cargotest/Dockerfile", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,20 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  libssl-dev \\\n+  sudo\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-rustbuild\n+ENV RUST_CHECK_TARGET check-cargotest\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "9e98215775e51719c37ca28901a0581c2975d48a", "filename": "src/ci/docker/x86_64-gnu-debug/Dockerfile", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-debug%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-debug%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-debug%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,22 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --build=x86_64-unknown-linux-gnu \\\n+      --enable-debug \\\n+      --enable-optimize\n+ENV RUST_CHECK_TARGET \"\"\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "ca06940ae5e2dc7c665b0f7b6ee779e84f868447", "filename": "src/ci/docker/x86_64-gnu-llvm-3.7/Dockerfile", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-3.7%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-3.7%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-3.7%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,26 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python2.7-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb \\\n+  llvm-3.7-tools \\\n+  libedit-dev \\\n+  zlib1g-dev\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --build=x86_64-unknown-linux-gnu \\\n+      --enable-rustbuild \\\n+      --llvm-root=/usr/lib/llvm-3.7\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "73a3e2c726cee601bfb2c16ab1fed5cd272d27bb", "filename": "src/ci/docker/x86_64-gnu-nopt/Dockerfile", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,19 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --disable-optimize-tests\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "d4d0492e2a26049f5f0bb57d475a1ba859643410", "filename": "src/ci/docker/x86_64-gnu-rustbuild/Dockerfile", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-rustbuild%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu-rustbuild%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-rustbuild%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,20 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python-minimal \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-rustbuild\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "f125693e7ae1a17468fa97e4e7a9eef1b0ae0c45", "filename": "src/ci/docker/x86_64-gnu/Dockerfile", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,19 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  sudo \\\n+  gdb\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n+ENV RUST_CHECK_TARGET check\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "1afaef2e056781fa1b530a045622bd9683fe1b84", "filename": "src/ci/docker/x86_64-musl/Dockerfile", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-musl%2FDockerfile?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,27 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  ccache \\\n+  xz-utils \\\n+  sudo \\\n+  gdb\n+\n+WORKDIR /build/\n+COPY build-musl.sh /build/\n+RUN sh /build/build-musl.sh && rm -rf /build\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --target=x86_64-unknown-linux-musl \\\n+      --musl-root=/musl-x86_64\n+ENV RUST_CHECK_TARGET check-stage2-T-x86_64-unknown-linux-musl-H-x86_64-unknown-linux-gnu\n+\n+RUN mkdir /tmp/obj\n+RUN chmod 777 /tmp/obj"}, {"sha": "2bfbd646b75c8e050d934bd8bb06ed291ee7f9c8", "filename": "src/ci/docker/x86_64-musl/build-musl.sh", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-musl%2Fbuild-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Fdocker%2Fx86_64-musl%2Fbuild-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-musl%2Fbuild-musl.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,33 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+export CFLAGS=\"-fPIC\"\n+MUSL=musl-1.1.14\n+curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n+cd $MUSL\n+./configure --prefix=/musl-x86_64 --disable-shared\n+make -j10\n+make install\n+make clean\n+cd ..\n+\n+# To build MUSL we're going to need a libunwind lying around, so acquire that\n+# here and build it.\n+curl -L https://github.com/llvm-mirror/llvm/archive/release_37.tar.gz | tar xzf -\n+curl -L https://github.com/llvm-mirror/libunwind/archive/release_37.tar.gz | tar xzf -\n+mkdir libunwind-build\n+cd libunwind-build\n+cmake ../libunwind-release_37 -DLLVM_PATH=/build/llvm-release_37 \\\n+          -DLIBUNWIND_ENABLE_SHARED=0\n+make -j10\n+cp lib/libunwind.a /musl-x86_64/lib"}, {"sha": "da238dddecacb661e1f7f5426d2d91242c063e2c", "filename": "src/ci/run.sh", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -0,0 +1,44 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -e\n+\n+if [ \"$LOCAL_USER_ID\" != \"\" ]; then\n+  useradd --shell /bin/bash -u $LOCAL_USER_ID -o -c \"\" -m user\n+  export HOME=/home/user\n+  export LOCAL_USER_ID=\n+  exec sudo -E -u user env PATH=$PATH \"$0\"\n+fi\n+\n+if [ \"$NO_LLVM_ASSERTIONS\" = \"\" ]; then\n+  LLVM_ASSERTIONS=--enable-llvm-assertions\n+fi\n+\n+set -ex\n+\n+$SRC/configure \\\n+  --disable-manage-submodules \\\n+  --enable-debug-assertions \\\n+  --enable-quiet-tests \\\n+  --enable-ccache \\\n+  --enable-vendor \\\n+  $LLVM_ASSERTIONS \\\n+  $RUST_CONFIGURE_ARGS\n+\n+if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n+    ncpus=$(sysctl -n hw.ncpu)\n+else\n+    ncpus=$(nproc)\n+fi\n+\n+make -j $ncpus tidy\n+make -j $ncpus\n+exec make $RUST_CHECK_TARGET -j $ncpus"}, {"sha": "d321df8431b88866ca1382af9ec279d95f7e8fc2", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02312b1fdb586734b5a68651b1268273e4c09f2d/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=02312b1fdb586734b5a68651b1268273e4c09f2d", "patch": "@@ -21,21 +21,21 @@\n \n // gdb-command:print singleton.length\n // gdb-check:$2 = 1\n-// gdbg-command:print *((int64_t[1]*)(singleton.data_ptr))\n+// gdbg-command:print *((i64[1]*)(singleton.data_ptr))\n // gdbr-command:print *(singleton.data_ptr as &[i64; 1])\n // gdbg-check:$3 = {1}\n // gdbr-check:$3 = [1]\n \n // gdb-command:print multiple.length\n // gdb-check:$4 = 4\n-// gdbg-command:print *((int64_t[4]*)(multiple.data_ptr))\n+// gdbg-command:print *((i64[4]*)(multiple.data_ptr))\n // gdbr-command:print *(multiple.data_ptr as &[i64; 4])\n // gdbg-check:$5 = {2, 3, 4, 5}\n // gdbr-check:$5 = [2, 3, 4, 5]\n \n // gdb-command:print slice_of_slice.length\n // gdb-check:$6 = 2\n-// gdbg-command:print *((int64_t[2]*)(slice_of_slice.data_ptr))\n+// gdbg-command:print *((i64[2]*)(slice_of_slice.data_ptr))\n // gdbr-command:print *(slice_of_slice.data_ptr as &[i64; 2])\n // gdbg-check:$7 = {3, 4}\n // gdbr-check:$7 = [3, 4]\n@@ -61,14 +61,14 @@\n // gdbg-command:print 'vec_slices::MUT_VECT_SLICE'.length\n // gdbr-command:print MUT_VECT_SLICE.length\n // gdb-check:$14 = 2\n-// gdbg-command:print *((int64_t[2]*)('vec_slices::MUT_VECT_SLICE'.data_ptr))\n+// gdbg-command:print *((i64[2]*)('vec_slices::MUT_VECT_SLICE'.data_ptr))\n // gdbr-command:print *(MUT_VECT_SLICE.data_ptr as &[i64; 2])\n // gdbg-check:$15 = {64, 65}\n // gdbr-check:$15 = [64, 65]\n \n //gdb-command:print mut_slice.length\n //gdb-check:$16 = 5\n-//gdbg-command:print *((int64_t[5]*)(mut_slice.data_ptr))\n+//gdbg-command:print *((i64[5]*)(mut_slice.data_ptr))\n //gdbr-command:print *(mut_slice.data_ptr as &[i64; 5])\n //gdbg-check:$17 = {1, 2, 3, 4, 5}\n //gdbr-check:$17 = [1, 2, 3, 4, 5]"}]}