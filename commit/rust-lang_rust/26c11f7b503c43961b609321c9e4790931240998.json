{"sha": "26c11f7b503c43961b609321c9e4790931240998", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YzExZjdiNTAzYzQzOTYxYjYwOTMyMWM5ZTQ3OTA5MzEyNDA5OTg=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-22T20:07:07Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-22T22:14:42Z"}, "message": "Use must_have_lock instead of private functions. (Issue #2700)\n\nI hereby declare that messages sent from the same source arrive in order (Issue #2605)\n\nRemoving FIXME, owned is the correct type here. (Issue #2704)\n\nRemove outdated FIXME (Issue #2703)\n\nUpdating test for spawning native functions (Issue #2602)\n\nRemoving bogus FIXME (Issue #2599)", "tree": {"sha": "a56d56c0159fbb3be4fa37cef3f4a9d24ddf8cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a56d56c0159fbb3be4fa37cef3f4a9d24ddf8cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26c11f7b503c43961b609321c9e4790931240998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26c11f7b503c43961b609321c9e4790931240998", "html_url": "https://github.com/rust-lang/rust/commit/26c11f7b503c43961b609321c9e4790931240998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26c11f7b503c43961b609321c9e4790931240998/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d6fb24b703a4d18a906e60560cde46ac1957359", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6fb24b703a4d18a906e60560cde46ac1957359", "html_url": "https://github.com/rust-lang/rust/commit/1d6fb24b703a4d18a906e60560cde46ac1957359"}], "stats": {"total": 25, "additions": 4, "deletions": 21}, "files": [{"sha": "a2e7a20bdf2aa1cbedd6d23cea7277172dad4c25", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -385,7 +385,6 @@ fn shift<T>(&v: [T]) -> T {\n             let mut r <- *vv;\n \n             for uint::range(1u, ln) {|i|\n-                // FIXME (#2703): this isn't legal, per se...\n                 let r <- *ptr::offset(vv, i);\n                 push(v, r);\n             }"}, {"sha": "ad729494c457e6483f1d947f4bc211eb330d070a", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -891,9 +891,7 @@ rust_unlock_cond_lock(rust_cond_lock *lock) {\n extern \"C\" void\n rust_wait_cond_lock(rust_cond_lock *lock) {\n     rust_task *task = rust_get_current_task();\n-#ifdef DEBUG_LOCKS\n-    assert(lock->lock.lock_held_by_current_thread());\n-#endif\n+    lock->lock.must_have_lock();\n     assert(NULL == lock->waiting);\n     lock->waiting = task;\n     task->block(lock, \"waiting for signal\");\n@@ -905,9 +903,7 @@ rust_wait_cond_lock(rust_cond_lock *lock) {\n \n extern \"C\" bool\n rust_signal_cond_lock(rust_cond_lock *lock) {\n-#ifdef DEBUG_LOCKS\n-    assert(lock->lock.lock_held_by_current_thread());\n-#endif\n+    lock->lock.must_have_lock();\n     if(NULL == lock->waiting) {\n         return false;\n     }"}, {"sha": "8d8009ceece55e03543778835e9cd7c02133f7d7", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -1797,7 +1797,6 @@ fn trans_assign_op(bcx: block, ex: @ast::expr, op: ast::binop,\n             arg_exprs([src]), save_in(target));\n \n         ret move_val(bcx, DROP_EXISTING, lhs_res.val,\n-                     // FIXME (#2704): should kind be owned?\n                      {bcx: bcx, val: target, kind: owned},\n                      dty);\n       }"}, {"sha": "c4e519026289b8bf253ffbe32c0e1aa661b4da4a", "filename": "src/test/bench/task-perf-word-count-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -77,7 +77,6 @@ mod map_reduce {\n \n     type putter<K: send, V: send> = fn(K, V);\n \n-    // FIXME: the first K1 parameter should probably be a - (#2599)\n     type mapper<K1: send, K2: send, V: send> = fn~(K1, putter<K2, V>);\n \n     type getter<V: send> = fn() -> option<V>;"}, {"sha": "458a0b12698b80597c24548e27a81e032eb1400d", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -1,9 +1,3 @@\n-// xfail-test\n-// FIXME: This test is no longer testing what it was intended to. It should\n-// be testing spawning of a native function, but is actually testing\n-// spawning some other function, then executing a native function.\n-// #2602\n-\n /*\n   A reduced test case for Issue #506, provided by Rob Arnold.\n */\n@@ -13,9 +7,7 @@ import task;\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn task_yield();\n+    fn rust_task_allow_kill();\n }\n \n-fn yield_wrap(&&_arg: ()) { rustrt::task_yield(); }\n-\n-fn main() { task::spawn((), yield_wrap); }\n+fn main() { task::spawn(rustrt::rust_task_allow_kill); }"}, {"sha": "d250b311cccd83858c5c3a78afffaca092a7b01b", "filename": "src/test/run-pass/task-comm-16.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c11f7b503c43961b609321c9e4790931240998/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs?ref=26c11f7b503c43961b609321c9e4790931240998", "patch": "@@ -52,8 +52,6 @@ fn test_tag() {\n     send(ch, tag1);\n     send(ch, tag2(10));\n     send(ch, tag3(10, 11u8, 'A'));\n-    // FIXME: Do port semantics really guarantee these happen in order?\n-    // (#2605)\n     let mut t1: t;\n     t1 = recv(po);\n     assert (t1 == tag1);"}]}