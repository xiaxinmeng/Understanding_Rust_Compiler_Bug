{"sha": "b56d85dc09b774b432c24979d364b7aeb4b75e2f", "node_id": "C_kwDOAAsO6NoAKGI1NmQ4NWRjMDliNzc0YjQzMmMyNDk3OWQzNjRiN2FlYjRiNzVlMmY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-20T17:48:08Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-27T18:24:18Z"}, "message": "Document `const {}` syntax for `std::thread_local`.\n\nIt exists and is pretty cool. More people should use it.", "tree": {"sha": "09d29b170ef14e9872564018279228005a88b667", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09d29b170ef14e9872564018279228005a88b667"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56d85dc09b774b432c24979d364b7aeb4b75e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56d85dc09b774b432c24979d364b7aeb4b75e2f", "html_url": "https://github.com/rust-lang/rust/commit/b56d85dc09b774b432c24979d364b7aeb4b75e2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56d85dc09b774b432c24979d364b7aeb4b75e2f/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "901fdb3b04375e3456b5cf771f86ecca8d6c1917", "url": "https://api.github.com/repos/rust-lang/rust/commits/901fdb3b04375e3456b5cf771f86ecca8d6c1917", "html_url": "https://github.com/rust-lang/rust/commit/901fdb3b04375e3456b5cf771f86ecca8d6c1917"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "3b7c31826b962bef1003c5be3668121514e5e4cb", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b56d85dc09b774b432c24979d364b7aeb4b75e2f/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56d85dc09b774b432c24979d364b7aeb4b75e2f/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=b56d85dc09b774b432c24979d364b7aeb4b75e2f", "patch": "@@ -134,10 +134,28 @@ impl<T: 'static> fmt::Debug for LocalKey<T> {\n /// thread_local! {\n ///     pub static FOO: RefCell<u32> = RefCell::new(1);\n ///\n-///     #[allow(unused)]\n ///     static BAR: RefCell<f32> = RefCell::new(1.0);\n /// }\n-/// # fn main() {}\n+///\n+/// FOO.with(|foo| assert_eq!(*foo.borrow(), 1));\n+/// BAR.with(|bar| assert_eq!(*bar.borrow(), 1.0));\n+/// ```\n+///\n+/// This macro supports a special `const {}` syntax that can be used\n+/// when the initialization expression can be evaluated as a constant.\n+/// This can enable a more efficient thread local implementation that\n+/// can avoid lazy initialization. For types that do not\n+/// [need to be dropped][crate::mem::needs_drop], this can enable an\n+/// even more efficient implementation that does not need to\n+/// track any additional state.\n+///\n+/// ```\n+/// use std::cell::Cell;\n+/// thread_local! {\n+///     pub static FOO: Cell<u32> = const { Cell::new(1) };\n+/// }\n+///\n+/// FOO.with(|foo| assert_eq!(foo.get(), 1));\n /// ```\n ///\n /// See [`LocalKey` documentation][`std::thread::LocalKey`] for more"}]}