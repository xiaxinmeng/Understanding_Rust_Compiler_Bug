{"sha": "0c3be014ec7108df4bb6460b54fdf46314e059a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjM2JlMDE0ZWM3MTA4ZGY0YmI2NDYwYjU0ZmRmNDYzMTRlMDU5YTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-30T10:38:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-30T10:38:37Z"}, "message": "Simplify", "tree": {"sha": "68ff56bc1ebe5980308b3e045c9dea0f7751949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ff56bc1ebe5980308b3e045c9dea0f7751949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3be014ec7108df4bb6460b54fdf46314e059a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3be014ec7108df4bb6460b54fdf46314e059a7", "html_url": "https://github.com/rust-lang/rust/commit/0c3be014ec7108df4bb6460b54fdf46314e059a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3be014ec7108df4bb6460b54fdf46314e059a7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d975320200e7d399661f04a0ba34b2fd0ba639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d975320200e7d399661f04a0ba34b2fd0ba639b", "html_url": "https://github.com/rust-lang/rust/commit/9d975320200e7d399661f04a0ba34b2fd0ba639b"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "30b22f51df71b3606147a02c5a1fb53fc2f8f948", "filename": "crates/hir_def/src/import_map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0c3be014ec7108df4bb6460b54fdf46314e059a7/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3be014ec7108df4bb6460b54fdf46314e059a7/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=0c3be014ec7108df4bb6460b54fdf46314e059a7", "patch": "@@ -432,6 +432,7 @@ fn item_import_kind(item: ItemInNs) -> Option<ImportKind> {\n mod tests {\n     use base_db::{fixture::WithFixture, SourceDatabase, Upcast};\n     use expect_test::{expect, Expect};\n+    use stdx::format_to;\n \n     use crate::{data::FunctionData, test_db::TestDB, AssocContainerId, Lookup};\n \n@@ -467,9 +468,10 @@ mod tests {\n                             if let ItemInNs::Types(ModuleDefId::FunctionId(function_id))\n                             | ItemInNs::Values(ModuleDefId::FunctionId(function_id)) = item\n                             {\n-                                full_path += &format!(\n+                                format_to!(\n+                                    full_path,\n                                     \"::{}\",\n-                                    FunctionData::fn_data_query(&db, function_id).name\n+                                    FunctionData::fn_data_query(&db, function_id).name,\n                                 );\n                             }\n                             full_path"}]}