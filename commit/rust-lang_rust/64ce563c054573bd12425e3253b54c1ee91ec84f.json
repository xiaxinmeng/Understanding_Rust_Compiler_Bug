{"sha": "64ce563c054573bd12425e3253b54c1ee91ec84f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0Y2U1NjNjMDU0NTczYmQxMjQyNWUzMjUzYjU0YzFlZTkxZWM4NGY=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T09:00:21Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T09:00:21Z"}, "message": "Replacing str::unsafe_from_bytes with str::from_bytes (part 2)", "tree": {"sha": "6dc466712c7b91d84b450d265ac2e5301a9e4820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc466712c7b91d84b450d265ac2e5301a9e4820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64ce563c054573bd12425e3253b54c1ee91ec84f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64ce563c054573bd12425e3253b54c1ee91ec84f", "html_url": "https://github.com/rust-lang/rust/commit/64ce563c054573bd12425e3253b54c1ee91ec84f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64ce563c054573bd12425e3253b54c1ee91ec84f/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b23f9a86fcdf328ebb349d9a5ad4e4c7dfe6ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b23f9a86fcdf328ebb349d9a5ad4e4c7dfe6ce", "html_url": "https://github.com/rust-lang/rust/commit/c7b23f9a86fcdf328ebb349d9a5ad4e4c7dfe6ce"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6f3fd87466a6c84cb632212f00be1caaca6124d9", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64ce563c054573bd12425e3253b54c1ee91ec84f/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64ce563c054573bd12425e3253b54c1ee91ec84f/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=64ce563c054573bd12425e3253b54c1ee91ec84f", "patch": "@@ -85,7 +85,7 @@ fn readclose(fd: fd_t) -> str {\n     let buf = \"\";\n     while !reader.eof() {\n         let bytes = reader.read_bytes(4096u);\n-        buf += str::unsafe_from_bytes(bytes);\n+        buf += str::from_bytes(bytes);\n     }\n     os::fclose(file);\n     ret buf;\n@@ -114,8 +114,8 @@ fn worker(p: port<request>) {\n                 // the alt discriminant are wrong.\n                 alt recv(p) {\n                   exec(lib_path, prog, args, respchan) {\n-                    {lib_path: str::unsafe_from_bytes(lib_path),\n-                     prog: str::unsafe_from_bytes(prog),\n+                    {lib_path: str::from_bytes(lib_path),\n+                     prog: str::from_bytes(prog),\n                      args: clone_vecu8str(args),\n                      respchan: respchan}\n                   }\n@@ -189,7 +189,7 @@ fn clone_vecstr(v: [str]) -> [[u8]] {\n fn clone_vecu8str(v: [[u8]]) -> [str] {\n     let r = [];\n     for t in vec::slice(v, 0u, vec::len(v)) {\n-        r += [str::unsafe_from_bytes(t)];\n+        r += [str::from_bytes(t)];\n     }\n     ret r;\n }"}, {"sha": "eb91c2cb5d517e60d588e8606549d4ea9dbe7f57", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64ce563c054573bd12425e3253b54c1ee91ec84f/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64ce563c054573bd12425e3253b54c1ee91ec84f/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=64ce563c054573bd12425e3253b54c1ee91ec84f", "patch": "@@ -390,7 +390,7 @@ mod rt {\n     fn str_init_elt(n_elts: uint, c: char) -> str {\n         let svec = vec::init_elt::<u8>(n_elts, c as u8);\n \n-        ret str::unsafe_from_bytes(svec);\n+        ret str::from_bytes(svec);\n     }\n     enum pad_mode { pad_signed, pad_unsigned, pad_nozero, }\n     fn pad(cv: conv, s: str, mode: pad_mode) -> str {\n@@ -439,7 +439,7 @@ mod rt {\n         if signed && zero_padding && str::byte_len(s) > 0u {\n             let head = s[0];\n             if head == '+' as u8 || head == '-' as u8 || head == ' ' as u8 {\n-                let headstr = str::unsafe_from_bytes([head]);\n+                let headstr = str::from_bytes([head]);\n                 // FIXME: not UTF-8 safe\n                 let bytelen = str::byte_len(s);\n                 let numpart = str::substr(s, 1u, bytelen - 1u);"}]}