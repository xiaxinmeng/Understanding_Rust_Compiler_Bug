{"sha": "4ec9703467c6934bf0bc8be922f242226c32d0aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYzk3MDM0NjdjNjkzNGJmMGJjOGJlOTIyZjI0MjIyNmMzMmQwYWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-17T20:57:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-17T20:57:35Z"}, "message": "Rollup merge of #63669 - Dante-Broggi:patch-1, r=jonas-schievink\n\nfix typos in mir/interpret", "tree": {"sha": "ce84a235d00e830c186fc3892c8ab0fd2351d329", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce84a235d00e830c186fc3892c8ab0fd2351d329"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ec9703467c6934bf0bc8be922f242226c32d0aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdWGo/CRBK7hj4Ov3rIwAAdHIIAGAdCaw6bFnG6hsp4TenAUOJ\ngzuV8z/aHHKB0i3y923wpZDEbYjiLM5Sczzs2HtUFvDVtwsuC2vWcxSD3jJYCQVw\n5nRHuYUEBLMpmEm8laTH29iycWhBGast0/fvoc9Tj6FbOlgrqhBELyt7qoajhZzy\nV0qy3EwfkrgIsIsKyTwJkBJH3cFqwJX2O6eyRS3a+W+yZi9xLXAVyxoDAQUP/TJ9\nh1LKI52x6WQivD7uPBPeUEeksU/oEy4h9HuyM75rQml/u5aIvsn3uGVbdykT3qcP\n0ROpeoHz1HJLDoEvjc/eGizIWSS5H53si7v6lKfK7Je7C9ZeKwPsUu9MN8ty7f0=\n=/Y5J\n-----END PGP SIGNATURE-----\n", "payload": "tree ce84a235d00e830c186fc3892c8ab0fd2351d329\nparent b60f245b9542142ed01318a7ab5b46fc2ffb283e\nparent a7c34f1ce99887675f3d79740e2c9f739a89fe45\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1566075455 +0200\ncommitter GitHub <noreply@github.com> 1566075455 +0200\n\nRollup merge of #63669 - Dante-Broggi:patch-1, r=jonas-schievink\n\nfix typos in mir/interpret\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ec9703467c6934bf0bc8be922f242226c32d0aa", "html_url": "https://github.com/rust-lang/rust/commit/4ec9703467c6934bf0bc8be922f242226c32d0aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ec9703467c6934bf0bc8be922f242226c32d0aa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60f245b9542142ed01318a7ab5b46fc2ffb283e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60f245b9542142ed01318a7ab5b46fc2ffb283e", "html_url": "https://github.com/rust-lang/rust/commit/b60f245b9542142ed01318a7ab5b46fc2ffb283e"}, {"sha": "a7c34f1ce99887675f3d79740e2c9f739a89fe45", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c34f1ce99887675f3d79740e2c9f739a89fe45", "html_url": "https://github.com/rust-lang/rust/commit/a7c34f1ce99887675f3d79740e2c9f739a89fe45"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "84b4cd914563e6574a28d2d94392833d75dfb3be", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ec9703467c6934bf0bc8be922f242226c32d0aa/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ec9703467c6934bf0bc8be922f242226c32d0aa/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=4ec9703467c6934bf0bc8be922f242226c32d0aa", "patch": "@@ -306,7 +306,7 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n     ///\n     /// zsts can't be read out of two reasons:\n     /// * byteorder cannot work with zero element buffers\n-    /// * in oder to obtain a `Pointer` we need to check for ZSTness anyway due to integer pointers\n+    /// * in order to obtain a `Pointer` we need to check for ZSTness anyway due to integer pointers\n     ///   being valid for ZSTs\n     ///\n     /// It is the caller's responsibility to check bounds and alignment beforehand."}, {"sha": "87d36dabb04721b36508d673e9828f1164e4eaf4", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ec9703467c6934bf0bc8be922f242226c32d0aa/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ec9703467c6934bf0bc8be922f242226c32d0aa/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=4ec9703467c6934bf0bc8be922f242226c32d0aa", "patch": "@@ -297,7 +297,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n     /// and `align`. On success, returns `None` for zero-sized accesses (where\n     /// nothing else is left to do) and a `Pointer` to use for the actual access otherwise.\n     /// Crucially, if the input is a `Pointer`, we will test it for liveness\n-    /// *even of* the size is 0.\n+    /// *even if* the size is 0.\n     ///\n     /// Everyone accessing memory based on a `Scalar` should use this method to get the\n     /// `Pointer` they need. And even if you already have a `Pointer`, call this method"}]}