{"sha": "930f7790fbad87f1ddf26a34b089622bc8a742c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMGY3NzkwZmJhZDg3ZjFkZGYyNmEzNGIwODk2MjJiYzhhNzQyYzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-26T11:16:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-26T11:16:03Z"}, "message": "auto merge of #9497 : pnkfelix/rust/fsk-7752-use-fcnptr-for-glob-errfunc, r=cmr\n\nFix #7752.\r\n\r\n~~(The glob API is a little funky; I tried to make a small test for it, which I'll add to the end of this description, and its not clear whether globfree is supposed to free solely the structure allocated by glob itself, or if it is going to try to free more than that.)~~ (The previous note was a user-error: I was misusing the CString API.)\r\n\r\nAnyway, this seems to work in terms of calling errfunc where expected.)\r\n\r\n```rust\r\n#[allow(unused_imports)];\r\nuse std::libc::types::os::arch::c95::{c_char, c_int, size_t};\r\nuse std::libc::funcs::posix01::glob;\r\nuse std::libc::types::os::common::posix01::glob_t;\r\nuse std::libc::consts::os::posix01::{GLOB_APPEND, GLOB_DOOFFS, GLOB_ERR,\r\n                                     GLOB_MARK, GLOB_NOCHECK, GLOB_NOSORT,\r\n                                     GLOB_NOESCAPE, GLOB_NOSPACE,\r\n                                     GLOB_ABORTED, GLOB_NOMATCH};\r\nuse std::ptr;\r\nuse std::c_str;\r\n\r\n#[fixed_stack_segment]\r\nfn main() {\r\n    let mut g = glob_t {\r\n        gl_pathc:  0, // size_t,\r\n        __unused1: 0, // c_int,\r\n        gl_offs:   2, // size_t,\r\n        __unused2: 0, // c_int,\r\n        gl_pathv:  ptr::null(), // **c_char,\r\n\r\n        __unused3: ptr::null(), // *c_void,\r\n\r\n        __unused4: ptr::null(), // *c_void,\r\n        __unused5: ptr::null(), // *c_void,\r\n        __unused6: ptr::null(), // *c_void,\r\n        __unused7: ptr::null(), // *c_void,\r\n        __unused8: ptr::null(), // *c_void,\r\n    };\r\n\r\n    extern \"C\" fn errfunc(_epath: *c_char, _errno: int) -> int {\r\n        println!(\"errfunc called\");\r\n        return 0;\r\n    }\r\n\r\n    struct Reduced { pathc: size_t, offs: size_t, pathv: **c_char, }\r\n    impl Reduced {\r\n        fn from(g: &glob_t) -> Reduced {\r\n            Reduced {pathc: g.gl_pathc, offs: g.gl_offs, pathv: g.gl_pathv}\r\n        }\r\n    }\r\n\r\n    do (\"*.rs/*\").with_c_str |pat| {\r\n        println!(\"calling glob\");\r\n        unsafe { glob::glob(pat, GLOB_DOOFFS, errfunc, &mut g); }\r\n        println!(\"After glob call\");\r\n\r\n        println!(\"g: {:?}\", Reduced::from(&g));\r\n        for i in range(0, g.gl_pathc as int) {\r\n            unsafe {\r\n                let p : **c_char = ptr::offset(g.gl_pathv, g.gl_offs as int + i);\r\n                let x = c_str::CString::new(*p, false);\r\n                match x.as_str() {\r\n                    Some(s) => {\r\n                        println!(\"gl_pathc[{:d}]: {:?}\", i, s);\r\n                    }\r\n                    None => {\r\n                        println!(\"gl_pathc[{:d}]: unvalid\", i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    println!(\"calling globfree on g: {:?}\", g);\r\n    unsafe { glob::globfree(&mut g); }\r\n    println!(\"after globfree call\");\r\n\r\n}\r\n\r\n```", "tree": {"sha": "984e33a9e093bc45e1aadd7856338adf5102fea0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/984e33a9e093bc45e1aadd7856338adf5102fea0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/930f7790fbad87f1ddf26a34b089622bc8a742c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/930f7790fbad87f1ddf26a34b089622bc8a742c8", "html_url": "https://github.com/rust-lang/rust/commit/930f7790fbad87f1ddf26a34b089622bc8a742c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/930f7790fbad87f1ddf26a34b089622bc8a742c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8a69ec15dce8bed5827d02e92cdb9fe2857b829", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a69ec15dce8bed5827d02e92cdb9fe2857b829", "html_url": "https://github.com/rust-lang/rust/commit/a8a69ec15dce8bed5827d02e92cdb9fe2857b829"}, {"sha": "48b4b1f52c920f54ef13a739e3cd86cb7434bd9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/48b4b1f52c920f54ef13a739e3cd86cb7434bd9f", "html_url": "https://github.com/rust-lang/rust/commit/48b4b1f52c920f54ef13a739e3cd86cb7434bd9f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e772ade135ec346047f553ab6a2eefd7e60e5003", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/930f7790fbad87f1ddf26a34b089622bc8a742c8/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930f7790fbad87f1ddf26a34b089622bc8a742c8/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=930f7790fbad87f1ddf26a34b089622bc8a742c8", "patch": "@@ -3224,14 +3224,14 @@ pub mod funcs {\n         #[nolink]\n         #[abi = \"cdecl\"]\n         pub mod glob {\n-            use libc::types::common::c95::{c_void};\n             use libc::types::os::arch::c95::{c_char, c_int};\n             use libc::types::os::common::posix01::{glob_t};\n+            use option::Option;\n \n             extern {\n                 pub fn glob(pattern: *c_char,\n                             flags: c_int,\n-                            errfunc: *c_void, // XXX callback\n+                            errfunc: Option<extern \"C\" fn(epath: *c_char, errno: int) -> int>,\n                             pglob: *mut glob_t);\n                 pub fn globfree(pglob: *mut glob_t);\n             }"}]}