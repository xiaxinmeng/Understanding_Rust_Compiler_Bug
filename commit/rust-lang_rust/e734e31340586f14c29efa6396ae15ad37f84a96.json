{"sha": "e734e31340586f14c29efa6396ae15ad37f84a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MzRlMzEzNDA1ODZmMTRjMjllZmE2Mzk2YWUxNWFkMzdmODRhOTY=", "commit": {"author": {"name": "Julian Wollersberger", "email": "24991778+Julian-Wollersberger@users.noreply.github.com", "date": "2020-04-25T18:19:54Z"}, "committer": {"name": "Julian Wollersberger", "email": "24991778+Julian-Wollersberger@users.noreply.github.com", "date": "2020-05-09T11:46:03Z"}, "message": "Small doc improvements.\nThe phrasing is from the commit description of 395ee0b79f23b90593b01dd0a78451b8c93b0aa6 by @Matklad.", "tree": {"sha": "5e546609eeaf6e03bac7e3991c8f69c190bd1c9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e546609eeaf6e03bac7e3991c8f69c190bd1c9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e734e31340586f14c29efa6396ae15ad37f84a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e734e31340586f14c29efa6396ae15ad37f84a96", "html_url": "https://github.com/rust-lang/rust/commit/e734e31340586f14c29efa6396ae15ad37f84a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e734e31340586f14c29efa6396ae15ad37f84a96/comments", "author": {"login": "Julian-Wollersberger", "id": 24991778, "node_id": "MDQ6VXNlcjI0OTkxNzc4", "avatar_url": "https://avatars.githubusercontent.com/u/24991778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian-Wollersberger", "html_url": "https://github.com/Julian-Wollersberger", "followers_url": "https://api.github.com/users/Julian-Wollersberger/followers", "following_url": "https://api.github.com/users/Julian-Wollersberger/following{/other_user}", "gists_url": "https://api.github.com/users/Julian-Wollersberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian-Wollersberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian-Wollersberger/subscriptions", "organizations_url": "https://api.github.com/users/Julian-Wollersberger/orgs", "repos_url": "https://api.github.com/users/Julian-Wollersberger/repos", "events_url": "https://api.github.com/users/Julian-Wollersberger/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian-Wollersberger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Julian-Wollersberger", "id": 24991778, "node_id": "MDQ6VXNlcjI0OTkxNzc4", "avatar_url": "https://avatars.githubusercontent.com/u/24991778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian-Wollersberger", "html_url": "https://github.com/Julian-Wollersberger", "followers_url": "https://api.github.com/users/Julian-Wollersberger/followers", "following_url": "https://api.github.com/users/Julian-Wollersberger/following{/other_user}", "gists_url": "https://api.github.com/users/Julian-Wollersberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian-Wollersberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian-Wollersberger/subscriptions", "organizations_url": "https://api.github.com/users/Julian-Wollersberger/orgs", "repos_url": "https://api.github.com/users/Julian-Wollersberger/repos", "events_url": "https://api.github.com/users/Julian-Wollersberger/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian-Wollersberger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d6b446e56d90ae34048a2e31eb1e39dbda2a1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d6b446e56d90ae34048a2e31eb1e39dbda2a1b", "html_url": "https://github.com/rust-lang/rust/commit/34d6b446e56d90ae34048a2e31eb1e39dbda2a1b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "e44feee96607a7d4d0eaf669945bf8fa1c29b5d0", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e734e31340586f14c29efa6396ae15ad37f84a96/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e734e31340586f14c29efa6396ae15ad37f84a96/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=e734e31340586f14c29efa6396ae15ad37f84a96", "patch": "@@ -1,5 +1,11 @@\n //! Low-level Rust lexer.\n //!\n+//! The idea with `librustc_lexer` is to make a reusable library,\n+//! by separating out pure lexing and rustc-specific concerns, like spans,\n+//! error reporting an interning.  So, rustc_lexer operates directly on `&str`,\n+//! produces simple tokens which are a pair of type-tag and a bit of original text,\n+//! and does not report errors, instead storing them as flags on the token.\n+//!\n //! Tokens produced by this lexer are not yet ready for parsing the Rust syntax,\n //! for that see `librustc_parse::lexer`, which converts this basic token stream\n //! into wide tokens used by actual parser.\n@@ -719,6 +725,9 @@ impl Cursor<'_> {\n \n             // Check that amount of closing '#' symbols\n             // is equal to the amount of opening ones.\n+            // Note that this will not consume extra trailing `#` characters:\n+            // `r###\"abcde\"####` is lexed as a `LexedRawString { n_hashes: 3 }`\n+            // followed by a `#` token.\n             let mut hashes_left = n_start_hashes;\n             let is_closing_hash = |c| {\n                 if c == '#' && hashes_left != 0 {\n@@ -739,8 +748,8 @@ impl Cursor<'_> {\n                     possible_terminator_offset: None,\n                 };\n             } else if n_end_hashes > max_hashes {\n-                // Keep track of possible terminators to give a hint about where there might be\n-                // a missing terminator\n+                // Keep track of possible terminators to give a hint about\n+                // where there might be a missing terminator\n                 possible_terminator_offset =\n                     Some(self.len_consumed() - start_pos - n_end_hashes + prefix_len);\n                 max_hashes = n_end_hashes;"}]}