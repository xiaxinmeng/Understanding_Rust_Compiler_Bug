{"sha": "a8fa1a153d332d31d7d95ce303bf2b347b7a03c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZmExYTE1M2QzMzJkMzFkN2Q5NWNlMzAzYmYyYjM0N2I3YTAzYzU=", "commit": {"author": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-03-15T16:58:48Z"}, "committer": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-03-15T16:58:48Z"}, "message": "a simple refactoring and removing comment.", "tree": {"sha": "dbc6d7afba8bb38fb48edaa7c4003059b409affd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbc6d7afba8bb38fb48edaa7c4003059b409affd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5", "html_url": "https://github.com/rust-lang/rust/commit/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5/comments", "author": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50af62dae912d2b0ea24aef649bce7be8b7040a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/50af62dae912d2b0ea24aef649bce7be8b7040a8", "html_url": "https://github.com/rust-lang/rust/commit/50af62dae912d2b0ea24aef649bce7be8b7040a8"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "44bcb9de0e1578dee06dbe23542bd3f116c55033", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa1a153d332d31d7d95ce303bf2b347b7a03c5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=a8fa1a153d332d31d7d95ce303bf2b347b7a03c5", "patch": "@@ -678,10 +678,9 @@ fn all_constructors<'a, 'tcx: 'a>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n             ]\n         }\n         ty::Int(ity) => {\n-            // FIXME(49937): refactor these bit manipulations into interpret.\n             let bits = Integer::from_attr(&cx.tcx, SignedInt(ity)).size().bits() as u128;\n             let min = 1u128 << (bits - 1);\n-            let max = (1u128 << (bits - 1)) - 1;\n+            let max = min - 1;\n             vec![ConstantRange(min, max, pcx.ty, RangeEnd::Included)]\n         }\n         ty::Uint(uty) => {"}]}