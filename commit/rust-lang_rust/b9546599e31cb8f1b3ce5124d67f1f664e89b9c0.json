{"sha": "b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NTQ2NTk5ZTMxY2I4ZjFiM2NlNTEyNGQ2N2YxZjY2NGU4OWI5YzA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-10T16:44:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-10T17:02:59Z"}, "message": "Check for unused lifetimes in bounds (fixes #489)", "tree": {"sha": "68c778fa41cd19fa1d20128561c57e3910a7c84f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c778fa41cd19fa1d20128561c57e3910a7c84f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "html_url": "https://github.com/rust-lang/rust/commit/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b865e30b49f3f0fb914ab82d152fae0f608ed540", "url": "https://api.github.com/repos/rust-lang/rust/commits/b865e30b49f3f0fb914ab82d152fae0f608ed540", "html_url": "https://github.com/rust-lang/rust/commit/b865e30b49f3f0fb914ab82d152fae0f608ed540"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "3edffc3bee35d3a668b87ade3cb31f8c354d4162", "filename": "src/lifetimes.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "patch": "@@ -2,7 +2,7 @@ use rustc_front::hir::*;\n use reexport::*;\n use rustc::lint::*;\n use syntax::codemap::Span;\n-use rustc_front::intravisit::{Visitor, walk_ty, walk_ty_param_bound, walk_fn_decl};\n+use rustc_front::intravisit::{Visitor, walk_ty, walk_ty_param_bound, walk_fn_decl, walk_generics};\n use rustc::middle::def::Def::{DefTy, DefTrait, DefStruct};\n use std::collections::{HashSet, HashMap};\n \n@@ -64,7 +64,7 @@ fn check_fn_inner(cx: &LateContext, decl: &FnDecl, slf: Option<&ExplicitSelf>,\n         span_lint(cx, NEEDLESS_LIFETIMES, span,\n                   \"explicit lifetimes given in parameter types where they could be elided\");\n     }\n-    report_extra_lifetimes(cx, decl, &generics.lifetimes);\n+    report_extra_lifetimes(cx, decl, &generics);\n }\n \n fn could_use_elision(cx: &LateContext, func: &FnDecl, slf: Option<&ExplicitSelf>,\n@@ -276,12 +276,23 @@ impl<'v> Visitor<'v> for LifetimeChecker {\n     fn visit_lifetime(&mut self, lifetime: &'v Lifetime) {\n         self.0.remove(&lifetime.name);\n     }\n+\n+    fn visit_lifetime_def(&mut self, _: &'v LifetimeDef) {\n+        // don't actually visit `<'a>` or `<'a: 'b>`\n+        // we've already visited the `'a` declarations and\n+        // don't want to spuriously remove them\n+        // `'b` in `'a: 'b` is useless unless used elsewhere in\n+        // a non-lifetime bound\n+    }\n }\n \n fn report_extra_lifetimes(cx: &LateContext, func: &FnDecl,\n-                          named_lts: &[LifetimeDef]) {\n-    let hs = named_lts.iter().map(|lt| (lt.lifetime.name, lt.lifetime.span)).collect();\n+                          generics: &Generics) {\n+    let hs = generics.lifetimes.iter()\n+                     .map(|lt| (lt.lifetime.name, lt.lifetime.span))\n+                     .collect();\n     let mut checker = LifetimeChecker(hs);\n+    walk_generics(&mut checker, generics);\n     walk_fn_decl(&mut checker, func);\n     for (_, v) in checker.0 {\n         span_lint(cx, UNUSED_LIFETIMES, v,"}, {"sha": "85667174509e2f96f5e0468df97edeb2331a80b6", "filename": "tests/compile-fail/unused_lt.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0/tests%2Fcompile-fail%2Funused_lt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9546599e31cb8f1b3ce5124d67f1f664e89b9c0/tests%2Fcompile-fail%2Funused_lt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funused_lt.rs?ref=b9546599e31cb8f1b3ce5124d67f1f664e89b9c0", "patch": "@@ -43,6 +43,15 @@ impl<'a> Foo<'a> for u8 {\n \n     }\n }\n+\n+// test for #489 (used lifetimes in bounds)\n+pub fn parse<'a, I: Iterator<Item=&'a str>>(_it: &mut I) {\n+    unimplemented!()\n+}\n+pub fn parse2<'a, I>(_it: &mut I) where I: Iterator<Item=&'a str>{\n+    unimplemented!()\n+}\n+\n fn main() {\n \n }"}]}