{"sha": "cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNGZmYzE5NDVhM2ExY2E4OTc3NmU5YWJkY2Q2MGIxODk2ZjM1NmM=", "commit": {"author": {"name": "Julian Wollersberger", "email": "24991778+Julian-Wollersberger@users.noreply.github.com", "date": "2020-05-24T11:12:16Z"}, "committer": {"name": "Julian Wollersberger", "email": "24991778+Julian-Wollersberger@users.noreply.github.com", "date": "2020-05-24T11:12:16Z"}, "message": "Update to rustc_lexer version 660.\nChange `unescape_*()` to `unescape_literal()`.", "tree": {"sha": "3cc68201608e9981ee6d116918478e59e202f86e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cc68201608e9981ee6d116918478e59e202f86e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "html_url": "https://github.com/rust-lang/rust/commit/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/comments", "author": {"login": "Julian-Wollersberger", "id": 24991778, "node_id": "MDQ6VXNlcjI0OTkxNzc4", "avatar_url": "https://avatars.githubusercontent.com/u/24991778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian-Wollersberger", "html_url": "https://github.com/Julian-Wollersberger", "followers_url": "https://api.github.com/users/Julian-Wollersberger/followers", "following_url": "https://api.github.com/users/Julian-Wollersberger/following{/other_user}", "gists_url": "https://api.github.com/users/Julian-Wollersberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian-Wollersberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian-Wollersberger/subscriptions", "organizations_url": "https://api.github.com/users/Julian-Wollersberger/orgs", "repos_url": "https://api.github.com/users/Julian-Wollersberger/repos", "events_url": "https://api.github.com/users/Julian-Wollersberger/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian-Wollersberger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Julian-Wollersberger", "id": 24991778, "node_id": "MDQ6VXNlcjI0OTkxNzc4", "avatar_url": "https://avatars.githubusercontent.com/u/24991778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian-Wollersberger", "html_url": "https://github.com/Julian-Wollersberger", "followers_url": "https://api.github.com/users/Julian-Wollersberger/followers", "following_url": "https://api.github.com/users/Julian-Wollersberger/following{/other_user}", "gists_url": "https://api.github.com/users/Julian-Wollersberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian-Wollersberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian-Wollersberger/subscriptions", "organizations_url": "https://api.github.com/users/Julian-Wollersberger/orgs", "repos_url": "https://api.github.com/users/Julian-Wollersberger/repos", "events_url": "https://api.github.com/users/Julian-Wollersberger/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian-Wollersberger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f5fca10175b8d5fdfa36563c103f81b2b0acd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f5fca10175b8d5fdfa36563c103f81b2b0acd3", "html_url": "https://github.com/rust-lang/rust/commit/f4f5fca10175b8d5fdfa36563c103f81b2b0acd3"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "a511e0d2804952c32ff204259e3340b40cf5c159", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "patch": "@@ -1398,9 +1398,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"656.0.0\"\n+version = \"660.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9cbba98ec46e96a4663197dfa8c0378752de2006e314e5400c0ca74929d6692f\"\n+checksum = \"30760dbcc7667c9e0da561e980e24867ca7f4526ce060a3d7e6d9dcfeaae88d1\"\n dependencies = [\n  \"unicode-xid\",\n ]"}, {"sha": "a9a5cc7bc6ed0f5a2bace87c98ad9c57d847224e", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "patch": "@@ -13,7 +13,7 @@ doctest = false\n [dependencies]\n itertools = \"0.9.0\"\n rowan = \"0.10.0\"\n-rustc_lexer = { version = \"656.0.0\", package = \"rustc-ap-rustc_lexer\" }\n+rustc_lexer = { version = \"660.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n arrayvec = \"0.5.1\"\n once_cell = \"1.3.1\""}, {"sha": "3cd6d99c38892e0512e0a5e9010ce7b4a0893080", "filename": "crates/ra_syntax/src/ast/tokens.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs?ref=cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "patch": "@@ -6,6 +6,7 @@ use crate::{\n     ast::{AstToken, Comment, RawString, String, Whitespace},\n     TextRange, TextSize,\n };\n+use rustc_lexer::unescape::{unescape_literal, Mode};\n \n impl Comment {\n     pub fn kind(&self) -> CommentKind {\n@@ -147,7 +148,7 @@ impl HasStringValue for String {\n \n         let mut buf = std::string::String::with_capacity(text.len());\n         let mut has_error = false;\n-        rustc_lexer::unescape::unescape_str(text, &mut |_, unescaped_char| match unescaped_char {\n+        unescape_literal(text, Mode::Str, &mut |_, unescaped_char| match unescaped_char {\n             Ok(c) => buf.push(c),\n             Err(_) => has_error = true,\n         });\n@@ -498,7 +499,7 @@ impl HasFormatSpecifier for String {\n         let offset = self.text_range_between_quotes()?.start() - self.syntax().text_range().start();\n \n         let mut res = Vec::with_capacity(text.len());\n-        rustc_lexer::unescape::unescape_str(text, &mut |range, unescaped_char| {\n+        unescape_literal(text, Mode::Str, &mut |range, unescaped_char| {\n             res.push((\n                 TextRange::new(range.start.try_into().unwrap(), range.end.try_into().unwrap())\n                     + offset,"}, {"sha": "436ab033dc8b0fb2a4f1f09ca61068ee24579250", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4ffc1945a3a1ca89776e9abdcd60b1896f356c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=cd4ffc1945a3a1ca89776e9abdcd60b1896f356c", "patch": "@@ -2,15 +2,15 @@\n \n mod block;\n \n-use std::convert::TryFrom;\n-\n-use rustc_lexer::unescape;\n-\n use crate::{\n     ast, match_ast, AstNode, SyntaxError,\n     SyntaxKind::{BYTE, BYTE_STRING, CHAR, CONST_DEF, FN_DEF, INT_NUMBER, STRING, TYPE_ALIAS_DEF},\n     SyntaxNode, SyntaxToken, TextSize, T,\n };\n+use rustc_lexer::unescape::{\n+    self, unescape_byte, unescape_byte_literal, unescape_char, unescape_literal, Mode,\n+};\n+use std::convert::TryFrom;\n \n fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n     use unescape::EscapeError as EE;\n@@ -121,18 +121,18 @@ fn validate_literal(literal: ast::Literal, acc: &mut Vec<SyntaxError>) {\n \n     match token.kind() {\n         BYTE => {\n-            if let Some(Err(e)) = unquote(text, 2, '\\'').map(unescape::unescape_byte) {\n+            if let Some(Err(e)) = unquote(text, 2, '\\'').map(unescape_byte) {\n                 push_err(2, e);\n             }\n         }\n         CHAR => {\n-            if let Some(Err(e)) = unquote(text, 1, '\\'').map(unescape::unescape_char) {\n+            if let Some(Err(e)) = unquote(text, 1, '\\'').map(unescape_char) {\n                 push_err(1, e);\n             }\n         }\n         BYTE_STRING => {\n             if let Some(without_quotes) = unquote(text, 2, '\"') {\n-                unescape::unescape_byte_str(without_quotes, &mut |range, char| {\n+                unescape_byte_literal(without_quotes, Mode::ByteStr, &mut |range, char| {\n                     if let Err(err) = char {\n                         push_err(2, (range.start, err));\n                     }\n@@ -141,7 +141,7 @@ fn validate_literal(literal: ast::Literal, acc: &mut Vec<SyntaxError>) {\n         }\n         STRING => {\n             if let Some(without_quotes) = unquote(text, 1, '\"') {\n-                unescape::unescape_str(without_quotes, &mut |range, char| {\n+                unescape_literal(without_quotes, Mode::Str, &mut |range, char| {\n                     if let Err(err) = char {\n                         push_err(1, (range.start, err));\n                     }"}]}