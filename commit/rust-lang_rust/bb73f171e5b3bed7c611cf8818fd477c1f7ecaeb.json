{"sha": "bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb", "node_id": "C_kwDOAAsO6NoAKGJiNzNmMTcxZTViM2JlZDdjNjExY2Y4ODE4ZmQ0NzdjMWY3ZWNhZWI", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-15T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-22T15:00:49Z"}, "message": "Inline `DebruijnIndex` methods", "tree": {"sha": "7ef96fe4ee430a3f6faedfa52b86c8068988c561", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ef96fe4ee430a3f6faedfa52b86c8068988c561"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb", "html_url": "https://github.com/rust-lang/rust/commit/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41419e70366962c9a878bfe673ef4df38db6f7f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/41419e70366962c9a878bfe673ef4df38db6f7f1", "html_url": "https://github.com/rust-lang/rust/commit/41419e70366962c9a878bfe673ef4df38db6f7f1"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "791e9e0f5a3592bac49032854ac7462b41212878", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=bb73f171e5b3bed7c611cf8818fd477c1f7ecaeb", "patch": "@@ -310,25 +310,29 @@ impl DebruijnIndex {\n     ///    for<'a> fn(for<'b> fn(&'a x))\n     ///\n     /// you would need to shift the index for `'a` into a new binder.\n+    #[inline]\n     #[must_use]\n     pub fn shifted_in(self, amount: u32) -> DebruijnIndex {\n         DebruijnIndex::from_u32(self.as_u32() + amount)\n     }\n \n     /// Update this index in place by shifting it \"in\" through\n     /// `amount` number of binders.\n+    #[inline]\n     pub fn shift_in(&mut self, amount: u32) {\n         *self = self.shifted_in(amount);\n     }\n \n     /// Returns the resulting index when this value is moved out from\n     /// `amount` number of new binders.\n+    #[inline]\n     #[must_use]\n     pub fn shifted_out(self, amount: u32) -> DebruijnIndex {\n         DebruijnIndex::from_u32(self.as_u32() - amount)\n     }\n \n     /// Update in place by shifting out from `amount` binders.\n+    #[inline]\n     pub fn shift_out(&mut self, amount: u32) {\n         *self = self.shifted_out(amount);\n     }\n@@ -353,6 +357,7 @@ impl DebruijnIndex {\n     /// If we invoke `shift_out_to_binder` and the region is in fact\n     /// bound by one of the binders we are shifting out of, that is an\n     /// error (and should fail an assertion failure).\n+    #[inline]\n     pub fn shifted_out_to_binder(self, to_binder: DebruijnIndex) -> Self {\n         self.shifted_out(to_binder.as_u32() - INNERMOST.as_u32())\n     }"}]}