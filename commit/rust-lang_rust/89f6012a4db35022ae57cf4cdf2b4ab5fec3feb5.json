{"sha": "89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZjYwMTJhNGRiMzUwMjJhZTU3Y2Y0Y2RmMmI0YWI1ZmVjM2ZlYjU=", "commit": {"author": {"name": "Andre Bogus", "email": "andre.bogus@aleph-alpha.de", "date": "2020-04-08T22:05:20Z"}, "committer": {"name": "Andre Bogus", "email": "andre.bogus@aleph-alpha.de", "date": "2020-04-10T15:01:56Z"}, "message": "compare with the second largest instead of the smallest variant", "tree": {"sha": "59174aa4b88b864af347dde41070a20fccc2ba24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59174aa4b88b864af347dde41070a20fccc2ba24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "html_url": "https://github.com/rust-lang/rust/commit/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5/comments", "author": null, "committer": null, "parents": [{"sha": "d342cee78703c46d9df09088f9fb99ba85d021ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/d342cee78703c46d9df09088f9fb99ba85d021ae", "html_url": "https://github.com/rust-lang/rust/commit/d342cee78703c46d9df09088f9fb99ba85d021ae"}], "stats": {"total": 60, "additions": 14, "deletions": 46}, "files": [{"sha": "00bbba64841a997b5eabd36c4f9d67c955413414", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "patch": "@@ -12,10 +12,13 @@ declare_clippy_lint! {\n     /// `enum`s.\n     ///\n     /// **Why is this bad?** Enum size is bounded by the largest variant. Having a\n-    /// large variant\n-    /// can penalize the memory layout of that enum.\n+    /// large variant can penalize the memory layout of that enum.\n     ///\n-    /// **Known problems:** None.\n+    /// **Known problems:** This lint obviously cannot take the distribution of\n+    /// variants in your running program into account. It is possible that the\n+    /// smaller variants make up less than 1% of all instances, in which case\n+    /// the overhead is negligible and the boxing is counter-productive. Always\n+    /// measure the change this lint suggests.\n     ///\n     /// **Example:**\n     /// ```rust\n@@ -52,8 +55,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LargeEnumVariant {\n             let ty = cx.tcx.type_of(did);\n             let adt = ty.ty_adt_def().expect(\"already checked whether this is an enum\");\n \n-            let mut smallest_variant: Option<(_, _)> = None;\n             let mut largest_variant: Option<(_, _)> = None;\n+            let mut second_variant: Option<(_, _)> = None;\n \n             for (i, variant) in adt.variants.iter().enumerate() {\n                 let size: u64 = variant\n@@ -69,12 +72,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LargeEnumVariant {\n \n                 let grouped = (size, (i, variant));\n \n-                update_if(&mut smallest_variant, grouped, |a, b| b.0 <= a.0);\n-                update_if(&mut largest_variant, grouped, |a, b| b.0 >= a.0);\n+                if grouped.0 >= largest_variant.map_or(0, |x| x.0) {\n+                    second_variant = largest_variant;\n+                    largest_variant = Some(grouped);\n+                }\n             }\n \n-            if let (Some(smallest), Some(largest)) = (smallest_variant, largest_variant) {\n-                let difference = largest.0 - smallest.0;\n+            if let (Some(largest), Some(second)) = (largest_variant, second_variant) {\n+                let difference = largest.0 - second.0;\n \n                 if difference > self.maximum_size_difference_allowed {\n                     let (i, variant) = largest.1;\n@@ -114,16 +119,3 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LargeEnumVariant {\n         }\n     }\n }\n-\n-fn update_if<T, F>(old: &mut Option<T>, new: T, f: F)\n-where\n-    F: Fn(&T, &T) -> bool,\n-{\n-    if let Some(ref mut val) = *old {\n-        if f(val, &new) {\n-            *val = new;\n-        }\n-    } else {\n-        *old = Some(new);\n-    }\n-}"}, {"sha": "5d659611533a5c42450e753a88317af8828f7eeb", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=89f6012a4db35022ae57cf4cdf2b4ab5fec3feb5", "patch": "@@ -10,18 +10,6 @@ help: consider boxing the large fields to reduce the total size of the enum\n LL |     B(Box<[i32; 8000]>),\n    |       ^^^^^^^^^^^^^^^^\n \n-error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:18:5\n-   |\n-LL |     C(T, [i32; 8000]),\n-   |     ^^^^^^^^^^^^^^^^^\n-   |\n-help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:18:5\n-   |\n-LL |     C(T, [i32; 8000]),\n-   |     ^^^^^^^^^^^^^^^^^\n-\n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:31:5\n    |\n@@ -33,18 +21,6 @@ help: consider boxing the large fields to reduce the total size of the enum\n LL |     ContainingLargeEnum(Box<LargeEnum>),\n    |                         ^^^^^^^^^^^^^^\n \n-error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:34:5\n-   |\n-LL |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:34:5\n-   |\n-LL |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:41:5\n    |\n@@ -68,5 +44,5 @@ help: consider boxing the large fields to reduce the total size of the enum\n LL |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n    |                           ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n "}]}