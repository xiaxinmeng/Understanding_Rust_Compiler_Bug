{"sha": "4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMjZmMTRjYmIxZWNmYmM3YzFmZjdlNmM0YjcwMzBiMTQ3MGE1OGE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-16T15:38:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-16T15:38:57Z"}, "message": "Rollup merge of #62702 - fakenine:normalize_use_of_backticks_compiler_messages_p5, r=Centril\n\nnormalize use of backticks in compiler messages for libsyntax_ext\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "16d958c6353ea3a01403321bc52400adcbc50434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16d958c6353ea3a01403321bc52400adcbc50434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdLe+RCRBK7hj4Ov3rIwAAdHIIAABkCsc7LcBT3U3z0FlLb9KY\nb6j8Qgj38bpjVKHOstCqiNBeon2WLE6eealVgA/WJQzwUU/c11cAp/PshleXxAcT\npdWb+Dg1js2w++VtKY3w2ut7G8hsr4z0JgwayQ0GgOuWWv3nkyyemt94i6yX+P3n\nQ1joRxaV+qFRJHuPCFfSO9/H36OEfR5AboMYKIj0JOryvqYaUDh0iXfj7TizECPG\ntJpAe3M8jpk5u1qjZEvl6FfHtPVm/USrj2+UOw3fwKtpJpNaXz+OeNWcscenLYWK\n2YPdF8ct53UDv8Y3+vzVhoOhQr86ybat8WRElSkdRn28nrXzA5nV9Q+Yi1pKIIs=\n=skGk\n-----END PGP SIGNATURE-----\n", "payload": "tree 16d958c6353ea3a01403321bc52400adcbc50434\nparent e47cb534df7dbe45be336f74efa62eb830edf705\nparent a36763af8a2015566c94a1c0ca6376a24a2355e6\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563291537 -0400\ncommitter GitHub <noreply@github.com> 1563291537 -0400\n\nRollup merge of #62702 - fakenine:normalize_use_of_backticks_compiler_messages_p5, r=Centril\n\nnormalize use of backticks in compiler messages for libsyntax_ext\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "html_url": "https://github.com/rust-lang/rust/commit/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47cb534df7dbe45be336f74efa62eb830edf705", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47cb534df7dbe45be336f74efa62eb830edf705", "html_url": "https://github.com/rust-lang/rust/commit/e47cb534df7dbe45be336f74efa62eb830edf705"}, {"sha": "a36763af8a2015566c94a1c0ca6376a24a2355e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a36763af8a2015566c94a1c0ca6376a24a2355e6", "html_url": "https://github.com/rust-lang/rust/commit/a36763af8a2015566c94a1c0ca6376a24a2355e6"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9a890a06e0396ba24c495198b44ba9e4d742e204", "filename": "src/libsyntax_ext/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs?ref=4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "patch": "@@ -73,7 +73,7 @@ pub fn expand_deriving_clone(cx: &mut ExtCtxt<'_>,\n             }\n         }\n \n-        _ => cx.span_bug(span, \"#[derive(Clone)] on trait item or impl item\"),\n+        _ => cx.span_bug(span, \"`#[derive(Clone)]` on trait item or impl item\"),\n     }\n \n     let inline = cx.meta_word(span, sym::inline);"}, {"sha": "4386fe8cfa2d699d91223e59e200b41f97c03348", "filename": "src/libsyntax_ext/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Flibsyntax_ext%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Flibsyntax_ext%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest.rs?ref=4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "patch": "@@ -42,12 +42,12 @@ pub fn expand_test_or_bench(\n         if let Annotatable::Item(i) = item { i }\n         else {\n             cx.parse_sess.span_diagnostic.span_fatal(item.span(),\n-                \"#[test] attribute is only allowed on non associated functions\").raise();\n+                \"`#[test]` attribute is only allowed on non associated functions\").raise();\n         };\n \n     if let ast::ItemKind::Mac(_) = item.node {\n         cx.parse_sess.span_diagnostic.span_warn(item.span,\n-            \"#[test] attribute should not be used on macros. Use #[cfg(test)] instead.\");\n+            \"`#[test]` attribute should not be used on macros. Use `#[cfg(test)]` instead.\");\n         return vec![Annotatable::Item(item)];\n     }\n \n@@ -167,7 +167,7 @@ pub fn expand_test_or_bench(\n         ast::ItemKind::ExternCrate(Some(sym::test))\n     );\n \n-    log::debug!(\"Synthetic test item:\\n{}\\n\", pprust::item_to_string(&test_const));\n+    log::debug!(\"synthetic test item:\\n{}\\n\", pprust::item_to_string(&test_const));\n \n     vec![\n         // Access to libtest under a gensymed name"}, {"sha": "e475f5b4a75a515f7d97b02a1583ce120617bc94", "filename": "src/test/ui/test-attr-non-associated-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs?ref=4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "patch": "@@ -6,7 +6,7 @@ struct A {}\n \n impl A {\n     #[test]\n-    fn new() -> A { //~ ERROR #[test] attribute is only allowed on non associated functions\n+    fn new() -> A { //~ ERROR `#[test]` attribute is only allowed on non associated functions\n         A {}\n     }\n }"}, {"sha": "cb3ae51823e45bd993f6500b2f54613be44306ee", "filename": "src/test/ui/test-attr-non-associated-functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr?ref=4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "patch": "@@ -1,4 +1,4 @@\n-error: #[test] attribute is only allowed on non associated functions\n+error: `#[test]` attribute is only allowed on non associated functions\n   --> $DIR/test-attr-non-associated-functions.rs:9:5\n    |\n LL | /     fn new() -> A {"}, {"sha": "256a41722fa956534e09d2b713d65b83a44c3f37", "filename": "src/test/ui/test-on-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a/src%2Ftest%2Fui%2Ftest-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-on-macro.stderr?ref=4226f14cbb1ecfbc7c1ff7e6c4b7030b1470a58a", "patch": "@@ -1,4 +1,4 @@\n-warning: #[test] attribute should not be used on macros. Use #[cfg(test)] instead.\n+warning: `#[test]` attribute should not be used on macros. Use `#[cfg(test)]` instead.\n   --> $DIR/test-on-macro.rs:11:1\n    |\n LL | foo!();"}]}