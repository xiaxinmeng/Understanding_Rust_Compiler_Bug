{"sha": "0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MDlhMGEzNGU5YjE3MWQ3ZWQ3ZWEzZTJhNzA2Yzg1YzliNjk0MzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-06T11:24:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-06T11:24:13Z"}, "message": "Move Query", "tree": {"sha": "a1ae6c63bd2d849a18069981115b7b6f5305747a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ae6c63bd2d849a18069981115b7b6f5305747a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "html_url": "https://github.com/rust-lang/rust/commit/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad247aa67061f4dcba85e20b82ca47e9a86eff56", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad247aa67061f4dcba85e20b82ca47e9a86eff56", "html_url": "https://github.com/rust-lang/rust/commit/ad247aa67061f4dcba85e20b82ca47e9a86eff56"}], "stats": {"total": 83, "additions": 42, "deletions": 41}, "files": [{"sha": "c66eeb8e22b0b9c13c40e5c14b2282892218a5f6", "filename": "crates/ra_ide/src/ide_db/symbol_index.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433/crates%2Fra_ide%2Fsrc%2Fide_db%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433/crates%2Fra_ide%2Fsrc%2Fide_db%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fide_db%2Fsymbol_index.rs?ref=0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "patch": "@@ -40,7 +40,47 @@ use ra_syntax::{\n #[cfg(not(feature = \"wasm\"))]\n use rayon::prelude::*;\n \n-use crate::{ide_db::RootDatabase, Query};\n+use crate::ide_db::RootDatabase;\n+\n+#[derive(Debug)]\n+pub struct Query {\n+    query: String,\n+    lowercased: String,\n+    only_types: bool,\n+    libs: bool,\n+    exact: bool,\n+    limit: usize,\n+}\n+\n+impl Query {\n+    pub fn new(query: String) -> Query {\n+        let lowercased = query.to_lowercase();\n+        Query {\n+            query,\n+            lowercased,\n+            only_types: false,\n+            libs: false,\n+            exact: false,\n+            limit: usize::max_value(),\n+        }\n+    }\n+\n+    pub fn only_types(&mut self) {\n+        self.only_types = true;\n+    }\n+\n+    pub fn libs(&mut self) {\n+        self.libs = true;\n+    }\n+\n+    pub fn exact(&mut self) {\n+        self.exact = true;\n+    }\n+\n+    pub fn limit(&mut self, limit: usize) {\n+        self.limit = limit\n+    }\n+}\n \n #[salsa::query_group(SymbolsDatabaseStorage)]\n pub(crate) trait SymbolsDatabase: hir::db::HirDatabase {"}, {"sha": "109b5ad9f947c46c88dfefa6efead0df6a7d5e74", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 40, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0509a0a34e9b171d7ed7ea3e2a706c85c9b69433/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=0509a0a34e9b171d7ed7ea3e2a706c85c9b69433", "patch": "@@ -78,6 +78,7 @@ pub use crate::{\n         feature_flags::FeatureFlags,\n         line_index::{LineCol, LineIndex},\n         line_index_utils::translate_offset_with_edit,\n+        symbol_index::Query,\n     },\n     inlay_hints::{InlayHint, InlayKind},\n     references::{\n@@ -103,46 +104,6 @@ pub struct Diagnostic {\n     pub severity: Severity,\n }\n \n-#[derive(Debug)]\n-pub struct Query {\n-    query: String,\n-    lowercased: String,\n-    only_types: bool,\n-    libs: bool,\n-    exact: bool,\n-    limit: usize,\n-}\n-\n-impl Query {\n-    pub fn new(query: String) -> Query {\n-        let lowercased = query.to_lowercase();\n-        Query {\n-            query,\n-            lowercased,\n-            only_types: false,\n-            libs: false,\n-            exact: false,\n-            limit: usize::max_value(),\n-        }\n-    }\n-\n-    pub fn only_types(&mut self) {\n-        self.only_types = true;\n-    }\n-\n-    pub fn libs(&mut self) {\n-        self.libs = true;\n-    }\n-\n-    pub fn exact(&mut self) {\n-        self.exact = true;\n-    }\n-\n-    pub fn limit(&mut self, limit: usize) {\n-        self.limit = limit\n-    }\n-}\n-\n /// Info associated with a text range.\n #[derive(Debug)]\n pub struct RangeInfo<T> {"}]}