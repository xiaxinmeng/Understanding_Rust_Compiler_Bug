{"sha": "190367ba2ef1d279004b8372cf022b5fc96145dd", "node_id": "C_kwDOAAsO6NoAKDE5MDM2N2JhMmVmMWQyNzkwMDRiODM3MmNmMDIyYjVmYzk2MTQ1ZGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-03T04:14:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-03T04:14:07Z"}, "message": "Auto merge of #91339 - cbarrete:vecdeque-remove-grow-check, r=Mark-Simulacrum\n\nRemove unnecessary check in VecDeque::grow\n\nAll callers already check that the buffer is full before calling\n`grow()`. This is where it makes the most sense, since `grow()` is\n`inline(never)` and we don't want to pay for a function call just for\nthat check.\nIt could also be argued that it would be correct to call `grow()` even\nif the buffer wasn't full yet.\nThis change breaks no code since `grow()` is not `pub`.", "tree": {"sha": "f6128e18241f41eed7effa21ad74b8c879618dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6128e18241f41eed7effa21ad74b8c879618dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/190367ba2ef1d279004b8372cf022b5fc96145dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/190367ba2ef1d279004b8372cf022b5fc96145dd", "html_url": "https://github.com/rust-lang/rust/commit/190367ba2ef1d279004b8372cf022b5fc96145dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/190367ba2ef1d279004b8372cf022b5fc96145dd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff23ad3179014ba258f2b540fb39dd0f26852b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff23ad3179014ba258f2b540fb39dd0f26852b7a", "html_url": "https://github.com/rust-lang/rust/commit/ff23ad3179014ba258f2b540fb39dd0f26852b7a"}, {"sha": "29f5c98a1737b4fd86cd56ebbc5e1a5cab68d9ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f5c98a1737b4fd86cd56ebbc5e1a5cab68d9ca", "html_url": "https://github.com/rust-lang/rust/commit/29f5c98a1737b4fd86cd56ebbc5e1a5cab68d9ca"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "00862615c3c7acf8f8e68d1c527d4c60a9bc8223", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/190367ba2ef1d279004b8372cf022b5fc96145dd/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190367ba2ef1d279004b8372cf022b5fc96145dd/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=190367ba2ef1d279004b8372cf022b5fc96145dd", "patch": "@@ -2179,19 +2179,21 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         }\n     }\n \n+    // Double the buffer size. This method is inline(never), so we expect it to only\n+    // be called in cold paths.\n     // This may panic or abort\n     #[inline(never)]\n     fn grow(&mut self) {\n-        if self.is_full() {\n-            let old_cap = self.cap();\n-            // Double the buffer size.\n-            self.buf.reserve_exact(old_cap, old_cap);\n-            assert!(self.cap() == old_cap * 2);\n-            unsafe {\n-                self.handle_capacity_increase(old_cap);\n-            }\n-            debug_assert!(!self.is_full());\n+        // Extend or possibly remove this assertion when valid use-cases for growing the\n+        // buffer without it being full emerge\n+        debug_assert!(self.is_full());\n+        let old_cap = self.cap();\n+        self.buf.reserve_exact(old_cap, old_cap);\n+        assert!(self.cap() == old_cap * 2);\n+        unsafe {\n+            self.handle_capacity_increase(old_cap);\n         }\n+        debug_assert!(!self.is_full());\n     }\n \n     /// Modifies the `VecDeque` in-place so that `len()` is equal to `new_len`,"}]}