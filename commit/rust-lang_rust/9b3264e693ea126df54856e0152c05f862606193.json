{"sha": "9b3264e693ea126df54856e0152c05f862606193", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMzI2NGU2OTNlYTEyNmRmNTQ4NTZlMDE1MmMwNWY4NjI2MDYxOTM=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-06T12:42:48Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-06T12:42:48Z"}, "message": "Merge pull request #50 from Manishearth/precedence\n\nNow without errors, refactored precedence lint", "tree": {"sha": "25c36760adf42a8c7744b2131655a07ccec0cf06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25c36760adf42a8c7744b2131655a07ccec0cf06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b3264e693ea126df54856e0152c05f862606193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3264e693ea126df54856e0152c05f862606193", "html_url": "https://github.com/rust-lang/rust/commit/9b3264e693ea126df54856e0152c05f862606193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b3264e693ea126df54856e0152c05f862606193/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e3487f4a4d9701f36f14c38f824f312e39420e", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e3487f4a4d9701f36f14c38f824f312e39420e", "html_url": "https://github.com/rust-lang/rust/commit/39e3487f4a4d9701f36f14c38f824f312e39420e"}, {"sha": "23525081f951c92e4c8ad0b0bfed7a2b03c0531e", "url": "https://api.github.com/repos/rust-lang/rust/commits/23525081f951c92e4c8ad0b0bfed7a2b03c0531e", "html_url": "https://github.com/rust-lang/rust/commit/23525081f951c92e4c8ad0b0bfed7a2b03c0531e"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "8cde5104ff757a7dc0e0fbe4ab6afbe674846397", "filename": "src/misc.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9b3264e693ea126df54856e0152c05f862606193/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3264e693ea126df54856e0152c05f862606193/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=9b3264e693ea126df54856e0152c05f862606193", "patch": "@@ -183,23 +183,21 @@ impl LintPass for Precedence {\n \t\n \tfn check_expr(&mut self, cx: &Context, expr: &Expr) {\n \t\tif let ExprBinary(Spanned { node: op, ..}, ref left, ref right) = expr.node {\n-\t\t\tif is_bit_op(op) {\n-\t\t\t\tif let ExprBinary(Spanned { node: lop, ..}, _, _) = left.node {\n-\t\t\t\t\tif is_arith_op(lop) {\n-\t\t\t\t\t\tcx.span_lint(PRECEDENCE, expr.span, \"Operator precedence can trip the unwary. Please consider adding parenthesis to the subexpression to make the meaning more clear.\");\n-\t\t\t\t\t}\n-\t\t\t\t} else {\n-\t\t\t\t\tif let ExprBinary(Spanned { node: rop, ..}, _, _) = right.node {\n-\t\t\t\t\t\tif is_arith_op(rop) {\n-\t\t\t\t\t\t\tcx.span_lint(PRECEDENCE, expr.span, \"Operator precedence can trip the unwary. Please consider adding parenthesis to the subexpression to make the meaning more clear.\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\t\tif is_bit_op(op) && (is_arith_expr(left) || is_arith_expr(right)) {\n+\t\t\t\tcx.span_lint(PRECEDENCE, expr.span, \n+\t\t\t\t\t\"Operator precedence can trip the unwary. Consider adding parenthesis to the subexpression.\");\n \t\t\t}\n \t\t}\n \t}\n }\n \n+fn is_arith_expr(expr : &Expr) -> bool {\n+\tmatch expr.node {\n+\t\tExprBinary(Spanned { node: op, ..}, _, _) => is_arith_op(op),\n+\t\t_ => false\n+\t}\n+}\n+\n fn is_bit_op(op : BinOp_) -> bool {\n \tmatch op {\n \t\tBiBitXor | BiBitAnd | BiBitOr | BiShl | BiShr => true,"}]}