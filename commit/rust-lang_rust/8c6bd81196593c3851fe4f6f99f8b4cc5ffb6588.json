{"sha": "8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNmJkODExOTY1OTNjMzg1MWZlNGY2Zjk5ZjhiNGNjNWZmYjY1ODg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-09T12:57:23Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-09T12:57:23Z"}, "message": "Revert \"Ignore extra error from test for now\"\n\nThis reverts commit 6342aa62efd1b3aa7e1bc8f834f317290b11c519.", "tree": {"sha": "72521b2091c1dec95ef79dcadd5154c89f35250b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72521b2091c1dec95ef79dcadd5154c89f35250b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "html_url": "https://github.com/rust-lang/rust/commit/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32545a0460755727d8c91c6ddad173964128a74a", "url": "https://api.github.com/repos/rust-lang/rust/commits/32545a0460755727d8c91c6ddad173964128a74a", "html_url": "https://github.com/rust-lang/rust/commit/32545a0460755727d8c91c6ddad173964128a74a"}], "stats": {"total": 25, "additions": 3, "deletions": 22}, "files": [{"sha": "2413a001ee8053b5bdbf9d90c8c0836f332c8bb7", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "patch": "@@ -42,8 +42,6 @@ pub struct TestProps {\n     pub pretty_compare_only: bool,\n     // Patterns which must not appear in the output of a cfail test.\n     pub forbid_output: Vec<String>,\n-    // Ignore errors which originate from a command line span\n-    pub ignore_command_line: bool,\n }\n \n // Load any test directives embedded in the file\n@@ -62,8 +60,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n     let mut pretty_mode = None;\n     let mut pretty_compare_only = false;\n     let mut forbid_output = Vec::new();\n-    let mut ignore_command_line = false;\n-\n     iter_header(testfile, |ln| {\n         match parse_error_pattern(ln) {\n           Some(ep) => error_patterns.push(ep),\n@@ -106,10 +102,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n             pretty_compare_only = parse_pretty_compare_only(ln);\n         }\n \n-        if !ignore_command_line {\n-            ignore_command_line = parse_ignore_command_line(ln);\n-        }\n-\n         match parse_aux_build(ln) {\n             Some(ab) => { aux_builds.push(ab); }\n             None => {}\n@@ -148,7 +140,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n         pretty_mode: pretty_mode.unwrap_or(\"normal\".to_string()),\n         pretty_compare_only: pretty_compare_only,\n         forbid_output: forbid_output,\n-        ignore_command_line: ignore_command_line,\n     }\n }\n \n@@ -300,10 +291,6 @@ fn parse_pretty_compare_only(line: &str) -> bool {\n     parse_name_directive(line, \"pretty-compare-only\")\n }\n \n-fn parse_ignore_command_line(line: &str) -> bool {\n-    parse_name_directive(line, \"ignore-command-line\")\n-}\n-\n fn parse_exec_env(line: &str) -> Option<(String, String)> {\n     parse_name_value_directive(line, \"exec-env\").map(|nv| {\n         // nv is either FOO or FOO=BAR"}, {"sha": "5de93c52029226503abbeee5d715f139e36057ca", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "patch": "@@ -104,7 +104,7 @@ fn run_cfail_test(config: &Config, props: &TestProps, testfile: &Path) {\n         if !props.error_patterns.is_empty() {\n             fatal(\"both error pattern and expected errors specified\");\n         }\n-        check_expected_errors(props, expected_errors, testfile, &proc_res);\n+        check_expected_errors(expected_errors, testfile, &proc_res);\n     } else {\n         check_error_patterns(props, testfile, output_to_check.as_slice(), &proc_res);\n     }\n@@ -941,8 +941,7 @@ fn check_forbid_output(props: &TestProps,\n     }\n }\n \n-fn check_expected_errors(props: &TestProps,\n-                         expected_errors: Vec<errors::ExpectedError> ,\n+fn check_expected_errors(expected_errors: Vec<errors::ExpectedError> ,\n                          testfile: &Path,\n                          proc_res: &ProcRes) {\n \n@@ -997,11 +996,6 @@ fn check_expected_errors(props: &TestProps,\n             was_expected = true;\n         }\n \n-        if line.starts_with(\"<command line option>\") &&\n-           props.ignore_command_line {\n-            was_expected = true;\n-        }\n-\n         if !was_expected && is_compiler_error_or_warning(line) {\n             fatal_proc_rec(format!(\"unexpected compiler error or warning: '{}'\",\n                                   line).as_slice(),"}, {"sha": "ffc21a5ce612326c9ef5e895a6526628679a841c", "filename": "src/test/compile-fail/recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Ftest%2Fcompile-fail%2Frecursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588/src%2Ftest%2Fcompile-fail%2Frecursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frecursion.rs?ref=8c6bd81196593c3851fe4f6f99f8b4cc5ffb6588", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-command-line: See https://github.com/rust-lang/rust/issues/20747\n+//~^^^^^^^^^^ ERROR overflow\n //\n // We also get a second error message at the top of file (dummy\n // span). This is not helpful, but also kind of annoying to prevent,"}]}