{"sha": "8d2936765052f7267a16da5717d403dfe300d180", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMjkzNjc2NTA1MmY3MjY3YTE2ZGE1NzE3ZDQwM2RmZTMwMGQxODA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-25T22:23:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-08-04T17:58:23Z"}, "message": "Fix build issues once LLVM has been upgraded\n\n* LLVM now has a C interface to LLVMBuildAtomicRMW\n* The exception handling support for the JIT seems to have been dropped\n* Various interfaces have been added or headers have changed", "tree": {"sha": "e1a716bb2892320d72f7e13f89691e7bcaec0a3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1a716bb2892320d72f7e13f89691e7bcaec0a3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d2936765052f7267a16da5717d403dfe300d180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d2936765052f7267a16da5717d403dfe300d180", "html_url": "https://github.com/rust-lang/rust/commit/8d2936765052f7267a16da5717d403dfe300d180", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d2936765052f7267a16da5717d403dfe300d180/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d06aaae647bd76b9d94b784866a21cf6214224a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d06aaae647bd76b9d94b784866a21cf6214224a", "html_url": "https://github.com/rust-lang/rust/commit/1d06aaae647bd76b9d94b784866a21cf6214224a"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "b77ed10c21ba4e3b5abe4cefea307125ac0bc81c", "filename": "src/librustc/back/passes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Fback%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Fback%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fpasses.rs?ref=8d2936765052f7267a16da5717d403dfe300d180", "patch": "@@ -97,7 +97,6 @@ pub fn create_standard_passes(level: OptLevel) -> ~[~str] {\n         passes.push(~\"sroa\");\n         passes.push(~\"domtree\");\n         passes.push(~\"early-cse\");\n-        passes.push(~\"simplify-libcalls\");\n         passes.push(~\"lazy-value-info\");\n         passes.push(~\"jump-threading\");\n         passes.push(~\"correlated-propagation\");"}, {"sha": "842746f8209ee8d180096fce201b7489beca4548", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=8d2936765052f7267a16da5717d403dfe300d180", "patch": "@@ -1541,7 +1541,8 @@ pub mod llvm {\n                                   Op: AtomicBinOp,\n                                   LHS: ValueRef,\n                                   RHS: ValueRef,\n-                                  Order: AtomicOrdering)\n+                                  Order: AtomicOrdering,\n+                                  SingleThreaded: Bool)\n                                   -> ValueRef;\n \n         pub fn LLVMBuildAtomicFence(B: BuilderRef, Order: AtomicOrdering);"}, {"sha": "1d821e5af94bd3769c8477a846978c66564209e9", "filename": "src/librustc/middle/trans/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2936765052f7267a16da5717d403dfe300d180/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs?ref=8d2936765052f7267a16da5717d403dfe300d180", "patch": "@@ -940,7 +940,7 @@ impl Builder {\n                      dst: ValueRef, src: ValueRef,\n                      order: AtomicOrdering) -> ValueRef {\n         unsafe {\n-            llvm::LLVMBuildAtomicRMW(self.llbuilder, op, dst, src, order)\n+            llvm::LLVMBuildAtomicRMW(self.llbuilder, op, dst, src, order, False)\n         }\n     }\n "}, {"sha": "04c062072d6cb4d8fd9dc4152f0af3f028f95f25", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8d2936765052f7267a16da5717d403dfe300d180/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8d2936765052f7267a16da5717d403dfe300d180/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=8d2936765052f7267a16da5717d403dfe300d180", "patch": "@@ -113,6 +113,7 @@ class RustMCJITMemoryManager : public JITMemoryManager {\n \n   virtual uint8_t *allocateDataSection(uintptr_t Size, unsigned Alignment,\n                                        unsigned SectionID, bool isReadOnly);\n+  bool finalizeMemory(std::string *ErrMsg) { return false; }\n \n   virtual bool applyPermissions(std::string *Str);\n \n@@ -340,7 +341,6 @@ LLVMRustBuildJIT(void* mem,\n \n   std::string Err;\n   TargetOptions Options;\n-  Options.JITExceptionHandling = true;\n   Options.JITEmitDebugInfo = true;\n   Options.NoFramePointerElim = true;\n   Options.EnableSegmentedStacks = EnableSegmentedStacks;\n@@ -516,15 +516,6 @@ extern \"C\" LLVMValueRef LLVMBuildAtomicCmpXchg(LLVMBuilderRef B,\n extern \"C\" LLVMValueRef LLVMBuildAtomicFence(LLVMBuilderRef B, AtomicOrdering order) {\n     return wrap(unwrap(B)->CreateFence(order));\n }\n-extern \"C\" LLVMValueRef LLVMBuildAtomicRMW(LLVMBuilderRef B,\n-                                           AtomicRMWInst::BinOp op,\n-                                           LLVMValueRef target,\n-                                           LLVMValueRef source,\n-                                           AtomicOrdering order) {\n-    return wrap(unwrap(B)->CreateAtomicRMW(op,\n-                                           unwrap(target), unwrap(source),\n-                                           order));\n-}\n \n extern \"C\" void LLVMSetDebug(int Enabled) {\n #ifndef NDEBUG"}, {"sha": "eeefb19883eb38666957f25fa5f4247439556e3f", "filename": "src/rustllvm/rustllvm.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d2936765052f7267a16da5717d403dfe300d180/src%2Frustllvm%2Frustllvm.h", "raw_url": "https://github.com/rust-lang/rust/raw/8d2936765052f7267a16da5717d403dfe300d180/src%2Frustllvm%2Frustllvm.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.h?ref=8d2936765052f7267a16da5717d403dfe300d180", "patch": "@@ -8,8 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#include \"llvm/IR/IRBuilder.h\"\n #include \"llvm/IR/InlineAsm.h\"\n #include \"llvm/IR/LLVMContext.h\"\n+#include \"llvm/IR/Module.h\"\n #include \"llvm/Linker.h\"\n #include \"llvm/PassManager.h\"\n #include \"llvm/IR/InlineAsm.h\""}]}