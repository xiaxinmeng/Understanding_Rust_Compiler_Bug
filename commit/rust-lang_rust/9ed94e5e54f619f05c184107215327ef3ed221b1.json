{"sha": "9ed94e5e54f619f05c184107215327ef3ed221b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZDk0ZTVlNTRmNjE5ZjA1YzE4NDEwNzIxNTMyN2VmM2VkMjIxYjE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-02-28T00:09:32Z"}, "committer": {"name": "Trevor Spiteri", "email": "trevor.spiteri@um.edu.mt", "date": "2019-03-04T16:42:15Z"}, "message": "Fix release note problems noticed after merging.", "tree": {"sha": "8ce81c0e1705f2d85409f35fa022f0b4224a6df2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ce81c0e1705f2d85409f35fa022f0b4224a6df2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ed94e5e54f619f05c184107215327ef3ed221b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed94e5e54f619f05c184107215327ef3ed221b1", "html_url": "https://github.com/rust-lang/rust/commit/9ed94e5e54f619f05c184107215327ef3ed221b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ed94e5e54f619f05c184107215327ef3ed221b1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9da8fc9c267c08cfdb8cf5b39da14f154d12939", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9da8fc9c267c08cfdb8cf5b39da14f154d12939", "html_url": "https://github.com/rust-lang/rust/commit/a9da8fc9c267c08cfdb8cf5b39da14f154d12939"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "4cda02c5c2ebed35030a79de4d68abca20ffac5b", "filename": "RELEASES.md", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9ed94e5e54f619f05c184107215327ef3ed221b1/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ed94e5e54f619f05c184107215327ef3ed221b1/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=9ed94e5e54f619f05c184107215327ef3ed221b1", "patch": "@@ -4,10 +4,10 @@ Version 1.33.0 (2019-02-28)\n Language\n --------\n - [You can now use the `cfg(target_vendor)` attribute.][57465] E.g.\n-  `#[cfg(target_vendor=\"linux\")] fn main() { println!(\"Hello Linux!\"); }`\n+  `#[cfg(target_vendor=\"apple\")] fn main() { println!(\"Hello Apple!\"); }`\n - [Integer patterns such as in a match expression can now be exhaustive.][56362]\n   E.g. You can have match statement on a `u8` that covers `0..=255` and\n-  you would no longer be required to have a `_ => unreachable!()` case. \n+  you would no longer be required to have a `_ => unreachable!()` case.\n - [You can now have multiple patterns in `if let` and `while let`\n   expressions.][57532] You can do this with the same syntax as a `match`\n   expression. E.g.\n@@ -51,8 +51,7 @@ Language\n   // Allowed as there is only one `Read` in the module.\n   pub trait Read {}\n   ```\n-- [`extern` functions will now abort by default when panicking.][55982]\n-  This was previously undefined behaviour.\n+- [You may now use `Rc`, `Arc`, and `Pin` as method receivers][56805].\n \n Compiler\n --------\n@@ -109,27 +108,30 @@ Compatibility Notes\n   are now deprecated in the standard library, and their usage will now produce a warning.\n   Please use the `str::{trim_start, trim_end, trim_start_matches, trim_end_matches}`\n   methods instead.\n+- The `Error::cause` method has been deprecated in favor of `Error::source` which supports\n+  downcasting.\n \n-[57615]: https://github.com/rust-lang/rust/pull/57615/\n-[57465]: https://github.com/rust-lang/rust/pull/57465/\n-[57532]: https://github.com/rust-lang/rust/pull/57532/\n-[57535]: https://github.com/rust-lang/rust/pull/57535/\n-[57566]: https://github.com/rust-lang/rust/pull/57566/\n+[55982]: https://github.com/rust-lang/rust/pull/55982/\n+[56303]: https://github.com/rust-lang/rust/pull/56303/\n+[56351]: https://github.com/rust-lang/rust/pull/56351/\n+[56362]: https://github.com/rust-lang/rust/pull/56362\n+[56642]: https://github.com/rust-lang/rust/pull/56642/\n+[56769]: https://github.com/rust-lang/rust/pull/56769/\n+[56805]: https://github.com/rust-lang/rust/pull/56805\n+[56947]: https://github.com/rust-lang/rust/pull/56947/\n+[57049]: https://github.com/rust-lang/rust/pull/57049/\n+[57067]: https://github.com/rust-lang/rust/pull/57067/\n+[57105]: https://github.com/rust-lang/rust/pull/57105\n [57130]: https://github.com/rust-lang/rust/pull/57130/\n [57167]: https://github.com/rust-lang/rust/pull/57167/\n [57175]: https://github.com/rust-lang/rust/pull/57175/\n [57234]: https://github.com/rust-lang/rust/pull/57234/\n [57332]: https://github.com/rust-lang/rust/pull/57332/\n-[56947]: https://github.com/rust-lang/rust/pull/56947/\n-[57049]: https://github.com/rust-lang/rust/pull/57049/\n-[57067]: https://github.com/rust-lang/rust/pull/57067/\n-[56769]: https://github.com/rust-lang/rust/pull/56769/\n-[56642]: https://github.com/rust-lang/rust/pull/56642/\n-[56303]: https://github.com/rust-lang/rust/pull/56303/\n-[56351]: https://github.com/rust-lang/rust/pull/56351/\n-[55982]: https://github.com/rust-lang/rust/pull/55982/\n-[56362]: https://github.com/rust-lang/rust/pull/56362\n-[57105]: https://github.com/rust-lang/rust/pull/57105\n+[57465]: https://github.com/rust-lang/rust/pull/57465/\n+[57532]: https://github.com/rust-lang/rust/pull/57532/\n+[57535]: https://github.com/rust-lang/rust/pull/57535/\n+[57566]: https://github.com/rust-lang/rust/pull/57566/\n+[57615]: https://github.com/rust-lang/rust/pull/57615/\n [cargo/6484]: https://github.com/rust-lang/cargo/pull/6484/\n [`unix::FileExt::read_exact_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.read_exact_at\n [`unix::FileExt::write_all_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.write_all_at\n@@ -170,7 +172,7 @@ Language\n - [You can now match against literals in macros with the `literal`\n   specifier.][56072] This will match against a literal of any type.\n   E.g. `1`, `'A'`, `\"Hello World\"`\n-- [Self can now be used as a constructor and pattern for unit and tuple structs.][56365] E.g. \n+- [Self can now be used as a constructor and pattern for unit and tuple structs.][56365] E.g.\n   ```rust\n   struct Point(i32, i32);\n \n@@ -460,7 +462,7 @@ Version 1.31.0 (2018-12-06)\n \n Language\n --------\n-- \ud83c\udf89 [This version marks the release of the 2018 edition of Rust.][54057] \ud83c\udf89 \n+- \ud83c\udf89 [This version marks the release of the 2018 edition of Rust.][54057] \ud83c\udf89\n - [New lifetime elision rules now allow for eliding lifetimes in functions and\n   impl headers.][54778] E.g. `impl<'a> Reader for BufReader<'a> {}` can now be\n   `impl Reader for BufReader<'_> {}`. Lifetimes are still required to be defined"}]}