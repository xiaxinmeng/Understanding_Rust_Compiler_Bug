{"sha": "79a2676ce0ad6196b6d212c65147e78bf797fe29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YTI2NzZjZTBhZDYxOTZiNmQyMTJjNjUxNDdlNzhiZjc5N2ZlMjk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-24T08:02:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-24T08:02:44Z"}, "message": "Rollup merge of #50981 - nnethercote:shrink-LiveNode, r=nikomatsakis\n\nShrink `LiveNode`.\n\n`Liveness::users` is a vector that is occasionally enormous. For\nexample, doing a \"clean incremental\" check build of `inflate`, there is\none instance that represents 5,499 live nodes and 1087 vars, which\nrequires 5,977,413 entries. At 24 bytes per entry, that is 143MB.\n\nThis patch changes LiveNode from a usize to a u32. On 64-bit machines\nthat halves the size of these entries, significantly reducing peak\nmemory usage and memory traffic, and speeding up \"clean incremental\"\nbuilds of `inflate` by about 10%.", "tree": {"sha": "da62c8d3f6d95fb19552330f8a7b4e4204719c5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da62c8d3f6d95fb19552330f8a7b4e4204719c5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a2676ce0ad6196b6d212c65147e78bf797fe29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbBnGkCRBK7hj4Ov3rIwAAdHIIAK4mjg3sbkXqQqQBQobWyNy3\nwKOjWSsZNt21CGvSUyMkxwS2Xtw6fJ0aZQUIKcmBx24PU6YFFp/AaaCSEbNd1Sck\n7UVh0mylnDMGfFn7cBju+pTteI4CIROrU13nX8Sh8u1mddjuGXanib/EHGQzHSLG\nSsulxt2GP1zJBp/2JAGGVIencvDUuZtaf7a/+rx20Vj+5vo79PhefRlhzf/+YrwH\nB2HMJhh9TYYMx+Fb2mvqHpgXqfEvqCQ9zw5EWY9h97ERyidzqhVs42IQefs8z2/v\ntfLJXFTadQJdnHSSw4hzgtGhJi+paj8OMm2APhyDdkqkE8J1qk2MSp7DeYlOaVU=\n=iOxV\n-----END PGP SIGNATURE-----\n", "payload": "tree da62c8d3f6d95fb19552330f8a7b4e4204719c5a\nparent 6441ebe5a7e7d5274136b81d8c6cc037b37e9aeb\nparent 8d0fad5d3832c6c1f14542ea0be038274e454524\nauthor kennytm <kennytm@gmail.com> 1527148964 +0800\ncommitter GitHub <noreply@github.com> 1527148964 +0800\n\nRollup merge of #50981 - nnethercote:shrink-LiveNode, r=nikomatsakis\n\nShrink `LiveNode`.\n\n`Liveness::users` is a vector that is occasionally enormous. For\nexample, doing a \"clean incremental\" check build of `inflate`, there is\none instance that represents 5,499 live nodes and 1087 vars, which\nrequires 5,977,413 entries. At 24 bytes per entry, that is 143MB.\n\nThis patch changes LiveNode from a usize to a u32. On 64-bit machines\nthat halves the size of these entries, significantly reducing peak\nmemory usage and memory traffic, and speeding up \"clean incremental\"\nbuilds of `inflate` by about 10%.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a2676ce0ad6196b6d212c65147e78bf797fe29", "html_url": "https://github.com/rust-lang/rust/commit/79a2676ce0ad6196b6d212c65147e78bf797fe29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a2676ce0ad6196b6d212c65147e78bf797fe29/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6441ebe5a7e7d5274136b81d8c6cc037b37e9aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6441ebe5a7e7d5274136b81d8c6cc037b37e9aeb", "html_url": "https://github.com/rust-lang/rust/commit/6441ebe5a7e7d5274136b81d8c6cc037b37e9aeb"}, {"sha": "8d0fad5d3832c6c1f14542ea0be038274e454524", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0fad5d3832c6c1f14542ea0be038274e454524", "html_url": "https://github.com/rust-lang/rust/commit/8d0fad5d3832c6c1f14542ea0be038274e454524"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "ad39f48972f69bff28969f87140d6aa8573f3243", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/79a2676ce0ad6196b6d212c65147e78bf797fe29/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a2676ce0ad6196b6d212c65147e78bf797fe29/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=79a2676ce0ad6196b6d212c65147e78bf797fe29", "patch": "@@ -51,8 +51,8 @@\n //! enclosing function.  On the way down the tree, it identifies those AST\n //! nodes and variable IDs that will be needed for the liveness analysis\n //! and assigns them contiguous IDs.  The liveness id for an AST node is\n-//! called a `live_node` (it's a newtype'd usize) and the id for a variable\n-//! is called a `variable` (another newtype'd usize).\n+//! called a `live_node` (it's a newtype'd u32) and the id for a variable\n+//! is called a `variable` (another newtype'd u32).\n //!\n //! On the way back up the tree, as we are about to exit from a function\n //! declaration we allocate a `liveness` instance.  Now that we know\n@@ -112,7 +112,7 @@ use lint;\n use util::nodemap::{NodeMap, NodeSet};\n \n use std::collections::VecDeque;\n-use std::{fmt, usize};\n+use std::{fmt, u32};\n use std::io::prelude::*;\n use std::io;\n use std::rc::Rc;\n@@ -134,23 +134,17 @@ enum LoopKind<'a> {\n }\n \n #[derive(Copy, Clone, PartialEq)]\n-struct Variable(usize);\n+struct Variable(u32);\n \n-#[derive(Copy, PartialEq)]\n-struct LiveNode(usize);\n+#[derive(Copy, Clone, PartialEq)]\n+struct LiveNode(u32);\n \n impl Variable {\n-    fn get(&self) -> usize { let Variable(v) = *self; v }\n+    fn get(&self) -> usize { self.0 as usize }\n }\n \n impl LiveNode {\n-    fn get(&self) -> usize { let LiveNode(v) = *self; v }\n-}\n-\n-impl Clone for LiveNode {\n-    fn clone(&self) -> LiveNode {\n-        LiveNode(self.get())\n-    }\n+    fn get(&self) -> usize { self.0 as usize }\n }\n \n #[derive(Copy, Clone, PartialEq, Debug)]\n@@ -233,11 +227,11 @@ impl fmt::Debug for Variable {\n \n impl LiveNode {\n     fn is_valid(&self) -> bool {\n-        self.get() != usize::MAX\n+        self.0 != u32::MAX\n     }\n }\n \n-fn invalid_node() -> LiveNode { LiveNode(usize::MAX) }\n+fn invalid_node() -> LiveNode { LiveNode(u32::MAX) }\n \n struct CaptureInfo {\n     ln: LiveNode,\n@@ -285,7 +279,7 @@ impl<'a, 'tcx> IrMaps<'a, 'tcx> {\n     }\n \n     fn add_live_node(&mut self, lnk: LiveNodeKind) -> LiveNode {\n-        let ln = LiveNode(self.num_live_nodes);\n+        let ln = LiveNode(self.num_live_nodes as u32);\n         self.lnks.push(lnk);\n         self.num_live_nodes += 1;\n \n@@ -303,7 +297,7 @@ impl<'a, 'tcx> IrMaps<'a, 'tcx> {\n     }\n \n     fn add_variable(&mut self, vk: VarKind) -> Variable {\n-        let v = Variable(self.num_vars);\n+        let v = Variable(self.num_vars as u32);\n         self.var_kinds.push(vk);\n         self.num_vars += 1;\n \n@@ -708,7 +702,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         for var_idx in 0..self.ir.num_vars {\n             let idx = node_base_idx + var_idx;\n             if test(idx).is_valid() {\n-                write!(wr, \" {:?}\", Variable(var_idx))?;\n+                write!(wr, \" {:?}\", Variable(var_idx as u32))?;\n             }\n         }\n         Ok(())\n@@ -848,7 +842,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         debug!(\"^^ liveness computation results for body {} (entry={:?})\",\n                {\n                    for ln_idx in 0..self.ir.num_live_nodes {\n-                       debug!(\"{:?}\", self.ln_str(LiveNode(ln_idx)));\n+                       debug!(\"{:?}\", self.ln_str(LiveNode(ln_idx as u32)));\n                    }\n                    body.id\n                },"}]}