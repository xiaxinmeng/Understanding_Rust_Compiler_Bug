{"sha": "f54e8634e1394d3436037ff54e0f87739709a916", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NGU4NjM0ZTEzOTRkMzQzNjAzN2ZmNTRlMGY4NzczOTcwOWE5MTY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-04T16:00:08Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-04T16:00:08Z"}, "message": "Make PlaceRef lifetimes of move_error_reported be both 'tcx", "tree": {"sha": "85b40b5ec327667d0daf236067d212c8f0935d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85b40b5ec327667d0daf236067d212c8f0935d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f54e8634e1394d3436037ff54e0f87739709a916", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl5f0IgACgkQgTGiTgx5\n769+qA//QwRDNy0dNodX/ehCtSThojgAoWMSmCrv9HVRA+gg7wfBF8418Gc1ga1g\njPSSMBM72WHRHTcm5Oo3ZU0RHPdwojQcY2V/oVuZCtS9vOYFiiAGkMXrtAm3GR5o\ni8ycogQTiRjs2PRV+olB2i/N1LnbHk/AAl22Ki+iVQ5hhPAM0UOc+4VtyELVfnuo\nR/zsp1YLFALUPqzlyLGI+DBSprHlXuvIZ6um/HpqN8mJXr8rIgyqBez2KmbfPIOq\nElI35X4QcJ1c54OKm68jB65qf6gweqp1gOf73bbuooZK2WPIOGm2IMq7xPtbX9kH\nwiZp7du4Bz4GgwvMO2Pr+JNJfRCCgeqlp75/Y07IZ3r2cz23WlpvIBYcBk5ylyPU\nS78m5WPXEpQWoIlhVX+EvvlvQNrX0isvlhNcWJpZcGgp1fm0pMAaR4KG9xt3F/vn\nB9K09W+R/sq4cXehr8tpPwkY3ZmqtmFH9F1BY7qfzaXJLlbukOUGll+UXx0Jl5MY\nwLO6JaDb86gwObm1j8ERUBWrOK2+JYLNpU0VmqhigPcvbQzGnywaKqb6xB9by9OV\n5f6Dh+9EPyRAohmBJbMRJ5XVP0C11ht4PNPfgQdOUjKc2sdkO7tJsn4RmnEMsx3L\nt/gA0p7WzB8RzP3liv46YE68/e0E7UeRYaQExQ7zXE1yaFt+a3E=\n=+qUn\n-----END PGP SIGNATURE-----", "payload": "tree 85b40b5ec327667d0daf236067d212c8f0935d87\nparent 842af362685979e011e0360984dc1ec96ba5b7e9\nauthor Santiago Pastorino <spastorino@gmail.com> 1583337608 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1583337608 -0300\n\nMake PlaceRef lifetimes of move_error_reported be both 'tcx\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f54e8634e1394d3436037ff54e0f87739709a916", "html_url": "https://github.com/rust-lang/rust/commit/f54e8634e1394d3436037ff54e0f87739709a916", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f54e8634e1394d3436037ff54e0f87739709a916/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "842af362685979e011e0360984dc1ec96ba5b7e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/842af362685979e011e0360984dc1ec96ba5b7e9", "html_url": "https://github.com/rust-lang/rust/commit/842af362685979e011e0360984dc1ec96ba5b7e9"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "9d609411a54bb5da0366d62c058a706b9898ca26", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=f54e8634e1394d3436037ff54e0f87739709a916", "patch": "@@ -51,7 +51,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         &mut self,\n         location: Location,\n         desired_action: InitializationRequiringAction,\n-        (moved_place, used_place, span): (PlaceRef<'cx, 'tcx>, PlaceRef<'cx, 'tcx>, Span),\n+        (moved_place, used_place, span): (PlaceRef<'cx, 'tcx>, PlaceRef<'tcx, 'tcx>, Span),\n         mpi: MovePathIndex,\n     ) {\n         debug!("}, {"sha": "2d73d96ec8b6adcdb221da78fb87e41b08c52d57", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=f54e8634e1394d3436037ff54e0f87739709a916", "patch": "@@ -468,7 +468,8 @@ crate struct MirBorrowckCtxt<'cx, 'tcx> {\n     /// `BTreeMap` is used to preserve the order of insertions when iterating. This is necessary\n     /// when errors in the map are being re-added to the error buffer so that errors with the\n     /// same primary span come out in a consistent order.\n-    move_error_reported: BTreeMap<Vec<MoveOutIndex>, (PlaceRef<'cx, 'tcx>, DiagnosticBuilder<'cx>)>,\n+    move_error_reported:\n+        BTreeMap<Vec<MoveOutIndex>, (PlaceRef<'tcx, 'tcx>, DiagnosticBuilder<'cx>)>,\n     /// This field keeps track of errors reported in the checking of uninitialized variables,\n     /// so that we don't report seemingly duplicate errors.\n     uninitialized_error_reported: FxHashSet<PlaceRef<'cx, 'tcx>>,\n@@ -1527,7 +1528,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         &mut self,\n         location: Location,\n         desired_action: InitializationRequiringAction,\n-        place_span: (PlaceRef<'cx, 'tcx>, Span),\n+        place_span: (PlaceRef<'tcx, 'tcx>, Span),\n         flow_state: &Flows<'cx, 'tcx>,\n     ) {\n         let maybe_uninits = &flow_state.uninits;\n@@ -1593,7 +1594,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         &mut self,\n         location: Location,\n         desired_action: InitializationRequiringAction,\n-        place_span: (PlaceRef<'cx, 'tcx>, Span),\n+        place_span: (PlaceRef<'tcx, 'tcx>, Span),\n         maybe_uninits: &BitSet<MovePathIndex>,\n         from: u32,\n         to: u32,\n@@ -1632,7 +1633,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         &mut self,\n         location: Location,\n         desired_action: InitializationRequiringAction,\n-        place_span: (PlaceRef<'cx, 'tcx>, Span),\n+        place_span: (PlaceRef<'tcx, 'tcx>, Span),\n         flow_state: &Flows<'cx, 'tcx>,\n     ) {\n         let maybe_uninits = &flow_state.uninits;\n@@ -1817,7 +1818,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         fn check_parent_of_field<'cx, 'tcx>(\n             this: &mut MirBorrowckCtxt<'cx, 'tcx>,\n             location: Location,\n-            base: PlaceRef<'cx, 'tcx>,\n+            base: PlaceRef<'tcx, 'tcx>,\n             span: Span,\n             flow_state: &Flows<'cx, 'tcx>,\n         ) {"}, {"sha": "b66fd42d9c02417914bd4a2e02f69238cb34c66c", "filename": "src/librustc_mir/borrow_check/prefixes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f54e8634e1394d3436037ff54e0f87739709a916/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs?ref=f54e8634e1394d3436037ff54e0f87739709a916", "patch": "@@ -29,7 +29,7 @@ pub(super) struct Prefixes<'cx, 'tcx> {\n     body: ReadOnlyBodyAndCache<'cx, 'tcx>,\n     tcx: TyCtxt<'tcx>,\n     kind: PrefixSet,\n-    next: Option<PlaceRef<'cx, 'tcx>>,\n+    next: Option<PlaceRef<'tcx, 'tcx>>,\n }\n \n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n@@ -50,15 +50,15 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     /// terminating the iteration early based on `kind`.\n     pub(super) fn prefixes(\n         &self,\n-        place_ref: PlaceRef<'cx, 'tcx>,\n+        place_ref: PlaceRef<'tcx, 'tcx>,\n         kind: PrefixSet,\n     ) -> Prefixes<'cx, 'tcx> {\n         Prefixes { next: Some(place_ref), kind, body: self.body, tcx: self.infcx.tcx }\n     }\n }\n \n impl<'cx, 'tcx> Iterator for Prefixes<'cx, 'tcx> {\n-    type Item = PlaceRef<'cx, 'tcx>;\n+    type Item = PlaceRef<'tcx, 'tcx>;\n     fn next(&mut self) -> Option<Self::Item> {\n         let mut cursor = self.next?;\n "}]}