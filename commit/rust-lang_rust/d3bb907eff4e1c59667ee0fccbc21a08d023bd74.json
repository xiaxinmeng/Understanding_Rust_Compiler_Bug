{"sha": "d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYmI5MDdlZmY0ZTFjNTk2NjdlZTBmY2NiYzIxYTA4ZDAyM2JkNzQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-28T21:25:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-28T21:25:47Z"}, "message": "Rollup merge of #57904 - euclio:attribute-typos, r=davidtwco\n\nadd typo suggestion to unknown attribute error\n\nProvides a suggestion using Levenshtein distance to suggest built-in attributes and attribute macros.\n\nFixes #49270.", "tree": {"sha": "fd9439f1ce04d749b825bee8c4a8d6dda59b7736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd9439f1ce04d749b825bee8c4a8d6dda59b7736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcT3NbCRBK7hj4Ov3rIwAAdHIIABe17+bBzkhep2T7ZaS3driW\neDXfYFINp+3Gr6xoKW9iwaxdl1gO4iQMlIWvVDPk7isTU5Sp7e3IdQVYEf76KHNf\nrALHRP4kf8wu5nm97an1GBFYLWEcJIHIokZ+Tot1sfMMQ/nAO/er6/R5LxDBB0sg\nhjhEAzJDZ006nAM8mG3VThbO6kxTDbXnOxGSi4qzlfKSSMZ0dej7B1iIW8rdyEwz\nd/QjtpMkra4TA4mymdaRplkmJex80l9NKKURgCLLuCTiysgPc9efrmDCQhFIygmx\nbhwKdaZ4/mw6CJQOQTzWPs5aTKinG0zf4ODe9BEBBl3YvcXaJCvafAreWe0NXco=\n=lW5c\n-----END PGP SIGNATURE-----\n", "payload": "tree fd9439f1ce04d749b825bee8c4a8d6dda59b7736\nparent b1b67cdec152abdee33729f23d95911536a7483f\nparent 5e6702117223b61057957ca2593f03e3f45ccd8a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548710747 +0100\ncommitter GitHub <noreply@github.com> 1548710747 +0100\n\nRollup merge of #57904 - euclio:attribute-typos, r=davidtwco\n\nadd typo suggestion to unknown attribute error\n\nProvides a suggestion using Levenshtein distance to suggest built-in attributes and attribute macros.\n\nFixes #49270.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "html_url": "https://github.com/rust-lang/rust/commit/d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1b67cdec152abdee33729f23d95911536a7483f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b67cdec152abdee33729f23d95911536a7483f", "html_url": "https://github.com/rust-lang/rust/commit/b1b67cdec152abdee33729f23d95911536a7483f"}, {"sha": "5e6702117223b61057957ca2593f03e3f45ccd8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6702117223b61057957ca2593f03e3f45ccd8a", "html_url": "https://github.com/rust-lang/rust/commit/5e6702117223b61057957ca2593f03e3f45ccd8a"}], "stats": {"total": 116, "additions": 108, "deletions": 8}, "files": [{"sha": "78b55182030845a0ce586a5712a3d9680fb89340", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 65, "deletions": 5, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -19,7 +19,9 @@ use syntax::ext::base::{Annotatable, MacroKind, SyntaxExtension};\n use syntax::ext::expand::{AstFragment, Invocation, InvocationKind};\n use syntax::ext::hygiene::{self, Mark};\n use syntax::ext::tt::macro_rules;\n-use syntax::feature_gate::{feature_err, is_builtin_attr_name, GateIssue};\n+use syntax::feature_gate::{\n+    feature_err, is_builtin_attr_name, AttributeGate, GateIssue, Stability, BUILTIN_ATTRIBUTES,\n+};\n use syntax::symbol::{Symbol, keywords};\n use syntax::visit::Visitor;\n use syntax::util::lev_distance::find_best_match_for_name;\n@@ -310,15 +312,18 @@ impl<'a> Resolver<'a> {\n                             if !features.rustc_attrs {\n                                 let msg = \"unless otherwise specified, attributes with the prefix \\\n                                            `rustc_` are reserved for internal compiler diagnostics\";\n-                                feature_err(&self.session.parse_sess, \"rustc_attrs\", path.span,\n-                                            GateIssue::Language, &msg).emit();\n+                                self.report_unknown_attribute(path.span, &name, msg, \"rustc_attrs\");\n                             }\n                         } else if !features.custom_attribute {\n                             let msg = format!(\"The attribute `{}` is currently unknown to the \\\n                                                compiler and may have meaning added to it in the \\\n                                                future\", path);\n-                            feature_err(&self.session.parse_sess, \"custom_attribute\", path.span,\n-                                        GateIssue::Language, &msg).emit();\n+                            self.report_unknown_attribute(\n+                                path.span,\n+                                &name,\n+                                &msg,\n+                                \"custom_attribute\",\n+                            );\n                         }\n                     }\n                 } else {\n@@ -339,6 +344,61 @@ impl<'a> Resolver<'a> {\n         Ok((def, self.get_macro(def)))\n     }\n \n+    fn report_unknown_attribute(&self, span: Span, name: &str, msg: &str, feature: &str) {\n+        let mut err = feature_err(\n+            &self.session.parse_sess,\n+            feature,\n+            span,\n+            GateIssue::Language,\n+            &msg,\n+        );\n+\n+        let features = self.session.features_untracked();\n+\n+        let attr_candidates = BUILTIN_ATTRIBUTES\n+            .iter()\n+            .filter_map(|(name, _, _, gate)| {\n+                if name.starts_with(\"rustc_\") && !features.rustc_attrs {\n+                    return None;\n+                }\n+\n+                match gate {\n+                    AttributeGate::Gated(Stability::Unstable, ..)\n+                        if self.session.opts.unstable_features.is_nightly_build() =>\n+                    {\n+                        Some(name)\n+                    }\n+                    AttributeGate::Gated(Stability::Deprecated(..), ..) => Some(name),\n+                    AttributeGate::Ungated => Some(name),\n+                    _ => None,\n+                }\n+            })\n+            .map(|name| Symbol::intern(name))\n+            .chain(\n+                // Add built-in macro attributes as well.\n+                self.builtin_macros.iter().filter_map(|(name, binding)| {\n+                    match binding.macro_kind() {\n+                        Some(MacroKind::Attr) => Some(*name),\n+                        _ => None,\n+                    }\n+                }),\n+            )\n+            .collect::<Vec<_>>();\n+\n+        let lev_suggestion = find_best_match_for_name(attr_candidates.iter(), &name, None);\n+\n+        if let Some(suggestion) = lev_suggestion {\n+            err.span_suggestion(\n+                span,\n+                \"a built-in attribute with a similar name exists\",\n+                suggestion.to_string(),\n+                Applicability::MaybeIncorrect,\n+            );\n+        }\n+\n+        err.emit();\n+    }\n+\n     pub fn resolve_macro_to_def_inner(\n         &mut self,\n         path: &ast::Path,"}, {"sha": "a25d8ee352686be56a4464ab286becef308d1e12", "filename": "src/test/ui/issues/issue-49074.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -2,7 +2,7 @@ error[E0658]: The attribute `marco_use` is currently unknown to the compiler and\n   --> $DIR/issue-49074.rs:3:3\n    |\n LL | #[marco_use] // typo\n-   |   ^^^^^^^^^\n+   |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_use`\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n "}, {"sha": "6cfec3ee762dda92f291422d51c47488a4068f75", "filename": "src/test/ui/macros/macro-reexport-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -14,7 +14,7 @@ error[E0658]: The attribute `macro_reexport` is currently unknown to the compile\n   --> $DIR/macro-reexport-removed.rs:5:3\n    |\n LL | #[macro_reexport(macro_one)] //~ ERROR attribute `macro_reexport` is currently unknown\n-   |   ^^^^^^^^^^^^^^\n+   |   ^^^^^^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_export`\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n "}, {"sha": "ece1b6212914db7a82e7b94cd9a1d46b49020927", "filename": "src/test/ui/proc-macro/derive-still-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -2,7 +2,7 @@ error[E0658]: The attribute `derive_A` is currently unknown to the compiler and\n   --> $DIR/derive-still-gated.rs:8:3\n    |\n LL | #[derive_A] //~ ERROR attribute `derive_A` is currently unknown\n-   |   ^^^^^^^^\n+   |   ^^^^^^^^ help: a built-in attribute with a similar name exists: `derive`\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n "}, {"sha": "13c6308b97e85d4e2e021f965a9c4eabd5064086", "filename": "src/test/ui/suggestions/attribute-typos.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -0,0 +1,13 @@\n+#[deprcated]    //~ ERROR E0658\n+fn foo() {}     //~| HELP a built-in attribute with a similar name exists\n+                //~| SUGGESTION deprecated\n+                //~| HELP add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+#[tests]        //~ ERROR E0658\n+fn bar() {}     //~| HELP a built-in attribute with a similar name exists\n+                //~| SUGGESTION test\n+                //~| HELP add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+#[rustc_err]    //~ ERROR E0658\n+fn main() {}    //~| HELP add #![feature(rustc_attrs)] to the crate attributes to enable\n+                // don't suggest rustc attributes"}, {"sha": "e40da787e96ca5aaf2a0e7ac61ac9c8fbdaa56e6", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb907eff4e1c59667ee0fccbc21a08d023bd74/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=d3bb907eff4e1c59667ee0fccbc21a08d023bd74", "patch": "@@ -0,0 +1,27 @@\n+error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` are reserved for internal compiler diagnostics (see issue #29642)\n+  --> $DIR/attribute-typos.rs:11:3\n+   |\n+LL | #[rustc_err]    //~ ERROR E0658\n+   |   ^^^^^^^^^\n+   |\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n+error[E0658]: The attribute `tests` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/attribute-typos.rs:6:3\n+   |\n+LL | #[tests]        //~ ERROR E0658\n+   |   ^^^^^ help: a built-in attribute with a similar name exists: `test`\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error[E0658]: The attribute `deprcated` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/attribute-typos.rs:1:3\n+   |\n+LL | #[deprcated]    //~ ERROR E0658\n+   |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `deprecated`\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}