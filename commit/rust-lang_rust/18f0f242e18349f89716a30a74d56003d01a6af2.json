{"sha": "18f0f242e18349f89716a30a74d56003d01a6af2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZjBmMjQyZTE4MzQ5Zjg5NzE2YTMwYTc0ZDU2MDAzZDAxYTZhZjI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-04T20:03:22Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-08-19T05:11:22Z"}, "message": "Give precedence to `html_root_url` over `--extern-html-root-url` by default, but add a way to opt-in to the previous behavior\n\n ## What is an HTML root url?\n\nIt tells rustdoc where it should link when documentation for a crate is\nnot available locally; for example, when a crate is a dependency of a\ncrate documented with `cargo doc --no-deps`.\n\n ## What is the difference between `html_root_url` and `--extern-html-root-url`?\n\nBoth of these tell rustdoc what the HTML root should be set to.\n`doc(html_root_url)` is set by the crate author, while\n`--extern-html-root-url` is set by the person documenting the crate.\nThese are often different. For example, docs.rs uses\n`--extern-html-root-url https://docs.rs/crate-name/version` to ensure\nall crates have documentation, even if `html_root_url` is not set.\nConversely, crates such as Rocket set `doc(html_root_url =\n\"https://api.rocket.rs\")`, because they prefer users to view the\ndocumentation on their own site.\n\nCrates also set `html_root_url` to ensure they have\ndocumentation when building locally when offline. This is unfortunate to\nrequire, because it's more work from the library author. It also makes\nit impossible to distinguish between crates that want to be viewed on a\ndifferent site (e.g. Rocket) and crates that just want documentation to\nbe visible offline at all (e.g. Tokio). I have authored a separate\nchange to the API guidelines to no longer recommend doing this:\nhttps://github.com/rust-lang/api-guidelines/pull/230.\n\n ## Why change the default?\n\nIn the past, docs.rs has been the main user of `--extern-html-root-url`.\nHowever, it's useful for other projects as well. In particular, Cargo\nwants to pass it by default when running `--no-deps`\n(https://github.com/rust-lang/cargo/issues/8296).\n\nUnfortunately, for these other use cases, the priority order is\ninverted. They want to give *precedence* to the URL the crate picks, and\nonly fall back to the `--extern-html-root` if no `html_root_url` is\npresent. That allows passing `--extern-html-root` unconditionally,\nwithout having to parse the source code to see what attributes are\npresent.\n\nFor docs.rs, however, we still want to keep the old behavior, so that\nall links on docs.rs stay on the site.", "tree": {"sha": "0954066624323b090c42cc7e9dd0aa079c628fe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0954066624323b090c42cc7e9dd0aa079c628fe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18f0f242e18349f89716a30a74d56003d01a6af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18f0f242e18349f89716a30a74d56003d01a6af2", "html_url": "https://github.com/rust-lang/rust/commit/18f0f242e18349f89716a30a74d56003d01a6af2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18f0f242e18349f89716a30a74d56003d01a6af2/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d300391ede6de79469670957b508072d132a2a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d300391ede6de79469670957b508072d132a2a0", "html_url": "https://github.com/rust-lang/rust/commit/6d300391ede6de79469670957b508072d132a2a0"}], "stats": {"total": 65, "additions": 51, "deletions": 14}, "files": [{"sha": "702557491433111dd7ddf830155a6fc2ae9d10a9", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -168,6 +168,7 @@ impl ExternalCrate {\n     crate fn location(\n         &self,\n         extern_url: Option<&str>,\n+        extern_url_takes_precedence: bool,\n         dst: &std::path::Path,\n         tcx: TyCtxt<'_>,\n     ) -> ExternalLocation {\n@@ -189,8 +190,10 @@ impl ExternalCrate {\n             return Local;\n         }\n \n-        if let Some(url) = extern_url {\n-            return to_remote(url);\n+        if extern_url_takes_precedence {\n+            if let Some(url) = extern_url {\n+                return to_remote(url);\n+            }\n         }\n \n         // Failing that, see if there's an attribute specifying where to find this\n@@ -202,6 +205,7 @@ impl ExternalCrate {\n             .filter_map(|a| a.value_str())\n             .map(to_remote)\n             .next()\n+            .or(extern_url.map(to_remote)) // NOTE: only matters if `extern_url_takes_precedence` is false\n             .unwrap_or(Unknown) // Well, at least we tried.\n     }\n "}, {"sha": "eef6985ea30a0ff75d0f22f801cab8bb1c75aa72", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -233,6 +233,8 @@ crate struct RenderOptions {\n     crate extension_css: Option<PathBuf>,\n     /// A map of crate names to the URL to use instead of querying the crate's `html_root_url`.\n     crate extern_html_root_urls: BTreeMap<String, String>,\n+    /// Whether to give precedence to `html_root_url` or `--exten-html-root-url`.\n+    crate extern_html_root_takes_precedence: bool,\n     /// A map of the default settings (values are as for DOM storage API). Keys should lack the\n     /// `rustdoc-` prefix.\n     crate default_settings: FxHashMap<String, String>,\n@@ -658,6 +660,8 @@ impl Options {\n         let show_type_layout = matches.opt_present(\"show-type-layout\");\n         let nocapture = matches.opt_present(\"nocapture\");\n         let generate_link_to_definition = matches.opt_present(\"generate-link-to-definition\");\n+        let extern_html_root_takes_precedence =\n+            matches.opt_present(\"extern-html-root-takes-precedence\");\n \n         if generate_link_to_definition && (show_coverage || output_format != OutputFormat::Html) {\n             diag.struct_err(\n@@ -714,6 +718,7 @@ impl Options {\n                 themes,\n                 extension_css,\n                 extern_html_root_urls,\n+                extern_html_root_takes_precedence,\n                 default_settings,\n                 resource_suffix,\n                 enable_minification,"}, {"sha": "e96eba2f17dbf549f75ce6c8e0962ff43dcc9423", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -528,9 +528,7 @@ crate fn run_global_ctxt(\n \n     let render_options = ctxt.render_options;\n     let mut cache = ctxt.cache;\n-    krate = tcx.sess.time(\"create_format_cache\", || {\n-        cache.populate(krate, tcx, &render_options.extern_html_root_urls, &render_options.output)\n-    });\n+    krate = tcx.sess.time(\"create_format_cache\", || cache.populate(krate, tcx, &render_options));\n \n     // The main crate doc comments are always collapsed.\n     krate.collapsed = true;"}, {"sha": "d45f277a0a883aba8bf0059fdccac2ed618af6c5", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -1,6 +1,4 @@\n-use std::collections::BTreeMap;\n use std::mem;\n-use std::path::Path;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n@@ -9,6 +7,7 @@ use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n use crate::clean::{self, GetDefId, ItemId};\n+use crate::config::RenderOptions;\n use crate::fold::DocFolder;\n use crate::formats::item_type::ItemType;\n use crate::formats::Impl;\n@@ -142,19 +141,21 @@ impl Cache {\n         &mut self,\n         mut krate: clean::Crate,\n         tcx: TyCtxt<'_>,\n-        extern_html_root_urls: &BTreeMap<String, String>,\n-        dst: &Path,\n+        render_options: &RenderOptions,\n     ) -> clean::Crate {\n         // Crawl the crate to build various caches used for the output\n         debug!(?self.crate_version);\n         self.traits = krate.external_traits.take();\n+        let RenderOptions { extern_html_root_takes_precedence, output: dst, .. } = render_options;\n \n         // Cache where all our extern crates are located\n         // FIXME: this part is specific to HTML so it'd be nice to remove it from the common code\n         for &e in &krate.externs {\n             let name = e.name(tcx);\n-            let extern_url = extern_html_root_urls.get(&*name.as_str()).map(|u| &**u);\n-            self.extern_locations.insert(e.crate_num, e.location(extern_url, &dst, tcx));\n+            let extern_url =\n+                render_options.extern_html_root_urls.get(&*name.as_str()).map(|u| &**u);\n+            let location = e.location(extern_url, *extern_html_root_takes_precedence, dst, tcx);\n+            self.extern_locations.insert(e.crate_num, location);\n             self.external_paths.insert(e.def_id(), (vec![name.to_string()], ItemType::Module));\n         }\n "}, {"sha": "34fe808dae2e4c5be2dd2df1550cc26b07c622c3", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -294,6 +294,13 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"NAME=URL\",\n             )\n         }),\n+        unstable(\"extern-html-root-takes-precedence\", |o| {\n+            o.optflagmulti(\n+                \"\",\n+                \"extern-html-root-takes-precedence\",\n+                \"give precedence to `--extern-html-root-url`, not `html_root_url`\",\n+            )\n+        }),\n         stable(\"plugin-path\", |o| o.optmulti(\"\", \"plugin-path\", \"removed\", \"DIR\")),\n         stable(\"C\", |o| {\n             o.optmulti(\"C\", \"codegen\", \"pass a codegen option to rustc\", \"OPT[=VALUE]\")"}, {"sha": "4eb0b700f8f16b688e7a9295537181c3a39b85fb", "filename": "src/test/rustdoc/auxiliary/html_root.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fauxiliary%2Fhtml_root.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fauxiliary%2Fhtml_root.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fhtml_root.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -0,0 +1,2 @@\n+#![doc(html_root_url=\"https://example.com/html_root\")]\n+pub fn foo() {}"}, {"sha": "c5c0bc606cd699cda9d339035a1ca95bff4a70f4", "filename": "src/test/rustdoc/auxiliary/no_html_root.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fauxiliary%2Fno_html_root.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fauxiliary%2Fno_html_root.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fno_html_root.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -0,0 +1 @@\n+pub fn bar() {}"}, {"sha": "def6767ea47f6fe8a5feaecf9fbd177a051e98a5", "filename": "src/test/rustdoc/extern-html-root-url-precedence.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fextern-html-root-url-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fextern-html-root-url-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-html-root-url-precedence.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags:-Z unstable-options --extern-html-root-url core=https://example.com/core/0.1.0 --extern-html-root-takes-precedence\n+\n+// @has extern_html_root_url_precedence/index.html\n+// --extern-html-root should take precedence if `--takes-precedence` is passed\n+// @has - '//a/@href' 'https://example.com/core/0.1.0/core/iter/index.html'\n+#[doc(no_inline)]\n+pub use std::iter;"}, {"sha": "17eedcf2ab8dd64568490d896313185ff5e8fb65", "filename": "src/test/rustdoc/extern-html-root-url.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fextern-html-root-url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18f0f242e18349f89716a30a74d56003d01a6af2/src%2Ftest%2Frustdoc%2Fextern-html-root-url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-html-root-url.rs?ref=18f0f242e18349f89716a30a74d56003d01a6af2", "patch": "@@ -1,6 +1,18 @@\n-// compile-flags:-Z unstable-options --extern-html-root-url core=https://example.com/core/0.1.0\n+// compile-flags:-Z unstable-options --extern-html-root-url html_root=https://example.com/override --extern-html-root-url no_html_root=https://example.com/override\n+// aux-build:html_root.rs\n+// aux-build:no_html_root.rs\n+// NOTE: intentionally does not build any auxiliary docs\n+\n+extern crate html_root;\n+extern crate no_html_root;\n \n // @has extern_html_root_url/index.html\n-// @has - '//a/@href' 'https://example.com/core/0.1.0/core/iter/index.html'\n+// `html_root_url` should override `--extern-html-root-url`\n+// @has - '//a/@href' 'https://example.com/html_root/html_root/fn.foo.html'\n+#[doc(no_inline)]\n+pub use html_root::foo;\n+\n #[doc(no_inline)]\n-pub use std::iter;\n+// `--extern-html-root-url` should apply if no `html_root_url` is given\n+// @has - '//a/@href' 'https://example.com/override/no_html_root/fn.bar.html'\n+pub use no_html_root::bar;"}]}