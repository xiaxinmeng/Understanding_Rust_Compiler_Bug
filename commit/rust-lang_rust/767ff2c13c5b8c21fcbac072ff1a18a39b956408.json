{"sha": "767ff2c13c5b8c21fcbac072ff1a18a39b956408", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2N2ZmMmMxM2M1YjhjMjFmY2JhYzA3MmZmMWExOGEzOWI5NTY0MDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-14T17:59:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-14T17:59:24Z"}, "message": "Merge #2844\n\n2844: Use dummy value for line! and column! macro r=matklad a=edwin0cheng\n\nUse dummy value `0` for line! and column! macro. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "d7afe576c76b1f71cbc07944f29b706c6f960d3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7afe576c76b1f71cbc07944f29b706c6f960d3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767ff2c13c5b8c21fcbac072ff1a18a39b956408", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHgF8CRBK7hj4Ov3rIwAAdHIIADwDM30HUofXSUlG15pUx2jY\nSZVc0dfsLGnjWaX5X59KXu9YppR08FlP22esExEgaZk1jDSd8o9eypP7+bAi3XV5\n6m4K3ZaSmWp/88b6bHEqZiAjhk+7MMnsYmZkC3ImK3sZQYpqwZ9RWcszt75G9tCQ\n4J4O0EdmnFWzSNRgycqNHA6ne+ZFkYms6qEWrtT7nOKULOhXIt4SFtqWAZTLeBGp\nAJvBHo8V5ulid5vLAmbVs5a0HRRzMbtSOw72ujVETpF6PFVbWtq09WXk/EZ6oYGR\nCugfNwG4xNXvSqe+cXymxGyRRptbIr8KwfIfZ9YvGCC0TI5p9t/1jkdvnVdZzuA=\n=6uF2\n-----END PGP SIGNATURE-----\n", "payload": "tree d7afe576c76b1f71cbc07944f29b706c6f960d3b\nparent 6a5100f4d51ccf782f68e1a11083be38e3b8c96d\nparent 6ebb1edf219023d67e1ed0534b05f732aca1a584\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579024764 +0000\ncommitter GitHub <noreply@github.com> 1579024764 +0000\n\nMerge #2844\n\n2844: Use dummy value for line! and column! macro r=matklad a=edwin0cheng\n\nUse dummy value `0` for line! and column! macro. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767ff2c13c5b8c21fcbac072ff1a18a39b956408", "html_url": "https://github.com/rust-lang/rust/commit/767ff2c13c5b8c21fcbac072ff1a18a39b956408", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767ff2c13c5b8c21fcbac072ff1a18a39b956408/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a5100f4d51ccf782f68e1a11083be38e3b8c96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5100f4d51ccf782f68e1a11083be38e3b8c96d", "html_url": "https://github.com/rust-lang/rust/commit/6a5100f4d51ccf782f68e1a11083be38e3b8c96d"}, {"sha": "6ebb1edf219023d67e1ed0534b05f732aca1a584", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ebb1edf219023d67e1ed0534b05f732aca1a584", "html_url": "https://github.com/rust-lang/rust/commit/6ebb1edf219023d67e1ed0534b05f732aca1a584"}], "stats": {"total": 100, "additions": 15, "deletions": 85}, "files": [{"sha": "f3f959ac68498af1ce8cd82885cd67a0b06fb936", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 13, "deletions": 83, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/767ff2c13c5b8c21fcbac072ff1a18a39b956408/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767ff2c13c5b8c21fcbac072ff1a18a39b956408/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=767ff2c13c5b8c21fcbac072ff1a18a39b956408", "patch": "@@ -1,8 +1,8 @@\n //! Builtin macro\n use crate::db::AstDatabase;\n use crate::{\n-    ast::{self, AstNode},\n-    name, AstId, CrateId, HirFileId, MacroCallId, MacroDefId, MacroDefKind, TextUnit,\n+    ast::{self},\n+    name, AstId, CrateId, MacroCallId, MacroDefId, MacroDefKind, TextUnit,\n };\n \n use crate::quote;\n@@ -61,48 +61,13 @@ register_builtin! {\n     (format_args_nl, FormatArgsNl) => format_args_expand\n }\n \n-fn to_line_number(db: &dyn AstDatabase, file: HirFileId, pos: TextUnit) -> usize {\n-    let file_id = file.original_file(db);\n-\n-    // FIXME: if the file is coming from macro, we return a dummy value for now.\n-    if file.call_node(db).map(|it| it.file_id != file_id.into()).unwrap_or(true) {\n-        return 0;\n-    }\n-\n-    let text = db.file_text(file_id);\n-    let mut line_num = 1;\n-\n-    let pos = pos.to_usize();\n-    if pos > text.len() {\n-        // FIXME: `pos` at the moment could be an offset inside the \"wrong\" file\n-        // in this case, when we know it's wrong, we return a dummy value\n-        return 0;\n-    }\n-    // Count line end\n-    for (i, c) in text.chars().enumerate() {\n-        if i == pos {\n-            break;\n-        }\n-        if c == '\\n' {\n-            line_num += 1;\n-        }\n-    }\n-    line_num\n-}\n-\n fn line_expand(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n+    _db: &dyn AstDatabase,\n+    _id: MacroCallId,\n     _tt: &tt::Subtree,\n ) -> Result<tt::Subtree, mbe::ExpandError> {\n-    let loc = db.lookup_intern_macro(id);\n-\n-    let arg = loc.kind.arg(db).ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n-    let arg_start = arg.text_range().start();\n-\n-    let file = id.as_file();\n-    let line_num = to_line_number(db, file, arg_start);\n-\n+    // dummy implementation for type-checking purposes\n+    let line_num = 0;\n     let expanded = quote! {\n         #line_num\n     };\n@@ -154,48 +119,13 @@ fn option_env_expand(\n     Ok(expanded)\n }\n \n-fn to_col_number(db: &dyn AstDatabase, file: HirFileId, pos: TextUnit) -> usize {\n-    let file_id = file.original_file(db);\n-    // FIXME: if the file is coming from macro, we return a dummy value for now.\n-    if file.call_node(db).map(|it| it.file_id != file_id.into()).unwrap_or(true) {\n-        return 0;\n-    }\n-    let text = db.file_text(file_id);\n-\n-    let pos = pos.to_usize();\n-    if pos > text.len() {\n-        // FIXME: `pos` at the moment could be an offset inside the \"wrong\" file\n-        // in this case we return a dummy value so that we don't `panic!`\n-        return 0;\n-    }\n-\n-    let mut col_num = 1;\n-    for c in text[..pos].chars().rev() {\n-        if c == '\\n' {\n-            break;\n-        }\n-        col_num += 1;\n-    }\n-    col_num\n-}\n-\n fn column_expand(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n+    _db: &dyn AstDatabase,\n+    _id: MacroCallId,\n     _tt: &tt::Subtree,\n ) -> Result<tt::Subtree, mbe::ExpandError> {\n-    let loc = db.lookup_intern_macro(id);\n-    let macro_call = match loc.kind {\n-        crate::MacroCallKind::FnLike(ast_id) => ast_id.to_node(db),\n-        _ => panic!(\"column macro called as attr\"),\n-    };\n-\n-    let _arg = macro_call.token_tree().ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n-    let col_start = macro_call.syntax().text_range().start();\n-\n-    let file = id.as_file();\n-    let col_num = to_col_number(db, file, col_start);\n-\n+    // dummy implementation for type-checking purposes\n+    let col_num = 0;\n     let expanded = quote! {\n         #col_num\n     };\n@@ -284,7 +214,7 @@ fn format_args_expand(\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use crate::{name::AsName, test_db::TestDB, MacroCallKind, MacroCallLoc};\n+    use crate::{name::AsName, test_db::TestDB, AstNode, MacroCallKind, MacroCallLoc};\n     use ra_db::{fixture::WithFixture, SourceDatabase};\n     use ra_syntax::ast::NameOwner;\n \n@@ -330,7 +260,7 @@ mod tests {\n             \"#,\n         );\n \n-        assert_eq!(expanded, \"13\");\n+        assert_eq!(expanded, \"0\");\n     }\n \n     #[test]\n@@ -343,7 +273,7 @@ mod tests {\n             \"#,\n         );\n \n-        assert_eq!(expanded, \"4\");\n+        assert_eq!(expanded, \"0\");\n     }\n \n     #[test]"}, {"sha": "652420ea8b2a94dddcf3085b47677863e61ca910", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/767ff2c13c5b8c21fcbac072ff1a18a39b956408/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767ff2c13c5b8c21fcbac072ff1a18a39b956408/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=767ff2c13c5b8c21fcbac072ff1a18a39b956408", "patch": "@@ -374,7 +374,7 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 1) '6': i32\n+    ![0; 1) '0': i32\n     [64; 88) '{     ...!(); }': ()\n     [74; 75) 'x': i32\n     \"###\n@@ -412,7 +412,7 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 2) '13': i32\n+    ![0; 1) '0': i32\n     [66; 92) '{     ...!(); }': ()\n     [76; 77) 'x': i32\n     \"###"}]}