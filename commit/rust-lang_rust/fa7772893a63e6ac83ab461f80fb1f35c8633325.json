{"sha": "fa7772893a63e6ac83ab461f80fb1f35c8633325", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNzc3Mjg5M2E2M2U2YWM4M2FiNDYxZjgwZmIxZjM1Yzg2MzMzMjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-03-23T02:26:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-03-26T23:20:02Z"}, "message": "Remove unused imports throughout", "tree": {"sha": "07c280152830443a4151ce158ed2e01fcdc86173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07c280152830443a4151ce158ed2e01fcdc86173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa7772893a63e6ac83ab461f80fb1f35c8633325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7772893a63e6ac83ab461f80fb1f35c8633325", "html_url": "https://github.com/rust-lang/rust/commit/fa7772893a63e6ac83ab461f80fb1f35c8633325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa7772893a63e6ac83ab461f80fb1f35c8633325/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d588c528685fa0590ff91f189f0ef44a3815ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d588c528685fa0590ff91f189f0ef44a3815ec2", "html_url": "https://github.com/rust-lang/rust/commit/3d588c528685fa0590ff91f189f0ef44a3815ec2"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "2ddf9277096939e709c65cf8c5f999787a3fdf1a", "filename": "src/libcore/flate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fflate.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -17,10 +17,10 @@ Simple compression\n use libc;\n use libc::{c_void, size_t, c_int};\n use ptr;\n-use rand::RngUtil;\n use vec;\n \n #[cfg(test)] use rand;\n+#[cfg(test)] use rand::RngUtil;\n \n pub mod rustrt {\n     use libc::{c_int, c_void, size_t};"}, {"sha": "ba976de50ab4852dec92ad6e602196e3edd51784", "filename": "src/libcore/logging.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flogging.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -10,8 +10,6 @@\n \n //! Logging\n \n-use libc;\n-\n pub mod rustrt {\n     use libc;\n \n@@ -49,6 +47,7 @@ pub fn console_off() {\n pub fn log_type<T>(level: u32, object: &T) {\n     use cast::transmute;\n     use io;\n+    use libc;\n     use repr;\n     use vec;\n "}, {"sha": "1634e7443b4797f5175ba945addf84956fdb4855", "filename": "src/libcore/rt/io/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fmod.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use option::*;\n-use comm::{GenericPort, GenericChan};\n-\n pub mod file;\n \n // FIXME #5370 Strongly want this to be StreamError(&mut Stream)"}, {"sha": "94a3b562fd875697a797fca0a018a87a57f31c2d", "filename": "src/libcore/rt/uv/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fuv%2Fmod.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -42,7 +42,6 @@ use ptr;\n use libc::{c_void, c_int, size_t, malloc, free, ssize_t};\n use cast::{transmute, transmute_mut_region};\n use ptr::null;\n-use sys::size_of;\n use super::uvll;\n use super::uvll::*;\n use unstable::finally::Finally;"}, {"sha": "4eaf9dcf40a762fd4b4fb1c4c2c865b2aae67b27", "filename": "src/libcore/rt/uvll.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibcore%2Frt%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fuvll.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -32,7 +32,6 @@\n use libc::{size_t, c_int, c_uint, c_void, c_char, uintptr_t};\n use libc::{malloc, free};\n use prelude::*;\n-use ptr::to_unsafe_ptr;\n \n pub struct uv_err_t {\n     code: c_int,"}, {"sha": "5bb94a18e7227beec57524d25f186eba0d0e653d", "filename": "src/librustc/middle/trans/tvec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -28,7 +28,6 @@ use util::common::indenter;\n use util::ppaux::ty_to_str;\n \n use core::option::None;\n-use core::uint;\n use core::vec;\n use syntax::ast;\n use syntax::codemap;"}, {"sha": "a4a5c6ddd217656f56e08e100428184e1b854bc9", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -60,7 +60,6 @@ use middle::ty::{ty_param_substs_and_ty};\n use middle::ty;\n use middle::typeck::rscope::{in_binding_rscope};\n use middle::typeck::rscope::{region_scope, type_rscope, RegionError};\n-use middle::typeck::{CrateCtxt};\n \n use core::result;\n use core::vec;"}, {"sha": "c07dd563cac1c03284f33315fcfa188081093ad3", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -1328,7 +1328,7 @@ pub fn check_expr_with_unifier(fcx: @mut FnCtxt,\n                   sugar: ast::CallSugar) {\n         // Index expressions need to be handled separately, to inform them\n         // that they appear in call position.\n-        let mut bot = check_expr(fcx, f);\n+        let mut _bot = check_expr(fcx, f);\n         check_call_or_method(fcx,\n                              sp,\n                              call_expr_id,"}, {"sha": "8b8771e989a06dd8bd553b9837e6dd7c30716d9b", "filename": "src/libstd/json.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -1202,7 +1202,6 @@ mod tests {\n \n     use core::result;\n     use core::hashmap::linear::LinearMap;\n-    use core::cmp;\n \n \n     fn mk_object(items: &[(~str, Json)]) -> Json {"}, {"sha": "8a239e8b6d8ed0814bcaa2a67d67f4e65a77f197", "filename": "src/libstd/sort.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibstd%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibstd%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsort.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -725,8 +725,6 @@ fn copy_vec<T:Copy>(dest: &mut [T], s1: uint,\n \n #[cfg(test)]\n mod test_qsort3 {\n-    use core::prelude::*;\n-\n     use sort::*;\n \n     use core::vec;\n@@ -770,8 +768,6 @@ mod test_qsort3 {\n \n #[cfg(test)]\n mod test_qsort {\n-    use core::prelude::*;\n-\n     use sort::*;\n \n     use core::int;"}, {"sha": "70b639d6648b8ed0573e00392307d949e01603a1", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -19,11 +19,8 @@ use parse::parser::Parser;\n use parse::token::{Token, EOF, to_str, nonterminal};\n use parse::token;\n \n-use core::option::{Option, Some, None};\n-use core::str;\n-use core::uint;\n-use core::vec;\n-use std::oldmap::HashMap;\n+use core::hashmap::linear::LinearMap;\n+use core::prelude::*;\n \n /* This is an Earley-like parser, without support for in-grammar nonterminals,\n only by calling out to the main rust parser for named nonterminals (which it"}, {"sha": "a0d90a0c70b4d95c9cdd8273a84ef2564d26063e", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7772893a63e6ac83ab461f80fb1f35c8633325/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=fa7772893a63e6ac83ab461f80fb1f35c8633325", "patch": "@@ -20,7 +20,6 @@ use parse::lexer::TokenAndSpan;\n \n use core::option;\n use core::vec;\n-use std;\n \n /* FIXME #2811: figure out how to have a uniquely linked stack, and change to\n    `~` */"}]}