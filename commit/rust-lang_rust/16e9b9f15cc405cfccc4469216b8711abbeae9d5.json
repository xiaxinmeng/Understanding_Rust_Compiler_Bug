{"sha": "16e9b9f15cc405cfccc4469216b8711abbeae9d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZTliOWYxNWNjNDA1Y2ZjY2M0NDY5MjE2Yjg3MTFhYmJlYWU5ZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-05T06:42:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-05T06:42:17Z"}, "message": "Auto merge of #45748 - petrochenkov:short, r=alexcrichton\n\nShorten paths to auxiliary files created by tests\n\nI'm hitting issues with long file paths to object files created by the test suite, similar to https://github.com/rust-lang/rust/issues/45103#issuecomment-335622075.\n\nIf we look at the object file path in https://github.com/rust-lang/rust/issues/45103 we can see that the patch contains of few components:\n```\nspecialization-cross-crate-defaults.stage2-x86_64-pc-windows-gnu.run-pass.libaux\\specialization_cross_crate_defaults.specialization_cross_crate_defaults0.rust-cgu.o\n```\n=>\n\n1. specialization-cross-crate-defaults // test name, required\n2. stage2 // stage disambiguator, required\n3. x86_64-pc-windows-gnu // target disambiguator, required\n4. run-pass // mode disambiguator, rarely required\n5. libaux // suffix, can be shortened\n6. specialization_cross_crate_defaults // required, there may be several libraries in the directory\n7. specialization_cross_crate_defaults0 // codegen unit name, can be shortened?\n8. rust-cgu // suffix, can be shortened?\n9. o // object file extension\n\nThis patch addresses items `4`, `5` and `8`.\n`libaux` is shortened to `aux`, `rust-cgu` is shortened to `rcgu`, mode disambiguator is omitted unless it's necessary (for pretty-printing and debuginfo tests, see https://github.com/rust-lang/rust/pull/24537/commits/38d26d811a44ba93637c84ce77a58af88c47f0ac)\n\nI haven't touched names of codegen units though (`specialization_cross_crate_defaults0`).\nIs it useful for them to have descriptive names including the crate name, as opposed to just `0` or `cgu0` or something?", "tree": {"sha": "49fb0505c79c1059d30de6b6cc2ed2596b80e01b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49fb0505c79c1059d30de6b6cc2ed2596b80e01b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16e9b9f15cc405cfccc4469216b8711abbeae9d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16e9b9f15cc405cfccc4469216b8711abbeae9d5", "html_url": "https://github.com/rust-lang/rust/commit/16e9b9f15cc405cfccc4469216b8711abbeae9d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16e9b9f15cc405cfccc4469216b8711abbeae9d5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44183f50bcba16249487342fb869c3ae6d4c141a", "url": "https://api.github.com/repos/rust-lang/rust/commits/44183f50bcba16249487342fb869c3ae6d4c141a", "html_url": "https://github.com/rust-lang/rust/commit/44183f50bcba16249487342fb869c3ae6d4c141a"}, {"sha": "d588f9338da3f29f03216e2f2685df5b7ad3d0b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d588f9338da3f29f03216e2f2685df5b7ad3d0b3", "html_url": "https://github.com/rust-lang/rust/commit/d588f9338da3f29f03216e2f2685df5b7ad3d0b3"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "8401d493b9dbf575eabf6a72c0fdba8c54cd4a2d", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=16e9b9f15cc405cfccc4469216b8711abbeae9d5", "patch": "@@ -410,7 +410,7 @@ impl_stable_hash_for!(struct self::OutputFilenames {\n     outputs\n });\n \n-pub const RUST_CGU_EXT: &str = \"rust-cgu\";\n+pub const RUST_CGU_EXT: &str = \"rcgu\";\n \n impl OutputFilenames {\n     pub fn path(&self, flavor: OutputType) -> PathBuf {"}, {"sha": "907693ea8a379ee179908b9132eefaf70cc02dcf", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=16e9b9f15cc405cfccc4469216b8711abbeae9d5", "patch": "@@ -1222,7 +1222,7 @@ fn add_upstream_rust_crates(cmd: &mut Linker,\n                 let canonical = f.replace(\"-\", \"_\");\n                 let canonical_name = name.replace(\"-\", \"_\");\n \n-                // Look for `.rust-cgu.o` at the end of the filename to conclude\n+                // Look for `.rcgu.o` at the end of the filename to conclude\n                 // that this is a Rust-related object file.\n                 fn looks_like_rust(s: &str) -> bool {\n                     let path = Path::new(s);"}, {"sha": "6de4f97df0c16bf6df2b83c8fec542a2e8198910", "filename": "src/test/run-make/extra-filename-with-temp-outputs/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftest%2Frun-make%2Fextra-filename-with-temp-outputs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftest%2Frun-make%2Fextra-filename-with-temp-outputs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextra-filename-with-temp-outputs%2FMakefile?ref=16e9b9f15cc405cfccc4469216b8711abbeae9d5", "patch": "@@ -2,5 +2,5 @@\n \n all:\n \t$(RUSTC) -C extra-filename=bar foo.rs -C save-temps\n-\trm $(TMPDIR)/foobar.foo0.rust-cgu.o\n+\trm $(TMPDIR)/foobar.foo0.rcgu.o\n \trm $(TMPDIR)/$(call BIN,foobar)"}, {"sha": "660462ad419f70c70a047590c735a102dcc7f0ee", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=16e9b9f15cc405cfccc4469216b8711abbeae9d5", "patch": "@@ -34,6 +34,20 @@ pub enum Mode {\n     MirOpt,\n }\n \n+impl Mode {\n+    pub fn disambiguator(self) -> &'static str {\n+        // Run-pass and pretty run-pass tests could run concurrently, and if they do,\n+        // they need to keep their output segregated. Same is true for debuginfo tests that\n+        // can be run both on gdb and lldb.\n+        match self {\n+            Pretty => \".pretty\",\n+            DebugInfoGdb => \".gdb\",\n+            DebugInfoLldb => \".lldb\",\n+            _ => \"\",\n+        }\n+    }\n+}\n+\n impl FromStr for Mode {\n     type Err = ();\n     fn from_str(s: &str) -> Result<Mode, ()> {"}, {"sha": "de96aa9cdeb7f7902788b9fb9a0a4d79a6e43a28", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e9b9f15cc405cfccc4469216b8711abbeae9d5/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=16e9b9f15cc405cfccc4469216b8711abbeae9d5", "patch": "@@ -1565,7 +1565,7 @@ actual:\\n\\\n     fn aux_output_dir_name(&self) -> PathBuf {\n         let f = self.output_base_name();\n         let mut fname = f.file_name().unwrap().to_os_string();\n-        fname.push(&format!(\".{}.libaux\", self.config.mode));\n+        fname.push(&format!(\"{}.aux\", self.config.mode.disambiguator()));\n         f.with_file_name(&fname)\n     }\n "}]}