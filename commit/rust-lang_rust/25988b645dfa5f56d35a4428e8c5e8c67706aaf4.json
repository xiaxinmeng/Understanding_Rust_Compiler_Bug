{"sha": "25988b645dfa5f56d35a4428e8c5e8c67706aaf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1OTg4YjY0NWRmYTVmNTZkMzVhNDQyOGU4YzVlOGM2NzcwNmFhZjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-18T21:19:52Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-18T21:19:52Z"}, "message": "elide noop coercions", "tree": {"sha": "545c7f38ecbcb9e38fd91782ce6aa7872931bd0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545c7f38ecbcb9e38fd91782ce6aa7872931bd0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25988b645dfa5f56d35a4428e8c5e8c67706aaf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25988b645dfa5f56d35a4428e8c5e8c67706aaf4", "html_url": "https://github.com/rust-lang/rust/commit/25988b645dfa5f56d35a4428e8c5e8c67706aaf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25988b645dfa5f56d35a4428e8c5e8c67706aaf4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bca07b5ebb59738ef64cd5891507a06c7002dd26", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca07b5ebb59738ef64cd5891507a06c7002dd26", "html_url": "https://github.com/rust-lang/rust/commit/bca07b5ebb59738ef64cd5891507a06c7002dd26"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "164503980cd0b7d56f7d5d914af0363db8967ae5", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/25988b645dfa5f56d35a4428e8c5e8c67706aaf4/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25988b645dfa5f56d35a4428e8c5e8c67706aaf4/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=25988b645dfa5f56d35a4428e8c5e8c67706aaf4", "patch": "@@ -218,10 +218,10 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n         // to type check, we will construct the type that `&M*expr` would\n         // yield.\n \n-        let r_a = match a.sty {\n+        let (r_a, mt_a) = match a.sty {\n             ty::TyRef(r_a, mt_a) => {\n                 try!(coerce_mutbls(mt_a.mutbl, mt_b.mutbl));\n-                r_a\n+                (r_a, mt_a)\n             }\n             _ => return self.unify_and_identity(a, b)\n         };\n@@ -355,6 +355,20 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n \n         // Now apply the autoref. We have to extract the region out of\n         // the final ref type we got.\n+        if ty == a && mt_a.mutbl == hir::MutImmutable && autoderefs == 1 {\n+            // As a special case, if we would produce `&'a *x`, that's\n+            // a total no-op. We end up with the type `&'a T` just as\n+            // we started with.  In that case, just skip it\n+            // altogether. This is just an optimization.\n+            //\n+            // Note that for `&mut`, we DO want to reborrow --\n+            // otherwise, this would be a move, which might be an\n+            // error. For example `foo(self.x)` where `self` and\n+            // `self.x` both have `&mut `type would be a move of\n+            // `self.x`, but we auto-coerce it to `foo(&mut *self.x)`,\n+            // which is a borrow.\n+            return self.identity(ty);\n+        }\n         let r_borrow = match ty.sty {\n             ty::TyRef(r_borrow, _) => r_borrow,\n             _ => self.tcx().sess.span_bug(span,"}]}