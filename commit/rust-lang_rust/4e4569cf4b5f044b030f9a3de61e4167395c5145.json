{"sha": "4e4569cf4b5f044b030f9a3de61e4167395c5145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNDU2OWNmNGI1ZjA0NGIwMzBmOWEzZGU2MWU0MTY3Mzk1YzUxNDU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-25T12:26:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-25T12:26:40Z"}, "message": "fix build and tests with latest nightly", "tree": {"sha": "185c120978b5a15b329869be7e4237b548a42f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/185c120978b5a15b329869be7e4237b548a42f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4569cf4b5f044b030f9a3de61e4167395c5145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4569cf4b5f044b030f9a3de61e4167395c5145", "html_url": "https://github.com/rust-lang/rust/commit/4e4569cf4b5f044b030f9a3de61e4167395c5145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4569cf4b5f044b030f9a3de61e4167395c5145/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3", "html_url": "https://github.com/rust-lang/rust/commit/821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "abc1c98a1dedea0a2d7e20f7dac2483675dcf7dc", "filename": "src/operator.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4569cf4b5f044b030f9a3de61e4167395c5145/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4569cf4b5f044b030f9a3de61e4167395c5145/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=4e4569cf4b5f044b030f9a3de61e4167395c5145", "patch": "@@ -161,12 +161,14 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'a, 'mir, '\n                 if bits == 0 {\n                     // Test if the ptr is in-bounds. Then it cannot be NULL.\n                     // Even dangling pointers cannot be NULL.\n-                    if self.memory().check_bounds_ptr_maybe_dead(ptr).is_ok() {\n+                    if self.memory().check_bounds_ptr(ptr, InboundsCheck::MaybeDead).is_ok() {\n                         return Ok(false);\n                     }\n                 }\n \n-                let (alloc_size, alloc_align) = self.memory().get_size_and_align(ptr.alloc_id);\n+                let (alloc_size, alloc_align) = self.memory()\n+                    .get_size_and_align(ptr.alloc_id, InboundsCheck::MaybeDead)\n+                    .expect(\"determining size+align of dead ptr cannot fail\");\n \n                 // Case II: Alignment gives it away\n                 if ptr.offset.bytes() % alloc_align.bytes() == 0 {"}, {"sha": "9094a9fd3a6803ab6010a9f683ef94e791a76e7f", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4e4569cf4b5f044b030f9a3de61e4167395c5145/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4569cf4b5f044b030f9a3de61e4167395c5145/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=4e4569cf4b5f044b030f9a3de61e4167395c5145", "patch": "@@ -2,7 +2,6 @@\n     async_await,\n     await_macro,\n     futures_api,\n-    pin,\n )]\n \n use std::{future::Future, pin::Pin, task::Poll};"}]}