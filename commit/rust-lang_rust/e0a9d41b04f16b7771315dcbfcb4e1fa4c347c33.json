{"sha": "e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYTlkNDFiMDRmMTZiNzc3MTMxNWRjYmZjYjRlMWZhNGMzNDdjMzM=", "commit": {"author": {"name": "Simon BD", "email": "simon@server", "date": "2012-10-23T03:04:14Z"}, "committer": {"name": "Simon BD", "email": "simon@server", "date": "2012-10-23T03:04:14Z"}, "message": "Re-add bad Ord impl test", "tree": {"sha": "137701b6e3e9099b4ede6e86a2db1ea20e089f56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/137701b6e3e9099b4ede6e86a2db1ea20e089f56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33", "html_url": "https://github.com/rust-lang/rust/commit/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33/comments", "author": {"login": "14427", "id": 2423611, "node_id": "MDQ6VXNlcjI0MjM2MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2423611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/14427", "html_url": "https://github.com/14427", "followers_url": "https://api.github.com/users/14427/followers", "following_url": "https://api.github.com/users/14427/following{/other_user}", "gists_url": "https://api.github.com/users/14427/gists{/gist_id}", "starred_url": "https://api.github.com/users/14427/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/14427/subscriptions", "organizations_url": "https://api.github.com/users/14427/orgs", "repos_url": "https://api.github.com/users/14427/repos", "events_url": "https://api.github.com/users/14427/events{/privacy}", "received_events_url": "https://api.github.com/users/14427/received_events", "type": "User", "site_admin": false}, "committer": {"login": "14427", "id": 2423611, "node_id": "MDQ6VXNlcjI0MjM2MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2423611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/14427", "html_url": "https://github.com/14427", "followers_url": "https://api.github.com/users/14427/followers", "following_url": "https://api.github.com/users/14427/following{/other_user}", "gists_url": "https://api.github.com/users/14427/gists{/gist_id}", "starred_url": "https://api.github.com/users/14427/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/14427/subscriptions", "organizations_url": "https://api.github.com/users/14427/orgs", "repos_url": "https://api.github.com/users/14427/repos", "events_url": "https://api.github.com/users/14427/events{/privacy}", "received_events_url": "https://api.github.com/users/14427/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "254a86e49edb0fbf38d335a50b1ab535fa7fd757", "url": "https://api.github.com/repos/rust-lang/rust/commits/254a86e49edb0fbf38d335a50b1ab535fa7fd757", "html_url": "https://github.com/rust-lang/rust/commit/254a86e49edb0fbf38d335a50b1ab535fa7fd757"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "a42d6be51fb5ce94294aaefb333136e4a69b40bb", "filename": "src/libstd/sort.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33/src%2Flibstd%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33/src%2Flibstd%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsort.rs?ref=e0a9d41b04f16b7771315dcbfcb4e1fa4c347c33", "patch": "@@ -1046,6 +1046,25 @@ mod test_tim_sort {\n         tim_sort(arr);\n         fail ~\"Guarantee the fail\";\n     }\n+\n+    struct DVal { val: ~uint }\n+    impl DVal: Ord {\n+        pure fn lt(_x: &DVal) -> bool { true }\n+        pure fn le(_x: &DVal) -> bool { true }\n+        pure fn gt(_x: &DVal) -> bool { true }\n+        pure fn ge(_x: &DVal) -> bool { true }\n+    }\n+\n+    #[test]\n+    fn test_bad_Ord_impl() {\n+        let rng = rand::Rng();\n+        let mut arr = do vec::from_fn(500) |_i| {\n+            let randVal = rng.gen_uint();\n+            DVal { val: ~randVal }\n+        };\n+\n+        tim_sort(arr);\n+    }\n }\n \n #[cfg(test)]"}]}