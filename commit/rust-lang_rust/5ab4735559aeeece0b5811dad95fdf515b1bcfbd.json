{"sha": "5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYjQ3MzU1NTlhZWVlY2UwYjU4MTFkYWQ5NWZkZjUxNWIxYmNmYmQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-22T20:27:42Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-23T11:17:55Z"}, "message": "Recognise nested tuples/arrays/structs", "tree": {"sha": "37c62eb8126da58cc81d23f943751be20ed01609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37c62eb8126da58cc81d23f943751be20ed01609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "html_url": "https://github.com/rust-lang/rust/commit/5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fa02ecc291f0a6b356fbb3b1e14649082b93a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa02ecc291f0a6b356fbb3b1e14649082b93a2f", "html_url": "https://github.com/rust-lang/rust/commit/5fa02ecc291f0a6b356fbb3b1e14649082b93a2f"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "13046d8002a9be104a25cc8d0decad0376e02647", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "patch": "@@ -723,6 +723,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         );\n     }\n \n+    fn is_destructuring_place_expr(&self, expr: &'tcx hir::Expr) -> bool {\n+        match &expr.kind {\n+            ExprKind::Array(comps) | ExprKind::Tup(comps) => {\n+                comps.iter().all(|e| self.is_destructuring_place_expr(e))\n+            }\n+            ExprKind::Struct(_path, fields, rest) => {\n+                rest.as_ref().map(|e| self.is_destructuring_place_expr(e)).unwrap_or(true) &&\n+                    fields.iter().all(|f| self.is_destructuring_place_expr(&f.expr))\n+            }\n+            _ => expr.is_syntactic_place_expr(),\n+        }\n+    }\n+\n     pub(crate) fn check_lhs_assignable(\n         &self,\n         lhs: &'tcx hir::Expr,\n@@ -736,17 +749,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 DiagnosticId::Error(err_code.into()),\n             );\n             err.span_label(lhs.span, \"cannot assign to this expression\");\n-            let destructuring_assignment = match &lhs.kind {\n-                ExprKind::Array(comps) | ExprKind::Tup(comps) => {\n-                    comps.iter().all(|e| e.is_syntactic_place_expr())\n-                }\n-                ExprKind::Struct(_path, fields, rest) => {\n-                    rest.as_ref().map(|e| e.is_syntactic_place_expr()).unwrap_or(true) &&\n-                        fields.iter().all(|f| f.expr.is_syntactic_place_expr())\n-                }\n-                _ => false,\n-            };\n-            if destructuring_assignment {\n+            if self.is_destructuring_place_expr(lhs) {\n                 err.note(\"destructuring assignments are not yet supported\");\n                 err.note(\n                     \"for more information, see https://github.com/rust-lang/rfcs/issues/372\","}, {"sha": "876c9efea264782686750e125f0faece79496e1f", "filename": "src/test/ui/bad/destructuring-assignment.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.rs?ref=5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "patch": "@@ -18,4 +18,8 @@ fn main() {\n     //~^ ERROR binary assignment operation `+=` cannot be applied\n \n     S { x: a, ..s } = S { x: 3, y: 4 }; //~ ERROR invalid left-hand side of assignment\n+\n+    let c = 3;\n+\n+    ((a, b), c) = ((3, 4), 5); //~ ERROR invalid left-hand side of assignment\n }"}, {"sha": "845008b06937c2ad340bd70272b0674f69c09c4a", "filename": "src/test/ui/bad/destructuring-assignment.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4735559aeeece0b5811dad95fdf515b1bcfbd/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fdestructuring-assignment.stderr?ref=5ab4735559aeeece0b5811dad95fdf515b1bcfbd", "patch": "@@ -105,7 +105,18 @@ LL |     S { x: a, ..s } = S { x: 3, y: 4 };\n    = note: destructuring assignments are not yet supported\n    = note: for more information, see https://github.com/rust-lang/rfcs/issues/372\n \n-error: aborting due to 10 previous errors\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/destructuring-assignment.rs:24:5\n+   |\n+LL |     ((a, b), c) = ((3, 4), 5);\n+   |     -----------^^^^^^^^^^^^^^\n+   |     |\n+   |     cannot assign to this expression\n+   |\n+   = note: destructuring assignments are not yet supported\n+   = note: for more information, see https://github.com/rust-lang/rfcs/issues/372\n+\n+error: aborting due to 11 previous errors\n \n Some errors have detailed explanations: E0067, E0070, E0368.\n For more information about an error, try `rustc --explain E0067`."}]}