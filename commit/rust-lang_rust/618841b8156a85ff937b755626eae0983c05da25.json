{"sha": "618841b8156a85ff937b755626eae0983c05da25", "node_id": "C_kwDOAAsO6NoAKDYxODg0MWI4MTU2YTg1ZmY5MzdiNzU1NjI2ZWFlMDk4M2MwNWRhMjU", "commit": {"author": {"name": "John Bobbo", "email": "johnbobbo59@gmail.com", "date": "2023-04-28T02:48:37Z"}, "committer": {"name": "John Bobbo", "email": "johnbobbo59@gmail.com", "date": "2023-04-28T02:48:37Z"}, "message": "Use `NonNull::new_unchecked` and `NonNull::len` in\n`rustc_arena`.", "tree": {"sha": "fecf64f32a76c99ff089cbe2680f45af79ce4177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fecf64f32a76c99ff089cbe2680f45af79ce4177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/618841b8156a85ff937b755626eae0983c05da25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIzBAABCgAdFiEEu0LRcQjLMkxoGLxM1bHKheRsRwkFAmRLNNYACgkQ1bHKheRs\nRwn5dhAApFXrxLw9ziG84x4eJgGTAzSTMzkBbPoUaZCFo0VPLun0cqR2eJgsPir9\nF8ZY1qGusxzINh0hZJBUpWRCMFAW3czEUUk6BZESMI8Ooeo1JxJn5I3CXEXdr2UQ\noclpteP8XqPEM8XKWVRcgjc3LdqDGPPxCLokz9Q5aUZUwNLOe5nLqsEHo7dfaPOf\nh0xjYY3oLzk7pgQiSQIV7eemJ6yfLQqpeOVs8WxNblTjoK1WstI56dTLgLVApD8n\nCrIwWtO4SFAZokbPStYTrBppfAgy/1iqo0qMNyuZuLeoELZYOxUA5jGN05cb0LTV\nTWLevP0TiLikfsjXFR1ZpM6grh1/ThQEyrbnEhNunJUgUeaLXEfosKDvHpTCpWjE\nPxDbilAutIvrA/wTHUz7tj28aUxs6CYTHxHjjit78NpffOzDlsWjYnQS7JMBTchD\n5bm9TMaxvIvkrKb1CDwh20aj5BWk+UaO7qvzO4cQ3OoAssOK4IOL9Jk41iOR+3C2\n3DMiSS+XoCRrhrv8aNAEkxaAjJF6Ejj3s6bKv3bq1hfx0VkSAL06PYl0VtrQUNEs\n1CJ8wIZQlYKDlk4olOSfuVsnMA3l0WpUecPj1J7oWrjPJ49YBNvCFg+OL82dvjFu\nPFIE6F4dYTB0TLXoPTUXV3X8YvK1mdCU1SJc1zU+EH4XXuIwUgg=\n=XS5Y\n-----END PGP SIGNATURE-----", "payload": "tree fecf64f32a76c99ff089cbe2680f45af79ce4177\nparent 1a6ae3d692cfb52b21d0f45ba50b659486e53d6c\nauthor John Bobbo <johnbobbo59@gmail.com> 1682650117 -0700\ncommitter John Bobbo <johnbobbo59@gmail.com> 1682650117 -0700\n\nUse `NonNull::new_unchecked` and `NonNull::len` in\n`rustc_arena`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/618841b8156a85ff937b755626eae0983c05da25", "html_url": "https://github.com/rust-lang/rust/commit/618841b8156a85ff937b755626eae0983c05da25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/618841b8156a85ff937b755626eae0983c05da25/comments", "author": {"login": "JohnBobbo96", "id": 113238176, "node_id": "U_kgDOBr_goA", "avatar_url": "https://avatars.githubusercontent.com/u/113238176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnBobbo96", "html_url": "https://github.com/JohnBobbo96", "followers_url": "https://api.github.com/users/JohnBobbo96/followers", "following_url": "https://api.github.com/users/JohnBobbo96/following{/other_user}", "gists_url": "https://api.github.com/users/JohnBobbo96/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnBobbo96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnBobbo96/subscriptions", "organizations_url": "https://api.github.com/users/JohnBobbo96/orgs", "repos_url": "https://api.github.com/users/JohnBobbo96/repos", "events_url": "https://api.github.com/users/JohnBobbo96/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnBobbo96/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnBobbo96", "id": 113238176, "node_id": "U_kgDOBr_goA", "avatar_url": "https://avatars.githubusercontent.com/u/113238176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnBobbo96", "html_url": "https://github.com/JohnBobbo96", "followers_url": "https://api.github.com/users/JohnBobbo96/followers", "following_url": "https://api.github.com/users/JohnBobbo96/following{/other_user}", "gists_url": "https://api.github.com/users/JohnBobbo96/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnBobbo96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnBobbo96/subscriptions", "organizations_url": "https://api.github.com/users/JohnBobbo96/orgs", "repos_url": "https://api.github.com/users/JohnBobbo96/repos", "events_url": "https://api.github.com/users/JohnBobbo96/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnBobbo96/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "html_url": "https://github.com/rust-lang/rust/commit/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "236bdb99709e82f814a6a280ebad0c223213b039", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/618841b8156a85ff937b755626eae0983c05da25/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/618841b8156a85ff937b755626eae0983c05da25/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=618841b8156a85ff937b755626eae0983c05da25", "patch": "@@ -74,7 +74,7 @@ impl<T> ArenaChunk<T> {\n     #[inline]\n     unsafe fn new(capacity: usize) -> ArenaChunk<T> {\n         ArenaChunk {\n-            storage: NonNull::new(Box::into_raw(Box::new_uninit_slice(capacity))).unwrap(),\n+            storage: NonNull::new_unchecked(Box::into_raw(Box::new_uninit_slice(capacity))),\n             entries: 0,\n         }\n     }\n@@ -85,7 +85,7 @@ impl<T> ArenaChunk<T> {\n         // The branch on needs_drop() is an -O1 performance optimization.\n         // Without the branch, dropping TypedArena<u8> takes linear time.\n         if mem::needs_drop::<T>() {\n-            let slice = &mut *(self.storage.as_mut());\n+            let slice = self.storage.as_mut();\n             ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(&mut slice[..len]));\n         }\n     }\n@@ -104,7 +104,7 @@ impl<T> ArenaChunk<T> {\n                 // A pointer as large as possible for zero-sized elements.\n                 ptr::invalid_mut(!0)\n             } else {\n-                self.start().add((*self.storage.as_ptr()).len())\n+                self.start().add(self.storage.len())\n             }\n         }\n     }\n@@ -288,7 +288,7 @@ impl<T> TypedArena<T> {\n                 // If the previous chunk's len is less than HUGE_PAGE\n                 // bytes, then this chunk will be least double the previous\n                 // chunk's size.\n-                new_cap = (*last_chunk.storage.as_ptr()).len().min(HUGE_PAGE / elem_size / 2);\n+                new_cap = last_chunk.storage.len().min(HUGE_PAGE / elem_size / 2);\n                 new_cap *= 2;\n             } else {\n                 new_cap = PAGE / elem_size;\n@@ -396,7 +396,7 @@ impl DroplessArena {\n                 // If the previous chunk's len is less than HUGE_PAGE\n                 // bytes, then this chunk will be least double the previous\n                 // chunk's size.\n-                new_cap = (*last_chunk.storage.as_ptr()).len().min(HUGE_PAGE / 2);\n+                new_cap = last_chunk.storage.len().min(HUGE_PAGE / 2);\n                 new_cap *= 2;\n             } else {\n                 new_cap = PAGE;"}]}