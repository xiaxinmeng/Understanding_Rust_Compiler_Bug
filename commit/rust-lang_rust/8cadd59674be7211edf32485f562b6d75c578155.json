{"sha": "8cadd59674be7211edf32485f562b6d75c578155", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYWRkNTk2NzRiZTcyMTFlZGYzMjQ4NWY1NjJiNmQ3NWM1NzgxNTU=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-23T18:47:22Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-27T18:21:15Z"}, "message": "Correctly lift empty lists of clauses and goals", "tree": {"sha": "e73b185fc1c9b192c31f6da8904b0593da9b4290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e73b185fc1c9b192c31f6da8904b0593da9b4290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cadd59674be7211edf32485f562b6d75c578155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cadd59674be7211edf32485f562b6d75c578155", "html_url": "https://github.com/rust-lang/rust/commit/8cadd59674be7211edf32485f562b6d75c578155", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cadd59674be7211edf32485f562b6d75c578155/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ef0c38b748e48d85182ab58c92a15a878e4864", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ef0c38b748e48d85182ab58c92a15a878e4864", "html_url": "https://github.com/rust-lang/rust/commit/37ef0c38b748e48d85182ab58c92a15a878e4864"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "289ef4da9922766cceeb3e92bd3ec7b392ea0468", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8cadd59674be7211edf32485f562b6d75c578155/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cadd59674be7211edf32485f562b6d75c578155/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=8cadd59674be7211edf32485f562b6d75c578155", "patch": "@@ -1714,6 +1714,10 @@ impl<'a, 'tcx> Lift<'tcx> for &'a List<Goal<'a>> {\n         &self,\n         tcx: TyCtxt<'b, 'gcx, 'tcx>,\n     ) -> Option<&'tcx List<Goal<'tcx>>> {\n+        if self.is_empty() {\n+            return Some(List::empty());\n+        }\n+\n         if tcx.interners.arena.in_arena(*self as *const _) {\n             return Some(unsafe { mem::transmute(*self) });\n         }\n@@ -1732,6 +1736,10 @@ impl<'a, 'tcx> Lift<'tcx> for &'a List<Clause<'a>> {\n         &self,\n         tcx: TyCtxt<'b, 'gcx, 'tcx>,\n     ) -> Option<&'tcx List<Clause<'tcx>>> {\n+        if self.is_empty() {\n+            return Some(List::empty());\n+        }\n+\n         if tcx.interners.arena.in_arena(*self as *const _) {\n             return Some(unsafe { mem::transmute(*self) });\n         }"}]}