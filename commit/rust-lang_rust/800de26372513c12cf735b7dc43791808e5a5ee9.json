{"sha": "800de26372513c12cf735b7dc43791808e5a5ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMGRlMjYzNzI1MTNjMTJjZjczNWI3ZGM0Mzc5MTgwOGU1YTVlZTk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-09T00:07:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-09T01:40:30Z"}, "message": "Remove obsolete FIXMEs, close #2345.", "tree": {"sha": "d4f66078c97c3bfa89f13aef5dc1be96f129e7dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4f66078c97c3bfa89f13aef5dc1be96f129e7dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/800de26372513c12cf735b7dc43791808e5a5ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/800de26372513c12cf735b7dc43791808e5a5ee9", "html_url": "https://github.com/rust-lang/rust/commit/800de26372513c12cf735b7dc43791808e5a5ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/800de26372513c12cf735b7dc43791808e5a5ee9/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab71c183b9120db520abaf162da8095249f64b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab71c183b9120db520abaf162da8095249f64b02", "html_url": "https://github.com/rust-lang/rust/commit/ab71c183b9120db520abaf162da8095249f64b02"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "16c992a97fe7fa47962a542f1b6400ac44c64ef9", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/800de26372513c12cf735b7dc43791808e5a5ee9/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/800de26372513c12cf735b7dc43791808e5a5ee9/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=800de26372513c12cf735b7dc43791808e5a5ee9", "patch": "@@ -61,7 +61,6 @@ fn sha1() -> sha1 {\n          work_buf: @~[mut u32]};\n \n     fn add_input(st: sha1state, msg: ~[u8]) {\n-        /* FIXME: Should be typestate precondition (#2345) */\n         assert (!st.computed);\n         for vec::each(msg) |element| {\n             st.msg_block[st.msg_block_idx] = element;\n@@ -78,7 +77,6 @@ fn sha1() -> sha1 {\n         }\n     }\n     fn process_msg_block(st: sha1state) {\n-        // FIXME: Make precondition (#2345)\n         assert (vec::len(st.h) == digest_buf_len);\n         assert (vec::len(*st.work_buf) == work_buf_len);\n         let mut t: int; // Loop counter\n@@ -180,7 +178,6 @@ fn sha1() -> sha1 {\n      * can be assumed that the message digest has been computed.\n      */\n     fn pad_msg(st: sha1state) {\n-        // FIXME: Should be a precondition (#2345)\n         assert (vec::len(st.msg_block) == msg_block_len);\n \n         /*\n@@ -219,7 +216,6 @@ fn sha1() -> sha1 {\n \n     impl sha1state: sha1 {\n         fn reset() {\n-            // FIXME: Should be typestate precondition (#2345)\n             assert (vec::len(self.h) == digest_buf_len);\n             self.len_low = 0u32;\n             self.len_high = 0u32;"}]}