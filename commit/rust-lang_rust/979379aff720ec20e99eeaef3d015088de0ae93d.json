{"sha": "979379aff720ec20e99eeaef3d015088de0ae93d", "node_id": "C_kwDOAAsO6NoAKDk3OTM3OWFmZjcyMGVjMjBlOTllZWFlZjNkMDE1MDg4ZGUwYWU5M2Q", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T03:05:16Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-05T19:40:30Z"}, "message": "Resolve vars in result from scrape_region_constraints", "tree": {"sha": "8294707f53a2fde2f4993c027df9e5be1f67f149", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8294707f53a2fde2f4993c027df9e5be1f67f149"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/979379aff720ec20e99eeaef3d015088de0ae93d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/979379aff720ec20e99eeaef3d015088de0ae93d", "html_url": "https://github.com/rust-lang/rust/commit/979379aff720ec20e99eeaef3d015088de0ae93d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/979379aff720ec20e99eeaef3d015088de0ae93d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408bbd040613f6776e0a7d05d582c81f4ddc189a", "url": "https://api.github.com/repos/rust-lang/rust/commits/408bbd040613f6776e0a7d05d582c81f4ddc189a", "html_url": "https://github.com/rust-lang/rust/commit/408bbd040613f6776e0a7d05d582c81f4ddc189a"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "8b0973021bcc83ef7463bf711553bc49461491fd", "filename": "compiler/rustc_trait_selection/src/traits/query/type_op/custom.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/979379aff720ec20e99eeaef3d015088de0ae93d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979379aff720ec20e99eeaef3d015088de0ae93d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=979379aff720ec20e99eeaef3d015088de0ae93d", "patch": "@@ -5,6 +5,7 @@ use crate::traits::ObligationCtxt;\n use rustc_errors::ErrorGuaranteed;\n use rustc_infer::infer::region_constraints::RegionConstraintData;\n use rustc_middle::traits::query::NoSolution;\n+use rustc_middle::ty::{TyCtxt, TypeFoldable};\n use rustc_span::source_map::DUMMY_SP;\n use rustc_span::Span;\n \n@@ -24,9 +25,10 @@ impl<F> CustomTypeOp<F> {\n     }\n }\n \n-impl<'tcx, F, R: fmt::Debug> super::TypeOp<'tcx> for CustomTypeOp<F>\n+impl<'tcx, F, R> super::TypeOp<'tcx> for CustomTypeOp<F>\n where\n     F: FnOnce(&ObligationCtxt<'_, 'tcx>) -> Result<R, NoSolution>,\n+    R: fmt::Debug + TypeFoldable<TyCtxt<'tcx>>,\n {\n     type Output = R;\n     /// We can't do any custom error reporting for `CustomTypeOp`, so\n@@ -57,12 +59,16 @@ impl<F> fmt::Debug for CustomTypeOp<F> {\n \n /// Executes `op` and then scrapes out all the \"old style\" region\n /// constraints that result, creating query-region-constraints.\n-pub fn scrape_region_constraints<'tcx, Op: super::TypeOp<'tcx, Output = R>, R>(\n+pub fn scrape_region_constraints<'tcx, Op, R>(\n     infcx: &InferCtxt<'tcx>,\n     op: impl FnOnce(&ObligationCtxt<'_, 'tcx>) -> Result<R, NoSolution>,\n     name: &'static str,\n     span: Span,\n-) -> Result<(TypeOpOutput<'tcx, Op>, RegionConstraintData<'tcx>), ErrorGuaranteed> {\n+) -> Result<(TypeOpOutput<'tcx, Op>, RegionConstraintData<'tcx>), ErrorGuaranteed>\n+where\n+    R: TypeFoldable<TyCtxt<'tcx>>,\n+    Op: super::TypeOp<'tcx, Output = R>,\n+{\n     // During NLL, we expect that nobody will register region\n     // obligations **except** as part of a custom type op (and, at the\n     // end of each custom type op, we scrape out the region\n@@ -91,6 +97,9 @@ pub fn scrape_region_constraints<'tcx, Op: super::TypeOp<'tcx, Output = R>, R>(\n         }\n     })?;\n \n+    // Next trait solver performs operations locally, and normalize goals should resolve vars.\n+    let value = infcx.resolve_vars_if_possible(value);\n+\n     let region_obligations = infcx.take_registered_region_obligations();\n     let region_constraint_data = infcx.take_and_reset_region_constraints();\n     let region_constraints = query_response::make_query_region_constraints("}, {"sha": "9a9f129ec3ab659edbdfcbf1dc17779b5e924e8d", "filename": "tests/ui/issues/issue-13167.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fissues%2Fissue-13167.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fissues%2Fissue-13167.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-13167.rs?ref=979379aff720ec20e99eeaef3d015088de0ae93d", "patch": "@@ -1,5 +1,7 @@\n // check-pass\n // pretty-expanded FIXME #23616\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n \n use std::slice;\n "}, {"sha": "27410d4c3b08e24c536daf8369361b235a29146b", "filename": "tests/ui/issues/issue-15734.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fissues%2Fissue-15734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fissues%2Fissue-15734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-15734.rs?ref=979379aff720ec20e99eeaef3d015088de0ae93d", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n-// If `Index` used an associated type for its output, this test would\n-// work more smoothly.\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n \n use std::ops::Index;\n "}, {"sha": "015b72367f1d740f19c1a3ee192c425e105fe58f", "filename": "tests/ui/nll/issue-53119.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fnll%2Fissue-53119.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979379aff720ec20e99eeaef3d015088de0ae93d/tests%2Fui%2Fnll%2Fissue-53119.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fissue-53119.rs?ref=979379aff720ec20e99eeaef3d015088de0ae93d", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n \n use std::ops::Deref;\n "}]}