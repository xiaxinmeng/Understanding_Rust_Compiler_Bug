{"sha": "8fd316f5b560d926333f0c7cd832c179f430ea27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZDMxNmY1YjU2MGQ5MjYzMzNmMGM3Y2Q4MzJjMTc5ZjQzMGVhMjc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-05-24T13:51:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-05-24T16:01:28Z"}, "message": "pacify the mercilous tidy", "tree": {"sha": "395900a1843d15ab66e0ed7c2935b64928e3fb81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/395900a1843d15ab66e0ed7c2935b64928e3fb81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fd316f5b560d926333f0c7cd832c179f430ea27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd316f5b560d926333f0c7cd832c179f430ea27", "html_url": "https://github.com/rust-lang/rust/commit/8fd316f5b560d926333f0c7cd832c179f430ea27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fd316f5b560d926333f0c7cd832c179f430ea27/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1a17091469f0d0f706568ed9c0f12c2f3ed143", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1a17091469f0d0f706568ed9c0f12c2f3ed143", "html_url": "https://github.com/rust-lang/rust/commit/3b1a17091469f0d0f706568ed9c0f12c2f3ed143"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "8a73219cf7091b2b38d7c70f429d31010ea4c9d4", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8fd316f5b560d926333f0c7cd832c179f430ea27/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd316f5b560d926333f0c7cd832c179f430ea27/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=8fd316f5b560d926333f0c7cd832c179f430ea27", "patch": "@@ -1529,7 +1529,10 @@ impl<'a, 'tcx> Lift<'tcx> for &'a Goal<'a> {\n \n impl<'a, 'tcx> Lift<'tcx> for &'a Slice<Goal<'a>> {\n     type Lifted = &'tcx Slice<Goal<'tcx>>;\n-    fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<&'tcx Slice<Goal<'tcx>>> {\n+    fn lift_to_tcx<'b, 'gcx>(\n+        &self,\n+        tcx: TyCtxt<'b, 'gcx, 'tcx>,\n+    ) -> Option<&'tcx Slice<Goal<'tcx>>> {\n         if tcx.interners.arena.in_arena(*self as *const _) {\n             return Some(unsafe { mem::transmute(*self) });\n         }\n@@ -1544,7 +1547,10 @@ impl<'a, 'tcx> Lift<'tcx> for &'a Slice<Goal<'a>> {\n \n impl<'a, 'tcx> Lift<'tcx> for &'a Slice<Clause<'a>> {\n     type Lifted = &'tcx Slice<Clause<'tcx>>;\n-    fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<&'tcx Slice<Clause<'tcx>>> {\n+    fn lift_to_tcx<'b, 'gcx>(\n+        &self,\n+        tcx: TyCtxt<'b, 'gcx, 'tcx>,\n+    ) -> Option<&'tcx Slice<Clause<'tcx>>> {\n         if tcx.interners.arena.in_arena(*self as *const _) {\n             return Some(unsafe { mem::transmute(*self) });\n         }"}, {"sha": "bf26409c3ef5fa858cb932f967eb5e1b8a485347", "filename": "src/librustc_traits/chalk_context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8fd316f5b560d926333f0c7cd832c179f430ea27/src%2Flibrustc_traits%2Fchalk_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd316f5b560d926333f0c7cd832c179f430ea27/src%2Flibrustc_traits%2Fchalk_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context.rs?ref=8fd316f5b560d926333f0c7cd832c179f430ea27", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use chalk_engine::fallible::Fallible as ChalkEngineFallible;\n use chalk_engine::{context, hh::HhGoal, DelayedLiteral, ExClause};\n use rustc::infer::canonical::{"}]}