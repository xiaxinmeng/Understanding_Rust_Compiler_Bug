{"sha": "8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "node_id": "C_kwDOAAsO6NoAKDhkZGJmYWRkYTBjZDBiMmNkZTExYmQ2MGQxZTM3ODU2NTc4NDFmYzA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-06T14:24:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-06T14:24:14Z"}, "message": "Rollup merge of #107580 - lenko-d:default_value_for_a_lifetime_generic_parameter_produces_confusing_diagnostic, r=compiler-errors\n\nRecover from lifetimes with default lifetimes in generic args\n\nFixes [#107492](https://github.com/rust-lang/rust/issues/107492)", "tree": {"sha": "efe002b18ca0da69a227aaf335db10ac20404ab8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe002b18ca0da69a227aaf335db10ac20404ab8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj4Q2OCRBK7hj4Ov3rIwAAhHwIAKkq3NR77yoG8nX2gBcauh4P\noBj0FvIwhu8ttgGnPvH98ph3iMINVYFnp+fZVRXdyDaG63qtf78YlfjbeC9mB8Oo\nCEUVRZXY2yE6qzIpUsgHkCCmoS3x6QMuzZhp2u93r/iPLLxZz4uakBeMJORH6gYr\ncruDy5kcIbQOvkvSdXWjolYvG2OpJVrc1ICX4l8hh7qTXDFWCBCcZkPPt1KrTqeS\nnY8svuEsou9zcF7Ag/U+DmoVhObHOa7d6r5v2qcQbPXHd+fiM+FqTBPkkh1UNxpY\nle6Pa4CT5ef8JA7NaLJ+fyW1SkEIXyNxDpzj2fotUQ6TZuKzuRaeQblSic1iBP0=\n=IVsZ\n-----END PGP SIGNATURE-----\n", "payload": "tree efe002b18ca0da69a227aaf335db10ac20404ab8\nparent 496adf81deaec94015e4cde2165d094eac09a940\nparent d9f60052d2471b15417153d3daca8d83d1c44fd4\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1675693454 +0530\ncommitter GitHub <noreply@github.com> 1675693454 +0530\n\nRollup merge of #107580 - lenko-d:default_value_for_a_lifetime_generic_parameter_produces_confusing_diagnostic, r=compiler-errors\n\nRecover from lifetimes with default lifetimes in generic args\n\nFixes [#107492](https://github.com/rust-lang/rust/issues/107492)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "html_url": "https://github.com/rust-lang/rust/commit/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "496adf81deaec94015e4cde2165d094eac09a940", "url": "https://api.github.com/repos/rust-lang/rust/commits/496adf81deaec94015e4cde2165d094eac09a940", "html_url": "https://github.com/rust-lang/rust/commit/496adf81deaec94015e4cde2165d094eac09a940"}, {"sha": "d9f60052d2471b15417153d3daca8d83d1c44fd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f60052d2471b15417153d3daca8d83d1c44fd4", "html_url": "https://github.com/rust-lang/rust/commit/d9f60052d2471b15417153d3daca8d83d1c44fd4"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "581bb9a766e20640b50b5a279712f27fe4d2b35c", "filename": "compiler/rustc_error_messages/locales/en-US/parse.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl?ref=8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "patch": "@@ -475,6 +475,9 @@ parse_unexpected_token_after_struct_name_found_other = expected `where`, `{\"{\"}`\n parse_unexpected_self_in_generic_parameters = unexpected keyword `Self` in generic parameters\n     .note = you cannot use `Self` as a generic parameter because it is reserved for associated items\n \n+parse_unexpected_default_value_for_lifetime_in_generic_parameters = unexpected default lifetime parameter\n+    .label = lifetime parameters cannot have default values\n+\n parse_multiple_where_clauses = cannot define duplicate `where` clauses on an item\n     .label = previous `where` clause starts here\n     .suggestion = consider joining the two `where` clauses into one"}, {"sha": "0c11e0026900e4c2f5b5c6abb931ca3a460f8cc4", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "patch": "@@ -1601,6 +1601,14 @@ pub(crate) struct UnexpectedSelfInGenericParameters {\n     pub span: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(parse_unexpected_default_value_for_lifetime_in_generic_parameters)]\n+pub(crate) struct UnexpectedDefaultValueForLifetimeInGenericParameters {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(parse_multiple_where_clauses)]\n pub(crate) struct MultipleWhereClauses {"}, {"sha": "23f49ec55a18ddda7a413b3de172b7df7b05cc01", "filename": "compiler/rustc_parse/src/parser/generics.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs?ref=8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "patch": "@@ -1,5 +1,6 @@\n use crate::errors::{\n-    MultipleWhereClauses, UnexpectedSelfInGenericParameters, WhereClauseBeforeTupleStructBody,\n+    MultipleWhereClauses, UnexpectedDefaultValueForLifetimeInGenericParameters,\n+    UnexpectedSelfInGenericParameters, WhereClauseBeforeTupleStructBody,\n     WhereClauseBeforeTupleStructBodySugg,\n };\n \n@@ -145,6 +146,20 @@ impl<'a> Parser<'a> {\n                         } else {\n                             (None, Vec::new())\n                         };\n+\n+                        if this.check_noexpect(&token::Eq)\n+                            && this.look_ahead(1, |t| t.is_lifetime())\n+                        {\n+                            let lo = this.token.span;\n+                            // Parse `= 'lifetime`.\n+                            this.bump(); // `=`\n+                            this.bump(); // `'lifetime`\n+                            let span = lo.to(this.prev_token.span);\n+                            this.sess.emit_err(\n+                                UnexpectedDefaultValueForLifetimeInGenericParameters { span },\n+                            );\n+                        }\n+\n                         Some(ast::GenericParam {\n                             ident: lifetime.ident,\n                             id: lifetime.id,"}, {"sha": "f129035d040f1ff5678af9f84b585bdc54965b76", "filename": "tests/ui/lifetimes/issue-107492-default-value-for-lifetime.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.rs?ref=8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "patch": "@@ -0,0 +1,6 @@\n+pub struct DefaultLifetime<'a, 'b = 'static> {\n+                                   //~^ ERROR unexpected default lifetime parameter\n+    _marker: std::marker::PhantomData<&'a &'b ()>,\n+}\n+\n+fn main(){}"}, {"sha": "c235c31809fb763f740a5cec5cda1acaf659c3f4", "filename": "tests/ui/lifetimes/issue-107492-default-value-for-lifetime.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ddbfadda0cd0b2cde11bd60d1e3785657841fc0/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Fissue-107492-default-value-for-lifetime.stderr?ref=8ddbfadda0cd0b2cde11bd60d1e3785657841fc0", "patch": "@@ -0,0 +1,8 @@\n+error: unexpected default lifetime parameter\n+  --> $DIR/issue-107492-default-value-for-lifetime.rs:1:35\n+   |\n+LL | pub struct DefaultLifetime<'a, 'b = 'static> {\n+   |                                   ^^^^^^^^^ lifetime parameters cannot have default values\n+\n+error: aborting due to previous error\n+"}]}