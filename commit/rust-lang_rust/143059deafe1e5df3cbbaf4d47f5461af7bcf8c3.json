{"sha": "143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MzA1OWRlYWZlMWU1ZGYzY2JiYWY0ZDQ3ZjU0NjFhZjdiY2Y4YzM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-01-24T08:30:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-24T08:30:55Z"}, "message": "Rollup merge of #68438 - Aaron1011:fix/tait-non-defining, r=estebank\n\nAccount for non-types in substs for opaque type error messages\n\nFixes #68368\n\nPreviously, I assumed that the substs contained only types, which caused\nthe computed index number to be wrong.", "tree": {"sha": "0c9739e3b46b53b798ecff7b957497272970ce99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c9739e3b46b53b798ecff7b957497272970ce99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeKqs/CRBK7hj4Ov3rIwAAdHIIAIXsds3l5kAe1DEPlnSzDIgv\np2hUFasl90j4LsPsg/boauQtkH4dO/uP/CmQIHqgPBuD7Eo7Y112js91/bUQAkT1\nffYhpG8kRTbrAoTB43yDYyBvjPQIyPRL8tM/TzjXxY6YICoImXOZWvWJdt39wTgT\nPEUJSN0XYT0N6B8cRuuUHoiviZxIS7BZZLVx4LWH3lQOyRINqMuYHziMbKG0EqEf\nJdYSQxY7ALp0taZ8wdO0xneO3vBFUVB0p61MdKqCjw1Srf9AJ//gGJpnVWzns/JZ\nBUW6QfWgN7dmW5+0gDntE81VNGSg5jsPRcpoOsoOzw5xjfm+GxVdgPJVFn3OtVI=\n=mj/p\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c9739e3b46b53b798ecff7b957497272970ce99\nparent eb769ed6b09cb9fa007508caef808f5e50264cb0\nparent 4ee4287b1da13f56d063fa5b4234780def0d5af1\nauthor Tyler Mandry <tmandry@gmail.com> 1579854655 -0800\ncommitter GitHub <noreply@github.com> 1579854655 -0800\n\nRollup merge of #68438 - Aaron1011:fix/tait-non-defining, r=estebank\n\nAccount for non-types in substs for opaque type error messages\n\nFixes #68368\n\nPreviously, I assumed that the substs contained only types, which caused\nthe computed index number to be wrong.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "html_url": "https://github.com/rust-lang/rust/commit/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb769ed6b09cb9fa007508caef808f5e50264cb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb769ed6b09cb9fa007508caef808f5e50264cb0", "html_url": "https://github.com/rust-lang/rust/commit/eb769ed6b09cb9fa007508caef808f5e50264cb0"}, {"sha": "4ee4287b1da13f56d063fa5b4234780def0d5af1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee4287b1da13f56d063fa5b4234780def0d5af1", "html_url": "https://github.com/rust-lang/rust/commit/4ee4287b1da13f56d063fa5b4234780def0d5af1"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "843872d0ff99a1888c680766a8db9e628706a39f", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "patch": "@@ -1673,8 +1673,15 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                     ty::Param(_) => true,\n                     _ => false,\n                 };\n-                let bad_substs: Vec<_> =\n-                    substs.types().enumerate().filter(|(_, ty)| !is_param(ty)).collect();\n+                let bad_substs: Vec<_> = substs\n+                    .iter()\n+                    .enumerate()\n+                    .filter_map(|(i, k)| {\n+                        if let GenericArgKind::Type(ty) = k.unpack() { Some((i, ty)) } else { None }\n+                    })\n+                    .filter(|(_, ty)| !is_param(ty))\n+                    .collect();\n+\n                 if !bad_substs.is_empty() {\n                     let identity_substs = InternalSubsts::identity_for_item(self.tcx, self.def_id);\n                     for (i, bad_subst) in bad_substs {"}, {"sha": "d00f8d7a90119a6029f25798f3aabb6e54661759", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs?ref=143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #68368\n+// Ensures that we don't ICE when emitting an error\n+// for a non-defining use when lifetimes are involved\n+\n+#![feature(type_alias_impl_trait)]\n+trait Trait<T> {}\n+type Alias<'a, U> = impl Trait<U>; //~ ERROR could not find defining uses\n+fn f<'a>() -> Alias<'a, ()> {}\n+//~^ ERROR defining opaque type use does not fully define opaque type: generic parameter `U`\n+\n+fn main() {}\n+\n+impl Trait<()> for () {}"}, {"sha": "b585942406fd4e8a0e58412a3978506be37e7912", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/143059deafe1e5df3cbbaf4d47f5461af7bcf8c3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr?ref=143059deafe1e5df3cbbaf4d47f5461af7bcf8c3", "patch": "@@ -0,0 +1,14 @@\n+error: defining opaque type use does not fully define opaque type: generic parameter `U` is specified as concrete type `()`\n+  --> $DIR/issue-68368-non-defining-use.rs:8:1\n+   |\n+LL | fn f<'a>() -> Alias<'a, ()> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: could not find defining uses\n+  --> $DIR/issue-68368-non-defining-use.rs:7:1\n+   |\n+LL | type Alias<'a, U> = impl Trait<U>;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}