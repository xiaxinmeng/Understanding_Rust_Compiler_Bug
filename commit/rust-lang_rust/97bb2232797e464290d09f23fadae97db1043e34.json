{"sha": "97bb2232797e464290d09f23fadae97db1043e34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YmIyMjMyNzk3ZTQ2NDI5MGQwOWYyM2ZhZGFlOTdkYjEwNDNlMzQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T09:46:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T09:46:42Z"}, "message": "Remove indirection", "tree": {"sha": "50880df8c7e2fd15457d7591b0205988b278ec91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50880df8c7e2fd15457d7591b0205988b278ec91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97bb2232797e464290d09f23fadae97db1043e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97bb2232797e464290d09f23fadae97db1043e34", "html_url": "https://github.com/rust-lang/rust/commit/97bb2232797e464290d09f23fadae97db1043e34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97bb2232797e464290d09f23fadae97db1043e34/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a810f118bb2ec541f852bf02eebdf02c7326f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a810f118bb2ec541f852bf02eebdf02c7326f7", "html_url": "https://github.com/rust-lang/rust/commit/a2a810f118bb2ec541f852bf02eebdf02c7326f7"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3f0ddd04cf70abaa4091b05fd06ae4e95548920c", "filename": "src/yellow/red.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97bb2232797e464290d09f23fadae97db1043e34/src%2Fyellow%2Fred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97bb2232797e464290d09f23fadae97db1043e34/src%2Fyellow%2Fred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fred.rs?ref=97bb2232797e464290d09f23fadae97db1043e34", "patch": "@@ -11,7 +11,7 @@ use {\n pub(crate) struct RedNode {\n     green: GreenNode,\n     parent: Option<ParentData>,\n-    children: RwLock<Vec<Option<Box<RedNode>>>>,\n+    children: RwLock<Vec<Option<RedNode>>>,\n }\n \n #[derive(Debug)]\n@@ -68,7 +68,7 @@ impl RedNode {\n \n     pub(crate) fn nth_child(&self, idx: usize) -> ptr::NonNull<RedNode> {\n         match &self.children.read().unwrap()[idx] {\n-            Some(child) => return ptr::NonNull::from(&**child),\n+            Some(child) => return child.into(),\n             None => (),\n         }\n         let mut children = self.children.write().unwrap();\n@@ -77,10 +77,10 @@ impl RedNode {\n             let start_offset = self.start_offset()\n                 + green_children[..idx].iter().map(|x| x.text_len()).sum::<TextUnit>();\n             let child = RedNode::new_child(green_children[idx].clone(), self.into(), start_offset, idx);\n-            children[idx] = Some(Box::new(child))\n+            children[idx] = Some(child)\n         }\n-        let child = children[idx].as_ref().unwrap();\n-        ptr::NonNull::from(&**child)\n+        children[idx].as_ref().unwrap().into()\n+\n     }\n \n     pub(crate) fn parent(&self) -> Option<ptr::NonNull<RedNode>> {"}]}