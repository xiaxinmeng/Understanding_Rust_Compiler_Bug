{"sha": "0899807294826da9b54f1074921bd607181c0c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OTk4MDcyOTQ4MjZkYTliNTRmMTA3NDkyMWJkNjA3MTgxYzBjNjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-25T10:59:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-25T10:59:28Z"}, "message": "Auto merge of #20613 - dgriffen:master, r=alexcrichton", "tree": {"sha": "847ceca7acf021e48edec442f0e706d9a3b8d16c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847ceca7acf021e48edec442f0e706d9a3b8d16c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0899807294826da9b54f1074921bd607181c0c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0899807294826da9b54f1074921bd607181c0c62", "html_url": "https://github.com/rust-lang/rust/commit/0899807294826da9b54f1074921bd607181c0c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0899807294826da9b54f1074921bd607181c0c62/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bac0179dfa61ab6759041617f1a97cd1f94bb92", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bac0179dfa61ab6759041617f1a97cd1f94bb92", "html_url": "https://github.com/rust-lang/rust/commit/9bac0179dfa61ab6759041617f1a97cd1f94bb92"}, {"sha": "ec88426ea8dbee3a4647039d65deea4de31fb69a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec88426ea8dbee3a4647039d65deea4de31fb69a", "html_url": "https://github.com/rust-lang/rust/commit/ec88426ea8dbee3a4647039d65deea4de31fb69a"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "d20469f5106f86fb753919db5ee56a4ea2abcac6", "filename": "src/libstd/sys/unix/tty.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0899807294826da9b54f1074921bd607181c0c62/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0899807294826da9b54f1074921bd607181c0c62/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftty.rs?ref=0899807294826da9b54f1074921bd607181c0c62", "patch": "@@ -11,14 +11,22 @@\n use prelude::v1::*;\n \n use sys::fs::FileDesc;\n-use libc::{self, c_int};\n+use libc::{self, c_int, c_ulong, funcs};\n use io::{self, IoResult, IoError};\n+use sys::c;\n use sys_common;\n \n pub struct TTY {\n     pub fd: FileDesc,\n }\n \n+#[cfg(any(target_os = \"macos\",\n+          target_os = \"freebsd\"))]\n+const TIOCGWINSZ: c_ulong = 0x40087468;\n+\n+#[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n+const TIOCGWINSZ: c_ulong = 0x00005413;\n+\n impl TTY {\n     pub fn new(fd: c_int) -> IoResult<TTY> {\n         if unsafe { libc::isatty(fd) } != 0 {\n@@ -41,8 +49,39 @@ impl TTY {\n     pub fn set_raw(&mut self, _raw: bool) -> IoResult<()> {\n         Err(sys_common::unimpl())\n     }\n+\n+    #[cfg(any(target_os = \"linux\",\n+              target_os = \"android\",\n+              target_os = \"macos\",\n+              target_os = \"freebsd\"))]\n+    pub fn get_winsize(&mut self) -> IoResult<(int, int)> {\n+        unsafe {\n+            #[repr(C)]\n+            struct winsize {\n+                ws_row: u16,\n+                ws_col: u16,\n+                ws_xpixel: u16,\n+                ws_ypixel: u16\n+            }\n+\n+            let mut size = winsize { ws_row: 0, ws_col: 0, ws_xpixel: 0, ws_ypixel: 0 };\n+            if c::ioctl(self.fd.fd(), TIOCGWINSZ, &mut size) == -1 {\n+                Err(IoError {\n+                    kind: io::OtherIoError,\n+                    desc: \"Size of terminal could not be determined\",\n+                    detail: None,\n+                })\n+            } else {\n+                Ok((size.ws_col as int, size.ws_row as int))\n+            }\n+        }\n+    }\n+\n+    #[cfg(any(target_os = \"ios\",\n+              target_os = \"dragonfly\"))]\n     pub fn get_winsize(&mut self) -> IoResult<(int, int)> {\n         Err(sys_common::unimpl())\n     }\n+\n     pub fn isatty(&self) -> bool { false }\n }"}]}