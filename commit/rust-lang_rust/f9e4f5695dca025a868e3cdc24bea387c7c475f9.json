{"sha": "f9e4f5695dca025a868e3cdc24bea387c7c475f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZTRmNTY5NWRjYTAyNWE4NjhlM2NkYzI0YmVhMzg3YzdjNDc1Zjk=", "commit": {"author": {"name": "Karim SENHAJI", "email": "karim.senhaji@amadeus.com", "date": "2018-10-10T15:05:16Z"}, "committer": {"name": "Karim SENHAJI", "email": "karim.senhaji@amadeus.com", "date": "2018-10-10T17:10:44Z"}, "message": "Limit commutative assign op lint to primitive types", "tree": {"sha": "0c15a7cd8ac537bf33eb4d45ba91e2bd7803ad82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c15a7cd8ac537bf33eb4d45ba91e2bd7803ad82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9e4f5695dca025a868e3cdc24bea387c7c475f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e4f5695dca025a868e3cdc24bea387c7c475f9", "html_url": "https://github.com/rust-lang/rust/commit/f9e4f5695dca025a868e3cdc24bea387c7c475f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9e4f5695dca025a868e3cdc24bea387c7c475f9/comments", "author": null, "committer": null, "parents": [{"sha": "f6882ede4dc32684e000d256644c9e192ea8c738", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6882ede4dc32684e000d256644c9e192ea8c738", "html_url": "https://github.com/rust-lang/rust/commit/f6882ede4dc32684e000d256644c9e192ea8c738"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "803c79d42fcf8735d6e6fcf49993beb01440aec0", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9e4f5695dca025a868e3cdc24bea387c7c475f9/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9e4f5695dca025a868e3cdc24bea387c7c475f9/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=f9e4f5695dca025a868e3cdc24bea387c7c475f9", "patch": "@@ -215,7 +215,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n                             lint(assignee, r);\n                         }\n                         // a = b commutative_op a\n-                        if SpanlessEq::new(cx).ignore_fn().eq_expr(assignee, r) {\n+                        // Limited to primitive type as these ops are know to be commutative\n+                        if SpanlessEq::new(cx).ignore_fn().eq_expr(assignee, r)\n+                                && cx.tables.expr_ty(assignee).is_primitive_ty() {\n                             match op.node {\n                                 hir::BinOpKind::Add\n                                 | hir::BinOpKind::Mul"}, {"sha": "60a9d2fb73e001e39d2d09de5dcf96c1d249eea8", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f9e4f5695dca025a868e3cdc24bea387c7c475f9/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9e4f5695dca025a868e3cdc24bea387c7c475f9/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=f9e4f5695dca025a868e3cdc24bea387c7c475f9", "patch": "@@ -53,3 +53,18 @@ impl MulAssign<i64> for Wrap {\n         *self = *self * rhs\n     }\n }\n+\n+fn cow_add_assign() {\n+    use std::borrow::Cow;\n+    let mut buf = Cow::Owned(String::from(\"bar\"));\n+    let cows = Cow::Borrowed(\"foo\");\n+\n+    // this can be linted\n+    buf = buf + cows.clone();\n+\n+    // this should not as cow<str> Add is not commutative\n+    buf = cows + buf;\n+    println!(\"{}\", buf);\n+\n+}\n+"}, {"sha": "bd49c3cdd807d02ccdb32e7943da8ecb2d4a4547", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9e4f5695dca025a868e3cdc24bea387c7c475f9/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9e4f5695dca025a868e3cdc24bea387c7c475f9/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=f9e4f5695dca025a868e3cdc24bea387c7c475f9", "patch": "@@ -126,5 +126,13 @@ help: or\n 26 |     a = a * a * a;\n    |     ^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: manual implementation of an assign operation\n+  --> $DIR/assign_ops2.rs:63:5\n+   |\n+63 |     buf = buf + cows.clone();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `buf += cows.clone()`\n+   |\n+   = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n+\n+error: aborting due to 10 previous errors\n "}]}