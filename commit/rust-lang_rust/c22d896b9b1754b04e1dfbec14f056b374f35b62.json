{"sha": "c22d896b9b1754b04e1dfbec14f056b374f35b62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmQ4OTZiOWIxNzU0YjA0ZTFkZmJlYzE0ZjA1NmIzNzRmMzViNjI=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-09-28T08:42:29Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-09-28T08:42:29Z"}, "message": "Change `AllocRef::by_ref` to take `&self` instead of `&mut self`", "tree": {"sha": "525b396e0bcdab8120953fd4d4c7eca4d53c68b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/525b396e0bcdab8120953fd4d4c7eca4d53c68b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22d896b9b1754b04e1dfbec14f056b374f35b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22d896b9b1754b04e1dfbec14f056b374f35b62", "html_url": "https://github.com/rust-lang/rust/commit/c22d896b9b1754b04e1dfbec14f056b374f35b62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22d896b9b1754b04e1dfbec14f056b374f35b62/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4529af972e55f8f85afaada0ee2dd18ab8653637", "url": "https://api.github.com/repos/rust-lang/rust/commits/4529af972e55f8f85afaada0ee2dd18ab8653637", "html_url": "https://github.com/rust-lang/rust/commit/4529af972e55f8f85afaada0ee2dd18ab8653637"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6b14e06e4527dd82371d845165af98f3bb45a76d", "filename": "library/core/src/alloc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c22d896b9b1754b04e1dfbec14f056b374f35b62/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22d896b9b1754b04e1dfbec14f056b374f35b62/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs?ref=c22d896b9b1754b04e1dfbec14f056b374f35b62", "patch": "@@ -337,7 +337,7 @@ pub unsafe trait AllocRef {\n     ///\n     /// The returned adaptor also implements `AllocRef` and will simply borrow this.\n     #[inline(always)]\n-    fn by_ref(&mut self) -> &Self {\n+    fn by_ref(&self) -> &Self {\n         self\n     }\n }"}]}