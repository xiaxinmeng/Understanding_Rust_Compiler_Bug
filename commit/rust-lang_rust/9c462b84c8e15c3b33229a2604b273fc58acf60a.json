{"sha": "9c462b84c8e15c3b33229a2604b273fc58acf60a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNDYyYjg0YzhlMTVjM2IzMzIyOWEyNjA0YjI3M2ZjNThhY2Y2MGE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-03-21T23:54:53Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-04-05T04:54:59Z"}, "message": "std: Fix linking against `signal` on Android\n\nCurrently the minimum supported Android version of the standard library is\nAPI level 18 (android-18). Back in those days [1] the `signal` function was\njust an inline wrapper around `bsd_signal`, but starting in API level\nandroid-20 the `signal` symbols was introduced [2]. Finally, in android-21\nthe API `bsd_signal` was removed [3].\n\nBasically this means that if we want to be binary compatible with multiple\nAndroid releases (oldest being 18 and newest being 21) then we need to check\nfor both symbols and not actually link against either.\n\nThis was first discovered in rust-lang/libc#236 with a fix proposed in\nrust-lang/libc#237. I suspect that we'll want to accept rust-lang/libc#237 so\nRust crates at large continue to be compatible with newer releases of Android\nand crates, like the standard library, that want to opt into older support can\ncontinue to do so via similar means.\n\nCloses rust-lang/libc#236\n\n[1]: https://chromium.googlesource.com/android_tools/+/20ee6d20/ndk/platforms/android-18/arch-arm/usr/include/signal.h\n[2]: https://chromium.googlesource.com/android_tools/+/fbd420/ndk_experimental/platforms/android-20/arch-arm/usr/include/signal.h\n[3]: https://chromium.googlesource.com/android_tools/+/20ee6d/ndk/platforms/android-21/arch-arm/usr/include/signal.h", "tree": {"sha": "c6684ad6b089132ba4ec37c1bca7d6a7e738d30f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6684ad6b089132ba4ec37c1bca7d6a7e738d30f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c462b84c8e15c3b33229a2604b273fc58acf60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c462b84c8e15c3b33229a2604b273fc58acf60a", "html_url": "https://github.com/rust-lang/rust/commit/9c462b84c8e15c3b33229a2604b273fc58acf60a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c462b84c8e15c3b33229a2604b273fc58acf60a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ec71b033a81f2a7d7c24db265d1e1c2c437339a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec71b033a81f2a7d7c24db265d1e1c2c437339a", "html_url": "https://github.com/rust-lang/rust/commit/3ec71b033a81f2a7d7c24db265d1e1c2c437339a"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "7265c17d1845354f979a39b4ceb3a6934025b2ab", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=9c462b84c8e15c3b33229a2604b273fc58acf60a", "patch": "@@ -1 +1 @@\n-Subproject commit 2278a549559c38872b4338cb002ecc2a80d860dc\n+Subproject commit 7265c17d1845354f979a39b4ceb3a6934025b2ab"}, {"sha": "f8b2d4dd23240bdcaf5f32fcbffe81357c46758d", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=9c462b84c8e15c3b33229a2604b273fc58acf60a", "patch": "@@ -85,12 +85,46 @@ pub fn init() {\n \n     #[cfg(not(target_os = \"nacl\"))]\n     unsafe fn reset_sigpipe() {\n-        assert!(libc::signal(libc::SIGPIPE, libc::SIG_IGN) != !0);\n+        assert!(signal(libc::SIGPIPE, libc::SIG_IGN) != !0);\n     }\n     #[cfg(target_os = \"nacl\")]\n     unsafe fn reset_sigpipe() {}\n }\n \n+// Currently the minimum supported Android version of the standard library is\n+// API level 18 (android-18). Back in those days [1] the `signal` function was\n+// just an inline wrapper around `bsd_signal`, but starting in API level\n+// android-20 the `signal` symbols was introduced [2]. Finally, in android-21\n+// the API `bsd_signal` was removed [3].\n+//\n+// Basically this means that if we want to be binary compatible with multiple\n+// Android releases (oldest being 18 and newest being 21) then we need to check\n+// for both symbols and not actually link against either.\n+//\n+// Note that if we're not on android we just link against the `android` symbol\n+// itself.\n+//\n+// [1]: https://chromium.googlesource.com/android_tools/+/20ee6d20/ndk/platforms\n+//                                       /android-18/arch-arm/usr/include/signal.h\n+// [2]: https://chromium.googlesource.com/android_tools/+/fbd420/ndk_experimental\n+//                                       /platforms/android-20/arch-arm\n+//                                       /usr/include/signal.h\n+// [3]: https://chromium.googlesource.com/android_tools/+/20ee6d/ndk/platforms\n+//                                       /android-21/arch-arm/usr/include/signal.h\n+#[cfg(target_os = \"android\")]\n+unsafe fn signal(signum: libc::c_int,\n+                 handler: libc::sighandler_t) -> libc::sighandler_t {\n+    weak!(fn signal(libc::c_int, libc::sighandler_t) -> libc::sighandler_t);\n+    weak!(fn bsd_signal(libc::c_int, libc::sighandler_t) -> libc::sighandler_t);\n+\n+    let f = signal.get().or_else(|| bsd_signal.get());\n+    let f = f.expect(\"neither `signal` nor `bsd_signal` symbols found\");\n+    f(signum, handler)\n+}\n+\n+#[cfg(not(target_os = \"android\"))]\n+pub use libc::signal;\n+\n pub fn decode_error_kind(errno: i32) -> ErrorKind {\n     match errno as libc::c_int {\n         libc::ECONNREFUSED => ErrorKind::ConnectionRefused,"}, {"sha": "270c2096b2c3b33aa34f3fca35e8fbd2fa600ec6", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=9c462b84c8e15c3b33229a2604b273fc58acf60a", "patch": "@@ -393,7 +393,7 @@ impl Command {\n             t!(cvt(libc::sigemptyset(&mut set)));\n             t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, &set,\n                                          ptr::null_mut())));\n-            let ret = libc::signal(libc::SIGPIPE, libc::SIG_DFL);\n+            let ret = super::signal(libc::SIGPIPE, libc::SIG_DFL);\n             if ret == libc::SIG_ERR {\n                 return io::Error::last_os_error()\n             }"}, {"sha": "99ab8741159e39075825b1a4e01fab4f2dea9cf1", "filename": "src/libstd/sys/unix/weak.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c462b84c8e15c3b33229a2604b273fc58acf60a/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fweak.rs?ref=9c462b84c8e15c3b33229a2604b273fc58acf60a", "patch": "@@ -75,11 +75,5 @@ unsafe fn fetch(name: &str) -> usize {\n         Ok(cstr) => cstr,\n         Err(..) => return 0,\n     };\n-    let lib = libc::dlopen(0 as *const _, libc::RTLD_LAZY);\n-    if lib.is_null() {\n-        return 0\n-    }\n-    let ret = libc::dlsym(lib, name.as_ptr()) as usize;\n-    libc::dlclose(lib);\n-    return ret\n+    libc::dlsym(libc::RTLD_DEFAULT, name.as_ptr()) as usize\n }"}]}