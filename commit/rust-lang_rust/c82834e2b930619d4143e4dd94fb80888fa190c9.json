{"sha": "c82834e2b930619d4143e4dd94fb80888fa190c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MjgzNGUyYjkzMDYxOWQ0MTQzZTRkZDk0ZmI4MDg4OGZhMTkwYzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-17T20:49:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-17T20:49:55Z"}, "message": "Auto merge of #58994 - oli-obk:deprecated_derive, r=petrochenkov\n\nHide deprecation warnings inside derive expansions\n\nFixes #58822", "tree": {"sha": "c57dd4a4c1637c2d60b62553c57885e4546694e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c57dd4a4c1637c2d60b62553c57885e4546694e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c82834e2b930619d4143e4dd94fb80888fa190c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c82834e2b930619d4143e4dd94fb80888fa190c9", "html_url": "https://github.com/rust-lang/rust/commit/c82834e2b930619d4143e4dd94fb80888fa190c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c82834e2b930619d4143e4dd94fb80888fa190c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f649c76e985b86edd6d59b3f55902f7f108181ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/f649c76e985b86edd6d59b3f55902f7f108181ef", "html_url": "https://github.com/rust-lang/rust/commit/f649c76e985b86edd6d59b3f55902f7f108181ef"}, {"sha": "a69e12c21b4549e4b5aed09aef5eacd36e8d15eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69e12c21b4549e4b5aed09aef5eacd36e8d15eb", "html_url": "https://github.com/rust-lang/rust/commit/a69e12c21b4549e4b5aed09aef5eacd36e8d15eb"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "03ed62f2a0d664ef10f56629da1d17ef8d580726", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=c82834e2b930619d4143e4dd94fb80888fa190c9", "patch": "@@ -833,7 +833,8 @@ pub fn provide(providers: &mut Providers<'_>) {\n \n /// Returns whether `span` originates in a foreign crate's external macro.\n ///\n-/// This is used to test whether a lint should be entirely aborted above.\n+/// This is used to test whether a lint should not even begin to figure out whether it should\n+/// be reported on the current node.\n pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n     let info = match span.ctxt().outer().expn_info() {\n         Some(info) => info,\n@@ -859,3 +860,17 @@ pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n         Err(_) => true,\n     }\n }\n+\n+/// Returns whether `span` originates in a derive macro's expansion\n+pub fn in_derive_expansion(span: Span) -> bool {\n+    let info = match span.ctxt().outer().expn_info() {\n+        Some(info) => info,\n+        // no ExpnInfo means this span doesn't come from a macro\n+        None => return false,\n+    };\n+\n+    match info.format {\n+        ExpnFormat::MacroAttribute(symbol) => symbol.as_str().starts_with(\"derive(\"),\n+        _ => false,\n+    }\n+}"}, {"sha": "c1a97cd94dc3945690ceb9fde728c0252b8db075", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=c82834e2b930619d4143e4dd94fb80888fa190c9", "patch": "@@ -3,7 +3,7 @@\n \n pub use self::StabilityLevel::*;\n \n-use crate::lint::{self, Lint};\n+use crate::lint::{self, Lint, in_derive_expansion};\n use crate::hir::{self, Item, Generics, StructField, Variant, HirId};\n use crate::hir::def::Def;\n use crate::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefId, LOCAL_CRATE};\n@@ -562,6 +562,9 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                                suggestion: Option<Symbol>,\n                                message: &str,\n                                lint: &'static Lint| {\n+            if in_derive_expansion(span) {\n+                return;\n+            }\n             let msg = if let Some(note) = note {\n                 format!(\"{}: {}\", message, note)\n             } else {"}, {"sha": "4980a7f5aa31cb617510eff2175af74f0af96441", "filename": "src/test/ui/deprecation/derive_on_deprecated.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated.rs?ref=c82834e2b930619d4143e4dd94fb80888fa190c9", "patch": "@@ -0,0 +1,9 @@\n+// compile-pass\n+\n+#![deny(deprecated)]\n+\n+#[deprecated = \"oh no\"]\n+#[derive(Default)]\n+struct X;\n+\n+fn main() {}"}, {"sha": "235146bad9c851f90c296a6987d46dfe267ff652", "filename": "src/test/ui/deprecation/derive_on_deprecated_forbidden.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated_forbidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82834e2b930619d4143e4dd94fb80888fa190c9/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated_forbidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fderive_on_deprecated_forbidden.rs?ref=c82834e2b930619d4143e4dd94fb80888fa190c9", "patch": "@@ -0,0 +1,9 @@\n+// compile-pass\n+\n+#![forbid(deprecated)]\n+\n+#[deprecated = \"oh no\"]\n+#[derive(Default)]\n+struct X;\n+\n+fn main() {}"}]}