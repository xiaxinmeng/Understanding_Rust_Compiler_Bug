{"sha": "5a039f68f79798947009766c70a8956108d3f228", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMDM5ZjY4Zjc5Nzk4OTQ3MDA5NzY2YzcwYTg5NTYxMDhkM2YyMjg=", "commit": {"author": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2017-02-12T09:24:59Z"}, "committer": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2017-02-12T09:24:59Z"}, "message": "format adjust", "tree": {"sha": "c6ecb6f3cf82e8c75a480401f35270c0fc34ba36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6ecb6f3cf82e8c75a480401f35270c0fc34ba36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a039f68f79798947009766c70a8956108d3f228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a039f68f79798947009766c70a8956108d3f228", "html_url": "https://github.com/rust-lang/rust/commit/5a039f68f79798947009766c70a8956108d3f228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a039f68f79798947009766c70a8956108d3f228/comments", "author": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "committer": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98aa0db0ac53e38ea33ba63d6d909d26b78f83fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/98aa0db0ac53e38ea33ba63d6d909d26b78f83fb", "html_url": "https://github.com/rust-lang/rust/commit/98aa0db0ac53e38ea33ba63d6d909d26b78f83fb"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "916b62bf2b74589f15b80752795ec597b630ae5a", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5a039f68f79798947009766c70a8956108d3f228/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a039f68f79798947009766c70a8956108d3f228/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=5a039f68f79798947009766c70a8956108d3f228", "patch": "@@ -904,11 +904,12 @@ fn lint_cstring_as_ptr(cx: &LateContext, expr: &hir::Expr, new: &hir::Expr, unwr\n \n fn lint_iter_cloned_collect(cx: &LateContext, expr: &hir::Expr, iter_args: &[hir::Expr]) {\n     if match_type(cx, cx.tables.expr_ty(expr), &paths::VEC) &&\n-        derefs_to_slice(cx, &iter_args[0], cx.tables.expr_ty(&iter_args[0])).is_some() {\n+       derefs_to_slice(cx, &iter_args[0], cx.tables.expr_ty(&iter_args[0])).is_some() {\n         span_lint(cx,\n                   ITER_CLONED_COLLECT,\n                   expr.span,\n-                  \"called `cloned().collect()` on a slice to create a `Vec`. This is more succinctly expressed by calling `to_owned(x)`\");\n+                  \"called `cloned().collect()` on a slice to create a `Vec`. This is more succinctly expressed by \\\n+                  calling `to_owned(x)`\");\n     }\n }\n "}]}