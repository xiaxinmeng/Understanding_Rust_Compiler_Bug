{"sha": "9ed73378ce3343237bae39f6f9837aa18acbc9e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZDczMzc4Y2UzMzQzMjM3YmFlMzlmNmY5ODM3YWExOGFjYmM5ZTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-31T21:13:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-31T21:13:56Z"}, "message": "Parser: extract sink trait", "tree": {"sha": "920e1cc93e00d1f69a3f234d7778baa9949ae0e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/920e1cc93e00d1f69a3f234d7778baa9949ae0e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ed73378ce3343237bae39f6f9837aa18acbc9e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed73378ce3343237bae39f6f9837aa18acbc9e7", "html_url": "https://github.com/rust-lang/rust/commit/9ed73378ce3343237bae39f6f9837aa18acbc9e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ed73378ce3343237bae39f6f9837aa18acbc9e7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c478a794c667357b0c9a82ffc5c3eb5ca1b1b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c478a794c667357b0c9a82ffc5c3eb5ca1b1b0d", "html_url": "https://github.com/rust-lang/rust/commit/8c478a794c667357b0c9a82ffc5c3eb5ca1b1b0d"}], "stats": {"total": 59, "additions": 34, "deletions": 25}, "files": [{"sha": "d95e26662449960470320e2e02c3f6c02d628873", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9ed73378ce3343237bae39f6f9837aa18acbc9e7", "patch": "@@ -7,6 +7,6 @@ mod parser;\n \n pub mod syntax_kinds;\n pub use text::{TextUnit, TextRange};\n-pub use tree::{SyntaxKind, Token, FileBuilder, File, Node};\n+pub use tree::{SyntaxKind, Token, FileBuilder, Sink, File, Node};\n pub use lexer::{next_token, tokenize};\n pub use parser::parse;"}, {"sha": "0a136266cc240ff116ac6a3549836a6f5891dc88", "filename": "src/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fmod.rs?ref=9ed73378ce3343237bae39f6f9837aa18acbc9e7", "patch": "@@ -1,4 +1,4 @@\n-use {Token, File, FileBuilder};\n+use {Token, File, FileBuilder, Sink};\n \n use syntax_kinds::*;\n "}, {"sha": "eba850fef0fa71adf44ad97970bb890e80921dca", "filename": "src/tree/file_builder.rs", "status": "modified", "additions": 31, "deletions": 22, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Ftree%2Ffile_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Ftree%2Ffile_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftree%2Ffile_builder.rs?ref=9ed73378ce3343237bae39f6f9837aa18acbc9e7", "patch": "@@ -1,33 +1,22 @@\n use {SyntaxKind, TextUnit, TextRange};\n use super::{NodeData, NodeIdx, File};\n \n+pub trait Sink {\n+    fn leaf(&mut self, kind: SyntaxKind, len: TextUnit);\n+    fn start_internal(&mut self, kind: SyntaxKind);\n+    fn finish_internal(&mut self);\n+}\n+\n+\n pub struct FileBuilder {\n     text: String,\n     nodes: Vec<NodeData>,\n     in_progress: Vec<(NodeIdx, Option<NodeIdx>)>, // (parent, last_child)\n     pos: TextUnit,\n }\n \n-impl FileBuilder {\n-    pub fn new(text: String) -> FileBuilder {\n-        FileBuilder {\n-            text,\n-            nodes: Vec::new(),\n-            in_progress: Vec::new(),\n-            pos: TextUnit::new(0),\n-        }\n-    }\n-\n-    pub fn finish(self) -> File {\n-        assert!(self.in_progress.is_empty());\n-        assert!(self.pos == (self.text.len() as u32).into());\n-        File {\n-            text: self.text,\n-            nodes: self.nodes,\n-        }\n-    }\n-\n-    pub fn leaf(&mut self, kind: SyntaxKind, len: TextUnit) {\n+impl Sink for FileBuilder {\n+    fn leaf(&mut self, kind: SyntaxKind, len: TextUnit) {\n         let leaf = NodeData {\n             kind,\n             range: TextRange::from_len(self.pos, len),\n@@ -40,7 +29,7 @@ impl FileBuilder {\n         self.add_len(id);\n     }\n \n-    pub fn start_internal(&mut self, kind: SyntaxKind) {\n+    fn start_internal(&mut self, kind: SyntaxKind) {\n         let node = NodeData {\n             kind,\n             range: TextRange::from_len(self.pos, 0.into()),\n@@ -56,12 +45,32 @@ impl FileBuilder {\n         self.in_progress.push((id, None))\n     }\n \n-    pub fn finish_internal(&mut self) {\n+    fn finish_internal(&mut self) {\n         let (id, _) = self.in_progress.pop().unwrap();\n         if !self.in_progress.is_empty() {\n             self.add_len(id);\n         }\n     }\n+}\n+\n+impl FileBuilder {\n+    pub fn new(text: String) -> FileBuilder {\n+        FileBuilder {\n+            text,\n+            nodes: Vec::new(),\n+            in_progress: Vec::new(),\n+            pos: TextUnit::new(0),\n+        }\n+    }\n+\n+    pub fn finish(self) -> File {\n+        assert!(self.in_progress.is_empty());\n+        assert!(self.pos == (self.text.len() as u32).into());\n+        File {\n+            text: self.text,\n+            nodes: self.nodes,\n+        }\n+    }\n \n     fn new_node(&mut self, data: NodeData) -> NodeIdx {\n         let id = NodeIdx(self.nodes.len() as u32);"}, {"sha": "7a5d429a37f47c35ab255b70fa220e886dcd55a8", "filename": "src/tree/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Ftree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed73378ce3343237bae39f6f9837aa18acbc9e7/src%2Ftree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftree%2Fmod.rs?ref=9ed73378ce3343237bae39f6f9837aa18acbc9e7", "patch": "@@ -4,7 +4,7 @@ use syntax_kinds::syntax_info;\n use std::fmt;\n \n mod file_builder;\n-pub use self::file_builder::FileBuilder;\n+pub use self::file_builder::{FileBuilder, Sink};\n \n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct SyntaxKind(pub(crate) u32);"}]}