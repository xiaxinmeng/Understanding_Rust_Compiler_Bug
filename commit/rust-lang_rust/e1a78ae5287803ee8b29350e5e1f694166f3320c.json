{"sha": "e1a78ae5287803ee8b29350e5e1f694166f3320c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYTc4YWU1Mjg3ODAzZWU4YjI5MzUwZTVlMWY2OTQxNjZmMzMyMGM=", "commit": {"author": {"name": "Daniele D'Orazio", "email": "d.dorazio96@gmail.com", "date": "2019-06-20T11:44:00Z"}, "committer": {"name": "Daniele D'Orazio", "email": "d.dorazio96@gmail.com", "date": "2019-06-21T12:17:59Z"}, "message": "update tests and fix lints in clippy", "tree": {"sha": "c03a0f124710cda15ecf73a7adad27814281a787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c03a0f124710cda15ecf73a7adad27814281a787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1a78ae5287803ee8b29350e5e1f694166f3320c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a78ae5287803ee8b29350e5e1f694166f3320c", "html_url": "https://github.com/rust-lang/rust/commit/e1a78ae5287803ee8b29350e5e1f694166f3320c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1a78ae5287803ee8b29350e5e1f694166f3320c/comments", "author": {"login": "d-dorazio", "id": 6960399, "node_id": "MDQ6VXNlcjY5NjAzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/6960399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-dorazio", "html_url": "https://github.com/d-dorazio", "followers_url": "https://api.github.com/users/d-dorazio/followers", "following_url": "https://api.github.com/users/d-dorazio/following{/other_user}", "gists_url": "https://api.github.com/users/d-dorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-dorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-dorazio/subscriptions", "organizations_url": "https://api.github.com/users/d-dorazio/orgs", "repos_url": "https://api.github.com/users/d-dorazio/repos", "events_url": "https://api.github.com/users/d-dorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/d-dorazio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "d-dorazio", "id": 6960399, "node_id": "MDQ6VXNlcjY5NjAzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/6960399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-dorazio", "html_url": "https://github.com/d-dorazio", "followers_url": "https://api.github.com/users/d-dorazio/followers", "following_url": "https://api.github.com/users/d-dorazio/following{/other_user}", "gists_url": "https://api.github.com/users/d-dorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-dorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-dorazio/subscriptions", "organizations_url": "https://api.github.com/users/d-dorazio/orgs", "repos_url": "https://api.github.com/users/d-dorazio/repos", "events_url": "https://api.github.com/users/d-dorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/d-dorazio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6396a7a425293745b1810566851c17cf08d36985", "url": "https://api.github.com/repos/rust-lang/rust/commits/6396a7a425293745b1810566851c17cf08d36985", "html_url": "https://github.com/rust-lang/rust/commit/6396a7a425293745b1810566851c17cf08d36985"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "8f9ccaea26d2131cd4e1b94a4936fe4301feff1d", "filename": "clippy_lints/src/invalid_ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Finvalid_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Finvalid_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finvalid_ref.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -51,6 +51,5 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidRef {\n                 span_help_and_lint(cx, INVALID_REF, expr.span, msg, HELP);\n             }\n         }\n-        return;\n     }\n }"}, {"sha": "f4019d9a07080633a501c51cfa20530e69d7a18b", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -1648,16 +1648,15 @@ fn lint_unnecessary_fold(cx: &LateContext<'_, '_>, expr: &hir::Expr, fold_args:\n     );\n \n     // Check if the first argument to .fold is a suitable literal\n-    match fold_args[1].node {\n-        hir::ExprKind::Lit(ref lit) => match lit.node {\n+    if let hir::ExprKind::Lit(ref lit) = fold_args[1].node {\n+        match lit.node {\n             ast::LitKind::Bool(false) => check_fold_with_op(cx, fold_args, hir::BinOpKind::Or, \"any\", true),\n             ast::LitKind::Bool(true) => check_fold_with_op(cx, fold_args, hir::BinOpKind::And, \"all\", true),\n             ast::LitKind::Int(0, _) => check_fold_with_op(cx, fold_args, hir::BinOpKind::Add, \"sum\", false),\n             ast::LitKind::Int(1, _) => check_fold_with_op(cx, fold_args, hir::BinOpKind::Mul, \"product\", false),\n-            _ => return,\n-        },\n-        _ => return,\n-    };\n+            _ => (),\n+        }\n+    }\n }\n \n fn lint_iter_nth<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &hir::Expr, iter_args: &'tcx [hir::Expr], is_mut: bool) {"}, {"sha": "a8c45166a8b35de0947944afee8c4c6f0feb2224", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -169,7 +169,9 @@ impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n             .any(|id| id.name == ident.name)\n         {\n             return;\n-        } else if let Some(scope) = &mut self.0.single_char_names.last_mut() {\n+        }\n+\n+        if let Some(scope) = &mut self.0.single_char_names.last_mut() {\n             scope.push(ident);\n         }\n     }"}, {"sha": "a178db3132300c901a265b3afb148a0150500609", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -95,8 +95,6 @@ fn find_sugg_for_if_let<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr,\n                 );\n             },\n         );\n-    } else {\n-        return;\n     }\n }\n \n@@ -161,8 +159,6 @@ fn find_sugg_for_match<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, o\n                 },\n             );\n         }\n-    } else {\n-        return;\n     }\n }\n "}, {"sha": "1631a607e0e09de97bcd3d17fbd0d4f2fe8e04cb", "filename": "tests/compile-test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -141,11 +141,11 @@ fn run_ui_toml() {\n \n     let res = run_ui_toml_tests(&config, tests);\n     match res {\n-        Ok(true) => {},\n+        Ok(true) => {}\n         Ok(false) => panic!(\"Some tests failed\"),\n         Err(e) => {\n             println!(\"I/O failure during tests: {:?}\", e);\n-        },\n+        }\n     }\n }\n "}, {"sha": "a26f43d0eff9fdcd019ad62545175acb41c34f95", "filename": "tests/missing-test-files.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fmissing-test-files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fmissing-test-files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmissing-test-files.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -46,7 +46,7 @@ fn explore_directory(dir: &Path) -> Vec<String> {\n                         if file_stem != current_file {\n                             missing_files.push(path.to_str().unwrap().to_string());\n                         }\n-                    },\n+                    }\n                     _ => continue,\n                 };\n             }"}, {"sha": "e9f064ea3efe3de5b8bfbadad6f5edb3e97ea325", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -1,7 +1,9 @@\n #![warn(clippy::needless_return)]\n \n macro_rules! the_answer {\n-    () => (42)\n+    () => {\n+        42\n+    };\n }\n \n fn test_end_of_fn() -> bool {\n@@ -56,6 +58,13 @@ fn test_void_if_fun(b: bool) {\n     }\n }\n \n+fn test_void_match(x: u32) {\n+    match x {\n+        0 => (),\n+        _ => return,\n+    }\n+}\n+\n fn main() {\n     let _ = test_end_of_fn();\n     let _ = test_no_semicolon();"}, {"sha": "88dc5252fb88faa5dfcc0b2fbd409f15bb30849c", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1a78ae5287803ee8b29350e5e1f694166f3320c/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=e1a78ae5287803ee8b29350e5e1f694166f3320c", "patch": "@@ -1,76 +1,76 @@\n error: unneeded return statement\n-  --> $DIR/needless_return.rs:12:5\n+  --> $DIR/needless_return.rs:14:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:16:5\n+  --> $DIR/needless_return.rs:18:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:21:9\n+  --> $DIR/needless_return.rs:23:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:23:9\n+  --> $DIR/needless_return.rs:25:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:29:17\n+  --> $DIR/needless_return.rs:31:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:31:13\n+  --> $DIR/needless_return.rs:33:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:38:9\n+  --> $DIR/needless_return.rs:40:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:40:16\n+  --> $DIR/needless_return.rs:42:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:44:5\n-   |\n-LL |     return the_answer!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: unneeded return statement\n-  --> $DIR/needless_return.rs:48:5\n+  --> $DIR/needless_return.rs:50:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:53:9\n+  --> $DIR/needless_return.rs:55:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:55:9\n+  --> $DIR/needless_return.rs:57:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n+error: unneeded return statement\n+  --> $DIR/needless_return.rs:64:14\n+   |\n+LL |         _ => return,\n+   |              ^^^^^^ help: replace `return` with the unit type `()`: `()`\n+\n error: aborting due to 12 previous errors\n "}]}