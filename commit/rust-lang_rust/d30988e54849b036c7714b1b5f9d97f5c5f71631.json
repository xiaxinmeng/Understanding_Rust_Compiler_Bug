{"sha": "d30988e54849b036c7714b1b5f9d97f5c5f71631", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDk4OGU1NDg0OWIwMzZjNzcxNGIxYjVmOWQ5N2Y1YzVmNzE2MzE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-06T14:58:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-06T14:58:58Z"}, "message": "Rollup merge of #71893 - ecstatic-morse:dataflow-impls-import, r=jonas-schievink\n\nUse the `impls` module to import pre-existing dataflow analyses\n\nCurrently, existing analyses live in the same module as the traits and types used to define new dataflow analyses. This muddles the [documentation for the `dataflow` module](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/dataflow/index.html). After this PR, `dataflow::impls` will refer to concrete dataflow analyses, and `dataflow` to the generic interface.", "tree": {"sha": "831670b8af4fa8dc8b9d49e6a49ceeffd2bd36d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/831670b8af4fa8dc8b9d49e6a49ceeffd2bd36d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d30988e54849b036c7714b1b5f9d97f5c5f71631", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJestCzCRBK7hj4Ov3rIwAAdHIIAAUsCW/qdOGKW2AT246xOjtG\nzmIDqgleDwf1vVtA+AtMCon03aK0kk9InCjnBAUJMI8bmNtYXvqL6/JqMIchEdEh\nWeP2VIUsyzS9EaDAFS40Tt20EwPQcKtsaZkmchP5GYmSFI6UpfhWH3rrj4zoYfL9\nCy8bSczJZ81gQnssfZiZzg8zOVBUP7rURU/kx9z2OvpBI1gkcERMOn5p7XxYarTg\nmxxT5egOiq5EnXQsRI7HZoR2kYtpmnO4CxsTPh2lWgTlDUf66Pnbf/f0rIYmd+S0\nRxNgx7dDrLG6LMbH2SE3EgBlrhBNH8+Utv/rdg5+6xP62lukeS8j5oM4hIx8k1Y=\n=G5Dm\n-----END PGP SIGNATURE-----\n", "payload": "tree 831670b8af4fa8dc8b9d49e6a49ceeffd2bd36d3\nparent 538a353df0fc17ba05a53b260e2e33ee3f94b308\nparent 095d1fdf1649c36967515310a5deedc5d46d11b5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588777138 +0200\ncommitter GitHub <noreply@github.com> 1588777138 +0200\n\nRollup merge of #71893 - ecstatic-morse:dataflow-impls-import, r=jonas-schievink\n\nUse the `impls` module to import pre-existing dataflow analyses\n\nCurrently, existing analyses live in the same module as the traits and types used to define new dataflow analyses. This muddles the [documentation for the `dataflow` module](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/dataflow/index.html). After this PR, `dataflow::impls` will refer to concrete dataflow analyses, and `dataflow` to the generic interface.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d30988e54849b036c7714b1b5f9d97f5c5f71631", "html_url": "https://github.com/rust-lang/rust/commit/d30988e54849b036c7714b1b5f9d97f5c5f71631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d30988e54849b036c7714b1b5f9d97f5c5f71631/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "538a353df0fc17ba05a53b260e2e33ee3f94b308", "url": "https://api.github.com/repos/rust-lang/rust/commits/538a353df0fc17ba05a53b260e2e33ee3f94b308", "html_url": "https://github.com/rust-lang/rust/commit/538a353df0fc17ba05a53b260e2e33ee3f94b308"}, {"sha": "095d1fdf1649c36967515310a5deedc5d46d11b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/095d1fdf1649c36967515310a5deedc5d46d11b5", "html_url": "https://github.com/rust-lang/rust/commit/095d1fdf1649c36967515310a5deedc5d46d11b5"}], "stats": {"total": 45, "additions": 20, "deletions": 25}, "files": [{"sha": "465aa5847af36cbac928d38398e0204a967a325e", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -32,13 +32,13 @@ use std::mem;\n use std::rc::Rc;\n \n use crate::dataflow;\n+use crate::dataflow::impls::{\n+    Borrows, EverInitializedPlaces, MaybeInitializedPlaces, MaybeUninitializedPlaces,\n+};\n use crate::dataflow::indexes::{BorrowIndex, InitIndex, MoveOutIndex, MovePathIndex};\n use crate::dataflow::move_paths::{InitLocation, LookupResult, MoveData, MoveError};\n-use crate::dataflow::Borrows;\n-use crate::dataflow::EverInitializedPlaces;\n use crate::dataflow::MoveDataParamEnv;\n use crate::dataflow::{Analysis, BorrowckFlowState as Flows, BorrowckResults};\n-use crate::dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use crate::transform::MirSource;\n \n use self::diagnostics::{AccessKind, RegionName};"}, {"sha": "29636a067092b9778d9440039507cb9a061178d7", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -21,8 +21,8 @@ use std::str::FromStr;\n use self::mir_util::PassWhere;\n use polonius_engine::{Algorithm, Output};\n \n+use crate::dataflow::impls::MaybeInitializedPlaces;\n use crate::dataflow::move_paths::{InitKind, InitLocation, MoveData};\n-use crate::dataflow::MaybeInitializedPlaces;\n use crate::dataflow::ResultsCursor;\n use crate::transform::MirSource;\n use crate::util as mir_util;"}, {"sha": "bddcd34ed3e47e97762477b4bcc1f625acdbb5fa", "filename": "src/librustc_mir/borrow_check/type_check/liveness/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -3,8 +3,8 @@ use rustc_middle::mir::{Body, Local};\n use rustc_middle::ty::{RegionVid, TyCtxt};\n use std::rc::Rc;\n \n+use crate::dataflow::impls::MaybeInitializedPlaces;\n use crate::dataflow::move_paths::MoveData;\n-use crate::dataflow::MaybeInitializedPlaces;\n use crate::dataflow::ResultsCursor;\n \n use crate::borrow_check::{"}, {"sha": "f04736e04a0533fd25ebc57cbd3784d8578325d7", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -8,9 +8,9 @@ use rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives;\n use rustc_trait_selection::traits::query::type_op::TypeOp;\n use std::rc::Rc;\n \n+use crate::dataflow::impls::MaybeInitializedPlaces;\n use crate::dataflow::indexes::MovePathIndex;\n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n-use crate::dataflow::MaybeInitializedPlaces;\n use crate::dataflow::ResultsCursor;\n \n use crate::borrow_check::{"}, {"sha": "7533bdfbd8d6067917d4c49581307ee699d0c4e5", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -39,8 +39,8 @@ use rustc_trait_selection::traits::query::type_op::custom::CustomTypeOp;\n use rustc_trait_selection::traits::query::{Fallible, NoSolution};\n use rustc_trait_selection::traits::{self, ObligationCause, PredicateObligations};\n \n+use crate::dataflow::impls::MaybeInitializedPlaces;\n use crate::dataflow::move_paths::MoveData;\n-use crate::dataflow::MaybeInitializedPlaces;\n use crate::dataflow::ResultsCursor;\n use crate::transform::{\n     check_consts::ConstCx,"}, {"sha": "e199a174efbc30d6f220dc65e9e1b3c83adb64b3", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -21,14 +21,14 @@ use super::on_lookup_result_bits;\n use crate::dataflow::drop_flag_effects;\n \n mod borrowed_locals;\n+pub(super) mod borrows;\n mod liveness;\n mod storage_liveness;\n \n-pub use self::borrowed_locals::*;\n+pub use self::borrowed_locals::{MaybeBorrowedLocals, MaybeMutBorrowedLocals};\n+pub use self::borrows::Borrows;\n pub use self::liveness::MaybeLiveLocals;\n-pub use self::storage_liveness::*;\n-\n-pub(super) mod borrows;\n+pub use self::storage_liveness::{MaybeRequiresStorage, MaybeStorageLive};\n \n /// `MaybeInitializedPlaces` tracks all places that might be\n /// initialized upon reaching a particular point in the control flow"}, {"sha": "ae1328dbd12c7e268caeb70fdf5098f9195a4c7c", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -8,17 +8,12 @@ pub use self::framework::{\n     BottomValue, Engine, Forward, GenKill, GenKillAnalysis, Results, ResultsCursor,\n     ResultsRefCursor, ResultsVisitor,\n };\n-pub use self::impls::{\n-    borrows::Borrows, DefinitelyInitializedPlaces, EverInitializedPlaces, MaybeBorrowedLocals,\n-    MaybeInitializedPlaces, MaybeLiveLocals, MaybeMutBorrowedLocals, MaybeRequiresStorage,\n-    MaybeStorageLive, MaybeUninitializedPlaces,\n-};\n \n use self::move_paths::MoveData;\n \n pub mod drop_flag_effects;\n mod framework;\n-mod impls;\n+pub mod impls;\n pub mod move_paths;\n \n pub(crate) mod indexes {"}, {"sha": "1d03606f2537e403f09926703081dfac50004fc3", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -20,7 +20,7 @@ use super::qualifs::{self, CustomEq, HasMutInterior, NeedsDrop};\n use super::resolver::FlowSensitiveAnalysis;\n use super::{is_lang_panic_fn, ConstCx, ConstKind, Qualif};\n use crate::const_eval::{is_const_fn, is_unstable_const_fn};\n-use crate::dataflow::MaybeMutBorrowedLocals;\n+use crate::dataflow::impls::MaybeMutBorrowedLocals;\n use crate::dataflow::{self, Analysis};\n \n // We are using `MaybeMutBorrowedLocals` as a proxy for whether an item may have been mutated"}, {"sha": "e379e5ee656b755a874ba26a508f866c42f99e69", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -1,10 +1,10 @@\n use crate::dataflow;\n+use crate::dataflow::impls::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use crate::dataflow::move_paths::{LookupResult, MoveData, MovePathIndex};\n use crate::dataflow::on_lookup_result_bits;\n use crate::dataflow::MoveDataParamEnv;\n use crate::dataflow::{on_all_children_bits, on_all_drop_children_bits};\n use crate::dataflow::{Analysis, ResultsCursor};\n-use crate::dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use crate::transform::{MirPass, MirSource};\n use crate::util::elaborate_drops::{elaborate_drop, DropFlagState, Unwind};\n use crate::util::elaborate_drops::{DropElaborator, DropFlagMode, DropStyle};"}, {"sha": "b5e691ef029dd047128ea89901f94daf31c9c5df", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -49,10 +49,10 @@\n //! For generators with state 1 (returned) and state 2 (poisoned) it does nothing.\n //! Otherwise it drops all the values in scope at the last suspension point.\n \n-use crate::dataflow::{self, Analysis};\n-use crate::dataflow::{\n+use crate::dataflow::impls::{\n     MaybeBorrowedLocals, MaybeLiveLocals, MaybeRequiresStorage, MaybeStorageLive,\n };\n+use crate::dataflow::{self, Analysis};\n use crate::transform::no_landing_pads::no_landing_pads;\n use crate::transform::simplify;\n use crate::transform::{MirPass, MirSource};"}, {"sha": "5eb374e7ee2f107b4c96d51abed5c723f498b2b5", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30988e54849b036c7714b1b5f9d97f5c5f71631/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=d30988e54849b036c7714b1b5f9d97f5c5f71631", "patch": "@@ -9,14 +9,14 @@ use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::{self, Body, Local, Location};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n \n+use crate::dataflow::impls::{\n+    DefinitelyInitializedPlaces, MaybeInitializedPlaces, MaybeLiveLocals, MaybeMutBorrowedLocals,\n+    MaybeUninitializedPlaces,\n+};\n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n use crate::dataflow::move_paths::{LookupResult, MovePathIndex};\n-use crate::dataflow::MaybeMutBorrowedLocals;\n use crate::dataflow::MoveDataParamEnv;\n use crate::dataflow::{Analysis, Results, ResultsCursor};\n-use crate::dataflow::{\n-    DefinitelyInitializedPlaces, MaybeInitializedPlaces, MaybeLiveLocals, MaybeUninitializedPlaces,\n-};\n \n pub struct SanityCheck;\n "}]}