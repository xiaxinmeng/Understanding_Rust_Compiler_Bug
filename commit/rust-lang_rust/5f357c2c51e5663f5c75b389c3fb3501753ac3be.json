{"sha": "5f357c2c51e5663f5c75b389c3fb3501753ac3be", "node_id": "C_kwDOAAsO6NoAKDVmMzU3YzJjNTFlNTY2M2Y1Yzc1YjM4OWMzZmIzNTAxNzUzYWMzYmU", "commit": {"author": {"name": "Waffle Maybe", "email": "waffle.lapkin@gmail.com", "date": "2022-08-07T18:32:26Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-21T01:27:14Z"}, "message": "fix cg cranelift\n\nCo-authored-by: bjorn3 <17426603+bjorn3@users.noreply.github.com>", "tree": {"sha": "4ba38e6b77e1a8f4d313f5f29ea789c4bc5309e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ba38e6b77e1a8f4d313f5f29ea789c4bc5309e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f357c2c51e5663f5c75b389c3fb3501753ac3be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f357c2c51e5663f5c75b389c3fb3501753ac3be", "html_url": "https://github.com/rust-lang/rust/commit/5f357c2c51e5663f5c75b389c3fb3501753ac3be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f357c2c51e5663f5c75b389c3fb3501753ac3be/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63a137605f837eebe4af0074fc23c9684b12e97e", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a137605f837eebe4af0074fc23c9684b12e97e", "html_url": "https://github.com/rust-lang/rust/commit/63a137605f837eebe4af0074fc23c9684b12e97e"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "9fe43157d508aa203ae27f8b542e4b7b14be5a62", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f357c2c51e5663f5c75b389c3fb3501753ac3be/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f357c2c51e5663f5c75b389c3fb3501753ac3be/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=5f357c2c51e5663f5c75b389c3fb3501753ac3be", "patch": "@@ -542,6 +542,8 @@ fn codegen_regular_intrinsic_call<'tcx>(\n \n         sym::ptr_mask => {\n             intrinsic_args!(fx, args => (ptr, mask); intrinsic);\n+            let ptr = ptr.load_scalar(fx);\n+            let mask = mask.load_scalar(fx);\n             fx.bcx.ins().band(ptr, mask);\n         }\n "}]}