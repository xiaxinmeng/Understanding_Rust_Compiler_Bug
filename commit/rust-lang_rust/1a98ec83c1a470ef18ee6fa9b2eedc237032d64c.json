{"sha": "1a98ec83c1a470ef18ee6fa9b2eedc237032d64c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOThlYzgzYzFhNDcwZWYxOGVlNmZhOWIyZWVkYzIzNzAzMmQ2NGM=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:44:00Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:23Z"}, "message": "middle: typeck: infer: combine: remove dead code", "tree": {"sha": "999b9ede10a9f82b3c06a67f39db7439953e60fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/999b9ede10a9f82b3c06a67f39db7439953e60fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c", "html_url": "https://github.com/rust-lang/rust/commit/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcb01ff573b5f4404d2e4ef6700dca63e91f0eb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb01ff573b5f4404d2e4ef6700dca63e91f0eb4", "html_url": "https://github.com/rust-lang/rust/commit/dcb01ff573b5f4404d2e4ef6700dca63e91f0eb4"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "4a03e32dee8245a20f8e3f2f65064643796a5325", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a98ec83c1a470ef18ee6fa9b2eedc237032d64c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=1a98ec83c1a470ef18ee6fa9b2eedc237032d64c", "patch": "@@ -373,28 +373,6 @@ pub fn eq_regions<C:Combine>(this: &C, a: ty::Region, b: ty::Region)\n     })\n }\n \n-pub fn eq_opt_regions<C:Combine>(\n-    this: &C,\n-    a: Option<ty::Region>,\n-    b: Option<ty::Region>) -> cres<Option<ty::Region>> {\n-\n-    match (a, b) {\n-        (None, None) => Ok(None),\n-        (Some(a), Some(b)) => eq_regions(this, a, b).then(|| Ok(Some(a))),\n-        (_, _) => {\n-            // If these two substitutions are for the same type (and\n-            // they should be), then the type should either\n-            // consistently have a region parameter or not have a\n-            // region parameter.\n-            this.infcx().tcx.sess.bug(\n-                format!(\"substitution a had opt_region {} and \\\n-                      b had opt_region {}\",\n-                     a.inf_str(this.infcx()),\n-                     b.inf_str(this.infcx())));\n-        }\n-    }\n-}\n-\n pub fn super_fn_sigs<C:Combine>(this: &C, a: &ty::FnSig, b: &ty::FnSig) -> cres<ty::FnSig> {\n \n     fn argvecs<C:Combine>(this: &C, a_args: &[ty::t], b_args: &[ty::t]) -> cres<Vec<ty::t> > {"}]}