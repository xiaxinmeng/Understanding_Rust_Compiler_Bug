{"sha": "2e8d9d7a25029e7d5c2ea17f156da19073372f1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOGQ5ZDdhMjUwMjllN2Q1YzJlYTE3ZjE1NmRhMTkwNzMzNzJmMWM=", "commit": {"author": {"name": "Takanori Ishibashi", "email": "takanori.1112@gmail.com", "date": "2018-07-01T08:37:42Z"}, "committer": {"name": "Takanori Ishibashi", "email": "takanori.1112@gmail.com", "date": "2018-07-01T08:37:42Z"}, "message": "absoluate -> absolute", "tree": {"sha": "2a3e6eac514cf0f6cbb54887bd82a8b1ccfa3497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a3e6eac514cf0f6cbb54887bd82a8b1ccfa3497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e8d9d7a25029e7d5c2ea17f156da19073372f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8d9d7a25029e7d5c2ea17f156da19073372f1c", "html_url": "https://github.com/rust-lang/rust/commit/2e8d9d7a25029e7d5c2ea17f156da19073372f1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e8d9d7a25029e7d5c2ea17f156da19073372f1c/comments", "author": {"login": "11Takanori", "id": 10259844, "node_id": "MDQ6VXNlcjEwMjU5ODQ0", "avatar_url": "https://avatars.githubusercontent.com/u/10259844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/11Takanori", "html_url": "https://github.com/11Takanori", "followers_url": "https://api.github.com/users/11Takanori/followers", "following_url": "https://api.github.com/users/11Takanori/following{/other_user}", "gists_url": "https://api.github.com/users/11Takanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/11Takanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/11Takanori/subscriptions", "organizations_url": "https://api.github.com/users/11Takanori/orgs", "repos_url": "https://api.github.com/users/11Takanori/repos", "events_url": "https://api.github.com/users/11Takanori/events{/privacy}", "received_events_url": "https://api.github.com/users/11Takanori/received_events", "type": "User", "site_admin": false}, "committer": {"login": "11Takanori", "id": 10259844, "node_id": "MDQ6VXNlcjEwMjU5ODQ0", "avatar_url": "https://avatars.githubusercontent.com/u/10259844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/11Takanori", "html_url": "https://github.com/11Takanori", "followers_url": "https://api.github.com/users/11Takanori/followers", "following_url": "https://api.github.com/users/11Takanori/following{/other_user}", "gists_url": "https://api.github.com/users/11Takanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/11Takanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/11Takanori/subscriptions", "organizations_url": "https://api.github.com/users/11Takanori/orgs", "repos_url": "https://api.github.com/users/11Takanori/repos", "events_url": "https://api.github.com/users/11Takanori/events{/privacy}", "received_events_url": "https://api.github.com/users/11Takanori/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "html_url": "https://github.com/rust-lang/rust/commit/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b8dfd21e54076ce3de0b4ff6ec4f3ddf79731483", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e8d9d7a25029e7d5c2ea17f156da19073372f1c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e8d9d7a25029e7d5c2ea17f156da19073372f1c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=2e8d9d7a25029e7d5c2ea17f156da19073372f1c", "patch": "@@ -2794,7 +2794,7 @@ impl<'a> Resolver<'a> {\n     /// A variant of `smart_resolve_path` where you also specify extra\n     /// information about where the path came from; this extra info is\n     /// sometimes needed for the lint that recommends rewriting\n-    /// absoluate paths to `crate`, so that it knows how to frame the\n+    /// absolute paths to `crate`, so that it knows how to frame the\n     /// suggestion. If you are just resolving a path like `foo::bar`\n     /// that appears...somewhere, though, then you just want\n     /// `CrateLint::SimplePath`, which is what `smart_resolve_path`"}]}