{"sha": "4bdc78436b2c323be505d2a15ab6c592c5a9c9c8", "node_id": "C_kwDOAAsO6NoAKDRiZGM3ODQzNmIyYzMyM2JlNTA1ZDJhMTVhYjZjNTkyYzVhOWM5Yzg", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-24T12:57:32Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-24T13:10:05Z"}, "message": "Merge landing_pad and set_cleanup into cleanup_landing_pad", "tree": {"sha": "e3fa1e2605253bcb2a9eba0c78247d97cbc4cbdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3fa1e2605253bcb2a9eba0c78247d97cbc4cbdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8", "html_url": "https://github.com/rust-lang/rust/commit/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eaf0bc20ac8476684c7e71d84071516c2c6309e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eaf0bc20ac8476684c7e71d84071516c2c6309e", "html_url": "https://github.com/rust-lang/rust/commit/2eaf0bc20ac8476684c7e71d84071516c2c6309e"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "ffb77e16a14863c505b199efdf2acdb02e9118a8", "filename": "src/builder.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bdc78436b2c323be505d2a15ab6c592c5a9c9c8/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=4bdc78436b2c323be505d2a15ab6c592c5a9c9c8", "patch": "@@ -1260,7 +1260,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         // TODO(antoyo)\n     }\n \n-    fn landing_pad(&mut self, _ty: Type<'gcc>, _pers_fn: RValue<'gcc>, _num_clauses: usize) -> RValue<'gcc> {\n+    fn cleanup_landing_pad(&mut self, _ty: Type<'gcc>, _pers_fn: RValue<'gcc>) -> RValue<'gcc> {\n         let field1 = self.context.new_field(None, self.u8_type, \"landing_pad_field_1\");\n         let field2 = self.context.new_field(None, self.i32_type, \"landing_pad_field_1\");\n         let struct_type = self.context.new_struct_type(None, \"landing_pad\", &[field1, field2]);\n@@ -1271,10 +1271,6 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         // rustc_codegen_ssa now calls the unwinding builder methods even on panic=abort.\n     }\n \n-    fn set_cleanup(&mut self, _landing_pad: RValue<'gcc>) {\n-        // TODO(antoyo)\n-    }\n-\n     fn resume(&mut self, _exn: RValue<'gcc>) {\n         unimplemented!();\n     }"}]}