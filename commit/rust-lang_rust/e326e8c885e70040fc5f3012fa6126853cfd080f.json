{"sha": "e326e8c885e70040fc5f3012fa6126853cfd080f", "node_id": "C_kwDOAAsO6NoAKGUzMjZlOGM4ODVlNzAwNDBmYzVmMzAxMmZhNjEyNjg1M2NmZDA4MGY", "commit": {"author": {"name": "akida31", "email": "akida3@protonmail.com", "date": "2022-10-09T08:07:47Z"}, "committer": {"name": "akida31", "email": "akida3@protonmail.com", "date": "2022-12-13T15:28:31Z"}, "message": "Remove `hint` from help message", "tree": {"sha": "bd364719a981c01ade8af5c7b0f26361d8826054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd364719a981c01ade8af5c7b0f26361d8826054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e326e8c885e70040fc5f3012fa6126853cfd080f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ20GAFrM+jef+hIIAuGvLD2ft8kFAmOYmiEACgkQAuGvLD2f\nt8kZaxAAo73hCx2dwQS0d3vP+i9qwOYGcdlnr7VGHpV8u4qsn0hayX05IB8rNVX1\niMQmqpwLKRfez0juZmIzCamk/LK+VRMBO/1/uKYAciofAq/SNu2vHRaFaNm8goMd\nT9ulL7WXr8SQB4VsMAhq+Fllc2nuG4p2QiN9CRMTJTek/u32hJXgokNb9g2bUnzK\nkv+ztlakUHmioCGSnFLvp9Uz6n96Xt4UuxLFbdetD8vEiKqYpdglzM0rK1+w4XB+\nF4UNYT5kPc0qGgbgqeeUDZPmkBaWPyJN8b7eSTUTbzglaPLzIN/KFKN41Mn3La4q\nxufHhlxjp5fZYORXh3cHNRbKcb4nIqUCz4TiVJmHdpKKua4fXRiPg+JJpVGZVntC\nOUzN1IeZTYZQHFvPzuMIhvPwWo1IIBgU3WCDqGZW7QToOVUBbEsFX/gjwHqAm5bU\nB7Hn8W92x97TJDEsaA+t1lBs6jKPcNWg/X9QHm3GolfhgVsNni0HpwUXKip+s7Hd\nTsR+1aSOPghZ/g6QXiRffX2hAAfuD7g2mlJW6wPOl8t50pBrZNySqrSD+EId3RSO\nY99NSGAWl0dCvj9eWXNxM2Gmwg7NEWnFCwI5IZc9z97oq7YxE3m5GsbpcUEpFH0s\nyXuxwYs6o+EOeSj0+o/oFDc28D3AjNUnWeRBLhh1bzOtVmHhykE=\n=FRVl\n-----END PGP SIGNATURE-----", "payload": "tree bd364719a981c01ade8af5c7b0f26361d8826054\nparent e50f5756aac024e5f10bf918e321afa1e671d7af\nauthor akida31 <akida3@protonmail.com> 1665302867 +0200\ncommitter akida31 <akida3@protonmail.com> 1670945311 +0100\n\nRemove `hint` from help message\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e326e8c885e70040fc5f3012fa6126853cfd080f", "html_url": "https://github.com/rust-lang/rust/commit/e326e8c885e70040fc5f3012fa6126853cfd080f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e326e8c885e70040fc5f3012fa6126853cfd080f/comments", "author": {"login": "Akida31", "id": 47895118, "node_id": "MDQ6VXNlcjQ3ODk1MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/47895118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akida31", "html_url": "https://github.com/Akida31", "followers_url": "https://api.github.com/users/Akida31/followers", "following_url": "https://api.github.com/users/Akida31/following{/other_user}", "gists_url": "https://api.github.com/users/Akida31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akida31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akida31/subscriptions", "organizations_url": "https://api.github.com/users/Akida31/orgs", "repos_url": "https://api.github.com/users/Akida31/repos", "events_url": "https://api.github.com/users/Akida31/events{/privacy}", "received_events_url": "https://api.github.com/users/Akida31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Akida31", "id": 47895118, "node_id": "MDQ6VXNlcjQ3ODk1MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/47895118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akida31", "html_url": "https://github.com/Akida31", "followers_url": "https://api.github.com/users/Akida31/followers", "following_url": "https://api.github.com/users/Akida31/following{/other_user}", "gists_url": "https://api.github.com/users/Akida31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akida31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akida31/subscriptions", "organizations_url": "https://api.github.com/users/Akida31/orgs", "repos_url": "https://api.github.com/users/Akida31/repos", "events_url": "https://api.github.com/users/Akida31/events{/privacy}", "received_events_url": "https://api.github.com/users/Akida31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e50f5756aac024e5f10bf918e321afa1e671d7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/e50f5756aac024e5f10bf918e321afa1e671d7af", "html_url": "https://github.com/rust-lang/rust/commit/e50f5756aac024e5f10bf918e321afa1e671d7af"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "8e393550509515033e6064d06c35622b8149610f", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e326e8c885e70040fc5f3012fa6126853cfd080f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e326e8c885e70040fc5f3012fa6126853cfd080f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=e326e8c885e70040fc5f3012fa6126853cfd080f", "patch": "@@ -1811,11 +1811,11 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n \n                 if found_ty == expected_ty {\n                     let hint = if found_refs < expected_refs {\n-                        \"hint: consider borrowing here:\"\n+                        \"consider borrowing here:\"\n                     } else if found_refs == expected_refs {\n                         continue;\n                     } else {\n-                        \"hint: consider removing the borrow:\"\n+                        \"consider removing the borrow:\"\n                     };\n                     err.span_suggestion_verbose(\n                         arg_span,"}, {"sha": "499ee1f9b5b466990df01323eb175d4790f9bc39", "filename": "src/test/ui/anonymous-higher-ranked-lifetime.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr?ref=e326e8c885e70040fc5f3012fa6126853cfd080f", "patch": "@@ -13,11 +13,11 @@ note: required by a bound in `f1`\n    |\n LL | fn f1<F>(_: F) where F: Fn(&(), &()) {}\n    |                         ^^^^^^^^^^^^ required by this bound in `f1`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f1(|_: &(), _: ()| {});\n    |            ~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f1(|_: (), _: &()| {});\n    |                   ~~~\n@@ -37,11 +37,11 @@ note: required by a bound in `f2`\n    |\n LL | fn f2<F>(_: F) where F: for<'a> Fn(&'a (), &()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f2`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f2(|_: &'a (), _: ()| {});\n    |            ~~~~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f2(|_: (), _: &()| {});\n    |                   ~~~\n@@ -61,11 +61,11 @@ note: required by a bound in `f3`\n    |\n LL | fn f3<'a, F>(_: F) where F: Fn(&'a (), &()) {}\n    |                             ^^^^^^^^^^^^^^^ required by this bound in `f3`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f3(|_: &(), _: ()| {});\n    |            ~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f3(|_: (), _: &()| {});\n    |                   ~~~\n@@ -85,11 +85,11 @@ note: required by a bound in `f4`\n    |\n LL | fn f4<F>(_: F) where F: for<'r> Fn(&(), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f4`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f4(|_: &(), _: ()| {});\n    |            ~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f4(|_: (), _: &'r ()| {});\n    |                   ~~~~~~\n@@ -109,11 +109,11 @@ note: required by a bound in `f5`\n    |\n LL | fn f5<F>(_: F) where F: for<'r> Fn(&'r (), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f5`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f5(|_: &'r (), _: ()| {});\n    |            ~~~~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     f5(|_: (), _: &'r ()| {});\n    |                   ~~~~~~\n@@ -133,7 +133,7 @@ note: required by a bound in `g1`\n    |\n LL | fn g1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g1`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     g1(|_: &(), _: ()| {});\n    |            ~~~\n@@ -153,7 +153,7 @@ note: required by a bound in `g2`\n    |\n LL | fn g2<F>(_: F) where F: Fn(&(), fn(&())) {}\n    |                         ^^^^^^^^^^^^^^^^ required by this bound in `g2`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     g2(|_: &(), _: ()| {});\n    |            ~~~\n@@ -173,7 +173,7 @@ note: required by a bound in `g3`\n    |\n LL | fn g3<F>(_: F) where F: for<'s> Fn(&'s (), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g3`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     g3(|_: &'s (), _: ()| {});\n    |            ~~~~~~\n@@ -193,7 +193,7 @@ note: required by a bound in `g4`\n    |\n LL | fn g4<F>(_: F) where F: Fn(&(), for<'r> fn(&'r ())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g4`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     g4(|_: &(), _: ()| {});\n    |            ~~~\n@@ -213,11 +213,11 @@ note: required by a bound in `h1`\n    |\n LL | fn h1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>, &(), fn(&(), &())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `h1`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     h1(|_: &(), _: (), _: (), _: ()| {});\n    |            ~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     h1(|_: (), _: (), _: &(), _: ()| {});\n    |                          ~~~\n@@ -237,11 +237,11 @@ note: required by a bound in `h2`\n    |\n LL | fn h2<F>(_: F) where F: for<'t0> Fn(&(), Box<dyn Fn(&())>, &'t0 (), fn(&(), &())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `h2`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     h2(|_: &(), _: (), _: (), _: ()| {});\n    |            ~~~\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     h2(|_: (), _: (), _: &'t0 (), _: ()| {});\n    |                          ~~~~~~~"}, {"sha": "3edcb4ee05e2352883fea68657934a4e6317fb20", "filename": "src/test/ui/mismatched_types/closure-arg-type-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr?ref=e326e8c885e70040fc5f3012fa6126853cfd080f", "patch": "@@ -13,7 +13,7 @@ note: required by a bound in `map`\n    |\n LL |         F: FnMut(Self::Item) -> B,\n    |            ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::map`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     a.iter().map(|_: &(u32, u32)| 45);\n    |                      ~~~~~~~~~~~"}, {"sha": "b0a69ef27208b9b948380bd099b69cc3c5ecef08", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e326e8c885e70040fc5f3012fa6126853cfd080f/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=e326e8c885e70040fc5f3012fa6126853cfd080f", "patch": "@@ -13,7 +13,7 @@ note: required by a bound in `filter`\n    |\n LL |         P: FnMut(&Self::Item) -> bool,\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::filter`\n-help: hint: consider borrowing here:\n+help: consider borrowing here:\n    |\n LL |     once::<&str>(\"str\").fuse().filter(|a: &&str| true).count();\n    |                                           ~~~~~"}]}