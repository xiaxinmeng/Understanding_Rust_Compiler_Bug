{"sha": "ee8365ad81115d79e1a33ef0c034c4a74cf01819", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODM2NWFkODExMTVkNzllMWEzM2VmMGMwMzRjNGE3NGNmMDE4MTk=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-07-18T13:16:23Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-07-29T22:56:44Z"}, "message": "Make std::ascii::ASCII_{UPPER,LOWER}_MAP public.", "tree": {"sha": "7f8db6d99c2700e48d61eda487dcd0c60689cb92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f8db6d99c2700e48d61eda487dcd0c60689cb92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee8365ad81115d79e1a33ef0c034c4a74cf01819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8365ad81115d79e1a33ef0c034c4a74cf01819", "html_url": "https://github.com/rust-lang/rust/commit/ee8365ad81115d79e1a33ef0c034c4a74cf01819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee8365ad81115d79e1a33ef0c034c4a74cf01819/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29cb9594d1105ff1ab00f11d16705b1c57e8287c", "url": "https://api.github.com/repos/rust-lang/rust/commits/29cb9594d1105ff1ab00f11d16705b1c57e8287c", "html_url": "https://github.com/rust-lang/rust/commit/29cb9594d1105ff1ab00f11d16705b1c57e8287c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "2b1c15efd8bf8eb73befc9e4d34bdb189c21e843", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ee8365ad81115d79e1a33ef0c034c4a74cf01819/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8365ad81115d79e1a33ef0c034c4a74cf01819/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=ee8365ad81115d79e1a33ef0c034c4a74cf01819", "patch": "@@ -400,12 +400,12 @@ pub trait StrAsciiExt {\n impl<'a> StrAsciiExt for &'a str {\n     #[inline]\n     fn to_ascii_upper(&self) -> String {\n-        unsafe { str_copy_map_bytes(*self, ASCII_UPPER_MAP) }\n+        unsafe { str_copy_map_bytes(*self, &ASCII_UPPER_MAP) }\n     }\n \n     #[inline]\n     fn to_ascii_lower(&self) -> String {\n-        unsafe { str_copy_map_bytes(*self, ASCII_LOWER_MAP) }\n+        unsafe { str_copy_map_bytes(*self, &ASCII_LOWER_MAP) }\n     }\n \n     #[inline]\n@@ -422,17 +422,17 @@ impl<'a> StrAsciiExt for &'a str {\n impl OwnedStrAsciiExt for String {\n     #[inline]\n     fn into_ascii_upper(self) -> String {\n-        unsafe { str_map_bytes(self, ASCII_UPPER_MAP) }\n+        unsafe { str_map_bytes(self, &ASCII_UPPER_MAP) }\n     }\n \n     #[inline]\n     fn into_ascii_lower(self) -> String {\n-        unsafe { str_map_bytes(self, ASCII_LOWER_MAP) }\n+        unsafe { str_map_bytes(self, &ASCII_LOWER_MAP) }\n     }\n }\n \n #[inline]\n-unsafe fn str_map_bytes(string: String, map: &'static [u8]) -> String {\n+unsafe fn str_map_bytes(string: String, map: &[u8, ..256]) -> String {\n     let mut bytes = string.into_bytes();\n \n     for b in bytes.mut_iter() {\n@@ -443,15 +443,15 @@ unsafe fn str_map_bytes(string: String, map: &'static [u8]) -> String {\n }\n \n #[inline]\n-unsafe fn str_copy_map_bytes(string: &str, map: &'static [u8]) -> String {\n+unsafe fn str_copy_map_bytes(string: &str, map: &[u8, ..256]) -> String {\n     let mut s = String::from_str(string);\n     for b in s.as_mut_bytes().mut_iter() {\n         *b = map[*b as uint];\n     }\n     s.into_string()\n }\n \n-static ASCII_LOWER_MAP: &'static [u8] = &[\n+pub static ASCII_LOWER_MAP: [u8, ..256] = [\n     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n     0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,\n     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n@@ -490,7 +490,7 @@ static ASCII_LOWER_MAP: &'static [u8] = &[\n     0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,\n ];\n \n-static ASCII_UPPER_MAP: &'static [u8] = &[\n+pub static ASCII_UPPER_MAP: [u8, ..256] = [\n     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n     0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,\n     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,"}]}