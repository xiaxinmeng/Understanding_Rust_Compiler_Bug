{"sha": "c68440cad49f6d0cda09f8c7d4989ff63f55a26e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ODQ0MGNhZDQ5ZjZkMGNkYTA5ZjhjN2Q0OTg5ZmY2M2Y1NWEyNmU=", "commit": {"author": {"name": "Songbird0", "email": "Songbird0@users.noreply.github.com", "date": "2018-03-04T20:59:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-04T20:59:53Z"}, "message": "Add a potential cause raising `ParseIntError`.\n\nInitially, I wanted to add it directly to the documentation of `str. parse()' method, I finally found that it was more relevant (I hope so?) to directly document the structure in question. I've added a scenario, in which we could all get caught at least once, to make it easier to diagnose the problem when parsing integers.", "tree": {"sha": "c99bc4bd1df642305b4773423ceca234eb904610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c99bc4bd1df642305b4773423ceca234eb904610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c68440cad49f6d0cda09f8c7d4989ff63f55a26e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJanF5JCRBK7hj4Ov3rIwAAdHIIABIkdDj++q/OlZuVJl8xGluU\nCHoZnNso2RWj29fEFp2xVeSV0Kqz+EoUGlnjeMnTLdO0VVrc73Pu0G17ezw/LYmb\n953ydSMNABPkP3ulQxPWHT7eJsB0ukh9uld4PW2ybyyiv9mRF/kMGQPDnPnMn0qQ\ninB1e5+UDFagiM8ayJH7ITi+BPMLgGargwYkzMQpEzRa3RJF4L50gUvryfVrP5uE\nL75B93dsTTdtZfPYBZrVCts7uDeDYBy0PxVkKq/x/ZWHQarTWK2x/qtf+5borvX/\npyImcL4HOc6E7l9CsVos7ADFwI9rQEiyfBE2neo4A1PDox/dbqVbuJ9IScIICMk=\n=3yxx\n-----END PGP SIGNATURE-----\n", "payload": "tree c99bc4bd1df642305b4773423ceca234eb904610\nparent 1e1bfc715f8dfe36a38d8fae36fcbe92e7463a3f\nauthor Songbird0 <Songbird0@users.noreply.github.com> 1520197193 +0100\ncommitter GitHub <noreply@github.com> 1520197193 +0100\n\nAdd a potential cause raising `ParseIntError`.\n\nInitially, I wanted to add it directly to the documentation of `str. parse()' method, I finally found that it was more relevant (I hope so?) to directly document the structure in question. I've added a scenario, in which we could all get caught at least once, to make it easier to diagnose the problem when parsing integers."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c68440cad49f6d0cda09f8c7d4989ff63f55a26e", "html_url": "https://github.com/rust-lang/rust/commit/c68440cad49f6d0cda09f8c7d4989ff63f55a26e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c68440cad49f6d0cda09f8c7d4989ff63f55a26e/comments", "author": {"login": "Songbird0", "id": 13397428, "node_id": "MDQ6VXNlcjEzMzk3NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/13397428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Songbird0", "html_url": "https://github.com/Songbird0", "followers_url": "https://api.github.com/users/Songbird0/followers", "following_url": "https://api.github.com/users/Songbird0/following{/other_user}", "gists_url": "https://api.github.com/users/Songbird0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Songbird0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Songbird0/subscriptions", "organizations_url": "https://api.github.com/users/Songbird0/orgs", "repos_url": "https://api.github.com/users/Songbird0/repos", "events_url": "https://api.github.com/users/Songbird0/events{/privacy}", "received_events_url": "https://api.github.com/users/Songbird0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e1bfc715f8dfe36a38d8fae36fcbe92e7463a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e1bfc715f8dfe36a38d8fae36fcbe92e7463a3f", "html_url": "https://github.com/rust-lang/rust/commit/1e1bfc715f8dfe36a38d8fae36fcbe92e7463a3f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1b51ebefb6041279cd83064088011ed05b056f52", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c68440cad49f6d0cda09f8c7d4989ff63f55a26e/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c68440cad49f6d0cda09f8c7d4989ff63f55a26e/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=c68440cad49f6d0cda09f8c7d4989ff63f55a26e", "patch": "@@ -3845,7 +3845,13 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n ///\n /// This error is used as the error type for the `from_str_radix()` functions\n /// on the primitive integer types, such as [`i8::from_str_radix`].\n+/// \n+/// # Potential causes\n ///\n+/// Among other causes, `ParseIntError` can be thrown because of leading or trailing whitespaces in the string e.g. when it is getted from the standard input. \n+/// Using the [`str.trim()`] method ensures that no whitespace remains before parsing.\n+///\n+/// [`str.trim()`]: ../../std/primitive.str.html#method.trim\n /// [`i8::from_str_radix`]: ../../std/primitive.i8.html#method.from_str_radix\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}