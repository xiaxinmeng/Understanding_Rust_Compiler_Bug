{"sha": "849b73b8d9f563bfc64ce0e4c311347a4263f258", "node_id": "C_kwDOAAsO6NoAKDg0OWI3M2I4ZDlmNTYzYmZjNjRjZTBlNGMzMTEzNDdhNDI2M2YyNTg", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-28T13:42:16Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-28T13:42:16Z"}, "message": "Manually inline a function that is only ever called at the end of another function", "tree": {"sha": "d317c5d792f3302bf689a0568b8df2a6debe4a17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d317c5d792f3302bf689a0568b8df2a6debe4a17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/849b73b8d9f563bfc64ce0e4c311347a4263f258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/849b73b8d9f563bfc64ce0e4c311347a4263f258", "html_url": "https://github.com/rust-lang/rust/commit/849b73b8d9f563bfc64ce0e4c311347a4263f258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/849b73b8d9f563bfc64ce0e4c311347a4263f258/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a2f2098fb1ad72f315558441b2ef26daf2fe42", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a2f2098fb1ad72f315558441b2ef26daf2fe42", "html_url": "https://github.com/rust-lang/rust/commit/f1a2f2098fb1ad72f315558441b2ef26daf2fe42"}], "stats": {"total": 39, "additions": 6, "deletions": 33}, "files": [{"sha": "02511a7291ddad22dfd29e51cd330ecb99d8247f", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 6, "deletions": 33, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/849b73b8d9f563bfc64ce0e4c311347a4263f258/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/849b73b8d9f563bfc64ce0e4c311347a4263f258/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=849b73b8d9f563bfc64ce0e4c311347a4263f258", "patch": "@@ -29,15 +29,6 @@ pub trait InferCtxtExt<'tcx> {\n         opaque_defn: &OpaqueTypeDecl<'tcx>,\n     );\n \n-    /*private*/\n-    fn generate_member_constraint(\n-        &self,\n-        concrete_ty: Ty<'tcx>,\n-        opaque_defn: &OpaqueTypeDecl<'tcx>,\n-        opaque_type_key: OpaqueTypeKey<'tcx>,\n-        first_own_region_index: usize,\n-    );\n-\n     fn infer_opaque_definition_from_instantiation(\n         &self,\n         opaque_type_key: OpaqueTypeKey<'tcx>,\n@@ -285,31 +276,13 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             hir::OpaqueTyOrigin::TyAlias => 0,\n         };\n \n-        // The regions that appear in the hidden type must be equal to\n-        // one of the regions in scope for the opaque type.\n-        self.generate_member_constraint(\n-            concrete_ty,\n-            opaque_defn,\n-            opaque_type_key,\n-            first_own_region,\n-        );\n-    }\n+        // For a case like `impl Foo<'a, 'b>`, we would generate a constraint\n+        // `'r in ['a, 'b, 'static]` for each region `'r` that appears in the\n+        // hidden type (i.e., it must be equal to `'a`, `'b`, or `'static`).\n+        //\n+        // `conflict1` and `conflict2` are the two region bounds that we\n+        // detected which were unrelated. They are used for diagnostics.\n \n-    /// As a fallback, we sometimes generate an \"in constraint\". For\n-    /// a case like `impl Foo<'a, 'b>`, where `'a` and `'b` cannot be\n-    /// related, we would generate a constraint `'r in ['a, 'b,\n-    /// 'static]` for each region `'r` that appears in the hidden type\n-    /// (i.e., it must be equal to `'a`, `'b`, or `'static`).\n-    ///\n-    /// `conflict1` and `conflict2` are the two region bounds that we\n-    /// detected which were unrelated. They are used for diagnostics.\n-    fn generate_member_constraint(\n-        &self,\n-        concrete_ty: Ty<'tcx>,\n-        opaque_defn: &OpaqueTypeDecl<'tcx>,\n-        opaque_type_key: OpaqueTypeKey<'tcx>,\n-        first_own_region: usize,\n-    ) {\n         // Create the set of choice regions: each region in the hidden\n         // type can be equal to any of the region parameters of the\n         // opaque type definition."}]}