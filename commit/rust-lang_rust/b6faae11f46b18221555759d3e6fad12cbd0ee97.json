{"sha": "b6faae11f46b18221555759d3e6fad12cbd0ee97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZmFhZTExZjQ2YjE4MjIxNTU1NzU5ZDNlNmZhZDEyY2JkMGVlOTc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-26T13:25:39Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-26T13:25:39Z"}, "message": "Rollup merge of #31211 - Manishearth:pr-30765, r=nrc\n\nr? @eddyb or @nrc", "tree": {"sha": "73ca828212a1d995b4cab760b207964f9c6e8231", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73ca828212a1d995b4cab760b207964f9c6e8231"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6faae11f46b18221555759d3e6fad12cbd0ee97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6faae11f46b18221555759d3e6fad12cbd0ee97", "html_url": "https://github.com/rust-lang/rust/commit/b6faae11f46b18221555759d3e6fad12cbd0ee97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6faae11f46b18221555759d3e6fad12cbd0ee97/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef96037f7e95f344d34252fa70bb10109ad5b285", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef96037f7e95f344d34252fa70bb10109ad5b285", "html_url": "https://github.com/rust-lang/rust/commit/ef96037f7e95f344d34252fa70bb10109ad5b285"}, {"sha": "065e47eb3b23a9bd3074d3406157f0aafc575150", "url": "https://api.github.com/repos/rust-lang/rust/commits/065e47eb3b23a9bd3074d3406157f0aafc575150", "html_url": "https://github.com/rust-lang/rust/commit/065e47eb3b23a9bd3074d3406157f0aafc575150"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "51013d68930ea9a36f3770544aff4f8f2712b60c", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=b6faae11f46b18221555759d3e6fad12cbd0ee97", "patch": "@@ -10,7 +10,7 @@\n \n use self::Destination::*;\n \n-use codemap::{self, COMMAND_LINE_SP, COMMAND_LINE_EXPN, Pos, Span};\n+use codemap::{self, COMMAND_LINE_SP, COMMAND_LINE_EXPN, DUMMY_SP, Pos, Span};\n use diagnostics;\n \n use errors::{Level, RenderSpan, DiagnosticBuilder};\n@@ -109,8 +109,8 @@ impl Emitter for EmitterWriter {\n             lvl: Level) {\n         let error = match sp {\n             Some(COMMAND_LINE_SP) => self.emit_(FileLine(COMMAND_LINE_SP), msg, code, lvl),\n+            Some(DUMMY_SP) | None => print_diagnostic(&mut self.dst, \"\", lvl, msg, code),\n             Some(sp) => self.emit_(FullSpan(sp), msg, code, lvl),\n-            None => print_diagnostic(&mut self.dst, \"\", lvl, msg, code),\n         };\n \n         if let Err(e) = error {"}, {"sha": "2249faac6d7010627ab2a9120fe20ec1c8da2c30", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b6faae11f46b18221555759d3e6fad12cbd0ee97", "patch": "@@ -2218,6 +2218,12 @@ impl<'a> Parser<'a> {\n                         ex = ExprBreak(None);\n                     }\n                     hi = self.last_span.hi;\n+                } else if self.token.is_keyword(keywords::Let) {\n+                    // Catch this syntax error here, instead of in `check_strict_keywords`, so\n+                    // that we can explicitly mention that let is not to be used as an expression\n+                    let mut db = self.fatal(\"expected expression, found statement (`let`)\");\n+                    db.note(\"variable declaration using `let` is a statement\");\n+                    return Err(db);\n                 } else if self.check(&token::ModSep) ||\n                         self.token.is_ident() &&\n                         !self.check_keyword(keywords::True) &&"}, {"sha": "41a6fd05c3741fb6090cc956442c5ee0bfb8ae2c", "filename": "src/test/run-fail-fulldeps/qquote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Ftest%2Frun-fail-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6faae11f46b18221555759d3e6fad12cbd0ee97/src%2Ftest%2Frun-fail-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail-fulldeps%2Fqquote.rs?ref=b6faae11f46b18221555759d3e6fad12cbd0ee97", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-cross-compile\n \n-// error-pattern:expected identifier, found keyword `let`\n+// error-pattern:expected expression, found statement (`let`)\n \n #![feature(quote, rustc_private)]\n "}]}