{"sha": "6d23824ef439747bf7085bdfd9e09c7d304e1ab9", "node_id": "C_kwDOAAsO6NoAKDZkMjM4MjRlZjQzOTc0N2JmNzA4NWJkZmQ5ZTA5YzdkMzA0ZTFhYjk", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-08T15:35:23Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-08T15:35:23Z"}, "message": "Make select_* methods return Vec for TraitEngine", "tree": {"sha": "3fb1d078ae0c2866ec58bcf6e046ff8566426978", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fb1d078ae0c2866ec58bcf6e046ff8566426978"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d23824ef439747bf7085bdfd9e09c7d304e1ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d23824ef439747bf7085bdfd9e09c7d304e1ab9", "html_url": "https://github.com/rust-lang/rust/commit/6d23824ef439747bf7085bdfd9e09c7d304e1ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d23824ef439747bf7085bdfd9e09c7d304e1ab9/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c063203c2bacd015156f353d6de0c2071c9c26bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c063203c2bacd015156f353d6de0c2071c9c26bd", "html_url": "https://github.com/rust-lang/rust/commit/c063203c2bacd015156f353d6de0c2071c9c26bd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6b2ac985555dc59fc7014b3c0afeb4267ffd9420", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d23824ef439747bf7085bdfd9e09c7d304e1ab9/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d23824ef439747bf7085bdfd9e09c7d304e1ab9/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=6d23824ef439747bf7085bdfd9e09c7d304e1ab9", "patch": "@@ -77,13 +77,13 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n             if is_future {\n                 let send_trait = cx.tcx.get_diagnostic_item(sym::Send).unwrap();\n                 let span = decl.output.span();\n-                let send_result = cx.tcx.infer_ctxt().enter(|infcx| {\n+                let send_errors = cx.tcx.infer_ctxt().enter(|infcx| {\n                     let cause = traits::ObligationCause::misc(span, hir_id);\n                     let mut fulfillment_cx = traits::FulfillmentContext::new();\n                     fulfillment_cx.register_bound(&infcx, cx.param_env, ret_ty, send_trait, cause);\n                     fulfillment_cx.select_all_or_error(&infcx)\n                 });\n-                if let Err(send_errors) = send_result {\n+                if !send_errors.is_empty() {\n                     span_lint_and_then(\n                         cx,\n                         FUTURE_NOT_SEND,"}]}