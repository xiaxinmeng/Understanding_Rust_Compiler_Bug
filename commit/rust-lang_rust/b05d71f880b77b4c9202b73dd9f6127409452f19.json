{"sha": "b05d71f880b77b4c9202b73dd9f6127409452f19", "node_id": "C_kwDOAAsO6NoAKGIwNWQ3MWY4ODBiNzdiNGM5MjAyYjczZGQ5ZjYxMjc0MDk0NTJmMTk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-18T14:38:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-18T14:38:28Z"}, "message": "make std not use &A: Allocator instance", "tree": {"sha": "eae96ef5ffcaea47685797bd41ae6d7a6023650a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eae96ef5ffcaea47685797bd41ae6d7a6023650a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b05d71f880b77b4c9202b73dd9f6127409452f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b05d71f880b77b4c9202b73dd9f6127409452f19", "html_url": "https://github.com/rust-lang/rust/commit/b05d71f880b77b4c9202b73dd9f6127409452f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b05d71f880b77b4c9202b73dd9f6127409452f19/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7952205bc8b8c890bca12430e75cc3173d49cb52", "url": "https://api.github.com/repos/rust-lang/rust/commits/7952205bc8b8c890bca12430e75cc3173d49cb52", "html_url": "https://github.com/rust-lang/rust/commit/7952205bc8b8c890bca12430e75cc3173d49cb52"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d554ec590358fd6f37d7745fbb18ba8dfd794961", "filename": "library/std/src/alloc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b05d71f880b77b4c9202b73dd9f6127409452f19/library%2Fstd%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d71f880b77b4c9202b73dd9f6127409452f19/library%2Fstd%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Falloc.rs?ref=b05d71f880b77b4c9202b73dd9f6127409452f19", "patch": "@@ -187,7 +187,7 @@ impl System {\n             old_size => unsafe {\n                 let new_ptr = self.alloc_impl(new_layout, zeroed)?;\n                 ptr::copy_nonoverlapping(ptr.as_ptr(), new_ptr.as_mut_ptr(), old_size);\n-                Allocator::deallocate(&self, ptr, old_layout);\n+                Allocator::deallocate(self, ptr, old_layout);\n                 Ok(new_ptr)\n             },\n         }\n@@ -254,7 +254,7 @@ unsafe impl Allocator for System {\n         match new_layout.size() {\n             // SAFETY: conditions must be upheld by the caller\n             0 => unsafe {\n-                Allocator::deallocate(&self, ptr, old_layout);\n+                Allocator::deallocate(self, ptr, old_layout);\n                 Ok(NonNull::slice_from_raw_parts(new_layout.dangling(), 0))\n             },\n \n@@ -274,9 +274,9 @@ unsafe impl Allocator for System {\n             // `new_ptr`. Thus, the call to `copy_nonoverlapping` is safe. The safety contract\n             // for `dealloc` must be upheld by the caller.\n             new_size => unsafe {\n-                let new_ptr = Allocator::allocate(&self, new_layout)?;\n+                let new_ptr = Allocator::allocate(self, new_layout)?;\n                 ptr::copy_nonoverlapping(ptr.as_ptr(), new_ptr.as_mut_ptr(), new_size);\n-                Allocator::deallocate(&self, ptr, old_layout);\n+                Allocator::deallocate(self, ptr, old_layout);\n                 Ok(new_ptr)\n             },\n         }"}]}