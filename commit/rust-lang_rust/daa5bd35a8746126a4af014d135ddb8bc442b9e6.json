{"sha": "daa5bd35a8746126a4af014d135ddb8bc442b9e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYTViZDM1YTg3NDYxMjZhNGFmMDE0ZDEzNWRkYjhiYzQ0MmI5ZTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-07T06:46:28Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-07T06:46:28Z"}, "message": "fix typo", "tree": {"sha": "b5ad3aa7091c55b5541feb2d94fa7cef5d4f1915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5ad3aa7091c55b5541feb2d94fa7cef5d4f1915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daa5bd35a8746126a4af014d135ddb8bc442b9e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daa5bd35a8746126a4af014d135ddb8bc442b9e6", "html_url": "https://github.com/rust-lang/rust/commit/daa5bd35a8746126a4af014d135ddb8bc442b9e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daa5bd35a8746126a4af014d135ddb8bc442b9e6/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce4ea5149e28b938d0af8466dd9af1e489f1b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce4ea5149e28b938d0af8466dd9af1e489f1b55", "html_url": "https://github.com/rust-lang/rust/commit/cce4ea5149e28b938d0af8466dd9af1e489f1b55"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f84b5307a1137895e4240590621d723789cc1267", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daa5bd35a8746126a4af014d135ddb8bc442b9e6/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa5bd35a8746126a4af014d135ddb8bc442b9e6/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=daa5bd35a8746126a4af014d135ddb8bc442b9e6", "patch": "@@ -186,7 +186,7 @@ impl TokenStream {\n     /// Given a `TokenStream` with a `Stream` of only two arguments, return a new `TokenStream`\n     /// separating the two arguments with a comma for diagnostic suggestions.\n     pub(crate) fn add_comma(&self) -> Option<(TokenStream, Span)> {\n-        // Used ot suggest if a user writes `println!(\"{}\" a);`\n+        // Used to suggest if a user writes `println!(\"{}\" a);`\n         if let TokenStreamKind::Stream(ref slice) = self.kind {\n             if slice.len() == 2 {\n                 let comma_span = match slice[0] {"}]}