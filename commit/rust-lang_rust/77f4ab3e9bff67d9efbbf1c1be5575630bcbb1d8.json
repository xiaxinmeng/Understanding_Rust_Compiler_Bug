{"sha": "77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZjRhYjNlOWJmZjY3ZDllZmJiZjFjMWJlNTU3NTYzMGJjYmIxZDg=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-08T01:58:28Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-08T01:58:28Z"}, "message": "Deduplicate while loop break condition", "tree": {"sha": "c7fd5eda4cc9fa29bd8e13d991b7d585fb226741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7fd5eda4cc9fa29bd8e13d991b7d585fb226741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8", "html_url": "https://github.com/rust-lang/rust/commit/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d4202194ebeb080b1ae283c56a1697aa4a6fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d4202194ebeb080b1ae283c56a1697aa4a6fcc", "html_url": "https://github.com/rust-lang/rust/commit/79d4202194ebeb080b1ae283c56a1697aa4a6fcc"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "834d80b52fa570bc972e1910dfc339f59b39ae4a", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=77f4ab3e9bff67d9efbbf1c1be5575630bcbb1d8", "patch": "@@ -47,10 +47,10 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n         attributes::outer_attributes(p);\n         opt_self_param(p);\n     }\n-    while !p.at(EOF) && !p.at(ket) && !(flavor.type_required() && p.at(T![...])) {\n+    while !p.at(EOF) && !p.at(ket) {\n         attributes::outer_attributes(p);\n \n-        if p.at(T![...]) {\n+        if flavor.type_required() && p.at(T![...]) {\n             break;\n         }\n "}]}