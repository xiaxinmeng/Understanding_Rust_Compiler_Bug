{"sha": "8b318be4ce4381a5f7acc1864914e6ba8b0a5af2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMzE4YmU0Y2U0MzgxYTVmN2FjYzE4NjQ5MTRlNmJhOGIwYTVhZjI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-12T02:52:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-12T02:52:49Z"}, "message": "rustc: Typecheck vector index expressions for interior vectors", "tree": {"sha": "908a9bd616213c6015650e8c43b43643fa606e33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/908a9bd616213c6015650e8c43b43643fa606e33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2", "html_url": "https://github.com/rust-lang/rust/commit/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac206068d9288faa9ee35aca3d1f5bb0268f46d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac206068d9288faa9ee35aca3d1f5bb0268f46d4", "html_url": "https://github.com/rust-lang/rust/commit/ac206068d9288faa9ee35aca3d1f5bb0268f46d4"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "a1a06befc5a14ca6c5b9a6c86e319195654b80ed", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b318be4ce4381a5f7acc1864914e6ba8b0a5af2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=8b318be4ce4381a5f7acc1864914e6ba8b0a5af2", "patch": "@@ -2216,23 +2216,24 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n \n             check_expr(fcx, idx);\n             auto idx_t = expr_ty(fcx.ccx.tcx, idx);\n+            if (!type_is_integral(fcx, idx.span, idx_t)) {\n+                fcx.ccx.tcx.sess.span_err(idx.span,\n+                     \"mismatched types: expected integer but found \" +\n+                     ty_to_str(fcx.ccx.tcx, idx_t));\n+            }\n+\n             alt (structure_of(fcx, expr.span, base_t)) {\n                 case (ty::ty_vec(?mt)) {\n-                    if (! type_is_integral(fcx, idx.span, idx_t)) {\n-                        fcx.ccx.tcx.sess.span_err\n-                            (idx.span,\n-                             \"non-integral type of vec index: \"\n-                             + ty_to_str(fcx.ccx.tcx, idx_t));\n-                    }\n+                    write::ty_only_fixup(fcx, a.id, mt.ty);\n+                }\n+                case (ty::ty_ivec(?mt)) {\n                     write::ty_only_fixup(fcx, a.id, mt.ty);\n                 }\n                 case (ty::ty_str) {\n-                    if (! type_is_integral(fcx, idx.span, idx_t)) {\n-                        fcx.ccx.tcx.sess.span_err\n-                            (idx.span,\n-                             \"non-integral type of str index: \"\n-                             + ty_to_str(fcx.ccx.tcx, idx_t));\n-                    }\n+                    auto typ = ty::mk_mach(fcx.ccx.tcx, common::ty_u8);\n+                    write::ty_only_fixup(fcx, a.id, typ);\n+                }\n+                case (ty::ty_istr) {\n                     auto typ = ty::mk_mach(fcx.ccx.tcx, common::ty_u8);\n                     write::ty_only_fixup(fcx, a.id, typ);\n                 }"}]}