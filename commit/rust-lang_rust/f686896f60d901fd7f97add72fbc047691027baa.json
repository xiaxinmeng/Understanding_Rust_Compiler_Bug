{"sha": "f686896f60d901fd7f97add72fbc047691027baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ODY4OTZmNjBkOTAxZmQ3Zjk3YWRkNzJmYmMwNDc2OTEwMjdiYWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T19:32:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T19:32:05Z"}, "message": "test: \"import\" -> \"use\"", "tree": {"sha": "5cfb0f00f9d0eaef93839f33adf532bea5846c33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cfb0f00f9d0eaef93839f33adf532bea5846c33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f686896f60d901fd7f97add72fbc047691027baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f686896f60d901fd7f97add72fbc047691027baa", "html_url": "https://github.com/rust-lang/rust/commit/f686896f60d901fd7f97add72fbc047691027baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f686896f60d901fd7f97add72fbc047691027baa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47dac47e96fb47f84ac2f75781e2819ce80791a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/47dac47e96fb47f84ac2f75781e2819ce80791a4", "html_url": "https://github.com/rust-lang/rust/commit/47dac47e96fb47f84ac2f75781e2819ce80791a4"}], "stats": {"total": 971, "additions": 409, "deletions": 562}, "files": [{"sha": "27400322e4011d8a2bc0a989441bf5b6948cd951", "filename": "src/test/auxiliary/cci_capture_clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n export foo;\n \n-import comm::*;\n+use comm::*;\n \n fn foo<T: send copy>(x: T) -> Port<T> {\n     let p = Port();"}, {"sha": "830ca90628aefd5058ae5ea5be949e3d7f18a160", "filename": "src/test/auxiliary/cci_class_cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import to_str::*;\n-import to_str::ToStr;\n+use to_str::*;\n+use to_str::ToStr;\n \n mod kitty {\n "}, {"sha": "8a714740550a9798473dd1f248ed9e28906d0e85", "filename": "src/test/auxiliary/cci_nested_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import dvec::DVec;\n+use dvec::DVec;\n \n type entry<A,B> = {key: A, value: B};\n type alist<A,B> = { eq_fn: fn@(A,A) -> bool, data: DVec<entry<A,B>> };"}, {"sha": "e9becef99b50c151de4503b53d4438484504180b", "filename": "src/test/auxiliary/crate-method-reexport-grrrrrrr2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n \n export rust;\n \n-import name_pool::add;\n+use name_pool::add;\n \n mod name_pool {\n "}, {"sha": "f2f193cd0f3fb6ae8a60d01fa775def1dfd145be", "filename": "src/test/auxiliary/issue-2196-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue-2196-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue-2196-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2196-c.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import b::d;\n+use b::d;\n \n type t = uint;\n "}, {"sha": "35a354206360f2ab86a60e5c914f3e42a307b111", "filename": "src/test/auxiliary/issue-2631-a.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,9 +3,9 @@\n \n use std;\n \n-import dvec::*;\n-import dvec::DVec;\n-import std::map::hashmap;\n+use dvec::*;\n+use dvec::DVec;\n+use std::map::hashmap;\n \n type header_map = hashmap<~str, @DVec<@~str>>;\n "}, {"sha": "6cbb7edf7635a4d565d75825bb7b72a7cea989d0", "filename": "src/test/auxiliary/issue2378b.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue2378b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue2378b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue2378b.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use issue2378a;\n \n-import issue2378a::maybe;\n-import issue2378a::methods;\n+use issue2378a::maybe;\n+use issue2378a::methods;\n \n type two_maybes<T> = {a: maybe<T>, b: maybe<T>};\n "}, {"sha": "55beefd26830b61480d122ed6fb3ae54e36427d3", "filename": "src/test/auxiliary/issue_2242_b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n #[crate_type = \"lib\"];\n \n use a;\n-import a::to_strz;\n+use a::to_strz;\n \n impl int: to_strz {\n     fn to_strz() -> ~str { fmt!(\"%?\", self) }"}, {"sha": "18dc2cd1c05d387480f2e969acea0b6a46891dc5", "filename": "src/test/auxiliary/issue_2242_c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,7 +3,7 @@\n \n use a;\n \n-import a::to_strz;\n+use a::to_strz;\n \n impl bool: to_strz {\n     fn to_strz() -> ~str { fmt!(\"%b\", self) }"}, {"sha": "81a7ed3db4c057482d70a942e7c1604af05395bb", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@ use issue_2316_a;\n \n mod cloth {\n \n-import issue_2316_a::*;\n+use issue_2316_a::*;\n \n export calico, gingham, flannel;\n export fabric;"}, {"sha": "0fb66520479deadb967894e27e1682054e48a6af", "filename": "src/test/auxiliary/test_comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Ftest_comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fauxiliary%2Ftest_comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftest_comm.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,7 +4,7 @@\n   Could probably be more minimal.\n  */\n \n-import libc::size_t;\n+use libc::size_t;\n \n export port::{};\n export port;"}, {"sha": "c7e70a8416f295d4d4efd89a812e3b0b7924ec21", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,11 +5,10 @@\n */\n \n use std;\n-import rand;\n-import std::map;\n-import managed::Managed;\n-import send_map::linear::*;\n-import io::WriterUtil;\n+use std::map;\n+use managed::Managed;\n+use send_map::linear::*;\n+use io::WriterUtil;\n \n struct Results {\n     sequential_ints: float;"}, {"sha": "c153df497c63f6eadb823f718dac288fa33cd80c", "filename": "src/test/bench/core-std.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-std.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,11 +2,11 @@\n \n use std;\n \n-import std::time::precise_time_s;\n-import std::map;\n-import std::map::{map, hashmap};\n+use std::time::precise_time_s;\n+use std::map;\n+use std::map::{map, hashmap};\n \n-import io::{Reader, ReaderUtil};\n+use io::{Reader, ReaderUtil};\n \n fn main(argv: ~[~str]) {\n     #macro["}, {"sha": "8d6fc709d0917b83afa0cd0c94ba1741f9f8faf8", "filename": "src/test/bench/core-vec-append.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-vec-append.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,8 @@\n // A raw test of vector appending performance.\n \n use std;\n-import dvec::DVec;\n-import io::WriterUtil;\n+use dvec::DVec;\n+use io::WriterUtil;\n \n fn collect_raw(num: uint) -> ~[uint] {\n     let mut result = ~[];"}, {"sha": "1dd116b2b41176f6262588cdd8cf5c856cb4a413", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,17 +5,17 @@ An implementation of the Graph500 Breadth First Search problem in Rust.\n */\n \n use std;\n-import std::arc;\n-import std::time;\n-import std::map;\n-import std::map::map;\n-import std::map::hashmap;\n-import std::deque;\n-import std::deque::Deque;\n-import std::par;\n-import io::WriterUtil;\n-import comm::*;\n-import int::abs;\n+use std::arc;\n+use std::time;\n+use std::map;\n+use std::map::map;\n+use std::map::hashmap;\n+use std::deque;\n+use std::deque::Deque;\n+use std::par;\n+use io::WriterUtil;\n+use comm::*;\n+use int::abs;\n \n type node_id = i64;\n type graph = ~[~[node_id]];"}, {"sha": "428394e0f3d1e71334b8ecedf359772b61e87d91", "filename": "src/test/bench/msgsend-pipes-shared.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -11,10 +11,10 @@\n // xfail-pretty\n \n use std;\n-import io::Writer;\n-import io::WriterUtil;\n+use io::Writer;\n+use io::WriterUtil;\n \n-import pipes::{Port, Chan, SharedChan};\n+use pipes::{Port, Chan, SharedChan};\n \n macro_rules! move_out (\n     { $x:expr } => { unsafe { let y <- *ptr::addr_of($x); y } }"}, {"sha": "8753e9aa4e64b9f7430b85c5b36e6beeb2ed24fa", "filename": "src/test/bench/msgsend-pipes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -7,10 +7,10 @@\n // xfail-pretty\n \n use std;\n-import io::Writer;\n-import io::WriterUtil;\n+use io::Writer;\n+use io::WriterUtil;\n \n-import pipes::{Port, PortSet, Chan};\n+use pipes::{Port, PortSet, Chan};\n \n macro_rules! move_out (\n     { $x:expr } => { unsafe { let y <- *ptr::addr_of($x); y } }"}, {"sha": "81babc00f09547ccae4a5ffa0b00eae8d551c4dd", "filename": "src/test/bench/msgsend-ring-mutex-arcs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -7,11 +7,11 @@\n \n // xfail-pretty\n \n-import future::future;\n+use future::future;\n \n use std;\n-import std::time;\n-import std::arc;\n+use std::time;\n+use std::arc;\n \n // A poor man's pipe.\n type pipe = arc::MutexARC<~[uint]>;"}, {"sha": "63ac80536afc267b87f8f7d399805ff16d3011c3", "filename": "src/test/bench/msgsend-ring-pipes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -8,12 +8,12 @@\n \n // xfail-pretty\n \n-import future::future;\n+use future::future;\n \n use std;\n-import std::time;\n+use std::time;\n \n-import pipes::recv;\n+use pipes::recv;\n \n proto! ring (\n     num:send {"}, {"sha": "745e1e4e758eb6f135119133d74ebee4745f4848", "filename": "src/test/bench/msgsend-ring-rw-arcs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -7,11 +7,11 @@\n \n // xfail-pretty\n \n-import future::future;\n+use future::future;\n \n use std;\n-import std::time;\n-import std::arc;\n+use std::time;\n+use std::arc;\n \n // A poor man's pipe.\n type pipe = arc::RWARC<~[uint]>;"}, {"sha": "d972dde4c4aefcea6155e76cbd575bc73ba69922", "filename": "src/test/bench/msgsend-ring.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,11 +4,11 @@\n // that things will look really good once we get that lock out of the\n // message path.\n \n-import comm::*;\n-import future::future;\n+use comm::*;\n+use future::future;\n \n use std;\n-import std::time;\n+use std::time;\n \n fn thread_ring(i: uint,\n                count: uint,"}, {"sha": "7db202e30b136a9ca599d47404fb684fac7a43f0", "filename": "src/test/bench/msgsend.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fmsgsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,8 +5,8 @@\n // I *think* it's the same, more or less.\n \n use std;\n-import io::Writer;\n-import io::WriterUtil;\n+use io::Writer;\n+use io::WriterUtil;\n \n enum request {\n     get_count,"}, {"sha": "53132293de98a61e86ef872ff228291272182834", "filename": "src/test/bench/pingpong.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fpingpong.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fpingpong.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fpingpong.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,8 +4,8 @@\n \n use std;\n \n-import pipes::{spawn_service, recv};\n-import std::time::precise_time_s;\n+use pipes::{spawn_service, recv};\n+use std::time::precise_time_s;\n \n proto! pingpong (\n     ping: send {"}, {"sha": "f365c900522f6b99bec95dcace15fff548f76056", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import std::arena;\n-import methods = std::arena::Arena;\n+use std::arena;\n+use methods = std::arena::Arena;\n \n enum tree/& { nil, node(&tree, &tree, int), }\n "}, {"sha": "91f77a77ffb2e61f3f4b028fcb5d126a34efe58d", "filename": "src/test/bench/shootout-chameneos-redux.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,9 @@\n // chameneos\n \n use std;\n-import std::map;\n-import std::map::hashmap;\n-import std::sort;\n+use std::map;\n+use std::map::hashmap;\n+use std::sort;\n \n fn print_complements() {\n     let all = ~[Blue, Red, Yellow];"}, {"sha": "8534e7ed668d0365b74204254e55e137a8db8e22", "filename": "src/test/bench/shootout-fannkuchredux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,5 @@\n // Based on Isaac Gouy's fannkuchredux.csharp\n use std;\n-import int;\n-import vec;\n \n fn fannkuch(n: int) -> int {\n     fn perm1init(i: uint) -> int { return i as int; }"}, {"sha": "2587920143b62c946d55d26c2564f4b620e4bf7a", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,11 +6,7 @@\n  * http://shootout.alioth.debian.org/\n  */\n use std;\n-import vec;\n-import uint;\n-import int;\n-import str;\n-import io::WriterUtil;\n+use io::WriterUtil;\n \n fn LINE_LENGTH() -> uint { return 60u; }\n "}, {"sha": "ac70bf3aa9d4298f9aa3383aea859e0c910a40a9", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,11 +3,11 @@\n // multi tasking k-nucleotide\n \n use std;\n-import std::map;\n-import std::map::hashmap;\n-import std::sort;\n-import io::ReaderUtil;\n-import pipes::{stream, Port, Chan};\n+use std::map;\n+use std::map::hashmap;\n+use std::sort;\n+use io::ReaderUtil;\n+use pipes::{stream, Port, Chan};\n \n // given a map, print a sorted version of it\n fn sort_and_fmt(mm: hashmap<~[u8], uint>, total: uint) -> ~str { "}, {"sha": "4322c19e3dcdb1d9efcb974a87f33f6d0e30eead", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,10 +3,10 @@\n // multi tasking k-nucleotide\n \n use std;\n-import std::map;\n-import std::map::hashmap;\n-import std::sort;\n-import io::ReaderUtil;\n+use std::map;\n+use std::map::hashmap;\n+use std::sort;\n+use io::ReaderUtil;\n \n // given a map, print a sorted version of it\n fn sort_and_fmt(mm: hashmap<~[u8], uint>, total: uint) -> ~str { "}, {"sha": "161c893fab760c4c115bfff938db046a3e88e76f", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -13,8 +13,8 @@\n //  writes pbm image to output path\n \n use std;\n-import io::WriterUtil;\n-import std::map::hashmap;\n+use io::WriterUtil;\n+use std::map::hashmap;\n \n struct cmplx {\n     re: f64;"}, {"sha": "5e7648b5f85c8f85bcb3b9fa2139dc8d2f29cf06", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -12,16 +12,16 @@\n \n use std;\n \n-import std::{time, getopts};\n-import io::WriterUtil;\n-import int::range;\n-import pipes::Port;\n-import pipes::Chan;\n-import pipes::send;\n-import pipes::recv;\n-\n-import core::result;\n-import result::{Ok, Err};\n+use std::{time, getopts};\n+use io::WriterUtil;\n+use int::range;\n+use pipes::Port;\n+use pipes::Chan;\n+use pipes::send;\n+use pipes::recv;\n+\n+use core::result;\n+use result::{Ok, Err};\n \n fn fib(n: int) -> int {\n     fn pfib(c: Chan<int>, n: int) {"}, {"sha": "7ee43f31f82501d1d9dae93f74fc649547fe1318", "filename": "src/test/bench/std-smallintmap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fstd-smallintmap.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,9 @@\n // Microbenchmark for the smallintmap library\n \n use std;\n-import std::smallintmap;\n-import std::smallintmap::SmallIntMap;\n-import io::WriterUtil;\n+use std::smallintmap;\n+use std::smallintmap::SmallIntMap;\n+use io::WriterUtil;\n \n fn append_sequential(min: uint, max: uint, map: SmallIntMap<uint>) {\n     for uint::range(min, max) |i| {"}, {"sha": "eac8279270fe0c8f679f517bd9cf03d4b0b702bf", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n \n-import std::bitv;\n-import io::{ReaderUtil, WriterUtil};\n+use std::bitv;\n+use io::{ReaderUtil, WriterUtil};\n \n // Computes a single solution to a given 9x9 sudoku\n //"}, {"sha": "51267986e6cf7dc8cf702530812317753597b37f", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,8 +2,8 @@\n \n use std;\n \n-import std::list::{List, Cons, Nil};\n-import std::time::precise_time_s;\n+use std::list::{List, Cons, Nil};\n+use std::time::precise_time_s;\n \n fn main() {\n     let (repeat, depth) = if os::getenv(~\"RUST_BENCH\").is_some() {"}, {"sha": "c414c85781d83d2fef7e745280616a506a0530cb", "filename": "src/test/bench/task-perf-word-count-generic.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -12,25 +12,19 @@\n \n use std;\n \n-import option = option;\n-import option::Some;\n-import option::None;\n-import str;\n-import std::map;\n-import std::map::hashmap;\n-import vec;\n-import io;\n-import io::WriterUtil;\n-\n-import std::time;\n-import u64;\n-\n-import task;\n-import comm;\n-import comm::Chan;\n-import comm::Port;\n-import comm::recv;\n-import comm::send;\n+use option = option;\n+use option::Some;\n+use option::None;\n+use std::map;\n+use std::map::hashmap;\n+use io::WriterUtil;\n+\n+use std::time;\n+\n+use comm::Chan;\n+use comm::Port;\n+use comm::recv;\n+use comm::send;\n \n macro_rules! move_out (\n     { $x:expr } => { unsafe { let y <- *ptr::addr_of($x); y } }"}, {"sha": "d53c924bdce44305bbe2c9839e9646394a902150", "filename": "src/test/compile-fail/ambig_impl_2_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast aux-build\n // aux-build:ambig_impl_2_lib.rs\n use ambig_impl_2_lib;\n-import ambig_impl_2_lib::me;\n+use ambig_impl_2_lib::me;\n trait me {\n     fn me() -> uint;\n }"}, {"sha": "028f5ed626c0d47b014fc305b531fb708f83b431", "filename": "src/test/compile-fail/arc-cant-nest-rw-arc-3177.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // error-pattern: instantiating a type parameter with an incompatible type\n use std;\n-import std::arc::rw_arc;\n+use std::arc::rw_arc;\n \n fn main() {\n     let arc1  = ~rw_arc(true);"}, {"sha": "371523bc0288088b73f540cfb23f69306e318285", "filename": "src/test/compile-fail/arc-rw-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::arc;\n+use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);\n     let mut y = None;"}, {"sha": "781060d0bb768e216b917bc0ce0888bdf80207a8", "filename": "src/test/compile-fail/arc-rw-read-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import std::arc;\n+use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);\n     let mut y = None;"}, {"sha": "622e01c2586e7d8781f0d4750f44b5de41485818", "filename": "src/test/compile-fail/arc-rw-state-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::arc;\n+use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);\n     let mut y = None;"}, {"sha": "2bb5f7d59d9cbf1c6a6f266a86b04efad549ce09", "filename": "src/test/compile-fail/arc-rw-write-mode-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::arc;\n+use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);\n     let mut y = None;"}, {"sha": "fe270ea437e55b899e8749a80de11eadab3c1946", "filename": "src/test/compile-fail/arc-rw-write-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::arc;\n+use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);\n     let mut y = None;"}, {"sha": "79f12293616484f74338e7431daef738c9d29aa4", "filename": "src/test/compile-fail/bad-module.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fbad-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fbad-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-module.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,3 @@\n // error-pattern: unresolved import\n-import thing;\n \n fn main() { let foo = thing::len(~[]); }"}, {"sha": "785929fe002bd7601177395bc47db1a33c4fefec", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n //buggy.rs\n use std;\n-import std::map::hashmap;\n-import std::map;\n+use std::map::hashmap;\n+use std::map;\n \n fn main() {\n     let buggy_map :hashmap<uint, &uint> ="}, {"sha": "6c9f8d15698d76f169199fe5421b3e912e4f0530", "filename": "src/test/compile-fail/export-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fexport-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fexport-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexport-import.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: import\n \n-import m::unexported;\n+use m::unexported;\n \n mod m {\n     export exported;"}, {"sha": "e14e1fdc7ef9c502a59520ee9ad125a9a2ea45b5", "filename": "src/test/compile-fail/for-loop-decl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // error-pattern: mismatched types\n use std;\n-import std::map::hashmap;\n-import std::bitv;\n+use std::map::hashmap;\n+use std::bitv;\n \n type fn_info = {vars: hashmap<uint, var_info>};\n type var_info = {a: uint, b: uint};"}, {"sha": "891be7cfbfc52e505aa9a2855a11fbfd821c8829", "filename": "src/test/compile-fail/fully-qualified-type-name4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // Test that we use fully-qualified type names in error messages.\n \n-import core::task::Task;\n+use core::task::Task;\n \n fn bar(x: uint) -> Task {\n     return x;"}, {"sha": "bd3a35ad2807de65ff2e9170dbbbf75b677cf9f7", "filename": "src/test/compile-fail/import-from-missing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:unresolved\n // xfail-test\n-import spam::{ham, eggs};\n+use spam::{ham, eggs};\n \n mod spam {\n     fn ham() { }"}, {"sha": "690bedeaac15ffe1226c5ca660e20957268566d8", "filename": "src/test/compile-fail/import-from-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-from-path.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,2 +1,2 @@\n // error-pattern:expected\n-import foo::{bar}::baz\n\\ No newline at end of file\n+use foo::{bar}::baz\n\\ No newline at end of file"}, {"sha": "c72d9fda4e51a2f334516ab88f6cc9c4ee473f3a", "filename": "src/test/compile-fail/import-from-rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-from-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-from-rename.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:expected\n \n-import baz = foo::{bar};\n+use baz = foo::{bar};\n \n mod foo {\n     fn bar() {}"}, {"sha": "e9b485e4c6ca4def91e9721f3b4bf43ee4a897e9", "filename": "src/test/compile-fail/import-glob-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: unresolved name\n \n-import module_of_many_things::*;\n+use module_of_many_things::*;\n \n mod module_of_many_things {\n     export f1;"}, {"sha": "067caab354279f7d78a9c3ac69e151da4ae5575c", "filename": "src/test/compile-fail/import-glob-export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n \n // error-pattern:unresolved name\n \n-import m1::*;\n+use m1::*;\n \n mod m1 {\n     export f1;"}, {"sha": "9072fe0a6598541755cdc390e075d6509d0b2fd0", "filename": "src/test/compile-fail/import-glob-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-path.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,2 +1,2 @@\n // error-pattern:expected\n-import foo::*::bar\n\\ No newline at end of file\n+use foo::*::bar\n\\ No newline at end of file"}, {"sha": "3fd927d7e64b2c23cf7a62344dab2d21193450c0", "filename": "src/test/compile-fail/import-glob-rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-glob-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-rename.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:expected\n \n-import baz = foo::*;\n+use baz = foo::*;\n \n mod foo {\n     fn bar() {}"}, {"sha": "0b263f230870fab46499e69f2ac4a6df7043fa96", "filename": "src/test/compile-fail/import-loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:import\n \n-import y::x;\n+use y::x;\n \n mod y {\n     import x;"}, {"sha": "14f23dec5f30a153344df317b5c54cc7c7dc3db3", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // error-pattern: unresolved\n-import zed::bar;\n-import zed::baz;\n+use zed::bar;\n+use zed::baz;\n mod zed {\n     fn bar() { debug!(\"bar\"); }\n }"}, {"sha": "ab9ea6b26df1120ed230ddc3259ae00f037f9f1c", "filename": "src/test/compile-fail/import2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: unresolved\n-import baz::zed::bar;\n+use baz::zed::bar;\n mod baz { }\n mod zed {\n     fn bar() { debug!(\"bar3\"); }"}, {"sha": "ad31d356665d8b4f47713f6a89bc85d3f1a7d4cd", "filename": "src/test/compile-fail/import3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n // error-pattern: unresolved\n-import main::bar;\n+use main::bar;\n \n fn main(args: ~[str]) { debug!(\"foo\"); }"}, {"sha": "0f228519a38d99fbb6350461657c51c00ba513ef", "filename": "src/test/compile-fail/issue-1697.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // Testing that we don't fail abnormally after hitting the errors\n \n-import unresolved::*; //~ ERROR unresolved modulename\n+use unresolved::*; //~ ERROR unresolved modulename\n //~^ ERROR unresolved does not name a module\n \n fn main() {"}, {"sha": "843fd2b14eb3ee6526f6c4ff489325e5129185f4", "filename": "src/test/compile-fail/issue-2123.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n // error-pattern:unresolved import: m::f\n-import x = m::f;\n+use x = m::f;\n \n mod m {\n }"}, {"sha": "635fa059999280bd926167307049231512bde847", "filename": "src/test/compile-fail/issue-2590.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import dvec::DVec;\n+use dvec::DVec;\n \n type parser = {\n     tokens: DVec<int>,"}, {"sha": "c923d1d2dbe01eaffb718d198e097cdfe2d77c8f", "filename": "src/test/compile-fail/issue-2937.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:failed to resolve imports\n-import x = m::f;\n+use x = m::f;\n \n mod m {\n }"}, {"sha": "b6dc425cf40364a86b14148175f1d389644f7e4c", "filename": "src/test/compile-fail/issue-511.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fissue-511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-511.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n use std;\n-import option;\n-import cmp::Eq;\n+use cmp::Eq;\n \n fn f<T:Eq>(&o: Option<T>) {\n     assert o == option::None;"}, {"sha": "0a714b12847f9a27099b40394717686d8bedd715", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n-import std::map;\n-import std::map::hashmap;\n-import std::map::map;\n+use std::map;\n+use std::map::hashmap;\n+use std::map::map;\n \n // Test that trait types printed in error msgs include the type arguments.\n "}, {"sha": "8a437246f105fde1dd905be149a1eff7a7a971ae", "filename": "src/test/compile-fail/name-clash-nullary.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:declaration of `None` shadows\n-import option::*;\n+use option::*;\n \n fn main() {\n   let None: int = 42;"}, {"sha": "cc8340cd2c37b6e521fecf4b648bc3436fa380dd", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,8 @@\n // error-pattern: copying a noncopyable value\n \n use std;\n-import std::arc;\n-import comm::*;\n+use std::arc;\n+use comm::*;\n \n fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"}, {"sha": "688bb65c5cf044b2d38e87d1bbd75ebabfd0c4c5", "filename": "src/test/compile-fail/no-reuse-move-arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import std::arc;\n-import comm::*;\n+use std::arc;\n+use comm::*;\n \n fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"}, {"sha": "9de827c76874e5703e1742dda023f82db8d7d376", "filename": "src/test/compile-fail/pattern-tyvar-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,7 @@\n // -*- rust -*-\n \n use std;\n-import option;\n-import option::Some;\n+use option::Some;\n \n // error-pattern: mismatched types\n "}, {"sha": "709ed70e11cde45edb9761af1ca6db1fd532a355", "filename": "src/test/compile-fail/pattern-tyvar.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // -*- rust -*-\n use std;\n-import option;\n-import option::Some;\n+use option::Some;\n \n // error-pattern: mismatched types\n "}, {"sha": "3cf5e5da75af231a13dc23a289efa4533f320756", "filename": "src/test/compile-fail/private-method-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // xfail-fast\n // aux-build:cci_class_5.rs\n use cci_class_5;\n-import cci_class_5::kitties::*;\n+use cci_class_5::kitties::*;\n \n fn main() {\n   let nyan : cat = cat(52u, 99);"}, {"sha": "077043462b1f6eab7085da443680108049357dcf", "filename": "src/test/compile-fail/private-struct-field-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class.rs\n use cci_class;\n-import cci_class::kitties::*;\n+use cci_class::kitties::*;\n \n fn main() {\n   let nyan : cat = cat(52u, 99);"}, {"sha": "8f2fc3cf7b13d6eb1b8e18f2606c5423ab1a768b", "filename": "src/test/compile-fail/qquote-1.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,13 +3,13 @@\n use std;\n use syntax;\n \n-import io::*;\n+use io::*;\n \n-import syntax::diagnostic;\n-import syntax::ast;\n-import syntax::codemap;\n-import syntax::parse;\n-import syntax::print::*;\n+use syntax::diagnostic;\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::parse;\n+use syntax::print::*;\n \n fn new_parse_sess() -> parse::parse_sess {\n   fail;"}, {"sha": "8a12b86045c26f78d3e3cf8716da0ae5428c4be6", "filename": "src/test/compile-fail/qquote-2.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,13 +3,13 @@\n use std;\n use syntax;\n \n-import std::io::*;\n+use std::io::*;\n \n-import syntax::diagnostic;\n-import syntax::ast;\n-import syntax::codemap;\n-import syntax::parse::parser;\n-import syntax::print::*;\n+use syntax::diagnostic;\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::parse::parser;\n+use syntax::print::*;\n \n fn new_parse_sess() -> parser::parse_sess {\n   fail;"}, {"sha": "0784c5d7f6ea963c469906fd2fc581fc96cf5bb6", "filename": "src/test/compile-fail/spawn-non-nil-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n // error-pattern: mismatched types\n \n use std;\n-import task;\n \n fn main() { task::spawn(fn~() -> int { 10 }); }"}, {"sha": "7c916000e78d9ec62fd3b7df21af4c096ec8d77e", "filename": "src/test/compile-fail/sync-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::sync;\n+use std::sync;\n \n fn main() {\n     let m = ~sync::Mutex();"}, {"sha": "2bebf03bf2ef493e8953be874817012a2808b59f", "filename": "src/test/compile-fail/sync-rwlock-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::sync;\n+use std::sync;\n fn main() {\n     let x = ~sync::RWlock();\n     let mut y = None;"}, {"sha": "3729ab291947e729110075e9818410f73c66dde8", "filename": "src/test/compile-fail/sync-rwlock-read-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: cannot infer an appropriate lifetime\n use std;\n-import std::sync;\n+use std::sync;\n fn main() {\n     let x = ~sync::RWlock();\n     let mut y = None;"}, {"sha": "7adf9862bc231abe58476529d38c0e19b688c44b", "filename": "src/test/compile-fail/sync-rwlock-write-mode-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::sync;\n+use std::sync;\n fn main() {\n     let x = ~sync::RWlock();\n     let mut y = None;"}, {"sha": "7e218e58c5a87de20a3c519b202ad67391f208b8", "filename": "src/test/compile-fail/sync-rwlock-write-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: reference is not valid outside of its lifetime\n use std;\n-import std::sync;\n+use std::sync;\n fn main() {\n     let x = ~sync::RWlock();\n     let mut y = None;"}, {"sha": "6130bf38d7c15a9df3cf1b6ba07b49c4ea4e9a02", "filename": "src/test/compile-fail/unused-imports-warn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Funused-imports-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Funused-imports-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funused-imports-warn.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:unused import\n // compile-flags:-W unused-imports\n-import cal = bar::c::cc;\n+use cal = bar::c::cc;\n \n mod foo {\n     type point = {x: int, y: int};"}, {"sha": "2baa3c2e21062dab137352012f4c11c7f7daf70a", "filename": "src/test/compile-fail/view-items-at-top.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,7 +5,7 @@ use std;\n fn f() {\n }\n \n-import std::net;    //~ ERROR view items must be declared at the top\n+use std::net;    //~ ERROR view items must be declared at the top\n \n fn main() {\n }"}, {"sha": "d7d9f1284a55d26b0bfc9f09bd7311a2429807ef", "filename": "src/test/run-fail/fail-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ffail-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ffail-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-main.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,3 @@\n // error-pattern:moop\n use std;\n-import uint;\n fn main() { fail ~\"moop\"; }"}, {"sha": "72d7dbc6b3c81317886aad1194c894d2c41d997d", "filename": "src/test/run-fail/for-each-loop-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,3 @@\n // error-pattern:moop\n use std;\n-import uint;\n fn main() { for uint::range(0u, 10u) |_i| { fail ~\"moop\"; } }"}, {"sha": "b363d3a41b9dac7b366b24a76a282383901e66cd", "filename": "src/test/run-fail/issue-2156.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2156.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:explicit failure\n // Don't double free the string\n use std;\n-import io::Reader;\n+use io::Reader;\n \n fn main() {\n     do io::with_str_reader(~\"\") |rdr| {"}, {"sha": "ed8bd9173b53a7c9660520c4c9b497abca577997", "filename": "src/test/run-fail/issue-2444.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2444.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:explicit failure\n \n use std;\n-import std::arc;\n+use std::arc;\n \n enum e<T: const send> { e(arc::ARC<T>) }\n "}, {"sha": "48870ef69313175cf1b89a1691908aff20124482", "filename": "src/test/run-fail/linked-failure.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,9 +2,8 @@\n \n // error-pattern:1 == 2\n use std;\n-import task;\n-import comm::Port;\n-import comm::recv;\n+use comm::Port;\n+use comm::recv;\n \n fn child() { assert (1 == 2); }\n "}, {"sha": "d3ba7dbacc0e49701e2aec077f627b2a1f1aa2ae", "filename": "src/test/run-fail/linked-failure2.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,10 +2,9 @@\n \n // error-pattern:fail\n use std;\n-import task;\n-import comm::Chan;\n-import comm::Port;\n-import comm::recv;\n+use comm::Chan;\n+use comm::Port;\n+use comm::recv;\n \n fn child() { fail; }\n "}, {"sha": "626b9857c902fef35d40f45b3a6883db95dba5d5", "filename": "src/test/run-fail/linked-failure3.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,9 +2,8 @@\n \n // error-pattern:fail\n use std;\n-import task;\n-import comm::Port;\n-import comm::recv;\n+use comm::Port;\n+use comm::recv;\n \n fn grandchild() { fail ~\"grandchild dies\"; }\n "}, {"sha": "5366975adc8f60c89050abf4ade4825c0a8498b7", "filename": "src/test/run-fail/linked-failure4.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Flinked-failure4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,10 +1,9 @@\n // -*- rust -*-\n // error-pattern:1 == 2\n use std;\n-import task;\n-import comm::Chan;\n-import comm::Port;\n-import comm::recv;\n+use comm::Chan;\n+use comm::Port;\n+use comm::recv;\n \n fn child() { assert (1 == 2); }\n "}, {"sha": "40d3067d4df7907098d4242142703307ef8141fa", "filename": "src/test/run-fail/port-type.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fport-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fport-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fport-type.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,9 @@\n // error-pattern:meep\n use std;\n-import comm::Chan;\n-import comm::Port;\n-import comm::send;\n-import comm::recv;\n+use comm::Chan;\n+use comm::Port;\n+use comm::send;\n+use comm::recv;\n \n fn echo<T: send>(c: Chan<T>, oc: Chan<Chan<T>>) {\n     // Tests that the type argument in port gets"}, {"sha": "4d35e44f3266d3d60fce7f7f8bfff02ace90b8c4", "filename": "src/test/run-fail/spawnfail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fspawnfail.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // xfail-win32\n // error-pattern:explicit\n use std;\n-import task;\n \n // We don't want to see any invalid reads\n fn main() {"}, {"sha": "1d292b34ad062ec5598b61baddc8c0d1ae9f7be6", "filename": "src/test/run-fail/task-comm-recv-block.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,6 @@\n // error-pattern:goodfail\n \n use std;\n-import task;\n-import comm;\n \n fn goodfail() {\n     task::yield();"}, {"sha": "a29aad2b7b0a39a45d8cf794fd632d193f3ca943", "filename": "src/test/run-fail/unwind-misc-1.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,8 @@\n // error-pattern:fail\n \n use std;\n-import std::map;\n-import std::map::hashmap;\n-import uint;\n+use std::map;\n+use std::map::hashmap;\n \n fn main() {\n     let count = @mut 0u;"}, {"sha": "1e03ea4ab2c4c970c13c95cf9df9d3e094524f4e", "filename": "src/test/run-fail/zip-different-lengths.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,9 +2,7 @@\n // the assert should fail at runtime\n // error-pattern:Assertion same_length(chars, ints) failed\n use std;\n-import uint;\n-import u8;\n-import vec::{same_length, zip};\n+use vec::{same_length, zip};\n \n fn enum_chars(start: u8, end: u8) -> ~[char] {\n     assert start < end;"}, {"sha": "f2945a52a5377550be46aef863d49028c2e1d2c1", "filename": "src/test/run-pass-fulldeps/issue-1926.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass-fulldeps%2Fissue-1926.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass-fulldeps%2Fissue-1926.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-1926.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,12 +1,11 @@\n // xfail-test\n // fails pretty printing for some reason\n use syntax;\n-import syntax::diagnostic;\n-import syntax;\n-import syntax::ast;\n-import syntax::codemap;\n-import syntax::print::pprust;\n-import syntax::parse::parser;\n+use syntax::diagnostic;\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::print::pprust;\n+use syntax::parse::parser;\n \n fn new_parse_sess() -> parser::parse_sess {\n     let cm = codemap::new_codemap();"}, {"sha": "e51dfe706a3daa7966da275d376bad817be378fb", "filename": "src/test/run-pass-fulldeps/qquote.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,13 +3,13 @@\n use std;\n use syntax;\n \n-import io::*;\n+use io::*;\n \n-import syntax::diagnostic;\n-import syntax::ast;\n-import syntax::codemap;\n-import syntax::parse;\n-import syntax::print::*;\n+use syntax::diagnostic;\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::parse;\n+use syntax::print::*;\n \n trait fake_ext_ctxt {\n     fn cfg() -> ast::crate_cfg;"}, {"sha": "ebeab59098bd93994bcf85af1a0f19ade4c693c0", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,8 +2,6 @@\n // -*- rust -*-\n \n use std;\n-import comm;\n-import task;\n \n fn f(c: comm::_chan<int>) {\n     type t = {_0: int, _1: int, _2: int};"}, {"sha": "b68789f76baf3572c36cf24411ca4d082edcf346", "filename": "src/test/run-pass/alias-uninit-value.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,8 +2,7 @@\n \n // Regression test for issue #374\n use std;\n-import option;\n-import option::None;\n+use option::None;\n \n enum sty { ty_nil, }\n "}, {"sha": "8185c1f80d140a56941de172de590ec7d5f42f73", "filename": "src/test/run-pass/alt-join.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falt-join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falt-join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-join.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n \n use std;\n-import option;\n \n fn foo<T>(y: Option<T>) {\n     let mut x: int;"}, {"sha": "1f9532a713774584dbf0451d162796558b4f06ea", "filename": "src/test/run-pass/alt-pattern-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n \n \n // -*- rust -*-\n-import core::sys;\n+use core::sys;\n \n enum t { make_t(@int), clam, }\n "}, {"sha": "3df0f117b17e1d7b0203bdeb96682c8008802efd", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:anon-extern-mod-cross-crate-1.rs\n use anonexternmod;\n \n-import anonexternmod::*;\n+use anonexternmod::*;\n \n fn main() {\n   last_os_error();"}, {"sha": "112579b808f4ee4fd8bfc7b96c4145d466540355", "filename": "src/test/run-pass/auto_serialize.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fauto_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fauto_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto_serialize.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,10 +3,10 @@ use std;\n // These tests used to be separate files, but I wanted to refactor all\n // the common code.\n \n-import cmp::Eq;\n-import std::ebml;\n-import io::Writer;\n-import std::serialization::{serialize_uint, deserialize_uint};\n+use cmp::Eq;\n+use std::ebml;\n+use io::Writer;\n+use std::serialization::{serialize_uint, deserialize_uint};\n \n fn test_ser_and_deser<A:Eq>(a1: A,\n                             expected: ~str,"}, {"sha": "0a9c786634e8415fa405b18bed9935c060cb929b", "filename": "src/test/run-pass/basic-1.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,10 @@\n // -*- rust -*-\n \n use std;\n-import comm::Chan;\n-import comm::Port;\n-import comm::send;\n-import comm::recv;\n-import task;\n+use comm::Chan;\n+use comm::Port;\n+use comm::send;\n+use comm::recv;\n \n fn a(c: Chan<int>) { send(c, 10); }\n "}, {"sha": "6d8d542a74771ba8e3f5adf160536c61daa64c27", "filename": "src/test/run-pass/basic-2.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,12 +1,10 @@\n // -*- rust -*-\n \n use std;\n-import comm;\n-import comm::Port;\n-import comm::send;\n-import comm::Chan;\n-import comm::recv;\n-import task;\n+use comm::Port;\n+use comm::send;\n+use comm::Chan;\n+use comm::recv;\n \n fn a(c: Chan<int>) { debug!(\"task a0\"); debug!(\"task a1\"); send(c, 10); }\n "}, {"sha": "f593e23c7069d3e299cb32a28abcee9c9e9da8a8", "filename": "src/test/run-pass/basic.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,9 @@\n // -*- rust -*-\n \n use std;\n-import comm;\n-import comm::send;\n-import comm::Chan;\n-import comm::recv;\n-import task;\n+use comm::send;\n+use comm::Chan;\n+use comm::recv;\n \n fn a(c: Chan<int>) {\n     if true {"}, {"sha": "f946539bad558990a7d3eb346b2c244a2d11d886", "filename": "src/test/run-pass/bind-by-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-by-move.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n use std;\n-import std::arc;\n+use std::arc;\n fn dispose(+_x: arc::ARC<bool>) unsafe { }\n \n fn main() {"}, {"sha": "3d647175ef623e34a1f867ef074c322669b4c88d", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,7 @@\n // Binop corner cases\n \n use std;\n-import unsafe::reinterpret_cast;\n-import task;\n-import comm;\n+use unsafe::reinterpret_cast;\n \n fn test_nil() {\n     assert (() == ());"}, {"sha": "6dc4cdf5d7a71b87149504a08e1a67d87e79457e", "filename": "src/test/run-pass/bitv-perf-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import std::bitv::*;\n+use std::bitv::*;\n \n fn bitv_test() -> bool {\n     let v1 = ~Bitv(31, false);"}, {"sha": "2cfaca91731d88fcef861a3b503256ecb013df3e", "filename": "src/test/run-pass/block-vec-map2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import vec;\n \n fn main() {\n     let v ="}, {"sha": "ec31225f46bffe18b3903fcfea762624e0ed2161", "filename": "src/test/run-pass/borrowck-borrow-from-expr-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import ptr::to_uint;\n+use ptr::to_uint;\n \n fn borrow(x: &int, f: fn(x: &int)) {\n     f(x)"}, {"sha": "559ab78ace932df20e2c8b26c0a83cdca03e1501", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import str;\n \n #[abi = \"cdecl\"]\n #[nolink]"}, {"sha": "434ce13d5d442ad3d763d06fee43d63aade35b31", "filename": "src/test/run-pass/cci_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_borrow.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:cci_borrow_lib.rs\n \n use cci_borrow_lib;\n-import cci_borrow_lib::foo;\n+use cci_borrow_lib::foo;\n \n fn main() {\n     let p = @22u;"}, {"sha": "f9caca92abb96fca30843c91c0436b8e0596b980", "filename": "src/test/run-pass/cci_capture_clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,7 +6,7 @@\n \n use cci_capture_clause;\n \n-import comm::recv;\n+use comm::recv;\n \n fn main() {\n     cci_capture_clause::foo(()).recv()"}, {"sha": "aa2428d715f0da30c99e72bc67cb02fe023c438d", "filename": "src/test/run-pass/cci_impl_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:cci_impl_lib.rs\n \n use cci_impl_lib;\n-import cci_impl_lib::uint_helpers;\n+use cci_impl_lib::uint_helpers;\n \n fn main() {\n     //let bt0 = sys::frame_address();"}, {"sha": "4e0c7e047708d6493094bc357cb586d21793121e", "filename": "src/test/run-pass/cci_nested_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:cci_nested_lib.rs\n \n use cci_nested_lib;\n-import cci_nested_lib::*;\n+use cci_nested_lib::*;\n \n fn main() {\n     let lst = new_int_alist();"}, {"sha": "4edc89d1f6c936233f423b6ab91e56ad32f1b65e", "filename": "src/test/run-pass/cci_no_inline_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:cci_no_inline_lib.rs\n \n use cci_no_inline_lib;\n-import cci_no_inline_lib::iter;\n+use cci_no_inline_lib::iter;\n \n fn main() {\n     // Check that a cross-crate call function not marked as inline"}, {"sha": "e4ed8c93b93a371411c78daaba274a96354ca489", "filename": "src/test/run-pass/chan-leak.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchan-leak.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,12 +1,10 @@\n // Issue #763\n \n use std;\n-import task;\n-import comm::Chan;\n-import comm::send;\n-import comm;\n-import comm::Port;\n-import comm::recv;\n+use comm::Chan;\n+use comm::send;\n+use comm::Port;\n+use comm::recv;\n \n enum request { quit, close(Chan<bool>), }\n "}, {"sha": "d6c65f8338f1f59f84b7c44cecf2422ea95c406a", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // Reported as issue #126, child leaks the string.\n \n use std;\n-import task;\n \n fn child2(&&s: ~str) { }\n "}, {"sha": "cb15f859a0108b5f871110be0e634657dbe4901b", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,8 @@\n // xfail-fast\n // aux-build:cci_class_cast.rs\n use cci_class_cast;\n-import to_str::ToStr;\n-import cci_class_cast::kitty::*;\n+use to_str::ToStr;\n+use cci_class_cast::kitty::*;\n \n fn print_out<T: ToStr>(thing: T, expected: ~str) {\n   let actual = thing.to_str();"}, {"sha": "b7752bf4bfbce4f853a9b52d715d1368edcdecd1", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n \n-import to_str::*;\n-import to_str::to_str;\n+use to_str::*;\n+use to_str::to_str;\n \n class cat : to_str {\n   priv {"}, {"sha": "e5c5b4ecf2120fb1a1ed3e0bc3925a486f1e8ac1", "filename": "src/test/run-pass/class-exports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-exports.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n /* Test that exporting a class also exports its\n    public fields and methods */\n \n-import kitty::*;\n+use kitty::*;\n \n mod kitty {\n   export cat;"}, {"sha": "9540391ec6e6841acd4c1cef12725b3bc8415663", "filename": "src/test/run-pass/class-impl-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // xfail-fast\n \n use std;\n-import std::map::*;\n+use std::map::*;\n \n class cat : map<int, bool> {\n   priv {"}, {"sha": "9241f92250d2bce1921ee5dc94a6b7a5f87423fb", "filename": "src/test/run-pass/class-impl-very-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import std::map::*;\n+use std::map::*;\n \n enum cat_type { tuxedo, tabby, tortoiseshell }\n "}, {"sha": "1ba1646dcf090fe7b192ce3e1b7d82a4b91f31c1", "filename": "src/test/run-pass/class-implement-trait-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class_trait.rs\n use cci_class_trait;\n-import cci_class_trait::animals::*;\n+use cci_class_trait::animals::*;\n \n struct cat : noisy {\n   priv {"}, {"sha": "00209431bbfbaac7f1ebfec7a208d608000d6b26", "filename": "src/test/run-pass/class-implements-multiple-traits.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,9 @@\n // xfail-test\n \n use std;\n-import std::map::*;\n-import vec::*;\n-import dvec::{dvec, extensions};\n+use std::map::*;\n+use vec::*;\n+use dvec::{dvec, extensions};\n \n enum furniture { chair, couch, bed }\n enum body_part { finger, toe, nose, ear }"}, {"sha": "bd4ff6e1d1d1dbe88413128d21cf5c8dec1ca35f", "filename": "src/test/run-pass/class-method-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class_2.rs\n use cci_class_2;\n-import cci_class_2::kitties::*;\n+use cci_class_2::kitties::*;\n \n fn main() {\n   let nyan : cat = cat(52u, 99);"}, {"sha": "144d728713ae33a74dc0d9e455a8fc010693e041", "filename": "src/test/run-pass/class-methods-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class_3.rs\n use cci_class_3;\n-import cci_class_3::kitties::*;\n+use cci_class_3::kitties::*;\n \n fn main() {\n   let nyan : cat = cat(52u, 99);"}, {"sha": "ef128566c5e2391fc97a993fde3f2a527a06d287", "filename": "src/test/run-pass/class-poly-methods-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class_6.rs\n use cci_class_6;\n-import cci_class_6::kitties::*;\n+use cci_class_6::kitties::*;\n \n fn main() {\n   let nyan : cat<char> = cat::<char>(52u, 99, ~['p']);"}, {"sha": "957855736ead99e9103034ec7fe6d33ddd5396d1", "filename": "src/test/run-pass/class-separate-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n-import to_str::*;\n-import to_str::ToStr;\n+use to_str::*;\n+use to_str::ToStr;\n \n struct cat {\n   priv {"}, {"sha": "91b3f68d5b22ca82c5142eb5fa55774de06e5b3a", "filename": "src/test/run-pass/class-trait-bounded-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n \n use std;\n-import std::map::{map, hashmap, int_hash};\n+use std::map::{map, hashmap, int_hash};\n \n class keys<K: copy, V: copy, M: copy map<K,V>>\n     : iter::base_iter<K> {"}, {"sha": "1835eed3ef151e4b711038de962971c1975e351a", "filename": "src/test/run-pass/classes-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class_4.rs\n use cci_class_4;\n-import cci_class_4::kitties::*;\n+use cci_class_4::kitties::*;\n \n fn main() {\n   let nyan = cat(0u, 2, ~\"nyan\");"}, {"sha": "15b56c74bc7fb000a7fab01b6d2eee6ecd530f36", "filename": "src/test/run-pass/classes-simple-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:cci_class.rs\n use cci_class;\n-import cci_class::kitties::*;\n+use cci_class::kitties::*;\n \n fn main() {\n   let nyan : cat = cat(52u, 99);"}, {"sha": "3ca0b9cf6b86ef9996607b91ae9844df6d749027", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n //xfail-test\n \n use std;\n-import task;\n \n fn f(x : @{a:int, b:int}) {\n     assert (x.a == 10);"}, {"sha": "4c77973b556568c8d104cbec76923aa64c650584", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,9 @@\n // -*- rust -*-\n \n use std;\n-import comm;\n-import comm::Chan;\n-import comm::send;\n-import comm::recv;\n-import task;\n+use comm::Chan;\n+use comm::send;\n+use comm::recv;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "e4350ab4ee707da6765b9c3046c80827febeb4ed", "filename": "src/test/run-pass/companionmod-src/b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fb.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,2 +1,2 @@\n-import g = x::f;\n+use g = x::f;\n export g;\n\\ No newline at end of file"}, {"sha": "e4350ab4ee707da6765b9c3046c80827febeb4ed", "filename": "src/test/run-pass/companionmod-src/d.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcompanionmod-src%2Fd.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,2 +1,2 @@\n-import g = x::f;\n+use g = x::f;\n export g;\n\\ No newline at end of file"}, {"sha": "f1c506ad6b6740aa54a60718e2e193718a8775d5", "filename": "src/test/run-pass/core-export-f64-sqrt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcore-export-f64-sqrt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fcore-export-f64-sqrt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-export-f64-sqrt.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // Regression test that f64 exports things properly\n \n-import io::println;\n+use io::println;\n \n fn main() {\n "}, {"sha": "8835b770c22ecaf3be4dc56b8aaf654aa0ee0842", "filename": "src/test/run-pass/decl-with-recv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,10 +1,10 @@\n // -*- rust -*-\n \n use std;\n-import comm::Port;\n-import comm::Chan;\n-import comm::send;\n-import comm::recv;\n+use comm::Port;\n+use comm::Chan;\n+use comm::send;\n+use comm::recv;\n \n fn main() {\n     let po = Port();"}, {"sha": "2ab13607addd92c780741a31d3e2868433e72e61", "filename": "src/test/run-pass/dvec-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fdvec-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fdvec-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdvec-test.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import dvec::DVec;\n+use dvec::DVec;\n \n fn main() {\n     let d = DVec();"}, {"sha": "70af1a3bcaa2488c48b9aada97c91714ea05abdf", "filename": "src/test/run-pass/export-multi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-multi.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import m::f;\n-import m::g;\n+use m::f;\n+use m::g;\n \n mod m {\n     export f, g;"}, {"sha": "ae2b1f0ad4d3a679c9fe2c8bbdb54db37a64cfb2", "filename": "src/test/run-pass/float-nan.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-nan.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import float;\n \n fn main() {\n   let nan = float::NaN;"}, {"sha": "cb8d05ee828dd4b2300c9f117de31188bd14007f", "filename": "src/test/run-pass/foreign-fn-linkname.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,5 @@\n use std;\n \n-import vec;\n-import str;\n \n #[nolink]\n #[abi = \"cdecl\"]"}, {"sha": "6ae9cd430b4bec00a5596baa0eb21b15ffd3b836", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,19 +6,15 @@\n \n use std;\n \n-import option = option;\n-import option::Some;\n-import option::None;\n-import str;\n-import vec;\n-import std::map;\n-import std::map::hashmap;\n-import task;\n-import comm::Chan;\n-import comm::Port;\n-import comm::send;\n-import comm::recv;\n-import comm;\n+use option = option;\n+use option::Some;\n+use option::None;\n+use std::map;\n+use std::map::hashmap;\n+use comm::Chan;\n+use comm::Port;\n+use comm::send;\n+use comm::recv;\n \n fn map(filename: ~str, emit: map_reduce::putter) { emit(filename, ~\"1\"); }\n "}, {"sha": "5892a729c68c72cd17fc759d6372b7db4db2fdea", "filename": "src/test/run-pass/import-from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-from.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import spam::{ham, eggs};\n+use spam::{ham, eggs};\n \n mod spam {\n     fn ham() { }"}, {"sha": "d9f0cd4181c652141c6e2ed725ba32ab6023d431", "filename": "src/test/run-pass/import-glob-0.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import module_of_many_things::*;\n-import dug::too::greedily::and::too::deep::*;\n+use module_of_many_things::*;\n+use dug::too::greedily::and::too::deep::*;\n \n mod module_of_many_things {\n     export f1;"}, {"sha": "29435b88f4a18b7f5a8ec8e9ac93374e1cda4ec0", "filename": "src/test/run-pass/import-glob-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import a1::b1::word_traveler;\n+use a1::b1::word_traveler;\n \n mod a1 {\n     //"}, {"sha": "7c92c73819b5d98d663d7cdd669d72e103a71ee3", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n \n use std;\n-import vec::*;\n+use vec::*;\n \n fn main() {\n     let mut v = from_elem(0u, 0);"}, {"sha": "0a27ccc24a2145d606809ec2a776fd3e0ca1148c", "filename": "src/test/run-pass/import-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import foo::bar::{baz, quux,};\n+use foo::bar::{baz, quux,};\n \n mod foo {\n     mod bar {"}, {"sha": "ab9d52227340bb188628d4cb015a075557ed8ed0", "filename": "src/test/run-pass/import2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n \n-import zed::bar;\n+use zed::bar;\n \n mod zed {\n     fn bar() { debug!(\"bar\"); }"}, {"sha": "2c208593d1e9ea61dfe98052933506b8f20806f7", "filename": "src/test/run-pass/import3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n \n-import baz::zed;\n-import zed::bar;\n+use baz::zed;\n+use zed::bar;\n \n mod baz {\n     mod zed {"}, {"sha": "49ec8babe2460f441f3c9942fe6fb1c45b923d0a", "filename": "src/test/run-pass/import4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n \n-import zed::bar;\n+use zed::bar;\n \n mod zed {\n     fn bar() { debug!(\"bar\"); }"}, {"sha": "8f6f8cebe727696c9329dbf7b8b2d78b67f20be4", "filename": "src/test/run-pass/import5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport5.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import foo::bar;\n+use foo::bar;\n mod foo {\n     import zed::bar;\n     export bar;"}, {"sha": "4c5cfeb73671d5ca690682f2006db82c48b8b433", "filename": "src/test/run-pass/import6.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport6.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import foo::zed;\n-import bar::baz;\n+use foo::zed;\n+use bar::baz;\n mod foo {\n     mod zed {\n         fn baz() { debug!(\"baz\"); }"}, {"sha": "eb98f625fb1cfffc46745fd9ef099499dba01dfc", "filename": "src/test/run-pass/import7.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport7.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import foo::zed;\n-import bar::baz;\n+use foo::zed;\n+use bar::baz;\n mod foo {\n     mod zed {\n         fn baz() { debug!(\"baz\"); }"}, {"sha": "8e51fb8c1b122e8968b292cb3d2d6e7f0190de7c", "filename": "src/test/run-pass/import8.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fimport8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport8.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n \n-import foo::x;\n-import z = foo::x;\n+use foo::x;\n+use z = foo::x;\n \n mod foo {\n     fn x(y: int) { log(debug, y); }"}, {"sha": "0427905de3d29989158428a1b545f18f6056ef75", "filename": "src/test/run-pass/infinite-loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfinite-loops.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,7 +5,7 @@\n // xfail-test\n \n use std;\n-import task::join;\n+use task::join;\n \n fn loop(n: int) {\n     let t1: task;"}, {"sha": "cfddde6acb46ef0f2008ade555f5c482704b39f9", "filename": "src/test/run-pass/intrinsic-atomics-cc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:cci_intrinsic.rs\n \n use cci_intrinsic;\n-import cci_intrinsic::atomic_xchg;\n+use cci_intrinsic::atomic_xchg;\n \n fn main() {\n     let mut x = 1;"}, {"sha": "97e2ece9072ffa272062ea01728e7c99342216a9", "filename": "src/test/run-pass/issue-1112.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-1112.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-1112.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1112.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // Alignment of interior pointers to dynamic-size types\n \n use std;\n-import ptr::addr_of;\n+use ptr::addr_of;\n \n type x<T> = {\n     a: T,"}, {"sha": "de0a1f23b526ceeb71fcbbb42e5cc15deaa8b151", "filename": "src/test/run-pass/issue-1696.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1696.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import std::map;\n-import std::map::hashmap;\n+use std::map;\n+use std::map::hashmap;\n \n fn main() {\n     let m = map::bytes_hash();"}, {"sha": "ed3c0f38353613ebabe4722d193838664926c420", "filename": "src/test/run-pass/issue-2101.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2101.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2101.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2101.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n use std;\n-import std::arena;\n-import std::arena::Arena;\n+use std::arena;\n+use std::arena::Arena;\n \n enum hold { s(str) }\n "}, {"sha": "2165367304b4ed632908e6e542bf5656ef727c21", "filename": "src/test/run-pass/issue-2196.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2196.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2196.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2196.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,6 +4,6 @@\n // aux-build:issue-2196-c.rc\n \n use c(name = \"issue2196c\");\n-import c::t;\n+use c::t;\n \n fn main() { }"}, {"sha": "cb08e52e21e01369029585b65d908a2b0a58b7b2", "filename": "src/test/run-pass/issue-2214.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2214.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import libc::{c_double, c_int};\n-import f64::*;\n+use libc::{c_double, c_int};\n+use f64::*;\n \n fn to_c_int(v: &mut int) -> &mut c_int unsafe {\n     unsafe::reinterpret_cast(&v)"}, {"sha": "11b86e5e6dd5ba9d3de6ec8d8e45a3ed9c2f5b0e", "filename": "src/test/run-pass/issue-2242-d.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -7,7 +7,7 @@ use a;\n use b;\n use c;\n \n-import a::to_strz;\n+use a::to_strz;\n \n fn main() {\n     io::println((~\"foo\").to_strz());"}, {"sha": "113732cacbe3d6ea28611d2f7b7d26dc7fdf1139", "filename": "src/test/run-pass/issue-2316-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,7 +3,7 @@\n // aux-build:issue_2316_b.rs\n \n use issue_2316_b;\n-import issue_2316_b::cloth;\n+use issue_2316_b::cloth;\n \n fn main() {\n   let _c: cloth::fabric = cloth::calico;"}, {"sha": "5c991ebac4901cbd0d214a462fed59037a648970", "filename": "src/test/run-pass/issue-2383.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2383.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import std::deque;\n-import std::deque::Deque;\n+use std::deque;\n+use std::deque::Deque;\n \n fn main() {\n     let Q = deque::create();"}, {"sha": "d0da831093823d97d0b0bec00be56881d2c244b8", "filename": "src/test/run-pass/issue-2445.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2445.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import dvec::DVec;\n+use dvec::DVec;\n \n struct c1<T: copy> {\n   let x: T;"}, {"sha": "9a9246baa82025aa311f905f6ee2cb04045888ef", "filename": "src/test/run-pass/issue-2472.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2472.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,7 +3,7 @@\n \n use issue_2472_b;\n \n-import issue_2472_b::{S, T};\n+use issue_2472_b::{S, T};\n \n fn main() {\n     let s = S(());"}, {"sha": "a86808832b524713929df4d1a4f0762c88207ba3", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:issue-2526.rs\n \n use issue_2526;\n-import issue_2526::*;\n+use issue_2526::*;\n \n fn main() {}\n "}, {"sha": "9f1ef84983000db1e67c2349c11ba0ab275f6045", "filename": "src/test/run-pass/issue-2611.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2611.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n // xfail-test\n-import iter;\n-import iter::base_iter;\n+use iter::base_iter;\n \n impl Q<A> for base_iter<A> {\n    fn flat_map_to_vec<B:copy, IB:base_iter<B>>(op: fn(B) -> IB) -> ~[B] {"}, {"sha": "eb500e340d8b531b043c1eadd4b43c703aea2008", "filename": "src/test/run-pass/issue-2631-b.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,10 +4,9 @@\n use req;\n use std;\n \n-import req::*;\n-import std::map::*;\n-import std::map::str_hash;\n-import dvec;\n+use req::*;\n+use std::map::*;\n+use std::map::str_hash;\n \n fn main() {\n   let v = ~[mut @~\"hi\"];"}, {"sha": "193d4db724b3af6bfe4ad6b33ca7ac6d3d559ef0", "filename": "src/test/run-pass/issue-2723-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,7 @@\n // aux-build:issue_2723_a.rs\n \n use issue_2723_a;\n-import issue_2723_a::*;\n+use issue_2723_a::*;\n \n fn main() unsafe {\n   f(~[2]);"}, {"sha": "4b0637c586d85d74dce2aa8a64159d73f31dca3b", "filename": "src/test/run-pass/issue-2804-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // Minimized version of issue-2804.rs. Both check that callee IDs don't\n // clobber the previous node ID in a macro expr\n use std;\n-import std::map::hashmap;\n+use std::map::hashmap;\n \n fn add_interfaces(managed_ip: ~str, device: std::map::hashmap<~str, int>)  {\n      error!(\"%s, %?\", managed_ip, device[~\"interfaces\"]);"}, {"sha": "5ed46fc3df0addb3d5c711946671feedd67ae27d", "filename": "src/test/run-pass/issue-2804.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n use std;\n-import io;\n-import io::WriterUtil;\n-import std::map::hashmap;\n+use io::WriterUtil;\n+use std::map::hashmap;\n \n enum object\n {"}, {"sha": "b3786561b146b28c57ecebf2d7fb61843c3f64b0", "filename": "src/test/run-pass/issue-3012-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:issue-3012-1.rs\n use socketlib;\n-import socketlib::socket;\n+use socketlib::socket;\n \n fn main() {\n     let fd: libc::c_int = 1 as libc::c_int;"}, {"sha": "002c7d4c518ab43b7197fa8217aa2846f98b6062", "filename": "src/test/run-pass/issue-3176.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-3176.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-3176.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3176.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n \n-import pipes::{Select2, Selectable};\n+use pipes::{Select2, Selectable};\n \n fn main() {\n     let (c,p) = pipes::stream();"}, {"sha": "7ace5cb4d023bdc8b1a909e2e177d431408727b2", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,7 +5,6 @@\n */\n \n use std;\n-import task;\n \n #[abi = \"cdecl\"]\n extern mod rustrt {"}, {"sha": "67cebc4c34c48753084bdcd69eafce3e29986874", "filename": "src/test/run-pass/issue-507.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-507.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-507.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-507.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -7,12 +7,10 @@\n \n use std;\n \n-import task;\n-import comm;\n-import comm::Chan;\n-import comm::send;\n-import comm::Port;\n-import comm::recv;\n+use comm::Chan;\n+use comm::send;\n+use comm::Port;\n+use comm::recv;\n \n fn grandchild(c: Chan<int>) { send(c, 42); }\n "}, {"sha": "715918ffcce258671c462b2d9cb10937f0e81730", "filename": "src/test/run-pass/issue-687.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-687.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-687.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-687.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,8 @@\n use std;\n-import vec;\n-import task;\n-import comm;\n-import comm::Chan;\n-import comm::Port;\n-import comm::recv;\n-import comm::send;\n+use comm::Chan;\n+use comm::Port;\n+use comm::recv;\n+use comm::send;\n \n enum msg { closed, received(~[u8]), }\n "}, {"sha": "36863488ade922bc92cc075d03980c1389876dcc", "filename": "src/test/run-pass/issue-783.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue-783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-783.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import comm::*;\n-import task::*;\n+use comm::*;\n+use task::*;\n \n fn a() {\n     fn doit() {"}, {"sha": "c4ab39f9a7b369a985dbf353a3a500988e30ddd2", "filename": "src/test/run-pass/issue2378c.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue2378c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fissue2378c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue2378c.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,8 +5,8 @@\n use issue2378a;\n use issue2378b;\n \n-import issue2378a::{just, methods};\n-import issue2378b::{methods};\n+use issue2378a::{just, methods};\n+use issue2378b::{methods};\n \n fn main() {\n     let x = {a: just(3), b: just(5)};"}, {"sha": "94925be7205454d8af4435a98c25d6217ad490c5", "filename": "src/test/run-pass/ivec-tag.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-tag.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,9 @@\n use std;\n \n-import task;\n-import comm;\n-import comm::Chan;\n-import comm::Port;\n-import comm::send;\n-import comm::recv;\n+use comm::Chan;\n+use comm::Port;\n+use comm::send;\n+use comm::recv;\n \n fn producer(c: Chan<~[u8]>) {\n     send(c,"}, {"sha": "fc9239dd22a458bfa5e56d016be48db6ef95c20f", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,7 @@\n // -*- rust -*-\n \n use std;\n-import task;\n-import comm::*;\n+use comm::*;\n \n fn main() {\n     let p = Port();"}, {"sha": "126dfcd2d5bcf489f858cd31ce998a4d2a039999", "filename": "src/test/run-pass/log-knows-the-names-of-variants-in-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import std::list;\n+use std::list;\n \n enum foo {\n   a(uint),"}, {"sha": "2de7a39ceab569788d66bbc6be93484f6ba94743", "filename": "src/test/run-pass/lots-a-fail.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flots-a-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Flots-a-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flots-a-fail.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,5 @@\n // xfail-win32 leaks\n use std;\n-import task;\n-import comm;\n-import uint;\n \n fn die() {\n     fail;"}, {"sha": "e63b3541294637c200a937742f09b65ddf5270fd", "filename": "src/test/run-pass/many.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmany.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,6 @@\n // -*- rust -*-\n \n use std;\n-import task;\n-import comm;\n \n fn sub(parent: comm::Chan<int>, id: int) {\n     if id == 0 {"}, {"sha": "c56549548b0d7750516f344899892705b829f839", "filename": "src/test/run-pass/morestack5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack5.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // This test will call __morestack with various minimum stack sizes\n \n use std;\n-import task;\n \n fn getbig(&&i: int) {\n     if i != 0 {"}, {"sha": "fab6f5386ee55a78ec8592e0c03998679b9c2889", "filename": "src/test/run-pass/move-3-unique.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import uint;\n \n fn test(x: bool, foo: ~{x: int, y: int, z: int}) -> int {\n     let bar = foo;"}, {"sha": "572d6132854c87f292c7921b61872d8866b5b29c", "filename": "src/test/run-pass/move-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import uint;\n \n fn test(x: bool, foo: @{x: int, y: int, z: int}) -> int {\n     let bar = foo;"}, {"sha": "f56fdb5d08b84ff29cc354ed11691ae974456cce", "filename": "src/test/run-pass/move-4-unique.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import uint;\n \n fn test(foo: ~{a: int, b: int, c: int}) -> ~{a: int, b: int, c: int} {\n     let foo = foo;"}, {"sha": "454e0ac06870bb58ebc8751b20eb1dd2f6d10241", "filename": "src/test/run-pass/move-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fmove-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n \n use std;\n-import uint;\n \n fn test(foo: @{a: int, b: int, c: int}) -> @{a: int, b: int, c: int} {\n     let foo = foo;"}, {"sha": "98d70b5b5d2b155d3d490f7b7dac7173e21abcba", "filename": "src/test/run-pass/nested-pattern.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fnested-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fnested-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-pattern.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,9 +2,8 @@\n \n // a bug was causing this to complain about leaked memory on exit\n use std;\n-import option;\n-import option::Some;\n-import option::None;\n+use option::Some;\n+use option::None;\n \n enum t { foo(int, uint), bar(int, Option<int>), }\n "}, {"sha": "600afd97a69ac031dd74474765ed2752aa5238db", "filename": "src/test/run-pass/non-boolean-pure-fns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n \n-import std::list::*;\n+use std::list::*;\n \n pure fn pure_length_go<T: copy>(ls: @List<T>, acc: uint) -> uint {\n     match *ls { Nil => { acc } Cons(_, tl) => { pure_length_go(tl, acc + 1u) } }"}, {"sha": "fc76487b4360cc3c7f3c6ec662dcabdcb81ba8f9", "filename": "src/test/run-pass/pipe-bank-proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,7 +4,7 @@\n //\n // http://theincredibleholk.wordpress.com/2012/07/06/rusty-pipes/\n \n-import pipes::try_recv;\n+use pipes::try_recv;\n \n type username = ~str;\n type password = ~str;"}, {"sha": "e574a66aa986f21399b480d6dfc8b783f65fe382", "filename": "src/test/run-pass/pipe-detect-term.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,10 +4,10 @@\n // xfail-win32\n \n use std;\n-import std::timer::sleep;\n-import std::uv;\n+use std::timer::sleep;\n+use std::uv;\n \n-import pipes::{try_recv, recv};\n+use pipes::{try_recv, recv};\n \n proto! oneshot (\n     waiting:send {"}, {"sha": "eec54ea2da817c0850c4a2b51dd37718b229e711", "filename": "src/test/run-pass/pipe-peek.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-peek.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,8 @@\n // xfail-pretty\n \n use std;\n-import std::timer::sleep;\n-import std::uv;\n+use std::timer::sleep;\n+use std::uv;\n \n proto! oneshot (\n     waiting:send {"}, {"sha": "34e384e31218a4449134f773fa0970b6daf17977", "filename": "src/test/run-pass/pipe-presentation-examples.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -5,8 +5,8 @@\n \n // xfail-pretty\n \n-import double_buffer::client::*;\n-import double_buffer::give_buffer;\n+use double_buffer::client::*;\n+use double_buffer::give_buffer;\n \n macro_rules! select_if (\n     {"}, {"sha": "7f36dbe546cf465dce40c62279d523d303c148e9", "filename": "src/test/run-pass/pipe-select.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-select.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-select.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-select.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,10 +2,10 @@\n // xfail-win32\n \n use std;\n-import std::timer::sleep;\n-import std::uv;\n+use std::timer::sleep;\n+use std::uv;\n \n-import pipes::{recv, select};\n+use pipes::{recv, select};\n \n proto! oneshot (\n     waiting:send {"}, {"sha": "468e39c40cdefcb65d1db784e0e2a637983ddf92", "filename": "src/test/run-pass/pipe-sleep.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,9 @@\n // xfail-pretty\n \n use std;\n-import std::timer::sleep;\n-import std::uv;\n-import pipes::recv;\n+use std::timer::sleep;\n+use std::uv;\n+use pipes::recv;\n \n proto! oneshot (\n     waiting:send {"}, {"sha": "3284c720655640cb5331f0f90f541f6f03058cf1", "filename": "src/test/run-pass/placement-new-arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import std::arena;\n+use std::arena;\n \n fn main() {\n     let p = &arena::Arena();"}, {"sha": "7ead50289560f5439c64a1423c8b90bb4c45f8ee", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n \n-import intrinsic::{TyDesc, get_tydesc, visit_tydesc, TyVisitor};\n-import libc::c_void;\n+use intrinsic::{TyDesc, get_tydesc, visit_tydesc, TyVisitor};\n+use libc::c_void;\n \n // FIXME: this is a near-duplicate of code in core::vec.\n type unboxed_vec_repr = {"}, {"sha": "f7eb2c0131559e19ac45191d2ab49a9af036d4a8", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // FIXME: un-xfail after snapshot\n // xfail-test\n \n-import intrinsic::{tydesc, get_tydesc, visit_tydesc, ty_visitor};\n+use intrinsic::{tydesc, get_tydesc, visit_tydesc, ty_visitor};\n enum my_visitor = @{ mut types: ~[str] };\n \n impl of ty_visitor for my_visitor {"}, {"sha": "7884c31f4a97de1999528b637fac44e7c3241e72", "filename": "src/test/run-pass/regions-mock-trans-impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n use std;\n-import libc, sys, unsafe;\n-import std::arena::Arena;\n+use libc, sys, unsafe;\n+use std::arena::Arena;\n \n type bcx = {\n     fcx: &fcx"}, {"sha": "879845d2febf2a40445168b0c7acd6fdafd0e9e7", "filename": "src/test/run-pass/regions-mock-trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import libc, sys, unsafe;\n+use libc, sys, unsafe;\n \n enum arena = ();\n "}, {"sha": "8be2dc24f23c04f40e98df0d3b190dd8a61e6519", "filename": "src/test/run-pass/ret-break-cont-in-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import cmp::Eq;\n+use cmp::Eq;\n \n fn iter<T>(v: ~[T], it: fn(T) -> bool) {\n     let mut i = 0u, l = v.len();"}, {"sha": "ac9b99b955fbeb80c06599d8984fd8a0f987daf5", "filename": "src/test/run-pass/rt-circular-buffer.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,13 +3,10 @@\n // Regression tests for circular_buffer when using a unit\n // that has a size that is not a power of two\n use std;\n-import option;\n-import uint;\n-import comm;\n-import comm::Port;\n-import comm::Chan;\n-import comm::send;\n-import comm::recv;\n+use comm::Port;\n+use comm::Chan;\n+use comm::send;\n+use comm::recv;\n \n // A 12-byte unit to send over the channel\n type record = {val1: u32, val2: u32, val3: u32};"}, {"sha": "824ac74307c03e7105cdada460a3c694067c0dd4", "filename": "src/test/run-pass/rt-sched-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Frt-sched-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Frt-sched-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-sched-1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n // Tests of the runtime's scheduler interface\n \n-import ptr::is_null;\n+use ptr::is_null;\n \n type sched_id = int;\n type task_id = *libc::c_void;"}, {"sha": "2765e3b42648d85b26421b23e3fda11449ecce44", "filename": "src/test/run-pass/send-iloop.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-iloop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-iloop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-iloop.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n-import comm;\n-import uint;\n \n fn die() {\n     fail;"}, {"sha": "40da915e6cdde57d78be85fe17562a98d624a431", "filename": "src/test/run-pass/send-resource.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-resource.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n-import task::*;\n-import comm::*;\n+use task::*;\n+use comm::*;\n \n struct test {\n   let f: int;"}, {"sha": "67a1b618413b14ff0ff00bba48bbe14a44df3ab5", "filename": "src/test/run-pass/send-type-inference.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n-import comm::Chan;\n-import comm::send;\n-import comm::Port;\n+use comm::Chan;\n+use comm::send;\n+use comm::Port;\n \n // tests that ctrl's type gets inferred properly\n type command<K: send, V: send> = {key: K, val: V};"}, {"sha": "d5ee2f1aaecbdc8ef6b166e66a173cae73141c1e", "filename": "src/test/run-pass/sendfn-deep-copy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n \n-import comm::Chan;\n-import comm::send;\n+use comm::Chan;\n+use comm::send;\n \n fn main() { test05(); }\n "}, {"sha": "eece50e757085e722192c4c82adbb7053d7138ff", "filename": "src/test/run-pass/sendfn-generic-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n \n-import comm::Chan;\n-import comm::send;\n+use comm::Chan;\n+use comm::send;\n \n fn main() { test05(); }\n "}, {"sha": "c53dc3d7ed698d95dc153889a1cd0ba4c93a5cf4", "filename": "src/test/run-pass/sendfn-spawn-with-fn-arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n use std;\n \n-import comm::Chan;\n-import comm::send;\n+use comm::Chan;\n+use comm::send;\n \n fn main() { test05(); }\n "}, {"sha": "67d5e4571a06682ba2051df61af8302274b64b3f", "filename": "src/test/run-pass/shape_intrinsic_tag_then_rec.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,9 +3,8 @@\n // interior record which is then itself interior to\n // something else, shape calculations were off.\n use std;\n-import std::list;\n-import std::list::list;\n-import option;\n+use std::list;\n+use std::list::list;\n \n enum opt_span {\n "}, {"sha": "462286af178093a816b8b1b90898e54994fc04e7", "filename": "src/test/run-pass/shebang.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fshebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fshebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshebang.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env rustx\n // pp-exact\n \n-import io::println;\n+use io::println;\n \n fn main() { io::println(~\"Hello World\"); }"}, {"sha": "7534245e62ef7748149be6f4ba3826cc649eee3d", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,7 @@\n // -*- rust -*-\n \n use std;\n-import task::yield;\n-import task;\n+use task::yield;\n \n fn x(s: ~str, n: int) {\n     log(debug, s);"}, {"sha": "93123cd74335be84115af11f19133051a568c47f", "filename": "src/test/run-pass/spawn-types.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-types.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,9 +6,6 @@\n \n use std;\n \n-import str;\n-import comm;\n-import task;\n \n type ctx = comm::Chan<int>;\n "}, {"sha": "70fbad0f1aec33afbee3e02a9707ed617536ad7c", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,6 @@\n \n use std;\n \n-import task;\n \n fn main() {\n     task::spawn(|| child(10) );"}, {"sha": "63dab45a701671e1b7f341692250e97f1794125c", "filename": "src/test/run-pass/spawn2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fspawn2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n \n use std;\n-import task::spawn;\n+use task::spawn;\n \n fn main() { spawn(|| child((10, 20, 30, 40, 50, 60, 70, 80, 90)) ); }\n "}, {"sha": "853243d3ea8354104a1f0e0fdd584f4526cfd5ab", "filename": "src/test/run-pass/static-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-impl.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import a::*;\n+use a::*;\n \n trait plus {\n     fn plus() -> int;"}, {"sha": "ff7fb8a0d23c18ec8f20e6db3f0828b7075fb0b3", "filename": "src/test/run-pass/static-method-xcrate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,8 +2,8 @@\n // aux-build:static-methods-crate.rs\n \n use static_methods_crate;\n-import static_methods_crate::read;\n-import readMaybeRenamed = static_methods_crate::readMaybe;\n+use static_methods_crate::read;\n+use readMaybeRenamed = static_methods_crate::readMaybe;\n \n fn main() {\n     let result: int = read(~\"5\");"}, {"sha": "106ea6f3afdd6a422a4b34a72fb8a5774577d842", "filename": "src/test/run-pass/str-append.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstr-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstr-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-append.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,6 @@\n \n // -*- rust -*-\n use std;\n-import str;\n \n fn test1() {\n     let mut s: ~str = ~\"hello\";"}, {"sha": "6e72ce20184f69514feab548e6dc012dacc7f641", "filename": "src/test/run-pass/str-multiline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-multiline.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,6 @@\n \n // -*- rust -*-\n use std;\n-import str;\n \n fn main() {\n     let a: ~str = ~\"this \\"}, {"sha": "1312e9a3c0673ca5a71ad47ed06d402ab4df681b", "filename": "src/test/run-pass/string-self-append.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstring-self-append.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import str;\n \n fn main() {\n     // Make sure we properly handle repeated self-appends."}, {"sha": "20336cd561ccc2436a481d37f60d8baece44816d", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import str;\n \n fn test(actual: ~str, expected: ~str) {\n     log(debug, actual);"}, {"sha": "3c4d05b675f0763a6204486d7ea522bb1f623fb0", "filename": "src/test/run-pass/tag-exports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-exports.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import alder::*;\n+use alder::*;\n \n mod alder {\n   export burnside;"}, {"sha": "341e24f2e63fde335217f2eb8644422bd1222a8e", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,7 @@\n use std;\n \n-import pipes;\n-import pipes::Chan;\n-import pipes::Port;\n-import task;\n+use pipes::Chan;\n+use pipes::Port;\n \n fn main() { test05(); }\n "}, {"sha": "cae75f97fd7093d2eb8f34f2489e7a4e97ded1d7", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,4 @@\n use std;\n-import task;\n-import pipes;\n \n fn start(c: pipes::Chan<pipes::Chan<~str>>) {\n     let (ch, p) = pipes::stream();"}, {"sha": "f0e026f4efe189988deefc63f3346d3b14de5eb3", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,4 @@\n use std;\n-import pipes;\n-import task;\n \n fn start(c: pipes::Chan<pipes::Chan<int>>) {\n     let (ch, p) = pipes::stream();"}, {"sha": "d4dc389c00abab19c95840ad0a95d73270b4e2aa", "filename": "src/test/run-pass/task-comm-12.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import task;\n \n fn main() { test00(); }\n "}, {"sha": "c0613b84a9888d3997f72fcbfefc193c0db38ccb", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,5 @@\n use std;\n-import task;\n-import pipes;\n-import pipes::send;\n+use pipes::send;\n \n fn start(c: pipes::Chan<int>, start: int, number_of_messages: int) {\n     let mut i: int = 0;"}, {"sha": "9f4aac349d3bf3e2d43aa46d321fb407c5a58a33", "filename": "src/test/run-pass/task-comm-14.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,3 @@\n-import task;\n \n fn main() {\n     let po = pipes::PortSet();"}, {"sha": "415a7c21536a213f2a97b7bceb8e20300ec0708b", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n \n fn start(c: pipes::Chan<int>, i0: int) {\n     let mut i = i0;"}, {"sha": "247d5f4bd40b7706bdf49877421492415c2b18f8", "filename": "src/test/run-pass/task-comm-16.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,11 +1,10 @@\n // -*- rust -*-\n \n use std;\n-import pipes;\n-import pipes::send;\n-import pipes::Port;\n-import pipes::recv;\n-import pipes::Chan;\n+use pipes::send;\n+use pipes::Port;\n+use pipes::recv;\n+use pipes::Chan;\n \n // Tests of ports and channels on various types\n fn test_rec() {"}, {"sha": "ca3e70362302ef364d2450b75935b20646dbfb2c", "filename": "src/test/run-pass/task-comm-17.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,7 +3,6 @@\n // This test is specifically about spawning temporary closures.\n \n use std;\n-import task;\n \n fn f() {\n }"}, {"sha": "2dc33fa52bd8822614f8980a6ef64d0feb1a2410", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,7 @@\n use std;\n-import task;\n-import pipes;\n-import pipes::Chan;\n-import pipes::send;\n-import pipes::recv;\n+use pipes::Chan;\n+use pipes::send;\n+use pipes::recv;\n \n fn main() { debug!(\"===== WITHOUT THREADS =====\"); test00(); }\n "}, {"sha": "4ac914742a683f20c10aa830d200548647277fc5", "filename": "src/test/run-pass/task-comm-4.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n use std;\n-import pipes;\n-import pipes::send;\n+use pipes::send;\n \n fn main() { test00(); }\n "}, {"sha": "3b5d30cad8419c75d410a8820e58b7cc031eda69", "filename": "src/test/run-pass/task-comm-5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import pipes;\n \n fn main() { test00(); }\n "}, {"sha": "8927254886a9430c074edc8e363b6d928b2f8a18", "filename": "src/test/run-pass/task-comm-6.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,8 +1,7 @@\n use std;\n-import pipes;\n-import pipes::send;\n-import pipes::chan;\n-import pipes::recv;\n+use pipes::send;\n+use pipes::chan;\n+use pipes::recv;\n \n fn main() { test00(); }\n "}, {"sha": "8a0b9cbcef820dc271fcea783cadd3fbcf33bdcd", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import task;\n \n fn main() { test00(); }\n "}, {"sha": "afb3e9245e8d43cfafbfa64b75644c41ac6394ee", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import task;\n \n fn main() { test00(); }\n "}, {"sha": "770fcc43c20de3c07bb6bbea7cd737cbc854c48e", "filename": "src/test/run-pass/task-comm-chan-cleanup.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import comm;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "770fcc43c20de3c07bb6bbea7cd737cbc854c48e", "filename": "src/test/run-pass/task-comm-chan-cleanup2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import comm;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "486b4ad9fdc82bd607c200e07a48f2211dcb10ed", "filename": "src/test/run-pass/task-comm-chan-cleanup3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import comm;\n \n fn main() {\n     let c = {"}, {"sha": "6b11a99bc2fdf0e55872403f6cb506913f3b12ac", "filename": "src/test/run-pass/task-comm-chan-cleanup4.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,4 @@\n use std;\n-import int;\n-import comm;\n-import task;\n \n // We're trying to trigger a race between send and port destruction that\n // results in the string not being freed"}, {"sha": "b4bb73b9d3cf212c62858085dc3551f38fd95cc7", "filename": "src/test/run-pass/task-comm-chan-nil.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // -*- rust -*-\n \n use std;\n-import comm;\n \n // rustboot can't transmit nils across channels because they don't have\n // any size, but rustc currently can because they do have size. Whether"}, {"sha": "5320ced981d5710b5952dab9f04efdaef3e45625", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,12 +1,10 @@\n use std;\n \n-import task;\n-import task::task;\n-import comm;\n-import comm::Chan;\n-import comm::Port;\n-import comm::send;\n-import comm::recv;\n+use task::task;\n+use comm::Chan;\n+use comm::Port;\n+use comm::send;\n+use comm::recv;\n \n fn main() {\n     test00();"}, {"sha": "f4a9d8c2d84dd5ec1d2c3d078a2f90cec9d03cb3", "filename": "src/test/run-pass/task-compare.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,9 +6,7 @@\n // xfail-test\n \n use std;\n-import task;\n-import task::join;\n-import comm;\n+use task::join;\n \n fn child() { }\n "}, {"sha": "3067e6f48ac453446ee1618a34b25bdfed86c1d7", "filename": "src/test/run-pass/task-killjoin-rsrc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,7 +4,6 @@\n // the join.\n \n use std;\n-import task;\n \n struct notify {\n     let ch: comm::Chan<bool>; let v: @mut bool;"}, {"sha": "d5f5e0593b339a21e41164bdd17fba4644a0d08e", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -6,7 +6,6 @@\n // longer needs to be wakened when the supervised task exits.\n \n use std;\n-import task;\n \n fn supervised() {\n     // Yield to make sure the supervisor joins before we fail. This is"}, {"sha": "310e6fa6016fc1d2b87c8ae4b77504fae7928a93", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import task;\n fn main() {\n     task::spawn(|| child(~\"Hello\") );\n }"}, {"sha": "5345c9ab8bcb117a9095497c9ab577fce7d487c9", "filename": "src/test/run-pass/test-ignore-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -3,8 +3,6 @@\n // xfail-pretty\n \n use std;\n-import option;\n-import vec;\n \n #[test]\n #[ignore(cfg(ignorecfg))]"}, {"sha": "1e06000827bb9ede414c4789025630c2ef95248b", "filename": "src/test/run-pass/threads.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // -*- rust -*-\n \n use std;\n-import task;\n \n fn main() {\n     let mut i = 10;"}, {"sha": "2e08857f1b0eb9d2863e7877a5f8f73146a9b0a7", "filename": "src/test/run-pass/trait-to-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,7 +4,7 @@\n \n use core;\n \n-import core::{str, int, vec};\n+use core::{str, int, vec};\n \n trait to_str {\n     fn to_str() -> ~str;"}, {"sha": "800fb4f90063a8a921cf2923ad93949d1b1a751b", "filename": "src/test/run-pass/trait_mix/trait-mix.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrait_mix%2Ftrait-mix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrait_mix%2Ftrait-mix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait_mix%2Ftrait-mix.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,3 @@\n-import u_trait_mix;\n \n impl f32: u_trait_mix::num {\n     pure fn add(&&other: f32)    -> f32 { return self + other; }"}, {"sha": "f6a03d3939e61faa6c6c56d877fa6baa417c3727", "filename": "src/test/run-pass/trivial-message.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrivial-message.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,4 +1,4 @@\n-import pipes::{Port, Chan};\n+use pipes::{Port, Chan};\n \n /*\n   This is about the simplest program that can successfully send a"}, {"sha": "dbf7d71891266e64a6716346def744181d354914", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n // xfail-test\n-import sys::rustrt::size_of;\n+use sys::rustrt::size_of;\n use std;\n \n fn main() {"}, {"sha": "07c546ad09e4d7e2da678a91262018d66fcc44fc", "filename": "src/test/run-pass/unify-return-ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funify-return-ty.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -2,7 +2,6 @@\n // unified with the type *T, and so the type variable\n // in that type gets resolved.\n use std;\n-import unsafe;\n \n fn null<T>() -> *T unsafe { unsafe::reinterpret_cast(&0) }\n "}, {"sha": "6e33c3e19a2967459a839994df5d700eb8fdbde5", "filename": "src/test/run-pass/unique-copy-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-copy-box.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,5 @@\n use std;\n-import sys::refcount;\n+use sys::refcount;\n \n fn main() unsafe {\n     let i = ~@1;"}, {"sha": "47616e5b7315c4b0d9b0f774b1749c65b52eefce", "filename": "src/test/run-pass/unique-send-2.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-send-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-send-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-send-2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,4 @@\n use std;\n-import comm;\n-import task;\n-import uint;\n \n fn child(c: comm::Chan<~uint>, i: uint) {\n     comm::send(c, ~i);"}, {"sha": "2f505c2f07f0473c716bb47cfdb428303384a245", "filename": "src/test/run-pass/unique-send.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funique-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-send.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,4 @@\n use std;\n-import comm;\n-import task;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "f71acbf8ca35c9e032919249053767974c7fbd13", "filename": "src/test/run-pass/unwind-box.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-box.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n \n fn f() {\n     let a = @0;"}, {"sha": "da7d63e9126ca3bb526e707a3e942e05916e9c95", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n-import comm;\n \n struct complainer {\n   let c: comm::Chan<bool>;"}, {"sha": "c070bbb1ca2e17cf974f8c406cbb730a9ccb07f2", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n-import comm;\n \n struct complainer {\n   let c: @int;"}, {"sha": "81c0878704afe9cf1ba5eb5ad3fdee4f207637a8", "filename": "src/test/run-pass/unwind-unique.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Funwind-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-unique.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,5 @@\n // xfail-win32\n use std;\n-import task;\n \n fn f() {\n     let a = ~0;"}, {"sha": "4fba3ca24bedf47a85253ee300948443e2685b3c", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -4,8 +4,8 @@ use zed(name = \"core\");\n use bar(name = \"core\", vers = \"0.4\");\n \n \n-import core::str;\n-import x = zed::str;\n+use core::str;\n+use x = zed::str;\n mod baz {\n     import bar::str;\n     import x = core::str;"}, {"sha": "589afdba636e7d558bb153689e1355d2cf6a31df", "filename": "src/test/run-pass/utf8_chars.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_chars.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,6 +1,4 @@\n use std;\n-import str;\n-import vec;\n \n fn main() {\n     // Chars of 1, 2, 3, and 4 bytes"}, {"sha": "c4d0c5b4662987128d27c5cd8e3ea9c6817b537b", "filename": "src/test/run-pass/vec-self-append.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-self-append.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import vec;\n \n fn test_heap_to_heap() {\n     // a spills onto the heap"}, {"sha": "e3db1aa35b0fe7b7765c275a869f7efdfb34c619", "filename": "src/test/run-pass/yield.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // -*- rust -*-\n use std;\n-import task;\n-import task::*;\n+use task::*;\n \n fn main() {\n     let mut result = None;"}, {"sha": "c60645494c2f1aaf8f74d6653b35b86100168938", "filename": "src/test/run-pass/yield1.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fyield1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fyield1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield1.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,7 +1,6 @@\n // -*- rust -*-\n use std;\n-import task;\n-import task::*;\n+use task::*;\n \n fn main() {\n     let mut result = None;"}, {"sha": "43c5d704b1afad9fdaebabed33d2021c02210182", "filename": "src/test/run-pass/zip-same-length.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f686896f60d901fd7f97add72fbc047691027baa/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzip-same-length.rs?ref=f686896f60d901fd7f97add72fbc047691027baa", "patch": "@@ -1,9 +1,7 @@\n // In this case, the code should compile and should\n // succeed at runtime\n use std;\n-import uint;\n-import u8;\n-import vec::{head, is_not_empty, last, same_length, zip};\n+use vec::{head, is_not_empty, last, same_length, zip};\n \n fn enum_chars(start: u8, end: u8) -> ~[char] {\n     assert start < end;"}]}