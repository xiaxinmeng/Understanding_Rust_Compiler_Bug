{"sha": "c950f2265ef898ff760219d16298bd96fecb7155", "node_id": "C_kwDOAAsO6NoAKGM5NTBmMjI2NWVmODk4ZmY3NjAyMTlkMTYyOThiZDk2ZmVjYjcxNTU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-14T17:02:21Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-14T17:02:21Z"}, "message": "Build rtstartup for MinGW from scratch\n\nRather than copying it from an existing sysroot", "tree": {"sha": "400d9fbfb6dc8b79f40c6a5fdae248086bda9af9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/400d9fbfb6dc8b79f40c6a5fdae248086bda9af9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c950f2265ef898ff760219d16298bd96fecb7155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c950f2265ef898ff760219d16298bd96fecb7155", "html_url": "https://github.com/rust-lang/rust/commit/c950f2265ef898ff760219d16298bd96fecb7155", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c950f2265ef898ff760219d16298bd96fecb7155/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "629eab79c16a6659a241c0b50ea986780934a65d", "url": "https://api.github.com/repos/rust-lang/rust/commits/629eab79c16a6659a241c0b50ea986780934a65d", "html_url": "https://github.com/rust-lang/rust/commit/629eab79c16a6659a241c0b50ea986780934a65d"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "1181c935b8389e10ed817f83a3ff4d65b4c6b061", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c950f2265ef898ff760219d16298bd96fecb7155/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/c950f2265ef898ff760219d16298bd96fecb7155/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=c950f2265ef898ff760219d16298bd96fecb7155", "patch": "@@ -77,7 +77,6 @@ jobs:\n       run: |\n         sudo apt-get update\n         sudo apt-get install -y gcc-mingw-w64-x86-64 wine-stable\n-        rustup target add x86_64-pc-windows-gnu\n \n     - name: Install AArch64 toolchain and qemu\n       if: matrix.os == 'ubuntu-latest' && matrix.env.TARGET_TRIPLE == 'aarch64-unknown-linux-gnu'"}, {"sha": "413aa3444a54b1ca255f5679a35041cb14da6dfd", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c950f2265ef898ff760219d16298bd96fecb7155/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c950f2265ef898ff760219d16298bd96fecb7155/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=c950f2265ef898ff760219d16298bd96fecb7155", "patch": "@@ -64,24 +64,21 @@ pub(crate) fn build_sysroot(\n     fs::create_dir_all(&host_rustlib_lib).unwrap();\n     fs::create_dir_all(&target_rustlib_lib).unwrap();\n \n-    if target_triple == \"x86_64-pc-windows-gnu\" {\n-        if !default_sysroot.join(\"lib\").join(\"rustlib\").join(&target_triple).join(\"lib\").exists() {\n-            eprintln!(\n-                \"The x86_64-pc-windows-gnu target needs to be installed first before it is possible \\\n-                to compile a sysroot for it.\",\n-            );\n-            process::exit(1);\n-        }\n-        for file in fs::read_dir(\n-            default_sysroot.join(\"lib\").join(\"rustlib\").join(&target_triple).join(\"lib\"),\n-        )\n-        .unwrap()\n-        {\n-            let file = file.unwrap().path();\n-            if file.extension().map_or(true, |ext| ext.to_str().unwrap() != \"o\") {\n-                continue; // only copy object files\n-            }\n-            try_hard_link(&file, target_rustlib_lib.join(file.file_name().unwrap()));\n+    if target_triple.ends_with(\"windows-gnu\") {\n+        eprintln!(\"[BUILD] rtstartup for {target_triple}\");\n+\n+        let rtstartup_src = SYSROOT_SRC.to_path(dirs).join(\"library\").join(\"rtstartup\");\n+\n+        for file in [\"rsbegin\", \"rsend\"] {\n+            let mut build_rtstartup_cmd = Command::new(&bootstrap_host_compiler.rustc);\n+            build_rtstartup_cmd\n+                .arg(\"--target\")\n+                .arg(&target_triple)\n+                .arg(\"--emit=obj\")\n+                .arg(\"-o\")\n+                .arg(target_rustlib_lib.join(format!(\"{file}.o\")))\n+                .arg(rtstartup_src.join(format!(\"{file}.rs\")));\n+            spawn_and_wait(build_rtstartup_cmd);\n         }\n     }\n \n@@ -209,6 +206,7 @@ fn build_clif_sysroot_for_triple(\n     // Build sysroot\n     let mut rustflags = \" -Zforce-unstable-if-unmarked -Cpanic=abort\".to_string();\n     rustflags.push_str(&format!(\" -Zcodegen-backend={}\", cg_clif_dylib_path.to_str().unwrap()));\n+    // Necessary for MinGW to find rsbegin.o and rsend.o\n     rustflags.push_str(&format!(\" --sysroot={}\", DIST_DIR.to_path(dirs).to_str().unwrap()));\n     if channel == \"release\" {\n         rustflags.push_str(\" -Zmir-opt-level=3\");"}]}