{"sha": "898208414e3e1b922bd5d3b072bd71841bafb0ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODIwODQxNGUzZTFiOTIyYmQ1ZDNiMDcyYmQ3MTg0MWJhZmIwY2U=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-11-06T22:06:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-06T22:06:16Z"}, "message": "Merge pull request #1206 from masonium/fmt-extra-files\n\n#1126 cargo-fmt processes bench, test, example files", "tree": {"sha": "54da5a3284012855727074812b08f9b4a8450495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54da5a3284012855727074812b08f9b4a8450495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/898208414e3e1b922bd5d3b072bd71841bafb0ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/898208414e3e1b922bd5d3b072bd71841bafb0ce", "html_url": "https://github.com/rust-lang/rust/commit/898208414e3e1b922bd5d3b072bd71841bafb0ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/898208414e3e1b922bd5d3b072bd71841bafb0ce/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8494d5f89c70f2d83bc17b700f32aecc9b75ee2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8494d5f89c70f2d83bc17b700f32aecc9b75ee2e", "html_url": "https://github.com/rust-lang/rust/commit/8494d5f89c70f2d83bc17b700f32aecc9b75ee2e"}, {"sha": "764100361e621329b5077bc530daf3bb5eceaf3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/764100361e621329b5077bc530daf3bb5eceaf3b", "html_url": "https://github.com/rust-lang/rust/commit/764100361e621329b5077bc530daf3bb5eceaf3b"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "55b8bc633333c6a6fc196d12f30058ad3a068563", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/898208414e3e1b922bd5d3b072bd71841bafb0ce/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898208414e3e1b922bd5d3b072bd71841bafb0ce/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=898208414e3e1b922bd5d3b072bd71841bafb0ce", "patch": "@@ -97,7 +97,7 @@ fn format_crate(verbosity: Verbosity) -> Result<ExitStatus, std::io::Error> {\n \n     // Currently only bin and lib files get formatted\n     let files: Vec<_> = targets.into_iter()\n-        .filter(|t| t.kind.is_lib() | t.kind.is_bin())\n+        .filter(|t| t.kind.should_format())\n         .inspect(|t| {\n             if verbosity == Verbosity::Verbose {\n                 println!(\"[{:?}] {:?}\", t.kind, t.path)\n@@ -118,20 +118,17 @@ fn get_fmt_args() -> Vec<String> {\n enum TargetKind {\n     Lib, // dylib, staticlib, lib\n     Bin, // bin\n-    Other, // test, plugin,...\n+    Example, // example file\n+    Test, // test file\n+    Bench, // bench file\n+    Other, // plugin,...\n }\n \n impl TargetKind {\n-    fn is_lib(&self) -> bool {\n+    fn should_format(&self) -> bool {\n         match *self {\n-            TargetKind::Lib => true,\n-            _ => false,\n-        }\n-    }\n-\n-    fn is_bin(&self) -> bool {\n-        match *self {\n-            TargetKind::Bin => true,\n+            TargetKind::Lib | TargetKind::Bin | TargetKind::Example | TargetKind::Test |\n+            TargetKind::Bench => true,\n             _ => false,\n         }\n     }\n@@ -171,6 +168,9 @@ fn target_from_json(jtarget: &Json) -> Target {\n     let kind = match kinds[0].as_string().unwrap() {\n         \"bin\" => TargetKind::Bin,\n         \"lib\" | \"dylib\" | \"staticlib\" => TargetKind::Lib,\n+        \"test\" => TargetKind::Test,\n+        \"example\" => TargetKind::Example,\n+        \"bench\" => TargetKind::Bench,\n         _ => TargetKind::Other,\n     };\n "}]}