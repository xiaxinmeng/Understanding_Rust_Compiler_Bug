{"sha": "e055f87cdfcac1f4da6c518a547dee459de0aa26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNTVmODdjZGZjYWMxZjRkYTZjNTE4YTU0N2RlZTQ1OWRlMGFhMjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T23:44:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T23:44:57Z"}, "message": "Auto merge of #77597 - simonvandel:uninhabited-hashset, r=jonas-schievink\n\nperf: UninhabitedEnumBranching avoid n^2\n\nAvoid n\u00b2 complexity. This showed up in a profile for match-stress-enum that has 8192 variants\n\nI have only profiled locally against `match-stress-enum`, so we should have it perf tested to make sure it does not regress other crates.", "tree": {"sha": "bb27e222fe5e2835df345328c6c1797d4e0cbf24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb27e222fe5e2835df345328c6c1797d4e0cbf24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e055f87cdfcac1f4da6c518a547dee459de0aa26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e055f87cdfcac1f4da6c518a547dee459de0aa26", "html_url": "https://github.com/rust-lang/rust/commit/e055f87cdfcac1f4da6c518a547dee459de0aa26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e055f87cdfcac1f4da6c518a547dee459de0aa26/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91a79fb29ac78d057d04dbe86be13d5dcc64309a", "url": "https://api.github.com/repos/rust-lang/rust/commits/91a79fb29ac78d057d04dbe86be13d5dcc64309a", "html_url": "https://github.com/rust-lang/rust/commit/91a79fb29ac78d057d04dbe86be13d5dcc64309a"}, {"sha": "e231c47aa608b15aa427bc7a8859d87a022c1cfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e231c47aa608b15aa427bc7a8859d87a022c1cfd", "html_url": "https://github.com/rust-lang/rust/commit/e231c47aa608b15aa427bc7a8859d87a022c1cfd"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "87906e83ed56c6588d680a9acf527c8bd9ec7154", "filename": "compiler/rustc_mir/src/transform/uninhabited_enum_branching.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e055f87cdfcac1f4da6c518a547dee459de0aa26/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e055f87cdfcac1f4da6c518a547dee459de0aa26/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funinhabited_enum_branching.rs?ref=e055f87cdfcac1f4da6c518a547dee459de0aa26", "patch": "@@ -1,6 +1,7 @@\n //! A pass that eliminates branches on uninhabited enum variants.\n \n use crate::transform::MirPass;\n+use rustc_data_structures::stable_set::FxHashSet;\n use rustc_middle::mir::{\n     BasicBlock, BasicBlockData, Body, Local, Operand, Rvalue, StatementKind, TerminatorKind,\n };\n@@ -52,9 +53,13 @@ fn variant_discriminants<'tcx>(\n     layout: &TyAndLayout<'tcx>,\n     ty: Ty<'tcx>,\n     tcx: TyCtxt<'tcx>,\n-) -> Vec<u128> {\n+) -> FxHashSet<u128> {\n     match &layout.variants {\n-        Variants::Single { index } => vec![index.as_u32() as u128],\n+        Variants::Single { index } => {\n+            let mut res = FxHashSet::default();\n+            res.insert(index.as_u32() as u128);\n+            res\n+        }\n         Variants::Multiple { variants, .. } => variants\n             .iter_enumerated()\n             .filter_map(|(idx, layout)| {"}]}