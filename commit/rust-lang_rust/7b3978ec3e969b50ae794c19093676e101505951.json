{"sha": "7b3978ec3e969b50ae794c19093676e101505951", "node_id": "C_kwDOAAsO6NoAKDdiMzk3OGVjM2U5NjliNTBhZTc5NGMxOTA5MzY3NmUxMDE1MDU5NTE", "commit": {"author": {"name": "inquisitivecrystal", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-11-17T05:05:08Z"}, "committer": {"name": "inquisitivecrystal", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-11-17T05:05:08Z"}, "message": "Avoid documenting top-level private imports", "tree": {"sha": "a792d0b9194a97af763b091673672367b956414b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a792d0b9194a97af763b091673672367b956414b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b3978ec3e969b50ae794c19093676e101505951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3978ec3e969b50ae794c19093676e101505951", "html_url": "https://github.com/rust-lang/rust/commit/7b3978ec3e969b50ae794c19093676e101505951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b3978ec3e969b50ae794c19093676e101505951/comments", "author": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d914f17ca71a33a89b2dc3436fca51b1a091559e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d914f17ca71a33a89b2dc3436fca51b1a091559e", "html_url": "https://github.com/rust-lang/rust/commit/d914f17ca71a33a89b2dc3436fca51b1a091559e"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "8679b3dfb7ebf05022081b1604cd7f2c15ad65b2", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7b3978ec3e969b50ae794c19093676e101505951/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b3978ec3e969b50ae794c19093676e101505951/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7b3978ec3e969b50ae794c19093676e101505951", "patch": "@@ -1938,8 +1938,20 @@ fn clean_use_statement(\n     let inline_attr = attrs.lists(sym::doc).get_word_attr(sym::inline);\n     let pub_underscore = visibility.is_public() && name == kw::Underscore;\n     let current_mod = cx.tcx.parent_module_from_def_id(import.def_id);\n+\n+    // The parent of the module in which this import resides. This\n+    // is the same as `current_mod` if that's already the top\n+    // level module.\n     let parent_mod = cx.tcx.parent_module_from_def_id(current_mod);\n \n+    // This checks if the import can be seen from a higher level module.\n+    // In other words, it checks if the visibility is the equivalent of\n+    // `pub(super)` or higher. If the current module is the top level\n+    // module, there isn't really a parent module, which makes the results\n+    // meaningless. In this case, we make sure the answer is `false`.\n+    let is_visible_from_parent_mod = visibility.is_accessible_from(parent_mod.to_def_id(), cx.tcx)\n+        && !current_mod.is_top_level_module();\n+\n     if pub_underscore {\n         if let Some(ref inline) = inline_attr {\n             rustc_errors::struct_span_err!(\n@@ -1958,8 +1970,7 @@ fn clean_use_statement(\n     // #[doc(no_inline)] attribute is present.\n     // Don't inline doc(hidden) imports so they can be stripped at a later stage.\n     let mut denied = !(visibility.is_public()\n-        || (cx.render_options.document_private\n-            && visibility.is_accessible_from(parent_mod.to_def_id(), cx.tcx)))\n+        || (cx.render_options.document_private && is_visible_from_parent_mod))\n         || pub_underscore\n         || attrs.iter().any(|a| {\n             a.has_name(sym::doc)"}]}