{"sha": "6220e00ea9a790fb83cf391e2093c260db6d47a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMjBlMDBlYTlhNzkwZmI4M2NmMzkxZTIwOTNjMjYwZGI2ZDQ3YTE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-07T01:41:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-07T01:41:22Z"}, "message": "Rollup merge of #82837 - RalfJung:maybe-uninit, r=dtolnay\n\ntweak MaybeUninit docs\n\nExplain what \"(no) fixed value\" means.", "tree": {"sha": "c91086d0e3c6cff3ed331adc66931e17281701f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c91086d0e3c6cff3ed331adc66931e17281701f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6220e00ea9a790fb83cf391e2093c260db6d47a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRC9CCRBK7hj4Ov3rIwAAdHIIAEVAHtpAKG1lO5VvqsHUEJsl\nUiZnHDAKWbNkRjgZuSNkJEufhl/HPe5FERoIu8urLTW6xXDo9AlF9YxCFUinKMb9\ng/AeTGL6Ha9P0+9fRVLM07U2hIPJyJ3HzbdBC2dsbbbjY2/DIMfDIY7F96p9qqDr\nUmsqf7ZGTYhTE3amS9VBW0LzTdLuopm29GdTU1cUQvrsLC0WdnItnO30MAe+dpHF\nJcZ1Na06Mnebz+65kL5LzcrJjHLaUOm7waY4AgQ7ATYUeaqTlg+Mf87rswDagw0g\nVV6yipFlUuonnKrbIbrwnwg+HUA0FCg9cLPx5kynCB5fCmJgmCoca88Uv1h+Hpg=\n=qI8e\n-----END PGP SIGNATURE-----\n", "payload": "tree c91086d0e3c6cff3ed331adc66931e17281701f8\nparent 74ae20e2c6b6b2a0f839a42b0fd40cb976e7eaca\nparent b75154897bd5a4f4e0678e1d0539db6f59f85ba1\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615081282 +0900\ncommitter GitHub <noreply@github.com> 1615081282 +0900\n\nRollup merge of #82837 - RalfJung:maybe-uninit, r=dtolnay\n\ntweak MaybeUninit docs\n\nExplain what \"(no) fixed value\" means.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6220e00ea9a790fb83cf391e2093c260db6d47a1", "html_url": "https://github.com/rust-lang/rust/commit/6220e00ea9a790fb83cf391e2093c260db6d47a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6220e00ea9a790fb83cf391e2093c260db6d47a1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ae20e2c6b6b2a0f839a42b0fd40cb976e7eaca", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ae20e2c6b6b2a0f839a42b0fd40cb976e7eaca", "html_url": "https://github.com/rust-lang/rust/commit/74ae20e2c6b6b2a0f839a42b0fd40cb976e7eaca"}, {"sha": "b75154897bd5a4f4e0678e1d0539db6f59f85ba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75154897bd5a4f4e0678e1d0539db6f59f85ba1", "html_url": "https://github.com/rust-lang/rust/commit/b75154897bd5a4f4e0678e1d0539db6f59f85ba1"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "cb072931232de22f8243ae0bf1fa9bd2d0c3796e", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6220e00ea9a790fb83cf391e2093c260db6d47a1/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6220e00ea9a790fb83cf391e2093c260db6d47a1/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=6220e00ea9a790fb83cf391e2093c260db6d47a1", "patch": "@@ -39,10 +39,11 @@ use crate::ptr;\n /// let b: bool = unsafe { MaybeUninit::uninit().assume_init() }; // undefined behavior! \u26a0\ufe0f\n /// ```\n ///\n-/// Moreover, uninitialized memory is special in that the compiler knows that\n-/// it does not have a fixed value. This makes it undefined behavior to have\n-/// uninitialized data in a variable even if that variable has an integer type,\n-/// which otherwise can hold any *fixed* bit pattern:\n+/// Moreover, uninitialized memory is special in that it does not have a fixed value (\"fixed\"\n+/// meaning \"it won't change without being written to\"). Reading the same uninitialized byte\n+/// multiple times can give different results. This makes it undefined behavior to have\n+/// uninitialized data in a variable even if that variable has an integer type, which otherwise can\n+/// hold any *fixed* bit pattern:\n ///\n /// ```rust,no_run\n /// # #![allow(invalid_value)]"}]}