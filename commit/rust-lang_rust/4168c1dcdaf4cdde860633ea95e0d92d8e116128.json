{"sha": "4168c1dcdaf4cdde860633ea95e0d92d8e116128", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNjhjMWRjZGFmNGNkZGU4NjA2MzNlYTk1ZTBkOTJkOGUxMTYxMjg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-06T01:10:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-06T01:10:33Z"}, "message": "Add -lpasses for logging just the progress of passes.", "tree": {"sha": "345470fe68145656010995ad0e23970928f48912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/345470fe68145656010995ad0e23970928f48912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4168c1dcdaf4cdde860633ea95e0d92d8e116128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4168c1dcdaf4cdde860633ea95e0d92d8e116128", "html_url": "https://github.com/rust-lang/rust/commit/4168c1dcdaf4cdde860633ea95e0d92d8e116128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4168c1dcdaf4cdde860633ea95e0d92d8e116128/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdf67b1f2e34ceb27a922cde7edc526597200b96", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdf67b1f2e34ceb27a922cde7edc526597200b96", "html_url": "https://github.com/rust-lang/rust/commit/cdf67b1f2e34ceb27a922cde7edc526597200b96"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "3c37a03250aa6092547c24c6730698d1551e1b78", "filename": "src/boot/driver/main.ml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fdriver%2Fmain.ml", "raw_url": "https://github.com/rust-lang/rust/raw/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fdriver%2Fmain.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fdriver%2Fmain.ml?ref=4168c1dcdaf4cdde860633ea95e0d92d8e116128", "patch": "@@ -32,6 +32,7 @@ let (sess:Session.sess) =\n     Session.sess_log_lex = false;\n     Session.sess_log_parse = false;\n     Session.sess_log_ast = false;\n+    Session.sess_log_passes = false;\n     Session.sess_log_resolve = false;\n     Session.sess_log_type = false;\n     Session.sess_log_simplify = false;\n@@ -162,6 +163,8 @@ let argspecs =\n        \"-lparse\"    \"log parsing\");\n     (flag (fun _ -> sess.Session.sess_log_ast <- true)\n        \"-last\"      \"log AST\");\n+    (flag (fun _ -> sess.Session.sess_log_passes <- true)\n+       \"-lpasses\"  \"log passes at high-level\");\n     (flag (fun _ -> sess.Session.sess_log_resolve <- true)\n        \"-lresolve\"  \"log resolution\");\n     (flag (fun _ -> sess.Session.sess_log_type <- true)"}, {"sha": "ae16c1395bc6d42f024af804ccac4333ee5da23f", "filename": "src/boot/driver/session.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fdriver%2Fsession.ml", "raw_url": "https://github.com/rust-lang/rust/raw/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fdriver%2Fsession.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fdriver%2Fsession.ml?ref=4168c1dcdaf4cdde860633ea95e0d92d8e116128", "patch": "@@ -18,6 +18,7 @@ type sess =\n   mutable sess_log_lex: bool;\n   mutable sess_log_parse: bool;\n   mutable sess_log_ast: bool;\n+  mutable sess_log_passes: bool;\n   mutable sess_log_resolve: bool;\n   mutable sess_log_type: bool;\n   mutable sess_log_simplify: bool;"}, {"sha": "d692f334a0c863042657f2b8a304200beb388234", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/4168c1dcdaf4cdde860633ea95e0d92d8e116128/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=4168c1dcdaf4cdde860633ea95e0d92d8e116128", "patch": "@@ -1719,24 +1719,44 @@ let mod_item_logging_visitor\n     : Walk.\n visitor =\n   let entering _ =\n+    if cx.ctxt_sess.Session.sess_log_passes\n+    then\n+      Session.log \"pass\" true cx.ctxt_sess.Session.sess_log_out\n+        \"pass %d: entering %a\"\n+        pass Ast.sprintf_name (path_to_name path);\n     if log_flag\n     then\n       log cx \"pass %d: entering %a\"\n         pass Ast.sprintf_name (path_to_name path)\n   in\n   let entered _ =\n+    if cx.ctxt_sess.Session.sess_log_passes\n+    then\n+      Session.log \"pass\" true cx.ctxt_sess.Session.sess_log_out\n+        \"pass %d: entered %a\"\n+        pass Ast.sprintf_name (path_to_name path);\n     if log_flag\n     then\n       log cx \"pass %d: entered %a\"\n         pass Ast.sprintf_name (path_to_name path)\n   in\n   let leaving _ =\n+    if cx.ctxt_sess.Session.sess_log_passes\n+    then\n+      Session.log \"pass\" true cx.ctxt_sess.Session.sess_log_out\n+        \"pass %d: leaving %a\"\n+        pass Ast.sprintf_name (path_to_name path);\n     if log_flag\n     then\n       log cx \"pass %d: leaving %a\"\n         pass Ast.sprintf_name (path_to_name path)\n   in\n   let left _ =\n+    if cx.ctxt_sess.Session.sess_log_passes\n+    then\n+      Session.log \"pass\" true cx.ctxt_sess.Session.sess_log_out\n+        \"pass %d: left %a\"\n+        pass Ast.sprintf_name (path_to_name path);\n     if log_flag\n     then\n       log cx \"pass %d: left %a\"\n@@ -2031,7 +2051,10 @@ let run_passes\n     (crate:Ast.crate)\n     : unit =\n   let do_pass i pass =\n-      Walk.walk_crate\n+    if cx.ctxt_sess.Session.sess_log_passes\n+    then Session.log \"pass\" true cx.ctxt_sess.Session.sess_log_out\n+      \"starting pass %s # %d\" name i;\n+    Walk.walk_crate\n         (Walk.path_managing_visitor path\n            (mod_item_logging_visitor cx log_flag log i path pass))\n         crate"}]}