{"sha": "04fc937700105951442a9b6fa30591fb48a1e879", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZmM5Mzc3MDAxMDU5NTE0NDJhOWI2ZmEzMDU5MWZiNDhhMWU4Nzk=", "commit": {"author": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-09-01T20:13:12Z"}, "committer": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-09-01T20:13:12Z"}, "message": "Add back Param struct", "tree": {"sha": "e790fd0d19c30457b7aaae90eb898de791bc4511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e790fd0d19c30457b7aaae90eb898de791bc4511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04fc937700105951442a9b6fa30591fb48a1e879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04fc937700105951442a9b6fa30591fb48a1e879", "html_url": "https://github.com/rust-lang/rust/commit/04fc937700105951442a9b6fa30591fb48a1e879", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04fc937700105951442a9b6fa30591fb48a1e879/comments", "author": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ddb907144688ae77a6de3666159feef53638e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ddb907144688ae77a6de3666159feef53638e1", "html_url": "https://github.com/rust-lang/rust/commit/c6ddb907144688ae77a6de3666159feef53638e1"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "afbf78b3b83cc9bdb241c405967415cc6c1f806e", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/04fc937700105951442a9b6fa30591fb48a1e879/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fc937700105951442a9b6fa30591fb48a1e879/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=04fc937700105951442a9b6fa30591fb48a1e879", "patch": "@@ -708,7 +708,7 @@ impl Function {\n         Some(SelfParam { func: self.id })\n     }\n \n-    pub fn params(self, db: &dyn HirDatabase) -> Vec<Type> {\n+    pub fn params(self, db: &dyn HirDatabase) -> Vec<Param> {\n         let resolver = self.id.resolver(db.upcast());\n         let ctx = hir_ty::TyLoweringContext::new(db, &resolver);\n         let environment = TraitEnvironment::lower(db, &resolver);\n@@ -724,7 +724,7 @@ impl Function {\n                         environment: environment.clone(),\n                     },\n                 };\n-                ty\n+                Param { ty }\n             })\n             .collect()\n     }\n@@ -754,6 +754,16 @@ impl From<Mutability> for Access {\n     }\n }\n \n+pub struct Param {\n+    ty: Type,\n+}\n+\n+impl Param {\n+    pub fn ty(&self) -> &Type {\n+        &self.ty\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct SelfParam {\n     func: FunctionId,"}, {"sha": "0c29d0be246599268d5bfa18f460d85190507e03", "filename": "crates/ide/src/completion/presentation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fc937700105951442a9b6fa30591fb48a1e879/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fc937700105951442a9b6fa30591fb48a1e879/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=04fc937700105951442a9b6fa30591fb48a1e879", "patch": "@@ -231,7 +231,7 @@ impl Completions {\n                 if let Some(pat) = it.pat() {\n                     let name = pat.to_string();\n                     let arg = name.trim_start_matches('_');\n-                    return Some(add_arg(arg, &param_ty, ctx));\n+                    return Some(add_arg(arg, param_ty.ty(), ctx));\n                 }\n                 None\n             })"}]}