{"sha": "4647e89defd367a92d00d3bbb11c2463408bb3ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NDdlODlkZWZkMzY3YTkyZDAwZDNiYmIxMWMyNDYzNDA4YmIzYWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-25T17:42:55Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-25T17:42:55Z"}, "message": "Merge #1586\n\n1586: Add type decorators r=matklad a=SomeoneToIgnore\n\nA follow-up of https://github.com/rust-analyzer/rust-analyzer/pull/1549\r\n\r\nNow the frontend shows inlay hints as VS Code Decorators:\r\n\r\n<img width=\"666\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/61802687-918fcc80-ae39-11e9-97b0-3195ab467393.png\">\r\n<img width=\"893\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/61802688-93599000-ae39-11e9-8bcb-4512e22aa3ed.png\">\r\n\r\nA few notes on the implementation:\r\n* I could not find a normal way to run and display the hints for the file that's already open in the VS Code when it starts.\r\nThe updating code runs ok, but does not actually show anything. \r\nSeems like I miss some event that I could add a handler to.\r\nI've also experimented with `setTimeout` and it worked, but this is too ugly.\r\nThe hints appear now when a new file is open or when some change is done in the existing file.\r\n\r\n* If there's a `dbg!` used in the lsp_server, the frontend starts receiving change events that contain the string from the `dbg!` output.\r\nIt should not be the case in a real life, but I've decided to cover this case, just in case.\r\n\r\n* For bigger files, ~500 lines, the decorators start to blink, when updated, this does not seem to be very much of a problem for me at this particular stage of the feature development and can be optimized later. In the worst case, those decorators can be turned off in settings.\r\n\r\n* Cursor movement is rather non-intuitive on the right edge of the decorator.\r\nSeems like a thing to fix in the VS Code, not in the plugin.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "b1d01cf8f7751daad61ee16fef82e616f55a8261", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1d01cf8f7751daad61ee16fef82e616f55a8261"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4647e89defd367a92d00d3bbb11c2463408bb3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4647e89defd367a92d00d3bbb11c2463408bb3ad", "html_url": "https://github.com/rust-lang/rust/commit/4647e89defd367a92d00d3bbb11c2463408bb3ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4647e89defd367a92d00d3bbb11c2463408bb3ad/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "ceb16591deef2190daaf5eb9a6480f20dc5d169c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb16591deef2190daaf5eb9a6480f20dc5d169c", "html_url": "https://github.com/rust-lang/rust/commit/ceb16591deef2190daaf5eb9a6480f20dc5d169c"}, {"sha": "f1ba963a3097106ad6daa41d04c51b7f2d418d8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ba963a3097106ad6daa41d04c51b7f2d418d8c", "html_url": "https://github.com/rust-lang/rust/commit/f1ba963a3097106ad6daa41d04c51b7f2d418d8c"}], "stats": {"total": 151, "additions": 150, "deletions": 1}, "files": [{"sha": "060a3a247532236857a20c0a23484d6e8d8f20e2", "filename": "editors/code/package.json", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=4647e89defd367a92d00d3bbb11c2463408bb3ad", "patch": "@@ -238,6 +238,11 @@\n                     \"type\": \"number\",\n                     \"default\": null,\n                     \"description\": \"Number of syntax trees rust-analyzer keeps in memory\"\n+                },\n+                \"rust-analyzer.displayInlayHints\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": true,\n+                    \"description\": \"Display additional type information in the editor\"\n                 }\n             }\n         },\n@@ -444,6 +449,15 @@\n                     \"light\": \"#000000\",\n                     \"highContrast\": \"#FFFFFF\"\n                 }\n+            },\n+            {\n+                \"id\": \"ralsp.inlayHint\",\n+                \"description\": \"Color for inlay hints\",\n+                \"defaults\": {\n+                    \"dark\": \"#A0A0A0F0\",\n+                    \"light\": \"#747474\",\n+                    \"highContrast\": \"#BEBEBE\"\n+                }\n             }\n         ]\n     }"}, {"sha": "c194bd2eaccc198131edf9db778d80011a8766f2", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=4647e89defd367a92d00d3bbb11c2463408bb3ad", "patch": "@@ -1,5 +1,6 @@\n import * as analyzerStatus from './analyzer_status';\n import * as applySourceChange from './apply_source_change';\n+import * as inlayHints from './inlay_hints';\n import * as joinLines from './join_lines';\n import * as matchingBrace from './matching_brace';\n import * as onEnter from './on_enter';\n@@ -15,5 +16,6 @@ export {\n     parentModule,\n     runnables,\n     syntaxTree,\n-    onEnter\n+    onEnter,\n+    inlayHints\n };"}, {"sha": "8154af8dc26357a9f803fc40d3dcf98d1c80fe72", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=4647e89defd367a92d00d3bbb11c2463408bb3ad", "patch": "@@ -0,0 +1,104 @@\n+import * as vscode from 'vscode';\n+import { Range, TextDocumentChangeEvent, TextEditor } from 'vscode';\n+import { TextDocumentIdentifier } from 'vscode-languageclient';\n+import { Server } from '../server';\n+\n+interface InlayHintsParams {\n+    textDocument: TextDocumentIdentifier;\n+}\n+\n+interface InlayHint {\n+    range: Range;\n+    kind: string;\n+    label: string;\n+}\n+\n+const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n+    after: {\n+        color: new vscode.ThemeColor('ralsp.inlayHint')\n+    }\n+});\n+\n+export class HintsUpdater {\n+    private displayHints = true;\n+\n+    public async loadHints(\n+        editor: vscode.TextEditor | undefined\n+    ): Promise<void> {\n+        if (\n+            this.displayHints &&\n+            editor !== undefined &&\n+            this.isRustDocument(editor.document)\n+        ) {\n+            await this.updateDecorationsFromServer(\n+                editor.document.uri.toString(),\n+                editor\n+            );\n+        }\n+    }\n+\n+    public async toggleHintsDisplay(displayHints: boolean): Promise<void> {\n+        if (this.displayHints !== displayHints) {\n+            this.displayHints = displayHints;\n+\n+            if (displayHints) {\n+                return this.updateHints();\n+            } else {\n+                const editor = vscode.window.activeTextEditor;\n+                if (editor != null) {\n+                    return editor.setDecorations(typeHintDecorationType, []);\n+                }\n+            }\n+        }\n+    }\n+\n+    public async updateHints(cause?: TextDocumentChangeEvent): Promise<void> {\n+        if (!this.displayHints) {\n+            return;\n+        }\n+        const editor = vscode.window.activeTextEditor;\n+        if (editor == null) {\n+            return;\n+        }\n+        const document = cause == null ? editor.document : cause.document;\n+        if (!this.isRustDocument(document)) {\n+            return;\n+        }\n+\n+        return await this.updateDecorationsFromServer(\n+            document.uri.toString(),\n+            editor\n+        );\n+    }\n+\n+    private isRustDocument(document: vscode.TextDocument): boolean {\n+        return document && document.languageId === 'rust';\n+    }\n+\n+    private async updateDecorationsFromServer(\n+        documentUri: string,\n+        editor: TextEditor\n+    ): Promise<void> {\n+        const newHints = (await this.queryHints(documentUri)) || [];\n+        const newDecorations = newHints.map(hint => ({\n+            range: hint.range,\n+            renderOptions: { after: { contentText: `: ${hint.label}` } }\n+        }));\n+        return editor.setDecorations(typeHintDecorationType, newDecorations);\n+    }\n+\n+    private async queryHints(documentUri: string): Promise<InlayHint[] | null> {\n+        const request: InlayHintsParams = {\n+            textDocument: { uri: documentUri }\n+        };\n+        const client = Server.client;\n+        return client\n+            .onReady()\n+            .then(() =>\n+                client.sendRequest<InlayHint[] | null>(\n+                    'rust-analyzer/inlayHints',\n+                    request\n+                )\n+            );\n+    }\n+}"}, {"sha": "4d58a1a9361f22ae6d2733fc4eeda5d8e0fd299e", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=4647e89defd367a92d00d3bbb11c2463408bb3ad", "patch": "@@ -21,6 +21,7 @@ export class Config {\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n     public showWorkspaceLoadedNotification = true;\n     public lruCapacity: null | number = null;\n+    public displayInlayHints = true;\n     public cargoWatchOptions: CargoWatchOptions = {\n         enableOnStartup: 'ask',\n         trace: 'off',\n@@ -123,5 +124,9 @@ export class Config {\n         if (config.has('lruCapacity')) {\n             this.lruCapacity = config.get('lruCapacity') as number;\n         }\n+\n+        if (config.has('displayInlayHints')) {\n+            this.displayInlayHints = config.get('displayInlayHints') as boolean;\n+        }\n     }\n }"}, {"sha": "c6efc2e7e041c8fa802376a9fcb78e7f5ad6a97f", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4647e89defd367a92d00d3bbb11c2463408bb3ad/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=4647e89defd367a92d00d3bbb11c2463408bb3ad", "patch": "@@ -3,6 +3,7 @@ import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n import { CargoWatchProvider } from './commands/cargo_watch';\n+import { HintsUpdater } from './commands/inlay_hints';\n import {\n     interactivelyStartCargoWatch,\n     startCargoWatch\n@@ -147,6 +148,29 @@ export function activate(context: vscode.ExtensionContext) {\n \n     // Start the language server, finally!\n     startServer();\n+\n+    if (Server.config.displayInlayHints) {\n+        const hintsUpdater = new HintsUpdater();\n+        hintsUpdater.loadHints(vscode.window.activeTextEditor).then(() => {\n+            disposeOnDeactivation(\n+                vscode.window.onDidChangeActiveTextEditor(editor =>\n+                    hintsUpdater.loadHints(editor)\n+                )\n+            );\n+            disposeOnDeactivation(\n+                vscode.workspace.onDidChangeTextDocument(e =>\n+                    hintsUpdater.updateHints(e)\n+                )\n+            );\n+            disposeOnDeactivation(\n+                vscode.workspace.onDidChangeConfiguration(_ =>\n+                    hintsUpdater.toggleHintsDisplay(\n+                        Server.config.displayInlayHints\n+                    )\n+                )\n+            );\n+        });\n+    }\n }\n \n export function deactivate(): Thenable<void> {"}]}