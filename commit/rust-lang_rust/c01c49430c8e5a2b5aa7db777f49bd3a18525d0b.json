{"sha": "c01c49430c8e5a2b5aa7db777f49bd3a18525d0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMWM0OTQzMGM4ZTVhMmI1YWE3ZGI3NzdmNDliZDNhMTg1MjVkMGI=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T11:52:26Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T12:06:52Z"}, "message": "Explain how we encode enums at the encoding site", "tree": {"sha": "808ba744523894804d9f20ce41b3f74c3c52b987", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/808ba744523894804d9f20ce41b3f74c3c52b987"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b", "html_url": "https://github.com/rust-lang/rust/commit/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f646c1e43445f5edff741c8572cb7d52bdb97ce1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f646c1e43445f5edff741c8572cb7d52bdb97ce1", "html_url": "https://github.com/rust-lang/rust/commit/f646c1e43445f5edff741c8572cb7d52bdb97ce1"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "218b1dadebdad53fd99699ff3873cce5c66cb88b", "filename": "compiler/rustc_mir/src/const_eval/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01c49430c8e5a2b5aa7db777f49bd3a18525d0b/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmod.rs?ref=c01c49430c8e5a2b5aa7db777f49bd3a18525d0b", "patch": "@@ -69,10 +69,11 @@ fn const_to_valtree_inner<'tcx>(\n             let field = ecx.mplace_field(&place, i).unwrap();\n             const_to_valtree_inner(ecx, &field)\n         });\n+        // For enums, we preped their variant index before the variant's fields so we can figure out\n+        // the variant again when just seeing a valtree.\n+        let branches = variant.into_iter().chain(fields);\n         Some(ty::ValTree::Branch(\n-            ecx.tcx\n-                .arena\n-                .alloc_from_iter(variant.into_iter().chain(fields).collect::<Option<Vec<_>>>()?),\n+            ecx.tcx.arena.alloc_from_iter(branches.collect::<Option<Vec<_>>>()?),\n         ))\n     };\n     match place.layout.ty.kind() {"}]}