{"sha": "d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "node_id": "C_kwDOAAsO6NoAKGQxOTdjMWViNWJlZTJkNGMyYzI3Yzg5NWY1ZTQ5NmRmOTM1Y2NiZDA", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-08-19T19:50:38Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-08-22T12:24:14Z"}, "message": "migrate: `UnknownTool` error to `SessionDiagnostic`", "tree": {"sha": "636ddf3309e14e8693a7d5e51e9842c75da39382", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/636ddf3309e14e8693a7d5e51e9842c75da39382"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "html_url": "https://github.com/rust-lang/rust/commit/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee8c31e64d229cac4eba6d8f03bb70e16f34a14b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8c31e64d229cac4eba6d8f03bb70e16f34a14b", "html_url": "https://github.com/rust-lang/rust/commit/ee8c31e64d229cac4eba6d8f03bb70e16f34a14b"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "e0943323adee9f6efd6f5d8cbe29eb212fe791bf", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "patch": "@@ -393,3 +393,6 @@ lint_builtin_deref_nullptr = dereferencing a null pointer\n     .label = this code causes undefined behavior when executed\n \n lint_builtin_asm_labels = avoid using named labels in inline assembly\n+\n+lint_unknown_tool = unknown tool name `{$tool_name}` found in scoped lint: `{$tool_name}::{$lint_name}`\n+    .help = add `#![register_tool({$tool_name})]` to the crate root"}, {"sha": "3f4d856a1ccc70be5c83b5e283d9e9bb4044540d", "filename": "compiler/rustc_lint/src/errors.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "patch": "@@ -0,0 +1,13 @@\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(lint::unknown_tool, code = \"E0710\")]\n+pub struct UnknownTool {\n+    #[primary_span]\n+    pub span: Option<Span>,\n+    pub tool_name: String,\n+    pub lint_name: String,\n+    #[help]\n+    pub is_nightly_build: Option<()>,\n+}"}, {"sha": "3db88b7ace43940504b8b7aacfe8b9d4ea10f41a", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "patch": "@@ -1,3 +1,6 @@\n+// #![deny(rustc::diagnostic_outside_of_impl)]\n+// #![deny(rustc::untranslatable_diagnostic)]\n+//\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use rustc_ast as ast;\n@@ -23,6 +26,8 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use tracing::debug;\n \n+use crate::errors::UnknownTool;\n+\n fn lint_levels(tcx: TyCtxt<'_>, (): ()) -> LintLevelMap {\n     let store = unerased_lint_store(tcx);\n     let levels =\n@@ -485,22 +490,12 @@ impl<'s> LintLevelsBuilder<'s> {\n                     }\n \n                     &CheckLintNameResult::NoTool => {\n-                        let mut err = struct_span_err!(\n-                            sess,\n-                            tool_ident.map_or(DUMMY_SP, |ident| ident.span),\n-                            E0710,\n-                            \"unknown tool name `{}` found in scoped lint: `{}::{}`\",\n-                            tool_name.unwrap(),\n-                            tool_name.unwrap(),\n-                            pprust::path_to_string(&meta_item.path),\n-                        );\n-                        if sess.is_nightly_build() {\n-                            err.help(&format!(\n-                                \"add `#![register_tool({})]` to the crate root\",\n-                                tool_name.unwrap()\n-                            ));\n-                        }\n-                        err.emit();\n+                        sess.emit_err(UnknownTool {\n+                            span: tool_ident.map(|ident| ident.span),\n+                            tool_name: tool_name.unwrap().to_string(),\n+                            lint_name: pprust::path_to_string(&meta_item.path),\n+                            is_nightly_build: sess.is_nightly_build().then_some(()),\n+                        });\n                         continue;\n                     }\n "}, {"sha": "23fd5d5eea081670f9d8b37ecd7461239c9bdfe3", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d197c1eb5bee2d4c2c27c895f5e496df935ccbd0/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=d197c1eb5bee2d4c2c27c895f5e496df935ccbd0", "patch": "@@ -36,6 +36,8 @@\n #![feature(let_else)]\n #![feature(never_type)]\n #![recursion_limit = \"256\"]\n+// #![deny(rustc::diagnostic_outside_of_impl)]\n+// #![deny(rustc::untranslatable_diagnostic)]\n \n #[macro_use]\n extern crate rustc_middle;\n@@ -47,6 +49,7 @@ pub mod builtin;\n mod context;\n mod early;\n mod enum_intrinsics_non_enums;\n+mod errors;\n mod expect;\n pub mod hidden_unicode_codepoints;\n mod internal;"}]}