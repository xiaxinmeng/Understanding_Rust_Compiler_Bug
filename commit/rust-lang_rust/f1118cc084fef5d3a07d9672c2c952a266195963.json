{"sha": "f1118cc084fef5d3a07d9672c2c952a266195963", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMTE4Y2MwODRmZWY1ZDNhMDdkOTY3MmMyYzk1MmEyNjYxOTU5NjM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T16:07:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T22:12:30Z"}, "message": "rollup merge of #18324 : jakub-/eneedstest", "tree": {"sha": "3fff8d57f81d9e48b26bfee38fb6cfbcf2245d3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fff8d57f81d9e48b26bfee38fb6cfbcf2245d3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1118cc084fef5d3a07d9672c2c952a266195963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1118cc084fef5d3a07d9672c2c952a266195963", "html_url": "https://github.com/rust-lang/rust/commit/f1118cc084fef5d3a07d9672c2c952a266195963", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1118cc084fef5d3a07d9672c2c952a266195963/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dac3234bbaa40e2bf05c29b24682036c57df8a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/dac3234bbaa40e2bf05c29b24682036c57df8a40", "html_url": "https://github.com/rust-lang/rust/commit/dac3234bbaa40e2bf05c29b24682036c57df8a40"}, {"sha": "2c744c7f32a737be1c01a4fd717f18bef278a93c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c744c7f32a737be1c01a4fd717f18bef278a93c", "html_url": "https://github.com/rust-lang/rust/commit/2c744c7f32a737be1c01a4fd717f18bef278a93c"}], "stats": {"total": 278, "additions": 278, "deletions": 0}, "files": [{"sha": "07676679ef18f1a50bc927f6bf51710b421b86db", "filename": "src/test/compile-fail/issue-12863.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-12863.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-12863.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12863.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod foo { pub fn bar() {} }\n+\n+fn main() {\n+    match () {\n+        foo::bar => {} //~ ERROR `bar` is not an enum variant, struct or const\n+    }\n+}"}, {"sha": "92add18f9413c1faae4be1c80c32f13e56262e48", "filename": "src/test/compile-fail/issue-14721.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-14721.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-14721.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14721.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let foo = \"str\";\n+    println!(\"{}\", foo.desc); //~ ERROR attempted access of field `desc` on type `&str`,\n+                              //        but no field with that name was found\n+}"}, {"sha": "d9dfaac572066b6ab70c08b4ede661b505203500", "filename": "src/test/compile-fail/issue-16683.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-16683.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-16683.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16683.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait T<'a> {\n+    fn a(&'a self) -> &'a bool;\n+    fn b(&self) {\n+        self.a(); //~ ERROR mismatched types: expected `&'a Self`, found `&Self` (lifetime mismatch)\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "197319b6d4340f2ee5a95936ebad1fb26ee94249", "filename": "src/test/compile-fail/issue-17551.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+struct B<T>;\n+\n+fn main() {\n+    let foo = B; //~ ERROR unable to infer enough type information to locate the impl of the trait\n+    let closure = |:| foo;\n+}"}, {"sha": "4497c8088c31cba8a8f2c815b85d90251dfdd16d", "filename": "src/test/compile-fail/issue-18118.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-18118.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-18118.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18118.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    static z: &'static int = {\n+        let p = 3;\n+        &p\n+//~^ ERROR cannot borrow a local variable inside a static block, define a separate static instead\n+    };\n+}"}, {"sha": "c884f02892f167b61991d7c7f8f6d4c4da296f60", "filename": "src/test/compile-fail/issue-18252.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-18252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-18252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18252.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(struct_variant)]\n+\n+enum Foo {\n+    Variant { x: uint }\n+}\n+\n+fn main() {\n+    let f = Variant(42u); //~ ERROR expected function, found `Foo`\n+}"}, {"sha": "a5d23c70bd5e8a208c6bc05ff28db7025e5c3f86", "filename": "src/test/compile-fail/issue-6991.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-6991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-6991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6991.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static x: &'static uint = &1;\n+static y: uint = *x;\n+//~^ ERROR cannot refer to other statics by value,\n+//         use the address-of operator or a constant instead\n+fn main() {}"}, {"sha": "0ab551642a0c4b4638e2a8a33dfe0936710131ae", "filename": "src/test/compile-fail/issue-7867.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum A { B, C }\n+\n+mod foo { pub fn bar() {} }\n+\n+fn main() {\n+    match (true, false) {\n+        B => (), //~ ERROR expected `(bool,bool)`, found `A` (expected tuple, found enum A)\n+        _ => ()\n+    }\n+\n+    match &Some(42i) {\n+        Some(x) => (), //~ ERROR expected `&core::option::Option<int>`,\n+                       //        found `core::option::Option<<generic #4>>`\n+        None => ()     //~ ERROR expected `&core::option::Option<int>`,\n+                       //        found `core::option::Option<<generic #5>>`\n+    }\n+}"}, {"sha": "9d98a7ac12f9ba1809d7845d3630ea3a3fde7ac9", "filename": "src/test/run-pass/closure-syntax.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n #![allow(dead_code)]\n+#![feature(unboxed_closures, unboxed_closure_sugar)]\n+\n+// compile-flags:-g\n \n fn foo<T>() {}\n \n@@ -82,6 +85,9 @@ fn bar<'b>() {\n     // issue #13490\n     let _ = || -> ! loop {};\n     let _ = proc() -> ! loop {};\n+\n+    // issue #17021\n+    let c = box |&:| {};\n }\n \n struct B<T>;"}, {"sha": "4d64103e502240cd991c39fa8ee983b4d0ecdc73", "filename": "src/test/run-pass/issue-12028.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-12028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-12028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12028.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Hash<H> {\n+    fn hash2(&self, hasher: &H) -> u64;\n+}\n+\n+trait Stream {\n+    fn input(&mut self, bytes: &[u8]);\n+    fn result(&self) -> u64;\n+}\n+\n+trait StreamHasher<S: Stream> {\n+    fn stream(&self) -> S;\n+}\n+\n+//////////////////////////////////////////////////////////////////////////////\n+\n+trait StreamHash<S: Stream, H: StreamHasher<S>>: Hash<H> {\n+    fn input_stream(&self, stream: &mut S);\n+}\n+\n+impl<S: Stream, H: StreamHasher<S>> Hash<H> for u8 {\n+    fn hash2(&self, hasher: &H) -> u64 {\n+        let mut stream = hasher.stream();\n+        self.input_stream(&mut stream);\n+        stream.result()\n+    }\n+}\n+\n+impl<S: Stream, H: StreamHasher<S>> StreamHash<S, H> for u8 {\n+    fn input_stream(&self, stream: &mut S) {\n+        stream.input([*self]);\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "f93347f4366c69e9939322c4594d4d7666988fb5", "filename": "src/test/run-pass/issue-14901.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-14901.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-14901.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14901.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io::Reader;\n+\n+enum Wrapper<'a> {\n+    WrapReader(&'a Reader + 'a)\n+}\n+\n+trait Wrap<'a> {\n+    fn wrap(self) -> Wrapper<'a>;\n+}\n+\n+impl<'a, R: Reader> Wrap<'a> for &'a mut R {\n+    fn wrap(self) -> Wrapper<'a> {\n+        WrapReader(self as &'a mut Reader)\n+    }\n+}\n+\n+pub fn main() {}"}, {"sha": "77eba0245b1c34a294db639b01a1dedab1ba6e91", "filename": "src/test/run-pass/issue-16560.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-16560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-16560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16560.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+use std::mem;\n+\n+fn main() {\n+    let y = 0u8;\n+    let closure = move |&: x| y + x;\n+\n+    // Check that both closures are capturing by value\n+    assert_eq!(1, mem::size_of_val(&closure));\n+\n+    spawn(proc() {\n+        let ok = closure;\n+    })\n+}"}, {"sha": "1bfa79b8a110d209c218d97792399687deb033ec", "filename": "src/test/run-pass/issue-16668.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1118cc084fef5d3a07d9672c2c952a266195963/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16668.rs?ref=f1118cc084fef5d3a07d9672c2c952a266195963", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+struct Parser<'a, I, O> {\n+    parse: Box<FnMut<(I,), Result<O, String>> + 'a>\n+}\n+\n+impl<'a, I, O: 'a> Parser<'a, I, O> {\n+    fn compose<K: 'a>(mut self, mut rhs: Parser<O, K>) -> Parser<'a, I, K> {\n+        Parser {\n+            parse: box move |&mut: x: I| {\n+                match self.parse.call_mut((x,)) {\n+                    Ok(r) => rhs.parse.call_mut((r,)),\n+                    Err(e) => Err(e)\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn main() {}"}]}