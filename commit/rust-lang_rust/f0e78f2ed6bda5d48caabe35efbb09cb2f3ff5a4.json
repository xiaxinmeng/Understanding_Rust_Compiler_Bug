{"sha": "f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTc4ZjJlZDZiZGE1ZDQ4Y2FhYmUzNWVmYmIwOWNiMmYzZmY1YTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-10T17:06:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-10T17:06:11Z"}, "message": "Merge #7961\n\n7961: add user docs for ssr assist r=JoshMcguigan a=JoshMcguigan\n\n@matklad \r\n\r\nThis is a small follow up on #7874, adding user docs for the SSR assist functionality. Since most other assists aren't handled this way I wasn't sure exactly how we wanted to document this, so feel free to suggest alternatives.\n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>", "tree": {"sha": "142afc1b56d1ae888f41c897fb6c6b1de73a6414", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/142afc1b56d1ae888f41c897fb6c6b1de73a6414"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSPyDCRBK7hj4Ov3rIwAAdHIIADCAcoJ6O3n8vcJ9oFsudSfK\nRIm2JKJ+/P6cJDjD8GrBAcK69CqORBUKr5II2AkbQsl/NS90FUaf/lp7h5Z9N3L8\nSz+xenlhcPbP8sDXC82cofIvM+8Cys5crxIbrrKdfJypEjHlmgyN4wgH2yh6/Y3A\nsXooYAj80BzxhDJbBaxCu5pkpGcY9MSNvcpJ1xfnvynXeZGkC2LmM8VAr7eRVdh2\naAeZ3U/AlOoPRHrYlwkWKIwCYGflq2HPtbkQhhI6oAoBKLHS9p3oEm6TeoSXa/05\nD454EnQCmjap1p30zfBgd0niHJOQ2dEPpMSalYb+LvLowmY03zHw9G+vhuO3hMA=\n=KTWD\n-----END PGP SIGNATURE-----\n", "payload": "tree 142afc1b56d1ae888f41c897fb6c6b1de73a6414\nparent b35559a2460e7f0b2b79a7029db0c5d4e0acdb44\nparent 40587b08a0e0513d06eeffa9eeee9a78ac23100d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615395971 +0000\ncommitter GitHub <noreply@github.com> 1615395971 +0000\n\nMerge #7961\n\n7961: add user docs for ssr assist r=JoshMcguigan a=JoshMcguigan\n\n@matklad \r\n\r\nThis is a small follow up on #7874, adding user docs for the SSR assist functionality. Since most other assists aren't handled this way I wasn't sure exactly how we wanted to document this, so feel free to suggest alternatives.\n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4", "html_url": "https://github.com/rust-lang/rust/commit/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b35559a2460e7f0b2b79a7029db0c5d4e0acdb44", "url": "https://api.github.com/repos/rust-lang/rust/commits/b35559a2460e7f0b2b79a7029db0c5d4e0acdb44", "html_url": "https://github.com/rust-lang/rust/commit/b35559a2460e7f0b2b79a7029db0c5d4e0acdb44"}, {"sha": "40587b08a0e0513d06eeffa9eeee9a78ac23100d", "url": "https://api.github.com/repos/rust-lang/rust/commits/40587b08a0e0513d06eeffa9eeee9a78ac23100d", "html_url": "https://github.com/rust-lang/rust/commit/40587b08a0e0513d06eeffa9eeee9a78ac23100d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "00585f448c8211b5d89d71d1101af07167e87e35", "filename": "crates/ide_ssr/src/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4/crates%2Fide_ssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4/crates%2Fide_ssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Flib.rs?ref=f0e78f2ed6bda5d48caabe35efbb09cb2f3ff5a4", "patch": "@@ -57,6 +57,15 @@\n //\n // | VS Code | **Rust Analyzer: Structural Search Replace**\n // |===\n+//\n+// Also available as an assist, by writing a comment containing the structural\n+// search and replace rule. You will only see the assist if the comment can\n+// be parsed as a valid structural search and replace rule.\n+//\n+// ```rust\n+// // Place the cursor on the line below to see the assist \ud83d\udca1.\n+// // foo($a, $b) ==>> ($a).foo($b)\n+// ```\n \n mod from_comment;\n mod matching;"}]}