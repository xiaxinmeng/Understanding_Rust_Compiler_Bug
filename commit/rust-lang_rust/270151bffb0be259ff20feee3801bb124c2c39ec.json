{"sha": "270151bffb0be259ff20feee3801bb124c2c39ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MDE1MWJmZmIwYmUyNTlmZjIwZmVlZTM4MDFiYjEyNGMyYzM5ZWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-11T23:33:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-01-27T11:46:18Z"}, "message": "Add generate-old-style-files option to rustdoc", "tree": {"sha": "eee429f5d63bd5218024cb343db153b0fe61da98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eee429f5d63bd5218024cb343db153b0fe61da98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/270151bffb0be259ff20feee3801bb124c2c39ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/270151bffb0be259ff20feee3801bb124c2c39ec", "html_url": "https://github.com/rust-lang/rust/commit/270151bffb0be259ff20feee3801bb124c2c39ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/270151bffb0be259ff20feee3801bb124c2c39ec/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac727772bd91b6e35b624e3252e6a6bd681c70b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac727772bd91b6e35b624e3252e6a6bd681c70b", "html_url": "https://github.com/rust-lang/rust/commit/1ac727772bd91b6e35b624e3252e6a6bd681c70b"}], "stats": {"total": 102, "additions": 77, "deletions": 25}, "files": [{"sha": "0028997a7df0924059d4292537841c17f362c45c", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -317,7 +317,8 @@ fn invoke_rustdoc(builder: &Builder, compiler: Compiler, target: Interned<String\n         .arg(\"-o\").arg(&out)\n         .arg(&path)\n         .arg(\"--markdown-css\")\n-        .arg(\"../rust.css\");\n+        .arg(\"../rust.css\")\n+        .arg(\"--generate-redirect-pages\");\n \n     builder.run(&mut cmd);\n }\n@@ -491,6 +492,7 @@ impl Step for Std {\n             cargo.arg(\"--\")\n                  .arg(\"--markdown-css\").arg(\"rust.css\")\n                  .arg(\"--markdown-no-toc\")\n+                 .arg(\"--generate-redirect-pages\")\n                  .arg(\"--index-page\").arg(&builder.src.join(\"src/doc/index.md\"));\n \n             builder.run(&mut cargo);"}, {"sha": "0ddf96695c4d2a9b50b095aef517e1e8598599a0", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -192,6 +192,8 @@ pub struct RenderOptions {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     pub generate_search_filter: bool,\n+    /// Option (disabled by default) to generate files used by RLS and some other tools.\n+    pub generate_redirect_pages: bool,\n }\n \n impl Options {\n@@ -436,6 +438,7 @@ impl Options {\n         let static_root_path = matches.opt_str(\"static-root-path\");\n         let generate_search_filter = !matches.opt_present(\"disable-per-crate-search\");\n         let persist_doctests = matches.opt_str(\"persist-doctests\").map(PathBuf::from);\n+        let generate_redirect_pages = matches.opt_present(\"generate-redirect-pages\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -480,6 +483,7 @@ impl Options {\n                 markdown_css,\n                 markdown_playground_url,\n                 generate_search_filter,\n+                generate_redirect_pages,\n             }\n         })\n     }"}, {"sha": "179ae56d9b699d9f1d962dae63fc18edde547dcf", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -33,7 +33,7 @@ use std::default::Default;\n use std::error;\n use std::fmt::{self, Display, Formatter, Write as FmtWrite};\n use std::ffi::OsStr;\n-use std::fs::{self, File};\n+use std::fs::{self, File, OpenOptions};\n use std::io::prelude::*;\n use std::io::{self, BufWriter, BufReader};\n use std::mem;\n@@ -136,6 +136,8 @@ struct SharedContext {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     pub generate_search_filter: bool,\n+    /// Option disabled by default to generate files used by RLS and some other tools.\n+    pub generate_redirect_pages: bool,\n }\n \n impl SharedContext {\n@@ -504,6 +506,7 @@ pub fn run(mut krate: clean::Crate,\n         resource_suffix,\n         static_root_path,\n         generate_search_filter,\n+        generate_redirect_pages,\n         ..\n     } = options;\n \n@@ -533,6 +536,7 @@ pub fn run(mut krate: clean::Crate,\n         resource_suffix,\n         static_root_path,\n         generate_search_filter,\n+        generate_redirect_pages,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -2229,6 +2233,27 @@ impl Context {\n                 if !self.render_redirect_pages {\n                     all.append(full_path(self, &item), &item_type);\n                 }\n+                if self.shared.generate_redirect_pages {\n+                    // Redirect from a sane URL using the namespace to Rustdoc's\n+                    // URL for the page.\n+                    let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());\n+                    let redir_dst = self.dst.join(redir_name);\n+                    if let Ok(redirect_out) = OpenOptions::new().create_new(true)\n+                                                                .write(true)\n+                                                                .open(&redir_dst) {\n+                        let mut redirect_out = BufWriter::new(redirect_out);\n+                        try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n+                    }\n+                     // If the item is a macro, redirect from the old macro URL (with !)\n+                    // to the new one (without).\n+                    if item_type == ItemType::Macro {\n+                        let redir_name = format!(\"{}.{}!.html\", item_type, name);\n+                        let redir_dst = self.dst.join(redir_name);\n+                        let redirect_out = try_err!(File::create(&redir_dst), &redir_dst);\n+                        let mut redirect_out = BufWriter::new(redirect_out);\n+                        try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n+                    }\n+                }\n             }\n         }\n         Ok(())"}, {"sha": "290f958640430aebc09b0f32cc59fffa03370f6b", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -348,6 +348,11 @@ fn opts() -> Vec<RustcOptGroup> {\n                        \"Directory to persist doctest executables into\",\n                        \"PATH\")\n         }),\n+        stable(\"generate-redirect-pages\", |o| {\n+            o.optflag(\"\",\n+                      \"generate-redirect-pages\",\n+                      \"Generate extra pages to support legacy URLs and tool links\")\n+        }),\n     ]\n }\n "}, {"sha": "e023e79fcde6bcec80ce046b6326b5277258767a", "filename": "src/test/rustdoc/issue-19190.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-19190.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags:--generate-redirect-pages\n+\n use std::ops::Deref;\n \n pub struct Foo;\n@@ -13,6 +15,9 @@ impl Deref for Bar {\n     fn deref(&self) -> &Foo { loop {} }\n }\n \n+// @has issue_19190/Bar.t.html\n // @has issue_19190/struct.Bar.html\n+// @has - '//*[@id=\"foo.v\"]' 'fn foo(&self)'\n // @has - '//*[@id=\"method.foo\"]' 'fn foo(&self)'\n+// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "33f7646ced68b4ef1f13442ff2b4cd3f23edc2cc", "filename": "src/test/rustdoc/issue-35169-2.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -24,10 +24,17 @@ impl DerefMut for Bar {\n }\n \n // @has issue_35169_2/struct.Bar.html\n+// @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'\n+// @has - '//*[@id=\"by_explicit_ref.v\"]' 'fn by_explicit_ref(self: &Foo)'\n // @has - '//*[@id=\"method.by_explicit_ref\"]' 'fn by_explicit_ref(self: &Foo)'\n+// @has - '//*[@id=\"by_mut_ref.v\"]' 'fn by_mut_ref(&mut self)'\n // @has - '//*[@id=\"method.by_mut_ref\"]' 'fn by_mut_ref(&mut self)'\n+// @has - '//*[@id=\"by_explicit_mut_ref.v\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n // @has - '//*[@id=\"method.by_explicit_mut_ref\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n+// @!has - '//*[@id=\"by_explicit_box.v\"]' 'fn by_explicit_box(self: Box<Foo>)'\n // @!has - '//*[@id=\"method.by_explicit_box\"]' 'fn by_explicit_box(self: Box<Foo>)'\n+// @!has - '//*[@id=\"by_explicit_self_box.v\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n // @!has - '//*[@id=\"method.by_explicit_self_box\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n+// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "04fffc40572a6b5515cfad66c6f99b924c78261f", "filename": "src/test/rustdoc/issue-35169.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -19,10 +19,17 @@ impl Deref for Bar {\n }\n \n // @has issue_35169/struct.Bar.html\n+// @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'\n+// @has - '//*[@id=\"by_explicit_ref.v\"]' 'fn by_explicit_ref(self: &Foo)'\n // @has - '//*[@id=\"method.by_explicit_ref\"]' 'fn by_explicit_ref(self: &Foo)'\n+// @!has - '//*[@id=\"by_mut_ref.v\"]' 'fn by_mut_ref(&mut self)'\n // @!has - '//*[@id=\"method.by_mut_ref\"]' 'fn by_mut_ref(&mut self)'\n+// @!has - '//*[@id=\"by_explicit_mut_ref.v\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n // @!has - '//*[@id=\"method.by_explicit_mut_ref\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n+// @!has - '//*[@id=\"by_explicit_box.v\"]' 'fn by_explicit_box(self: Box<Foo>)'\n // @!has - '//*[@id=\"method.by_explicit_box\"]' 'fn by_explicit_box(self: Box<Foo>)'\n+// @!has - '//*[@id=\"by_explicit_self_box.v\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n // @!has - '//*[@id=\"method.by_explicit_self_box\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n+// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "fb6697e18fbc4facff6a254146ca30eb83fa91f5", "filename": "src/test/rustdoc/old-style-files.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fold-style-files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fold-style-files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fold-style-files.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_name = \"foo\"]\n-\n-// @has foo/macro.bar.html\n-// @!has foo/macro.bar!.html\n-// @!has foo/bar.m.html\n-#[macro_export]\n-macro_rules! bar {\n-    () => {}\n-}\n-\n-// @has foo/struct.Bar.html\n-// @!has foo/Bar.t.html\n-pub struct Bar;"}, {"sha": "bfe116acffc1e9c8e4cac0e5061c563f8ad56fdf", "filename": "src/test/rustdoc/structfields.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fstructfields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fstructfields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstructfields.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -1,5 +1,8 @@\n+// compile-flags:--generate-redirect-pages\n+\n // @has structfields/Foo.t.html\n // @has - struct.Foo.html\n+// @has structfields/struct.Foo.html\n pub struct Foo {\n     // @has - //pre \"pub a: ()\"\n     pub a: (),\n@@ -13,13 +16,17 @@ pub struct Foo {\n     pub d: usize,\n }\n \n+// @has structfields/Bar.t.html\n+// @has - struct.Bar.html\n // @has structfields/struct.Bar.html\n pub struct Bar {\n     // @has - //pre \"pub a: ()\"\n     pub a: (),\n     // @!has - //pre \"// some fields omitted\"\n }\n \n+// @has structfields/Qux.t.html\n+// @has - enum.Qux.html\n // @has structfields/enum.Qux.html\n pub enum Qux {\n     Quz {"}, {"sha": "d473dd8f428d2ed8af71d6dd496f0e76243dcfe0", "filename": "src/test/rustdoc/without-redirect.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/270151bffb0be259ff20feee3801bb124c2c39ec/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs?ref=270151bffb0be259ff20feee3801bb124c2c39ec", "patch": "@@ -0,0 +1,13 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/macro.bar.html\n+// @!has foo/macro.bar!.html\n+// @!has foo/bar.m.html\n+#[macro_export]\n+macro_rules! bar {\n+    () => {}\n+}\n+\n+// @has foo/struct.Bar.html\n+// @!has foo/Bar.t.html\n+pub struct Bar;"}]}