{"sha": "9fde3e9b94e19426a319af33b330a5cb87340c46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGUzZTliOTRlMTk0MjZhMzE5YWYzM2IzMzBhNWNiODczNDBjNDY=", "commit": {"author": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-19T03:40:07Z"}, "committer": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-19T03:40:07Z"}, "message": "Use libc's syscall() and NR_GETENTROPY const", "tree": {"sha": "0382e05e52c36dcc295828abb5222426cdb0aa48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0382e05e52c36dcc295828abb5222426cdb0aa48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fde3e9b94e19426a319af33b330a5cb87340c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fde3e9b94e19426a319af33b330a5cb87340c46", "html_url": "https://github.com/rust-lang/rust/commit/9fde3e9b94e19426a319af33b330a5cb87340c46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fde3e9b94e19426a319af33b330a5cb87340c46/comments", "author": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314062b70137a634dcf50e109120186e7542dced", "url": "https://api.github.com/repos/rust-lang/rust/commits/314062b70137a634dcf50e109120186e7542dced", "html_url": "https://github.com/rust-lang/rust/commit/314062b70137a634dcf50e109120186e7542dced"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "13965ce810ddc1bbd37a1db10975aa75e61dd526", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9fde3e9b94e19426a319af33b330a5cb87340c46/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fde3e9b94e19426a319af33b330a5cb87340c46/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=9fde3e9b94e19426a319af33b330a5cb87340c46", "patch": "@@ -204,12 +204,6 @@ mod imp {\n         _dummy: (),\n     }\n \n-    extern \"C\" {\n-        fn syscall(number: c_long, ...) -> c_long;\n-    }\n-\n-    const NR_GETENTROPY: c_long = 7;\n-\n     impl OsRng {\n         /// Create a new `OsRng`.\n         pub fn new() -> io::Result<OsRng> {\n@@ -232,7 +226,7 @@ mod imp {\n             // getentropy(2) permits a maximum buffer size of 256 bytes\n             for s in v.chunks_mut(256) {\n                 let ret = unsafe {\n-                    syscall(NR_GETENTROPY, s.as_mut_ptr(), s.len())\n+                    libc::syscall(libc::NR_GETENTROPY, s.as_mut_ptr(), s.len())\n                 };\n                 if ret == -1 {\n                     panic!(\"unexpected getentropy error: {}\", errno());"}]}