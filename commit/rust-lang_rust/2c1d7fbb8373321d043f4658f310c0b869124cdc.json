{"sha": "2c1d7fbb8373321d043f4658f310c0b869124cdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMWQ3ZmJiODM3MzMyMWQwNDNmNDY1OGYzMTBjMGI4NjkxMjRjZGM=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-17T11:22:02Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:10:39Z"}, "message": "rustc_codegen_llvm: use safe references for SectionIterator.", "tree": {"sha": "33a387612c8a7c079e1223060b8fa822def80755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33a387612c8a7c079e1223060b8fa822def80755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c1d7fbb8373321d043f4658f310c0b869124cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1d7fbb8373321d043f4658f310c0b869124cdc", "html_url": "https://github.com/rust-lang/rust/commit/2c1d7fbb8373321d043f4658f310c0b869124cdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c1d7fbb8373321d043f4658f310c0b869124cdc/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22eebaf2b1b59c3eed52bd5621c63123af654ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22eebaf2b1b59c3eed52bd5621c63123af654ad", "html_url": "https://github.com/rust-lang/rust/commit/e22eebaf2b1b59c3eed52bd5621c63123af654ad"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "4b1e8e0626131cc31229019ab19c8658ae37a4ba", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2c1d7fbb8373321d043f4658f310c0b869124cdc/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1d7fbb8373321d043f4658f310c0b869124cdc/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=2c1d7fbb8373321d043f4658f310c0b869124cdc", "patch": "@@ -400,8 +400,7 @@ extern { pub type MemoryBuffer; }\n pub struct PassManager<'a>(InvariantOpaque<'a>);\n extern { pub type PassManagerBuilder; }\n extern { pub type ObjectFile; }\n-extern { pub type SectionIterator; }\n-pub type SectionIteratorRef = *mut SectionIterator;\n+pub struct SectionIterator<'a>(InvariantOpaque<'a>);\n extern { pub type Pass; }\n extern { pub type TargetMachine; }\n extern { pub type Archive; }\n@@ -1146,18 +1145,18 @@ extern \"C\" {\n     pub fn LLVMDisposeObjectFile(ObjFile: &'static mut ObjectFile);\n \n     /// Enumerates the sections in an object file.\n-    pub fn LLVMGetSections(ObjFile: &ObjectFile) -> SectionIteratorRef;\n+    pub fn LLVMGetSections(ObjFile: &'a ObjectFile) -> &'a mut SectionIterator<'a>;\n     /// Destroys a section iterator.\n-    pub fn LLVMDisposeSectionIterator(SI: SectionIteratorRef);\n+    pub fn LLVMDisposeSectionIterator(SI: &'a mut SectionIterator<'a>);\n     /// Returns true if the section iterator is at the end of the section\n     /// list:\n-    pub fn LLVMIsSectionIteratorAtEnd(ObjFile: &ObjectFile, SI: SectionIteratorRef) -> Bool;\n+    pub fn LLVMIsSectionIteratorAtEnd(ObjFile: &'a ObjectFile, SI: &SectionIterator<'a>) -> Bool;\n     /// Moves the section iterator to point to the next section.\n-    pub fn LLVMMoveToNextSection(SI: SectionIteratorRef);\n+    pub fn LLVMMoveToNextSection(SI: &SectionIterator);\n     /// Returns the current section size.\n-    pub fn LLVMGetSectionSize(SI: SectionIteratorRef) -> c_ulonglong;\n+    pub fn LLVMGetSectionSize(SI: &SectionIterator) -> c_ulonglong;\n     /// Returns the current section contents as a string buffer.\n-    pub fn LLVMGetSectionContents(SI: SectionIteratorRef) -> *const c_char;\n+    pub fn LLVMGetSectionContents(SI: &SectionIterator) -> *const c_char;\n \n     /// Reads the given file and returns it as a memory buffer. Use\n     /// LLVMDisposeMemoryBuffer() to get rid of it.\n@@ -1481,7 +1480,7 @@ extern \"C\" {\n     pub fn LLVMRustArchiveIteratorFree(AIR: ArchiveIteratorRef);\n     pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n-    pub fn LLVMRustGetSectionName(SI: SectionIteratorRef, data: &mut *const c_char) -> size_t;\n+    pub fn LLVMRustGetSectionName(SI: &SectionIterator, data: &mut *const c_char) -> size_t;\n \n     pub fn LLVMRustWriteTwineToString(T: &Twine, s: &RustString);\n "}, {"sha": "558d2a2bc87b363f634ccca1b2744f5709d42d4f", "filename": "src/librustc_codegen_llvm/llvm/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2c1d7fbb8373321d043f4658f310c0b869124cdc/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1d7fbb8373321d043f4658f310c0b869124cdc/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs?ref=2c1d7fbb8373321d043f4658f310c0b869124cdc", "patch": "@@ -204,19 +204,19 @@ impl Drop for ObjectFile {\n \n // Memory-managed interface to section iterators.\n \n-pub struct SectionIter {\n-    pub llsi: SectionIteratorRef,\n+pub struct SectionIter<'a> {\n+    pub llsi: &'a mut SectionIterator<'a>,\n }\n \n-impl Drop for SectionIter {\n+impl Drop for SectionIter<'a> {\n     fn drop(&mut self) {\n         unsafe {\n-            LLVMDisposeSectionIterator(self.llsi);\n+            LLVMDisposeSectionIterator(&mut *(self.llsi as *mut _));\n         }\n     }\n }\n \n-pub fn mk_section_iter(llof: &ffi::ObjectFile) -> SectionIter {\n+pub fn mk_section_iter(llof: &'a ffi::ObjectFile) -> SectionIter<'a> {\n     unsafe { SectionIter { llsi: LLVMGetSections(llof) } }\n }\n "}]}