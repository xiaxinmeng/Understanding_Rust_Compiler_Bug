{"sha": "a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YmJiNWJhYjRlYTQ5YmMwZjRjYjk2MzhmMjdhN2ViNjhlMWJkYjY=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-18T21:51:51Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-18T21:51:51Z"}, "message": "Fix underflow bug in core::str::Searcher::new for haystacks of length < 20", "tree": {"sha": "5018555b946ec5da5278afb7ef35bc54d4b4e451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5018555b946ec5da5278afb7ef35bc54d4b4e451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6", "html_url": "https://github.com/rust-lang/rust/commit/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98ec85f19e42edafc3d82a737f0ccbd1b7f4ff6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/98ec85f19e42edafc3d82a737f0ccbd1b7f4ff6c", "html_url": "https://github.com/rust-lang/rust/commit/98ec85f19e42edafc3d82a737f0ccbd1b7f4ff6c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "800e2dcc278939bd1e70e476cb16fe8de527ed8b", "filename": "src/libcore/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=a4bbb5bab4ea49bc0f4cb9638f27a7eb68e1bdb6", "patch": "@@ -562,7 +562,7 @@ enum Searcher {\n impl Searcher {\n     fn new(haystack: &[u8], needle: &[u8]) -> Searcher {\n         // FIXME: Tune this.\n-        if needle.len() > haystack.len() - 20 {\n+        if needle.len() + 20 > haystack.len() {\n             Naive(NaiveSearcher::new())\n         } else {\n             let searcher = TwoWaySearcher::new(needle);"}]}