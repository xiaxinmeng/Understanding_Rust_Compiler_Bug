{"sha": "c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NTI2ZmVjOGFlM2JiYWIwOGU3YzRhNTlmOWI0YzllNjI3ZmJkZGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-04-21T08:40:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-04-21T08:40:07Z"}, "message": "update ref test", "tree": {"sha": "4d7ec9ccd8c55aac868fd2cde9e646714136684f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d7ec9ccd8c55aac868fd2cde9e646714136684f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda", "html_url": "https://github.com/rust-lang/rust/commit/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "074972150f5bf88152349279cb17f161c2f05988", "url": "https://api.github.com/repos/rust-lang/rust/commits/074972150f5bf88152349279cb17f161c2f05988", "html_url": "https://github.com/rust-lang/rust/commit/074972150f5bf88152349279cb17f161c2f05988"}], "stats": {"total": 143, "additions": 72, "deletions": 71}, "files": [{"sha": "3e0867d9b09d9833c5d9c45ab062b16fc1b5657a", "filename": "src/test/mir-opt/nll/region-subtyping-basic/32bit/rustc.main.nll.0.mir", "status": "modified", "additions": 72, "deletions": 71, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir?ref=c7526fec8ae3bbab08e7c4a59f9b4c9e627fbdda", "patch": "@@ -7,164 +7,165 @@\n | Inferred Region Values\n | '_#0r | U0 | {bb0[0..=8], bb1[0], bb2[0..=8], bb3[0], bb4[0..=1], bb5[0..=3], bb6[0..=3], bb7[0..=2], bb8[0..=5], '_#0r, '_#1r}\n | '_#1r | U0 | {bb0[0..=8], bb1[0], bb2[0..=8], bb3[0], bb4[0..=1], bb5[0..=3], bb6[0..=3], bb7[0..=2], bb8[0..=5], '_#1r}\n-| '_#2r | U0 | {bb2[0..=8], bb3[0], bb5[0..=2]}\n-| '_#3r | U0 | {bb2[1..=8], bb3[0], bb5[0..=2]}\n-| '_#4r | U0 | {bb2[4..=8], bb3[0], bb5[0..=2]}\n+| '_#2r | U0 | {}\n+| '_#3r | U0 | {bb2[0..=8], bb3[0], bb5[0..=2]}\n+| '_#4r | U0 | {bb2[1..=8], bb3[0], bb5[0..=2]}\n+| '_#5r | U0 | {bb2[4..=8], bb3[0], bb5[0..=2]}\n |\n | Inference Constraints\n | '_#0r live at {bb0[0..=8], bb1[0], bb2[0..=8], bb3[0], bb4[0..=1], bb5[0..=3], bb6[0..=3], bb7[0..=2], bb8[0..=5]}\n | '_#1r live at {bb0[0..=8], bb1[0], bb2[0..=8], bb3[0], bb4[0..=1], bb5[0..=3], bb6[0..=3], bb7[0..=2], bb8[0..=5]}\n-| '_#2r live at {bb2[0]}\n-| '_#3r live at {bb2[1..=3]}\n-| '_#4r live at {bb2[4..=8], bb3[0], bb5[0..=2]}\n-| '_#2r: '_#3r due to Assignment at Single(bb2[0])\n-| '_#3r: '_#4r due to Assignment at Single(bb2[3])\n+| '_#3r live at {bb2[0]}\n+| '_#4r live at {bb2[1..=3]}\n+| '_#5r live at {bb2[4..=8], bb3[0], bb5[0..=2]}\n+| '_#3r: '_#4r due to Assignment at Single(bb2[0])\n+| '_#4r: '_#5r due to Assignment at Single(bb2[3])\n |\n fn main() -> () {\n-    let mut _0: ();                      // return place in scope 0 at $DIR/region-subtyping-basic.rs:14:11: 14:11\n-    let mut _1: [usize; Const { ty: usize, val: Value(Scalar(0x00000003)) }]; // in scope 0 at $DIR/region-subtyping-basic.rs:15:9: 15:14\n-    let _3: usize;                       // in scope 0 at $DIR/region-subtyping-basic.rs:16:16: 16:17\n-    let mut _4: usize;                   // in scope 0 at $DIR/region-subtyping-basic.rs:16:14: 16:18\n-    let mut _5: bool;                    // in scope 0 at $DIR/region-subtyping-basic.rs:16:14: 16:18\n-    let mut _7: bool;                    // in scope 0 at $DIR/region-subtyping-basic.rs:18:8: 18:12\n-    let _8: bool;                        // in scope 0 at $DIR/region-subtyping-basic.rs:19:9: 19:18\n-    let mut _9: usize;                   // in scope 0 at $DIR/region-subtyping-basic.rs:19:15: 19:17\n-    let _10: bool;                       // in scope 0 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n+    let mut _0: ();                      // return place in scope 0 at $DIR/region-subtyping-basic.rs:16:11: 16:11\n+    let mut _1: [usize; Const { ty: usize, val: Value(Scalar(0x00000003)) }]; // in scope 0 at $DIR/region-subtyping-basic.rs:17:9: 17:14\n+    let _3: usize;                       // in scope 0 at $DIR/region-subtyping-basic.rs:18:16: 18:17\n+    let mut _4: usize;                   // in scope 0 at $DIR/region-subtyping-basic.rs:18:14: 18:18\n+    let mut _5: bool;                    // in scope 0 at $DIR/region-subtyping-basic.rs:18:14: 18:18\n+    let mut _7: bool;                    // in scope 0 at $DIR/region-subtyping-basic.rs:20:8: 20:12\n+    let _8: bool;                        // in scope 0 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n+    let mut _9: usize;                   // in scope 0 at $DIR/region-subtyping-basic.rs:21:15: 21:17\n+    let _10: bool;                       // in scope 0 at $DIR/region-subtyping-basic.rs:23:9: 23:18\n     scope 1 {\n-        debug v => _1;                   // in scope 1 at $DIR/region-subtyping-basic.rs:15:9: 15:14\n-        let _2: &'_#3r usize;            // in scope 1 at $DIR/region-subtyping-basic.rs:16:9: 16:10\n+        debug v => _1;                   // in scope 1 at $DIR/region-subtyping-basic.rs:17:9: 17:14\n+        let _2: &'_#4r usize;            // in scope 1 at $DIR/region-subtyping-basic.rs:18:9: 18:10\n         scope 2 {\n-            debug p => _2;               // in scope 2 at $DIR/region-subtyping-basic.rs:16:9: 16:10\n-            let _6: &'_#4r usize;        // in scope 2 at $DIR/region-subtyping-basic.rs:17:9: 17:10\n+            debug p => _2;               // in scope 2 at $DIR/region-subtyping-basic.rs:18:9: 18:10\n+            let _6: &'_#5r usize;        // in scope 2 at $DIR/region-subtyping-basic.rs:19:9: 19:10\n             scope 3 {\n-                debug q => _6;           // in scope 3 at $DIR/region-subtyping-basic.rs:17:9: 17:10\n+                debug q => _6;           // in scope 3 at $DIR/region-subtyping-basic.rs:19:9: 19:10\n             }\n         }\n     }\n \n     bb0: {\n-        StorageLive(_1);                 // bb0[0]: scope 0 at $DIR/region-subtyping-basic.rs:15:9: 15:14\n-        _1 = [const Const(Value(Scalar(0x00000001)): usize), const Const(Value(Scalar(0x00000002)): usize), const Const(Value(Scalar(0x00000003)): usize)]; // bb0[1]: scope 0 at $DIR/region-subtyping-basic.rs:15:17: 15:26\n+        StorageLive(_1);                 // bb0[0]: scope 0 at $DIR/region-subtyping-basic.rs:17:9: 17:14\n+        _1 = [const Const(Value(Scalar(0x00000001)): usize), const Const(Value(Scalar(0x00000002)): usize), const Const(Value(Scalar(0x00000003)): usize)]; // bb0[1]: scope 0 at $DIR/region-subtyping-basic.rs:17:17: 17:26\n                                          // ty::Const\n                                          // + ty: usize\n                                          // + val: Value(Scalar(0x00000001))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:15:18: 15:19\n+                                         // + span: $DIR/region-subtyping-basic.rs:17:18: 17:19\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x00000001)) }\n                                          // ty::Const\n                                          // + ty: usize\n                                          // + val: Value(Scalar(0x00000002))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:15:21: 15:22\n+                                         // + span: $DIR/region-subtyping-basic.rs:17:21: 17:22\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x00000002)) }\n                                          // ty::Const\n                                          // + ty: usize\n                                          // + val: Value(Scalar(0x00000003))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:15:24: 15:25\n+                                         // + span: $DIR/region-subtyping-basic.rs:17:24: 17:25\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x00000003)) }\n-        FakeRead(ForLet, _1);            // bb0[2]: scope 0 at $DIR/region-subtyping-basic.rs:15:9: 15:14\n-        StorageLive(_2);                 // bb0[3]: scope 1 at $DIR/region-subtyping-basic.rs:16:9: 16:10\n-        StorageLive(_3);                 // bb0[4]: scope 1 at $DIR/region-subtyping-basic.rs:16:16: 16:17\n-        _3 = const Const(Value(Scalar(0x00000000)): usize); // bb0[5]: scope 1 at $DIR/region-subtyping-basic.rs:16:16: 16:17\n+        FakeRead(ForLet, _1);            // bb0[2]: scope 0 at $DIR/region-subtyping-basic.rs:17:9: 17:14\n+        StorageLive(_2);                 // bb0[3]: scope 1 at $DIR/region-subtyping-basic.rs:18:9: 18:10\n+        StorageLive(_3);                 // bb0[4]: scope 1 at $DIR/region-subtyping-basic.rs:18:16: 18:17\n+        _3 = const Const(Value(Scalar(0x00000000)): usize); // bb0[5]: scope 1 at $DIR/region-subtyping-basic.rs:18:16: 18:17\n                                          // ty::Const\n                                          // + ty: usize\n                                          // + val: Value(Scalar(0x00000000))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:16:16: 16:17\n+                                         // + span: $DIR/region-subtyping-basic.rs:18:16: 18:17\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x00000000)) }\n-        _4 = Len(_1);                    // bb0[6]: scope 1 at $DIR/region-subtyping-basic.rs:16:14: 16:18\n-        _5 = Lt(_3, _4);                 // bb0[7]: scope 1 at $DIR/region-subtyping-basic.rs:16:14: 16:18\n-        assert(move _5, \"index out of bounds: the len is {} but the index is {}\", move _4, _3) -> [success: bb2, unwind: bb1]; // bb0[8]: scope 1 at $DIR/region-subtyping-basic.rs:16:14: 16:18\n+        _4 = Len(_1);                    // bb0[6]: scope 1 at $DIR/region-subtyping-basic.rs:18:14: 18:18\n+        _5 = Lt(_3, _4);                 // bb0[7]: scope 1 at $DIR/region-subtyping-basic.rs:18:14: 18:18\n+        assert(move _5, \"index out of bounds: the len is {} but the index is {}\", move _4, _3) -> [success: bb2, unwind: bb1]; // bb0[8]: scope 1 at $DIR/region-subtyping-basic.rs:18:14: 18:18\n     }\n \n     bb1 (cleanup): {\n-        resume;                          // bb1[0]: scope 0 at $DIR/region-subtyping-basic.rs:14:1: 23:2\n+        resume;                          // bb1[0]: scope 0 at $DIR/region-subtyping-basic.rs:16:1: 25:2\n     }\n \n     bb2: {\n-        _2 = &'_#2r _1[_3];              // bb2[0]: scope 1 at $DIR/region-subtyping-basic.rs:16:13: 16:18\n-        FakeRead(ForLet, _2);            // bb2[1]: scope 1 at $DIR/region-subtyping-basic.rs:16:9: 16:10\n-        StorageLive(_6);                 // bb2[2]: scope 2 at $DIR/region-subtyping-basic.rs:17:9: 17:10\n-        _6 = _2;                         // bb2[3]: scope 2 at $DIR/region-subtyping-basic.rs:17:13: 17:14\n-        FakeRead(ForLet, _6);            // bb2[4]: scope 2 at $DIR/region-subtyping-basic.rs:17:9: 17:10\n-        StorageLive(_7);                 // bb2[5]: scope 3 at $DIR/region-subtyping-basic.rs:18:8: 18:12\n-        _7 = const Const(Value(Scalar(0x01)): bool); // bb2[6]: scope 3 at $DIR/region-subtyping-basic.rs:18:8: 18:12\n+        _2 = &'_#3r _1[_3];              // bb2[0]: scope 1 at $DIR/region-subtyping-basic.rs:18:13: 18:18\n+        FakeRead(ForLet, _2);            // bb2[1]: scope 1 at $DIR/region-subtyping-basic.rs:18:9: 18:10\n+        StorageLive(_6);                 // bb2[2]: scope 2 at $DIR/region-subtyping-basic.rs:19:9: 19:10\n+        _6 = _2;                         // bb2[3]: scope 2 at $DIR/region-subtyping-basic.rs:19:13: 19:14\n+        FakeRead(ForLet, _6);            // bb2[4]: scope 2 at $DIR/region-subtyping-basic.rs:19:9: 19:10\n+        StorageLive(_7);                 // bb2[5]: scope 3 at $DIR/region-subtyping-basic.rs:20:8: 20:12\n+        _7 = const Const(Value(Scalar(0x01)): bool); // bb2[6]: scope 3 at $DIR/region-subtyping-basic.rs:20:8: 20:12\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:18:8: 18:12\n+                                         // + span: $DIR/region-subtyping-basic.rs:20:8: 20:12\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        FakeRead(ForMatchedPlace, _7);   // bb2[7]: scope 3 at $DIR/region-subtyping-basic.rs:18:8: 18:12\n-        switchInt(_7) -> [Const(Value(Scalar(0x00)): bool): bb4, otherwise: bb3]; // bb2[8]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n+        FakeRead(ForMatchedPlace, _7);   // bb2[7]: scope 3 at $DIR/region-subtyping-basic.rs:20:8: 20:12\n+        switchInt(_7) -> [Const(Value(Scalar(0x00)): bool): bb4, otherwise: bb3]; // bb2[8]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n+        falseEdges -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb4: {\n-        StorageLive(_10);                // bb4[0]: scope 3 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n-        _10 = const Const(Value(Scalar(<ZST>)): fn(usize) -> bool {use_x})(const Const(Value(Scalar(0x00000016)): usize)) -> [return: bb7, unwind: bb1]; // bb4[1]: scope 3 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n+        StorageLive(_10);                // bb4[0]: scope 3 at $DIR/region-subtyping-basic.rs:23:9: 23:18\n+        _10 = const Const(Value(Scalar(<ZST>)): fn(usize) -> bool {use_x})(const Const(Value(Scalar(0x00000016)): usize)) -> [return: bb7, unwind: bb1]; // bb4[1]: scope 3 at $DIR/region-subtyping-basic.rs:23:9: 23:18\n                                          // ty::Const\n                                          // + ty: fn(usize) -> bool {use_x}\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:21:9: 21:14\n+                                         // + span: $DIR/region-subtyping-basic.rs:23:9: 23:14\n                                          // + literal: Const { ty: fn(usize) -> bool {use_x}, val: Value(Scalar(<ZST>)) }\n                                          // ty::Const\n                                          // + ty: usize\n                                          // + val: Value(Scalar(0x00000016))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:21:15: 21:17\n+                                         // + span: $DIR/region-subtyping-basic.rs:23:15: 23:17\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x00000016)) }\n     }\n \n     bb5: {\n-        StorageLive(_8);                 // bb5[0]: scope 3 at $DIR/region-subtyping-basic.rs:19:9: 19:18\n-        StorageLive(_9);                 // bb5[1]: scope 3 at $DIR/region-subtyping-basic.rs:19:15: 19:17\n-        _9 = (*_6);                      // bb5[2]: scope 3 at $DIR/region-subtyping-basic.rs:19:15: 19:17\n-        _8 = const Const(Value(Scalar(<ZST>)): fn(usize) -> bool {use_x})(move _9) -> [return: bb6, unwind: bb1]; // bb5[3]: scope 3 at $DIR/region-subtyping-basic.rs:19:9: 19:18\n+        StorageLive(_8);                 // bb5[0]: scope 3 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n+        StorageLive(_9);                 // bb5[1]: scope 3 at $DIR/region-subtyping-basic.rs:21:15: 21:17\n+        _9 = (*_6);                      // bb5[2]: scope 3 at $DIR/region-subtyping-basic.rs:21:15: 21:17\n+        _8 = const Const(Value(Scalar(<ZST>)): fn(usize) -> bool {use_x})(move _9) -> [return: bb6, unwind: bb1]; // bb5[3]: scope 3 at $DIR/region-subtyping-basic.rs:21:9: 21:18\n                                          // ty::Const\n                                          // + ty: fn(usize) -> bool {use_x}\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:19:9: 19:14\n+                                         // + span: $DIR/region-subtyping-basic.rs:21:9: 21:14\n                                          // + literal: Const { ty: fn(usize) -> bool {use_x}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb6: {\n-        StorageDead(_9);                 // bb6[0]: scope 3 at $DIR/region-subtyping-basic.rs:19:17: 19:18\n-        StorageDead(_8);                 // bb6[1]: scope 3 at $DIR/region-subtyping-basic.rs:19:18: 19:19\n-        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb6[2]: scope 3 at $DIR/region-subtyping-basic.rs:18:13: 20:6\n+        StorageDead(_9);                 // bb6[0]: scope 3 at $DIR/region-subtyping-basic.rs:21:17: 21:18\n+        StorageDead(_8);                 // bb6[1]: scope 3 at $DIR/region-subtyping-basic.rs:21:18: 21:19\n+        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb6[2]: scope 3 at $DIR/region-subtyping-basic.rs:20:13: 22:6\n                                          // ty::Const\n                                          // + ty: ()\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:18:13: 20:6\n+                                         // + span: $DIR/region-subtyping-basic.rs:20:13: 22:6\n                                          // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n-        goto -> bb8;                     // bb6[3]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n+        goto -> bb8;                     // bb6[3]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb7: {\n-        StorageDead(_10);                // bb7[0]: scope 3 at $DIR/region-subtyping-basic.rs:21:18: 21:19\n-        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb7[1]: scope 3 at $DIR/region-subtyping-basic.rs:20:12: 22:6\n+        StorageDead(_10);                // bb7[0]: scope 3 at $DIR/region-subtyping-basic.rs:23:18: 23:19\n+        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb7[1]: scope 3 at $DIR/region-subtyping-basic.rs:22:12: 24:6\n                                          // ty::Const\n                                          // + ty: ()\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/region-subtyping-basic.rs:20:12: 22:6\n+                                         // + span: $DIR/region-subtyping-basic.rs:22:12: 24:6\n                                          // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n-        goto -> bb8;                     // bb7[2]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n+        goto -> bb8;                     // bb7[2]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb8: {\n-        StorageDead(_6);                 // bb8[0]: scope 2 at $DIR/region-subtyping-basic.rs:23:1: 23:2\n-        StorageDead(_3);                 // bb8[1]: scope 1 at $DIR/region-subtyping-basic.rs:23:1: 23:2\n-        StorageDead(_2);                 // bb8[2]: scope 1 at $DIR/region-subtyping-basic.rs:23:1: 23:2\n-        StorageDead(_1);                 // bb8[3]: scope 0 at $DIR/region-subtyping-basic.rs:23:1: 23:2\n-        StorageDead(_7);                 // bb8[4]: scope 0 at $DIR/region-subtyping-basic.rs:23:1: 23:2\n-        return;                          // bb8[5]: scope 0 at $DIR/region-subtyping-basic.rs:23:2: 23:2\n+        StorageDead(_6);                 // bb8[0]: scope 2 at $DIR/region-subtyping-basic.rs:25:1: 25:2\n+        StorageDead(_3);                 // bb8[1]: scope 1 at $DIR/region-subtyping-basic.rs:25:1: 25:2\n+        StorageDead(_2);                 // bb8[2]: scope 1 at $DIR/region-subtyping-basic.rs:25:1: 25:2\n+        StorageDead(_1);                 // bb8[3]: scope 0 at $DIR/region-subtyping-basic.rs:25:1: 25:2\n+        StorageDead(_7);                 // bb8[4]: scope 0 at $DIR/region-subtyping-basic.rs:25:1: 25:2\n+        return;                          // bb8[5]: scope 0 at $DIR/region-subtyping-basic.rs:25:2: 25:2\n     }\n }"}]}