{"sha": "4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe", "node_id": "C_kwDOAAsO6NoAKDRiYjE1MmM0YmM1ZmY1Yjg5ZThiM2MzNTkwOGE1YWQyM2UzNTI3ZmU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-19T18:34:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-19T18:34:37Z"}, "message": "fmt", "tree": {"sha": "b35f9be4e154a758351578fd94067ab0b88f4c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b35f9be4e154a758351578fd94067ab0b88f4c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe", "html_url": "https://github.com/rust-lang/rust/commit/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42a91ed70c26ad956623bd65a2075d540bd8bd3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a91ed70c26ad956623bd65a2075d540bd8bd3c", "html_url": "https://github.com/rust-lang/rust/commit/42a91ed70c26ad956623bd65a2075d540bd8bd3c"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b39a33aff097e99508895f94b88273a967f60019", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=4bb152c4bc5ff5b89e8b3c35908a5ad23e3527fe", "patch": "@@ -547,8 +547,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 if M::enforce_number_no_provenance(self.ecx) {\n                     // As a special exception we *do* match on a `Scalar` here, since we truly want\n                     // to know its underlying representation (and *not* cast it to an integer).\n-                    let is_ptr =\n-                        value.check_init().map_or(false, |v| matches!(v, Scalar::Ptr(..)));\n+                    let is_ptr = value.check_init().map_or(false, |v| matches!(v, Scalar::Ptr(..)));\n                     if is_ptr {\n                         throw_validation_failure!(self.path,\n                             { \"{:x}\", value } expected { \"plain (non-pointer) bytes\" }"}]}