{"sha": "4ad677e5b65b803e15e91e40097e2d77f0209ca7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZDY3N2U1YjY1YjgwM2UxNWU5MWU0MDA5N2UyZDc3ZjAyMDljYTc=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-01-24T18:22:09Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-01-28T08:42:16Z"}, "message": "Remove a custom variant of iter::Cloned.", "tree": {"sha": "7fedd7d35b3023d02d3fcb1f55d09f31712494f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fedd7d35b3023d02d3fcb1f55d09f31712494f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad677e5b65b803e15e91e40097e2d77f0209ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad677e5b65b803e15e91e40097e2d77f0209ca7", "html_url": "https://github.com/rust-lang/rust/commit/4ad677e5b65b803e15e91e40097e2d77f0209ca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad677e5b65b803e15e91e40097e2d77f0209ca7/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "html_url": "https://github.com/rust-lang/rust/commit/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "783bc8810572f3492b710e9d0bd7a9b93048aaee", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=4ad677e5b65b803e15e91e40097e2d77f0209ca7", "patch": "@@ -1577,7 +1577,7 @@ fn encode_info_for_items(ecx: &EncodeContext,\n                         &krate.module,\n                         &[],\n                         ast::CRATE_NODE_ID,\n-                        ast_map::Values([].iter()).chain(None),\n+                        [].iter().cloned().chain(None),\n                         syntax::parse::token::special_idents::invalid,\n                         ast::Public);\n \n@@ -1949,7 +1949,7 @@ fn encode_misc_info(ecx: &EncodeContext,\n     }\n \n     // Encode reexports for the root module.\n-    encode_reexports(ecx, rbml_w, 0, ast_map::Values([].iter()).chain(None));\n+    encode_reexports(ecx, rbml_w, 0, [].iter().cloned().chain(None));\n \n     rbml_w.end_tag();\n     rbml_w.end_tag();"}, {"sha": "6d296d70ffa4a148b265bcfd4c9874b3d0db158a", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=4ad677e5b65b803e15e91e40097e2d77f0209ca7", "patch": "@@ -130,7 +130,7 @@ pub fn decode_inlined_item<'tcx>(cdata: &cstore::crate_metadata,\n         debug!(\"> Decoding inlined fn: {:?}::?\",\n         {\n             // Do an Option dance to use the path after it is moved below.\n-            let s = ast_map::path_to_string(ast_map::Values(path.iter()));\n+            let s = ast_map::path_to_string(path.iter().cloned());\n             path_as_str = Some(s);\n             path_as_str.as_ref().map(|x| &x[])\n         });"}, {"sha": "bf9c850302bfa7761335336cbc862aba36eb82a7", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=4ad677e5b65b803e15e91e40097e2d77f0209ca7", "patch": "@@ -5249,7 +5249,7 @@ pub fn with_path<T, F>(cx: &ctxt, id: ast::DefId, f: F) -> T where\n     if id.krate == ast::LOCAL_CRATE {\n         cx.map.with_path(id.node, f)\n     } else {\n-        f(ast_map::Values(csearch::get_item_path(cx, id).iter()).chain(None))\n+        f(csearch::get_item_path(cx, id).iter().cloned().chain(None))\n     }\n }\n "}, {"sha": "f6d061ea722add971cb1cec902bca611b77372c9", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=4ad677e5b65b803e15e91e40097e2d77f0209ca7", "patch": "@@ -37,7 +37,6 @@ use flate;\n use serialize::hex::ToHex;\n use syntax::ast;\n use syntax::ast_map::{PathElem, PathElems, PathName};\n-use syntax::ast_map;\n use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n use syntax::parse::token;\n@@ -339,7 +338,7 @@ pub fn mangle_internal_name_by_type_and_seq<'a, 'tcx>(ccx: &CrateContext<'a, 'tc\n     let path = [PathName(token::intern(&s[])),\n                 gensym_name(name)];\n     let hash = get_symbol_hash(ccx, t);\n-    mangle(ast_map::Values(path.iter()), Some(&hash[]))\n+    mangle(path.iter().cloned(), Some(&hash[]))\n }\n \n pub fn mangle_internal_name_by_path_and_seq(path: PathElems, flav: &str) -> String {"}, {"sha": "f2be6b2258282f63b4558a6d1110a6f8e7258cf6", "filename": "src/libsyntax/ast_map/mod.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibsyntax%2Fast_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad677e5b65b803e15e91e40097e2d77f0209ca7/src%2Flibsyntax%2Fast_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map%2Fmod.rs?ref=4ad677e5b65b803e15e91e40097e2d77f0209ca7", "patch": "@@ -75,21 +75,8 @@ impl<'a> Iterator for LinkedPath<'a> {\n     }\n }\n \n-// HACK(eddyb) move this into libstd (value wrapper for slice::Iter).\n-#[derive(Clone)]\n-pub struct Values<'a, T:'a>(pub slice::Iter<'a, T>);\n-\n-impl<'a, T: Copy> Iterator for Values<'a, T> {\n-    type Item = T;\n-\n-    fn next(&mut self) -> Option<T> {\n-        let &mut Values(ref mut items) = self;\n-        items.next().map(|&x| x)\n-    }\n-}\n-\n /// The type of the iterator used by with_path.\n-pub type PathElems<'a, 'b> = iter::Chain<Values<'a, PathElem>, LinkedPath<'b>>;\n+pub type PathElems<'a, 'b> = iter::Chain<iter::Cloned<slice::Iter<'a, PathElem>>, LinkedPath<'b>>;\n \n pub fn path_to_string<PI: Iterator<Item=PathElem>>(path: PI) -> String {\n     let itr = token::get_ident_interner();\n@@ -458,9 +445,9 @@ impl<'ast> Map<'ast> {\n         if parent == id {\n             match self.find_entry(id) {\n                 Some(RootInlinedParent(data)) => {\n-                    f(Values(data.path.iter()).chain(next))\n+                    f(data.path.iter().cloned().chain(next))\n                 }\n-                _ => f(Values([].iter()).chain(next))\n+                _ => f([].iter().cloned().chain(next))\n             }\n         } else {\n             self.with_path_next(parent, Some(&LinkedPathNode {"}]}