{"sha": "618558a70f05595599503bbf09c9ad6a8a412356", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxODU1OGE3MGYwNTU5NTU5OTUwM2JiZjA5YzlhZDZhOGE0MTIzNTY=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-09T11:35:24Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-09T12:00:40Z"}, "message": "librustc: Allow adding static fn's in multiple impl's.", "tree": {"sha": "86c56ac636df63e5706657d4705ec9e0a8dbdd1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86c56ac636df63e5706657d4705ec9e0a8dbdd1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/618558a70f05595599503bbf09c9ad6a8a412356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/618558a70f05595599503bbf09c9ad6a8a412356", "html_url": "https://github.com/rust-lang/rust/commit/618558a70f05595599503bbf09c9ad6a8a412356", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/618558a70f05595599503bbf09c9ad6a8a412356/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88c318d28c7d8fe8346d38d73cb0b1a30f33f278", "url": "https://api.github.com/repos/rust-lang/rust/commits/88c318d28c7d8fe8346d38d73cb0b1a30f33f278", "html_url": "https://github.com/rust-lang/rust/commit/88c318d28c7d8fe8346d38d73cb0b1a30f33f278"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "ec821ab2c7192f4a35b8979dff3cc827b0db9806", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/618558a70f05595599503bbf09c9ad6a8a412356/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/618558a70f05595599503bbf09c9ad6a8a412356/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=618558a70f05595599503bbf09c9ad6a8a412356", "patch": "@@ -409,6 +409,7 @@ pub enum ParentLink {\n }\n \n /// The type of module this is.\n+#[deriving(Eq)]\n pub enum ModuleKind {\n     NormalModuleKind,\n     ExternModuleKind,\n@@ -1228,25 +1229,34 @@ impl Resolver {\n                 match (trait_ref_opt, ty) {\n                     (None, @Ty { node: ty_path(path, _), _ }) if\n                             has_static_methods && path.idents.len() == 1 => {\n-                        // Create the module.\n                         let name = path_to_ident(path);\n-                        let (name_bindings, new_parent) =\n-                            self.add_child(name,\n-                                           parent,\n-                                           ForbidDuplicateModules,\n-                                           sp);\n-\n-                        let parent_link = self.get_parent_link(new_parent,\n-                                                               ident);\n-                        let def_id = local_def(item.id);\n-                        name_bindings.define_module(Public,\n-                                                    parent_link,\n-                                                    Some(def_id),\n-                                                    ImplModuleKind,\n-                                                    sp);\n \n-                        let new_parent = ModuleReducedGraphParent(\n-                            name_bindings.get_module());\n+                        let new_parent = match parent.children.find(&name) {\n+                            // It already exists\n+                            Some(&child) if child.get_module_if_available().is_some() &&\n+                                            child.get_module().kind == ImplModuleKind => {\n+                                ModuleReducedGraphParent(child.get_module())\n+                            }\n+                            // Create the module\n+                            _ => {\n+                                let (name_bindings, new_parent) =\n+                                    self.add_child(name,\n+                                                   parent,\n+                                                   ForbidDuplicateModules,\n+                                                   sp);\n+\n+                                let parent_link = self.get_parent_link(new_parent,\n+                                                                       ident);\n+                                let def_id = local_def(item.id);\n+                                name_bindings.define_module(Public,\n+                                                            parent_link,\n+                                                            Some(def_id),\n+                                                            ImplModuleKind,\n+                                                            sp);\n+\n+                                ModuleReducedGraphParent(name_bindings.get_module())\n+                            }\n+                        };\n \n                         // For each static method...\n                         for methods.each |method| {"}]}