{"sha": "8079bf35c596eef32ec872d35e28c90e4744f61e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNzliZjM1YzU5NmVlZjMyZWM4NzJkMzVlMjhjOTBlNDc0NGY2MWU=", "commit": {"author": {"name": "Robin Stocker", "email": "robin@nibor.org", "date": "2017-02-27T06:01:47Z"}, "committer": {"name": "Robin Stocker", "email": "robin@nibor.org", "date": "2017-02-27T06:04:18Z"}, "message": "Example for how to provide stdin using std::process::Command\n\nSpawning a child process and writing to its stdin is a bit tricky due to\n`as_mut` and having to use a limited borrow. An example for this might\nhelp newer users.", "tree": {"sha": "3b8a00fbdef13ce1e929bf61aa2cca5dc1c6f494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b8a00fbdef13ce1e929bf61aa2cca5dc1c6f494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8079bf35c596eef32ec872d35e28c90e4744f61e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8079bf35c596eef32ec872d35e28c90e4744f61e", "html_url": "https://github.com/rust-lang/rust/commit/8079bf35c596eef32ec872d35e28c90e4744f61e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8079bf35c596eef32ec872d35e28c90e4744f61e/comments", "author": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a0edc6c223a19d5288c90b0e7fbc85d6701ddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a0edc6c223a19d5288c90b0e7fbc85d6701ddc", "html_url": "https://github.com/rust-lang/rust/commit/60a0edc6c223a19d5288c90b0e7fbc85d6701ddc"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "f846ef3e69e093f24f0cb88422f62575c7bd327e", "filename": "src/libstd/process.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8079bf35c596eef32ec872d35e28c90e4744f61e/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8079bf35c596eef32ec872d35e28c90e4744f61e/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=8079bf35c596eef32ec872d35e28c90e4744f61e", "patch": "@@ -27,6 +27,31 @@\n //!\n //! assert!(ecode.success());\n //! ```\n+//!\n+//! Calling a command with input and reading its output:\n+//!\n+//! ```no_run\n+//! use std::process::{Command, Stdio};\n+//! use std::io::Write;\n+//!\n+//! let mut child = Command::new(\"/bin/cat\")\n+//!     .stdin(Stdio::piped())\n+//!     .stdout(Stdio::piped())\n+//!     .spawn()\n+//!     .expect(\"failed to execute child\");\n+//!\n+//! {\n+//!     // limited borrow of stdin\n+//!     let stdin = child.stdin.as_mut().expect(\"failed to get stdin\");\n+//!     stdin.write_all(b\"test\").expect(\"failed to write to stdin\");\n+//! }\n+//!\n+//! let output = child\n+//!     .wait_with_output()\n+//!     .expect(\"failed to wait on child\");\n+//!\n+//! assert_eq!(b\"test\", output.stdout.as_slice());\n+//! ```\n \n #![stable(feature = \"process\", since = \"1.0.0\")]\n "}]}