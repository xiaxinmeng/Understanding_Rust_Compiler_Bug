{"sha": "08529aff80e2fb955ff295a1cb600c4401d47d9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NTI5YWZmODBlMmZiOTU1ZmYyOTVhMWNiNjAwYzQ0MDFkNDdkOWM=", "commit": {"author": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-06-04T11:13:36Z"}, "committer": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-06-04T11:15:26Z"}, "message": "test: codegen: skip catch-unwind on riscv64\n\nIt isn't clear to me if this is a bug or not, hence the FIXME", "tree": {"sha": "53cfb7d98d7cab8ef9e4124cd1df3547ec49e74d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53cfb7d98d7cab8ef9e4124cd1df3547ec49e74d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08529aff80e2fb955ff295a1cb600c4401d47d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08529aff80e2fb955ff295a1cb600c4401d47d9c", "html_url": "https://github.com/rust-lang/rust/commit/08529aff80e2fb955ff295a1cb600c4401d47d9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08529aff80e2fb955ff295a1cb600c4401d47d9c/comments", "author": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37e8e0571279265f8abfdd9dd93fbc58677029df", "url": "https://api.github.com/repos/rust-lang/rust/commits/37e8e0571279265f8abfdd9dd93fbc58677029df", "html_url": "https://github.com/rust-lang/rust/commit/37e8e0571279265f8abfdd9dd93fbc58677029df"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "7ff9c0d15e003a871234cdae8908bd2e345fd3a1", "filename": "src/test/codegen/catch-unwind.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/08529aff80e2fb955ff295a1cb600c4401d47d9c/src%2Ftest%2Fcodegen%2Fcatch-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08529aff80e2fb955ff295a1cb600c4401d47d9c/src%2Ftest%2Fcodegen%2Fcatch-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fcatch-unwind.rs?ref=08529aff80e2fb955ff295a1cb600c4401d47d9c", "patch": "@@ -1,5 +1,14 @@\n // compile-flags: -O\n \n+// On x86 the closure is inlined in foo() producting something like\n+// define i32 @foo() [...] {\n+// tail call void @bar() [...]\n+// ret i32 0\n+// }\n+// On riscv the closure is another function, placed before fn foo so CHECK can't\n+// find it\n+// ignore-riscv64 FIXME\n+\n #![crate_type = \"lib\"]\n \n extern \"C\" {"}]}