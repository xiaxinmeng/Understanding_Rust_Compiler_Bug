{"sha": "153419b78fcf12e4644f78a377b12ba6f74b758c", "node_id": "C_kwDOAAsO6NoAKDE1MzQxOWI3OGZjZjEyZTQ2NDRmNzhhMzc3YjEyYmE2Zjc0Yjc1OGM", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-15T19:40:10Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-15T19:41:07Z"}, "message": "Small cleanup in parameterized", "tree": {"sha": "693e79c7ec37f1d2a1c5df944503afe76de87a2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/693e79c7ec37f1d2a1c5df944503afe76de87a2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/153419b78fcf12e4644f78a377b12ba6f74b758c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/153419b78fcf12e4644f78a377b12ba6f74b758c", "html_url": "https://github.com/rust-lang/rust/commit/153419b78fcf12e4644f78a377b12ba6f74b758c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/153419b78fcf12e4644f78a377b12ba6f74b758c/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984eab57f708e62c09b3d708033fe620130b5f39", "url": "https://api.github.com/repos/rust-lang/rust/commits/984eab57f708e62c09b3d708033fe620130b5f39", "html_url": "https://github.com/rust-lang/rust/commit/984eab57f708e62c09b3d708033fe620130b5f39"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "e83ea8cb1e014a681af8ccb0bdcce5f9d9adc8e7", "filename": "compiler/rustc_middle/src/ty/parameterized.rs", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/153419b78fcf12e4644f78a377b12ba6f74b758c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153419b78fcf12e4644f78a377b12ba6f74b758c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs?ref=153419b78fcf12e4644f78a377b12ba6f74b758c", "patch": "@@ -2,14 +2,9 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{DefId, DefIndex};\n use rustc_index::vec::{Idx, IndexVec};\n \n-use crate::middle::exported_symbols::ExportedSymbol;\n-use crate::mir::Body;\n-use crate::ty::{\n-    self, Clause, Const, FnSig, GeneratorDiagnosticData, GenericPredicates, Predicate, TraitRef, Ty,\n-};\n+use crate::ty;\n \n pub trait ParameterizedOverTcx: 'static {\n-    #[allow(unused_lifetimes)]\n     type Value<'tcx>;\n }\n \n@@ -100,29 +95,28 @@ trivially_parameterized_over_tcx! {\n     rustc_type_ir::Variance,\n }\n \n-// HACK(compiler-errors): This macro rule can only take an ident,\n-// not a path, due to parsing ambiguity reasons. That means we gotta\n-// import all of these types above.\n+// HACK(compiler-errors): This macro rule can only take a fake path,\n+// not a real, due to parsing ambiguity reasons.\n #[macro_export]\n macro_rules! parameterized_over_tcx {\n-    ($($ident:ident),+ $(,)?) => {\n+    ($($($fake_path:ident)::+),+ $(,)?) => {\n         $(\n-            impl $crate::ty::ParameterizedOverTcx for $ident<'static> {\n-                type Value<'tcx> = $ident<'tcx>;\n+            impl $crate::ty::ParameterizedOverTcx for $($fake_path)::+<'static> {\n+                type Value<'tcx> = $($fake_path)::+<'tcx>;\n             }\n         )*\n     }\n }\n \n parameterized_over_tcx! {\n-    Ty,\n-    FnSig,\n-    GenericPredicates,\n-    TraitRef,\n-    Const,\n-    Predicate,\n-    Clause,\n-    GeneratorDiagnosticData,\n-    Body,\n-    ExportedSymbol,\n+    crate::middle::exported_symbols::ExportedSymbol,\n+    crate::mir::Body,\n+    ty::Ty,\n+    ty::FnSig,\n+    ty::GenericPredicates,\n+    ty::TraitRef,\n+    ty::Const,\n+    ty::Predicate,\n+    ty::Clause,\n+    ty::GeneratorDiagnosticData,\n }"}]}