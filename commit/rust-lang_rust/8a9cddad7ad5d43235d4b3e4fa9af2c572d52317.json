{"sha": "8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOWNkZGFkN2FkNWQ0MzIzNWQ0YjNlNGZhOWFmMmM1NzJkNTIzMTc=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-08-20T22:10:21Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-08-22T17:52:11Z"}, "message": "Fix type parameter handling for static default methods. Closes #8654.", "tree": {"sha": "06010bf602cf4566c815a6d7e5fd8a742a778252", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06010bf602cf4566c815a6d7e5fd8a742a778252"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "html_url": "https://github.com/rust-lang/rust/commit/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451de33f7b33205301e01a5ef8bb55a6a6e790b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/451de33f7b33205301e01a5ef8bb55a6a6e790b3", "html_url": "https://github.com/rust-lang/rust/commit/451de33f7b33205301e01a5ef8bb55a6a6e790b3"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "5ce82ad6e2ca466dbd778a6ba67659d9380c804e", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "patch": "@@ -3092,7 +3092,6 @@ pub fn ty_param_bounds_and_ty_for_def(fcx: @mut FnCtxt,\n                                       sp: span,\n                                       defn: ast::def)\n                                    -> ty_param_bounds_and_ty {\n-\n     match defn {\n       ast::def_arg(nid, _) | ast::def_local(nid, _) | ast::def_self(nid, _) |\n       ast::def_binding(nid, _) => {\n@@ -3149,7 +3148,8 @@ pub fn instantiate_path(fcx: @mut FnCtxt,\n     let ty_param_count = tpt.generics.type_param_defs.len();\n     let ty_substs_len = pth.types.len();\n \n-    debug!(\"ty_param_count=%? ty_substs_len=%?\",\n+    debug!(\"tpt=%s ty_param_count=%? ty_substs_len=%?\",\n+           tpt.repr(fcx.tcx()),\n            ty_param_count,\n            ty_substs_len);\n "}, {"sha": "cb0244bb610b2c6a6f87f4ae0950a70676eac23a", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9cddad7ad5d43235d4b3e4fa9af2c572d52317/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=8a9cddad7ad5d43235d4b3e4fa9af2c572d52317", "patch": "@@ -346,9 +346,10 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n         let substd_type_param_defs = m.generics.type_param_defs.subst(tcx, &substs);\n         new_type_param_defs.push_all(*substd_type_param_defs);\n \n-        debug!(\"static method %s type_param_defs=%s substs=%s\",\n+        debug!(\"static method %s type_param_defs=%s ty=%s, substs=%s\",\n                m.def_id.repr(tcx),\n                new_type_param_defs.repr(tcx),\n+               ty.repr(tcx),\n                substs.repr(tcx));\n \n         tcx.tcache.insert(m.def_id,\n@@ -893,8 +894,8 @@ pub fn convert(ccx: &CrateCtxt, it: &ast::item) {\n       }\n       ast::item_trait(ref generics, _, ref trait_methods) => {\n           let _trait_def = trait_def_of_item(ccx, it);\n-          ensure_trait_methods(ccx, it.id);\n \n+          // Run convert_methods on the provided methods.\n           let (_, provided_methods) =\n               split_trait_methods(*trait_methods);\n           let untransformed_rcvr_ty = ty::mk_self(tcx, local_def(it.id));\n@@ -904,6 +905,11 @@ pub fn convert(ccx: &CrateCtxt, it: &ast::item) {\n                                   untransformed_rcvr_ty,\n                                   &ty_generics, generics,\n                                   it.vis);\n+\n+          // We need to do this *after* converting methods, since\n+          // convert_methods produces a tcache entry that is wrong for\n+          // static trait methods. This is somewhat unfortunate.\n+          ensure_trait_methods(ccx, it.id);\n       }\n       ast::item_struct(struct_def, ref generics) => {\n         ensure_no_ty_param_bounds(ccx, it.span, generics, \"structure\");"}]}