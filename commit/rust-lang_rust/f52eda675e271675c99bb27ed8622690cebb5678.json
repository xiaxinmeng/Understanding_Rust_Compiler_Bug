{"sha": "f52eda675e271675c99bb27ed8622690cebb5678", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MmVkYTY3NWUyNzE2NzVjOTliYjI3ZWQ4NjIyNjkwY2ViYjU2Nzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-05T08:31:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-28T13:15:17Z"}, "message": "add Parse", "tree": {"sha": "2ee6bfa36bc7fcad612f11a060c871e31e7551aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee6bfa36bc7fcad612f11a060c871e31e7551aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f52eda675e271675c99bb27ed8622690cebb5678", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f52eda675e271675c99bb27ed8622690cebb5678", "html_url": "https://github.com/rust-lang/rust/commit/f52eda675e271675c99bb27ed8622690cebb5678", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f52eda675e271675c99bb27ed8622690cebb5678/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0545e4781d3aba3083835cfa8afab07b7442a3aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0545e4781d3aba3083835cfa8afab07b7442a3aa", "html_url": "https://github.com/rust-lang/rust/commit/0545e4781d3aba3083835cfa8afab07b7442a3aa"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "a950870bdd7653759a7b2428a5083c5ef6b361be", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f52eda675e271675c99bb27ed8622690cebb5678/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52eda675e271675c99bb27ed8622690cebb5678/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=f52eda675e271675c99bb27ed8622690cebb5678", "patch": "@@ -31,6 +31,12 @@ pub mod ast;\n #[doc(hidden)]\n pub mod fuzz;\n \n+use std::sync::Arc;\n+\n+use ra_text_edit::AtomTextEdit;\n+\n+use crate::syntax_node::GreenNode;\n+\n pub use rowan::{SmolStr, TextRange, TextUnit};\n pub use ra_parser::SyntaxKind;\n pub use ra_parser::T;\n@@ -43,8 +49,26 @@ pub use crate::{\n     parsing::{tokenize, classify_literal, Token},\n };\n \n-use ra_text_edit::AtomTextEdit;\n-use crate::syntax_node::GreenNode;\n+/// `Parse` is the result of the parsing: a syntax tree and a collection of\n+/// errors.\n+///\n+/// Note that we always produce a syntax tree, even for completely invalid\n+/// files.\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub struct Parse {\n+    pub tree: TreeArc<SourceFile>,\n+    pub errors: Arc<Vec<SyntaxError>>,\n+}\n+\n+impl Parse {\n+    pub fn ok(self) -> Result<TreeArc<SourceFile>, Arc<Vec<SyntaxError>>> {\n+        if self.errors.is_empty() {\n+            Ok(self.tree)\n+        } else {\n+            Err(self.errors)\n+        }\n+    }\n+}\n \n /// `SourceFile` represents a parse tree for a single Rust file.\n pub use crate::ast::SourceFile;"}]}