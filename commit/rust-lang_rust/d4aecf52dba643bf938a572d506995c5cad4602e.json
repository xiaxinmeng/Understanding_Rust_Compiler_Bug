{"sha": "d4aecf52dba643bf938a572d506995c5cad4602e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YWVjZjUyZGJhNjQzYmY5MzhhNTcyZDUwNjk5NWM1Y2FkNDYwMmU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-09T16:31:59Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-09T16:31:59Z"}, "message": "Fix block code headers parsing", "tree": {"sha": "0bd3ab84c74980cd3cc7c8df9bf0166972e7ea8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bd3ab84c74980cd3cc7c8df9bf0166972e7ea8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4aecf52dba643bf938a572d506995c5cad4602e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4aecf52dba643bf938a572d506995c5cad4602e", "html_url": "https://github.com/rust-lang/rust/commit/d4aecf52dba643bf938a572d506995c5cad4602e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4aecf52dba643bf938a572d506995c5cad4602e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "666e7148d167de551a7c3692caf9966f49773f4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/666e7148d167de551a7c3692caf9966f49773f4c", "html_url": "https://github.com/rust-lang/rust/commit/666e7148d167de551a7c3692caf9966f49773f4c"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "dca873a85d813a0bcb2fc8e4280713d3d3ffb415", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d4aecf52dba643bf938a572d506995c5cad4602e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4aecf52dba643bf938a572d506995c5cad4602e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=d4aecf52dba643bf938a572d506995c5cad4602e", "patch": "@@ -471,20 +471,26 @@ impl LangString {\n         for token in tokens {\n             match token {\n                 \"\" => {},\n-                \"should_panic\" => { data.should_panic = true; seen_rust_tags = true; },\n-                \"no_run\" => { data.no_run = true; seen_rust_tags = true; },\n-                \"ignore\" => { data.ignore = true; seen_rust_tags = true; },\n-                \"rust\" => { data.rust = true; seen_rust_tags = true; },\n-                \"test_harness\" => { data.test_harness = true; seen_rust_tags = true; },\n+                \"should_panic\" => {\n+                    data.should_panic = true;\n+                    seen_rust_tags = seen_other_tags == false;\n+                }\n+                \"no_run\" => { data.no_run = true; seen_rust_tags = seen_other_tags == false; }\n+                \"ignore\" => { data.ignore = true; seen_rust_tags = seen_other_tags == false; }\n+                \"rust\" => { data.rust = true; seen_rust_tags = true; }\n+                \"test_harness\" => {\n+                    data.test_harness = true;\n+                    seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n+                }\n                 \"compile_fail\" if allow_compile_fail => {\n                     data.compile_fail = true;\n-                    seen_rust_tags = true;\n+                    seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n                     data.no_run = true;\n                 }\n                 x if allow_error_code_check && x.starts_with(\"E\") && x.len() == 5 => {\n                     if let Ok(_) = x[1..].parse::<u32>() {\n                         data.error_codes.push(x.to_owned());\n-                        seen_rust_tags = true;\n+                        seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n                     } else {\n                         seen_other_tags = true;\n                     }\n@@ -670,9 +676,10 @@ mod tests {\n         t(\"test_harness\",          false,        false,  false,  true,  true,  false, Vec::new());\n         t(\"compile_fail\",          false,        true,   false,  true,  false, true,  Vec::new());\n         t(\"{.no_run .example}\",    false,        true,   false,  true,  false, false, Vec::new());\n-        t(\"{.sh .should_panic}\",   true,         false,  false,  true,  false, false, Vec::new());\n+        t(\"{.sh .should_panic}\",   true,         false,  false,  false, false, false, Vec::new());\n         t(\"{.example .rust}\",      false,        false,  false,  true,  false, false, Vec::new());\n         t(\"{.test_harness .rust}\", false,        false,  false,  true,  true,  false, Vec::new());\n+        t(\"text, no_run\",          false,        true,   false,  false, false, false, Vec::new());\n     }\n \n     #[test]"}]}