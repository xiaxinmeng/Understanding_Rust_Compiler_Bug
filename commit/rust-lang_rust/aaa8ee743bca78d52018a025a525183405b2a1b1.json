{"sha": "aaa8ee743bca78d52018a025a525183405b2a1b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYThlZTc0M2JjYTc4ZDUyMDE4YTAyNWE1MjUxODM0MDViMmExYjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-22T11:20:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-22T11:20:51Z"}, "message": "unify code paths", "tree": {"sha": "dba75432a2d8393c70d5238d62036ed817f7c11a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dba75432a2d8393c70d5238d62036ed817f7c11a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaa8ee743bca78d52018a025a525183405b2a1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa8ee743bca78d52018a025a525183405b2a1b1", "html_url": "https://github.com/rust-lang/rust/commit/aaa8ee743bca78d52018a025a525183405b2a1b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaa8ee743bca78d52018a025a525183405b2a1b1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b70f17d26630316a2b66251d15a6941d434c4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b70f17d26630316a2b66251d15a6941d434c4e", "html_url": "https://github.com/rust-lang/rust/commit/42b70f17d26630316a2b66251d15a6941d434c4e"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "29a34a6968634413b96d584dce8b66b3f451ac4b", "filename": "src/fn_call.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aaa8ee743bca78d52018a025a525183405b2a1b1/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaa8ee743bca78d52018a025a525183405b2a1b1/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=aaa8ee743bca78d52018a025a525183405b2a1b1", "patch": "@@ -154,14 +154,11 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n             \"__rust_start_panic\" | \"panic_impl\" => {\n                 return err!(MachineError(\"the evaluated program panicked\".to_string()));\n             }\n-            \"exit\" => {\n+            \"exit\" | \"ExitProcess\" => {\n+                // it's really u32 for ExitProcess, but we have to put it into the `Exit` error variant anyway\n                 let code = this.read_scalar(args[0])?.to_i32()?;\n                 return err!(Exit(code));\n             }\n-            \"ExitProcess\" => {\n-                let code = this.read_scalar(args[0])?.to_u32()?;\n-                return err!(Exit(code as i32));\n-            }\n             _ => if dest.is_none() {\n                 return err!(Unimplemented(\n                     format!(\"can't call diverging foreign function: {}\", link_name),"}]}