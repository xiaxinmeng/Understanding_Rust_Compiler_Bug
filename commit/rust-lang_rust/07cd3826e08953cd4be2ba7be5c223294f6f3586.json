{"sha": "07cd3826e08953cd4be2ba7be5c223294f6f3586", "node_id": "C_kwDOAAsO6NoAKDA3Y2QzODI2ZTA4OTUzY2Q0YmUyYmE3YmU1YzIyMzI5NGY2ZjM1ODY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-09T20:31:48Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-09T20:39:23Z"}, "message": "Small clippy::correctness fixes\n\nNothing was really incorrect before, but it did get nicer.", "tree": {"sha": "5fbfe3de6b1b29fa03450f7762103f7157f7b1c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fbfe3de6b1b29fa03450f7762103f7157f7b1c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07cd3826e08953cd4be2ba7be5c223294f6f3586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07cd3826e08953cd4be2ba7be5c223294f6f3586", "html_url": "https://github.com/rust-lang/rust/commit/07cd3826e08953cd4be2ba7be5c223294f6f3586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07cd3826e08953cd4be2ba7be5c223294f6f3586/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a0968b207776f5f29d42aaece7872c7d1aec892", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0968b207776f5f29d42aaece7872c7d1aec892", "html_url": "https://github.com/rust-lang/rust/commit/0a0968b207776f5f29d42aaece7872c7d1aec892"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "ad76e2bed2023ddf1a59192d841223c9a55d8b33", "filename": "compiler/rustc_hir_analysis/src/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs?ref=07cd3826e08953cd4be2ba7be5c223294f6f3586", "patch": "@@ -302,7 +302,7 @@ impl<'tcx> InherentOverlapChecker<'tcx> {\n                         .iter()\n                         .flatten()\n                         .map(|r| r.impl_blocks.len() as isize - avg as isize)\n-                        .map(|v| v.abs() as usize)\n+                        .map(|v| v.unsigned_abs())\n                         .sum::<usize>();\n                     s / connected_regions.len()\n                 },"}, {"sha": "5faa6ab13dd7de1a9e8149ade04145d7e02cc086", "filename": "compiler/rustc_hir_typeck/src/generator_interior/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs?ref=07cd3826e08953cd4be2ba7be5c223294f6f3586", "patch": "@@ -313,8 +313,7 @@ pub fn resolve_interior<'a, 'tcx>(\n     // Extract type components to build the witness type.\n     let type_list = fcx.tcx.mk_type_list_from_iter(type_causes.iter().map(|cause| cause.ty));\n     let bound_vars = fcx.tcx.mk_bound_variable_kinds(&bound_vars);\n-    let witness =\n-        fcx.tcx.mk_generator_witness(ty::Binder::bind_with_vars(type_list, bound_vars.clone()));\n+    let witness = fcx.tcx.mk_generator_witness(ty::Binder::bind_with_vars(type_list, bound_vars));\n \n     drop(typeck_results);\n     // Store the generator types and spans into the typeck results for this generator."}, {"sha": "8388d0f94c8a985c9db96c5c164cf30d24005755", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cd3826e08953cd4be2ba7be5c223294f6f3586/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=07cd3826e08953cd4be2ba7be5c223294f6f3586", "patch": "@@ -1755,16 +1755,15 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n     fn probe_for_similar_candidate(&mut self) -> Result<Option<ty::AssocItem>, MethodError<'tcx>> {\n         debug!(\"probing for method names similar to {:?}\", self.method_name);\n \n-        let steps = self.steps.clone();\n         self.probe(|_| {\n             let mut pcx = ProbeContext::new(\n                 self.fcx,\n                 self.span,\n                 self.mode,\n                 self.method_name,\n                 self.return_type,\n-                &self.orig_steps_var_values,\n-                steps,\n+                self.orig_steps_var_values,\n+                self.steps,\n                 self.scope_expr_id,\n             );\n             pcx.allow_similar_names = true;"}]}