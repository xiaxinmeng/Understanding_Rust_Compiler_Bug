{"sha": "c6a5d871d7a670473a78e03852bb158f3b6d5be3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YTVkODcxZDdhNjcwNDczYTc4ZTAzODUyYmIxNThmM2I2ZDViZTM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-21T13:49:18Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-21T13:49:18Z"}, "message": "Merge #1302\n\n1302: profile type inference r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b3cacd977876023e045f80c20315941ed0ea6bab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3cacd977876023e045f80c20315941ed0ea6bab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6a5d871d7a670473a78e03852bb158f3b6d5be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a5d871d7a670473a78e03852bb158f3b6d5be3", "html_url": "https://github.com/rust-lang/rust/commit/c6a5d871d7a670473a78e03852bb158f3b6d5be3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6a5d871d7a670473a78e03852bb158f3b6d5be3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "9fe8e561772a883ad65962b6f584fafe7487a0af", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe8e561772a883ad65962b6f584fafe7487a0af", "html_url": "https://github.com/rust-lang/rust/commit/9fe8e561772a883ad65962b6f584fafe7487a0af"}, {"sha": "f63be060027cf25ce1c64bd02dab2931fc1ceafe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f63be060027cf25ce1c64bd02dab2931fc1ceafe", "html_url": "https://github.com/rust-lang/rust/commit/f63be060027cf25ce1c64bd02dab2931fc1ceafe"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "11cdf9c34922c93a82c8174c64ecb22a5636cf7d", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=c6a5d871d7a670473a78e03852bb158f3b6d5be3", "patch": "@@ -126,7 +126,7 @@ pub trait HirDatabase: DefDatabase {\n     #[salsa::invoke(ExprScopes::expr_scopes_query)]\n     fn expr_scopes(&self, def: DefWithBody) -> Arc<ExprScopes>;\n \n-    #[salsa::invoke(crate::ty::infer)]\n+    #[salsa::invoke(crate::ty::infer_query)]\n     fn infer(&self, def: DefWithBody) -> Arc<InferenceResult>;\n \n     #[salsa::invoke(crate::ty::type_for_def)]"}, {"sha": "3679a2242acfd630a51607bc3f7221601061efe9", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=c6a5d871d7a670473a78e03852bb158f3b6d5be3", "patch": "@@ -20,7 +20,7 @@ use crate::{Name, AdtDef, type_ref::Mutability, db::HirDatabase, Trait, GenericP\n use display::{HirDisplay, HirFormatter};\n \n pub(crate) use lower::{TypableDef, type_for_def, type_for_field, callable_item_sig, generic_predicates, generic_defaults};\n-pub(crate) use infer::{infer, InferenceResult, InferTy};\n+pub(crate) use infer::{infer_query, InferenceResult, InferTy};\n pub use lower::CallableDef;\n \n /// A type constructor or type name: this might be something like the primitive"}, {"sha": "a48272981f2470134d43abcf2a9c9afca15db902", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=c6a5d871d7a670473a78e03852bb158f3b6d5be3", "patch": "@@ -23,6 +23,7 @@ use ena::unify::{InPlaceUnificationTable, UnifyKey, UnifyValue, NoError};\n use rustc_hash::FxHashMap;\n \n use ra_arena::map::ArenaMap;\n+use ra_prof::profile;\n use test_utils::tested_by;\n \n use crate::{\n@@ -51,7 +52,8 @@ use super::{\n mod unify;\n \n /// The entry point of type inference.\n-pub fn infer(db: &impl HirDatabase, def: DefWithBody) -> Arc<InferenceResult> {\n+pub fn infer_query(db: &impl HirDatabase, def: DefWithBody) -> Arc<InferenceResult> {\n+    let _p = profile(\"infer_query\");\n     db.check_canceled();\n     let body = def.body(db);\n     let resolver = def.resolver(db);"}, {"sha": "f39749cab52625904f6e120fb970b9d429d32373", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=c6a5d871d7a670473a78e03852bb158f3b6d5be3", "patch": "@@ -4,6 +4,7 @@ use std::sync::{Arc, Mutex};\n use rustc_hash::FxHashSet;\n use log::debug;\n use chalk_ir::cast::Cast;\n+use ra_prof::profile;\n \n use crate::{Crate, Trait, db::HirDatabase, ImplBlock};\n use super::{TraitRef, Ty, Canonical};\n@@ -81,6 +82,7 @@ pub(crate) fn implements_query(\n     krate: Crate,\n     trait_ref: Canonical<TraitRef>,\n ) -> Option<Solution> {\n+    let _p = profile(\"implements_query\");\n     let goal: chalk_ir::Goal = trait_ref.value.to_chalk(db).cast();\n     debug!(\"goal: {:?}\", goal);\n     let env = chalk_ir::Environment::new();"}, {"sha": "61f2226d723ea483d989a4323ec7893f76259885", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a5d871d7a670473a78e03852bb158f3b6d5be3/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=c6a5d871d7a670473a78e03852bb158f3b6d5be3", "patch": "@@ -198,6 +198,7 @@ fn print(lvl: usize, msgs: &[Message], out: &mut impl Write) {\n         if l != lvl {\n             continue;\n         }\n+\n         writeln!(out, \"{} {:6}ms - {}\", indent, dur.as_millis(), msg)\n             .expect(\"printing profiling info to stdout\");\n "}]}