{"sha": "b06731355205f0a4ffa1464137b1d55992f08b48", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNjczMTM1NTIwNWYwYTRmZmExNDY0MTM3YjFkNTU5OTJmMDhiNDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T14:56:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T14:56:16Z"}, "message": "use intptrcast for heap_allocator test; then it should work on Windows", "tree": {"sha": "171ef2710a6a3f191e6072ce8d114bef890acecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/171ef2710a6a3f191e6072ce8d114bef890acecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b06731355205f0a4ffa1464137b1d55992f08b48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b06731355205f0a4ffa1464137b1d55992f08b48", "html_url": "https://github.com/rust-lang/rust/commit/b06731355205f0a4ffa1464137b1d55992f08b48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b06731355205f0a4ffa1464137b1d55992f08b48/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "048b00d20ffd87854550962ab16a397a1fb77a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/048b00d20ffd87854550962ab16a397a1fb77a3f", "html_url": "https://github.com/rust-lang/rust/commit/048b00d20ffd87854550962ab16a397a1fb77a3f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "457734cb602c9ab404912b665807743f597956b2", "filename": "tests/run-pass/heap_allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b06731355205f0a4ffa1464137b1d55992f08b48/tests%2Frun-pass%2Fheap_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b06731355205f0a4ffa1464137b1d55992f08b48/tests%2Frun-pass%2Fheap_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fheap_allocator.rs?ref=b06731355205f0a4ffa1464137b1d55992f08b48", "patch": "@@ -1,3 +1,4 @@\n+// compile-flag: -Zmiri-seed=\n #![feature(allocator_api)]\n \n use std::ptr::NonNull;\n@@ -75,7 +76,6 @@ fn box_to_global() {\n fn main() {\n     check_alloc(System);\n     check_alloc(Global);\n-    #[cfg(not(target_os = \"windows\"))] // TODO: Inspects allocation base address on Windows; needs intptrcast model\n     check_overalign_requests(System);\n     check_overalign_requests(Global);\n     global_to_box();"}]}