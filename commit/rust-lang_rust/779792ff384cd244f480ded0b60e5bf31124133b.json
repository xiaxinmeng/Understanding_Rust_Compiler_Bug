{"sha": "779792ff384cd244f480ded0b60e5bf31124133b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OTc5MmZmMzg0Y2QyNDRmNDgwZGVkMGI2MGU1YmYzMTEyNDEzM2I=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-31T21:00:01Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-31T21:00:01Z"}, "message": "address review feedback (`sort_by_key` is so much cleaner here than `sort_by`!).", "tree": {"sha": "4b48a59b235afe3a969e1049fa4856fd647899b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b48a59b235afe3a969e1049fa4856fd647899b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/779792ff384cd244f480ded0b60e5bf31124133b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/779792ff384cd244f480ded0b60e5bf31124133b", "html_url": "https://github.com/rust-lang/rust/commit/779792ff384cd244f480ded0b60e5bf31124133b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/779792ff384cd244f480ded0b60e5bf31124133b/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faf841a9f61f60240e6c5353c58abcbf38b21237", "url": "https://api.github.com/repos/rust-lang/rust/commits/faf841a9f61f60240e6c5353c58abcbf38b21237", "html_url": "https://github.com/rust-lang/rust/commit/faf841a9f61f60240e6c5353c58abcbf38b21237"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "27221296ff31fc467856f7f46c0525f76d327576", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/779792ff384cd244f480ded0b60e5bf31124133b/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779792ff384cd244f480ded0b60e5bf31124133b/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=779792ff384cd244f480ded0b60e5bf31124133b", "patch": "@@ -331,9 +331,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n     }\n \n     if mbcx.errors_buffer.len() > 0 {\n-        mbcx.errors_buffer.sort_by(|diag1, diag2| {\n-            diag1.span.primary_span().cmp(&diag2.span.primary_span())\n-        });\n+        mbcx.errors_buffer.sort_by_key(|diag| diag.span.primary_span());\n \n         if tcx.migrate_borrowck() {\n             match tcx.borrowck(def_id).signalled_any_error {"}]}