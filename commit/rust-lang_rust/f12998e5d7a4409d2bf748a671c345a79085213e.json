{"sha": "f12998e5d7a4409d2bf748a671c345a79085213e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMjk5OGU1ZDdhNDQwOWQyYmY3NDhhNjcxYzM0NWE3OTA4NTIxM2U=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-18T14:02:34Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-18T14:02:52Z"}, "message": "Add a -c option.", "tree": {"sha": "e8ae174f5e6bf1c8c7c87b18d807684d1b126358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8ae174f5e6bf1c8c7c87b18d807684d1b126358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12998e5d7a4409d2bf748a671c345a79085213e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12998e5d7a4409d2bf748a671c345a79085213e", "html_url": "https://github.com/rust-lang/rust/commit/f12998e5d7a4409d2bf748a671c345a79085213e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12998e5d7a4409d2bf748a671c345a79085213e/comments", "author": null, "committer": null, "parents": [{"sha": "148e6f7b00b89850d46624170b82a932d0302575", "url": "https://api.github.com/repos/rust-lang/rust/commits/148e6f7b00b89850d46624170b82a932d0302575", "html_url": "https://github.com/rust-lang/rust/commit/148e6f7b00b89850d46624170b82a932d0302575"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "db06927938993dbda4b3ef9cc6c0f54b8a4b33c9", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=f12998e5d7a4409d2bf748a671c345a79085213e", "patch": "@@ -168,6 +168,8 @@ impure fn main(vec[str] args) {\n                 ot = trans.output_type_none;\n             } else if (_str.eq(arg, \"-S\")) {\n                 ot = trans.output_type_assembly;\n+            } else if (_str.eq(arg, \"-c\")) {\n+                ot = trans.output_type_object;\n             } else if (_str.eq(arg, \"-o\")) {\n                 if (i+1u < len) {\n                     output_file = some(args.(i+1u));"}, {"sha": "3c40a5836d998c98524922dee6ca37f7b0533496", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=f12998e5d7a4409d2bf748a671c345a79085213e", "patch": "@@ -815,8 +815,10 @@ native mod llvm = llvm_lib {\n     fn LLVMRustCreateMemoryBufferWithContentsOfFile(sbuf Path) ->\n         MemoryBufferRef;\n \n-    fn LLVMRustWriteAssembly(PassManagerRef PM, ModuleRef M,\n-                             sbuf Triple, sbuf Output);\n+    /* FIXME: The FileType is an enum.*/\n+    fn LLVMRustWriteOutputFile(PassManagerRef PM, ModuleRef M,\n+                               sbuf Triple, sbuf Output,\n+                               int FileType);\n \n     /** Returns a string describing the last error caused by an LLVMRust*\n         call. */"}, {"sha": "db27a823fbc315477e2c9ec8613edfe909228efb", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f12998e5d7a4409d2bf748a671c345a79085213e", "patch": "@@ -6754,6 +6754,17 @@ tag output_type {\n     output_type_none;\n     output_type_bitcode;\n     output_type_assembly;\n+    output_type_object;\n+}\n+\n+fn is_object_or_assembly(output_type ot) -> bool {\n+    if (ot == output_type_assembly) {\n+        ret true;\n+    }\n+    if (ot == output_type_object) {\n+        ret true;\n+    }\n+    ret false;\n }\n \n fn run_passes(ModuleRef llmod, bool opt, str output,\n@@ -6823,10 +6834,21 @@ fn run_passes(ModuleRef llmod, bool opt, str output,\n     }\n     llvm.LLVMAddVerifierPass(pm.llpm);\n \n-    if (ot == output_type_assembly) {\n-        llvm.LLVMRustWriteAssembly(pm.llpm, llmod,\n-                                   _str.buf(x86.get_target_triple()),\n-                                   _str.buf(output));\n+    if (is_object_or_assembly(ot)) {\n+        let int LLVMAssemblyFile = 0;\n+        let int LLVMObjectFile = 1;\n+        let int LLVMNullFile = 2;\n+        auto FileType;\n+        if (ot == output_type_object) {\n+            FileType = LLVMObjectFile;\n+        } else {\n+            FileType = LLVMAssemblyFile;\n+        }\n+\n+        llvm.LLVMRustWriteOutputFile(pm.llpm, llmod,\n+                                     _str.buf(x86.get_target_triple()),\n+                                     _str.buf(output),\n+                                     FileType);\n         ret;\n     }\n "}, {"sha": "ad702555812fae029a118f55d150db4624707b1d", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=f12998e5d7a4409d2bf748a671c345a79085213e", "patch": "@@ -42,8 +42,15 @@ extern \"C\" void LLVMAddBasicAliasAnalysisPass(LLVMPassManagerRef PM);\n void (*RustHackToFetchPassesO)(LLVMPassManagerRef PM) =\n   LLVMAddBasicAliasAnalysisPass;\n \n-extern \"C\" void LLVMRustWriteAssembly(LLVMPassManagerRef PMR, LLVMModuleRef M,\n-                                      const char *triple, const char *path) {\n+enum LLVMCodeGenFileType {\n+  LLVMAssemblyFile,\n+  LLVMObjectFile,\n+  LLVMNullFile         // Do not emit any output.\n+};\n+\n+extern \"C\" void LLVMRustWriteOutputFile(LLVMPassManagerRef PMR, LLVMModuleRef M,\n+                                        const char *triple, const char *path,\n+                                        LLVMCodeGenFileType FileType) {\n   InitializeAllTargets();\n   InitializeAllAsmPrinters();\n   TargetMachine::setRelocationModel(Reloc::PIC_);\n@@ -53,13 +60,15 @@ extern \"C\" void LLVMRustWriteAssembly(LLVMPassManagerRef PMR, LLVMModuleRef M,\n   TargetMachine &Target = *TheTarget->createTargetMachine(triple, FeaturesStr);\n   bool NoVerify = false;\n   CodeGenOpt::Level OLvl = CodeGenOpt::Default;\n-  TargetMachine::CodeGenFileType  FileType = TargetMachine::CGFT_AssemblyFile;\n   PassManager *PM = unwrap<PassManager>(PMR);\n   std::string ErrorInfo;\n   raw_fd_ostream OS(path, ErrorInfo,\n                     raw_fd_ostream::F_Binary);\n   formatted_raw_ostream FOS(OS);\n-  bool foo = Target.addPassesToEmitFile(*PM, FOS, FileType, OLvl, NoVerify);\n+  TargetMachine::CodeGenFileType FileType2 =\n+    static_cast<TargetMachine::CodeGenFileType>(FileType);\n+\n+  bool foo = Target.addPassesToEmitFile(*PM, FOS, FileType2, OLvl, NoVerify);\n   assert(!foo);\n   PM->run(*unwrap(M));\n }"}, {"sha": "0bd524c21cb66a23a6d8bcf811f2455f41565635", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/f12998e5d7a4409d2bf748a671c345a79085213e/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=f12998e5d7a4409d2bf748a671c345a79085213e", "patch": "@@ -1,5 +1,5 @@\n LLVMRustCreateMemoryBufferWithContentsOfFile\n-LLVMRustWriteAssembly\n+LLVMRustWriteOutputFile\n LLVMRustGetLastError\n LLVMCreateObjectFile\n LLVMDisposeObjectFile"}]}