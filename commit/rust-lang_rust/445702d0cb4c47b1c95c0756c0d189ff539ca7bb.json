{"sha": "445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "node_id": "C_kwDOAAsO6NoAKDQ0NTcwMmQwY2I0YzQ3YjFjOTVjMDc1NmMwZDE4OWZmNTM5Y2E3YmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-08T06:00:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-08T06:00:41Z"}, "message": "Rollup merge of #99026 - anall:buffix/clippy-9131, r=xFrednet\n\nAdd test for and fix rust-lang/rust-clippy#9131\n\nThis lint seems to have been broken by #98446 -- but of course, there was no clippy test for this case at the time.\n\n`expr.span.ctxt().outer_expn_data()` now has `MacroKind::Derive` instead of `MacroKind::Attr` for something like:\n\n```\n#[derive(Clone, Debug)]\npub struct UnderscoreInStruct {\n    _foo: u32,\n}\n```\n\n---\n\nchangelog: none\n\ncloses: https://github.com/rust-lang/rust-clippy/issues/9131", "tree": {"sha": "202b412781a793d655e75b9c24d215aa2034fe39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/202b412781a793d655e75b9c24d215aa2034fe39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJix8gJCRBK7hj4Ov3rIwAAVx4IABytgt1xcW3KSukTaGh8iKsP\nOyXGgCQnXAV+7q/CbWo+GNwaJcwKYbdC3fOJIo76pCDgukG2Pzb7CVIdqMTcl9Bo\nJ7l5jrpeMtjWU3S0jlqe7GHR1u/oQKHpAEr7zz2vOhJEiJccRSc27ZWdF18pG+A0\nX679O4wPIoSNrmxXSk9GN9L4/+g1OrQs1I2ZTLmiaWcaPC+fTqEURQ+txIFAZXnd\na2JsGrgxciiG3UH0CZepU6/rheAws3go7U2anp8CevHgKXugX6C6sQJ54RQa2oE2\njY69mVTTb06sWcOXEWAdcGBssZFBcdvgTgj2ePdYH1pup+wxDebEaYFdYylr45c=\n=MFJ3\n-----END PGP SIGNATURE-----\n", "payload": "tree 202b412781a793d655e75b9c24d215aa2034fe39\nparent e58c2d4f52b6dfcd7095c4f12a7ef8879d282189\nparent 98b84195a217f53659d8f88ff9427ac7e463ccfb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1657260041 +0200\ncommitter GitHub <noreply@github.com> 1657260041 +0200\n\nRollup merge of #99026 - anall:buffix/clippy-9131, r=xFrednet\n\nAdd test for and fix rust-lang/rust-clippy#9131\n\nThis lint seems to have been broken by #98446 -- but of course, there was no clippy test for this case at the time.\n\n`expr.span.ctxt().outer_expn_data()` now has `MacroKind::Derive` instead of `MacroKind::Attr` for something like:\n\n```\n#[derive(Clone, Debug)]\npub struct UnderscoreInStruct {\n    _foo: u32,\n}\n```\n\n---\n\nchangelog: none\n\ncloses: https://github.com/rust-lang/rust-clippy/issues/9131\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "html_url": "https://github.com/rust-lang/rust/commit/445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e58c2d4f52b6dfcd7095c4f12a7ef8879d282189", "url": "https://api.github.com/repos/rust-lang/rust/commits/e58c2d4f52b6dfcd7095c4f12a7ef8879d282189", "html_url": "https://github.com/rust-lang/rust/commit/e58c2d4f52b6dfcd7095c4f12a7ef8879d282189"}, {"sha": "98b84195a217f53659d8f88ff9427ac7e463ccfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/98b84195a217f53659d8f88ff9427ac7e463ccfb", "html_url": "https://github.com/rust-lang/rust/commit/98b84195a217f53659d8f88ff9427ac7e463ccfb"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "be7df08d89f0521de6f2bd871d415ded2e639c2d", "filename": "src/tools/clippy/clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmisc.rs?ref=445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "patch": "@@ -301,7 +301,7 @@ fn in_attributes_expansion(expr: &Expr<'_>) -> bool {\n     use rustc_span::hygiene::MacroKind;\n     if expr.span.from_expansion() {\n         let data = expr.span.ctxt().outer_expn_data();\n-        matches!(data.kind, ExpnKind::Macro(MacroKind::Attr, _))\n+        matches!(data.kind, ExpnKind::Macro(MacroKind::Attr|MacroKind::Derive, _))\n     } else {\n         false\n     }"}, {"sha": "d20977d55d29de60b79fe9202716b827c917c21b", "filename": "src/tools/clippy/tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.rs?ref=445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "patch": "@@ -44,6 +44,12 @@ fn in_struct_field() {\n     s._underscore_field += 1;\n }\n \n+/// Tests that we do not lint if the struct field is used in code created with derive.\n+#[derive(Clone, Debug)]\n+pub struct UnderscoreInStruct {\n+    _foo: u32,\n+}\n+\n /// Tests that we do not lint if the underscore is not a prefix\n fn non_prefix_underscore(some_foo: u32) -> u32 {\n     some_foo + 1"}, {"sha": "61a9161d212da9a281d20bd840948e0dabc81763", "filename": "src/tools/clippy/tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/445702d0cb4c47b1c95c0756c0d189ff539ca7bb/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fused_underscore_binding.stderr?ref=445702d0cb4c47b1c95c0756c0d189ff539ca7bb", "patch": "@@ -31,7 +31,7 @@ LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: used binding `_i` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:99:16\n+  --> $DIR/used_underscore_binding.rs:105:16\n    |\n LL |         uses_i(_i);\n    |                ^^"}]}