{"sha": "5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "node_id": "C_kwDOAAsO6NoAKDVjMTlhZTk2ZTdlN2I4ZWVjZjg2Yzg3Yzk2YmE2NjZjZDViNTA2NmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-11T11:12:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-11T11:12:33Z"}, "message": "Auto merge of #8660 - yoav-lavi:squashed-master, r=flip1995\n\n`unnecessary_owned_empty_strings`\n\n[`unnecessary_owned_empty_strings`]\n\nFixes https://github.com/rust-lang/rust-clippy/issues/8650\n\n- \\[x] Followed [lint naming conventions][lint_naming]\n- \\[x] Added passing UI tests (including committed `.stderr` file)\n- \\[x] `cargo test` passes locally\n- \\[x] Executed `cargo dev update_lints`\n- \\[x] Added lint documentation\n- \\[x] Run `cargo dev fmt`\n\n[lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n\nchangelog: Adds `unnecessary_owned_empty_strings`, a lint that detects passing owned empty strings to a function expecting `&str`", "tree": {"sha": "1b48cafc0290fcedaa52c40944339829f5c3d10c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b48cafc0290fcedaa52c40944339829f5c3d10c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "html_url": "https://github.com/rust-lang/rust/commit/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85e91dc99e1fe21eebe7f9485a8af8b5a3430051", "url": "https://api.github.com/repos/rust-lang/rust/commits/85e91dc99e1fe21eebe7f9485a8af8b5a3430051", "html_url": "https://github.com/rust-lang/rust/commit/85e91dc99e1fe21eebe7f9485a8af8b5a3430051"}, {"sha": "10201370a1509b806b9e2a83ded6b132466291b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/10201370a1509b806b9e2a83ded6b132466291b8", "html_url": "https://github.com/rust-lang/rust/commit/10201370a1509b806b9e2a83ded6b132466291b8"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "44a36870108d5c5900577dd31fd3d5809a3076b3", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -3650,6 +3650,7 @@ Released 2018-09-13\n [`unnecessary_lazy_evaluations`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n [`unnecessary_mut_passed`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n [`unnecessary_operation`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\n+[`unnecessary_owned_empty_strings`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_owned_empty_strings\n [`unnecessary_self_imports`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_self_imports\n [`unnecessary_sort_by`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_sort_by\n [`unnecessary_to_owned`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned"}, {"sha": "02ba7835639e7e58c104c06031c9c71b644e2095", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -310,6 +310,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(unit_types::UNIT_CMP),\n     LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),\n     LintId::of(unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n+    LintId::of(unnecessary_owned_empty_strings::UNNECESSARY_OWNED_EMPTY_STRINGS),\n     LintId::of(unnecessary_sort_by::UNNECESSARY_SORT_BY),\n     LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n     LintId::of(unused_io_amount::UNUSED_IO_AMOUNT),"}, {"sha": "704e79885cfb45b7e38fff57832673812f119202", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -523,6 +523,7 @@ store.register_lints(&[\n     unit_types::UNIT_CMP,\n     unnamed_address::FN_ADDRESS_COMPARISONS,\n     unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n+    unnecessary_owned_empty_strings::UNNECESSARY_OWNED_EMPTY_STRINGS,\n     unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS,\n     unnecessary_sort_by::UNNECESSARY_SORT_BY,\n     unnecessary_wraps::UNNECESSARY_WRAPS,"}, {"sha": "f52fe97ed237c6ed763113751ed716afd142415b", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -106,6 +106,7 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n     LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n     LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n+    LintId::of(unnecessary_owned_empty_strings::UNNECESSARY_OWNED_EMPTY_STRINGS),\n     LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n     LintId::of(unused_unit::UNUSED_UNIT),\n     LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),"}, {"sha": "74ade422dc88707ca1031f9ea2c7a19aee411838", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -383,6 +383,7 @@ mod unit_hash;\n mod unit_return_expecting_ord;\n mod unit_types;\n mod unnamed_address;\n+mod unnecessary_owned_empty_strings;\n mod unnecessary_self_imports;\n mod unnecessary_sort_by;\n mod unnecessary_wraps;\n@@ -868,6 +869,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     });\n     store.register_early_pass(|| Box::new(crate_in_macro_def::CrateInMacroDef));\n     store.register_early_pass(|| Box::new(empty_structs_with_brackets::EmptyStructsWithBrackets));\n+    store.register_late_pass(|| Box::new(unnecessary_owned_empty_strings::UnnecessaryOwnedEmptyStrings));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "8a4f4c0ad9719f041d32083c357a910ebbfe20d4", "filename": "clippy_lints/src/unnecessary_owned_empty_strings.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Funnecessary_owned_empty_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_lints%2Fsrc%2Funnecessary_owned_empty_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_owned_empty_strings.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -0,0 +1,81 @@\n+use clippy_utils::{diagnostics::span_lint_and_sugg, ty::is_type_diagnostic_item};\n+use clippy_utils::{match_def_path, paths};\n+use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n+use rustc_errors::Applicability;\n+use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::sym;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    ///\n+    /// Detects cases of owned empty strings being passed as an argument to a function expecting `&str`\n+    ///\n+    /// ### Why is this bad?\n+    ///\n+    /// This results in longer and less readable code\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// vec![\"1\", \"2\", \"3\"].join(&String::new());\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// vec![\"1\", \"2\", \"3\"].join(\"\");\n+    /// ```\n+    #[clippy::version = \"1.62.0\"]\n+    pub UNNECESSARY_OWNED_EMPTY_STRINGS,\n+    style,\n+    \"detects cases of references to owned empty strings being passed as an argument to a function expecting `&str`\"\n+}\n+declare_lint_pass!(UnnecessaryOwnedEmptyStrings => [UNNECESSARY_OWNED_EMPTY_STRINGS]);\n+\n+impl<'tcx> LateLintPass<'tcx> for UnnecessaryOwnedEmptyStrings {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n+        if_chain! {\n+            if let ExprKind::AddrOf(BorrowKind::Ref, Mutability::Not, inner_expr) = expr.kind;\n+            if let ExprKind::Call(fun, args) = inner_expr.kind;\n+            if let ExprKind::Path(ref qpath) = fun.kind;\n+            if let Some(fun_def_id) = cx.qpath_res(qpath, fun.hir_id).opt_def_id();\n+            if let ty::Ref(_, inner_str, _) = cx.typeck_results().expr_ty_adjusted(expr).kind();\n+            if inner_str.is_str();\n+            then {\n+                if match_def_path(cx, fun_def_id, &paths::STRING_NEW) {\n+                     span_lint_and_sugg(\n+                            cx,\n+                            UNNECESSARY_OWNED_EMPTY_STRINGS,\n+                            expr.span,\n+                            \"usage of `&String::new()` for a function expecting a `&str` argument\",\n+                            \"try\",\n+                            \"\\\"\\\"\".to_owned(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                } else {\n+                    if_chain! {\n+                        if match_def_path(cx, fun_def_id, &paths::FROM_FROM);\n+                        if let [.., last_arg] = args;\n+                        if let ExprKind::Lit(spanned) = &last_arg.kind;\n+                        if let LitKind::Str(symbol, _) = spanned.node;\n+                        if symbol.is_empty();\n+                        let inner_expr_type = cx.typeck_results().expr_ty(inner_expr);\n+                        if is_type_diagnostic_item(cx, inner_expr_type, sym::String);\n+                        then {\n+                            span_lint_and_sugg(\n+                                cx,\n+                                UNNECESSARY_OWNED_EMPTY_STRINGS,\n+                                expr.span,\n+                                \"usage of `&String::from(\\\"\\\")` for a function expecting a `&str` argument\",\n+                                \"try\",\n+                                \"\\\"\\\"\".to_owned(),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "deb548daf2d0c7f4f77e8f972e7144416b20b023", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -148,6 +148,7 @@ pub const CONVERT_IDENTITY: [&str; 3] = [\"core\", \"convert\", \"identity\"];\n pub const STD_FS_CREATE_DIR: [&str; 3] = [\"std\", \"fs\", \"create_dir\"];\n pub const STRING_AS_MUT_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_mut_str\"];\n pub const STRING_AS_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_str\"];\n+pub const STRING_NEW: [&str; 4] = [\"alloc\", \"string\", \"String\", \"new\"];\n pub const STR_ENDS_WITH: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"ends_with\"];\n pub const STR_FROM_UTF8: [&str; 4] = [\"core\", \"str\", \"converts\", \"from_utf8\"];\n pub const STR_LEN: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"len\"];"}, {"sha": "f95f91329a2faeeae22da74496d42568e89512c8", "filename": "tests/ui/unnecessary_owned_empty_strings.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_owned_empty_strings.fixed?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -0,0 +1,22 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_owned_empty_strings)]\n+\n+fn ref_str_argument(_value: &str) {}\n+\n+#[allow(clippy::ptr_arg)]\n+fn ref_string_argument(_value: &String) {}\n+\n+fn main() {\n+    // should be linted\n+    ref_str_argument(\"\");\n+\n+    // should be linted\n+    ref_str_argument(\"\");\n+\n+    // should not be linted\n+    ref_str_argument(\"\");\n+\n+    // should not be linted\n+    ref_string_argument(&String::new());\n+}"}, {"sha": "0cbdc151ed9b1b0b3a2056ed6e4e78665f175ee0", "filename": "tests/ui/unnecessary_owned_empty_strings.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_owned_empty_strings.rs?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -0,0 +1,22 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_owned_empty_strings)]\n+\n+fn ref_str_argument(_value: &str) {}\n+\n+#[allow(clippy::ptr_arg)]\n+fn ref_string_argument(_value: &String) {}\n+\n+fn main() {\n+    // should be linted\n+    ref_str_argument(&String::new());\n+\n+    // should be linted\n+    ref_str_argument(&String::from(\"\"));\n+\n+    // should not be linted\n+    ref_str_argument(\"\");\n+\n+    // should not be linted\n+    ref_string_argument(&String::new());\n+}"}, {"sha": "46bc4597b335f0bfb7be4ce8053f46b3735e95b4", "filename": "tests/ui/unnecessary_owned_empty_strings.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d/tests%2Fui%2Funnecessary_owned_empty_strings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_owned_empty_strings.stderr?ref=5c19ae96e7e7b8eecf86c87c96ba666cd5b5066d", "patch": "@@ -0,0 +1,16 @@\n+error: usage of `&String::new()` for a function expecting a `&str` argument\n+  --> $DIR/unnecessary_owned_empty_strings.rs:12:22\n+   |\n+LL |     ref_str_argument(&String::new());\n+   |                      ^^^^^^^^^^^^^^ help: try: `\"\"`\n+   |\n+   = note: `-D clippy::unnecessary-owned-empty-strings` implied by `-D warnings`\n+\n+error: usage of `&String::from(\"\")` for a function expecting a `&str` argument\n+  --> $DIR/unnecessary_owned_empty_strings.rs:15:22\n+   |\n+LL |     ref_str_argument(&String::from(\"\"));\n+   |                      ^^^^^^^^^^^^^^^^^ help: try: `\"\"`\n+\n+error: aborting due to 2 previous errors\n+"}]}