{"sha": "7287d3aaa0545a9b22cea874f2d751de4fefd23d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODdkM2FhYTA1NDVhOWIyMmNlYTg3NGYyZDc1MWRlNGZlZmQyM2Q=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-14T17:52:32Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-14T17:52:32Z"}, "message": "Teach front-end about simple, first-cut version of const items.", "tree": {"sha": "d35680fc38e9a559d466be476066bb34243415e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35680fc38e9a559d466be476066bb34243415e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7287d3aaa0545a9b22cea874f2d751de4fefd23d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7287d3aaa0545a9b22cea874f2d751de4fefd23d", "html_url": "https://github.com/rust-lang/rust/commit/7287d3aaa0545a9b22cea874f2d751de4fefd23d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7287d3aaa0545a9b22cea874f2d751de4fefd23d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ec78636fdbe3a01a0d2f97cbf1025c603b8b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ec78636fdbe3a01a0d2f97cbf1025c603b8b3e", "html_url": "https://github.com/rust-lang/rust/commit/43ec78636fdbe3a01a0d2f97cbf1025c603b8b3e"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "b3a13df87d6a2d2931fc5eea6f6bb1ba576ce473", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -415,6 +415,7 @@ and mod_item' =\n   | MOD_ITEM_mod of (mod_view * mod_items)\n   | MOD_ITEM_fn of fn\n   | MOD_ITEM_obj of obj\n+  | MOD_ITEM_const of (ty * expr option)\n \n and mod_item_decl =\n     {\n@@ -1438,6 +1439,18 @@ and fmt_mod_item (ff:Format.formatter) (id:ident) (item:mod_item) : unit =\n \n         | MOD_ITEM_obj obj ->\n             fmt_obj ff id params obj\n+\n+        | MOD_ITEM_const (ty,e) ->\n+            fmt ff \"const \";\n+            fmt_ty ff ty;\n+            begin\n+              match e with\n+                  None -> ()\n+                | Some e ->\n+                    fmt ff \" = \";\n+                    fmt_expr ff e\n+            end;\n+            fmt ff \";\"\n     end\n \n and fmt_import (ff:Format.formatter) (ident:ident) (name:name) : unit ="}, {"sha": "3bf61f8c494a251887c0c44dd78bbd64a90241ec", "filename": "src/boot/fe/item.ml", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Fitem.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Fitem.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fitem.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -19,6 +19,13 @@ let rec parse_expr (ps:pstate) : (Ast.stmt array * Ast.expr) =\n   let pexp = ctxt \"expr\" Pexp.parse_pexp ps in\n     Pexp.desugar_expr ps pexp\n \n+and parse_prim_expr (ps:pstate) : Ast.expr =\n+  let pexp = ctxt \"expr\" Pexp.parse_pexp ps in\n+  let (stmts, expr) = Pexp.desugar_expr ps pexp in\n+    if Array.length stmts = 0\n+    then expr\n+    else raise (Parse_err (ps, \"expected primitive expression\"))\n+\n and parse_expr_atom (ps:pstate) : (Ast.stmt array * Ast.atom) =\n   let pexp = ctxt \"expr\" Pexp.parse_pexp ps in\n     Pexp.desugar_expr_atom ps pexp\n@@ -944,6 +951,17 @@ and parse_mod_item (ps:pstate)\n                               (decl params (Ast.MOD_ITEM_fn fn))) |]\n             end\n \n+      | CONST ->\n+          bump ps;\n+          let ty = Pexp.parse_ty ps in\n+          let ident = Pexp.parse_ident ps in\n+            expect ps EQ;\n+            let expr = parse_prim_expr ps in\n+              expect ps SEMI;\n+              let bpos = lexpos ps in\n+                [| (ident, span ps apos bpos\n+                      (decl [||] (Ast.MOD_ITEM_const (ty, Some expr)))) |]\n+\n       | MOD ->\n           bump ps;\n           let (ident, params) = parse_ident_and_params ps \"mod\" in"}, {"sha": "58b27ec1a4c94a9bd437b2dc310a5ef16af76251", "filename": "src/boot/fe/lexer.mll", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Flexer.mll", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Flexer.mll", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Flexer.mll?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -110,6 +110,7 @@\n                 (\"export\", EXPORT);\n \n                 (\"let\", LET);\n+                (\"const\", CONST);\n \n                 (\"log\", LOG);\n                 (\"spawn\", SPAWN);"}, {"sha": "e6f8cd4bbc3494462375f20a0c3f08019bbc5876", "filename": "src/boot/fe/token.ml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Ftoken.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Ffe%2Ftoken.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Ftoken.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -93,6 +93,7 @@ type token =\n \n   (* Value / stmt declarators *)\n   | LET\n+  | CONST\n \n   (* Magic runtime services *)\n   | LOG\n@@ -246,6 +247,7 @@ let rec string_of_tok t =\n \n     (* Value / stmt declarators. *)\n     | LET        -> \"let\"\n+    | CONST      -> \"const\"\n \n     (* Magic runtime services *)\n     | LOG        -> \"log\""}, {"sha": "463acadb17ba409bcf6d968d0530f778a3f076f9", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -1366,6 +1366,7 @@ let ty_of_mod_item (item:Ast.mod_item) : Ast.ty =\n       Ast.MOD_ITEM_type _ -> Ast.TY_type\n     | Ast.MOD_ITEM_fn f -> (Ast.TY_fn (ty_fn_of_fn f))\n     | Ast.MOD_ITEM_mod _ -> bug () \"Semant.ty_of_mod_item on mod\"\n+    | Ast.MOD_ITEM_const (ty, _) -> ty\n     | Ast.MOD_ITEM_obj ob ->\n         let taux = { Ast.fn_effect = Ast.PURE;\n                      Ast.fn_is_iter = false }"}, {"sha": "b576af867d808b172902d97658595a46aa9f3a80", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -295,6 +295,7 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n             LTYPE_mono ty\n           else\n             LTYPE_poly ((Array.map (fun p -> p.Common.node) params), ty)\n+      | Ast.MOD_ITEM_const (ty, _) -> LTYPE_mono ty\n       | Ast.MOD_ITEM_type _ ->\n           Common.err None \"Type-item used in non-type context\"\n   in"}, {"sha": "7b89cbd8eee63d72ecde3fc44a96a12779ef731e", "filename": "src/boot/me/walk.ml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Fwalk.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fboot%2Fme%2Fwalk.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fwalk.ml?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -173,6 +173,9 @@ and walk_mod_item\n   let children _ =\n     match item.node.Ast.decl_item with\n         Ast.MOD_ITEM_type (_, ty) -> walk_ty v ty\n+      | Ast.MOD_ITEM_const (ty, e) ->\n+          walk_ty v ty;\n+          walk_option (walk_expr v) e\n       | Ast.MOD_ITEM_fn f -> walk_fn v f item.id\n       | Ast.MOD_ITEM_tag (hdr, _, _) ->\n           walk_header_slots v hdr"}, {"sha": "b303fc3c2144e080c447dd2b947bf605fb47ee2a", "filename": "src/comp/fe/lexer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fcomp%2Ffe%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fcomp%2Ffe%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffe%2Flexer.rs?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -137,6 +137,7 @@ fn new_reader(stdio_reader rdr, str filename) -> reader\n     keywords.insert(\"export\", token.EXPORT());\n \n     keywords.insert(\"let\", token.LET());\n+    keywords.insert(\"const\", token.CONST());\n \n     keywords.insert(\"log\", token.LOG());\n     keywords.insert(\"spawn\", token.SPAWN());"}, {"sha": "85e33b64b1de79d754c6c3c5db7bbd755c20ba96", "filename": "src/comp/fe/token.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fcomp%2Ffe%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Fcomp%2Ffe%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffe%2Ftoken.rs?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -103,6 +103,7 @@ tag token {\n \n     /* Value / stmt declarators */\n     LET();\n+    CONST();\n \n     /* Magic runtime services */\n     LOG();\n@@ -261,6 +262,7 @@ fn to_str(token t) -> str {\n \n         /* Value / stmt declarators */\n         case (LET()) { ret \"let\"; }\n+        case (CONST()) { ret \"const\"; }\n \n         /* Magic runtime services */\n         case (LOG()) { ret \"log\"; }"}, {"sha": "36ffb99418fef0b2880938464cd7318913248a9e", "filename": "src/test/run-pass/const.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Ftest%2Frun-pass%2Fconst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7287d3aaa0545a9b22cea874f2d751de4fefd23d/src%2Ftest%2Frun-pass%2Fconst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst.rs?ref=7287d3aaa0545a9b22cea874f2d751de4fefd23d", "patch": "@@ -0,0 +1,4 @@\n+const int i = 10;\n+\n+fn main() {\n+}\n\\ No newline at end of file"}]}