{"sha": "aaaea2c562dc5638e8fcaa00371492ae71b07e46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYWVhMmM1NjJkYzU2MzhlOGZjYWEwMDM3MTQ5MmFlNzFiMDdlNDY=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-12-05T22:01:09Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-12-05T22:01:09Z"}, "message": "compile_error example blurbs", "tree": {"sha": "d0b08e813da7d1b761450ab19046c310375d9d41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0b08e813da7d1b761450ab19046c310375d9d41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaaea2c562dc5638e8fcaa00371492ae71b07e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaaea2c562dc5638e8fcaa00371492ae71b07e46", "html_url": "https://github.com/rust-lang/rust/commit/aaaea2c562dc5638e8fcaa00371492ae71b07e46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaaea2c562dc5638e8fcaa00371492ae71b07e46/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f0b766c35f6822f1f69ec23630496bbe11a707f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0b766c35f6822f1f69ec23630496bbe11a707f", "html_url": "https://github.com/rust-lang/rust/commit/3f0b766c35f6822f1f69ec23630496bbe11a707f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "b36473d9b75f07906312a012e26d412ae7621288", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aaaea2c562dc5638e8fcaa00371492ae71b07e46/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaaea2c562dc5638e8fcaa00371492ae71b07e46/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=aaaea2c562dc5638e8fcaa00371492ae71b07e46", "patch": "@@ -286,8 +286,11 @@ pub mod builtin {\n     /// better error messages for errornous conditions.\n     ///\n     /// # Examples\n+    ///\n     /// Two such examples are macros and `#[cfg]` environments.\n     ///\n+    /// Emit better compiler error if a macro is passed invalid values.\n+    ///\n     /// ```compile_fail\n     /// macro_rules! give_me_foo_or_bar {\n     ///     (foo) => {};\n@@ -301,6 +304,8 @@ pub mod builtin {\n     /// // ^ will fail at compile time with message \"This macro only accepts `foo` or `bar`\"\n     /// ```\n     ///\n+    /// Emit compiler error if one of a number of features isn't available.\n+    ///\n     /// ```compile_fail\n     /// #[cfg(not(any(feature = \"foo\", feature = \"bar\")))]\n     /// compile_error!(\"Either feature \\\"foo\\\" or \\\"bar\\\" must be enabled for this crate.\")"}]}