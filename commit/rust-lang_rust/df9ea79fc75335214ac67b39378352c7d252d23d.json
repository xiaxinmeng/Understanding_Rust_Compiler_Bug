{"sha": "df9ea79fc75335214ac67b39378352c7d252d23d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmOWVhNzlmYzc1MzM1MjE0YWM2N2IzOTM3ODM1MmM3ZDI1MmQyM2Q=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-04T04:42:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-04T04:42:53Z"}, "message": "Rollup merge of #85717 - fee1-dead:document-cow, r=yaahc\n\nDocument `From` impls for cow.rs", "tree": {"sha": "be16d5bc2c102dca805ccaafd438ea473943c0fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be16d5bc2c102dca805ccaafd438ea473943c0fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df9ea79fc75335214ac67b39378352c7d252d23d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgua9NCRBK7hj4Ov3rIwAAQWQIAFWtaC0YuALJ1IW0QfaOJh1b\nYHtFNwCU8UEwLj2qx1/2Cofx6E9D1spAQrro+l4zrnf6fb6nEMFSUO8zv438zmG4\nSqWmSQzpTMRw/POEX+g+iZzNbP49HGP+JQqh/6hFDmmFHlxHzVYB0eJjHFvgCNzA\n3xWVonW3Kijxezi8Woq/hJCK6zkpNP7QO+juH4hjL9JfdPscWt0xHzf5tBDfL5rX\nU7GpQG0F2haz9laP2e4FcQbHindq384JI29mNWCLIKni6HJj/NuE8KqgynlU8XU7\n7GOajgyFMs6qyixpcYertEreoK3sEvZO6RBIaKa+EupITx9IFJ7ayGIbi+PXrUQ=\n=k+8P\n-----END PGP SIGNATURE-----\n", "payload": "tree be16d5bc2c102dca805ccaafd438ea473943c0fc\nparent f1cee2c60e430d4f600afdc7c7aaa6eafc020c14\nparent 3870e8a31d7c99b0127e775755d758010e6105bb\nauthor Yuki Okushi <jtitor@2k36.org> 1622781773 +0900\ncommitter GitHub <noreply@github.com> 1622781773 +0900\n\nRollup merge of #85717 - fee1-dead:document-cow, r=yaahc\n\nDocument `From` impls for cow.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df9ea79fc75335214ac67b39378352c7d252d23d", "html_url": "https://github.com/rust-lang/rust/commit/df9ea79fc75335214ac67b39378352c7d252d23d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df9ea79fc75335214ac67b39378352c7d252d23d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1cee2c60e430d4f600afdc7c7aaa6eafc020c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cee2c60e430d4f600afdc7c7aaa6eafc020c14", "html_url": "https://github.com/rust-lang/rust/commit/f1cee2c60e430d4f600afdc7c7aaa6eafc020c14"}, {"sha": "3870e8a31d7c99b0127e775755d758010e6105bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3870e8a31d7c99b0127e775755d758010e6105bb", "html_url": "https://github.com/rust-lang/rust/commit/3870e8a31d7c99b0127e775755d758010e6105bb"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "64943a273c9a591b9c1fb84da7de15a81c478c3d", "filename": "library/alloc/src/vec/cow.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/df9ea79fc75335214ac67b39378352c7d252d23d/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df9ea79fc75335214ac67b39378352c7d252d23d/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs?ref=df9ea79fc75335214ac67b39378352c7d252d23d", "patch": "@@ -5,20 +5,38 @@ use super::Vec;\n \n #[stable(feature = \"cow_from_vec\", since = \"1.8.0\")]\n impl<'a, T: Clone> From<&'a [T]> for Cow<'a, [T]> {\n+    /// Creates a [`Borrowed`] variant of [`Cow`]\n+    /// from a slice.\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Borrowed`]: crate::borrow::Cow::Borrowed\n     fn from(s: &'a [T]) -> Cow<'a, [T]> {\n         Cow::Borrowed(s)\n     }\n }\n \n #[stable(feature = \"cow_from_vec\", since = \"1.8.0\")]\n impl<'a, T: Clone> From<Vec<T>> for Cow<'a, [T]> {\n+    /// Creates an [`Owned`] variant of [`Cow`]\n+    /// from an owned instance of [`Vec`].\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Owned`]: crate::borrow::Cow::Owned\n     fn from(v: Vec<T>) -> Cow<'a, [T]> {\n         Cow::Owned(v)\n     }\n }\n \n #[stable(feature = \"cow_from_vec_ref\", since = \"1.28.0\")]\n impl<'a, T: Clone> From<&'a Vec<T>> for Cow<'a, [T]> {\n+    /// Creates a [`Borrowed`] variant of [`Cow`]\n+    /// from a reference to [`Vec`].\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Borrowed`]: crate::borrow::Cow::Borrowed\n     fn from(v: &'a Vec<T>) -> Cow<'a, [T]> {\n         Cow::Borrowed(v.as_slice())\n     }"}]}