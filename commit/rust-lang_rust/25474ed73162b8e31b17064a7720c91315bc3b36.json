{"sha": "25474ed73162b8e31b17064a7720c91315bc3b36", "node_id": "C_kwDOAAsO6NoAKDI1NDc0ZWQ3MzE2MmI4ZTMxYjE3MDY0YTc3MjBjOTEzMTViYzNiMzY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-03T05:24:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-03T05:24:16Z"}, "message": "Rollup merge of #91453 - ChrisDenton:doc-win-tls-dtors, r=dtolnay\n\nDocument Windows TLS drop behaviour\n\nThe way Windows TLS destructors are run has some \"interesting\" properties. They should be documented.\n\nFixes #74875", "tree": {"sha": "9fb437c1cb7764442eeffe51a193f34aaa210cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb437c1cb7764442eeffe51a193f34aaa210cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25474ed73162b8e31b17064a7720c91315bc3b36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqaoACRBK7hj4Ov3rIwAApC8IAKIUbaoG679iRxzJuni51raM\nbv1t207qzmALi4HU8EX3QXmgabcDpKbi6GDv4r2bLlK/cmQRDQnIXSQHYZa9TGkS\npCRb7veMbJe0Wc7YFimTY+H37m0YYOhdfkUeQdfYVgHU3V5UlNaqHwZStJ+OLeNi\nIWtnPLODQdBc5/+dU7ZkU2KpkfXw1bUcNrnaPFG3yJ3rT1WlUUIBqXtUKj1BZNRH\nElP/rb5mzllC62ccqsXnSyy/1YHGeXr6PWOYA8EwJmN70/62MbMrYbBTGn/VNTO0\nEa89feMpBSndwTWegNfozmjUIzGJfHGpCWwi811iSW/UknENPfBUU6x9Sxr/KqM=\n=CKFY\n-----END PGP SIGNATURE-----\n", "payload": "tree 9fb437c1cb7764442eeffe51a193f34aaa210cc2\nparent 63da52af4af185bcbe0e7bb5c70eb23b842c6706\nparent 7a145250c6b23cb1bc361e1a8dae465720c46706\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638509056 +0100\ncommitter GitHub <noreply@github.com> 1638509056 +0100\n\nRollup merge of #91453 - ChrisDenton:doc-win-tls-dtors, r=dtolnay\n\nDocument Windows TLS drop behaviour\n\nThe way Windows TLS destructors are run has some \"interesting\" properties. They should be documented.\n\nFixes #74875\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25474ed73162b8e31b17064a7720c91315bc3b36", "html_url": "https://github.com/rust-lang/rust/commit/25474ed73162b8e31b17064a7720c91315bc3b36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25474ed73162b8e31b17064a7720c91315bc3b36/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63da52af4af185bcbe0e7bb5c70eb23b842c6706", "url": "https://api.github.com/repos/rust-lang/rust/commits/63da52af4af185bcbe0e7bb5c70eb23b842c6706", "html_url": "https://github.com/rust-lang/rust/commit/63da52af4af185bcbe0e7bb5c70eb23b842c6706"}, {"sha": "7a145250c6b23cb1bc361e1a8dae465720c46706", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a145250c6b23cb1bc361e1a8dae465720c46706", "html_url": "https://github.com/rust-lang/rust/commit/7a145250c6b23cb1bc361e1a8dae465720c46706"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "64c8416b61c79ec4b955f85184e9db5d5ec266a3", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/25474ed73162b8e31b17064a7720c91315bc3b36/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25474ed73162b8e31b17064a7720c91315bc3b36/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=25474ed73162b8e31b17064a7720c91315bc3b36", "patch": "@@ -76,7 +76,21 @@ use crate::fmt;\n ///    destroyed, but not all platforms have this guard. Those platforms that do\n ///    not guard typically have a synthetic limit after which point no more\n ///    destructors are run.\n+/// 3. When the process exits on Windows systems, TLS destructors may only be\n+///    run on the thread that causes the process to exit. This is because the\n+///    other threads may be forcibly terminated.\n ///\n+/// ## Synchronization in thread-local destructors\n+///\n+/// On Windows, synchronization operations (such as [`JoinHandle::join`]) in\n+/// thread local destructors are prone to deadlocks and so should be avoided.\n+/// This is because the [loader lock] is held while a destructor is run. The\n+/// lock is acquired whenever a thread starts or exits or when a DLL is loaded\n+/// or unloaded. Therefore these events are blocked for as long as a thread\n+/// local destructor is running.\n+///\n+/// [loader lock]: https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-best-practices\n+/// [`JoinHandle::join`]: crate::thread::JoinHandle::join\n /// [`with`]: LocalKey::with\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct LocalKey<T: 'static> {"}]}