{"sha": "a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwODVlM2JkNDU2YzJmODA4MmFhZDBjZTAyMGE1N2U5OWZiNzdlYjc=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-12T08:34:00Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-12T09:25:42Z"}, "message": "Fix inherent-associated-const search result links\n\nNormal constants have their own page while associated constants are\nembedded within their parent-items page.", "tree": {"sha": "fb68d173942aeb4896b6832a540e58dac9c0a292", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb68d173942aeb4896b6832a540e58dac9c0a292"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "html_url": "https://github.com/rust-lang/rust/commit/a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a085e3bd456c2f8082aad0ce020a57e99fb77eb7/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9732ed1471689976fc32fa6757fd29c5a587f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9732ed1471689976fc32fa6757fd29c5a587f5d", "html_url": "https://github.com/rust-lang/rust/commit/b9732ed1471689976fc32fa6757fd29c5a587f5d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "12349e634576925cfa82fbd97351503917625a47", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a085e3bd456c2f8082aad0ce020a57e99fb77eb7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a085e3bd456c2f8082aad0ce020a57e99fb77eb7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "patch": "@@ -1281,10 +1281,8 @@ impl Clean<Item> for hir::ImplItem {\n     fn clean(&self, cx: &DocContext) -> Item {\n         let inner = match self.node {\n             hir::ImplItemKind::Const(ref ty, ref expr) => {\n-                ConstantItem(Constant{\n-                    type_: ty.clean(cx),\n-                    expr: expr.span.to_src(cx),\n-                })\n+                AssociatedConstItem(ty.clean(cx),\n+                                    Some(expr.span.to_src(cx)))\n             }\n             hir::ImplItemKind::Method(ref sig, _) => {\n                 MethodItem(sig.clean(cx))"}]}