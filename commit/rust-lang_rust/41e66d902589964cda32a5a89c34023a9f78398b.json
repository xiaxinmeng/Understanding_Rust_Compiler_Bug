{"sha": "41e66d902589964cda32a5a89c34023a9f78398b", "node_id": "C_kwDOAAsO6NoAKDQxZTY2ZDkwMjU4OTk2NGNkYTMyYTVhODljMzQwMjNhOWY3ODM5OGI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-10T20:57:02Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-11T21:36:02Z"}, "message": "review comments: Tweak output\n\n* Account for `struct S(pub(super)Ty);` in suggestion\n* Suggest changing field visibility in E0603 too", "tree": {"sha": "388cb2bc9093da65a67cfe1609ac661e0cb1ddf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/388cb2bc9093da65a67cfe1609ac661e0cb1ddf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41e66d902589964cda32a5a89c34023a9f78398b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41e66d902589964cda32a5a89c34023a9f78398b", "html_url": "https://github.com/rust-lang/rust/commit/41e66d902589964cda32a5a89c34023a9f78398b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41e66d902589964cda32a5a89c34023a9f78398b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb835093a3bc4dc571c1a612cc2efde85906e63e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb835093a3bc4dc571c1a612cc2efde85906e63e", "html_url": "https://github.com/rust-lang/rust/commit/eb835093a3bc4dc571c1a612cc2efde85906e63e"}], "stats": {"total": 224, "additions": 210, "deletions": 14}, "files": [{"sha": "b1b04c92a75042cfa4af912ff5024c1acbde65f5", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -331,8 +331,15 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             .iter()\n             .map(|field| respan(field.span, field.ident.map_or(kw::Empty, |ident| ident.name)))\n             .collect();\n-        let field_vis = vdata.fields().iter().map(|field| field.vis.span).collect();\n         self.r.field_names.insert(def_id, field_names);\n+    }\n+\n+    fn insert_field_visibilities_local(&mut self, def_id: DefId, vdata: &ast::VariantData) {\n+        let field_vis = vdata\n+            .fields()\n+            .iter()\n+            .map(|field| field.vis.span.until(field.ident.map_or(field.ty.span, |i| i.span)))\n+            .collect();\n         self.r.field_visibility_spans.insert(def_id, field_vis);\n     }\n \n@@ -739,6 +746,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n \n                 // Record field names for error reporting.\n                 self.insert_field_names_local(def_id, vdata);\n+                self.insert_field_visibilities_local(def_id, vdata);\n \n                 // If this is a tuple or unit struct, define a name\n                 // in the value namespace as well.\n@@ -772,6 +780,8 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                         Res::Def(DefKind::Ctor(CtorOf::Struct, ctor_kind), ctor_def_id.to_def_id());\n                     self.r.define(parent, ident, ValueNS, (ctor_res, ctor_vis, sp, expansion));\n                     self.r.visibilities.insert(ctor_def_id, ctor_vis);\n+                    // We need the field visibility spans also for the constructor for E0603.\n+                    self.insert_field_visibilities_local(ctor_def_id.to_def_id(), vdata);\n \n                     self.r\n                         .struct_constructors\n@@ -785,6 +795,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n \n                 // Record field names for error reporting.\n                 self.insert_field_names_local(def_id, vdata);\n+                self.insert_field_visibilities_local(def_id, vdata);\n             }\n \n             ItemKind::Trait(..) => {\n@@ -1512,6 +1523,7 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n \n         // Record field names for error reporting.\n         self.insert_field_names_local(def_id.to_def_id(), &variant.data);\n+        self.insert_field_visibilities_local(def_id.to_def_id(), &variant.data);\n \n         visit::walk_variant(self, variant);\n     }"}, {"sha": "1a852de8eed690d29e6e2cabebff7ead288bb83c", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -6,7 +6,9 @@ use rustc_ast::{self as ast, Crate, ItemKind, ModKind, NodeId, Path, CRATE_NODE_\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n-use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, MultiSpan};\n+use rustc_errors::{\n+    pluralize, Applicability, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, MultiSpan,\n+};\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, CtorOf, DefKind, NonMacroAttrKind, PerNS};\n@@ -1604,6 +1606,16 @@ impl<'a> Resolver<'a> {\n         err.span_label(ident.span, &format!(\"private {}\", descr));\n         if let Some(span) = ctor_fields_span {\n             err.span_label(span, \"a constructor is private if any of the fields is private\");\n+            if let Res::Def(_, d) = res && let Some(fields) = self.field_visibility_spans.get(&d) {\n+                err.multipart_suggestion_verbose(\n+                    &format!(\n+                        \"consider making the field{} publicly accessible\",\n+                        pluralize!(fields.len())\n+                    ),\n+                    fields.iter().map(|span| (*span, \"pub \".to_string())).collect(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n         }\n \n         // Print the whole import chain to make it easier to see what happens."}, {"sha": "d92f5a7c05e6d8473ae85c0eff0107f9e6be3300", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -1451,22 +1451,13 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                         .collect();\n \n                     if non_visible_spans.len() > 0 {\n-                        if let Some(visibility_spans) = self.r.field_visibility_spans.get(&def_id) {\n+                        if let Some(fields) = self.r.field_visibility_spans.get(&def_id) {\n                             err.multipart_suggestion_verbose(\n                                 &format!(\n                                     \"consider making the field{} publicly accessible\",\n-                                    pluralize!(visibility_spans.len())\n+                                    pluralize!(fields.len())\n                                 ),\n-                                visibility_spans\n-                                    .iter()\n-                                    .map(|span| {\n-                                        (\n-                                            *span,\n-                                            if span.is_empty() { \"pub \" } else { \"pub\" }\n-                                                .to_string(),\n-                                        )\n-                                    })\n-                                    .collect(),\n+                                fields.iter().map(|span| (*span, \"pub \".to_string())).collect(),\n                                 Applicability::MaybeIncorrect,\n                             );\n                         }"}, {"sha": "615b0af2762d3de9e70a7d08a2f0a1b989f863cb", "filename": "tests/ui/privacy/privacy5.stderr", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -12,6 +12,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:52:16\n@@ -27,6 +31,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:53:16\n@@ -42,6 +50,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:56:12\n@@ -57,6 +69,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:57:12\n@@ -72,6 +88,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:58:18\n@@ -87,6 +107,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:59:18\n@@ -102,6 +126,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:61:12\n@@ -117,6 +145,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:62:12\n@@ -132,6 +164,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:63:18\n@@ -147,6 +183,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:64:18\n@@ -162,6 +202,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:18\n@@ -177,6 +221,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:32\n@@ -192,6 +240,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:68:12\n@@ -207,6 +259,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:69:12\n@@ -222,6 +278,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:70:12\n@@ -237,6 +297,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:71:12\n@@ -252,6 +316,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:72:18\n@@ -267,6 +335,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:73:18\n@@ -282,6 +354,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:74:18\n@@ -297,6 +373,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:75:18\n@@ -312,6 +392,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:83:17\n@@ -327,6 +411,10 @@ note: the tuple struct constructor `A` is defined here\n    |\n LL |     pub struct A(());\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub ());\n+   |                  +++\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:84:17\n@@ -342,6 +430,10 @@ note: the tuple struct constructor `B` is defined here\n    |\n LL |     pub struct B(isize);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct B(pub isize);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:85:17\n@@ -357,6 +449,10 @@ note: the tuple struct constructor `C` is defined here\n    |\n LL |     pub struct C(pub isize, isize);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the fields publicly accessible\n+   |\n+LL |     pub struct C(pub isize, pub isize);\n+   |                  ~~~        +++\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:90:20"}, {"sha": "78e335b3db1cbaf08b9314e3f32f25e979f87d92", "filename": "tests/ui/privacy/suggest-making-field-public.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.fixed?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+mod a {\n+    pub struct A(pub String);\n+}\n+\n+mod b {\n+    use crate::a::A;\n+    pub fn x() {\n+        A(\"\".into()); //~ ERROR cannot initialize a tuple struct which contains private fields\n+    }\n+}\n+fn main() {\n+    a::A(\"a\".into()); //~ ERROR tuple struct constructor `A` is private\n+    b::x();\n+}"}, {"sha": "b65c801d10e6a3ca85b15893262ec6ea9ecc44df", "filename": "tests/ui/privacy/suggest-making-field-public.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.rs?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+mod a {\n+    pub struct A(pub(self)String);\n+}\n+\n+mod b {\n+    use crate::a::A;\n+    pub fn x() {\n+        A(\"\".into()); //~ ERROR cannot initialize a tuple struct which contains private fields\n+    }\n+}\n+fn main() {\n+    a::A(\"a\".into()); //~ ERROR tuple struct constructor `A` is private\n+    b::x();\n+}"}, {"sha": "e92e9aae310e3272a8c07016e8eadf9a5cc5ad26", "filename": "tests/ui/privacy/suggest-making-field-public.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fsuggest-making-field-public.stderr?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -0,0 +1,39 @@\n+error[E0603]: tuple struct constructor `A` is private\n+  --> $DIR/suggest-making-field-public.rs:13:8\n+   |\n+LL |     pub struct A(pub(self)String);\n+   |                  --------------- a constructor is private if any of the fields is private\n+...\n+LL |     a::A(\"a\".into());\n+   |        ^ private tuple struct constructor\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/suggest-making-field-public.rs:3:5\n+   |\n+LL |     pub struct A(pub(self)String);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub String);\n+   |                  ~~~\n+\n+error[E0423]: cannot initialize a tuple struct which contains private fields\n+  --> $DIR/suggest-making-field-public.rs:9:9\n+   |\n+LL |         A(\"\".into());\n+   |         ^\n+   |\n+note: constructor is not visible here due to private fields\n+  --> $DIR/suggest-making-field-public.rs:3:18\n+   |\n+LL |     pub struct A(pub(self)String);\n+   |                  ^^^^^^^^^^^^^^^ private field\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct A(pub String);\n+   |                  ~~~\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0423, E0603.\n+For more information about an error, try `rustc --explain E0423`."}, {"sha": "c1fcaaf05738f0f348be28a8f5c9c85249f3002d", "filename": "tests/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e66d902589964cda32a5a89c34023a9f78398b/tests%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=41e66d902589964cda32a5a89c34023a9f78398b", "patch": "@@ -53,6 +53,10 @@ note: the tuple struct constructor `Z` is defined here\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |         pub(in m) struct Z(pub u8);\n+   |                            ~~~\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:29:8\n@@ -68,6 +72,10 @@ note: the tuple struct constructor `S` is defined here\n    |\n LL |     pub struct S(u8);\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct S(pub u8);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:31:19\n@@ -83,6 +91,10 @@ note: the tuple struct constructor `S` is defined here\n    |\n LL |     pub struct S(u8);\n    |     ^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |     pub struct S(pub u8);\n+   |                  +++\n \n error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:35:11\n@@ -98,6 +110,10 @@ note: the tuple struct constructor `Z` is defined here\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider making the field publicly accessible\n+   |\n+LL |         pub(in m) struct Z(pub u8);\n+   |                            ~~~\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16"}]}