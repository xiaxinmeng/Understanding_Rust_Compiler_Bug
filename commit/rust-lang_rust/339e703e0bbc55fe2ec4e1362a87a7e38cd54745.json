{"sha": "339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOWU3MDNlMGJiYzU1ZmUyZWM0ZTEzNjJhODdhN2UzOGNkNTQ3NDU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-30T09:40:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-30T09:40:43Z"}, "message": "Merge pull request #40 from oli-obk/miri_upstream\n\nthings priroda needs to be public or changed", "tree": {"sha": "f30ce97d03d715a94877551bc38bfdc271b1dace", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f30ce97d03d715a94877551bc38bfdc271b1dace"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "html_url": "https://github.com/rust-lang/rust/commit/339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d309ab72e0d05c6c828e57df04f483bfdee099dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d309ab72e0d05c6c828e57df04f483bfdee099dc", "html_url": "https://github.com/rust-lang/rust/commit/d309ab72e0d05c6c828e57df04f483bfdee099dc"}, {"sha": "b91338b2200d9452a4ddfc1deb4ee5ba1f20f6b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b91338b2200d9452a4ddfc1deb4ee5ba1f20f6b9", "html_url": "https://github.com/rust-lang/rust/commit/b91338b2200d9452a4ddfc1deb4ee5ba1f20f6b9"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "d17640bb675a69e01031f94df257679b91ea5eb1", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "patch": "@@ -154,15 +154,15 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }\n     }\n \n-    pub fn memory(&self) -> &Memory {\n+    pub fn memory(&self) -> &Memory<'a, 'tcx> {\n         &self.memory\n     }\n \n     pub fn memory_mut(&mut self) -> &mut Memory<'a, 'tcx> {\n         &mut self.memory\n     }\n \n-    pub fn stack(&self) -> &[Frame] {\n+    pub fn stack(&self) -> &[Frame<'a, 'tcx>] {\n         &self.stack\n     }\n \n@@ -235,7 +235,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         ty.is_sized(self.tcx, &self.tcx.empty_parameter_environment(), DUMMY_SP)\n     }\n \n-    fn load_mir(&self, def_id: DefId) -> CachedMir<'a, 'tcx> {\n+    pub fn load_mir(&self, def_id: DefId) -> CachedMir<'a, 'tcx> {\n         match self.tcx.map.as_local_node_id(def_id) {\n             Some(node_id) => CachedMir::Ref(self.mir_map.map.get(&node_id).unwrap()),\n             None => {\n@@ -255,7 +255,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }\n     }\n \n-    fn monomorphize(&self, ty: Ty<'tcx>, substs: &'tcx Substs<'tcx>) -> Ty<'tcx> {\n+    pub fn monomorphize(&self, ty: Ty<'tcx>, substs: &'tcx Substs<'tcx>) -> Ty<'tcx> {\n         let substituted = ty.subst(self.tcx, substs);\n         self.tcx.normalize_associated_type(&substituted)\n     }"}, {"sha": "93dfe4e220174322ed9780468c6013e768cff5c1", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "patch": "@@ -38,4 +38,8 @@ pub use interpreter::{\n     eval_main,\n };\n \n-pub use memory::Memory;\n+pub use memory::{\n+    Memory,\n+    Pointer,\n+    AllocId,\n+};"}, {"sha": "e3e4279049a98e44c4c976234b6ac13b59286ca0", "filename": "src/memory.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339e703e0bbc55fe2ec4e1362a87a7e38cd54745/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=339e703e0bbc55fe2ec4e1362a87a7e38cd54745", "patch": "@@ -16,7 +16,7 @@ use primval::PrimVal;\n ////////////////////////////////////////////////////////////////////////////////\n \n #[derive(Copy, Clone, Debug, Eq, Hash, PartialEq)]\n-pub struct AllocId(u64);\n+pub struct AllocId(pub u64);\n \n impl fmt::Display for AllocId {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -77,6 +77,10 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         }\n     }\n \n+    pub fn allocations<'b>(&'b self) -> ::std::collections::hash_map::Iter<'b, AllocId, Allocation> {\n+        self.alloc_map.iter()\n+    }\n+\n     pub fn create_fn_ptr(&mut self, def_id: DefId, substs: &'tcx Substs<'tcx>, fn_ty: &'tcx BareFnTy<'tcx>) -> Pointer {\n         let def = FunctionDefinition {\n             def_id: def_id,\n@@ -576,7 +580,7 @@ impl UndefMask {\n     }\n \n     /// Check whether the range `start..end` (end-exclusive) is entirely defined.\n-    fn is_range_defined(&self, start: usize, end: usize) -> bool {\n+    pub fn is_range_defined(&self, start: usize, end: usize) -> bool {\n         if end > self.len { return false; }\n         for i in start..end {\n             if !self.get(i) { return false; }"}]}