{"sha": "228a5f40966de084fe4a81cf3aff9c531fa51799", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyOGE1ZjQwOTY2ZGUwODRmZTRhODFjZjNhZmY5YzUzMWZhNTE3OTk=", "commit": {"author": {"name": "inquisitivecrystal", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-07-24T06:31:09Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-08-24T15:21:49Z"}, "message": "Document `force-warn`\n\nCo-authored-by: Mark Rousskov <mark.simulacrum@gmail.com>", "tree": {"sha": "555701cf4bf28756ecb2e86620c7d5ff8aec0951", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/555701cf4bf28756ecb2e86620c7d5ff8aec0951"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/228a5f40966de084fe4a81cf3aff9c531fa51799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/228a5f40966de084fe4a81cf3aff9c531fa51799", "html_url": "https://github.com/rust-lang/rust/commit/228a5f40966de084fe4a81cf3aff9c531fa51799", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/228a5f40966de084fe4a81cf3aff9c531fa51799/comments", "author": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aee2c30f697797b4dabf92517e797f6f986b2312", "url": "https://api.github.com/repos/rust-lang/rust/commits/aee2c30f697797b4dabf92517e797f6f986b2312", "html_url": "https://github.com/rust-lang/rust/commit/aee2c30f697797b4dabf92517e797f6f986b2312"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "7bd46fafadf8344fe432971136857780cb639df4", "filename": "src/doc/rustc/src/lints/levels.md", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/228a5f40966de084fe4a81cf3aff9c531fa51799/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flevels.md", "raw_url": "https://github.com/rust-lang/rust/raw/228a5f40966de084fe4a81cf3aff9c531fa51799/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flevels.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flevels.md?ref=228a5f40966de084fe4a81cf3aff9c531fa51799", "patch": "@@ -1,11 +1,12 @@\n # Lint levels\n \n-In `rustc`, lints are divided into four *levels*:\n+In `rustc`, lints are divided into five *levels*:\n \n 1. allow\n 2. warn\n-3. deny\n-4. forbid\n+3. force-warn\n+4. deny\n+5. forbid\n \n Each lint has a default level (explained in the lint listing later in this\n chapter), and the compiler has a default warning level. First, let's explain\n@@ -57,6 +58,14 @@ warning: unused variable: `x`\n   = note: to avoid this warning, consider using `_x` instead\n ```\n \n+## force-warn\n+\n+'force-warn' is a special lint level. It's the same as 'warn' in that a lint\n+at this level will produce a warning, but unlike the 'warn' level, the\n+'force-warn' level cannot be overridden. If a lint is set to 'force-warn', it\n+is guaranteed to warn: no more, no less. This is true even if the overall lint\n+level is capped via cap-lints.\n+\n ## deny\n \n A 'deny' lint produces an error if you violate it. For example, this code\n@@ -87,11 +96,12 @@ This lint level gives you that.\n \n ## forbid\n \n-'forbid' is a special lint level that's stronger than 'deny'. It's the same\n-as 'deny' in that a lint at this level will produce an error, but unlike the\n-'deny' level, the 'forbid' level can not be overridden to be anything lower\n-than an error.  However, lint levels may still be capped with `--cap-lints`\n-(see below) so `rustc --cap-lints warn` will make lints set to 'forbid' just\n+'forbid' is a special lint level that fills the same role for 'deny' that\n+'force-warn' does for 'warn'. It's the same as 'deny' in that a lint at this\n+level will produce an error, but unlike the 'deny' level, the 'forbid' level\n+can not be overridden to be anything lower than an error.  However, lint\n+levels may still be capped with `--cap-lints` (see below) so `rustc --cap-\n+lints warn` will make lints set to 'forbid' just\n warn.\n \n ## Configuring warning levels\n@@ -113,8 +123,8 @@ certain lint levels. We'll talk about that last.\n \n ### Via compiler flag\n \n-The `-A`, `-W`, `-D`, and `-F` flags let you turn one or more lints\n-into allowed, warning, deny, or forbid levels, like this:\n+The `-A`, `-W`, `--force-warn` `-D`, and `-F` flags let you turn one or more lints\n+into allowed, warning, force-warn, deny, or forbid levels, like this:\n \n ```bash\n $ rustc lib.rs --crate-type=lib -W missing-docs\n@@ -158,7 +168,7 @@ You can also pass each flag more than once for changing multiple lints:\n $ rustc lib.rs --crate-type=lib -D missing-docs -D unused-variables\n ```\n \n-And of course, you can mix these four flags together:\n+And of course, you can mix these five flags together:\n \n ```bash\n $ rustc lib.rs --crate-type=lib -D missing-docs -A unused-variables\n@@ -176,6 +186,10 @@ You can make use of this behavior by overriding the level of one specific lint o\n $ rustc lib.rs --crate-type=lib -D unused -A unused-variables\n ```\n \n+Since `force-warn` and `forbid` cannot be overridden, setting\n+one of them will prevent any later level for the same lint from\n+taking effect.\n+\n ### Via an attribute\n \n You can also modify the lint level with a crate-wide attribute:\n@@ -207,7 +221,8 @@ warning: missing documentation for a function\n   | ^^^^^^^^^^^^\n ```\n \n-All four, `warn`, `allow`, `deny`, and `forbid` all work this way.\n+`warn`, `allow`, `deny`, and `forbid` all work this way. There is\n+no way to set a lint to `force-warn` using an attribute.\n \n You can also pass in multiple lints per attribute:\n "}, {"sha": "052de0f379e7fbc222b6e5fa63f93e3b6becd275", "filename": "src/doc/unstable-book/src/compiler-flags/force-warn.md", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aee2c30f697797b4dabf92517e797f6f986b2312/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md", "raw_url": "https://github.com/rust-lang/rust/raw/aee2c30f697797b4dabf92517e797f6f986b2312/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md?ref=aee2c30f697797b4dabf92517e797f6f986b2312", "patch": "@@ -1,21 +0,0 @@\n-# `force-warn`\n-\n-The tracking issue for this feature is: [#85512](https://github.com/rust-lang/rust/issues/85512).\n-\n-------------------------\n-\n-This feature allows you to cause any lint to produce a warning even if the lint has a different level by default or another level is set somewhere else. For instance, the `force-warn` option can be used to make a lint (e.g., `dead_code`) produce a warning even if that lint is allowed in code with `#![allow(dead_code)]`.\n-\n-## Example\n-\n-```rust,ignore (partial-example)\n-#![allow(dead_code)]\n-\n-fn dead_function() {}\n-// This would normally not produce a warning even though the\n-// function is not used, because dead code is being allowed\n-\n-fn main() {}\n-```\n-\n-We can force a warning to be produced by providing `--force-warn dead_code` to rustc."}]}