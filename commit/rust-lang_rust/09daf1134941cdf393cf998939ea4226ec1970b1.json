{"sha": "09daf1134941cdf393cf998939ea4226ec1970b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGFmMTEzNDk0MWNkZjM5M2NmOTk4OTM5ZWE0MjI2ZWMxOTcwYjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-03T10:14:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-03T10:14:52Z"}, "message": "remove too expensive debug assertion (#755)\n\nremove too expensive debug assertion", "tree": {"sha": "0b665fbed69b99b9e4d175cca4ffaf65dfcb10f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b665fbed69b99b9e4d175cca4ffaf65dfcb10f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09daf1134941cdf393cf998939ea4226ec1970b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9PMcCRBK7hj4Ov3rIwAAdHIIAG8zIieRvieDM1+yPl1awNTT\n4IoFRoNlwrfRnUQFih8CpcqshDItQdQFkdIhUOHEnv1pLPAXbsHUxijP9fOC2tQ/\nr82yGQy9wiMm3vrbDZLYkAAj35al6wbsZw6SeuUqesCWE8onVsNVya3w69G9hJUT\nzyTzZD5almUUCjzg7lcjUzmpbVg/laNpZ9tR3GG0oKGPOimoLSGS7jzYwp5H2sYq\nZFi9thTNdqdiUy8YzSQFdjZez1c0mt2TXiC91Bk+ENzQJTDjx4h7k3zuI67477ZX\njiPCwrcKwEo/f4+TXCwSynqkN/9gdE81SLhoSVJxnzsO09d87Gi98ap4M5W51os=\n=HFbg\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b665fbed69b99b9e4d175cca4ffaf65dfcb10f2\nparent 0c4d68835bee388c271ddbdb7db693f436f7706b\nparent 03b74c12c86ae9756ec8e61feef484edb5d5e013\nauthor Ralf Jung <post@ralfj.de> 1559556892 +0200\ncommitter GitHub <noreply@github.com> 1559556892 +0200\n\nremove too expensive debug assertion (#755)\n\nremove too expensive debug assertion"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09daf1134941cdf393cf998939ea4226ec1970b1", "html_url": "https://github.com/rust-lang/rust/commit/09daf1134941cdf393cf998939ea4226ec1970b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09daf1134941cdf393cf998939ea4226ec1970b1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c4d68835bee388c271ddbdb7db693f436f7706b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4d68835bee388c271ddbdb7db693f436f7706b", "html_url": "https://github.com/rust-lang/rust/commit/0c4d68835bee388c271ddbdb7db693f436f7706b"}, {"sha": "03b74c12c86ae9756ec8e61feef484edb5d5e013", "url": "https://api.github.com/repos/rust-lang/rust/commits/03b74c12c86ae9756ec8e61feef484edb5d5e013", "html_url": "https://github.com/rust-lang/rust/commit/03b74c12c86ae9756ec8e61feef484edb5d5e013"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "dee4ca33c25d39aca96e6306ea3495724a233ce5", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/09daf1134941cdf393cf998939ea4226ec1970b1/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09daf1134941cdf393cf998939ea4226ec1970b1/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=09daf1134941cdf393cf998939ea4226ec1970b1", "patch": "@@ -356,23 +356,6 @@ impl<'tcx> Stack {\n         Ok(())\n     }\n \n-    /// `reborrow` helper function: test that the stack invariants are still maintained.\n-    fn test_invariants(&self) {\n-        let mut saw_shared_read_only = false;\n-        for item in self.borrows.iter() {\n-            match item.perm {\n-                Permission::SharedReadOnly => {\n-                    saw_shared_read_only = true;\n-                }\n-                // Otherwise, if we saw one before, that's a bug.\n-                perm if saw_shared_read_only => {\n-                    bug!(\"Found {:?} on top of a SharedReadOnly!\", perm);\n-                }\n-                _ => {}\n-            }\n-        }\n-    }\n-\n     /// Derived a new pointer from one with the given tag.\n     /// `weak` controls whether this operation is weak or strong: weak granting does not act as\n     /// an access, and they add the new item directly on top of the one it is derived\n@@ -428,11 +411,6 @@ impl<'tcx> Stack {\n             self.borrows.insert(new_idx, new);\n         }\n \n-        // Make sure that after all this, the stack's invariant is still maintained.\n-        if cfg!(debug_assertions) {\n-            self.test_invariants();\n-        }\n-\n         Ok(())\n     }\n }"}]}