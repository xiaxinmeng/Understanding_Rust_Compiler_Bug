{"sha": "a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "node_id": "C_kwDOAAsO6NoAKGE3NmEyZDRlZjk4NmVjNjllNGZmYjgxYzM1ZGZiOGRjOTFlZmZlZTk", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-28T20:48:39Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-28T20:48:39Z"}, "message": "Add comments to hygiene tests", "tree": {"sha": "55c1844799728e18804db3b71936939060ac4ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55c1844799728e18804db3b71936939060ac4ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "html_url": "https://github.com/rust-lang/rust/commit/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "html_url": "https://github.com/rust-lang/rust/commit/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "94f1adff626429f0909e96ea21c326c230dab673", "filename": "src/test/ui/hygiene/cross-crate-define-and-use.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-define-and-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-define-and-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-define-and-use.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,8 @@\n+// Check that a marco from another crate can define an item in one expansion\n+// and use it from another, without it being visible to everyone.\n+// This requires that the definition of `my_struct` preserves the hygiene\n+// information for the tokens in its definition.\n+\n // check-pass\n // aux-build:use_by_macro.rs\n "}, {"sha": "1bcd64573ac6e19c3e073c8ad174430f09b64419", "filename": "src/test/ui/hygiene/cross-crate-fields.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-fields.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,6 @@\n+// Test that fields on a struct defined in another crate are resolved correctly\n+// their names differ only in `SyntaxContext`.\n+\n // run-pass\n // aux-build:fields.rs\n "}, {"sha": "de5576682a6bdd725ceaa0e2e90d8323386be039", "filename": "src/test/ui/hygiene/cross-crate-glob-hygiene.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,8 @@\n+// Check that globs cannot import hygienic identifiers from a macro expansion\n+// in another crate. `my_struct` is a `macro_rules` macro, so the struct it\n+// defines is only not imported because `my_struct` is defined by a macros 2.0\n+// macro.\n+\n // aux-build:use_by_macro.rs\n \n extern crate use_by_macro;"}, {"sha": "7369e77d0709eb2420cce04572a22bb8867c3a1b", "filename": "src/test/ui/hygiene/cross-crate-glob-hygiene.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-glob-hygiene.stderr?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,5 +1,5 @@\n error[E0422]: cannot find struct, variant or union type `MyStruct` in this scope\n-  --> $DIR/cross-crate-glob-hygiene.rs:16:13\n+  --> $DIR/cross-crate-glob-hygiene.rs:21:13\n    |\n LL |     let x = my_struct!(create);\n    |             ^^^^^^^^^^^^^^^^^^ not found in this scope"}, {"sha": "0e6f57c33f64a26f213db38ac52b47ce5d0f6e08", "filename": "src/test/ui/hygiene/cross-crate-methods.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-methods.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,7 @@\n+// Test that methods defined in another crate are resolved correctly their\n+// names differ only in `SyntaxContext`. This also checks that any name\n+// resolution done when monomorphizing is correct.\n+\n // run-pass\n // aux-build:methods.rs\n "}, {"sha": "8f118782f2319864c5cadb21e952cd3b2b149013", "filename": "src/test/ui/hygiene/cross-crate-name-collision.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-collision.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,7 @@\n+// Check that two items defined in another crate that have identifiers that\n+// only differ by `SyntaxContext` do not cause name collisions when imported\n+// in another crate.\n+\n // check-pass\n // aux-build:needs_hygiene.rs\n "}, {"sha": "3eacd775c9e539e5e32b12d060a19dc828396753", "filename": "src/test/ui/hygiene/cross-crate-name-hiding-2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,6 @@\n+// Check that an identifier from a 2.0 macro in another crate cannot be\n+// resolved with an identifier that's not from a macro expansion.\n+\n // aux-build:use_by_macro.rs\n \n extern crate use_by_macro;"}, {"sha": "46314cdd5ab4eafb0239ff8c3cbf02e843e54907", "filename": "src/test/ui/hygiene/cross-crate-name-hiding-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding-2.stderr?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,5 +1,5 @@\n error[E0422]: cannot find struct, variant or union type `MyStruct` in this scope\n-  --> $DIR/cross-crate-name-hiding-2.rs:10:13\n+  --> $DIR/cross-crate-name-hiding-2.rs:13:13\n    |\n LL |     let x = MyStruct {};\n    |             ^^^^^^^^ not found in this scope"}, {"sha": "dd76ecc5762f534b0129692e367519b9ab4ed41f", "filename": "src/test/ui/hygiene/cross-crate-name-hiding.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,6 @@\n+// Check that an item defined by a 2.0 macro in another crate cannot be used in\n+// another crate.\n+\n // aux-build:pub_hygiene.rs\n \n extern crate pub_hygiene;"}, {"sha": "f8840c8f85a33f5f3be6d22dbc2dfb2f3ba24296", "filename": "src/test/ui/hygiene/cross-crate-name-hiding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-name-hiding.stderr?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,5 +1,5 @@\n error[E0422]: cannot find struct, variant or union type `MyStruct` in this scope\n-  --> $DIR/cross-crate-name-hiding.rs:8:13\n+  --> $DIR/cross-crate-name-hiding.rs:11:13\n    |\n LL |     let x = MyStruct {};\n    |             ^^^^^^^^ not found in this scope"}, {"sha": "3cb06b4bad87359d98e677838465b70635b8de62", "filename": "src/test/ui/hygiene/cross-crate-redefine.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,6 @@\n+// Check that items with identical `SyntaxContext` conflict even when that\n+// context involves a mark from another crate.\n+\n // aux-build:use_by_macro.rs\n \n extern crate use_by_macro;"}, {"sha": "4f1419de426778663d13b163e4b5be8080a921d1", "filename": "src/test/ui/hygiene/cross-crate-redefine.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-redefine.stderr?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,5 +1,5 @@\n error[E0428]: the name `MyStruct` is defined multiple times\n-  --> $DIR/cross-crate-redefine.rs:7:1\n+  --> $DIR/cross-crate-redefine.rs:10:1\n    |\n LL | my_struct!(define);\n    | ^^^^^^^^^^^^^^^^^^ `MyStruct` redefined here"}, {"sha": "efc73a21f16f302e267456723e9520e39a8a37e2", "filename": "src/test/ui/hygiene/cross-crate-variants.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fcross-crate-variants.rs?ref=a76a2d4ef986ec69e4ffb81c35dfb8dc91effee9", "patch": "@@ -1,3 +1,6 @@\n+// Test that variants of an enum defined in another crate are resolved\n+// correctly when their names differ only in `SyntaxContext`.\n+\n // run-pass\n // aux-build:variants.rs\n "}]}