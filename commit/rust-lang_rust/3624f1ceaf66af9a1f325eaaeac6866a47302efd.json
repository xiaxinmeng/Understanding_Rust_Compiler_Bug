{"sha": "3624f1ceaf66af9a1f325eaaeac6866a47302efd", "node_id": "C_kwDOAAsO6NoAKDM2MjRmMWNlYWY2NmFmOWExZjMyNWVhYWVhYzY4NjZhNDczMDJlZmQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-25T19:37:58Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-25T19:37:58Z"}, "message": "when checking pointee metadata, canonicalize the Sized query", "tree": {"sha": "dce204f6e9493832b0df3d902ba1cc25aecc7a99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce204f6e9493832b0df3d902ba1cc25aecc7a99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3624f1ceaf66af9a1f325eaaeac6866a47302efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3624f1ceaf66af9a1f325eaaeac6866a47302efd", "html_url": "https://github.com/rust-lang/rust/commit/3624f1ceaf66af9a1f325eaaeac6866a47302efd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3624f1ceaf66af9a1f325eaaeac6866a47302efd/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "html_url": "https://github.com/rust-lang/rust/commit/3fe3b89cd57229343eeca753fdd8c63d9b03c65c"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "acf55f838f12553e6a7a5b3eb3b4ee418403b210", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3624f1ceaf66af9a1f325eaaeac6866a47302efd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3624f1ceaf66af9a1f325eaaeac6866a47302efd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=3624f1ceaf66af9a1f325eaaeac6866a47302efd", "patch": "@@ -19,6 +19,7 @@ use super::{Normalized, NormalizedTy, ProjectionCacheEntry, ProjectionCacheKey};\n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::infer::{InferCtxt, InferOk, LateBoundRegionConversionTime};\n use crate::traits::error_reporting::InferCtxtExt as _;\n+use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n use crate::traits::select::ProjectionMatchesProjection;\n use rustc_data_structures::sso::SsoHashSet;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n@@ -1515,7 +1516,16 @@ fn assemble_candidates_from_impls<'cx, 'tcx>(\n                     // type parameters, opaques, and unnormalized projections have pointer\n                     // metadata if they're known (e.g. by the param_env) to be sized\n                     ty::Param(_) | ty::Projection(..) | ty::Opaque(..)\n-                        if tail.is_sized(selcx.tcx().at(obligation.cause.span), obligation.param_env) =>\n+                        if selcx.infcx().predicate_must_hold_modulo_regions(\n+                            &obligation.with(\n+                                ty::Binder::dummy(ty::TraitRef::new(\n+                                    selcx.tcx().require_lang_item(LangItem::Sized, None),\n+                                    selcx.tcx().mk_substs_trait(self_ty, &[]),\n+                                ))\n+                                .without_const()\n+                                .to_predicate(selcx.tcx()),\n+                            ),\n+                        ) =>\n                     {\n                         true\n                     }"}, {"sha": "9d40d254ad913fb17150a611d50d5083ec13994d", "filename": "src/test/ui/traits/issue-95311.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3624f1ceaf66af9a1f325eaaeac6866a47302efd/src%2Ftest%2Fui%2Ftraits%2Fissue-95311.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3624f1ceaf66af9a1f325eaaeac6866a47302efd/src%2Ftest%2Fui%2Ftraits%2Fissue-95311.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-95311.rs?ref=3624f1ceaf66af9a1f325eaaeac6866a47302efd", "patch": "@@ -0,0 +1,19 @@\n+// check-pass\n+\n+// Test to check that pointee trait doesn't let region variables escape into the cache\n+\n+#![feature(ptr_metadata)]\n+\n+trait Bar: Sized + 'static {}\n+\n+struct Foo<B: Bar> {\n+    marker: std::marker::PhantomData<B>,\n+}\n+\n+impl<B: Bar> Foo<B> {\n+    fn foo<T: ?Sized>(value: &T) {\n+        std::ptr::metadata(value);\n+    }\n+}\n+\n+fn main() {}"}]}