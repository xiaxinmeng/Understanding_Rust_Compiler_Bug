{"sha": "6ebba71a75986271e537ab4363f905787a0a222a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYmJhNzFhNzU5ODYyNzFlNTM3YWI0MzYzZjkwNTc4N2EwYTIyMmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-05-12T17:53:57Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-05-12T17:53:57Z"}, "message": "doc: Address feedback", "tree": {"sha": "bbe5679b47f59e0883b235ab3e35222f732bcb86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe5679b47f59e0883b235ab3e35222f732bcb86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ebba71a75986271e537ab4363f905787a0a222a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ebba71a75986271e537ab4363f905787a0a222a", "html_url": "https://github.com/rust-lang/rust/commit/6ebba71a75986271e537ab4363f905787a0a222a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ebba71a75986271e537ab4363f905787a0a222a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3d315fff2e7009d3ebd945bb848c4afa2ebfb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3d315fff2e7009d3ebd945bb848c4afa2ebfb4", "html_url": "https://github.com/rust-lang/rust/commit/9b3d315fff2e7009d3ebd945bb848c4afa2ebfb4"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "c0d8d8eacf797f8702c27e1a97f89ea9682cfeb9", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6ebba71a75986271e537ab4363f905787a0a222a/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ebba71a75986271e537ab4363f905787a0a222a/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=6ebba71a75986271e537ab4363f905787a0a222a", "patch": "@@ -13,11 +13,12 @@\n //! The Rust Standard Library provides the essential runtime\n //! functionality for building portable Rust software.\n //!\n-//! It is linked to all Rust crates by default as though they\n-//! contained a crate-level `extern crate std` crate import. Therefore\n-//! the standard library can be accessed in `use` statements through\n-//! the path `std`, as in `use std::thread`, or in expressions through\n-//! the absolute path `::std`, as in `::std::thread::sleep_ms(100)`.\n+//! The rust standard library is available to all rust crates by\n+//! default, just as if contained an `extern crate std` import at the\n+//! crate root. Therefore the standard library can be accessed in\n+//! `use` statements through the path `std`, as in `use std::thread`,\n+//! or in expressions through the absolute path `::std`, as in\n+//! `::std::thread::sleep_ms(100)`.\n //!\n //! Furthermore, the standard library defines [The Rust\n //! Prelude](prelude/index.html), a small collection of items, mostly\n@@ -58,7 +59,7 @@\n //! macro, and for converting from strings use the\n //! [`FromStr`](str/trait.FromStr.html) trait.\n //!\n-//! Data may be shared by placing it a reference-counted box, the\n+//! Data may be shared by placing it in a reference-counted box or the\n //! [`Rc`][rc/index.html] type, and if further contained in a [`Cell`\n //! or `RefCell`](cell/index.html), may be mutated as well as shared.\n //! Likewise, in a concurrent setting it is common to pair an\n@@ -79,12 +80,12 @@\n //! [TCP](net/struct.TcpStream.html),\n //! [UDP](net/struct.UdpSocket.html), are defined in the\n //! [`io`](io/index.html), [`fs`](fs/index.html), and\n-//! [`net`](net/index.html) modulesu.\n+//! [`net`](net/index.html) modules.\n //!\n //! The [`thread`](thread/index.html) module contains Rust's threading\n-//! abstractions.  [`sync`](sync/index.html) contains further,\n-//! primitive, shared memory types, including\n-//! [`atomic`](sync/atomic/index.html), and\n+//! abstractions. [`sync`](sync/index.html) contains further\n+//! primitive shared memory types, including\n+//! [`atomic`](sync/atomic/index.html) and\n //! [`mpsc`](sync/mpsc/index.html), which contains the channel types\n //! for message passing.\n "}]}