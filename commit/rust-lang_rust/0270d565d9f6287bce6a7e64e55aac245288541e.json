{"sha": "0270d565d9f6287bce6a7e64e55aac245288541e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNzBkNTY1ZDlmNjI4N2JjZTZhN2U2NGU1NWFhYzI0NTI4ODU0MWU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-03-30T19:57:04Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-03-30T23:14:21Z"}, "message": "Only mention const generics if enabled.\n\nThis commit updates the generic parameter re-ordering diagnostic to only\nmention const generics if the feature is enabled.", "tree": {"sha": "0357488edd999290d3ebb832d394caacf0791af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0357488edd999290d3ebb832d394caacf0791af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0270d565d9f6287bce6a7e64e55aac245288541e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlyf+E0ACgkQAXYLT59T\n8VSwnw/8Dp5w8vdjqnnfTVuYWy8okLZEkEoiHvr555NrGJCxGLuElyakBMkRJRq8\n/11KPy2o9rXQ3NgkMUB80PeK1RJ3fAPgCOC3U09UEDMLLhvooN9hTck4BpbqiFWy\n1trZTh1e2qV+1nS9RvCWibIx4u/5Qh9T/O/LGivJKS9rLmJ8NuUOGlv4jbBmnRw8\neacwj4WzLw4pMejA8Ahjy7lmzPz74+wRm2ba9Ln6zJXSbV0Rj6QiUNHfq+NoXd9V\nlXPHLkEP0hK836aHRkHFt5txdxykiXt1+wy44ETGoFzyzVpfmhpxF2ohDYMpfxY9\nnReno6SGiz8Y/toUfFaS+SDs/f9ykOhdm3KQTtWm+Pyju46U2/wlWOVe1p6kwiSr\n8aSrGA+e9b7vQCU9y7+zf8fJ8+kPfsoNLjy+AyiAnEJETWnMHGjePIKGGfOf+C1s\n8PmFK6dNloVX8z3AH375Yg808MgPPH/Khkl9C+xaGTxvngYqmiFFwuIPjBCRcBpr\nRMA9IcK3a9LYBB2snv91eAvYDq8Z/MmRCBfnOiA1qJKly19RJgL8M9CPMuitfyNO\nBmUoKuTcVb0loCI4c4iq9b4AzgeukUW50nv3OYgedt9r0mXcT6NSFdfMLlTC96w9\nE0v6hdezK9v8kRkAjVbNAC+xJ5AdNM/dkeh2AVrOF2Nva9kCMEk=\n=7b/K\n-----END PGP SIGNATURE-----", "payload": "tree 0357488edd999290d3ebb832d394caacf0791af1\nparent 3829746ef9356be7ab766efcbc328aeb1d5a555f\nauthor David Wood <david@davidtw.co> 1553975824 +0100\ncommitter David Wood <david@davidtw.co> 1553987661 +0100\n\nOnly mention const generics if enabled.\n\nThis commit updates the generic parameter re-ordering diagnostic to only\nmention const generics if the feature is enabled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0270d565d9f6287bce6a7e64e55aac245288541e", "html_url": "https://github.com/rust-lang/rust/commit/0270d565d9f6287bce6a7e64e55aac245288541e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0270d565d9f6287bce6a7e64e55aac245288541e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3829746ef9356be7ab766efcbc328aeb1d5a555f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3829746ef9356be7ab766efcbc328aeb1d5a555f", "html_url": "https://github.com/rust-lang/rust/commit/3829746ef9356be7ab766efcbc328aeb1d5a555f"}], "stats": {"total": 117, "additions": 83, "deletions": 34}, "files": [{"sha": "5c325c55b619d7fc65d51062b63de3cd8dd8307b", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 37, "deletions": 20, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -360,6 +360,7 @@ enum GenericPosition {\n }\n \n fn validate_generics_order<'a>(\n+    sess: &Session,\n     handler: &errors::Handler,\n     generics: impl Iterator<\n         Item = (\n@@ -426,7 +427,11 @@ fn validate_generics_order<'a>(\n         if let GenericPosition::Param = pos {\n             err.span_suggestion(\n                 span,\n-                &format!(\"reorder the {}s: lifetimes, then types, then consts\", pos_str),\n+                &format!(\n+                    \"reorder the {}s: lifetimes, then types{}\",\n+                    pos_str,\n+                    if sess.features_untracked().const_generics { \", then consts\" } else { \"\" },\n+                ),\n                 ordered_params.clone(),\n                 Applicability::MachineApplicable,\n             );\n@@ -709,13 +714,19 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n         match *generic_args {\n             GenericArgs::AngleBracketed(ref data) => {\n                 walk_list!(self, visit_generic_arg, &data.args);\n-                validate_generics_order(self.err_handler(), data.args.iter().map(|arg| {\n-                    (match arg {\n-                        GenericArg::Lifetime(..) => ParamKindOrd::Lifetime,\n-                        GenericArg::Type(..) => ParamKindOrd::Type,\n-                        GenericArg::Const(..) => ParamKindOrd::Const,\n-                    }, None, arg.span(), None)\n-                }), GenericPosition::Arg, generic_args.span());\n+                validate_generics_order(\n+                    self.session,\n+                    self.err_handler(),\n+                    data.args.iter().map(|arg| {\n+                        (match arg {\n+                            GenericArg::Lifetime(..) => ParamKindOrd::Lifetime,\n+                            GenericArg::Type(..) => ParamKindOrd::Type,\n+                            GenericArg::Const(..) => ParamKindOrd::Const,\n+                        }, None, arg.span(), None)\n+                    }),\n+                    GenericPosition::Arg,\n+                    generic_args.span(),\n+                );\n \n                 // Type bindings such as `Item=impl Debug` in `Iterator<Item=Debug>`\n                 // are allowed to contain nested `impl Trait`.\n@@ -748,18 +759,24 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n             }\n         }\n \n-        validate_generics_order(self.err_handler(), generics.params.iter().map(|param| {\n-            let ident = Some(param.ident.to_string());\n-            let (kind, ident) = match &param.kind {\n-                GenericParamKind::Lifetime { .. } => (ParamKindOrd::Lifetime, ident),\n-                GenericParamKind::Type { .. } => (ParamKindOrd::Type, ident),\n-                GenericParamKind::Const { ref ty } => {\n-                    let ty = pprust::ty_to_string(ty);\n-                    (ParamKindOrd::Const, Some(format!(\"const {}: {}\", param.ident, ty)))\n-                }\n-            };\n-            (kind, Some(&*param.bounds), param.ident.span, ident)\n-        }), GenericPosition::Param, generics.span);\n+        validate_generics_order(\n+            self.session,\n+            self.err_handler(),\n+            generics.params.iter().map(|param| {\n+                let ident = Some(param.ident.to_string());\n+                let (kind, ident) = match &param.kind {\n+                    GenericParamKind::Lifetime { .. } => (ParamKindOrd::Lifetime, ident),\n+                    GenericParamKind::Type { .. } => (ParamKindOrd::Type, ident),\n+                    GenericParamKind::Const { ref ty } => {\n+                        let ty = pprust::ty_to_string(ty);\n+                        (ParamKindOrd::Const, Some(format!(\"const {}: {}\", param.ident, ty)))\n+                    }\n+                };\n+                (kind, Some(&*param.bounds), param.ident.span, ident)\n+            }),\n+            GenericPosition::Param,\n+            generics.span,\n+        );\n \n         for predicate in &generics.where_clause.predicates {\n             if let WherePredicate::EqPredicate(ref predicate) = *predicate {"}, {"sha": "4fbed9b08f215a9698d98b4f03874e541d5618f8", "filename": "src/test/ui/issue-59508-1.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59508-1.rs?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -0,0 +1,18 @@\n+#![allow(dead_code)]\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+// This test checks that generic parameter re-ordering diagnostic suggestions mention that\n+// consts come after types and lifetimes when the `const_generics` feature is enabled.\n+// We cannot run rustfix on this test because of the above const generics warning.\n+\n+struct A;\n+\n+impl A {\n+    pub fn do_things<T, 'a, 'b: 'a>() {\n+    //~^ ERROR lifetime parameters must be declared prior to type parameters\n+        println!(\"panic\");\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "8fb7d7c3c84dc295ddbd4b7a32c9eb737cdcaf96", "filename": "src/test/ui/issue-59508-1.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59508-1.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -0,0 +1,14 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-59508-1.rs:2:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/issue-59508-1.rs:12:25\n+   |\n+LL |     pub fn do_things<T, 'a, 'b: 'a>() {\n+   |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b: 'a, T>`\n+\n+error: aborting due to previous error\n+"}, {"sha": "c0fdb2ef34ac4efd38db83c27af1e81fc6a9b33b", "filename": "src/test/ui/issue-59508.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fissue-59508.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59508.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-59508.rs:10:25\n    |\n LL |     pub fn do_things<T, 'a, 'b: 'a>() {\n-   |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b: 'a, T>`\n+   |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types: `<'a, 'b: 'a, T>`\n \n error: aborting due to previous error\n "}, {"sha": "ffc6784bafed8f4f3db54d85ea392071049603db", "filename": "src/test/ui/lifetime-before-type-params.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,25 +2,25 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:2:13\n    |\n LL | fn first<T, 'a, 'b>() {}\n-   |         ----^^--^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |         ----^^--^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:4:18\n    |\n LL | fn second<'a, T, 'b>() {}\n-   |          --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |          --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:6:16\n    |\n LL | fn third<T, U, 'a>() {}\n-   |         -------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n+   |         -------^^- help: reorder the parameters: lifetimes, then types: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:8:18\n    |\n LL | fn fourth<'a, T, 'b, U, 'c, V>() {}\n-   |          --------^^-----^^---- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, 'c, T, U, V>`\n+   |          --------^^-----^^---- help: reorder the parameters: lifetimes, then types: `<'a, 'b, 'c, T, U, V>`\n \n error[E0601]: `main` function not found in crate `lifetime_before_type_params`\n    |"}, {"sha": "46f16ea0cc41cbd286b43c84b33c7e0e9504287f", "filename": "src/test/ui/parser/issue-14303-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-enum.rs:1:15\n    |\n LL | enum X<'a, T, 'b> {\n-   |       --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |       --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "8cbab4b9653a0b67b12ba7a223dfde2d77785fbb", "filename": "src/test/ui/parser/issue-14303-fn-def.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-fn-def.rs:1:15\n    |\n LL | fn foo<'a, T, 'b>(x: &'a T) {}\n-   |       --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |       --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "56cd4fb381038090802bee4966c071706464a20f", "filename": "src/test/ui/parser/issue-14303-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-impl.rs:3:13\n    |\n LL | impl<'a, T, 'b> X<T> {}\n-   |     --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |     --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "f31cb92ad66ce2924f62b3db1f643f22a434d224", "filename": "src/test/ui/parser/issue-14303-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-struct.rs:1:17\n    |\n LL | struct X<'a, T, 'b> {\n-   |         --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |         --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "0e7399102bf177d2d2737bd50255e64d2003189c", "filename": "src/test/ui/parser/issue-14303-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,7 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-trait.rs:1:18\n    |\n LL | trait Foo<'a, T, 'b> {}\n-   |          --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n+   |          --------^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "1851c8deaa8b4dbb14e99d744d8125858b2d3f10", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0270d565d9f6287bce6a7e64e55aac245288541e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr?ref=0270d565d9f6287bce6a7e64e55aac245288541e", "patch": "@@ -2,25 +2,25 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:1:13\n    |\n LL | struct A<T, 'a> {\n-   |         ----^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T>`\n+   |         ----^^- help: reorder the parameters: lifetimes, then types: `<'a, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:5:13\n    |\n LL | struct B<T, 'a, U> {\n-   |         ----^^---- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n+   |         ----^^---- help: reorder the parameters: lifetimes, then types: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:10:16\n    |\n LL | struct C<T, U, 'a> {\n-   |         -------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n+   |         -------^^- help: reorder the parameters: lifetimes, then types: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:15:16\n    |\n LL | struct D<T, U, 'a, 'b, V, 'c> {\n-   |         -------^^--^^-----^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, 'c, T, U, V>`\n+   |         -------^^--^^-----^^- help: reorder the parameters: lifetimes, then types: `<'a, 'b, 'c, T, U, V>`\n \n error: aborting due to 4 previous errors\n "}]}