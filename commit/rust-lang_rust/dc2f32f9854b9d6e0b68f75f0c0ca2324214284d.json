{"sha": "dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMmYzMmY5ODU0YjlkNmUwYjY4Zjc1ZjBjMGNhMjMyNDIxNDI4NGQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-11T14:13:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-11T14:13:45Z"}, "message": "Change the CallConv for \"rust\" abi functions to \"SystemV\" to match the \"C\" abi\n\nThe allocator machinery seems to mix \"rust\" and \"C\" abi function defs and calls.", "tree": {"sha": "bc77fd4bdc5584a4cdb16f9ab66362701a775f2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc77fd4bdc5584a4cdb16f9ab66362701a775f2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "html_url": "https://github.com/rust-lang/rust/commit/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74165046e8b4382bd0cd50db35f9a8e19deb15f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/74165046e8b4382bd0cd50db35f9a8e19deb15f8", "html_url": "https://github.com/rust-lang/rust/commit/74165046e8b4382bd0cd50db35f9a8e19deb15f8"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "c9559a606891395112aa1a96b4fee8bb673e71e4", "filename": "src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "patch": "@@ -79,7 +79,7 @@ pub fn clif_sig_from_fn_ty<'a, 'tcx: 'a>(\n         unimpl!(\"Variadic function are not yet supported\");\n     }\n     let (call_conv, inputs, output): (CallConv, Vec<Ty>, Ty) = match sig.abi {\n-        Abi::Rust => (CallConv::Fast, sig.inputs().to_vec(), sig.output()),\n+        Abi::Rust => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         Abi::C => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         Abi::RustCall => {\n             assert_eq!(sig.inputs().len(), 2);\n@@ -89,7 +89,7 @@ pub fn clif_sig_from_fn_ty<'a, 'tcx: 'a>(\n             };\n             let mut inputs: Vec<Ty> = vec![sig.inputs()[0]];\n             inputs.extend(extra_args.into_iter());\n-            (CallConv::Fast, inputs, sig.output())\n+            (CallConv::SystemV, inputs, sig.output())\n         }\n         Abi::System => bug!(\"system abi should be selected elsewhere\"),\n         Abi::RustIntrinsic => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),"}, {"sha": "8f2e7ca95699d092f737498a29ccb0672f8c4d8e", "filename": "src/allocator.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2f32f9854b9d6e0b68f75f0c0ca2324214284d/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=dc2f32f9854b9d6e0b68f75f0c0ca2324214284d", "patch": "@@ -39,8 +39,8 @@ pub fn codegen(module: &mut Module<impl Backend + 'static>, kind: AllocatorKind)\n             }\n         };\n \n-        let mut sig = Signature {\n-            call_conv: CallConv::Fast,\n+        let sig = Signature {\n+            call_conv: CallConv::SystemV,\n             params: arg_tys.iter().cloned().map(AbiParam::new).collect(),\n             returns: output.into_iter().map(AbiParam::new).collect(),\n         };\n@@ -49,12 +49,10 @@ pub fn codegen(module: &mut Module<impl Backend + 'static>, kind: AllocatorKind)\n         let callee_name = kind.fn_name(method.name);\n         //eprintln!(\"Codegen allocator shim {} -> {} ({:?} -> {:?})\", caller_name, callee_name, sig.params, sig.returns);\n \n-        sig.call_conv = CallConv::Fast; // \"rust\" abi\n         let func_id = module\n             .declare_function(&caller_name, Linkage::Export, &sig)\n             .unwrap();\n \n-        sig.call_conv = CallConv::SystemV; // \"C\" abi\n         let callee_func_id = module\n             .declare_function(&callee_name, Linkage::Import, &sig)\n             .unwrap();"}]}