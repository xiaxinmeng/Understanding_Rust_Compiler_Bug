{"sha": "cdbae165162653a58c38100823f182ac665b82de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYmFlMTY1MTYyNjUzYTU4YzM4MTAwODIzZjE4MmFjNjY1YjgyZGU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-05T04:53:16Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-05T05:06:20Z"}, "message": "Use Ident for project", "tree": {"sha": "71d3c2eddab92879d79feebffff7c444649c80bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d3c2eddab92879d79feebffff7c444649c80bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdbae165162653a58c38100823f182ac665b82de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbae165162653a58c38100823f182ac665b82de", "html_url": "https://github.com/rust-lang/rust/commit/cdbae165162653a58c38100823f182ac665b82de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdbae165162653a58c38100823f182ac665b82de/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b6419bb66d9d32dac2a9994a1080f8d1b138d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/74b6419bb66d9d32dac2a9994a1080f8d1b138d2", "html_url": "https://github.com/rust-lang/rust/commit/74b6419bb66d9d32dac2a9994a1080f8d1b138d2"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "13899d68cd26cfea33cd9704693cfb336e6377f4", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cdbae165162653a58c38100823f182ac665b82de/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbae165162653a58c38100823f182ac665b82de/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=cdbae165162653a58c38100823f182ac665b82de", "patch": "@@ -1,10 +1,10 @@\n use synstructure;\n use syn::{self, Meta, NestedMeta};\n-use proc_macro2::{self, Ident, Span};\n+use proc_macro2::{self, Ident};\n \n struct Attributes {\n     ignore: bool,\n-    project: Option<String>,\n+    project: Option<Ident>,\n }\n \n fn parse_attributes(field: &syn::Field) -> Attributes {\n@@ -29,7 +29,7 @@ fn parse_attributes(field: &syn::Field) -> Attributes {\n                             if let Meta::List(list) = meta {\n                                 if let Some(nested) = list.nested.iter().next() {\n                                     if let NestedMeta::Meta(meta) = nested {\n-                                        attrs.project = Some(meta.name().to_string());\n+                                        attrs.project = Some(meta.name());\n                                         any_attr = true;\n                                     }\n                                 }\n@@ -55,7 +55,6 @@ pub fn hash_stable_derive(mut s: synstructure::Structure) -> proc_macro2::TokenS\n         if attrs.ignore {\n              quote!{}\n         } else if let Some(project) = attrs.project {\n-            let project = Ident::new(&project, Span::call_site());\n             quote!{\n                 &#bi.#project.hash_stable(__hcx, __hasher);\n             }"}]}