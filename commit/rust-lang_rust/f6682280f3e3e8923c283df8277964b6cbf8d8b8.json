{"sha": "f6682280f3e3e8923c283df8277964b6cbf8d8b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NjgyMjgwZjNlM2U4OTIzYzI4M2RmODI3Nzk2NGI2Y2JmOGQ4Yjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-04T00:54:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-04T00:54:15Z"}, "message": "rustc: Add support for folding over tag types", "tree": {"sha": "1bd3ee57c278ead7b6568956fb96c99424de87cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bd3ee57c278ead7b6568956fb96c99424de87cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6682280f3e3e8923c283df8277964b6cbf8d8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6682280f3e3e8923c283df8277964b6cbf8d8b8", "html_url": "https://github.com/rust-lang/rust/commit/f6682280f3e3e8923c283df8277964b6cbf8d8b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6682280f3e3e8923c283df8277964b6cbf8d8b8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39b05632057a9d9e71cbf7b486c26f70c84f0c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/39b05632057a9d9e71cbf7b486c26f70c84f0c14", "html_url": "https://github.com/rust-lang/rust/commit/39b05632057a9d9e71cbf7b486c26f70c84f0c14"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "984333058f28511facc5c97a8890186d88da87c6", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f6682280f3e3e8923c283df8277964b6cbf8d8b8", "patch": "@@ -1144,6 +1144,8 @@ fn linearize_ty_params(@block_ctxt cx, @ty.t t)\n             }\n             ret t;\n         }\n+\n+        fn fold_tag_ty(@ty.t t) -> @ty.t { ret t; }\n     }\n \n "}, {"sha": "a44cdb4d44b524967bc8ef4cd0f47b1fea5db37c", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=f6682280f3e3e8923c283df8277964b6cbf8d8b8", "patch": "@@ -294,6 +294,7 @@ fn ty_to_str(&@t typ) -> str {\n \n type ty_fold = state obj {\n     fn fold_simple_ty(@t ty) -> @t;\n+    fn fold_tag_ty(@t ty) -> @t;\n };\n \n fn fold_ty(ty_fold fld, @t ty) -> @t {\n@@ -322,7 +323,8 @@ fn fold_ty(ty_fold fld, @t ty) -> @t {\n             for (@t subty in subtys) {\n                 new_subtys += vec(fold_ty(fld, subty));\n             }\n-            ret rewrap(ty, ty_tag(tid, new_subtys));\n+            auto typ = rewrap(ty, ty_tag(tid, new_subtys));\n+            ret fld.fold_tag_ty(typ);\n         }\n         case (ty_tup(?subtys)) {\n             let vec[@t] new_subtys = vec();\n@@ -611,6 +613,8 @@ fn count_ty_params(@t ty) -> uint {\n             }\n             ret ty;\n         }\n+\n+        fn fold_tag_ty(@t ty) -> @t { ret ty; }\n     }\n \n     let vec[ast.def_id] param_ids_inner = vec();\n@@ -1429,6 +1433,8 @@ fn unify(@ty.t expected, @ty.t actual, &unify_handler handler)\n                     }\n                 }\n             }\n+\n+            fn fold_tag_ty(@t typ) -> @t { ret typ; }\n         }\n \n         ret ty.fold_ty(folder(bindings), typ);\n@@ -1548,6 +1554,8 @@ fn replace_type_params(@t typ, hashmap[ast.def_id,@t] param_map) -> @t {\n                 }\n             }\n         }\n+\n+        fn fold_tag_ty(@t typ) -> @t { ret typ; }\n     }\n     auto replacer = param_replacer(param_map);\n     ret fold_ty(replacer, typ);"}, {"sha": "918cc4f1da11aa8391de34168959c4ce8a232693", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6682280f3e3e8923c283df8277964b6cbf8d8b8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=f6682280f3e3e8923c283df8277964b6cbf8d8b8", "patch": "@@ -73,6 +73,8 @@ fn generalize_ty(@crate_ctxt cx, @ty.t t) -> @ty.t {\n             }\n             ret t;\n         }\n+\n+        fn fold_tag_ty(@ty.t t) -> @ty.t { ret t; }\n     }\n \n     auto generalizer = ty_generalizer(cx, @common.new_def_hash[@ty.t]());\n@@ -114,6 +116,8 @@ fn substitute_ty_params(&@crate_ctxt ccx,\n                 case (_) { ret typ; }\n             }\n         }\n+\n+        fn fold_tag_ty(@ty.t typ) -> @ty.t { ret typ; }\n     }\n \n     fn hash_int(&int x) -> uint { ret x as uint; }"}]}