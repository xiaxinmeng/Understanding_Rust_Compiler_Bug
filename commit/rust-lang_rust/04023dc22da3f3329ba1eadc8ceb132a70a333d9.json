{"sha": "04023dc22da3f3329ba1eadc8ceb132a70a333d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MDIzZGMyMmRhM2YzMzI5YmExZWFkYzhjZWIxMzJhNzBhMzMzZDk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-24T18:11:10Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-24T19:56:18Z"}, "message": "Add regression test for #53249.", "tree": {"sha": "63be1230e20fb410f0035c2f645cbb55a6bae9ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63be1230e20fb410f0035c2f645cbb55a6bae9ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04023dc22da3f3329ba1eadc8ceb132a70a333d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlzAv2IACgkQAXYLT59T\n8VRQehAAnwTiJAi7g3Ybo30+XcN0jcQwwI1VJiXZJGKFii/QSf3neDQHba8N1Q0h\nu+dIQzAgC1xUynwGWUdJzYKFGJjq8aClluWZJAl9iJ/KDe4JCCiebL1TqfvXXwhr\noQB6BxI6Dbn6uSOloeGtlcVG/KpqlPdrinDG5hJu3wEcSPg2ncpxyJ564hVlwl2a\nqR2r9rbp24/dZ+iBbq5izHxBFsD+ue1UujD4ViurMIhcc4TFoNvuxCLwVp+ZZw3i\n2JSX7lxhEhMGbFrR6Dp5jKkgGAvru4/wOd/PiVPeALk86A88KJO46byyamoEQtA9\nBEEHumv2THRGRRdr4iN1gw2rc8u9SfqBAm0HsmeCiq3KchBKdxdcWhjtbzkj3G/C\neRAbcosyCidBEOtrNDxniTi/dPBdZHig9Rwkwfuor+aKAooJ/XGhRHk2pjd6IfmT\nvqyFqRBZaew6lD2PMiMSvfNeyyEN8g5nOOpnIbICW1HpIuAE52QUxtv7NP4rAeXf\np1e2poKJrm81H+Ku0QLmSBLoAw8Pj/Jk9QahvlPn14ReaFxPSFEO01WAncJT5+IK\ncfekyeYIA2OBwbhRQxUi4iUk1+pelsvXJ6L+7bk40/iirpNlQkKrgDzq0Tla3wB7\n7KyYq7LUS1YVMhHp75FUqjRcoJW9SNjyB7JfPQeGvEB+XHARzRw=\n=HBT7\n-----END PGP SIGNATURE-----", "payload": "tree 63be1230e20fb410f0035c2f645cbb55a6bae9ec\nparent e305df1846a6d985315917ae0c81b74af8b4e641\nauthor David Wood <david@davidtw.co> 1556129470 +0100\ncommitter David Wood <david@davidtw.co> 1556135778 +0100\n\nAdd regression test for #53249.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04023dc22da3f3329ba1eadc8ceb132a70a333d9", "html_url": "https://github.com/rust-lang/rust/commit/04023dc22da3f3329ba1eadc8ceb132a70a333d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04023dc22da3f3329ba1eadc8ceb132a70a333d9/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e305df1846a6d985315917ae0c81b74af8b4e641", "url": "https://api.github.com/repos/rust-lang/rust/commits/e305df1846a6d985315917ae0c81b74af8b4e641", "html_url": "https://github.com/rust-lang/rust/commit/e305df1846a6d985315917ae0c81b74af8b4e641"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "9e4ff43ecd112486021e775a64f1a4e4a1cff8a5", "filename": "src/test/ui/issue-53249.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/04023dc22da3f3329ba1eadc8ceb132a70a333d9/src%2Ftest%2Fui%2Fissue-53249.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04023dc22da3f3329ba1eadc8ceb132a70a333d9/src%2Ftest%2Fui%2Fissue-53249.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-53249.rs?ref=04023dc22da3f3329ba1eadc8ceb132a70a333d9", "patch": "@@ -0,0 +1,47 @@\n+// compile-pass\n+// edition:2018\n+\n+#![feature(arbitrary_self_types, async_await, await_macro)]\n+\n+use std::task::{self, Poll};\n+use std::future::Future;\n+use std::marker::Unpin;\n+use std::pin::Pin;\n+\n+// This is a regression test for a ICE/unbounded recursion issue relating to async-await.\n+\n+#[derive(Debug)]\n+#[must_use = \"futures do nothing unless polled\"]\n+pub struct Lazy<F> {\n+    f: Option<F>\n+}\n+\n+impl<F> Unpin for Lazy<F> {}\n+\n+pub fn lazy<F, R>(f: F) -> Lazy<F>\n+    where F: FnOnce(&mut task::Context) -> R,\n+{\n+    Lazy { f: Some(f) }\n+}\n+\n+impl<R, F> Future for Lazy<F>\n+    where F: FnOnce(&mut task::Context) -> R,\n+{\n+    type Output = R;\n+\n+    fn poll(mut self: Pin<&mut Self>, cx: &mut task::Context) -> Poll<R> {\n+        Poll::Ready((self.f.take().unwrap())(cx))\n+    }\n+}\n+\n+async fn __receive<WantFn, Fut>(want: WantFn) -> ()\n+    where Fut: Future<Output = ()>, WantFn: Fn(&Box<Send + 'static>) -> Fut,\n+{\n+    await!(lazy(|_| ()));\n+}\n+\n+pub fn basic_spawn_receive() {\n+    async { await!(__receive(|_| async { () })) };\n+}\n+\n+fn main() {}"}]}