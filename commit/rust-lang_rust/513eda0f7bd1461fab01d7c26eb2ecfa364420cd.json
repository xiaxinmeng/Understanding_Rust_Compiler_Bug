{"sha": "513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "node_id": "C_kwDOAAsO6NoAKDUxM2VkYTBmN2JkMTQ2MWZhYjAxZDdjMjZlYjJlY2ZhMzY0NDIwY2Q", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge.aparicio@ferrous-systems.com", "date": "2022-06-27T10:37:06Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge.aparicio@ferrous-systems.com", "date": "2022-06-27T10:37:06Z"}, "message": "make Condvar, Mutex, RwLock const constructors work with unsupported impl", "tree": {"sha": "0ab552b45a71f9568da8c07ce18741067717ee7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab552b45a71f9568da8c07ce18741067717ee7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "html_url": "https://github.com/rust-lang/rust/commit/513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc96600bf6a52f92aeeee60a92a161a82b61c0ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc96600bf6a52f92aeeee60a92a161a82b61c0ef", "html_url": "https://github.com/rust-lang/rust/commit/fc96600bf6a52f92aeeee60a92a161a82b61c0ef"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "527a26a12bcecb87bb087a5be20f2d8ccc74129f", "filename": "library/std/src/sys/unsupported/locks/condvar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -7,6 +7,7 @@ pub type MovableCondvar = Condvar;\n \n impl Condvar {\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Condvar {\n         Condvar {}\n     }"}, {"sha": "81b49c64caeb590f34c11dfabdd98be76e014c5f", "filename": "library/std/src/sys/unsupported/locks/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -12,6 +12,7 @@ unsafe impl Sync for Mutex {} // no threads on this platform\n \n impl Mutex {\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Mutex {\n         Mutex { locked: Cell::new(false) }\n     }"}, {"sha": "5292691b9555749b69712f580e9e08ea0b1251c5", "filename": "library/std/src/sys/unsupported/locks/rwlock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -12,6 +12,7 @@ unsafe impl Sync for RwLock {} // no threads on this platform\n \n impl RwLock {\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> RwLock {\n         RwLock { mode: Cell::new(0) }\n     }"}, {"sha": "8bc5b24115d1686b767dce76c9356c0ed24b2354", "filename": "library/std/src/sys_common/condvar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -15,6 +15,7 @@ pub struct Condvar {\n impl Condvar {\n     /// Creates a new condition variable for use.\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Self {\n         Self { inner: imp::MovableCondvar::new(), check: CondvarCheck::new() }\n     }"}, {"sha": "4ac9e62bf869568e4995979cfbeb2b7db8d7c849", "filename": "library/std/src/sys_common/condvar/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -50,6 +50,7 @@ pub struct NoCheck;\n \n #[allow(dead_code)]\n impl NoCheck {\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Self {\n         Self\n     }"}, {"sha": "7b9f7ef54878539e3a393d13b2c2cd6c688e2659", "filename": "library/std/src/sys_common/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -61,6 +61,7 @@ unsafe impl Sync for MovableMutex {}\n impl MovableMutex {\n     /// Creates a new mutex.\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Self {\n         Self(imp::MovableMutex::new())\n     }"}, {"sha": "34e9a91e87485e21afd354d3f79be907dedcdbaf", "filename": "library/std/src/sys_common/rwlock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513eda0f7bd1461fab01d7c26eb2ecfa364420cd/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs?ref=513eda0f7bd1461fab01d7c26eb2ecfa364420cd", "patch": "@@ -75,6 +75,7 @@ pub struct MovableRwLock(imp::MovableRwLock);\n impl MovableRwLock {\n     /// Creates a new reader-writer lock for use.\n     #[inline]\n+    #[rustc_const_stable(feature = \"const_locks\", since = \"1.63.0\")]\n     pub const fn new() -> Self {\n         Self(imp::MovableRwLock::new())\n     }"}]}