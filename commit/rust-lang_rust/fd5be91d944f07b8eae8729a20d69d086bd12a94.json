{"sha": "fd5be91d944f07b8eae8729a20d69d086bd12a94", "node_id": "C_kwDOAAsO6NoAKGZkNWJlOTFkOTQ0ZjA3YjhlYWU4NzI5YTIwZDY5ZDA4NmJkMTJhOTQ", "commit": {"author": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-12-14T04:33:20Z"}, "committer": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-12-14T04:33:20Z"}, "message": "Integrate inline macro support with the main AsciiDoc-to-Markdown conversion process", "tree": {"sha": "722ee561376ea4f649d7d37233241a34ad5fd97c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/722ee561376ea4f649d7d37233241a34ad5fd97c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd5be91d944f07b8eae8729a20d69d086bd12a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5be91d944f07b8eae8729a20d69d086bd12a94", "html_url": "https://github.com/rust-lang/rust/commit/fd5be91d944f07b8eae8729a20d69d086bd12a94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd5be91d944f07b8eae8729a20d69d086bd12a94/comments", "author": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "committer": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a77336b1aab8f8abbdca6915a2f57ae9cfe5d417", "url": "https://api.github.com/repos/rust-lang/rust/commits/a77336b1aab8f8abbdca6915a2f57ae9cfe5d417", "html_url": "https://github.com/rust-lang/rust/commit/a77336b1aab8f8abbdca6915a2f57ae9cfe5d417"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "03c0b6a0c64c479c212ca5bf7ee66a5e6a317068", "filename": "xtask/src/publish/notes.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fd5be91d944f07b8eae8729a20d69d086bd12a94/xtask%2Fsrc%2Fpublish%2Fnotes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd5be91d944f07b8eae8729a20d69d086bd12a94/xtask%2Fsrc%2Fpublish%2Fnotes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fpublish%2Fnotes.rs?ref=fd5be91d944f07b8eae8729a20d69d086bd12a94", "patch": "@@ -74,8 +74,9 @@ impl<'a, 'b, R: BufRead> Converter<'a, 'b, R> {\n     fn process_document_title(&mut self) -> anyhow::Result<()> {\n         if let Some(Ok(line)) = self.iter.next() {\n             if let Some((level, title)) = get_title(&line) {\n+                let title = process_inline_macros(title)?;\n                 if level == 1 {\n-                    self.write_title(level, title);\n+                    self.write_title(level, &title);\n                     return Ok(());\n                 }\n             }\n@@ -90,6 +91,7 @@ impl<'a, 'b, R: BufRead> Converter<'a, 'b, R> {\n \n             if get_list_item(&line).is_some() {\n                 let line = self.iter.next().unwrap()?;\n+                let line = process_inline_macros(&line)?;\n                 let (marker, item) = get_list_item(&line).unwrap();\n                 nesting.set_current(marker);\n                 self.write_list_item(item, &nesting);\n@@ -258,6 +260,7 @@ impl<'a, 'b, R: BufRead> Converter<'a, 'b, R> {\n             self.write_indent(level);\n             let line = self.iter.next().unwrap()?;\n             let line = line.trim_start();\n+            let line = process_inline_macros(&line)?;\n             if line.ends_with('+') {\n                 let line = &line[..(line.len() - 1)];\n                 self.output.push_str(line);\n@@ -585,7 +588,7 @@ Release: release:2022-01-01[]\n \n == New Features\n \n-* pr:1111[] foo bar baz\n+* **BREAKING** pr:1111[] shortcut kbd:[ctrl+r]\n - hyphen-prefixed list item\n * nested list item\n ** `foo` -> `foofoo`\n@@ -645,9 +648,11 @@ paragraph\n == Another Section\n \n * foo bar baz\n-* foo bar baz\n+* list item with an inline image\n+  image:https://example.com/animation.gif[]\n \n The highlight of the month is probably pr:1111[].\n+See https://example.com/manual[online manual] for more information.\n \n [source,bash]\n ----\n@@ -668,12 +673,12 @@ This is a plain listing.\n \n Hello!\n \n-Commit: commit:0123456789abcdef0123456789abcdef01234567[] \\\\\n-Release: release:2022-01-01[]\n+Commit: [`0123456`](https://github.com/rust-analyzer/rust-analyzer/commit/0123456789abcdef0123456789abcdef01234567) \\\\\n+Release: [`2022-01-01`](https://github.com/rust-analyzer/rust-analyzer/releases/2022-01-01)\n \n ## New Features\n \n-- pr:1111[] foo bar baz\n+- **BREAKING** [`#1111`](https://github.com/rust-analyzer/rust-analyzer/pull/1111) shortcut <kbd>ctrl</kbd>+<kbd>r</kbd>\n   - hyphen-prefixed list item\n - nested list item\n   - `foo` -> `foofoo`\n@@ -728,9 +733,11 @@ Release: release:2022-01-01[]\n ## Another Section\n \n - foo bar baz\n-- foo bar baz\n+- list item with an inline image\n+  ![](https://example.com/animation.gif)\n \n-The highlight of the month is probably pr:1111[].\n+The highlight of the month is probably [`#1111`](https://github.com/rust-analyzer/rust-analyzer/pull/1111).\n+See [online manual](https://example.com/manual) for more information.\n \n ```bash\n rustup update nightly"}]}