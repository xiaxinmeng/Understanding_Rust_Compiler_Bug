{"sha": "98129631b5a71c9a43724903499b11170b518e7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MTI5NjMxYjVhNzFjOWE0MzcyNDkwMzQ5OWIxMTE3MGI1MThlN2E=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-20T15:47:38Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-20T17:20:50Z"}, "message": "Use err_unsup_format instead", "tree": {"sha": "5e1c5780313dcd9ce598da75aa6a627b830fd392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e1c5780313dcd9ce598da75aa6a627b830fd392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98129631b5a71c9a43724903499b11170b518e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98129631b5a71c9a43724903499b11170b518e7a", "html_url": "https://github.com/rust-lang/rust/commit/98129631b5a71c9a43724903499b11170b518e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98129631b5a71c9a43724903499b11170b518e7a/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b44fd97af6999e032f71e9e7c265b43163cb4052", "url": "https://api.github.com/repos/rust-lang/rust/commits/b44fd97af6999e032f71e9e7c265b43163cb4052", "html_url": "https://github.com/rust-lang/rust/commit/b44fd97af6999e032f71e9e7c265b43163cb4052"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "330d6bc996b78e3061416a48cdbe7e7246f0d897", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98129631b5a71c9a43724903499b11170b518e7a/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98129631b5a71c9a43724903499b11170b518e7a/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=98129631b5a71c9a43724903499b11170b518e7a", "patch": "@@ -101,9 +101,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if this.machine.communicate {\n             // Fill the buffer using the host's rng.\n-            getrandom::getrandom(&mut data).map_err(|err| {\n-                InterpError::Unsupported(UnsupportedOpInfo::Unsupported(err.to_string()))\n-            })?;\n+            getrandom::getrandom(&mut data)\n+                .map_err(|err| err_unsup_format!(\"getrandom failed: {}\", err))?;\n         }\n         else {\n             let rng = this.memory_mut().extra.rng.get_mut();"}]}