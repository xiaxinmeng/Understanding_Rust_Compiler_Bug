{"sha": "f891af9de529f7df8d094e130dd6f35fe07b4d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OTFhZjlkZTUyOWY3ZGY4ZDA5NGUxMzBkZDZmMzVmZTA3YjRkNzg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-25T13:33:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-25T13:33:55Z"}, "message": "Rollup merge of #82078 - lopopolo:char-u8-const-fn, r=m-ou-se\n\nMake char and u8 methods const\n\nchar methods `len_utf8`, `len_utf16`, `to_ascii_lowercase`, `eq_ignore_ascii_case` can be made const.\n\n`u8` methods `to_ascii_lowercase`, `to_ascii_uppercase` are required to be const as well.\n\n`u8::eq_ignore_ascii_case` was additionally made const.\n\nRebase of https://github.com/rust-lang/rust/pull/79549 originally authored by ``@YenForYang.`` Changes from that PR:\n\n- Squashed all commits from #79549.\n- rebased to latest upstream master.\n- Removed const attributes for `char::escape_unicode` and `char::escape_default`.\n- Updated `since` attributes for `const` stabilization to 1.52.0.\n\ncc ``@m-ou-se.``", "tree": {"sha": "4678e5b7465fef9e533d85dc140dc0800d3d3953", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4678e5b7465fef9e533d85dc140dc0800d3d3953"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f891af9de529f7df8d094e130dd6f35fe07b4d78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgN6dDCRBK7hj4Ov3rIwAAdHIIAAQ673e/isy1bp3uthI3WZRs\ndHBxUWMABC+4rRwahT1Ed+gM4b7O4MP86j8wPC9VujUi2zlv80SIHxZy+55Oh1XV\nKZLTERG2pLOYtxdyurHzDPnV/z5MB6qaAhzoZKguMCYon8KKQMN+/gAr8wdFPeRL\nw20TpySatMOQo3qjyLHYG1iGEtTxo+woafDwcLwZXW432KBjI7T5JsQjfL6wSzYn\nDvR1oAFOJn8c9bbTfCs9EiHQA4+BbN5D/IgxfagdptQXR501e5FcaOcDgjb4l5Y/\noL06KUOr11/PITuOXxn1H4Zuvq9DIXmrMqsnzHtPZWgzw3PfXMD2OQxenOWSk3M=\n=aNZR\n-----END PGP SIGNATURE-----\n", "payload": "tree 4678e5b7465fef9e533d85dc140dc0800d3d3953\nparent c5629131fa23a07a47e9b6a25f687ac6791a843f\nparent 1ed9dd4179ffc3f7759dcb2a74dc362da647008c\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614260035 +0100\ncommitter GitHub <noreply@github.com> 1614260035 +0100\n\nRollup merge of #82078 - lopopolo:char-u8-const-fn, r=m-ou-se\n\nMake char and u8 methods const\n\nchar methods `len_utf8`, `len_utf16`, `to_ascii_lowercase`, `eq_ignore_ascii_case` can be made const.\n\n`u8` methods `to_ascii_lowercase`, `to_ascii_uppercase` are required to be const as well.\n\n`u8::eq_ignore_ascii_case` was additionally made const.\n\nRebase of https://github.com/rust-lang/rust/pull/79549 originally authored by ``@YenForYang.`` Changes from that PR:\n\n- Squashed all commits from #79549.\n- rebased to latest upstream master.\n- Removed const attributes for `char::escape_unicode` and `char::escape_default`.\n- Updated `since` attributes for `const` stabilization to 1.52.0.\n\ncc ``@m-ou-se.``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f891af9de529f7df8d094e130dd6f35fe07b4d78", "html_url": "https://github.com/rust-lang/rust/commit/f891af9de529f7df8d094e130dd6f35fe07b4d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f891af9de529f7df8d094e130dd6f35fe07b4d78/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5629131fa23a07a47e9b6a25f687ac6791a843f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5629131fa23a07a47e9b6a25f687ac6791a843f", "html_url": "https://github.com/rust-lang/rust/commit/c5629131fa23a07a47e9b6a25f687ac6791a843f"}, {"sha": "1ed9dd4179ffc3f7759dcb2a74dc362da647008c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed9dd4179ffc3f7759dcb2a74dc362da647008c", "html_url": "https://github.com/rust-lang/rust/commit/1ed9dd4179ffc3f7759dcb2a74dc362da647008c"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "b3e1becf570a7e697bd61dbb44c1c2fb76d38260", "filename": "library/core/src/char/methods.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f891af9de529f7df8d094e130dd6f35fe07b4d78/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f891af9de529f7df8d094e130dd6f35fe07b4d78/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs?ref=f891af9de529f7df8d094e130dd6f35fe07b4d78", "patch": "@@ -569,8 +569,9 @@ impl char {\n     /// assert_eq!(len, tokyo.len());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_stable(feature = \"const_char_len_utf\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn len_utf8(self) -> usize {\n+    pub const fn len_utf8(self) -> usize {\n         len_utf8(self as u32)\n     }\n \n@@ -594,8 +595,9 @@ impl char {\n     /// assert_eq!(len, 2);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_stable(feature = \"const_char_len_utf\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn len_utf16(self) -> usize {\n+    pub const fn len_utf16(self) -> usize {\n         let ch = self as u32;\n         if (ch & 0xFFFF) == ch { 1 } else { 2 }\n     }\n@@ -1086,8 +1088,9 @@ impl char {\n     /// [`make_ascii_uppercase()`]: #method.make_ascii_uppercase\n     /// [`to_uppercase()`]: #method.to_uppercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn to_ascii_uppercase(&self) -> char {\n+    pub const fn to_ascii_uppercase(&self) -> char {\n         if self.is_ascii_lowercase() {\n             (*self as u8).ascii_change_case_unchecked() as char\n         } else {\n@@ -1118,8 +1121,9 @@ impl char {\n     /// [`make_ascii_lowercase()`]: #method.make_ascii_lowercase\n     /// [`to_lowercase()`]: #method.to_lowercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn to_ascii_lowercase(&self) -> char {\n+    pub const fn to_ascii_lowercase(&self) -> char {\n         if self.is_ascii_uppercase() {\n             (*self as u8).ascii_change_case_unchecked() as char\n         } else {\n@@ -1143,8 +1147,9 @@ impl char {\n     /// assert!(!upper_a.eq_ignore_ascii_case(&lower_z));\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn eq_ignore_ascii_case(&self, other: &char) -> bool {\n+    pub const fn eq_ignore_ascii_case(&self, other: &char) -> bool {\n         self.to_ascii_lowercase() == other.to_ascii_lowercase()\n     }\n \n@@ -1561,7 +1566,7 @@ impl char {\n }\n \n #[inline]\n-fn len_utf8(code: u32) -> usize {\n+const fn len_utf8(code: u32) -> usize {\n     if code < MAX_ONE_B {\n         1\n     } else if code < MAX_TWO_B {"}, {"sha": "f0bd976ba83d5599fc7c744f11ca5398f27d0a8a", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f891af9de529f7df8d094e130dd6f35fe07b4d78/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f891af9de529f7df8d094e130dd6f35fe07b4d78/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=f891af9de529f7df8d094e130dd6f35fe07b4d78", "patch": "@@ -195,8 +195,9 @@ impl u8 {\n     ///\n     /// [`make_ascii_uppercase`]: Self::make_ascii_uppercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn to_ascii_uppercase(&self) -> u8 {\n+    pub const fn to_ascii_uppercase(&self) -> u8 {\n         // Unset the fifth bit if this is a lowercase letter\n         *self & !((self.is_ascii_lowercase() as u8) * ASCII_CASE_MASK)\n     }\n@@ -218,15 +219,16 @@ impl u8 {\n     ///\n     /// [`make_ascii_lowercase`]: Self::make_ascii_lowercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn to_ascii_lowercase(&self) -> u8 {\n+    pub const fn to_ascii_lowercase(&self) -> u8 {\n         // Set the fifth bit if this is an uppercase letter\n         *self | (self.is_ascii_uppercase() as u8 * ASCII_CASE_MASK)\n     }\n \n     /// Assumes self is ascii\n     #[inline]\n-    pub(crate) fn ascii_change_case_unchecked(&self) -> u8 {\n+    pub(crate) const fn ascii_change_case_unchecked(&self) -> u8 {\n         *self ^ ASCII_CASE_MASK\n     }\n \n@@ -243,8 +245,9 @@ impl u8 {\n     /// assert!(lowercase_a.eq_ignore_ascii_case(&uppercase_a));\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[rustc_const_stable(feature = \"const_ascii_methods_on_intrinsics\", since = \"1.52.0\")]\n     #[inline]\n-    pub fn eq_ignore_ascii_case(&self, other: &u8) -> bool {\n+    pub const fn eq_ignore_ascii_case(&self, other: &u8) -> bool {\n         self.to_ascii_lowercase() == other.to_ascii_lowercase()\n     }\n "}]}