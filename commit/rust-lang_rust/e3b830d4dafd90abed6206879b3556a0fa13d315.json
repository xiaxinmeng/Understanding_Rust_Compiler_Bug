{"sha": "e3b830d4dafd90abed6206879b3556a0fa13d315", "node_id": "C_kwDOAAsO6NoAKGUzYjgzMGQ0ZGFmZDkwYWJlZDYyMDY4NzliMzU1NmEwZmExM2QzMTU", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-05-05T17:21:28Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-05-22T16:58:28Z"}, "message": "rustc_privacy: Migrate `EmbargoVisitor` to `visit_all_item_likes_in_crate`\n\nPreviously it had some logic requiring tree visiting, but it was moved to resolve last year.", "tree": {"sha": "c30d512ef041bf85a49873eb468d862d3e137960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c30d512ef041bf85a49873eb468d862d3e137960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3b830d4dafd90abed6206879b3556a0fa13d315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3b830d4dafd90abed6206879b3556a0fa13d315", "html_url": "https://github.com/rust-lang/rust/commit/e3b830d4dafd90abed6206879b3556a0fa13d315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3b830d4dafd90abed6206879b3556a0fa13d315/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03761a50a3b26daded09e6da79252692c9bbad5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/03761a50a3b26daded09e6da79252692c9bbad5f", "html_url": "https://github.com/rust-lang/rust/commit/03761a50a3b26daded09e6da79252692c9bbad5f"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "3d278ee9fb90341b4053656d113ce880d6a19472", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e3b830d4dafd90abed6206879b3556a0fa13d315/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3b830d4dafd90abed6206879b3556a0fa13d315/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=e3b830d4dafd90abed6206879b3556a0fa13d315", "patch": "@@ -700,14 +700,6 @@ impl<'tcx> EmbargoVisitor<'tcx> {\n }\n \n impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n-    type NestedFilter = nested_filter::All;\n-\n-    /// We want to visit items in the context of their containing\n-    /// module and so forth, so supply a crate for doing a deep walk.\n-    fn nested_visit_map(&mut self) -> Self::Map {\n-        self.tcx.hir()\n-    }\n-\n     fn visit_item(&mut self, item: &'tcx hir::Item<'tcx>) {\n         let item_ev = match item.kind {\n             hir::ItemKind::Impl { .. } => {\n@@ -915,15 +907,6 @@ impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n                 }\n             }\n         }\n-\n-        intravisit::walk_item(self, item);\n-    }\n-\n-    fn visit_block(&mut self, b: &'tcx hir::Block<'tcx>) {\n-        // Blocks can have public items, for example impls, but they always\n-        // start as completely private regardless of publicity of a function,\n-        // constant, type, field, etc., in which this block resides.\n-        intravisit::walk_block(self, b);\n     }\n }\n \n@@ -2210,7 +2193,7 @@ fn effective_visibilities(tcx: TyCtxt<'_>, (): ()) -> &EffectiveVisibilities {\n \n     visitor.effective_visibilities.check_invariants(tcx, true);\n     loop {\n-        tcx.hir().walk_toplevel_module(&mut visitor);\n+        tcx.hir().visit_all_item_likes_in_crate(&mut visitor);\n         if visitor.changed {\n             visitor.changed = false;\n         } else {"}]}