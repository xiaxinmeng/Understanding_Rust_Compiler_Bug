{"sha": "d68098a43ef31f9b2880ad660879da17b417f869", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ODA5OGE0M2VmMzFmOWIyODgwYWQ2NjA4NzlkYTE3YjQxN2Y4Njk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-06-08T23:20:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-08T23:20:59Z"}, "message": "Rollup merge of #51298 - Dylan-DPC:stabilise/termination-test, r=nikomatsakis\n\nStabilize unit tests with non-`()` return type\n\nReferences #48854", "tree": {"sha": "51e2a47f0b67de292c5a97e832970c55c9ca380a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51e2a47f0b67de292c5a97e832970c55c9ca380a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d68098a43ef31f9b2880ad660879da17b417f869", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGw9bCRBK7hj4Ov3rIwAAdHIIABJ69mXF+88MEjk3Vo/Shr1m\nPbxB5cDZD1MVjaNUP2fSW1BjeV64bJZLe+kWfEqZmlYPdxZlZwGgxp2Xn+jFosWz\ngo8IPaexdRLFVsKkbCPbr1orSUPQH+7lMVN1ep4Pi6zR1paNPJ98HjIPmZ0BrnNl\nZRfRTV6UdM1/6ZjX64SvY6N9m37DXOSSkYE1q5ptupu9oHIM6s00MIx2u0N0vOxT\nKkdVsGlUD9+HuVVj3QuQwNwS45PX8SdtpLxICWPOKaEnYaYEr1XkbQaDftINzPo4\nmbW6tlqQfmtCxOPiU2sE70DdeRw2+8WxFZ+hGgrLHEJMmTfcwpIh7cATt15Ahxs=\n=XgOe\n-----END PGP SIGNATURE-----\n", "payload": "tree 51e2a47f0b67de292c5a97e832970c55c9ca380a\nparent b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4\nparent 8ecbd351bb80f03a76110ba9f7b9e6a68b3d2798\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1528500059 -0600\ncommitter GitHub <noreply@github.com> 1528500059 -0600\n\nRollup merge of #51298 - Dylan-DPC:stabilise/termination-test, r=nikomatsakis\n\nStabilize unit tests with non-`()` return type\n\nReferences #48854\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d68098a43ef31f9b2880ad660879da17b417f869", "html_url": "https://github.com/rust-lang/rust/commit/d68098a43ef31f9b2880ad660879da17b417f869", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d68098a43ef31f9b2880ad660879da17b417f869/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "html_url": "https://github.com/rust-lang/rust/commit/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4"}, {"sha": "8ecbd351bb80f03a76110ba9f7b9e6a68b3d2798", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ecbd351bb80f03a76110ba9f7b9e6a68b3d2798", "html_url": "https://github.com/rust-lang/rust/commit/8ecbd351bb80f03a76110ba9f7b9e6a68b3d2798"}], "stats": {"total": 78, "additions": 13, "deletions": 65}, "files": [{"sha": "5f0cf49cd96cf73acda7aa6204ea9935f7041e26", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -398,9 +398,6 @@ declare_features! (\n     // `foo.rs` as an alternative to `foo/mod.rs`\n     (active, non_modrs_mods, \"1.24.0\", Some(44660), Some(Edition::Edition2018)),\n \n-    // Termination trait in tests (RFC 1937)\n-    (active, termination_trait_test, \"1.24.0\", Some(48854), Some(Edition::Edition2018)),\n-\n     // `extern` in paths\n     (active, extern_in_paths, \"1.23.0\", Some(44660), None),\n \n@@ -616,6 +613,8 @@ declare_features! (\n     (accepted, fn_must_use, \"1.27.0\", Some(43302), None),\n     // Allows use of the :lifetime macro fragment specifier\n     (accepted, macro_lifetime_matcher, \"1.27.0\", Some(34303), None),\n+    // Termination trait in tests (RFC 1937)\n+    (accepted, termination_trait_test, \"1.27.0\", Some(48854), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must"}, {"sha": "0c7f70a578a2687477b4fe12e1ac3144f987bf11", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 9, "deletions": 34, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -335,7 +335,7 @@ enum BadTestSignature {\n fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     let has_test_attr = attr::contains_name(&i.attrs, \"test\");\n \n-    fn has_test_signature(cx: &TestCtxt, i: &ast::Item) -> HasTestSignature {\n+    fn has_test_signature(_cx: &TestCtxt, i: &ast::Item) -> HasTestSignature {\n         let has_should_panic_attr = attr::contains_name(&i.attrs, \"should_panic\");\n         match i.node {\n             ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n@@ -351,15 +351,14 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n                     return No(BadTestSignature::NoArgumentsAllowed);\n                 }\n \n-                match (has_output, cx.features.termination_trait_test, has_should_panic_attr) {\n-                    (true, true, true) => No(BadTestSignature::ShouldPanicOnlyWithNoArgs),\n-                    (true, true, false) => if generics.is_parameterized() {\n+                match (has_output, has_should_panic_attr) {\n+                    (true, true) => No(BadTestSignature::ShouldPanicOnlyWithNoArgs),\n+                    (true, false) => if generics.is_parameterized() {\n                         No(BadTestSignature::WrongTypeSignature)\n                     } else {\n                         Yes\n                     },\n-                    (true, false, _) => No(BadTestSignature::WrongTypeSignature),\n-                    (false, _, _) => Yes\n+                    (false, _) => Yes\n                 }\n             }\n             _ => No(BadTestSignature::NotEvenAFunction),\n@@ -395,31 +394,12 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     let has_bench_attr = attr::contains_name(&i.attrs, \"bench\");\n \n-    fn has_bench_signature(cx: &TestCtxt, i: &ast::Item) -> bool {\n+    fn has_bench_signature(_cx: &TestCtxt, i: &ast::Item) -> bool {\n         match i.node {\n-            ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n-                let input_cnt = decl.inputs.len();\n-\n-                // If the termination trait is active, the compiler will check that the output\n-                // type implements the `Termination` trait as `libtest` enforces that.\n-                let output_matches = if cx.features.termination_trait_test {\n-                    true\n-                } else {\n-                    let no_output = match decl.output {\n-                        ast::FunctionRetTy::Default(..) => true,\n-                        ast::FunctionRetTy::Ty(ref t) if t.node == ast::TyKind::Tup(vec![]) => true,\n-                        _ => false\n-                    };\n-                    let tparm_cnt = generics.params.iter()\n-                        .filter(|param| param.is_type_param())\n-                        .count();\n-\n-                    no_output && tparm_cnt == 0\n-                };\n-\n+            ast::ItemKind::Fn(ref decl, _, _, _, _, _) => {\n                 // NB: inadequate check, but we're running\n                 // well before resolve, can't get too deep.\n-                input_cnt == 1 && output_matches\n+                decl.inputs.len() == 1\n             }\n             _ => false\n         }\n@@ -430,13 +410,8 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     if has_bench_attr && !has_bench_signature {\n         let diag = cx.span_diagnostic;\n \n-        if cx.features.termination_trait_test {\n-            diag.span_err(i.span, \"functions used as benches must have signature \\\n+        diag.span_err(i.span, \"functions used as benches must have signature \\\n                                    `fn(&mut Bencher) -> impl Termination`\");\n-        } else {\n-            diag.span_err(i.span, \"functions used as benches must have signature \\\n-                                   `fn(&mut Bencher) -> ()`\");\n-        }\n     }\n \n     has_bench_attr && has_bench_signature"}, {"sha": "4af7e94671627c67e216ebff9e5c1620ad31fded", "filename": "src/test/compile-fail/feature-gate-termination_trait_test.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs?ref=b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: --test\n-\n-fn main() {}\n-\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    fn it_works() -> Result<(), ()> {\n-    //~^ ERROR functions used as tests must have signature fn() -> ()\n-        Ok(())\n-    }\n-}"}, {"sha": "a0b2784214ae95e0fcbb12523f62fdd53eadf78d", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test-should-panic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -10,7 +10,6 @@\n \n // compile-flags: --test\n \n-#![feature(termination_trait_test)]\n #![feature(test)]\n \n extern crate test;"}, {"sha": "bfdcf01c325f709f0678be458f945313398df750", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test-should-panic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.stderr?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -1,5 +1,5 @@\n error: functions using `#[should_panic]` must return `()`\n-  --> $DIR/termination-trait-in-test-should-panic.rs:22:1\n+  --> $DIR/termination-trait-in-test-should-panic.rs:21:1\n    |\n LL | / fn not_a_num() -> Result<(), ParseIntError> {\n LL | |     //~^ ERROR functions using `#[should_panic]` must return `()`"}, {"sha": "0561b12221d1a535149f260261224948b99e64c9", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -11,7 +11,6 @@\n // compile-flags: --test\n // run-pass\n \n-#![feature(termination_trait_test)]\n #![feature(test)]\n \n extern crate test;"}, {"sha": "6153d840c8a7dc633c4125233cbb5a358c40a602", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: --test\n \n-#![feature(termination_trait_test)]\n-\n use std::num::ParseIntError;\n \n #[test]"}, {"sha": "0972a0994fc0d38261b8abf776066f5e0f47399f", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d68098a43ef31f9b2880ad660879da17b417f869/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr?ref=d68098a43ef31f9b2880ad660879da17b417f869", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `main` has invalid return type `std::result::Result<f32, std::num::ParseIntError>`\n-  --> $DIR/termination-trait-test-wrong-type.rs:18:1\n+  --> $DIR/termination-trait-test-wrong-type.rs:16:1\n    |\n LL | / fn can_parse_zero_as_f32() -> Result<f32, ParseIntError> { //~ ERROR\n LL | |     \"0\".parse()"}]}