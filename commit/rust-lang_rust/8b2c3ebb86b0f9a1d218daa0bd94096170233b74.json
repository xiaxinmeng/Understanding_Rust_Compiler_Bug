{"sha": "8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "node_id": "C_kwDOAAsO6NoAKDhiMmMzZWJiODZiMGY5YTFkMjE4ZGFhMGJkOTQwOTYxNzAyMzNiNzQ", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-10-12T21:26:22Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-10-12T21:26:22Z"}, "message": "Add a fixme", "tree": {"sha": "4773ecfe5cbbb95da68208fb3552ead0f7b4900a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4773ecfe5cbbb95da68208fb3552ead0f7b4900a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "html_url": "https://github.com/rust-lang/rust/commit/8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b2c3ebb86b0f9a1d218daa0bd94096170233b74/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c47fdfedbb44256b3c78f315cd6150190317e38", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c47fdfedbb44256b3c78f315cd6150190317e38", "html_url": "https://github.com/rust-lang/rust/commit/0c47fdfedbb44256b3c78f315cd6150190317e38"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e3491d36751983831c60c43e76066535a435240b", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b2c3ebb86b0f9a1d218daa0bd94096170233b74/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b2c3ebb86b0f9a1d218daa0bd94096170233b74/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "patch": "@@ -287,6 +287,9 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                             };\n                         let vtable = get_vtable(bx.cx(), source.ty(self.mir, bx.tcx()), trait_ref);\n                         let vtable = bx.pointercast(vtable, bx.cx().type_ptr_to(bx.cx().type_isize()));\n+                        // FIXME(dyn-star): this is probably not the best way to check if this is\n+                        // a pointer, and really we should ensure that the value is a suitable\n+                        // pointer earlier in the compilation process.\n                         let data = match operand.layout.pointee_info_at(bx.cx(), Size::ZERO) {\n                             Some(_) => bx.ptrtoint(data, bx.cx().type_isize()),\n                             None => data,"}]}