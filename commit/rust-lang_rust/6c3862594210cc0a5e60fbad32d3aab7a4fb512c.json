{"sha": "6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMzg2MjU5NDIxMGNjMGE1ZTYwZmJhZDMyZDNhYWI3YTRmYjUxMmM=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2019-05-21T19:38:46Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2019-05-21T20:51:36Z"}, "message": "Make -Zemit-artifact-notifications also emit the artifact type\n\nThis is easier for tooling to handle than trying to reverse-engineer it from the filename extension.", "tree": {"sha": "8843a8f4a17c54514ab2937b87e3ea0b9ad93806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8843a8f4a17c54514ab2937b87e3ea0b9ad93806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "html_url": "https://github.com/rust-lang/rust/commit/6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09189591c4c4f6784ffd4bbe99eaefbfe1d5e4a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/09189591c4c4f6784ffd4bbe99eaefbfe1d5e4a4", "html_url": "https://github.com/rust-lang/rust/commit/09189591c4c4f6784ffd4bbe99eaefbfe1d5e4a4"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "c1ec2071789eb58d66ee39682dbe543202cc08e3", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -96,7 +96,7 @@ pub fn link_binary<'a, B: ArchiveBuilder<'a>>(sess: &'a Session,\n                 }\n             }\n             if sess.opts.debugging_opts.emit_artifact_notifications {\n-                sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename);\n+                sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename, \"link\");\n             }\n         }\n "}, {"sha": "b56162deaf1cc68b093f489527f52a39f7892c67", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -56,7 +56,7 @@ pub trait Emitter {\n     /// Emit a notification that an artifact has been output.\n     /// This is currently only supported for the JSON format,\n     /// other formats can, and will, simply ignore it.\n-    fn emit_artifact_notification(&mut self, _path: &Path) {}\n+    fn emit_artifact_notification(&mut self, _path: &Path, _artifact_type: &str) {}\n \n     /// Checks if should show explanations about \"rustc --explain\"\n     fn should_show_explain(&self) -> bool {"}, {"sha": "2dcf7be2aa8b1f9dadf8bfae1f6b121be7dbb235", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -769,8 +769,8 @@ impl Handler {\n         }\n     }\n \n-    pub fn emit_artifact_notification(&self, path: &Path) {\n-        self.emitter.borrow_mut().emit_artifact_notification(path);\n+    pub fn emit_artifact_notification(&self, path: &Path, artifact_type: &str) {\n+        self.emitter.borrow_mut().emit_artifact_notification(path, artifact_type);\n     }\n }\n "}, {"sha": "f17554b1fbdc99abf0f72a5c7bc2f39cb408703e", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -1052,7 +1052,8 @@ fn encode_and_write_metadata<'tcx>(\n             tcx.sess.fatal(&format!(\"failed to write {}: {}\", out_filename.display(), e));\n         }\n         if tcx.sess.opts.debugging_opts.emit_artifact_notifications {\n-            tcx.sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename);\n+            tcx.sess.parse_sess.span_diagnostic\n+                .emit_artifact_notification(&out_filename, \"metadata\");\n         }\n     }\n "}, {"sha": "767ab74355e66213ff8c27fbec2ba22be41f7302", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -92,8 +92,8 @@ impl Emitter for JsonEmitter {\n         }\n     }\n \n-    fn emit_artifact_notification(&mut self, path: &Path) {\n-        let data = ArtifactNotification { artifact: path };\n+    fn emit_artifact_notification(&mut self, path: &Path, artifact_type: &str) {\n+        let data = ArtifactNotification { artifact: path, emit: artifact_type };\n         let result = if self.pretty {\n             writeln!(&mut self.dst, \"{}\", as_pretty_json(&data))\n         } else {\n@@ -185,6 +185,8 @@ struct DiagnosticCode {\n struct ArtifactNotification<'a> {\n     /// The path of the artifact.\n     artifact: &'a Path,\n+    /// What kind of artifact we're emitting.\n+    emit: &'a str,\n }\n \n impl Diagnostic {"}, {"sha": "5547631a4b0229e9b2b5310ebc16e316c9106140", "filename": "src/test/ui/emit-artifact-notifications.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -1 +1 @@\n-{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications.nll/libemit_artifact_notifications.rmeta\"}\n+{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications.nll/libemit_artifact_notifications.rmeta\",\"emit\":\"metadata\"}"}, {"sha": "260d41b8f15cc090902f2a39d22af5c1525ed2c9", "filename": "src/test/ui/emit-artifact-notifications.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c3862594210cc0a5e60fbad32d3aab7a4fb512c/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr?ref=6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "patch": "@@ -1 +1 @@\n-{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications/libemit_artifact_notifications.rmeta\"}\n+{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications/libemit_artifact_notifications.rmeta\",\"emit\":\"metadata\"}"}]}