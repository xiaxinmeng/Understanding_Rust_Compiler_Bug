{"sha": "5e4be45838fd67885f6f4a8b65db6e7be3681b4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNGJlNDU4MzhmZDY3ODg1ZjZmNGE4YjY1ZGI2ZTdiZTM2ODFiNGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-28T21:57:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-28T21:57:00Z"}, "message": "Auto merge of #1162 - RalfJung:track-fn-ptr, r=RalfJung\n\ntest track_caller with fn ptrs\n\nLooks like we already use `ReifyShim` the right way, let's just make sure we test that!", "tree": {"sha": "59a9437c309bdd6214fe40b459c6692018f5e0e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59a9437c309bdd6214fe40b459c6692018f5e0e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e4be45838fd67885f6f4a8b65db6e7be3681b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e4be45838fd67885f6f4a8b65db6e7be3681b4a", "html_url": "https://github.com/rust-lang/rust/commit/5e4be45838fd67885f6f4a8b65db6e7be3681b4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e4be45838fd67885f6f4a8b65db6e7be3681b4a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5603edcf006b8182f15ad1baf79d49115f7def6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5603edcf006b8182f15ad1baf79d49115f7def6", "html_url": "https://github.com/rust-lang/rust/commit/b5603edcf006b8182f15ad1baf79d49115f7def6"}, {"sha": "9f6df672381bdb0077a91ed785c80fef78eb8def", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6df672381bdb0077a91ed785c80fef78eb8def", "html_url": "https://github.com/rust-lang/rust/commit/9f6df672381bdb0077a91ed785c80fef78eb8def"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "f6797c24ebecf327ee3458b6cbfa7d2308d6aad3", "filename": "tests/run-pass/track-caller-attribute.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5e4be45838fd67885f6f4a8b65db6e7be3681b4a/tests%2Frun-pass%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e4be45838fd67885f6f4a8b65db6e7be3681b4a/tests%2Frun-pass%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftrack-caller-attribute.rs?ref=5e4be45838fd67885f6f4a8b65db6e7be3681b4a", "patch": "@@ -19,15 +19,33 @@ macro_rules! caller_location_from_macro {\n     () => (core::panic::Location::caller());\n }\n \n+fn test_fn_ptr() {\n+    fn pass_to_ptr_call<T>(f: fn(T), x: T) {\n+        f(x);\n+    }\n+\n+    #[track_caller]\n+    fn tracked_unit(_: ()) {\n+        let expected_line = line!() - 1;\n+        let location = std::panic::Location::caller();\n+        assert_eq!(location.file(), file!());\n+        assert_eq!(location.line(), expected_line, \"call shims report location as fn definition\");\n+    }\n+\n+    pass_to_ptr_call(tracked_unit, ());\n+}\n+\n fn main() {\n     let location = Location::caller();\n+    let expected_line = line!() - 1;\n     assert_eq!(location.file(), file!());\n-    assert_eq!(location.line(), 23);\n+    assert_eq!(location.line(), expected_line);\n     assert_eq!(location.column(), 20);\n \n     let tracked = tracked();\n+    let expected_line = line!() - 1;\n     assert_eq!(tracked.file(), file!());\n-    assert_eq!(tracked.line(), 28);\n+    assert_eq!(tracked.line(), expected_line);\n     assert_eq!(tracked.column(), 19);\n \n     let nested = nested_intrinsic();\n@@ -43,12 +61,16 @@ fn main() {\n     // `Location::caller()` in a macro should behave similarly to `file!` and `line!`,\n     // i.e. point to where the macro was invoked, instead of the macro itself.\n     let inmacro = caller_location_from_macro!();\n+    let expected_line = line!() - 1;\n     assert_eq!(inmacro.file(), file!());\n-    assert_eq!(inmacro.line(), 45);\n+    assert_eq!(inmacro.line(), expected_line);\n     assert_eq!(inmacro.column(), 19);\n \n     let intrinsic = core::intrinsics::caller_location();\n+    let expected_line = line!() - 1;\n     assert_eq!(intrinsic.file(), file!());\n-    assert_eq!(intrinsic.line(), 50);\n+    assert_eq!(intrinsic.line(), expected_line);\n     assert_eq!(intrinsic.column(), 21);\n+\n+    test_fn_ptr();\n }"}]}