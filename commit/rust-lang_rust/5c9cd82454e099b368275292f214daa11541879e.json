{"sha": "5c9cd82454e099b368275292f214daa11541879e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOWNkODI0NTRlMDk5YjM2ODI3NTI5MmYyMTRkYWExMTU0MTg3OWU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-20T02:42:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T02:42:45Z"}, "message": "Rollup merge of #71899 - cuviper:try_find_map, r=dtolnay\n\nRefactor `try_find` a little\n\n~~This works like `find_map`, but mapping to a `Try` type. It stops when `Ok` is `Some(value)`, with an additional short-circuit on `Try::Error`. This is similar to the unstable `try_find`, but has the advantage of being able to directly return the user's `R: Try` type directly, rather than converting to `Result`.~~\n(removed -- `try_find_map` was declined in review)\n\nThis PR also refactors `try_find` a little to match style. The `E` type parameter was unnecessary, so it's now removed. The folding closure now has reduced parametricity on just `T = Self::Item`, rather\nthan the whole `Self` iterator type. There's otherwise no functional change in this.", "tree": {"sha": "1ab97bb6c3fbd9e08163152541da324b002c3e72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab97bb6c3fbd9e08163152541da324b002c3e72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c9cd82454e099b368275292f214daa11541879e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7XelCRBK7hj4Ov3rIwAAdHIIAJJcHfnosG9MdRopoif5jS74\nl9NjSO3p+1hbf88vegUbbC+6uKciZ0nuIkC5UR1rG9vPOrAlbJjSEQCLlhBg7eAR\nFm6Xs//m61zJuvZ9OVJWBN1idR3rqWc53kiR3ImKgA7umYbec8Qgpt3J17M3Fxvj\nSdpL7BwdX/3xO7TLNPqQZzKlDO/TKVgACn8FwoLqJGNJf+AReZs6S4AcMzghzt2E\ngiuQWhUlai9jVhwAeIHSLOI6O5/cdUFxIfRcjuVhTipefyl+oxLGrJX3pR9Uz3km\nVOrvpolUhZkusUntVQcE9dJ9ry4fqdg5fTdDJdFPSFm7+LtRn2lQunEgpwO50wg=\n=y1hF\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ab97bb6c3fbd9e08163152541da324b002c3e72\nparent 203305d09566e2924f893ed94845253da199eeab\nparent db0d70e58f2a5d42e52f2540af02d14591602717\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592620965 -0700\ncommitter GitHub <noreply@github.com> 1592620965 -0700\n\nRollup merge of #71899 - cuviper:try_find_map, r=dtolnay\n\nRefactor `try_find` a little\n\n~~This works like `find_map`, but mapping to a `Try` type. It stops when `Ok` is `Some(value)`, with an additional short-circuit on `Try::Error`. This is similar to the unstable `try_find`, but has the advantage of being able to directly return the user's `R: Try` type directly, rather than converting to `Result`.~~\n(removed -- `try_find_map` was declined in review)\n\nThis PR also refactors `try_find` a little to match style. The `E` type parameter was unnecessary, so it's now removed. The folding closure now has reduced parametricity on just `T = Self::Item`, rather\nthan the whole `Self` iterator type. There's otherwise no functional change in this.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9cd82454e099b368275292f214daa11541879e", "html_url": "https://github.com/rust-lang/rust/commit/5c9cd82454e099b368275292f214daa11541879e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c9cd82454e099b368275292f214daa11541879e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203305d09566e2924f893ed94845253da199eeab", "url": "https://api.github.com/repos/rust-lang/rust/commits/203305d09566e2924f893ed94845253da199eeab", "html_url": "https://github.com/rust-lang/rust/commit/203305d09566e2924f893ed94845253da199eeab"}, {"sha": "db0d70e58f2a5d42e52f2540af02d14591602717", "url": "https://api.github.com/repos/rust-lang/rust/commits/db0d70e58f2a5d42e52f2540af02d14591602717", "html_url": "https://github.com/rust-lang/rust/commit/db0d70e58f2a5d42e52f2540af02d14591602717"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "530cf881f29da54dc8bede98ea50bcfdc3b696a5", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5c9cd82454e099b368275292f214daa11541879e/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c9cd82454e099b368275292f214daa11541879e/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=5c9cd82454e099b368275292f214daa11541879e", "patch": "@@ -2265,7 +2265,7 @@ pub trait Iterator {\n     }\n \n     /// Applies function to the elements of iterator and returns\n-    /// the first non-none result or the first error.\n+    /// the first true result or the first error.\n     ///\n     /// # Examples\n     ///\n@@ -2286,19 +2286,26 @@ pub trait Iterator {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"try_find\", reason = \"new API\", issue = \"63178\")]\n-    fn try_find<F, E, R>(&mut self, mut f: F) -> Result<Option<Self::Item>, E>\n+    fn try_find<F, R>(&mut self, f: F) -> Result<Option<Self::Item>, R::Error>\n     where\n         Self: Sized,\n         F: FnMut(&Self::Item) -> R,\n-        R: Try<Ok = bool, Error = E>,\n-    {\n-        self.try_fold((), move |(), x| match f(&x).into_result() {\n-            Ok(false) => LoopState::Continue(()),\n-            Ok(true) => LoopState::Break(Ok(x)),\n-            Err(x) => LoopState::Break(Err(x)),\n-        })\n-        .break_value()\n-        .transpose()\n+        R: Try<Ok = bool>,\n+    {\n+        #[inline]\n+        fn check<F, T, R>(mut f: F) -> impl FnMut((), T) -> LoopState<(), Result<T, R::Error>>\n+        where\n+            F: FnMut(&T) -> R,\n+            R: Try<Ok = bool>,\n+        {\n+            move |(), x| match f(&x).into_result() {\n+                Ok(false) => LoopState::Continue(()),\n+                Ok(true) => LoopState::Break(Ok(x)),\n+                Err(x) => LoopState::Break(Err(x)),\n+            }\n+        }\n+\n+        self.try_fold((), check(f)).break_value().transpose()\n     }\n \n     /// Searches for an element in an iterator, returning its index."}]}