{"sha": "95eff43cc1af8dd1e0f85354b00d259a51256998", "node_id": "C_kwDOAAsO6NoAKDk1ZWZmNDNjYzFhZjhkZDFlMGY4NTM1NGIwMGQyNTlhNTEyNTY5OTg", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-10-12T12:36:50Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-10-12T15:05:58Z"}, "message": "impl PartialOrd codegen for C-style enums", "tree": {"sha": "0dd4290399f7d1543a69732c26858d6421f17707", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dd4290399f7d1543a69732c26858d6421f17707"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95eff43cc1af8dd1e0f85354b00d259a51256998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95eff43cc1af8dd1e0f85354b00d259a51256998", "html_url": "https://github.com/rust-lang/rust/commit/95eff43cc1af8dd1e0f85354b00d259a51256998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95eff43cc1af8dd1e0f85354b00d259a51256998/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0263fb07a78e83a76edbf578447d20994c38f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0263fb07a78e83a76edbf578447d20994c38f8d", "html_url": "https://github.com/rust-lang/rust/commit/c0263fb07a78e83a76edbf578447d20994c38f8d"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "03211f728a868d129817cad45f9f59e00910a45a", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/95eff43cc1af8dd1e0f85354b00d259a51256998/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95eff43cc1af8dd1e0f85354b00d259a51256998/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=95eff43cc1af8dd1e0f85354b00d259a51256998", "patch": "@@ -712,6 +712,35 @@ impl PartialOrd for Foo {\n         )\n     }\n \n+    #[test]\n+    fn add_custom_impl_partial_ord_enum() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: ord\n+#[derive(Partial$0Ord)]\n+enum Foo {\n+    Bin,\n+    Bar,\n+    Baz,\n+}\n+\"#,\n+            r#\"\n+enum Foo {\n+    Bin,\n+    Bar,\n+    Baz,\n+}\n+\n+impl PartialOrd for Foo {\n+    $0fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {\n+        core::mem::discriminant(self).partial_cmp(core::mem::discriminant(other))\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n     #[test]\n     fn add_custom_impl_partial_ord_tuple_struct() {\n         check_assist("}, {"sha": "9bafae46c5c5345ec0089d1be66705312f3f1e7d", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/95eff43cc1af8dd1e0f85354b00d259a51256998/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95eff43cc1af8dd1e0f85354b00d259a51256998/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=95eff43cc1af8dd1e0f85354b00d259a51256998", "patch": "@@ -635,7 +635,7 @@ fn gen_partial_ord(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n             let lhs = make::expr_call(make_discriminant()?, make::arg_list(Some(lhs_name.clone())));\n             let rhs_name = make::expr_path(make::ext::ident_path(\"other\"));\n             let rhs = make::expr_call(make_discriminant()?, make::arg_list(Some(rhs_name.clone())));\n-            let eq_check = make::expr_op(ast::BinOp::EqualityTest, lhs, rhs);\n+            let ord_check = gen_partial_cmp_call(lhs, rhs);\n \n             let mut case_count = 0;\n             let mut arms = vec![];\n@@ -705,11 +705,11 @@ fn gen_partial_ord(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n             }\n \n             let expr = match arms.len() {\n-                0 => eq_check,\n+                0 => ord_check,\n                 _ => {\n                     if case_count > arms.len() {\n                         let lhs = make::wildcard_pat().into();\n-                        arms.push(make::match_arm(Some(lhs), None, eq_check));\n+                        arms.push(make::match_arm(Some(lhs), None, ord_check));\n                     }\n \n                     let match_target = make::expr_tuple(vec![lhs_name, rhs_name]);"}]}