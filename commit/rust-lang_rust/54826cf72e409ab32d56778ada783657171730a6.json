{"sha": "54826cf72e409ab32d56778ada783657171730a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ODI2Y2Y3MmU0MDlhYjMyZDU2Nzc4YWRhNzgzNjU3MTcxNzMwYTY=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-06-08T03:55:11Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-06-08T04:02:25Z"}, "message": "Address review comments.", "tree": {"sha": "dfa1b73390cb6b343c85359e37e28f647d8e2c6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfa1b73390cb6b343c85359e37e28f647d8e2c6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54826cf72e409ab32d56778ada783657171730a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54826cf72e409ab32d56778ada783657171730a6", "html_url": "https://github.com/rust-lang/rust/commit/54826cf72e409ab32d56778ada783657171730a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54826cf72e409ab32d56778ada783657171730a6/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81821acd59a051b5fb0b6e6dc9eeac894c92d758", "url": "https://api.github.com/repos/rust-lang/rust/commits/81821acd59a051b5fb0b6e6dc9eeac894c92d758", "html_url": "https://github.com/rust-lang/rust/commit/81821acd59a051b5fb0b6e6dc9eeac894c92d758"}], "stats": {"total": 234, "additions": 92, "deletions": 142}, "files": [{"sha": "db840c79a290be5210bfb8f5f634cfc74fe1e1e2", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/54826cf72e409ab32d56778ada783657171730a6/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54826cf72e409ab32d56778ada783657171730a6/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=54826cf72e409ab32d56778ada783657171730a6", "patch": "@@ -1,10 +1,10 @@\n use rustc::lint::*;\n \n+use crate::utils::{in_macro, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n use rustc::hir::intravisit::*;\n use rustc::hir::*;\n use syntax::ast::NodeId;\n use syntax::codemap::Span;\n-use crate::utils::{in_macro, match_type, paths, usage::is_potentially_mutated};\n \n /// **What it does:** Checks for calls of unwrap[_err]() that cannot fail.\n ///\n@@ -28,7 +28,7 @@ use crate::utils::{in_macro, match_type, paths, usage::is_potentially_mutated};\n /// ```\n declare_clippy_lint! {\n     pub UNNECESSARY_UNWRAP,\n-    complexity,\n+    nursery,\n     \"checks for calls of unwrap[_err]() that cannot fail\"\n }\n \n@@ -126,14 +126,14 @@ impl<'a, 'tcx: 'a> Visitor<'tcx> for UnwrappableVariablesVisitor<'a, 'tcx> {\n                 if let Some(unwrappable) = self.unwrappables.iter()\n                     .find(|u| u.ident.def == path.def && call_to_unwrap == u.safe_to_unwrap);\n                 then {\n-                    self.cx.span_lint_note(\n+                    span_lint_and_then(\n+                        self.cx,\n                         UNNECESSARY_UNWRAP,\n                         expr.span,\n                         &format!(\"You checked before that `{}()` cannot fail. \\\n                         Instead of checking and unwrapping, it's better to use `if let` or `match`.\",\n                         method_name.name),\n-                        unwrappable.check.span,\n-                        \"the check is happening here\",\n+                        |db| { db.span_label(unwrappable.check.span, \"the check is happening here\"); },\n                     );\n                 }\n             }"}, {"sha": "fec52940614dcda921f23a1ae8520e17c0868837", "filename": "tests/ui/checked_unwrap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54826cf72e409ab32d56778ada783657171730a6/tests%2Fui%2Fchecked_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54826cf72e409ab32d56778ada783657171730a6/tests%2Fui%2Fchecked_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.rs?ref=54826cf72e409ab32d56778ada783657171730a6", "patch": "@@ -1,3 +1,5 @@\n+#![deny(unnecessary_unwrap)]\n+\n fn main() {\n     let x = Some(());\n     if x.is_some() {"}, {"sha": "bfa5ec08f2e9e917d7dcdbbabb9bc9b31dd4ff4b", "filename": "tests/ui/checked_unwrap.stderr", "status": "modified", "additions": 85, "deletions": 137, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/54826cf72e409ab32d56778ada783657171730a6/tests%2Fui%2Fchecked_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54826cf72e409ab32d56778ada783657171730a6/tests%2Fui%2Fchecked_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.stderr?ref=54826cf72e409ab32d56778ada783657171730a6", "patch": "@@ -1,207 +1,155 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n- --> $DIR/checked_unwrap.rs:4:9\n+ --> $DIR/checked_unwrap.rs:6:9\n   |\n-4 |         x.unwrap();\n+5 |     if x.is_some() {\n+  |        ----------- the check is happening here\n+6 |         x.unwrap();\n   |         ^^^^^^^^^^\n   |\n-  = note: `-D unnecessary-unwrap` implied by `-D warnings`\n-note: the check is happening here\n- --> $DIR/checked_unwrap.rs:3:8\n+note: lint level defined here\n+ --> $DIR/checked_unwrap.rs:1:9\n   |\n-3 |     if x.is_some() {\n-  |        ^^^^^^^^^^^\n+1 | #![deny(unnecessary_unwrap)]\n+  |         ^^^^^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n- --> $DIR/checked_unwrap.rs:9:9\n-  |\n-9 |         x.unwrap();\n-  |         ^^^^^^^^^^\n-  |\n-note: the check is happening here\n- --> $DIR/checked_unwrap.rs:6:8\n-  |\n-6 |     if x.is_none() {\n-  |        ^^^^^^^^^^^\n+  --> $DIR/checked_unwrap.rs:11:9\n+   |\n+8  |     if x.is_none() {\n+   |        ----------- the check is happening here\n+...\n+11 |         x.unwrap();\n+   |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:13:9\n+  --> $DIR/checked_unwrap.rs:15:9\n    |\n-13 |         x.unwrap();\n+14 |     if x.is_ok() {\n+   |        --------- the check is happening here\n+15 |         x.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:12:8\n-   |\n-12 |     if x.is_ok() {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:15:9\n+  --> $DIR/checked_unwrap.rs:17:9\n    |\n-15 |         x.unwrap_err();\n+14 |     if x.is_ok() {\n+   |        --------- the check is happening here\n+...\n+17 |         x.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:12:8\n-   |\n-12 |     if x.is_ok() {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:18:9\n+  --> $DIR/checked_unwrap.rs:20:9\n    |\n-18 |         x.unwrap_err();\n+19 |     if x.is_err() {\n+   |        ---------- the check is happening here\n+20 |         x.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:17:8\n-   |\n-17 |     if x.is_err() {\n-   |        ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:20:9\n+  --> $DIR/checked_unwrap.rs:22:9\n    |\n-20 |         x.unwrap();\n+19 |     if x.is_err() {\n+   |        ---------- the check is happening here\n+...\n+22 |         x.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:17:8\n-   |\n-17 |     if x.is_err() {\n-   |        ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:35:9\n+  --> $DIR/checked_unwrap.rs:37:9\n    |\n-35 |         x.unwrap();\n+36 |     if x.is_ok() && y.is_err() {\n+   |        --------- the check is happening here\n+37 |         x.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:34:8\n-   |\n-34 |     if x.is_ok() && y.is_err() {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:36:9\n+  --> $DIR/checked_unwrap.rs:38:9\n    |\n-36 |         y.unwrap_err();\n+36 |     if x.is_ok() && y.is_err() {\n+   |                     ---------- the check is happening here\n+37 |         x.unwrap();\n+38 |         y.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:34:21\n-   |\n-34 |     if x.is_ok() && y.is_err() {\n-   |                     ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:48:9\n+  --> $DIR/checked_unwrap.rs:50:9\n    |\n-48 |         x.unwrap_err();\n+45 |     if x.is_ok() || y.is_ok() {\n+   |        --------- the check is happening here\n+...\n+50 |         x.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:43:8\n-   |\n-43 |     if x.is_ok() || y.is_ok() {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:49:9\n+  --> $DIR/checked_unwrap.rs:51:9\n    |\n-49 |         y.unwrap_err();\n+45 |     if x.is_ok() || y.is_ok() {\n+   |                     --------- the check is happening here\n+...\n+51 |         y.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:43:21\n-   |\n-43 |     if x.is_ok() || y.is_ok() {\n-   |                     ^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:53:9\n+  --> $DIR/checked_unwrap.rs:55:9\n    |\n-53 |         x.unwrap();\n+54 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+   |        --------- the check is happening here\n+55 |         x.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:52:8\n-   |\n-52 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:54:9\n+  --> $DIR/checked_unwrap.rs:56:9\n    |\n-54 |         y.unwrap_err();\n+54 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+   |                       --------- the check is happening here\n+55 |         x.unwrap();\n+56 |         y.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:52:23\n-   |\n-52 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n-   |                       ^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:55:9\n+  --> $DIR/checked_unwrap.rs:57:9\n    |\n-55 |         z.unwrap();\n+54 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+   |                                    ---------- the check is happening here\n+...\n+57 |         z.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:52:36\n-   |\n-52 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n-   |                                    ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:60:9\n+  --> $DIR/checked_unwrap.rs:62:9\n    |\n-60 |         x.unwrap_err();\n+59 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+   |        --------- the check is happening here\n+...\n+62 |         x.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:57:8\n-   |\n-57 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n-   |        ^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:61:9\n+  --> $DIR/checked_unwrap.rs:63:9\n    |\n-61 |         y.unwrap();\n+59 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+   |                       --------- the check is happening here\n+...\n+63 |         y.unwrap();\n    |         ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:57:23\n-   |\n-57 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n-   |                       ^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:62:9\n+  --> $DIR/checked_unwrap.rs:64:9\n    |\n-62 |         z.unwrap_err();\n+59 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+   |                                    ---------- the check is happening here\n+...\n+64 |         z.unwrap_err();\n    |         ^^^^^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:57:36\n-   |\n-57 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n-   |                                    ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:70:13\n+  --> $DIR/checked_unwrap.rs:72:13\n    |\n-70 |             x.unwrap();\n+71 |         if x.is_some() {\n+   |            ----------- the check is happening here\n+72 |             x.unwrap();\n    |             ^^^^^^^^^^\n-   |\n-note: the check is happening here\n-  --> $DIR/checked_unwrap.rs:69:12\n-   |\n-69 |         if x.is_some() {\n-   |            ^^^^^^^^^^^\n \n error: aborting due to 17 previous errors\n "}]}