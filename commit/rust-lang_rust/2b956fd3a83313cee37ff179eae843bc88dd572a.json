{"sha": "2b956fd3a83313cee37ff179eae843bc88dd572a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTU2ZmQzYTgzMzEzY2VlMzdmZjE3OWVhZTg0M2JjODhkZDU3MmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-09T13:00:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-09T16:52:06Z"}, "message": "Add on-enter handler\n\nNow, typing doc comments is much more pleasant", "tree": {"sha": "a1010728cfc8018e5f62152f4c45b9523f8d5e25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1010728cfc8018e5f62152f4c45b9523f8d5e25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b956fd3a83313cee37ff179eae843bc88dd572a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b956fd3a83313cee37ff179eae843bc88dd572a", "html_url": "https://github.com/rust-lang/rust/commit/2b956fd3a83313cee37ff179eae843bc88dd572a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b956fd3a83313cee37ff179eae843bc88dd572a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82447ecacef9129a44d3c17b3db7a0e60a7ec92b", "url": "https://api.github.com/repos/rust-lang/rust/commits/82447ecacef9129a44d3c17b3db7a0e60a7ec92b", "html_url": "https://github.com/rust-lang/rust/commit/82447ecacef9129a44d3c17b3db7a0e60a7ec92b"}], "stats": {"total": 1031, "additions": 630, "deletions": 401}, "files": [{"sha": "f6ceb7eb255d6fa48ff885ca1e64acb2b37d9942", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -184,6 +184,12 @@ impl Analysis {\n         let file = self.imp.file_syntax(file_id);\n         SourceChange::from_local_edit(file_id, \"join lines\", ra_editor::join_lines(&file, range))\n     }\n+    pub fn on_enter(&self, file_id: FileId, offset: TextUnit) -> Option<SourceChange> {\n+        let file = self.imp.file_syntax(file_id);\n+        let edit = ra_editor::on_enter(&file, offset)?;\n+        let res = SourceChange::from_local_edit(file_id, \"on enter\", edit);\n+        Some(res)\n+    }\n     pub fn on_eq_typed(&self, file_id: FileId, offset: TextUnit) -> Option<SourceChange> {\n         let file = self.imp.file_syntax(file_id);\n         Some(SourceChange::from_local_edit(file_id, \"add semicolon\", ra_editor::on_eq_typed(&file, offset)?))"}, {"sha": "fe00453780b4335008fe93ff9e4051efefddfc80", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -35,7 +35,7 @@ pub use self::{\n         flip_comma, add_derive, add_impl,\n         introduce_variable,\n     },\n-    typing::{join_lines, on_eq_typed},\n+    typing::{join_lines, on_eq_typed, on_enter},\n     completion::{scope_completion, CompletionItem},\n     folding_ranges::{Fold, FoldKind, folding_ranges}\n };"}, {"sha": "3384389d14342bd6cea0900f50cc5b289f9391b4", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 99, "deletions": 2, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::{\n     TextUnit, TextRange, SyntaxNodeRef, File, AstNode, SyntaxKind,\n     ast,\n     algo::{\n-        find_covering_node,\n+        find_covering_node, find_leaf_at_offset, LeafAtOffset,\n     },\n     text_utils::{intersect, contains_offset_nonstrict},\n     SyntaxKind::*,\n@@ -56,6 +56,58 @@ pub fn join_lines(file: &File, range: TextRange) -> LocalEdit {\n     }\n }\n \n+pub fn on_enter(file: &File, offset: TextUnit) -> Option<LocalEdit> {\n+    let comment = find_leaf_at_offset(file.syntax(), offset).left_biased().filter(|it| it.kind() == COMMENT)?;\n+    let prefix = comment_preffix(comment)?;\n+    if offset < comment.range().start() + TextUnit::of_str(prefix) {\n+        return None;\n+    }\n+\n+    let indent = node_indent(file, comment)?;\n+    let inserted = format!(\"\\n{}{}\", indent, prefix);\n+    let cursor_position = offset + TextUnit::of_str(&inserted);\n+    let mut edit = EditBuilder::new();\n+    edit.insert(offset, inserted);\n+    Some(LocalEdit {\n+        edit: edit.finish(),\n+        cursor_position: Some(cursor_position),\n+    })\n+}\n+\n+fn comment_preffix(comment: SyntaxNodeRef) -> Option<&'static str> {\n+    let text = comment.leaf_text().unwrap();\n+    let res = if text.starts_with(\"///\") {\n+        \"/// \"\n+    } else if text.starts_with(\"//!\") {\n+        \"//! \"\n+    } else if text.starts_with(\"//\") {\n+        \"// \"\n+    } else {\n+        return None;\n+    };\n+    Some(res)\n+}\n+\n+fn node_indent<'a>(file: &'a File, node: SyntaxNodeRef) -> Option<&'a str> {\n+    let ws = match find_leaf_at_offset(file.syntax(), node.range().start()) {\n+        LeafAtOffset::Between(l, r) => {\n+            assert!(r == node);\n+            l\n+        }\n+        LeafAtOffset::Single(n) => {\n+            assert!(n == node);\n+            return Some(\"\")\n+        }\n+        LeafAtOffset::None => unreachable!(),\n+    };\n+    if ws.kind() != WHITESPACE {\n+        return None;\n+    }\n+    let text = ws.leaf_text().unwrap();\n+    let pos = text.as_str().rfind('\\n').map(|it| it + 1).unwrap_or(0);\n+    Some(&text[pos..])\n+}\n+\n pub fn on_eq_typed(file: &File, offset: TextUnit) -> Option<LocalEdit> {\n     let let_stmt: ast::LetStmt = find_node_at_offset(file.syntax(), offset)?;\n     if let_stmt.has_semi() {\n@@ -187,7 +239,7 @@ fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{check_action, extract_range, extract_offset};\n+    use test_utils::{check_action, extract_range, extract_offset, add_cursor};\n \n     fn check_join_lines(before: &str, after: &str) {\n         check_action(before, after, |file, offset| {\n@@ -344,4 +396,49 @@ fn foo() {\n         // }\n         // \");\n     }\n+\n+    #[test]\n+    fn test_on_enter() {\n+        fn apply_on_enter(before: &str) -> Option<String> {\n+            let (offset, before) = extract_offset(before);\n+            let file = File::parse(&before);\n+            let result = on_enter(&file, offset)?;\n+            let actual = result.edit.apply(&before);\n+            let actual = add_cursor(&actual, result.cursor_position.unwrap());\n+            Some(actual)\n+        }\n+\n+        fn do_check(before: &str, after: &str) {\n+            let actual = apply_on_enter(before).unwrap();\n+            assert_eq_text!(after, &actual);\n+        }\n+\n+        fn do_check_noop(text: &str) {\n+            assert!(apply_on_enter(text).is_none())\n+        }\n+\n+        do_check(r\"\n+/// Some docs<|>\n+fn foo() {\n+}\n+\", r\"\n+/// Some docs\n+/// <|>\n+fn foo() {\n+}\n+\");\n+        do_check(r\"\n+impl S {\n+    /// Some<|> docs.\n+    fn foo() {}\n+}\n+\", r\"\n+impl S {\n+    /// Some\n+    /// <|> docs.\n+    fn foo() {}\n+}\n+\");\n+        do_check_noop(r\"<|>//! docz\");\n+    }\n }"}, {"sha": "08a6565693f9b7af2a7206dd82da2c017a1d4fb2", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -190,9 +190,13 @@ impl TryConvWith for SourceChange {\n             None => None,\n             Some(pos) => {\n                 let line_index = world.analysis().file_line_index(pos.file_id);\n+                let edits = self.source_file_edits.iter().find(|it| it.file_id == pos.file_id)\n+                    .map(|it| it.edits.as_slice()).unwrap_or(&[]);\n+                let line_col = translate_offset_with_edit(&*line_index, pos.offset, edits);\n+                let position = Position::new(line_col.line as u64, u32::from(line_col.col) as u64);\n                 Some(TextDocumentPositionParams {\n                     text_document: TextDocumentIdentifier::new(pos.file_id.try_conv_with(world)?),\n-                    position: pos.offset.conv_with(&line_index),\n+                    position,\n                 })\n             }\n         };\n@@ -207,6 +211,41 @@ impl TryConvWith for SourceChange {\n     }\n }\n \n+// HACK: we should translate offset to line/column using linde_index *with edits applied*.\n+// A naive version of this function would be to apply `edits` to the original text,\n+// construct a new line index and use that, but it would be slow.\n+//\n+// Writing fast & correct version is issue #105, let's use a quick hack in the meantime\n+fn translate_offset_with_edit(\n+    pre_edit_index: &LineIndex,\n+    offset: TextUnit,\n+    edits: &[AtomEdit],\n+) -> LineCol {\n+    let fallback = pre_edit_index.line_col(offset);\n+    let edit = match edits.first() {\n+        None => return fallback,\n+        Some(edit) => edit\n+    };\n+    let end_offset = edit.delete.start() + TextUnit::of_str(&edit.insert);\n+    if !(edit.delete.start() <= offset && offset <= end_offset) {\n+        return fallback\n+    }\n+    let rel_offset = offset - edit.delete.start();\n+    let in_edit_line_col = LineIndex::new(&edit.insert).line_col(rel_offset);\n+    let edit_line_col = pre_edit_index.line_col(edit.delete.start());\n+    if in_edit_line_col.line == 0 {\n+        LineCol {\n+            line: edit_line_col.line,\n+            col: edit_line_col.col + in_edit_line_col.col,\n+        }\n+    } else {\n+        LineCol {\n+            line: edit_line_col.line + in_edit_line_col.line,\n+            col: in_edit_line_col.col,\n+        }\n+    }\n+}\n+\n impl TryConvWith for SourceFileEdit {\n     type Ctx = ServerWorld;\n     type Output = TextDocumentEdit;"}, {"sha": "725036cc78e3ed355c9173544e42dffd6b3ae7f8", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -77,6 +77,20 @@ pub fn handle_join_lines(\n         .try_conv_with(&world)\n }\n \n+pub fn handle_on_enter(\n+    world: ServerWorld,\n+    params: req::TextDocumentPositionParams,\n+    _token: JobToken,\n+) -> Result<Option<req::SourceChange>> {\n+    let file_id = params.text_document.try_conv_with(&world)?;\n+    let line_index = world.analysis().file_line_index(file_id);\n+    let offset = params.position.conv_with(&line_index);\n+    match world.analysis().on_enter(file_id, offset) {\n+        None => Ok(None),\n+        Some(edit) => Ok(Some(edit.try_conv_with(&world)?))\n+    }\n+}\n+\n pub fn handle_on_type_formatting(\n     world: ServerWorld,\n     params: req::DocumentOnTypeFormattingParams,"}, {"sha": "53c6f1dffa6ab03d218b0ac588600f6a4a3008b6", "filename": "crates/ra_lsp_server/src/main_loop/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -244,6 +244,7 @@ fn on_request(\n         .on::<req::ExtendSelection>(handlers::handle_extend_selection)?\n         .on::<req::FindMatchingBrace>(handlers::handle_find_matching_brace)?\n         .on::<req::JoinLines>(handlers::handle_join_lines)?\n+        .on::<req::OnEnter>(handlers::handle_on_enter)?\n         .on::<req::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n         .on::<req::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n         .on::<req::WorkspaceSymbol>(handlers::handle_workspace_symbol)?"}, {"sha": "458c79ea9c1772e47fefa30d7331354ae9b18bc6", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -119,6 +119,14 @@ pub struct JoinLinesParams {\n     pub range: Range,\n }\n \n+pub enum OnEnter {}\n+\n+impl Request for OnEnter {\n+    type Params = TextDocumentPositionParams;\n+    type Result = Option<SourceChange>;\n+    const METHOD: &'static str = \"m/onEnter\";\n+}\n+\n pub enum Runnables {}\n \n impl Request for Runnables {"}, {"sha": "a39ec62b0aa170e086d250674dd6a3805b9f41ef", "filename": "editors/README.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2FREADME.md?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -16,7 +16,7 @@ It's better to remove existing Rust plugins to avoid interference.\n \n * syntax highlighting (LSP does not have API for it, so impl is hacky\n   and sometimes fall-backs to the horrible built-in highlighting)\n-  \n+\n * **Go to symbol in workspace** (`ctrl+t`)\n   - `#Foo` searches for `Foo` type in the current workspace\n   - `#foo#` searches for `foo` function in the current workspace\n@@ -44,9 +44,24 @@ It's better to remove existing Rust plugins to avoid interference.\n     outside of the test function, this re-runs the last test. Do bind\n     this to a shortcut!\n \n+* Typing assists\n+  - typing `let =` tries to smartly add `;` if `=` is followed by an existing expression.\n+  - Enter inside comments continues comment (`<|>` signifies cursor position):\n+\n+```\n+/// Docs<|>\n+fn foo() {}\n+```\n+\n+```\n+/// Docs\n+/// <|>\n+fn foo() {}\n+```\n+\n * code actions (use `ctrl+.` to activate).\n \n-`<|>` signifies cursor position\n+\n \n - Flip `,`\n "}, {"sha": "33c5203b259862e189a4de3fe7d90be80e95adc4", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 393, "deletions": 393, "changes": 786, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -22,10 +22,10 @@\n             \"integrity\": \"sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"co\": \"^4.6.0\",\n-                \"fast-deep-equal\": \"^1.0.0\",\n-                \"fast-json-stable-stringify\": \"^2.0.0\",\n-                \"json-schema-traverse\": \"^0.3.0\"\n+                \"co\": \"4.6.0\",\n+                \"fast-deep-equal\": \"1.1.0\",\n+                \"fast-json-stable-stringify\": \"2.0.0\",\n+                \"json-schema-traverse\": \"0.3.1\"\n             }\n         },\n         \"ansi-cyan\": {\n@@ -70,7 +70,7 @@\n             \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"sprintf-js\": \"~1.0.2\"\n+                \"sprintf-js\": \"1.0.3\"\n             }\n         },\n         \"arr-diff\": {\n@@ -79,8 +79,8 @@\n             \"integrity\": \"sha1-aHwydYFjWI/vfeezb6vklesaOZo=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"arr-flatten\": \"^1.0.1\",\n-                \"array-slice\": \"^0.2.3\"\n+                \"arr-flatten\": \"1.1.0\",\n+                \"array-slice\": \"0.2.3\"\n             }\n         },\n         \"arr-flatten\": {\n@@ -113,7 +113,7 @@\n             \"integrity\": \"sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"array-uniq\": \"^1.0.1\"\n+                \"array-uniq\": \"1.0.3\"\n             }\n         },\n         \"array-uniq\": {\n@@ -140,7 +140,7 @@\n             \"integrity\": \"sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"safer-buffer\": \"~2.1.0\"\n+                \"safer-buffer\": \"2.1.2\"\n             }\n         },\n         \"assert-plus\": {\n@@ -173,9 +173,9 @@\n             \"integrity\": \"sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"chalk\": \"^1.1.3\",\n-                \"esutils\": \"^2.0.2\",\n-                \"js-tokens\": \"^3.0.2\"\n+                \"chalk\": \"1.1.3\",\n+                \"esutils\": \"2.0.2\",\n+                \"js-tokens\": \"3.0.2\"\n             },\n             \"dependencies\": {\n                 \"chalk\": {\n@@ -184,11 +184,11 @@\n                     \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"ansi-styles\": \"^2.2.1\",\n-                        \"escape-string-regexp\": \"^1.0.2\",\n-                        \"has-ansi\": \"^2.0.0\",\n-                        \"strip-ansi\": \"^3.0.0\",\n-                        \"supports-color\": \"^2.0.0\"\n+                        \"ansi-styles\": \"2.2.1\",\n+                        \"escape-string-regexp\": \"1.0.5\",\n+                        \"has-ansi\": \"2.0.0\",\n+                        \"strip-ansi\": \"3.0.1\",\n+                        \"supports-color\": \"2.0.0\"\n                     }\n                 },\n                 \"supports-color\": {\n@@ -212,7 +212,7 @@\n             \"dev\": true,\n             \"optional\": true,\n             \"requires\": {\n-                \"tweetnacl\": \"^0.14.3\"\n+                \"tweetnacl\": \"0.14.5\"\n             }\n         },\n         \"block-stream\": {\n@@ -221,7 +221,7 @@\n             \"integrity\": \"sha1-E+v+d4oDIFz+A3UUgeu0szAMEmo=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"inherits\": \"~2.0.0\"\n+                \"inherits\": \"2.0.3\"\n             }\n         },\n         \"boolbase\": {\n@@ -236,7 +236,7 @@\n             \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"balanced-match\": \"^1.0.0\",\n+                \"balanced-match\": \"1.0.0\",\n                 \"concat-map\": \"0.0.1\"\n             }\n         },\n@@ -246,9 +246,9 @@\n             \"integrity\": \"sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"expand-range\": \"^1.8.1\",\n-                \"preserve\": \"^0.2.0\",\n-                \"repeat-element\": \"^1.1.2\"\n+                \"expand-range\": \"1.8.2\",\n+                \"preserve\": \"0.2.0\",\n+                \"repeat-element\": \"1.1.3\"\n             }\n         },\n         \"browser-stdout\": {\n@@ -287,9 +287,9 @@\n             \"integrity\": \"sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ansi-styles\": \"^3.2.1\",\n-                \"escape-string-regexp\": \"^1.0.5\",\n-                \"supports-color\": \"^5.3.0\"\n+                \"ansi-styles\": \"3.2.1\",\n+                \"escape-string-regexp\": \"1.0.5\",\n+                \"supports-color\": \"5.5.0\"\n             },\n             \"dependencies\": {\n                 \"ansi-styles\": {\n@@ -298,7 +298,7 @@\n                     \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"color-convert\": \"^1.9.0\"\n+                        \"color-convert\": \"1.9.3\"\n                     }\n                 },\n                 \"has-flag\": {\n@@ -313,7 +313,7 @@\n                     \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"has-flag\": \"^3.0.0\"\n+                        \"has-flag\": \"3.0.0\"\n                     }\n                 }\n             }\n@@ -324,12 +324,12 @@\n             \"integrity\": \"sha1-S59TqBsn5NXawxwP/Qz6A8xoMNs=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"css-select\": \"~1.2.0\",\n-                \"dom-serializer\": \"~0.1.0\",\n-                \"entities\": \"~1.1.1\",\n-                \"htmlparser2\": \"^3.9.1\",\n-                \"lodash\": \"^4.15.0\",\n-                \"parse5\": \"^3.0.1\"\n+                \"css-select\": \"1.2.0\",\n+                \"dom-serializer\": \"0.1.0\",\n+                \"entities\": \"1.1.1\",\n+                \"htmlparser2\": \"3.9.2\",\n+                \"lodash\": \"4.17.11\",\n+                \"parse5\": \"3.0.3\"\n             }\n         },\n         \"clone\": {\n@@ -356,9 +356,9 @@\n             \"integrity\": \"sha512-Bq6+4t+lbM8vhTs/Bef5c5AdEMtapp/iFb6+s4/Hh9MVTt8OLKH7ZOOZSCT+Ys7hsHvqv0GuMPJ1lnQJVHvxpg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"inherits\": \"^2.0.1\",\n-                \"process-nextick-args\": \"^2.0.0\",\n-                \"readable-stream\": \"^2.3.5\"\n+                \"inherits\": \"2.0.3\",\n+                \"process-nextick-args\": \"2.0.0\",\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"co\": {\n@@ -388,7 +388,7 @@\n             \"integrity\": \"sha1-cj599ugBrFYTETp+RFqbactjKBg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"delayed-stream\": \"~1.0.0\"\n+                \"delayed-stream\": \"1.0.0\"\n             }\n         },\n         \"commander\": {\n@@ -409,7 +409,7 @@\n             \"integrity\": \"sha512-eFu7XigvxdZ1ETfbgPBohgyQ/Z++C0eEhTor0qRwBw9unw+L0/6V8wkSuGgzdThkiS5lSpdptOQPD8Ak40a+7A==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"safe-buffer\": \"~5.1.1\"\n+                \"safe-buffer\": \"5.1.2\"\n             }\n         },\n         \"core-util-is\": {\n@@ -424,10 +424,10 @@\n             \"integrity\": \"sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"boolbase\": \"~1.0.0\",\n-                \"css-what\": \"2.1\",\n+                \"boolbase\": \"1.0.0\",\n+                \"css-what\": \"2.1.0\",\n                 \"domutils\": \"1.5.1\",\n-                \"nth-check\": \"~1.0.1\"\n+                \"nth-check\": \"1.0.1\"\n             }\n         },\n         \"css-what\": {\n@@ -442,7 +442,7 @@\n             \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"assert-plus\": \"^1.0.0\"\n+                \"assert-plus\": \"1.0.0\"\n             }\n         },\n         \"debug\": {\n@@ -460,7 +460,7 @@\n             \"integrity\": \"sha1-sJJ0O+hCfcYh6gBnzex+cN0Z83s=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-obj\": \"^1.0.0\"\n+                \"is-obj\": \"1.0.1\"\n             }\n         },\n         \"delayed-stream\": {\n@@ -487,8 +487,8 @@\n             \"integrity\": \"sha1-BzxpdUbOB4DOI75KKOKT5AvDDII=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"domelementtype\": \"~1.1.1\",\n-                \"entities\": \"~1.1.1\"\n+                \"domelementtype\": \"1.1.3\",\n+                \"entities\": \"1.1.1\"\n             },\n             \"dependencies\": {\n                 \"domelementtype\": {\n@@ -511,7 +511,7 @@\n             \"integrity\": \"sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"domelementtype\": \"1\"\n+                \"domelementtype\": \"1.3.0\"\n             }\n         },\n         \"domutils\": {\n@@ -520,8 +520,8 @@\n             \"integrity\": \"sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"dom-serializer\": \"0\",\n-                \"domelementtype\": \"1\"\n+                \"dom-serializer\": \"0.1.0\",\n+                \"domelementtype\": \"1.3.0\"\n             }\n         },\n         \"duplexer\": {\n@@ -536,10 +536,10 @@\n             \"integrity\": \"sha512-fO3Di4tBKJpYTFHAxTU00BcfWMY9w24r/x21a6rZRbsD/ToUgGxsMbiGRmB7uVAXeGKXD9MwiLZa5E97EVgIRQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"end-of-stream\": \"^1.0.0\",\n-                \"inherits\": \"^2.0.1\",\n-                \"readable-stream\": \"^2.0.0\",\n-                \"stream-shift\": \"^1.0.0\"\n+                \"end-of-stream\": \"1.4.1\",\n+                \"inherits\": \"2.0.3\",\n+                \"readable-stream\": \"2.3.6\",\n+                \"stream-shift\": \"1.0.0\"\n             }\n         },\n         \"ecc-jsbn\": {\n@@ -549,8 +549,8 @@\n             \"dev\": true,\n             \"optional\": true,\n             \"requires\": {\n-                \"jsbn\": \"~0.1.0\",\n-                \"safer-buffer\": \"^2.1.0\"\n+                \"jsbn\": \"0.1.1\",\n+                \"safer-buffer\": \"2.1.2\"\n             }\n         },\n         \"end-of-stream\": {\n@@ -559,7 +559,7 @@\n             \"integrity\": \"sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"once\": \"^1.4.0\"\n+                \"once\": \"1.4.0\"\n             }\n         },\n         \"entities\": {\n@@ -592,14 +592,14 @@\n             \"integrity\": \"sha512-dGXNg4F/FgVzlApjzItL+7naHutA3fDqbV/zAZqDDlXTjiMnQmZKu+prImWKszeBM5UQeGvAl3u1wBiKeDh61g==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"duplexer\": \"^0.1.1\",\n-                \"flatmap-stream\": \"^0.1.0\",\n-                \"from\": \"^0.1.7\",\n+                \"duplexer\": \"0.1.1\",\n+                \"flatmap-stream\": \"0.1.0\",\n+                \"from\": \"0.1.7\",\n                 \"map-stream\": \"0.0.7\",\n-                \"pause-stream\": \"^0.0.11\",\n-                \"split\": \"^1.0.1\",\n-                \"stream-combiner\": \"^0.2.2\",\n-                \"through\": \"^2.3.8\"\n+                \"pause-stream\": \"0.0.11\",\n+                \"split\": \"1.0.1\",\n+                \"stream-combiner\": \"0.2.2\",\n+                \"through\": \"2.3.8\"\n             }\n         },\n         \"expand-brackets\": {\n@@ -608,7 +608,7 @@\n             \"integrity\": \"sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-posix-bracket\": \"^0.1.0\"\n+                \"is-posix-bracket\": \"0.1.1\"\n             }\n         },\n         \"expand-range\": {\n@@ -617,7 +617,7 @@\n             \"integrity\": \"sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"fill-range\": \"^2.1.0\"\n+                \"fill-range\": \"2.2.4\"\n             }\n         },\n         \"extend\": {\n@@ -632,7 +632,7 @@\n             \"integrity\": \"sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"kind-of\": \"^1.1.0\"\n+                \"kind-of\": \"1.1.0\"\n             }\n         },\n         \"extglob\": {\n@@ -641,7 +641,7 @@\n             \"integrity\": \"sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-extglob\": \"^1.0.0\"\n+                \"is-extglob\": \"1.0.0\"\n             },\n             \"dependencies\": {\n                 \"is-extglob\": {\n@@ -676,7 +676,7 @@\n             \"integrity\": \"sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"pend\": \"~1.2.0\"\n+                \"pend\": \"1.2.0\"\n             }\n         },\n         \"filename-regex\": {\n@@ -691,11 +691,11 @@\n             \"integrity\": \"sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-number\": \"^2.1.0\",\n-                \"isobject\": \"^2.0.0\",\n-                \"randomatic\": \"^3.0.0\",\n-                \"repeat-element\": \"^1.1.2\",\n-                \"repeat-string\": \"^1.5.2\"\n+                \"is-number\": \"2.1.0\",\n+                \"isobject\": \"2.1.0\",\n+                \"randomatic\": \"3.1.0\",\n+                \"repeat-element\": \"1.1.3\",\n+                \"repeat-string\": \"1.6.1\"\n             }\n         },\n         \"first-chunk-stream\": {\n@@ -722,7 +722,7 @@\n             \"integrity\": \"sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"for-in\": \"^1.0.1\"\n+                \"for-in\": \"1.0.2\"\n             }\n         },\n         \"forever-agent\": {\n@@ -737,9 +737,9 @@\n             \"integrity\": \"sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"asynckit\": \"^0.4.0\",\n+                \"asynckit\": \"0.4.0\",\n                 \"combined-stream\": \"1.0.6\",\n-                \"mime-types\": \"^2.1.12\"\n+                \"mime-types\": \"2.1.20\"\n             }\n         },\n         \"from\": {\n@@ -760,10 +760,10 @@\n             \"integrity\": \"sha1-XB+x8RdHcRTwYyoOtLcbPLD9MXE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"graceful-fs\": \"^4.1.2\",\n-                \"inherits\": \"~2.0.0\",\n-                \"mkdirp\": \">=0.5 0\",\n-                \"rimraf\": \"2\"\n+                \"graceful-fs\": \"4.1.11\",\n+                \"inherits\": \"2.0.3\",\n+                \"mkdirp\": \"0.5.1\",\n+                \"rimraf\": \"2.6.2\"\n             }\n         },\n         \"getpass\": {\n@@ -772,7 +772,7 @@\n             \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"assert-plus\": \"^1.0.0\"\n+                \"assert-plus\": \"1.0.0\"\n             }\n         },\n         \"glob\": {\n@@ -781,12 +781,12 @@\n             \"integrity\": \"sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"fs.realpath\": \"^1.0.0\",\n-                \"inflight\": \"^1.0.4\",\n-                \"inherits\": \"2\",\n-                \"minimatch\": \"^3.0.4\",\n-                \"once\": \"^1.3.0\",\n-                \"path-is-absolute\": \"^1.0.0\"\n+                \"fs.realpath\": \"1.0.0\",\n+                \"inflight\": \"1.0.6\",\n+                \"inherits\": \"2.0.3\",\n+                \"minimatch\": \"3.0.4\",\n+                \"once\": \"1.4.0\",\n+                \"path-is-absolute\": \"1.0.1\"\n             }\n         },\n         \"glob-base\": {\n@@ -795,8 +795,8 @@\n             \"integrity\": \"sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"glob-parent\": \"^2.0.0\",\n-                \"is-glob\": \"^2.0.0\"\n+                \"glob-parent\": \"2.0.0\",\n+                \"is-glob\": \"2.0.1\"\n             },\n             \"dependencies\": {\n                 \"glob-parent\": {\n@@ -805,7 +805,7 @@\n                     \"integrity\": \"sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-glob\": \"^2.0.0\"\n+                        \"is-glob\": \"2.0.1\"\n                     }\n                 },\n                 \"is-extglob\": {\n@@ -820,7 +820,7 @@\n                     \"integrity\": \"sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-extglob\": \"^1.0.0\"\n+                        \"is-extglob\": \"1.0.0\"\n                     }\n                 }\n             }\n@@ -831,8 +831,8 @@\n             \"integrity\": \"sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-glob\": \"^3.1.0\",\n-                \"path-dirname\": \"^1.0.0\"\n+                \"is-glob\": \"3.1.0\",\n+                \"path-dirname\": \"1.0.2\"\n             }\n         },\n         \"glob-stream\": {\n@@ -841,14 +841,14 @@\n             \"integrity\": \"sha1-pVZlqajM3EGRWofHAeMtTgFvrSI=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"extend\": \"^3.0.0\",\n-                \"glob\": \"^5.0.3\",\n-                \"glob-parent\": \"^3.0.0\",\n-                \"micromatch\": \"^2.3.7\",\n-                \"ordered-read-streams\": \"^0.3.0\",\n-                \"through2\": \"^0.6.0\",\n-                \"to-absolute-glob\": \"^0.1.1\",\n-                \"unique-stream\": \"^2.0.2\"\n+                \"extend\": \"3.0.2\",\n+                \"glob\": \"5.0.15\",\n+                \"glob-parent\": \"3.1.0\",\n+                \"micromatch\": \"2.3.11\",\n+                \"ordered-read-streams\": \"0.3.0\",\n+                \"through2\": \"0.6.5\",\n+                \"to-absolute-glob\": \"0.1.1\",\n+                \"unique-stream\": \"2.2.1\"\n             },\n             \"dependencies\": {\n                 \"glob\": {\n@@ -857,11 +857,11 @@\n                     \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"inflight\": \"^1.0.4\",\n-                        \"inherits\": \"2\",\n-                        \"minimatch\": \"2 || 3\",\n-                        \"once\": \"^1.3.0\",\n-                        \"path-is-absolute\": \"^1.0.0\"\n+                        \"inflight\": \"1.0.6\",\n+                        \"inherits\": \"2.0.3\",\n+                        \"minimatch\": \"3.0.4\",\n+                        \"once\": \"1.4.0\",\n+                        \"path-is-absolute\": \"1.0.1\"\n                     }\n                 },\n                 \"isarray\": {\n@@ -876,10 +876,10 @@\n                     \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"core-util-is\": \"~1.0.0\",\n-                        \"inherits\": \"~2.0.1\",\n+                        \"core-util-is\": \"1.0.2\",\n+                        \"inherits\": \"2.0.3\",\n                         \"isarray\": \"0.0.1\",\n-                        \"string_decoder\": \"~0.10.x\"\n+                        \"string_decoder\": \"0.10.31\"\n                     }\n                 },\n                 \"string_decoder\": {\n@@ -894,8 +894,8 @@\n                     \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"readable-stream\": \">=1.0.33-1 <1.1.0-0\",\n-                        \"xtend\": \">=4.0.0 <4.1.0-0\"\n+                        \"readable-stream\": \"1.0.34\",\n+                        \"xtend\": \"4.0.1\"\n                     }\n                 }\n             }\n@@ -918,9 +918,9 @@\n             \"integrity\": \"sha1-AMOQuSigeZslGsz2MaoJ4BzGKZw=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"deep-assign\": \"^1.0.0\",\n-                \"stat-mode\": \"^0.2.0\",\n-                \"through2\": \"^2.0.0\"\n+                \"deep-assign\": \"1.0.0\",\n+                \"stat-mode\": \"0.2.2\",\n+                \"through2\": \"2.0.3\"\n             }\n         },\n         \"gulp-filter\": {\n@@ -929,9 +929,9 @@\n             \"integrity\": \"sha1-oF4Rr/sHz33PQafeHLe2OsN4PnM=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"multimatch\": \"^2.0.0\",\n-                \"plugin-error\": \"^0.1.2\",\n-                \"streamfilter\": \"^1.0.5\"\n+                \"multimatch\": \"2.1.0\",\n+                \"plugin-error\": \"0.1.2\",\n+                \"streamfilter\": \"1.0.7\"\n             }\n         },\n         \"gulp-gunzip\": {\n@@ -940,8 +940,8 @@\n             \"integrity\": \"sha1-FbdBFF6Dqcb1CIYkG1fMWHHxUak=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"through2\": \"~0.6.5\",\n-                \"vinyl\": \"~0.4.6\"\n+                \"through2\": \"0.6.5\",\n+                \"vinyl\": \"0.4.6\"\n             },\n             \"dependencies\": {\n                 \"isarray\": {\n@@ -956,10 +956,10 @@\n                     \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"core-util-is\": \"~1.0.0\",\n-                        \"inherits\": \"~2.0.1\",\n+                        \"core-util-is\": \"1.0.2\",\n+                        \"inherits\": \"2.0.3\",\n                         \"isarray\": \"0.0.1\",\n-                        \"string_decoder\": \"~0.10.x\"\n+                        \"string_decoder\": \"0.10.31\"\n                     }\n                 },\n                 \"string_decoder\": {\n@@ -974,8 +974,8 @@\n                     \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"readable-stream\": \">=1.0.33-1 <1.1.0-0\",\n-                        \"xtend\": \">=4.0.0 <4.1.0-0\"\n+                        \"readable-stream\": \"1.0.34\",\n+                        \"xtend\": \"4.0.1\"\n                     }\n                 }\n             }\n@@ -986,11 +986,11 @@\n             \"integrity\": \"sha512-/9vtSk9eI9DEWCqzGieglPqmx0WUQ9pwPHyHFpKmfxqdgqGJC2l0vFMdYs54hLdDsMDEZFLDL2J4ikjc4hQ5HQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"event-stream\": \"^3.3.4\",\n-                \"node.extend\": \"^1.1.2\",\n-                \"request\": \"^2.79.0\",\n-                \"through2\": \"^2.0.3\",\n-                \"vinyl\": \"^2.0.1\"\n+                \"event-stream\": \"3.3.6\",\n+                \"node.extend\": \"1.1.6\",\n+                \"request\": \"2.88.0\",\n+                \"through2\": \"2.0.3\",\n+                \"vinyl\": \"2.2.0\"\n             },\n             \"dependencies\": {\n                 \"clone\": {\n@@ -1011,12 +1011,12 @@\n                     \"integrity\": \"sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"clone\": \"^2.1.1\",\n-                        \"clone-buffer\": \"^1.0.0\",\n-                        \"clone-stats\": \"^1.0.0\",\n-                        \"cloneable-readable\": \"^1.0.0\",\n-                        \"remove-trailing-separator\": \"^1.0.1\",\n-                        \"replace-ext\": \"^1.0.0\"\n+                        \"clone\": \"2.1.2\",\n+                        \"clone-buffer\": \"1.0.0\",\n+                        \"clone-stats\": \"1.0.0\",\n+                        \"cloneable-readable\": \"1.1.2\",\n+                        \"remove-trailing-separator\": \"1.1.0\",\n+                        \"replace-ext\": \"1.0.0\"\n                     }\n                 }\n             }\n@@ -1027,11 +1027,11 @@\n             \"integrity\": \"sha1-uG/zSdgBzrVuHZ59x7vLS33uYAw=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"convert-source-map\": \"^1.1.1\",\n-                \"graceful-fs\": \"^4.1.2\",\n-                \"strip-bom\": \"^2.0.0\",\n-                \"through2\": \"^2.0.0\",\n-                \"vinyl\": \"^1.0.0\"\n+                \"convert-source-map\": \"1.6.0\",\n+                \"graceful-fs\": \"4.1.11\",\n+                \"strip-bom\": \"2.0.0\",\n+                \"through2\": \"2.0.3\",\n+                \"vinyl\": \"1.2.0\"\n             },\n             \"dependencies\": {\n                 \"clone\": {\n@@ -1052,8 +1052,8 @@\n                     \"integrity\": \"sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"clone\": \"^1.0.0\",\n-                        \"clone-stats\": \"^0.0.1\",\n+                        \"clone\": \"1.0.4\",\n+                        \"clone-stats\": \"0.0.1\",\n                         \"replace-ext\": \"0.0.1\"\n                     }\n                 }\n@@ -1065,10 +1065,10 @@\n             \"integrity\": \"sha1-wWUyBzLRks5W/ZQnH/oSMjS/KuA=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"event-stream\": \"^3.3.1\",\n-                \"mkdirp\": \"^0.5.1\",\n-                \"queue\": \"^3.1.0\",\n-                \"vinyl-fs\": \"^2.4.3\"\n+                \"event-stream\": \"3.3.6\",\n+                \"mkdirp\": \"0.5.1\",\n+                \"queue\": \"3.1.0\",\n+                \"vinyl-fs\": \"2.4.4\"\n             }\n         },\n         \"gulp-untar\": {\n@@ -1077,11 +1077,11 @@\n             \"integrity\": \"sha512-0QfbCH2a1k2qkTLWPqTX+QO4qNsHn3kC546YhAP3/n0h+nvtyGITDuDrYBMDZeW4WnFijmkOvBWa5HshTic1tw==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"event-stream\": \"~3.3.4\",\n-                \"streamifier\": \"~0.1.1\",\n-                \"tar\": \"^2.2.1\",\n-                \"through2\": \"~2.0.3\",\n-                \"vinyl\": \"^1.2.0\"\n+                \"event-stream\": \"3.3.6\",\n+                \"streamifier\": \"0.1.1\",\n+                \"tar\": \"2.2.1\",\n+                \"through2\": \"2.0.3\",\n+                \"vinyl\": \"1.2.0\"\n             },\n             \"dependencies\": {\n                 \"clone\": {\n@@ -1102,8 +1102,8 @@\n                     \"integrity\": \"sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"clone\": \"^1.0.0\",\n-                        \"clone-stats\": \"^0.0.1\",\n+                        \"clone\": \"1.0.4\",\n+                        \"clone-stats\": \"0.0.1\",\n                         \"replace-ext\": \"0.0.1\"\n                     }\n                 }\n@@ -1115,13 +1115,13 @@\n             \"integrity\": \"sha1-JOQGhdwFtxSZlSRQmeBZAmO+ja0=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"event-stream\": \"^3.3.1\",\n-                \"queue\": \"^4.2.1\",\n-                \"through2\": \"^2.0.3\",\n-                \"vinyl\": \"^2.0.2\",\n-                \"vinyl-fs\": \"^2.0.0\",\n-                \"yauzl\": \"^2.2.1\",\n-                \"yazl\": \"^2.2.1\"\n+                \"event-stream\": \"3.3.6\",\n+                \"queue\": \"4.5.0\",\n+                \"through2\": \"2.0.3\",\n+                \"vinyl\": \"2.2.0\",\n+                \"vinyl-fs\": \"2.4.4\",\n+                \"yauzl\": \"2.10.0\",\n+                \"yazl\": \"2.4.3\"\n             },\n             \"dependencies\": {\n                 \"clone\": {\n@@ -1142,7 +1142,7 @@\n                     \"integrity\": \"sha512-DwxpAnqJuoQa+wyDgQuwkSshkhlqIlWEvwvdAY27fDPunZ2cVJzXU4JyjY+5l7zs7oGLaYAQm4MbLOVFAHFBzA==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"inherits\": \"~2.0.0\"\n+                        \"inherits\": \"2.0.3\"\n                     }\n                 },\n                 \"vinyl\": {\n@@ -1151,12 +1151,12 @@\n                     \"integrity\": \"sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"clone\": \"^2.1.1\",\n-                        \"clone-buffer\": \"^1.0.0\",\n-                        \"clone-stats\": \"^1.0.0\",\n-                        \"cloneable-readable\": \"^1.0.0\",\n-                        \"remove-trailing-separator\": \"^1.0.1\",\n-                        \"replace-ext\": \"^1.0.0\"\n+                        \"clone\": \"2.1.2\",\n+                        \"clone-buffer\": \"1.0.0\",\n+                        \"clone-stats\": \"1.0.0\",\n+                        \"cloneable-readable\": \"1.1.2\",\n+                        \"remove-trailing-separator\": \"1.1.0\",\n+                        \"replace-ext\": \"1.0.0\"\n                     }\n                 }\n             }\n@@ -1173,8 +1173,8 @@\n             \"integrity\": \"sha512-+qnmNjI4OfH2ipQ9VQOw23bBd/ibtfbVdK2fYbY4acTDqKTW/YDp9McimZdDbG8iV9fZizUqQMD5xvriB146TA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ajv\": \"^5.3.0\",\n-                \"har-schema\": \"^2.0.0\"\n+                \"ajv\": \"5.5.2\",\n+                \"har-schema\": \"2.0.0\"\n             }\n         },\n         \"has-ansi\": {\n@@ -1183,7 +1183,7 @@\n             \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ansi-regex\": \"^2.0.0\"\n+                \"ansi-regex\": \"2.1.1\"\n             }\n         },\n         \"has-flag\": {\n@@ -1204,12 +1204,12 @@\n             \"integrity\": \"sha1-G9+HrMoPP55T+k/M6w9LTLsAszg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"domelementtype\": \"^1.3.0\",\n-                \"domhandler\": \"^2.3.0\",\n-                \"domutils\": \"^1.5.1\",\n-                \"entities\": \"^1.1.1\",\n-                \"inherits\": \"^2.0.1\",\n-                \"readable-stream\": \"^2.0.2\"\n+                \"domelementtype\": \"1.3.0\",\n+                \"domhandler\": \"2.4.2\",\n+                \"domutils\": \"1.5.1\",\n+                \"entities\": \"1.1.1\",\n+                \"inherits\": \"2.0.3\",\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"http-signature\": {\n@@ -1218,9 +1218,9 @@\n             \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"assert-plus\": \"^1.0.0\",\n-                \"jsprim\": \"^1.2.2\",\n-                \"sshpk\": \"^1.7.0\"\n+                \"assert-plus\": \"1.0.0\",\n+                \"jsprim\": \"1.4.1\",\n+                \"sshpk\": \"1.14.2\"\n             }\n         },\n         \"inflight\": {\n@@ -1229,8 +1229,8 @@\n             \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"once\": \"^1.3.0\",\n-                \"wrappy\": \"1\"\n+                \"once\": \"1.4.0\",\n+                \"wrappy\": \"1.0.2\"\n             }\n         },\n         \"inherits\": {\n@@ -1263,7 +1263,7 @@\n             \"integrity\": \"sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-primitive\": \"^2.0.0\"\n+                \"is-primitive\": \"2.0.0\"\n             }\n         },\n         \"is-extendable\": {\n@@ -1284,7 +1284,7 @@\n             \"integrity\": \"sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-extglob\": \"^2.1.0\"\n+                \"is-extglob\": \"2.1.1\"\n             }\n         },\n         \"is-number\": {\n@@ -1293,7 +1293,7 @@\n             \"integrity\": \"sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"kind-of\": \"^3.0.2\"\n+                \"kind-of\": \"3.2.2\"\n             },\n             \"dependencies\": {\n                 \"kind-of\": {\n@@ -1302,7 +1302,7 @@\n                     \"integrity\": \"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-buffer\": \"^1.1.5\"\n+                        \"is-buffer\": \"1.1.6\"\n                     }\n                 }\n             }\n@@ -1382,8 +1382,8 @@\n             \"integrity\": \"sha512-PIt2cnwmPfL4hKNwqeiuz4bKfnzHTBv6HyVgjahA6mPLwPDzjDWrplJBMjHUFxku/N3FlmrbyPclad+I+4mJ3A==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"argparse\": \"^1.0.7\",\n-                \"esprima\": \"^4.0.0\"\n+                \"argparse\": \"1.0.10\",\n+                \"esprima\": \"4.0.1\"\n             }\n         },\n         \"jsbn\": {\n@@ -1411,7 +1411,7 @@\n             \"integrity\": \"sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"jsonify\": \"~0.0.0\"\n+                \"jsonify\": \"0.0.0\"\n             }\n         },\n         \"json-stringify-safe\": {\n@@ -1450,7 +1450,7 @@\n             \"integrity\": \"sha1-9plf4PggOS9hOWvolGJAe7dxaOQ=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"readable-stream\": \"^2.0.5\"\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"linkify-it\": {\n@@ -1459,7 +1459,7 @@\n             \"integrity\": \"sha1-2UpGSPmxwXnWT6lykSaL22zpQ08=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"uc.micro\": \"^1.0.1\"\n+                \"uc.micro\": \"1.0.5\"\n             }\n         },\n         \"lodash\": {\n@@ -1486,11 +1486,11 @@\n             \"integrity\": \"sha512-GcRz3AWTqSUphY3vsUqQSFMbgR38a4Lh3GWlHRh/7MRwz8mcu9n2IO7HOh+bXHrR9kOPDl5RNCaEsrneb+xhHQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"argparse\": \"^1.0.7\",\n-                \"entities\": \"~1.1.1\",\n-                \"linkify-it\": \"^2.0.0\",\n-                \"mdurl\": \"^1.0.1\",\n-                \"uc.micro\": \"^1.0.5\"\n+                \"argparse\": \"1.0.10\",\n+                \"entities\": \"1.1.1\",\n+                \"linkify-it\": \"2.0.3\",\n+                \"mdurl\": \"1.0.1\",\n+                \"uc.micro\": \"1.0.5\"\n             }\n         },\n         \"math-random\": {\n@@ -1511,7 +1511,7 @@\n             \"integrity\": \"sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"readable-stream\": \"^2.0.1\"\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"micromatch\": {\n@@ -1520,19 +1520,19 @@\n             \"integrity\": \"sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"arr-diff\": \"^2.0.0\",\n-                \"array-unique\": \"^0.2.1\",\n-                \"braces\": \"^1.8.2\",\n-                \"expand-brackets\": \"^0.1.4\",\n-                \"extglob\": \"^0.3.1\",\n-                \"filename-regex\": \"^2.0.0\",\n-                \"is-extglob\": \"^1.0.0\",\n-                \"is-glob\": \"^2.0.1\",\n-                \"kind-of\": \"^3.0.2\",\n-                \"normalize-path\": \"^2.0.1\",\n-                \"object.omit\": \"^2.0.0\",\n-                \"parse-glob\": \"^3.0.4\",\n-                \"regex-cache\": \"^0.4.2\"\n+                \"arr-diff\": \"2.0.0\",\n+                \"array-unique\": \"0.2.1\",\n+                \"braces\": \"1.8.5\",\n+                \"expand-brackets\": \"0.1.5\",\n+                \"extglob\": \"0.3.2\",\n+                \"filename-regex\": \"2.0.1\",\n+                \"is-extglob\": \"1.0.0\",\n+                \"is-glob\": \"2.0.1\",\n+                \"kind-of\": \"3.2.2\",\n+                \"normalize-path\": \"2.1.1\",\n+                \"object.omit\": \"2.0.1\",\n+                \"parse-glob\": \"3.0.4\",\n+                \"regex-cache\": \"0.4.4\"\n             },\n             \"dependencies\": {\n                 \"arr-diff\": {\n@@ -1541,7 +1541,7 @@\n                     \"integrity\": \"sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"arr-flatten\": \"^1.0.1\"\n+                        \"arr-flatten\": \"1.1.0\"\n                     }\n                 },\n                 \"is-extglob\": {\n@@ -1556,7 +1556,7 @@\n                     \"integrity\": \"sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-extglob\": \"^1.0.0\"\n+                        \"is-extglob\": \"1.0.0\"\n                     }\n                 },\n                 \"kind-of\": {\n@@ -1565,7 +1565,7 @@\n                     \"integrity\": \"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-buffer\": \"^1.1.5\"\n+                        \"is-buffer\": \"1.1.6\"\n                     }\n                 }\n             }\n@@ -1588,7 +1588,7 @@\n             \"integrity\": \"sha512-HrkrPaP9vGuWbLK1B1FfgAkbqNjIuy4eHlIYnFi7kamZyLLrGlo2mpcx0bBmNpKqBtYtAfGbodDddIgddSJC2A==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"mime-db\": \"~1.36.0\"\n+                \"mime-db\": \"1.36.0\"\n             }\n         },\n         \"minimatch\": {\n@@ -1597,7 +1597,7 @@\n             \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"brace-expansion\": \"^1.1.7\"\n+                \"brace-expansion\": \"1.1.11\"\n             }\n         },\n         \"minimist\": {\n@@ -1645,12 +1645,12 @@\n                     \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"fs.realpath\": \"^1.0.0\",\n-                        \"inflight\": \"^1.0.4\",\n-                        \"inherits\": \"2\",\n-                        \"minimatch\": \"^3.0.4\",\n-                        \"once\": \"^1.3.0\",\n-                        \"path-is-absolute\": \"^1.0.0\"\n+                        \"fs.realpath\": \"1.0.0\",\n+                        \"inflight\": \"1.0.6\",\n+                        \"inherits\": \"2.0.3\",\n+                        \"minimatch\": \"3.0.4\",\n+                        \"once\": \"1.4.0\",\n+                        \"path-is-absolute\": \"1.0.1\"\n                     }\n                 }\n             }\n@@ -1667,10 +1667,10 @@\n             \"integrity\": \"sha1-nHkGoi+0wCkZ4vX3UWG0zb1LKis=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"array-differ\": \"^1.0.0\",\n-                \"array-union\": \"^1.0.1\",\n-                \"arrify\": \"^1.0.0\",\n-                \"minimatch\": \"^3.0.0\"\n+                \"array-differ\": \"1.0.0\",\n+                \"array-union\": \"1.0.2\",\n+                \"arrify\": \"1.0.1\",\n+                \"minimatch\": \"3.0.4\"\n             }\n         },\n         \"mute-stream\": {\n@@ -1685,7 +1685,7 @@\n             \"integrity\": \"sha1-p7iCyC1sk6SGOlUEvV3o7IYli5Y=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is\": \"^3.1.0\"\n+                \"is\": \"3.2.1\"\n             }\n         },\n         \"normalize-path\": {\n@@ -1694,7 +1694,7 @@\n             \"integrity\": \"sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"remove-trailing-separator\": \"^1.0.1\"\n+                \"remove-trailing-separator\": \"1.1.0\"\n             }\n         },\n         \"nth-check\": {\n@@ -1703,7 +1703,7 @@\n             \"integrity\": \"sha1-mSms32KPwsQQmN6rgqxYDPFJquQ=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"boolbase\": \"~1.0.0\"\n+                \"boolbase\": \"1.0.0\"\n             }\n         },\n         \"oauth-sign\": {\n@@ -1724,8 +1724,8 @@\n             \"integrity\": \"sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"for-own\": \"^0.1.4\",\n-                \"is-extendable\": \"^0.1.1\"\n+                \"for-own\": \"0.1.5\",\n+                \"is-extendable\": \"0.1.1\"\n             }\n         },\n         \"once\": {\n@@ -1734,7 +1734,7 @@\n             \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"wrappy\": \"1\"\n+                \"wrappy\": \"1.0.2\"\n             }\n         },\n         \"ordered-read-streams\": {\n@@ -1743,8 +1743,8 @@\n             \"integrity\": \"sha1-cTfmmzKYuzQiR6G77jiByA4v14s=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-stream\": \"^1.0.1\",\n-                \"readable-stream\": \"^2.0.1\"\n+                \"is-stream\": \"1.1.0\",\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"os-homedir\": {\n@@ -1765,8 +1765,8 @@\n             \"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"os-homedir\": \"^1.0.0\",\n-                \"os-tmpdir\": \"^1.0.0\"\n+                \"os-homedir\": \"1.0.2\",\n+                \"os-tmpdir\": \"1.0.2\"\n             }\n         },\n         \"parse-glob\": {\n@@ -1775,10 +1775,10 @@\n             \"integrity\": \"sha1-ssN2z7EfNVE7rdFz7wu246OIORw=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"glob-base\": \"^0.3.0\",\n-                \"is-dotfile\": \"^1.0.0\",\n-                \"is-extglob\": \"^1.0.0\",\n-                \"is-glob\": \"^2.0.0\"\n+                \"glob-base\": \"0.3.0\",\n+                \"is-dotfile\": \"1.0.3\",\n+                \"is-extglob\": \"1.0.0\",\n+                \"is-glob\": \"2.0.1\"\n             },\n             \"dependencies\": {\n                 \"is-extglob\": {\n@@ -1793,7 +1793,7 @@\n                     \"integrity\": \"sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-extglob\": \"^1.0.0\"\n+                        \"is-extglob\": \"1.0.0\"\n                     }\n                 }\n             }\n@@ -1804,7 +1804,7 @@\n             \"integrity\": \"sha1-mkr9bfBj3Egm+T+6SpnPIj9mbLg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"semver\": \"^5.1.0\"\n+                \"semver\": \"5.5.1\"\n             }\n         },\n         \"parse5\": {\n@@ -1813,7 +1813,7 @@\n             \"integrity\": \"sha512-rgO9Zg5LLLkfJF9E6CCmXlSE4UVceloys8JrFqCcHloC3usd/kJCyPDwH2SOlzix2j3xaP9sUX3e8+kvkuleAA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"@types/node\": \"*\"\n+                \"@types/node\": \"8.10.34\"\n             }\n         },\n         \"path-dirname\": {\n@@ -1840,7 +1840,7 @@\n             \"integrity\": \"sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"through\": \"~2.3\"\n+                \"through\": \"2.3.8\"\n             }\n         },\n         \"pend\": {\n@@ -1861,11 +1861,11 @@\n             \"integrity\": \"sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ansi-cyan\": \"^0.1.1\",\n-                \"ansi-red\": \"^0.1.1\",\n-                \"arr-diff\": \"^1.0.1\",\n-                \"arr-union\": \"^2.0.1\",\n-                \"extend-shallow\": \"^1.1.2\"\n+                \"ansi-cyan\": \"0.1.1\",\n+                \"ansi-red\": \"0.1.1\",\n+                \"arr-diff\": \"1.1.0\",\n+                \"arr-union\": \"2.1.0\",\n+                \"extend-shallow\": \"1.1.4\"\n             }\n         },\n         \"preserve\": {\n@@ -1922,7 +1922,7 @@\n             \"integrity\": \"sha1-bEnQHwCeIlZ4h4nyv/rGuLmZBYU=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"inherits\": \"~2.0.0\"\n+                \"inherits\": \"2.0.3\"\n             }\n         },\n         \"randomatic\": {\n@@ -1931,9 +1931,9 @@\n             \"integrity\": \"sha512-KnGPVE0lo2WoXxIZ7cPR8YBpiol4gsSuOwDSg410oHh80ZMp5EiypNqL2K4Z77vJn6lB5rap7IkAmcUlalcnBQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-number\": \"^4.0.0\",\n-                \"kind-of\": \"^6.0.0\",\n-                \"math-random\": \"^1.0.1\"\n+                \"is-number\": \"4.0.0\",\n+                \"kind-of\": \"6.0.2\",\n+                \"math-random\": \"1.0.1\"\n             },\n             \"dependencies\": {\n                 \"is-number\": {\n@@ -1956,7 +1956,7 @@\n             \"integrity\": \"sha1-s9oZvQUkMal2cdRKQmNK33ELQMQ=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"mute-stream\": \"~0.0.4\"\n+                \"mute-stream\": \"0.0.7\"\n             }\n         },\n         \"readable-stream\": {\n@@ -1965,13 +1965,13 @@\n             \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"core-util-is\": \"~1.0.0\",\n-                \"inherits\": \"~2.0.3\",\n-                \"isarray\": \"~1.0.0\",\n-                \"process-nextick-args\": \"~2.0.0\",\n-                \"safe-buffer\": \"~5.1.1\",\n-                \"string_decoder\": \"~1.1.1\",\n-                \"util-deprecate\": \"~1.0.1\"\n+                \"core-util-is\": \"1.0.2\",\n+                \"inherits\": \"2.0.3\",\n+                \"isarray\": \"1.0.0\",\n+                \"process-nextick-args\": \"2.0.0\",\n+                \"safe-buffer\": \"5.1.2\",\n+                \"string_decoder\": \"1.1.1\",\n+                \"util-deprecate\": \"1.0.2\"\n             }\n         },\n         \"regex-cache\": {\n@@ -1980,7 +1980,7 @@\n             \"integrity\": \"sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-equal-shallow\": \"^0.1.3\"\n+                \"is-equal-shallow\": \"0.1.3\"\n             }\n         },\n         \"remove-trailing-separator\": {\n@@ -2013,26 +2013,26 @@\n             \"integrity\": \"sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"aws-sign2\": \"~0.7.0\",\n-                \"aws4\": \"^1.8.0\",\n-                \"caseless\": \"~0.12.0\",\n-                \"combined-stream\": \"~1.0.6\",\n-                \"extend\": \"~3.0.2\",\n-                \"forever-agent\": \"~0.6.1\",\n-                \"form-data\": \"~2.3.2\",\n-                \"har-validator\": \"~5.1.0\",\n-                \"http-signature\": \"~1.2.0\",\n-                \"is-typedarray\": \"~1.0.0\",\n-                \"isstream\": \"~0.1.2\",\n-                \"json-stringify-safe\": \"~5.0.1\",\n-                \"mime-types\": \"~2.1.19\",\n-                \"oauth-sign\": \"~0.9.0\",\n-                \"performance-now\": \"^2.1.0\",\n-                \"qs\": \"~6.5.2\",\n-                \"safe-buffer\": \"^5.1.2\",\n-                \"tough-cookie\": \"~2.4.3\",\n-                \"tunnel-agent\": \"^0.6.0\",\n-                \"uuid\": \"^3.3.2\"\n+                \"aws-sign2\": \"0.7.0\",\n+                \"aws4\": \"1.8.0\",\n+                \"caseless\": \"0.12.0\",\n+                \"combined-stream\": \"1.0.6\",\n+                \"extend\": \"3.0.2\",\n+                \"forever-agent\": \"0.6.1\",\n+                \"form-data\": \"2.3.2\",\n+                \"har-validator\": \"5.1.0\",\n+                \"http-signature\": \"1.2.0\",\n+                \"is-typedarray\": \"1.0.0\",\n+                \"isstream\": \"0.1.2\",\n+                \"json-stringify-safe\": \"5.0.1\",\n+                \"mime-types\": \"2.1.20\",\n+                \"oauth-sign\": \"0.9.0\",\n+                \"performance-now\": \"2.1.0\",\n+                \"qs\": \"6.5.2\",\n+                \"safe-buffer\": \"5.1.2\",\n+                \"tough-cookie\": \"2.4.3\",\n+                \"tunnel-agent\": \"0.6.0\",\n+                \"uuid\": \"3.3.2\"\n             }\n         },\n         \"requires-port\": {\n@@ -2047,7 +2047,7 @@\n             \"integrity\": \"sha512-AicPrAC7Qu1JxPCZ9ZgCZlY35QgFnNqc+0LtbRNxnVw4TXvjQ72wnuL9JQcEBgXkI9JM8MsT9kaQoHcpCRJOYA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"path-parse\": \"^1.0.5\"\n+                \"path-parse\": \"1.0.6\"\n             }\n         },\n         \"rimraf\": {\n@@ -2056,7 +2056,7 @@\n             \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"glob\": \"^7.0.5\"\n+                \"glob\": \"7.1.3\"\n             }\n         },\n         \"safe-buffer\": {\n@@ -2089,8 +2089,8 @@\n             \"integrity\": \"sha512-gR6Rw4MvUlYy83vP0vxoVNzM6t8MUXqNuRsuBmBHQDu1Fh6X015FrLdgoDKcNdkwGubozq0P4N0Q37UyFVr1EA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"buffer-from\": \"^1.0.0\",\n-                \"source-map\": \"^0.6.0\"\n+                \"buffer-from\": \"1.1.1\",\n+                \"source-map\": \"0.6.1\"\n             }\n         },\n         \"split\": {\n@@ -2099,7 +2099,7 @@\n             \"integrity\": \"sha512-mTyOoPbrivtXnwnIxZRFYRrPNtEFKlpB2fvjSnCQUiAA6qAZzqwna5envK4uk6OIeP17CsdF3rSBGYVBsU0Tkg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"through\": \"2\"\n+                \"through\": \"2.3.8\"\n             }\n         },\n         \"sprintf-js\": {\n@@ -2114,15 +2114,15 @@\n             \"integrity\": \"sha1-xvxhZIo9nE52T9P8306hBeSSupg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"asn1\": \"~0.2.3\",\n-                \"assert-plus\": \"^1.0.0\",\n-                \"bcrypt-pbkdf\": \"^1.0.0\",\n-                \"dashdash\": \"^1.12.0\",\n-                \"ecc-jsbn\": \"~0.1.1\",\n-                \"getpass\": \"^0.1.1\",\n-                \"jsbn\": \"~0.1.0\",\n-                \"safer-buffer\": \"^2.0.2\",\n-                \"tweetnacl\": \"~0.14.0\"\n+                \"asn1\": \"0.2.4\",\n+                \"assert-plus\": \"1.0.0\",\n+                \"bcrypt-pbkdf\": \"1.0.2\",\n+                \"dashdash\": \"1.14.1\",\n+                \"ecc-jsbn\": \"0.1.2\",\n+                \"getpass\": \"0.1.7\",\n+                \"jsbn\": \"0.1.1\",\n+                \"safer-buffer\": \"2.1.2\",\n+                \"tweetnacl\": \"0.14.5\"\n             }\n         },\n         \"stat-mode\": {\n@@ -2137,8 +2137,8 @@\n             \"integrity\": \"sha1-rsjLrBd7Vrb0+kec7YwZEs7lKFg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"duplexer\": \"~0.1.1\",\n-                \"through\": \"~2.3.4\"\n+                \"duplexer\": \"0.1.1\",\n+                \"through\": \"2.3.8\"\n             }\n         },\n         \"stream-shift\": {\n@@ -2153,7 +2153,7 @@\n             \"integrity\": \"sha512-Gk6KZM+yNA1JpW0KzlZIhjo3EaBJDkYfXtYSbOwNIQ7Zd6006E6+sCFlW1NDvFG/vnXhKmw6TJJgiEQg/8lXfQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"readable-stream\": \"^2.0.2\"\n+                \"readable-stream\": \"2.3.6\"\n             }\n         },\n         \"streamifier\": {\n@@ -2168,7 +2168,7 @@\n             \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"safe-buffer\": \"~5.1.0\"\n+                \"safe-buffer\": \"5.1.2\"\n             }\n         },\n         \"strip-ansi\": {\n@@ -2177,7 +2177,7 @@\n             \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ansi-regex\": \"^2.0.0\"\n+                \"ansi-regex\": \"2.1.1\"\n             }\n         },\n         \"strip-bom\": {\n@@ -2186,7 +2186,7 @@\n             \"integrity\": \"sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"is-utf8\": \"^0.2.0\"\n+                \"is-utf8\": \"0.2.1\"\n             }\n         },\n         \"strip-bom-stream\": {\n@@ -2195,8 +2195,8 @@\n             \"integrity\": \"sha1-5xRDmFd9Uaa+0PoZlPoF9D/ZiO4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"first-chunk-stream\": \"^1.0.0\",\n-                \"strip-bom\": \"^2.0.0\"\n+                \"first-chunk-stream\": \"1.0.0\",\n+                \"strip-bom\": \"2.0.0\"\n             }\n         },\n         \"supports-color\": {\n@@ -2205,7 +2205,7 @@\n             \"integrity\": \"sha512-rKC3+DyXWgK0ZLKwmRsrkyHVZAjNkfzeehuFWdGGcqGDTZFH73+RH6S/RDAAxl9GusSjZSUWYLmT9N5pzXFOXQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"has-flag\": \"^2.0.0\"\n+                \"has-flag\": \"2.0.0\"\n             }\n         },\n         \"tar\": {\n@@ -2214,9 +2214,9 @@\n             \"integrity\": \"sha1-jk0qJWwOIYXGsYrWlK7JaLg8sdE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"block-stream\": \"*\",\n-                \"fstream\": \"^1.0.2\",\n-                \"inherits\": \"2\"\n+                \"block-stream\": \"0.0.9\",\n+                \"fstream\": \"1.0.11\",\n+                \"inherits\": \"2.0.3\"\n             }\n         },\n         \"through\": {\n@@ -2231,8 +2231,8 @@\n             \"integrity\": \"sha1-AARWmzfHx0ujnEPzzteNGtlBQL4=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"readable-stream\": \"^2.1.5\",\n-                \"xtend\": \"~4.0.1\"\n+                \"readable-stream\": \"2.3.6\",\n+                \"xtend\": \"4.0.1\"\n             }\n         },\n         \"through2-filter\": {\n@@ -2241,8 +2241,8 @@\n             \"integrity\": \"sha1-YLxVoNrLdghdsfna6Zq0P4PWIuw=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"through2\": \"~2.0.0\",\n-                \"xtend\": \"~4.0.0\"\n+                \"through2\": \"2.0.3\",\n+                \"xtend\": \"4.0.1\"\n             }\n         },\n         \"tmp\": {\n@@ -2251,7 +2251,7 @@\n             \"integrity\": \"sha1-8lEl/w3Z2jzLDC3Tce4SiLuRKMA=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"os-tmpdir\": \"~1.0.1\"\n+                \"os-tmpdir\": \"1.0.2\"\n             }\n         },\n         \"to-absolute-glob\": {\n@@ -2260,7 +2260,7 @@\n             \"integrity\": \"sha1-HN+kcqnvUMI57maZm2YsoOs5k38=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"extend-shallow\": \"^2.0.1\"\n+                \"extend-shallow\": \"2.0.1\"\n             },\n             \"dependencies\": {\n                 \"extend-shallow\": {\n@@ -2269,7 +2269,7 @@\n                     \"integrity\": \"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"is-extendable\": \"^0.1.0\"\n+                        \"is-extendable\": \"0.1.1\"\n                     }\n                 }\n             }\n@@ -2280,8 +2280,8 @@\n             \"integrity\": \"sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"psl\": \"^1.1.24\",\n-                \"punycode\": \"^1.4.1\"\n+                \"psl\": \"1.1.29\",\n+                \"punycode\": \"1.4.1\"\n             }\n         },\n         \"tslib\": {\n@@ -2296,18 +2296,18 @@\n             \"integrity\": \"sha1-mPMMAurjzecAYgHkwzywi0hYHu0=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"babel-code-frame\": \"^6.22.0\",\n-                \"builtin-modules\": \"^1.1.1\",\n-                \"chalk\": \"^2.3.0\",\n-                \"commander\": \"^2.12.1\",\n-                \"diff\": \"^3.2.0\",\n-                \"glob\": \"^7.1.1\",\n-                \"js-yaml\": \"^3.7.0\",\n-                \"minimatch\": \"^3.0.4\",\n-                \"resolve\": \"^1.3.2\",\n-                \"semver\": \"^5.3.0\",\n-                \"tslib\": \"^1.8.0\",\n-                \"tsutils\": \"^2.27.2\"\n+                \"babel-code-frame\": \"6.26.0\",\n+                \"builtin-modules\": \"1.1.1\",\n+                \"chalk\": \"2.4.1\",\n+                \"commander\": \"2.18.0\",\n+                \"diff\": \"3.3.1\",\n+                \"glob\": \"7.1.3\",\n+                \"js-yaml\": \"3.12.0\",\n+                \"minimatch\": \"3.0.4\",\n+                \"resolve\": \"1.8.1\",\n+                \"semver\": \"5.5.1\",\n+                \"tslib\": \"1.9.3\",\n+                \"tsutils\": \"2.29.0\"\n             }\n         },\n         \"tslint-config-prettier\": {\n@@ -2322,7 +2322,7 @@\n             \"integrity\": \"sha512-g5JVHCIJwzfISaXpXE1qvNalca5Jwob6FjI4AoPlqMusJ6ftFE7IkkFoMhVLRgK+4Kx3gkzb8UZK5t5yTTvEmA==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"tslib\": \"^1.8.1\"\n+                \"tslib\": \"1.9.3\"\n             }\n         },\n         \"tunnel\": {\n@@ -2337,7 +2337,7 @@\n             \"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"safe-buffer\": \"^5.0.1\"\n+                \"safe-buffer\": \"5.1.2\"\n             }\n         },\n         \"tweetnacl\": {\n@@ -2389,8 +2389,8 @@\n             \"integrity\": \"sha1-WqADz76Uxf+GbE59ZouxxNuts2k=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"json-stable-stringify\": \"^1.0.0\",\n-                \"through2-filter\": \"^2.0.0\"\n+                \"json-stable-stringify\": \"1.0.1\",\n+                \"through2-filter\": \"2.0.0\"\n             }\n         },\n         \"url-join\": {\n@@ -2405,8 +2405,8 @@\n             \"integrity\": \"sha512-rh+KuAW36YKo0vClhQzLLveoj8FwPJNu65xLb7Mrt+eZht0IPT0IXgSv8gcMegZ6NvjJUALf6Mf25POlMwD1Fw==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"querystringify\": \"^2.0.0\",\n-                \"requires-port\": \"^1.0.0\"\n+                \"querystringify\": \"2.0.0\",\n+                \"requires-port\": \"1.0.0\"\n             }\n         },\n         \"util-deprecate\": {\n@@ -2433,9 +2433,9 @@\n             \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"assert-plus\": \"^1.0.0\",\n+                \"assert-plus\": \"1.0.0\",\n                 \"core-util-is\": \"1.0.2\",\n-                \"extsprintf\": \"^1.2.0\"\n+                \"extsprintf\": \"1.3.0\"\n             }\n         },\n         \"vinyl\": {\n@@ -2444,8 +2444,8 @@\n             \"integrity\": \"sha1-LzVsh6VQolVGHza76ypbqL94SEc=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"clone\": \"^0.2.0\",\n-                \"clone-stats\": \"^0.0.1\"\n+                \"clone\": \"0.2.0\",\n+                \"clone-stats\": \"0.0.1\"\n             }\n         },\n         \"vinyl-fs\": {\n@@ -2454,23 +2454,23 @@\n             \"integrity\": \"sha1-vm/zJwy1Xf19MGNkDegfJddTIjk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"duplexify\": \"^3.2.0\",\n-                \"glob-stream\": \"^5.3.2\",\n-                \"graceful-fs\": \"^4.0.0\",\n+                \"duplexify\": \"3.6.0\",\n+                \"glob-stream\": \"5.3.5\",\n+                \"graceful-fs\": \"4.1.11\",\n                 \"gulp-sourcemaps\": \"1.6.0\",\n-                \"is-valid-glob\": \"^0.3.0\",\n-                \"lazystream\": \"^1.0.0\",\n-                \"lodash.isequal\": \"^4.0.0\",\n-                \"merge-stream\": \"^1.0.0\",\n-                \"mkdirp\": \"^0.5.0\",\n-                \"object-assign\": \"^4.0.0\",\n-                \"readable-stream\": \"^2.0.4\",\n-                \"strip-bom\": \"^2.0.0\",\n-                \"strip-bom-stream\": \"^1.0.0\",\n-                \"through2\": \"^2.0.0\",\n-                \"through2-filter\": \"^2.0.0\",\n-                \"vali-date\": \"^1.0.0\",\n-                \"vinyl\": \"^1.0.0\"\n+                \"is-valid-glob\": \"0.3.0\",\n+                \"lazystream\": \"1.0.0\",\n+                \"lodash.isequal\": \"4.5.0\",\n+                \"merge-stream\": \"1.0.1\",\n+                \"mkdirp\": \"0.5.1\",\n+                \"object-assign\": \"4.1.1\",\n+                \"readable-stream\": \"2.3.6\",\n+                \"strip-bom\": \"2.0.0\",\n+                \"strip-bom-stream\": \"1.0.0\",\n+                \"through2\": \"2.0.3\",\n+                \"through2-filter\": \"2.0.0\",\n+                \"vali-date\": \"1.0.0\",\n+                \"vinyl\": \"1.2.0\"\n             },\n             \"dependencies\": {\n                 \"clone\": {\n@@ -2491,8 +2491,8 @@\n                     \"integrity\": \"sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=\",\n                     \"dev\": true,\n                     \"requires\": {\n-                        \"clone\": \"^1.0.0\",\n-                        \"clone-stats\": \"^0.0.1\",\n+                        \"clone\": \"1.0.4\",\n+                        \"clone-stats\": \"0.0.1\",\n                         \"replace-ext\": \"0.0.1\"\n                     }\n                 }\n@@ -2504,8 +2504,8 @@\n             \"integrity\": \"sha1-YrU6E1YQqJbpjKlr7jqH8Aio54A=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"through2\": \"^2.0.3\",\n-                \"vinyl\": \"^0.4.3\"\n+                \"through2\": \"2.0.3\",\n+                \"vinyl\": \"0.4.6\"\n             }\n         },\n         \"vsce\": {\n@@ -2514,23 +2514,23 @@\n             \"integrity\": \"sha512-Hf2HE9O/MRQHxUUgWHAm7mOkz0K5swuF2smaE/sP7+OWp/5DdIPFwmLEYCCZHxG25l3GBRoO0dAL8S5w//et+g==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"cheerio\": \"^1.0.0-rc.1\",\n-                \"commander\": \"^2.8.1\",\n-                \"denodeify\": \"^1.2.1\",\n-                \"glob\": \"^7.0.6\",\n-                \"lodash\": \"^4.17.10\",\n-                \"markdown-it\": \"^8.3.1\",\n-                \"mime\": \"^1.3.4\",\n-                \"minimatch\": \"^3.0.3\",\n-                \"osenv\": \"^0.1.3\",\n-                \"parse-semver\": \"^1.1.1\",\n-                \"read\": \"^1.0.7\",\n-                \"semver\": \"^5.1.0\",\n+                \"cheerio\": \"1.0.0-rc.2\",\n+                \"commander\": \"2.18.0\",\n+                \"denodeify\": \"1.2.1\",\n+                \"glob\": \"7.1.3\",\n+                \"lodash\": \"4.17.11\",\n+                \"markdown-it\": \"8.4.2\",\n+                \"mime\": \"1.6.0\",\n+                \"minimatch\": \"3.0.4\",\n+                \"osenv\": \"0.1.5\",\n+                \"parse-semver\": \"1.1.1\",\n+                \"read\": \"1.0.7\",\n+                \"semver\": \"5.5.1\",\n                 \"tmp\": \"0.0.29\",\n-                \"url-join\": \"^1.1.0\",\n+                \"url-join\": \"1.1.0\",\n                 \"vso-node-api\": \"6.1.2-preview\",\n-                \"yauzl\": \"^2.3.1\",\n-                \"yazl\": \"^2.2.2\"\n+                \"yauzl\": \"2.10.0\",\n+                \"yazl\": \"2.4.3\"\n             }\n         },\n         \"vscode\": {\n@@ -2539,20 +2539,20 @@\n             \"integrity\": \"sha512-tJl9eL15ZMm6vzCYYeQ26sSYRuXGMGPsaeIAmG2rOOYRn01jdaDg6I4b9G5Ed6FISdmn6egpKThk4o4om8Ax/A==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"glob\": \"^7.1.2\",\n-                \"gulp-chmod\": \"^2.0.0\",\n-                \"gulp-filter\": \"^5.0.1\",\n+                \"glob\": \"7.1.3\",\n+                \"gulp-chmod\": \"2.0.0\",\n+                \"gulp-filter\": \"5.1.0\",\n                 \"gulp-gunzip\": \"1.0.0\",\n-                \"gulp-remote-src-vscode\": \"^0.5.0\",\n-                \"gulp-symdest\": \"^1.1.0\",\n-                \"gulp-untar\": \"^0.0.7\",\n-                \"gulp-vinyl-zip\": \"^2.1.0\",\n-                \"mocha\": \"^4.0.1\",\n-                \"request\": \"^2.83.0\",\n-                \"semver\": \"^5.4.1\",\n-                \"source-map-support\": \"^0.5.0\",\n-                \"url-parse\": \"^1.4.3\",\n-                \"vinyl-source-stream\": \"^1.1.0\"\n+                \"gulp-remote-src-vscode\": \"0.5.0\",\n+                \"gulp-symdest\": \"1.1.0\",\n+                \"gulp-untar\": \"0.0.7\",\n+                \"gulp-vinyl-zip\": \"2.1.0\",\n+                \"mocha\": \"4.1.0\",\n+                \"request\": \"2.88.0\",\n+                \"semver\": \"5.5.1\",\n+                \"source-map-support\": \"0.5.9\",\n+                \"url-parse\": \"1.4.3\",\n+                \"vinyl-source-stream\": \"1.1.2\"\n             }\n         },\n         \"vscode-jsonrpc\": {\n@@ -2565,15 +2565,15 @@\n             \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-4.4.2.tgz\",\n             \"integrity\": \"sha512-9TUzsg1UM6n1UEyPlWbDf7tK1wJAK7UGFRmGDN8sz4KmbbDiVRh6YicaB/5oRSVTpuV47PdJpYlOl3SJ0RiK1Q==\",\n             \"requires\": {\n-                \"vscode-languageserver-protocol\": \"^3.10.3\"\n+                \"vscode-languageserver-protocol\": \"3.13.0\"\n             }\n         },\n         \"vscode-languageserver-protocol\": {\n             \"version\": \"3.13.0\",\n             \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.13.0.tgz\",\n             \"integrity\": \"sha512-2ZGKwI+P2ovQll2PGAp+2UfJH+FK9eait86VBUdkPd9HRlm8e58aYT9pV/NYanHOcp3pL6x2yTLVCFMcTer0mg==\",\n             \"requires\": {\n-                \"vscode-jsonrpc\": \"^4.0.0\",\n+                \"vscode-jsonrpc\": \"4.0.0\",\n                 \"vscode-languageserver-types\": \"3.13.0\"\n             }\n         },\n@@ -2588,10 +2588,10 @@\n             \"integrity\": \"sha1-qrNUbfJFHs2JTgcbuZtd8Zxfp48=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"q\": \"^1.0.1\",\n+                \"q\": \"1.5.1\",\n                 \"tunnel\": \"0.0.4\",\n-                \"typed-rest-client\": \"^0.9.0\",\n-                \"underscore\": \"^1.8.3\"\n+                \"typed-rest-client\": \"0.9.0\",\n+                \"underscore\": \"1.9.1\"\n             }\n         },\n         \"wrappy\": {\n@@ -2612,8 +2612,8 @@\n             \"integrity\": \"sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"buffer-crc32\": \"~0.2.3\",\n-                \"fd-slicer\": \"~1.1.0\"\n+                \"buffer-crc32\": \"0.2.13\",\n+                \"fd-slicer\": \"1.1.0\"\n             }\n         },\n         \"yazl\": {\n@@ -2622,7 +2622,7 @@\n             \"integrity\": \"sha1-7CblzIfVYBud+EMtvdPNLlFzoHE=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"buffer-crc32\": \"~0.2.3\"\n+                \"buffer-crc32\": \"0.2.13\"\n             }\n         }\n     }"}, {"sha": "d78a64c3e43d9c84911312d2153a8e04f67669f2", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -2,6 +2,7 @@ import * as applySourceChange from './apply_source_change';\n import * as extendSelection from './extend_selection';\n import * as joinLines from './join_lines';\n import * as matchingBrace from './matching_brace';\n+import * as on_enter from './on_enter';\n import * as parentModule from './parent_module';\n import * as runnables from './runnables';\n import * as syntaxTree from './syntaxTree';\n@@ -13,5 +14,6 @@ export {\n     matchingBrace,\n     parentModule,\n     runnables,\n-    syntaxTree\n+    syntaxTree,\n+    on_enter,\n };"}, {"sha": "2666797fe71120b815bb2dfa5fca3c4fc2caa06f", "filename": "editors/code/src/commands/on_enter.ts", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -0,0 +1,29 @@\n+import * as vscode from 'vscode';\n+import * as lc from 'vscode-languageclient';\n+import { Server } from '../server';\n+import { handle as applySourceChange, SourceChange } from './apply_source_change';\n+\n+interface OnEnterParams {\n+    textDocument: lc.TextDocumentIdentifier;\n+    position: lc.Position;\n+}\n+\n+export async function handle(event: { text: string }): Promise<boolean> {\n+    const editor = vscode.window.activeTextEditor;\n+    if (editor == null || editor.document.languageId !== 'rust' || event.text !== '\\n') {\n+        return false;\n+    }\n+    const request: OnEnterParams = {\n+        textDocument: { uri: editor.document.uri.toString() },\n+        position: Server.client.code2ProtocolConverter.asPosition(editor.selection.active),\n+    };\n+    const change = await Server.client.sendRequest<undefined | SourceChange>(\n+        'm/onEnter',\n+        request\n+    );\n+    if (!change) {\n+        return false;\n+    }\n+    await applySourceChange(change);\n+    return true\n+}"}, {"sha": "3e5767535521d1d92a4911dad914e5ec7f9c61b3", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2b956fd3a83313cee37ff179eae843bc88dd572a/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=2b956fd3a83313cee37ff179eae843bc88dd572a", "patch": "@@ -15,6 +15,23 @@ export function activate(context: vscode.ExtensionContext) {\n     function registerCommand(name: string, f: any) {\n         disposeOnDeactivation(vscode.commands.registerCommand(name, f));\n     }\n+    function overrideCommand(\n+\n+        name: string,\n+        f: (...args: any[]) => Promise<boolean>,\n+    ) {\n+        const defaultCmd = `default:${name}`;\n+        const original = async (...args: any[]) => await vscode.commands.executeCommand(defaultCmd, ...args);\n+        registerCommand(name, async (...args: any[]) => {\n+            const editor = vscode.window.activeTextEditor;\n+            if (!editor || !editor.document || editor.document.languageId !== 'rust') {\n+                return await original(...args);\n+            }\n+            if (!await f(...args)) {\n+                return await original(...args);\n+            }\n+        })\n+    }\n \n     // Commands are requests from vscode to the language server\n     registerCommand('ra-lsp.syntaxTree', commands.syntaxTree.handle);\n@@ -27,11 +44,12 @@ export function activate(context: vscode.ExtensionContext) {\n         'ra-lsp.applySourceChange',\n         commands.applySourceChange.handle\n     );\n+    overrideCommand('type', commands.on_enter.handle)\n \n     // Notifications are events triggered by the language server\n     const allNotifications: Iterable<\n         [string, lc.GenericNotificationHandler]\n-    > = [['m/publishDecorations', notifications.publishDecorations.handle]];\n+        > = [['m/publishDecorations', notifications.publishDecorations.handle]];\n \n     // The events below are plain old javascript events, triggered and handled by vscode\n     vscode.window.onDidChangeActiveTextEditor("}]}