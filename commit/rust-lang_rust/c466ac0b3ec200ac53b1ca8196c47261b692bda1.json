{"sha": "c466ac0b3ec200ac53b1ca8196c47261b692bda1", "node_id": "C_kwDOAAsO6NoAKGM0NjZhYzBiM2VjMjAwYWM1M2IxY2E4MTk2YzQ3MjYxYjY5MmJkYTE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T15:25:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T15:25:20Z"}, "message": "add some missing assert_target_os", "tree": {"sha": "980aaf19a5e4985df13417ed9729e30de593d832", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/980aaf19a5e4985df13417ed9729e30de593d832"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c466ac0b3ec200ac53b1ca8196c47261b692bda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c466ac0b3ec200ac53b1ca8196c47261b692bda1", "html_url": "https://github.com/rust-lang/rust/commit/c466ac0b3ec200ac53b1ca8196c47261b692bda1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c466ac0b3ec200ac53b1ca8196c47261b692bda1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d34242e8f1c538a8b4e01100a273ef1c5d456abd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d34242e8f1c538a8b4e01100a273ef1c5d456abd", "html_url": "https://github.com/rust-lang/rust/commit/d34242e8f1c538a8b4e01100a273ef1c5d456abd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "67303c47db7ee4cb68c7af6cc78a9a32a79540d2", "filename": "src/shims/time.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c466ac0b3ec200ac53b1ca8196c47261b692bda1/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c466ac0b3ec200ac53b1ca8196c47261b692bda1/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=c466ac0b3ec200ac53b1ca8196c47261b692bda1", "patch": "@@ -197,12 +197,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn nanosleep(\n         &mut self,\n         req_op: &OpTy<'tcx, Provenance>,\n-        _rem: &OpTy<'tcx, Provenance>,\n+        _rem: &OpTy<'tcx, Provenance>, // Signal handlers are not supported, so rem will never be written to.\n     ) -> InterpResult<'tcx, i32> {\n-        // Signal handlers are not supported, so rem will never be written to.\n-\n         let this = self.eval_context_mut();\n \n+        this.assert_target_os_is_unix(\"nanosleep\");\n         this.check_no_isolation(\"`nanosleep`\")?;\n \n         let duration = match this.read_timespec(&this.deref_operand(req_op)?)? {\n@@ -238,6 +237,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn Sleep(&mut self, timeout: &OpTy<'tcx, Provenance>) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n \n+        this.assert_target_os(\"windows\", \"Sleep\");\n         this.check_no_isolation(\"`Sleep`\")?;\n \n         let timeout_ms = this.read_scalar(timeout)?.to_u32()?;"}]}