{"sha": "81751a2a00f40fb21ab220cc2ab422121be4e79d", "node_id": "C_kwDOAAsO6NoAKDgxNzUxYTJhMDBmNDBmYjIxYWIyMjBjYzJhYjQyMjEyMWJlNGU3OWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-01-04T10:14:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-01-04T10:14:55Z"}, "message": "adjust for StackPopCleanup::None rename", "tree": {"sha": "0da5a048842afa20f8c2c21a718b39800b5532ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0da5a048842afa20f8c2c21a718b39800b5532ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81751a2a00f40fb21ab220cc2ab422121be4e79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81751a2a00f40fb21ab220cc2ab422121be4e79d", "html_url": "https://github.com/rust-lang/rust/commit/81751a2a00f40fb21ab220cc2ab422121be4e79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81751a2a00f40fb21ab220cc2ab422121be4e79d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad0c24936c82dc4fc71c6bf5814c526b377d1995", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0c24936c82dc4fc71c6bf5814c526b377d1995", "html_url": "https://github.com/rust-lang/rust/commit/ad0c24936c82dc4fc71c6bf5814c526b377d1995"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "9cd3a9a56466b6e79150ab09c92a1d5131d589e2", "filename": "src/eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=81751a2a00f40fb21ab220cc2ab422121be4e79d", "patch": "@@ -247,7 +247,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n                 Abi::Rust,\n                 &[Scalar::from_pointer(main_ptr, &ecx).into(), argc.into(), argv],\n                 Some(&ret_place.into()),\n-                StackPopCleanup::None { cleanup: true },\n+                StackPopCleanup::Root { cleanup: true },\n             )?;\n         }\n         EntryFnType::Start => {\n@@ -256,7 +256,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n                 Abi::Rust,\n                 &[argc.into(), argv],\n                 Some(&ret_place.into()),\n-                StackPopCleanup::None { cleanup: true },\n+                StackPopCleanup::Root { cleanup: true },\n             )?;\n         }\n     }"}, {"sha": "b49817e88511d3e3530fdfcb3bb9060543d48bbd", "filename": "src/shims/posix/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Fshims%2Fposix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Fshims%2Fposix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fthread.rs?ref=81751a2a00f40fb21ab220cc2ab422121be4e79d", "patch": "@@ -54,7 +54,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Abi::C { unwind: false },\n             &[*func_arg],\n             Some(&ret_place.into()),\n-            StackPopCleanup::None { cleanup: true },\n+            StackPopCleanup::Root { cleanup: true },\n         )?;\n \n         // Restore the old active thread frame."}, {"sha": "32bea8dde4754f802242c33da6de3c2c31fb23e5", "filename": "src/shims/tls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81751a2a00f40fb21ab220cc2ab422121be4e79d/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=81751a2a00f40fb21ab220cc2ab422121be4e79d", "patch": "@@ -259,7 +259,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Abi::System { unwind: false },\n             &[Scalar::null_ptr(this).into(), reason.into(), Scalar::null_ptr(this).into()],\n             Some(&ret_place),\n-            StackPopCleanup::None { cleanup: true },\n+            StackPopCleanup::Root { cleanup: true },\n         )?;\n \n         this.enable_thread(active_thread);\n@@ -282,7 +282,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 Abi::C { unwind: false },\n                 &[data.into()],\n                 Some(&ret_place),\n-                StackPopCleanup::None { cleanup: true },\n+                StackPopCleanup::Root { cleanup: true },\n             )?;\n \n             // Enable the thread so that it steps through the destructor which\n@@ -325,7 +325,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 Abi::C { unwind: false },\n                 &[ptr.into()],\n                 Some(&ret_place),\n-                StackPopCleanup::None { cleanup: true },\n+                StackPopCleanup::Root { cleanup: true },\n             )?;\n \n             this.enable_thread(active_thread);"}]}