{"sha": "f183d7a26ed5c39634612486a45240d067ba0abf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxODNkN2EyNmVkNWMzOTYzNDYxMjQ4NmE0NTI0MGQwNjdiYTBhYmY=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-30T15:59:14Z"}, "committer": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-30T16:02:18Z"}, "message": "Additional text and examples around casting", "tree": {"sha": "13da93021e1df6b0ca7b8a19923782a3dffad12a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13da93021e1df6b0ca7b8a19923782a3dffad12a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f183d7a26ed5c39634612486a45240d067ba0abf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f183d7a26ed5c39634612486a45240d067ba0abf", "html_url": "https://github.com/rust-lang/rust/commit/f183d7a26ed5c39634612486a45240d067ba0abf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f183d7a26ed5c39634612486a45240d067ba0abf/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "html_url": "https://github.com/rust-lang/rust/commit/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "e0e9b75d464f3850f6ad12737893d252cc64f6bc", "filename": "src/doc/book/casting-between-types.md", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f183d7a26ed5c39634612486a45240d067ba0abf/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/f183d7a26ed5c39634612486a45240d067ba0abf/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fcasting-between-types.md?ref=f183d7a26ed5c39634612486a45240d067ba0abf", "patch": "@@ -14,18 +14,24 @@ Coercion occurs in `let`, `const`, and `static` statements; in\n function call arguments; in field values in struct initialization; and in a\n function result.\n \n-The main cases of coercion are:\n+The most common case of coercion is removing mutability from a reference:\n \n  * `&mut T` to `&T`\n+ \n+An analogous conversion is to remove mutability from a\n+[raw pointer](raw-pointers.md):\n \n  * `*mut T` to `*const T`\n+ \n+References can also be coerced to raw pointers:\n \n  * `&T` to `*const T`\n \n  * `&mut T` to `*mut T`\n- \n- * A custom coercion using [`Deref`](deref-coercions.md)\n- \n+\n+Custom coercion may be defined using [`Deref`](deref-coercions.md).\n+\n+Coercion is transitive.\n  \n # `as`\n \n@@ -71,6 +77,7 @@ For example\n ```rust\n let one = true as u8;\n let at_sign = 64 as char;\n+let two_hundred = -56i8 as u8;\n ```\n \n The semantics of numeric casts are:\n@@ -101,9 +108,14 @@ The semantics of numeric casts are:\n  \n ## Pointer casts\n  \n-Perhaps surprisingly, it is safe to cast pointers to and from integers, and\n-to cast between pointers to different types subject to some constraints. It\n-is only unsafe to dereference the pointer.\n+Perhaps surprisingly, it is safe to cast [raw pointers](raw-pointers.md) to and\n+from integers, and to cast between pointers to different types subject to\n+some constraints. It is only unsafe to dereference the pointer:\n+\n+```rust\n+let a = 300 as *const char; // a pointer to location 300\n+let b = a as u32;\n+```\n \n `e as U` is a valid pointer cast in any of the following cases:\n "}]}