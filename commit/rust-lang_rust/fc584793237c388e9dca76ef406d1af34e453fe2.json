{"sha": "fc584793237c388e9dca76ef406d1af34e453fe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNTg0NzkzMjM3YzM4OGU5ZGNhNzZlZjQwNmQxYWYzNGU0NTNmZTI=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-12-19T04:09:57Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-05T20:00:57Z"}, "message": "Stop using macro_escape as an inner attribute\n\nIn preparation for the rename.", "tree": {"sha": "9b8116de6b62341df1fee3edb56368b35d984fd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b8116de6b62341df1fee3edb56368b35d984fd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc584793237c388e9dca76ef406d1af34e453fe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc584793237c388e9dca76ef406d1af34e453fe2", "html_url": "https://github.com/rust-lang/rust/commit/fc584793237c388e9dca76ef406d1af34e453fe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc584793237c388e9dca76ef406d1af34e453fe2/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73806ddd0fd91066d7b903a00a080cbadcc04311", "url": "https://api.github.com/repos/rust-lang/rust/commits/73806ddd0fd91066d7b903a00a080cbadcc04311", "html_url": "https://github.com/rust-lang/rust/commit/73806ddd0fd91066d7b903a00a080cbadcc04311"}], "stats": {"total": 102, "additions": 55, "deletions": 47}, "files": [{"sha": "9214ec7e65b4c63f747df6535ee1a8fc4052f65b", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -54,6 +54,7 @@ pub use vec_map::VecMap;\n // Needed for the vec! macro\n pub use alloc::boxed;\n \n+#[macro_escape]\n mod macros;\n \n pub mod binary_heap;"}, {"sha": "0c5929e8661d6d22870fbab4f215118834675009", "filename": "src/libcollections/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcollections%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcollections%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n /// Creates a `std::vec::Vec` containing the arguments.\n // NOTE: remove after the next snapshot\n #[cfg(stage0)]"}, {"sha": "588421dfa10ba2b5d806a7e0f788fca2455a8641", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -62,11 +62,20 @@\n #![feature(default_type_params, unboxed_closures, associated_types)]\n #![deny(missing_docs)]\n \n+#[macro_escape]\n mod macros;\n \n-#[path = \"num/float_macros.rs\"] mod float_macros;\n-#[path = \"num/int_macros.rs\"]   mod int_macros;\n-#[path = \"num/uint_macros.rs\"]  mod uint_macros;\n+#[path = \"num/float_macros.rs\"]\n+#[macro_escape]\n+mod float_macros;\n+\n+#[path = \"num/int_macros.rs\"]\n+#[macro_escape]\n+mod int_macros;\n+\n+#[path = \"num/uint_macros.rs\"]\n+#[macro_escape]\n+mod uint_macros;\n \n #[path = \"num/int.rs\"]  pub mod int;\n #[path = \"num/i8.rs\"]   pub mod i8;"}, {"sha": "a579f9db4161c3a8f04b1742a1f53d1602a7e96a", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n /// Entry point of task panic, for details, see std::macros\n #[macro_export]\n macro_rules! panic {"}, {"sha": "20300d29fa0c5f1e66e5d255eb79bc5b1c11ed17", "filename": "src/libcore/num/float_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Ffloat_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Ffloat_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ffloat_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n #![doc(hidden)]\n \n macro_rules! assert_approx_eq {"}, {"sha": "61cd8cbf7c10153da90d5f0da64168ae845e5e1a", "filename": "src/libcore/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n #![doc(hidden)]\n \n macro_rules! int_module { ($T:ty, $bits:expr) => ("}, {"sha": "535765840a0fcacc345b9065311456d9e644bdf7", "filename": "src/libcore/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcore%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n #![doc(hidden)]\n \n macro_rules! uint_module { ($T:ty, $T_SIGNED:ty, $bits:expr) => ("}, {"sha": "965ffde70970bb46fa3e0bf444c74c919bc6621d", "filename": "src/libcoretest/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n macro_rules! int_module (($T:ty, $T_i:ident) => (\n #[cfg(test)]\n mod tests {"}, {"sha": "01868675c7615f5e7745fb7529d3f522aa02cd47", "filename": "src/libcoretest/num/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -14,13 +14,18 @@ use core::num::{NumCast, cast};\n use core::ops::{Add, Sub, Mul, Div, Rem};\n use core::kinds::Copy;\n \n+#[macro_escape]\n mod int_macros;\n+\n mod i8;\n mod i16;\n mod i32;\n mod i64;\n mod int;\n+\n+#[macro_escape]\n mod uint_macros;\n+\n mod u8;\n mod u16;\n mod u32;"}, {"sha": "eff238c816eee2db9ff98d245bf5676b8d164212", "filename": "src/libcoretest/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibcoretest%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fuint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n macro_rules! uint_module (($T:ty, $T_i:ident) => (\n #[cfg(test)]\n mod tests {"}, {"sha": "61523c6fd0fb924a835ced9421a16c5a3766575d", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -183,7 +183,9 @@ use regex::Regex;\n \n use directive::LOG_LEVEL_NAMES;\n \n+#[macro_escape]\n pub mod macros;\n+\n mod directive;\n \n /// Maximum logging level of a module that can be specified. Common logging"}, {"sha": "66682dba7b6df0ff4213bcf873fa7fad5d92533e", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -10,8 +10,6 @@\n \n //! Logging macros\n \n-#![macro_escape]\n-\n /// The standard logging macro\n ///\n /// This macro will generically log over a provided level (of type u32) with a"}, {"sha": "e9778fa05ff1787f419d717d979591d8816a69ef", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -28,8 +28,6 @@\n //! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n //! in `context.rs`.\n \n-#![macro_escape]\n-\n pub use self::Level::*;\n pub use self::LintSource::*;\n "}, {"sha": "77efcc6fb0030d9d768d644c02f30696ec91b09b", "filename": "src/librustc_trans/trans/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc_trans%2Ftrans%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc_trans%2Ftrans%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n macro_rules! unpack_datum {\n     ($bcx: ident, $inp: expr) => (\n         {"}, {"sha": "9b7f282f8bb4b1dee873c25b48d1c2098a29046f", "filename": "src/librustc_trans/trans/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc_trans%2Ftrans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustc_trans%2Ftrans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -16,8 +16,10 @@ pub use self::base::trans_crate;\n pub use self::context::CrateContext;\n pub use self::common::gensym_name;\n \n-mod doc;\n+#[macro_escape]\n mod macros;\n+\n+mod doc;\n mod inline;\n mod monomorphize;\n mod controlflow;"}, {"sha": "a454760c8b5dfbd3bde2c6c78693df0d8c48db88", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -49,11 +49,12 @@ use rustc::session::search_paths::SearchPaths;\n // reexported from `clean` so it can be easily updated with the mod itself\n pub use clean::SCHEMA_VERSION;\n \n+#[macro_escape]\n+pub mod externalfiles;\n+\n pub mod clean;\n pub mod core;\n pub mod doctree;\n-#[macro_escape]\n-pub mod externalfiles;\n pub mod fold;\n pub mod html {\n     pub mod highlight;"}, {"sha": "ed3f2cbe1a1da3f5471e06bb12aa2d0de1f0309d", "filename": "src/libstd/bitflags.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fbitflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fbitflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitflags.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![experimental]\n-#![macro_escape]\n \n //! A typesafe bitmask flag generator.\n "}, {"sha": "bf373a145e4cce61f031894d692219fd69f0d840", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -282,10 +282,12 @@ pub mod net;\n pub mod pipe;\n pub mod process;\n pub mod stdio;\n-pub mod test;\n pub mod timer;\n pub mod util;\n \n+#[macro_escape]\n+pub mod test;\n+\n /// The default buffer size for various I/O operations\n // libuv recommends 64k buffers to maximize throughput\n // https://groups.google.com/forum/#!topic/libuv/oQO1HJAIDdA"}, {"sha": "6eeef175f73d50844c1d17123385c3cc544a61da", "filename": "src/libstd/io/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fio%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fio%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftest.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -10,8 +10,6 @@\n \n //! Various utility functions useful for writing I/O tests\n \n-#![macro_escape]\n-\n use prelude::v1::*;\n \n use libc;"}, {"sha": "5ffd3ebc7ad21730c112c632def5e3739480c699", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -172,8 +172,15 @@ pub use unicode::char;\n \n /* Exported macros */\n \n-#[cfg(stage0)] pub mod macros_stage0;\n-#[cfg(not(stage0))] pub mod macros;\n+#[cfg(stage0)]\n+#[macro_escape]\n+pub mod macros_stage0;\n+\n+#[cfg(not(stage0))]\n+#[macro_escape]\n+pub mod macros;\n+\n+#[macro_escape]\n pub mod bitflags;\n \n mod rtdeps;\n@@ -185,9 +192,17 @@ pub mod prelude;\n \n /* Primitive types */\n \n-#[path = \"num/float_macros.rs\"] mod float_macros;\n-#[path = \"num/int_macros.rs\"]   mod int_macros;\n-#[path = \"num/uint_macros.rs\"]  mod uint_macros;\n+#[path = \"num/float_macros.rs\"]\n+#[macro_escape]\n+mod float_macros;\n+\n+#[path = \"num/int_macros.rs\"]\n+#[macro_escape]\n+mod int_macros;\n+\n+#[path = \"num/uint_macros.rs\"]\n+#[macro_escape]\n+mod uint_macros;\n \n #[path = \"num/int.rs\"]  pub mod int;\n #[path = \"num/i8.rs\"]   pub mod i8;\n@@ -214,7 +229,9 @@ pub mod num;\n \n /* Runtime and platform support */\n \n+#[macro_escape]\n pub mod thread_local;\n+\n pub mod c_str;\n pub mod c_vec;\n pub mod dynamic_lib;"}, {"sha": "6bf1ba2355f8df691c6549543b3f85ef00355101", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -15,7 +15,6 @@\n //! library.\n \n #![experimental]\n-#![macro_escape]\n \n /// The entry point for panic of Rust tasks.\n ///"}, {"sha": "48d62e73e13edeba26b4b7f7907dc6a23716bb65", "filename": "src/libstd/macros_stage0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fmacros_stage0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fmacros_stage0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros_stage0.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -15,7 +15,6 @@\n //! library.\n \n #![experimental]\n-#![macro_escape]\n \n /// The entry point for panic of Rust tasks.\n ///"}, {"sha": "4c52f29b12d763a2433b29af0341b0c29ac1b656", "filename": "src/libstd/num/float_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Ffloat_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Ffloat_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ffloat_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![experimental]\n-#![macro_escape]\n #![doc(hidden)]\n \n macro_rules! assert_approx_eq {"}, {"sha": "ebcb20861879c87aebf86b92b17cc568e198ea92", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![experimental]\n-#![macro_escape]\n #![doc(hidden)]\n \n macro_rules! int_module { ($T:ty) => ("}, {"sha": "08ea1b024c99360264b37d989ac2c099486e1014", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![experimental]\n-#![macro_escape]\n #![doc(hidden)]\n #![allow(unsigned_negation)]\n "}, {"sha": "bbc96d0b19f125fa91ee2297e062e905ed937c76", "filename": "src/libstd/rt/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Frt%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Frt%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -13,8 +13,6 @@\n //! These macros call functions which are only accessible in the `rt` module, so\n //! they aren't defined anywhere outside of the `rt` module.\n \n-#![macro_escape]\n-\n macro_rules! rterrln {\n     ($fmt:expr $($arg:tt)*) => ( {\n         ::rt::util::dumb_print(format_args!(concat!($fmt, \"\\n\") $($arg)*))"}, {"sha": "1ed01c034b53f9b497f7567798dd0bc9f98669e8", "filename": "src/libstd/thread_local/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fthread_local%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fthread_local%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread_local%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -34,13 +34,13 @@\n //! will want to make use of some form of **interior mutability** through the\n //! `Cell` or `RefCell` types.\n \n-#![macro_escape]\n #![stable]\n \n use prelude::v1::*;\n \n use cell::UnsafeCell;\n \n+#[macro_escape]\n pub mod scoped;\n \n // Sure wish we had macro hygiene, no?"}, {"sha": "714b71d5dbd4e75364c4ee165a32dc8b8eafc10b", "filename": "src/libstd/thread_local/scoped.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fthread_local%2Fscoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibstd%2Fthread_local%2Fscoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread_local%2Fscoped.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -38,7 +38,6 @@\n //! });\n //! ```\n \n-#![macro_escape]\n #![unstable = \"scoped TLS has yet to have wide enough use to fully consider \\\n                stabilizing its interface\"]\n "}, {"sha": "34a193dffd3db5d1d7079a2bf16fa08f3c7e1aff", "filename": "src/libsyntax/diagnostics/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n #[macro_export]\n macro_rules! register_diagnostic {\n     ($code:tt, $description:tt) => (__register_diagnostic! { $code, $description });"}, {"sha": "05ed535ee36b1b8e2700675caabb73edb79da6e5", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -24,8 +24,10 @@ use std::num::Int;\n use std::str;\n use std::iter;\n \n-pub mod lexer;\n+#[macro_escape]\n pub mod parser;\n+\n+pub mod lexer;\n pub mod token;\n pub mod attr;\n "}, {"sha": "5539abb16b46109aa909981672da650757fe05f5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![macro_escape]\n-\n pub use self::PathParsingMode::*;\n use self::ItemOrViewItem::*;\n "}, {"sha": "5ef1acae6c7ed16f2ce2bf8819ce64074b10b63b", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc584793237c388e9dca76ef406d1af34e453fe2/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=fc584793237c388e9dca76ef406d1af34e453fe2", "patch": "@@ -11,7 +11,6 @@\n #![crate_type = \"lib\"]\n \n #![feature(macro_rules)]\n-#![macro_escape]\n \n #[deprecated]\n pub fn deprecated() {}"}]}