{"sha": "ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlM2Y2YjAxNWVjM2Y3NmUyZDc4NGZlN2NiMjNiOGJiYjkxZmFhNDM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-19T15:41:15Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-19T15:41:15Z"}, "message": "dropck: remove unnecessary call to cloned()", "tree": {"sha": "2b0a51c0994868332b3fb1a7ef42a1762652a6fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b0a51c0994868332b3fb1a7ef42a1762652a6fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43", "html_url": "https://github.com/rust-lang/rust/commit/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818ed6935dc10f450f5c230b19465b1a323b07ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/818ed6935dc10f450f5c230b19465b1a323b07ea", "html_url": "https://github.com/rust-lang/rust/commit/818ed6935dc10f450f5c230b19465b1a323b07ea"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f506c47371c928abe46059645ed6f5c5316ed861", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=ae3f6b015ec3f76e2d784fe7cb23b8bbb91faa43", "patch": "@@ -227,7 +227,7 @@ pub fn trivial_dropck_outlives<'tcx>(tcx: TyCtxt<'_, '_, 'tcx>, ty: Ty<'tcx>) ->\n \n         // (T1..Tn) and closures have same properties as T1..Tn --\n         // check if *any* of those are trivial.\n-        ty::Tuple(ref tys) => tys.iter().cloned().all(|t| trivial_dropck_outlives(tcx, t)),\n+        ty::Tuple(ref tys) => tys.iter().all(|t| trivial_dropck_outlives(tcx, t)),\n         ty::Closure(def_id, ref substs) => substs\n             .upvar_tys(def_id, tcx)\n             .all(|t| trivial_dropck_outlives(tcx, t)),"}]}