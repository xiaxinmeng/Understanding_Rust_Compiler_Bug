{"sha": "70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMTg1ZmRjYzIyZTJjZDExZWU1ZDYxNzEzOTVmM2MyMjNiYzIxZTY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:27:12Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:49:49Z"}, "message": "rt: remove last_os_error and adjust tests.", "tree": {"sha": "c0accf6f275aa63a08f73df82c7146590d5e54f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0accf6f275aa63a08f73df82c7146590d5e54f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "html_url": "https://github.com/rust-lang/rust/commit/70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "625fac3c7eea1d28a38f0636b100b60dd4be15aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/625fac3c7eea1d28a38f0636b100b60dd4be15aa", "html_url": "https://github.com/rust-lang/rust/commit/625fac3c7eea1d28a38f0636b100b60dd4be15aa"}], "stats": {"total": 73, "additions": 14, "deletions": 59}, "files": [{"sha": "dba3293a228309a093dbf15ef3c9fcccf58817a8", "filename": "src/libcore/os.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -62,7 +62,6 @@ extern mod rustrt {\n     unsafe fn rust_path_exists(path: *libc::c_char) -> c_int;\n     unsafe fn rust_list_files2(&&path: ~str) -> ~[~str];\n     unsafe fn rust_process_wait(handle: c_int) -> c_int;\n-    unsafe fn last_os_error() -> ~str;\n     unsafe fn rust_set_exit_status(code: libc::intptr_t);\n }\n "}, {"sha": "24d7a5b287a46e303521aa978b74a3599ecce498", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -52,50 +52,6 @@ timegm(struct tm *tm)\n }\n #endif\n \n-\n-extern \"C\" CDECL rust_str*\n-last_os_error() {\n-    rust_task *task = rust_get_current_task();\n-\n-    LOG(task, task, \"last_os_error()\");\n-\n-#if defined(__WIN32__)\n-    LPTSTR buf;\n-    DWORD err = GetLastError();\n-    DWORD res = FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n-                              FORMAT_MESSAGE_FROM_SYSTEM |\n-                              FORMAT_MESSAGE_IGNORE_INSERTS,\n-                              NULL, err,\n-                              MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n-                              (LPTSTR) &buf, 0, NULL);\n-    if (!res) {\n-        task->fail();\n-        return NULL;\n-    }\n-#elif defined(_GNU_SOURCE) && !defined(__ANDROID__)\n-    char cbuf[BUF_BYTES];\n-    char *buf = strerror_r(errno, cbuf, sizeof(cbuf));\n-    if (!buf) {\n-        task->fail();\n-        return NULL;\n-    }\n-#else\n-    char buf[BUF_BYTES];\n-    int err = strerror_r(errno, buf, sizeof(buf));\n-    if (err) {\n-        task->fail();\n-        return NULL;\n-    }\n-#endif\n-\n-    rust_str * st = make_str(task->kernel, buf, strlen(buf),\n-                             \"last_os_error\");\n-#ifdef __WIN32__\n-    LocalFree((HLOCAL)buf);\n-#endif\n-    return st;\n-}\n-\n extern \"C\" CDECL rust_str *\n rust_getcwd() {\n     rust_task *task = rust_get_current_task();"}, {"sha": "bccbb8173aad1d388606aa0b48604f06cee49ca0", "filename": "src/test/auxiliary/anon-extern-mod-cross-crate-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -15,5 +15,5 @@\n \n #[crate_type = \"lib\"];\n extern {\n-  fn last_os_error() -> ~str;\n+  fn rust_get_argc() -> libc::c_int;\n }"}, {"sha": "1d9c1cdbf83f0693c864b93a701a7a13207b617e", "filename": "src/test/auxiliary/foreign_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -11,5 +11,5 @@\n #[link(name=\"foreign_lib\", vers=\"0.0\")];\n \n pub extern mod rustrt {\n-    pub fn last_os_error() -> ~str;\n+    pub fn rust_get_argc() -> libc::c_int;\n }"}, {"sha": "8236489834d1163bd3bc256c13122454be3a3f03", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -18,15 +18,15 @@\n extern mod std;\n \n extern mod rustrt {\n-    pub fn last_os_error() -> ~str;\n+    pub fn rust_get_argc() -> libc::c_int;\n }\n \n fn getbig_call_c_and_fail(i: int) {\n     if i != 0 {\n         getbig_call_c_and_fail(i - 1);\n     } else {\n         unsafe {\n-            rustrt::last_os_error();\n+            rustrt::rust_get_argc();\n             die!();\n         }\n     }"}, {"sha": "ed57b32b3d9e557dc7ad3b3f77fa18e0585bdfce", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -15,5 +15,5 @@ extern mod anonexternmod;\n use anonexternmod::*;\n \n pub fn main() {\n-  last_os_error();\n+  rust_get_argc();\n }"}, {"sha": "6e73022fad2e150c7814c5ab23537ce41f63e363", "filename": "src/test/run-pass/anon-extern-mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -11,11 +11,11 @@\n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n extern {\n-    fn last_os_error() -> ~str;\n+    fn rust_get_argc() -> libc::c_int;\n }\n \n pub fn main() {\n     unsafe {\n-        let _ = last_os_error();\n+        let _ = rust_get_argc();\n     }\n }"}, {"sha": "6230fe11363ad48b580e736fd56e2273f46700dc", "filename": "src/test/run-pass/foreign-dupe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -14,18 +14,18 @@\n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n extern mod rustrt1 {\n-    pub fn last_os_error() -> ~str;\n+    pub fn rust_get_argc() -> libc::c_int;\n }\n \n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n extern mod rustrt2 {\n-    pub fn last_os_error() -> ~str;\n+    pub fn rust_get_argc() -> libc::c_int;\n }\n \n pub fn main() {\n     unsafe {\n-        rustrt1::last_os_error();\n-        rustrt2::last_os_error();\n+        rustrt1::rust_get_argc();\n+        rustrt2::rust_get_argc();\n     }\n }"}, {"sha": "69fce9e541e06e49e02e9e74812b661813548cba", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -18,5 +18,5 @@\n extern mod foreign_lib;\n \n pub fn main() {\n-    let foo = foreign_lib::rustrt::last_os_error();\n+    let foo = foreign_lib::rustrt::rust_get_argc();\n }"}, {"sha": "d56d9c30b7066c5ef697e3bf69b62fa006d0365b", "filename": "src/test/run-pass/morestack6.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70185fdcc22e2cd11ee5d6171395f3c223bc21e6/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "patch": "@@ -15,15 +15,15 @@ extern mod rustrt {\n     pub fn debug_get_stk_seg() -> *u8;\n \n     pub fn rust_get_sched_id() -> libc::intptr_t;\n-    pub fn last_os_error() -> ~str;\n+    pub fn rust_get_argc() -> libc::c_int;\n     pub fn rust_getcwd() -> ~str;\n     pub fn get_task_id() -> libc::intptr_t;\n     pub fn rust_sched_threads();\n     pub fn rust_get_task();\n }\n \n fn calllink01() { unsafe { rustrt::rust_get_sched_id(); } }\n-fn calllink02() { unsafe { rustrt::last_os_error(); } }\n+fn calllink02() { unsafe { rustrt::rust_get_argc(); } }\n fn calllink03() { unsafe { rustrt::rust_getcwd(); } }\n fn calllink08() { unsafe { rustrt::get_task_id(); } }\n fn calllink09() { unsafe { rustrt::rust_sched_threads(); } }"}]}