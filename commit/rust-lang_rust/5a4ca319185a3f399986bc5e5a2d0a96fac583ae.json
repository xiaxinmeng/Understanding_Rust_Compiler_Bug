{"sha": "5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNGNhMzE5MTg1YTNmMzk5OTg2YmM1ZTVhMmQwYTk2ZmFjNTgzYWU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-06T02:12:25Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2015-01-06T21:48:33Z"}, "message": "test fallout from isize/usize", "tree": {"sha": "25e545200752d8ff295b93d5482ac68476cd3922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e545200752d8ff295b93d5482ac68476cd3922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "html_url": "https://github.com/rust-lang/rust/commit/5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abcbe276954525bc7902a5a20762a580d5ed4ea2", "url": "https://api.github.com/repos/rust-lang/rust/commits/abcbe276954525bc7902a5a20762a580d5ed4ea2", "html_url": "https://github.com/rust-lang/rust/commit/abcbe276954525bc7902a5a20762a580d5ed4ea2"}], "stats": {"total": 1286, "additions": 644, "deletions": 642}, "files": [{"sha": "d14105326ba9cc2676348e9b2f6bd8541aea62b9", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -834,14 +834,14 @@ impl PrimitiveTypeTable {\n         table.intern(\"f32\",     TyFloat(TyF32));\n         table.intern(\"f64\",     TyFloat(TyF64));\n         table.intern(\"int\",     TyInt(TyIs));\n-        table.intern(\"isize\",     TyInt(TyIs));\n+        table.intern(\"isize\",   TyInt(TyIs));\n         table.intern(\"i8\",      TyInt(TyI8));\n         table.intern(\"i16\",     TyInt(TyI16));\n         table.intern(\"i32\",     TyInt(TyI32));\n         table.intern(\"i64\",     TyInt(TyI64));\n         table.intern(\"str\",     TyStr);\n         table.intern(\"uint\",    TyUint(TyUs));\n-        table.intern(\"usize\",    TyUint(TyUs));\n+        table.intern(\"usize\",   TyUint(TyUs));\n         table.intern(\"u8\",      TyUint(TyU8));\n         table.intern(\"u16\",     TyUint(TyU16));\n         table.intern(\"u32\",     TyUint(TyU32));"}, {"sha": "b21233d71c806c8c708601f73830f044244610cf", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -141,7 +141,7 @@ pub fn int_ty_max(t: IntTy) -> u64 {\n     match t {\n         TyI8 => 0x80u64,\n         TyI16 => 0x8000u64,\n-        TyIs | TyI32 => 0x80000000u64, // actually ni about TyIm\n+        TyIs | TyI32 => 0x80000000u64, // actually ni about TyIs\n         TyI64 => 0x8000000000000000u64\n     }\n }\n@@ -168,7 +168,7 @@ pub fn uint_ty_max(t: UintTy) -> u64 {\n     match t {\n         TyU8 => 0xffu64,\n         TyU16 => 0xffffu64,\n-        TyUs | TyU32 => 0xffffffffu64, // actually ni about TyUm\n+        TyUs | TyU32 => 0xffffffffu64, // actually ni about TyUs\n         TyU64 => 0xffffffffffffffffu64\n     }\n }"}, {"sha": "6581019fdd52061bbc7507059ada4c55fa99b83e", "filename": "src/test/compile-fail/array-not-vector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Farray-not-vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Farray-not-vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray-not-vector.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n fn main() {\n-    let _x: int = [1i, 2, 3]; //~ ERROR expected int, found array of 3 elements\n+    let _x: isize = [1is, 2, 3]; //~ ERROR expected isize, found array of 3 elements\n \n-    let x: &[int] = &[1, 2, 3];\n-    let _y: &int = x; //~ ERROR expected int, found slice\n+    let x: &[isize] = &[1, 2, 3];\n+    let _y: &isize = x; //~ ERROR expected isize, found slice\n }"}, {"sha": "b56f971db7449d32ec246e7582bd7e6faa5f2592", "filename": "src/test/compile-fail/associated-types-eq-3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-eq-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-eq-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-eq-3.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -41,6 +41,6 @@ pub fn baz(x: &Foo<A=Bar>) {\n \n pub fn main() {\n     let a = 42i;\n-    foo1(a); //~ERROR expected uint, found struct Bar\n-    baz(&a); //~ERROR expected uint, found struct Bar\n+    foo1(a); //~ERROR expected usize, found struct Bar\n+    baz(&a); //~ERROR expected usize, found struct Bar\n }"}, {"sha": "13f6dcc9fdee43bc32beb4ba39c1bcbab10ffb26", "filename": "src/test/compile-fail/associated-types-invalid-trait-ref-issue-18865.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-invalid-trait-ref-issue-18865.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-invalid-trait-ref-issue-18865.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-invalid-trait-ref-issue-18865.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -17,8 +17,8 @@ trait Foo<T> {\n }\n \n fn f<T:Foo<int>>(t: &T) {\n-    let u: <T as Foo<uint>>::Bar = t.get_bar();\n-    //~^ ERROR the trait `Foo<uint>` is not implemented for the type `T`\n+    let u: <T as Foo<usize>>::Bar = t.get_bar();\n+    //~^ ERROR the trait `Foo<usize>` is not implemented for the type `T`\n }\n \n fn main() { }"}, {"sha": "9994a0c465f79fabf83cb28f75177df5d1fffeff", "filename": "src/test/compile-fail/associated-types-path-2.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-path-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fassociated-types-path-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-path-2.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -24,29 +24,29 @@ pub fn f2<T: Foo>(a: T) -> T::A {\n }\n \n pub fn f1_int_int() {\n-    f1(2i, 4i);\n-    //~^ ERROR expected uint, found int\n+    f1(2is, 4is);\n+    //~^ ERROR expected usize, found isize\n }\n \n pub fn f1_int_uint() {\n-    f1(2i, 4u);\n+    f1(2is, 4us);\n }\n \n pub fn f1_uint_uint() {\n-    f1(2u, 4u);\n+    f1(2us, 4us);\n     //~^ ERROR the trait `Foo` is not implemented\n     //~| ERROR the trait `Foo` is not implemented\n }\n \n pub fn f1_uint_int() {\n-    f1(2u, 4i);\n+    f1(2us, 4is);\n     //~^ ERROR the trait `Foo` is not implemented\n     //~| ERROR the trait `Foo` is not implemented\n }\n \n pub fn f2_int() {\n-    let _: int = f2(2i);\n-    //~^ ERROR expected `int`, found `uint`\n+    let _: int = f2(2is);\n+    //~^ ERROR expected `isize`, found `usize`\n }\n \n pub fn main() { }"}, {"sha": "bbe5af1b51675674a88c84158f8d6605b7a177e8", "filename": "src/test/compile-fail/autoderef-full-lval.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,24 +9,24 @@\n // except according to those terms.\n \n struct clam {\n-    x: Box<int>,\n-    y: Box<int>,\n+    x: Box<isize>,\n+    y: Box<isize>,\n }\n \n struct fish {\n-    a: Box<int>,\n+    a: Box<isize>,\n }\n \n fn main() {\n     let a: clam = clam{x: box 1, y: box 2};\n     let b: clam = clam{x: box 10, y: box 20};\n-    let z: int = a.x + b.y; //~ ERROR binary operation `+` cannot be applied to type `Box<int>`\n+    let z: isize = a.x + b.y; //~ ERROR binary operation `+` cannot be applied to type `Box<isize>`\n     println!(\"{}\", z);\n     assert_eq!(z, 21);\n     let forty: fish = fish{a: box 40};\n     let two: fish = fish{a: box 2};\n     let answer: int = forty.a + two.a;\n-    //~^ ERROR binary operation `+` cannot be applied to type `Box<int>`\n+    //~^ ERROR binary operation `+` cannot be applied to type `Box<isize>`\n     println!(\"{}\", answer);\n     assert_eq!(answer, 42);\n }"}, {"sha": "2450f22669a5133045a24f23365b048521f6be0d", "filename": "src/test/compile-fail/bad-const-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:expected `collections::string::String`, found `int`\n+// error-pattern:expected `collections::string::String`, found `isize`\n \n-static i: String = 10i;\n+static i: String = 10is;\n fn main() { println!(\"{}\", i); }"}, {"sha": "0067121e6103a14d855e172e0bc2c42ebb52bfa9", "filename": "src/test/compile-fail/binop-logic-int.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:`&&` cannot be applied to type `int`\n+// error-pattern:`&&` cannot be applied to type `isize`\n \n-fn main() { let x = 1i && 2i; }\n+fn main() { let x = 1is && 2is; }"}, {"sha": "8d48ede0e154308afc4388799985dcf596f30181", "filename": "src/test/compile-fail/coercion-slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,5 +11,5 @@\n // Tests that we forbid coercion from `[T; n]` to `&[T]`\n \n fn main() {\n-    let _: &[int] = [0i]; //~ERROR: mismatched types: expected `&[int]`, found `[int; 1]`\n+    let _: &[isize] = [0is]; //~ERROR: mismatched types: expected `&[isize]`, found `[isize; 1]`\n }"}, {"sha": "e70db87a39a4176007cf87e4061641b78debf4a0", "filename": "src/test/compile-fail/dst-bad-coerce1.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,11 +18,11 @@ struct Foo;\n trait Bar {}\n \n pub fn main() {\n-    // With a vec of ints.\n+    // With a vec of isize.\n     let f1 = Fat { ptr: [1, 2, 3] };\n-    let f2: &Fat<[int; 3]> = &f1;\n-    let f3: &Fat<[uint]> = f2;\n-    //~^ ERROR mismatched types: expected `&Fat<[uint]>`, found `&Fat<[int; 3]>`\n+    let f2: &Fat<[isize; 3]> = &f1;\n+    let f3: &Fat<[usize]> = f2;\n+    //~^ ERROR mismatched types: expected `&Fat<[usize]>`, found `&Fat<[isize; 3]>`\n \n     // With a trait.\n     let f1 = Fat { ptr: Foo };"}, {"sha": "8e81eacae921ea90f4b28edd6ced111297fb8f31", "filename": "src/test/compile-fail/dst-bad-coerce4.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdst-bad-coerce4.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -15,8 +15,8 @@ struct Fat<T: ?Sized> {\n }\n \n pub fn main() {\n-    // With a vec of ints.\n-    let f1: &Fat<[int]> = &Fat { ptr: [1, 2, 3] };\n-    let f2: &Fat<[int; 3]> = f1;\n-    //~^ ERROR mismatched types: expected `&Fat<[int; 3]>`, found `&Fat<[int]>`\n+    // With a vec of isizes.\n+    let f1: &Fat<[isize]> = &Fat { ptr: [1, 2, 3] };\n+    let f2: &Fat<[isize; 3]> = f1;\n+    //~^ ERROR mismatched types: expected `&Fat<[isize; 3]>`, found `&Fat<[isize]>`\n }"}, {"sha": "a65ca8b84f89341c6a1edbad3c5829fb45e01d0a", "filename": "src/test/compile-fail/dst-sized-trait-param.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-sized-trait-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fdst-sized-trait-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdst-sized-trait-param.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -14,10 +14,10 @@\n \n trait Foo<T> : Sized { fn take(self, x: &T) { } } // Note: T is sized\n \n-impl Foo<[int]> for uint { }\n-//~^ ERROR the trait `core::kinds::Sized` is not implemented for the type `[int]`\n+impl Foo<[isize]> for uint { }\n+//~^ ERROR the trait `core::kinds::Sized` is not implemented for the type `[isize]`\n \n-impl Foo<int> for [uint] { }\n-//~^ ERROR the trait `core::kinds::Sized` is not implemented for the type `[uint]`\n+impl Foo<isize> for [usize] { }\n+//~^ ERROR the trait `core::kinds::Sized` is not implemented for the type `[usize]`\n \n pub fn main() { }"}, {"sha": "06e8412ddaa23289073a5d5c086c2a8b8b332c5c", "filename": "src/test/compile-fail/fn-trait-formatting.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffn-trait-formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffn-trait-formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-trait-formatting.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,15 +10,15 @@\n \n #![feature(unboxed_closures)]\n \n-fn needs_fn<F>(x: F) where F: Fn(int) -> int {}\n+fn needs_fn<F>(x: F) where F: Fn(isize) -> isize {}\n \n fn main() {\n-    let _: () = (box |:_: int| {}) as Box<FnOnce(int)>; //~ ERROR object-safe\n-    //~^ ERROR Box<core::ops::FnOnce(int)>\n-    let _: () = (box |&:_: int, int| {}) as Box<Fn(int, int)>;\n-    //~^ ERROR Box<core::ops::Fn(int, int)>\n-    let _: () = (box |&mut:| -> int unimplemented!()) as Box<FnMut() -> int>;\n-    //~^ ERROR Box<core::ops::FnMut() -> int>\n+    let _: () = (box |:_: isize| {}) as Box<FnOnce(isize)>; //~ ERROR object-safe\n+    //~^ ERROR Box<core::ops::FnOnce(isize)>\n+    let _: () = (box |&:_: isize, isize| {}) as Box<Fn(isize, isize)>;\n+    //~^ ERROR Box<core::ops::Fn(isize, isize)>\n+    let _: () = (box |&mut:| -> isize unimplemented!()) as Box<FnMut() -> isize>;\n+    //~^ ERROR Box<core::ops::FnMut() -> isize>\n \n-    needs_fn(1i); //~ ERROR `core::ops::Fn(int) -> int`\n+    needs_fn(1i); //~ ERROR `core::ops::Fn(isize) -> isize`\n }"}, {"sha": "5ab946a53e5cc8490e000d9b5af5b6e910e97ec6", "filename": "src/test/compile-fail/fully-qualified-type-name1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,7 +11,7 @@\n // Test that we use fully-qualified type names in error messages.\n \n fn main() {\n-    let x: Option<uint>;\n+    let x: Option<usize>;\n     x = 5;\n-    //~^ ERROR mismatched types: expected `core::option::Option<uint>`\n+    //~^ ERROR mismatched types: expected `core::option::Option<usize>`\n }"}, {"sha": "9250444c3e6cd2ba69e4e0adbce1fa7b15d2b60e", "filename": "src/test/compile-fail/fully-qualified-type-name4.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name4.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -12,9 +12,9 @@\n \n use std::option::Option;\n \n-fn bar(x: uint) -> Option<uint> {\n+fn bar(x: usize) -> Option<usize> {\n     return x;\n-    //~^ ERROR mismatched types: expected `core::option::Option<uint>`\n+    //~^ ERROR mismatched types: expected `core::option::Option<usize>`\n }\n \n fn main() {"}, {"sha": "5769b9d7932c03d719bcea7bd02fcdfca39a8efd", "filename": "src/test/compile-fail/generic-type-params-name-repr.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-name-repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-name-repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-name-repr.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,22 +18,22 @@ struct HashMap<K, V, H = Hash<K>>;\n \n fn main() {\n     // Ensure that the printed type doesn't include the default type params...\n-    let _: Foo<int> = ();\n-    //~^ ERROR mismatched types: expected `Foo<int>`, found `()`\n+    let _: Foo<isize> = ();\n+    //~^ ERROR mismatched types: expected `Foo<isize>`, found `()`\n \n     // ...even when they're present, but the same types as the defaults.\n-    let _: Foo<int, B, C> = ();\n-    //~^ ERROR mismatched types: expected `Foo<int>`, found `()`\n+    let _: Foo<isize, B, C> = ();\n+    //~^ ERROR mismatched types: expected `Foo<isize>`, found `()`\n \n     // Including cases where the default is using previous type params.\n-    let _: HashMap<String, int> = ();\n-    //~^ ERROR mismatched types: expected `HashMap<collections::string::String, int>`, found `()`\n-    let _: HashMap<String, int, Hash<String>> = ();\n-    //~^ ERROR mismatched types: expected `HashMap<collections::string::String, int>`, found `()`\n+    let _: HashMap<String, isize> = ();\n+    //~^ ERROR mismatched types: expected `HashMap<collections::string::String, isize>`, found `()`\n+    let _: HashMap<String, isize, Hash<String>> = ();\n+    //~^ ERROR mismatched types: expected `HashMap<collections::string::String, isize>`, found `()`\n \n     // But not when there's a different type in between.\n-    let _: Foo<A, int, C> = ();\n-    //~^ ERROR mismatched types: expected `Foo<A, int>`, found `()`\n+    let _: Foo<A, isize, C> = ();\n+    //~^ ERROR mismatched types: expected `Foo<A, isize>`, found `()`\n \n     // And don't print <> at all when there's just defaults.\n     let _: Foo<A, B, C> = ();"}, {"sha": "a1ec4a739e8cea03dbd55880b2eaf33d46eef86e", "filename": "src/test/compile-fail/hrtb-just-for-static.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-just-for-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-just-for-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhrtb-just-for-static.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -16,22 +16,22 @@ trait Foo<X> {\n }\n \n fn want_hrtb<T>()\n-    where T : for<'a> Foo<&'a int>\n+    where T : for<'a> Foo<&'a isize>\n {\n }\n \n-// AnyInt implements Foo<&'a int> for any 'a, so it is a match.\n+// AnyInt implements Foo<&'a isize> for any 'a, so it is a match.\n struct AnyInt;\n-impl<'a> Foo<&'a int> for AnyInt { }\n+impl<'a> Foo<&'a isize> for AnyInt { }\n fn give_any() {\n     want_hrtb::<AnyInt>()\n }\n \n-// StaticInt only implements Foo<&'static int>, so it is an error.\n+// StaticInt only implements Foo<&'static isize>, so it is an error.\n struct StaticInt;\n-impl Foo<&'static int> for StaticInt { }\n+impl Foo<&'static isize> for StaticInt { }\n fn give_static() {\n-    want_hrtb::<StaticInt>() //~ ERROR `for<'a> Foo<&'a int>` is not implemented\n+    want_hrtb::<StaticInt>() //~ ERROR `for<'a> Foo<&'a isize>` is not implemented\n }\n \n fn main() { }"}, {"sha": "e8ecc0608fc4aeb1081bf617912250490c9123eb", "filename": "src/test/compile-fail/hrtb-perfect-forwarding.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-perfect-forwarding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-perfect-forwarding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhrtb-perfect-forwarding.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -30,36 +30,36 @@ impl<'a,X,F> Bar<X> for &'a mut F\n }\n \n fn no_hrtb<'b,T>(mut t: T)\n-    where T : Bar<&'b int>\n+    where T : Bar<&'b isize>\n {\n-    // OK -- `T : Bar<&'b int>`, and thus the impl above ensures that\n-    // `&mut T : Bar<&'b int>`.\n+    // OK -- `T : Bar<&'b isize>`, and thus the impl above ensures that\n+    // `&mut T : Bar<&'b isize>`.\n     no_hrtb(&mut t);\n }\n \n fn bar_hrtb<T>(mut t: T)\n-    where T : for<'b> Bar<&'b int>\n+    where T : for<'b> Bar<&'b isize>\n {\n-    // OK -- `T : for<'b> Bar<&'b int>`, and thus the impl above\n-    // ensures that `&mut T : for<'b> Bar<&'b int>`.  This is an\n+    // OK -- `T : for<'b> Bar<&'b isize>`, and thus the impl above\n+    // ensures that `&mut T : for<'b> Bar<&'b isize>`.  This is an\n     // example of a \"perfect forwarding\" impl.\n     bar_hrtb(&mut t);\n }\n \n fn foo_hrtb_bar_not<'b,T>(mut t: T)\n-    where T : for<'a> Foo<&'a int> + Bar<&'b int>\n+    where T : for<'a> Foo<&'a isize> + Bar<&'b isize>\n {\n     // Not OK -- The forwarding impl for `Foo` requires that `Bar` also\n     // be implemented. Thus to satisfy `&mut T : for<'a> Foo<&'a\n-    // int>`, we require `T : for<'a> Bar<&'a int>`, but the where\n-    // clause only specifies `T : Bar<&'b int>`.\n-    foo_hrtb_bar_not(&mut t); //~ ERROR `for<'a> Bar<&'a int>` is not implemented for the type `T`\n+    // isize>`, we require `T : for<'a> Bar<&'a isize>`, but the where\n+    // clause only specifies `T : Bar<&'b isize>`.\n+    foo_hrtb_bar_not(&mut t); //~ ERROR `for<'a> Bar<&'a isize>` is not implemented for the type `T`\n }\n \n fn foo_hrtb_bar_hrtb<T>(mut t: T)\n-    where T : for<'a> Foo<&'a int> + for<'b> Bar<&'b int>\n+    where T : for<'a> Foo<&'a isize> + for<'b> Bar<&'b isize>\n {\n-    // OK -- now we have `T : for<'b> Bar&'b int>`.\n+    // OK -- now we have `T : for<'b> Bar&'b isize>`.\n     foo_hrtb_bar_hrtb(&mut t);\n }\n "}, {"sha": "7bb74d6b03a33e97b4606a7082d9823aaef9075e", "filename": "src/test/compile-fail/hrtb-type-outlives.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-type-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fhrtb-type-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhrtb-type-outlives.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -17,7 +17,7 @@ trait Foo<X> {\n }\n \n fn want_foo<T>()\n-    where T : for<'a> Foo<&'a int>\n+    where T : for<'a> Foo<&'a isize>\n {\n }\n \n@@ -28,16 +28,16 @@ struct SomeStruct<X> {\n     x: X\n }\n \n-impl<'a,X> Foo<&'a int> for SomeStruct<X>\n+impl<'a,X> Foo<&'a isize> for SomeStruct<X>\n     where X : 'a\n {\n }\n \n fn one() {\n     // In fact there is no good reason for this to be an error, but\n     // whatever, I'm mostly concerned it doesn't ICE right now:\n-    want_foo::<SomeStruct<uint>>();\n-    //~^ ERROR requirement `for<'a> uint : 'a` is not satisfied\n+    want_foo::<SomeStruct<usize>>();\n+    //~^ ERROR requirement `for<'a> usize : 'a` is not satisfied\n }\n \n ///////////////////////////////////////////////////////////////////////////\n@@ -47,13 +47,13 @@ struct AnotherStruct<X> {\n     x: X\n }\n \n-impl<'a,X:'a> Foo<&'a int> for AnotherStruct<X>\n+impl<'a,X:'a> Foo<&'a isize> for AnotherStruct<X>\n {\n }\n \n fn two() {\n-    want_foo::<AnotherStruct<uint>>();\n-    //~^ ERROR requirement `for<'a> uint : 'a` is not satisfied\n+    want_foo::<AnotherStruct<usize>>();\n+    //~^ ERROR requirement `for<'a> usize : 'a` is not satisfied\n }\n \n fn main() { }"}, {"sha": "be54554a3c02ff7d844bfefb50dc7a1346ab7f8e", "filename": "src/test/compile-fail/if-branch-types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fif-branch-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fif-branch-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-branch-types.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n fn main() {\n-    let x = if true { 10i } else { 10u };\n-    //~^ ERROR if and else have incompatible types: expected `int`, found `uint`\n+    let x = if true { 10is } else { 10us };\n+    //~^ ERROR if and else have incompatible types: expected `isize`, found `usize`\n }"}, {"sha": "832cc57bd24df396049d650659ff09a7d55a335c", "filename": "src/test/compile-fail/issue-10176.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn f() -> int {\n+fn f() -> isize {\n     (return 1, return 2)\n-//~^ ERROR mismatched types: expected `int`, found `(_, _)` (expected int, found tuple)\n+//~^ ERROR mismatched types: expected `isize`, found `(_, _)` (expected isize, found tuple)\n }\n \n fn main() {}"}, {"sha": "2913ddf395fbb8928007e4e759ba6b8191f2df29", "filename": "src/test/compile-fail/issue-10991.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-10991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-10991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10991.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,5 +10,5 @@\n \n fn main() {\n     let nil = ();\n-    let _t = nil as uint; //~ ERROR: cast from nil: `()` as `uint`\n+    let _t = nil as usize; //~ ERROR: cast from nil: `()` as `usize`\n }"}, {"sha": "39957a242268f885d4fc40d6a480e55846c1c538", "filename": "src/test/compile-fail/issue-12997-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -12,6 +12,6 @@\n \n //! Test that makes sure wrongly-typed bench functions are rejected\n \n-// error-pattern:expected &-ptr, found int\n+// error-pattern:expected &-ptr, found isize\n #[bench]\n-fn bar(x: int) { }\n+fn bar(x: isize) { }"}, {"sha": "8f50786405283db62c4defc55dc76215a7c7c1bf", "filename": "src/test/compile-fail/issue-13058.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -12,15 +12,15 @@ use std::iter::{Range,range};\n \n trait Itble<'r, T, I: Iterator<Item=T>> { fn iter(&'r self) -> I; }\n \n-impl<'r> Itble<'r, uint, Range<uint>> for (uint, uint) {\n-    fn iter(&'r self) -> Range<uint> {\n+impl<'r> Itble<'r, usize, Range<usize>> for (usize, usize) {\n+    fn iter(&'r self) -> Range<usize> {\n         let &(min, max) = self;\n         range(min, max)\n     }\n }\n \n-fn check<'r, I: Iterator<Item=uint>, T: Itble<'r, uint, I>>(cont: &T) -> bool\n-//~^ HELP as shown: fn check<'r, I: Iterator<Item = uint>, T: Itble<'r, uint, I>>(cont: &'r T)\n+fn check<'r, I: Iterator<Item=usize>, T: Itble<'r, usize, I>>(cont: &T) -> bool\n+//~^ HELP as shown: fn check<'r, I: Iterator<Item = usize>, T: Itble<'r, usize, I>>(cont: &'r T)\n {\n     let cont_iter = cont.iter();\n //~^ ERROR cannot infer an appropriate lifetime for autoref due to conflicting requirements\n@@ -35,5 +35,5 @@ fn check<'r, I: Iterator<Item=uint>, T: Itble<'r, uint, I>>(cont: &T) -> bool\n \n fn main() {\n     check((3u, 5u));\n-//~^ ERROR mismatched types: expected `&_`, found `(uint, uint)` (expected &-ptr, found tuple)\n+//~^ ERROR mismatched types: expected `&_`, found `(usize, usize)` (expected &-ptr, found tuple)\n }"}, {"sha": "25e64e070f40b6325651f0d598c0e039d8341718", "filename": "src/test/compile-fail/issue-13359.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13359.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13359.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13359.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -14,8 +14,8 @@ fn bar(_s: u32) { }\n \n fn main() {\n     foo(1*(1 as int));\n-    //~^ ERROR: mismatched types: expected `i16`, found `int` (expected i16, found int)\n+    //~^ ERROR: mismatched types: expected `i16`, found `isize` (expected i16, found isize)\n \n     bar(1*(1 as uint));\n-    //~^ ERROR: mismatched types: expected `u32`, found `uint` (expected u32, found uint)\n+    //~^ ERROR: mismatched types: expected `u32`, found `usize` (expected u32, found usize)\n }"}, {"sha": "7d554545b5ed27c94fbbc9b786a7794eff48ff92", "filename": "src/test/compile-fail/issue-13466.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13466.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-13466.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13466.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -14,8 +14,8 @@ pub fn main() {\n     // The expected arm type `Option<T>` has one type parameter, while\n     // the actual arm `Result<T, E>` has two. typeck should not be\n     // tricked into looking up a non-existing second type parameter.\n-    let _x: uint = match Some(1u) {\n-        Ok(u) => u, //~ ERROR  mismatched types: expected `core::option::Option<uint>`\n-        Err(e) => panic!(e)  //~ ERROR mismatched types: expected `core::option::Option<uint>`\n+    let _x: usize = match Some(1us) {\n+        Ok(u) => u, //~ ERROR  mismatched types: expected `core::option::Option<usize>`\n+        Err(e) => panic!(e)  //~ ERROR mismatched types: expected `core::option::Option<usize>`\n     };\n }"}, {"sha": "142fecc31fec139ff90cf3b6e9fab5dcaca3dbb5", "filename": "src/test/compile-fail/issue-14915.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-14915.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-14915.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14915.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn main() {\n-    let x: Box<int> = box 0;\n+    let x: Box<isize> = box 0;\n \n-    println!(\"{}\", x + 1); //~ ERROR binary operation `+` cannot be applied to type `Box<int>`\n+    println!(\"{}\", x + 1); //~ ERROR binary operation `+` cannot be applied to type `Box<isize>`\n }"}, {"sha": "c886c97a63607bc43143181b5f06e2f8336bb1ed", "filename": "src/test/compile-fail/issue-16250.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-16250.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-16250.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16250.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,7 +11,7 @@\n #![deny(warnings)]\n \n extern {\n-    pub fn foo(x: (int)); //~ ERROR found rust type `int` in foreign module\n+    pub fn foo(x: (isize)); //~ ERROR found rust type `isize` in foreign module\n }\n \n fn main() {"}, {"sha": "6ae4fbca8b04ccfd175bf339f74c25647ce51c13", "filename": "src/test/compile-fail/issue-17441.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,16 +9,16 @@\n // except according to those terms.\n \n fn main() {\n-    let _foo = &[1u, 2] as [uint];\n-    //~^ ERROR cast to unsized type: `&[uint; 2]` as `[uint]`\n-    //~^^ HELP consider using an implicit coercion to `&[uint]` instead\n+    let _foo = &[1u, 2] as [usize];\n+    //~^ ERROR cast to unsized type: `&[usize; 2]` as `[usize]`\n+    //~^^ HELP consider using an implicit coercion to `&[usize]` instead\n     let _bar = box 1u as std::fmt::Show;\n-    //~^ ERROR cast to unsized type: `Box<uint>` as `core::fmt::Show`\n+    //~^ ERROR cast to unsized type: `Box<usize>` as `core::fmt::Show`\n     //~^^ HELP did you mean `Box<core::fmt::Show>`?\n     let _baz = 1u as std::fmt::Show;\n-    //~^ ERROR cast to unsized type: `uint` as `core::fmt::Show`\n+    //~^ ERROR cast to unsized type: `usize` as `core::fmt::Show`\n     //~^^ HELP consider using a box or reference as appropriate\n-    let _quux = [1u, 2] as [uint];\n-    //~^ ERROR cast to unsized type: `[uint; 2]` as `[uint]`\n+    let _quux = [1u, 2] as [usize];\n+    //~^ ERROR cast to unsized type: `[usize; 2]` as `[usize]`\n     //~^^ HELP consider using a box or reference as appropriate\n }"}, {"sha": "011a9c1777638b66b3ac8aa08736f9846745b90f", "filename": "src/test/compile-fail/issue-17444.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17444.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -13,6 +13,6 @@ enum Test {\n }\n \n fn main() {\n-    let _x = Test::Foo as *const int;\n-    //~^ ERROR illegal cast; cast through an integer first: `Test` as `*const int`\n+    let _x = Test::Foo as *const isize;\n+    //~^ ERROR illegal cast; cast through an integer first: `Test` as `*const isize`\n }"}, {"sha": "589f1cf44bf16778763dafc06bd45b0087e9847c", "filename": "src/test/compile-fail/issue-17651.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17651.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17651.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17651.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -12,7 +12,7 @@\n // and rejected.\n \n fn main() {\n-    (|&:| box *[0u].as_slice())();\n+    (|&:| box *[0us].as_slice())();\n     //~^ ERROR cannot move out of dereference\n-    //~^^ ERROR cannot move a value of type [uint]\n+    //~^^ ERROR cannot move a value of type [usize]\n }"}, {"sha": "1418cdf403993f7865ee094ca5a1a3094f14db46", "filename": "src/test/compile-fail/issue-17905.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -13,15 +13,15 @@ struct Pair<T, V> (T, V);\n \n impl Pair<\n     &str, //~ ERROR missing lifetime specifier\n-    int\n+    isize\n > {\n-    fn say(self: &Pair<&str, int>) {\n-//~^ ERROR mismatched types: expected `Pair<&'static str, int>`, found `Pair<&str, int>`\n+    fn say(self: &Pair<&str, isize>) {\n+//~^ ERROR mismatched types: expected `Pair<&'static str, isize>`, found `Pair<&str, isize>`\n         println!(\"{}\", self);\n     }\n }\n \n fn main() {\n-    let result = &Pair(\"shane\", 1i);\n+    let result = &Pair(\"shane\", 1is);\n     result.say();\n }"}, {"sha": "a662e9ca98ee812086e338e874234fd0a00a1f91", "filename": "src/test/compile-fail/issue-18611.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn add_state(op: <int as HasState>::State) {\n-//~^ ERROR the trait `HasState` is not implemented for the type `int`\n+fn add_state(op: <isize as HasState>::State) {\n+//~^ ERROR the trait `HasState` is not implemented for the type `isize`\n }\n \n trait HasState {"}, {"sha": "1943f1e5a195481daff5c649382706d4ee9e506f", "filename": "src/test/compile-fail/issue-4517.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn bar(int_param: int) {}\n+fn bar(int_param: usize) {}\n \n fn main() {\n-    let foo: [u8; 4] = [1u8; 4u];\n+    let foo: [u8; 4] = [1u8; 4us];\n     bar(foo);\n-    //~^ ERROR mismatched types: expected `int`, found `[u8; 4]`\n-    //         (expected int, found vector)\n+    //~^ ERROR mismatched types: expected `usize`, found `[u8; 4]`\n+    //         (expected usize, found vector)\n }"}, {"sha": "88933c0add9292b828c610d6559c72a385f78433", "filename": "src/test/compile-fail/issue-4968.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,9 +10,9 @@\n \n // Regression test for issue #4968\n \n-const A: (int,int) = (4,2);\n+const A: (isize,isize) = (4,2);\n fn main() {\n     match 42 { A => () }\n-    //~^ ERROR mismatched types: expected `_`, found `(int, int)`\n+    //~^ ERROR mismatched types: expected `_`, found `(isize, isize)`\n     //         (expected integral variable, found tuple)\n }"}, {"sha": "0eaa40efca22bda731c6b7ae5a66ba0d19fac370", "filename": "src/test/compile-fail/issue-5239-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,6 +11,6 @@\n // Regression test for issue #5239\n \n fn main() {\n-    let x = |&: ref x: int| -> int { x += 1; };\n-    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&int`\n+    let x = |&: ref x: isize| -> isize { x += 1; };\n+    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&isize`\n }"}, {"sha": "0d5156956e56636b6e5f2bc25935055d0631cdbd", "filename": "src/test/compile-fail/issue-7575.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,43 +11,43 @@\n // Test the mechanism for warning about possible missing `self` declarations.\n \n trait CtxtFn {\n-    fn f8(self, uint) -> uint;\n-    fn f9(uint) -> uint; //~ NOTE candidate\n+    fn f8(self, usize) -> usize;\n+    fn f9(usize) -> usize; //~ NOTE candidate\n }\n \n trait OtherTrait {\n-    fn f9(uint) -> uint; //~ NOTE candidate\n+    fn f9(usize) -> usize; //~ NOTE candidate\n }\n \n // Note: this trait is not implemented, but we can't really tell\n // whether or not an impl would match anyhow without a self\n-// declaration to match against, so we wind up printing it as a\n+// declaration to match against, so we wind up prisizeing it as a\n // candidate. This seems not unreasonable -- perhaps the user meant to\n // implement it, after all.\n trait UnusedTrait {\n-    fn f9(uint) -> uint; //~ NOTE candidate\n+    fn f9(usize) -> usize; //~ NOTE candidate\n }\n \n-impl CtxtFn for uint {\n-    fn f8(self, i: uint) -> uint {\n+impl CtxtFn for usize {\n+    fn f8(self, i: usize) -> usize {\n         i * 4u\n     }\n \n-    fn f9(i: uint) -> uint {\n+    fn f9(i: usize) -> usize {\n         i * 4u\n     }\n }\n \n-impl OtherTrait for uint {\n-    fn f9(i: uint) -> uint {\n+impl OtherTrait for usize {\n+    fn f9(i: usize) -> usize {\n         i * 8u\n     }\n }\n \n-struct MyInt(int);\n+struct Myisize(isize);\n \n-impl MyInt {\n-    fn fff(i: int) -> int { //~ NOTE candidate\n+impl Myisize {\n+    fn fff(i: isize) -> isize { //~ NOTE candidate\n         i\n     }\n }\n@@ -64,17 +64,17 @@ impl ManyImplTrait for String {\n     }\n }\n \n-impl ManyImplTrait for uint {}\n-impl ManyImplTrait for int {}\n+impl ManyImplTrait for usize {}\n+impl ManyImplTrait for isize {}\n impl ManyImplTrait for char {}\n-impl ManyImplTrait for MyInt {}\n+impl ManyImplTrait for Myisize {}\n \n-fn no_param_bound(u: uint, m: MyInt) -> uint {\n+fn no_param_bound(u: usize, m: Myisize) -> usize {\n     u.f8(42) + u.f9(342) + m.fff(42)\n-            //~^ ERROR type `uint` does not implement any method in scope named `f9`\n+            //~^ ERROR type `usize` does not implement any method in scope named `f9`\n             //~^^ NOTE found defined static methods, maybe a `self` is missing?\n-                        //~^^^ ERROR type `MyInt` does not implement any method in scope named `fff`\n-                        //~^^^^ NOTE found defined static methods, maybe a `self` is missing?\n+            //~^^^ ERROR type `Myisize` does not implement any method in scope named `fff`\n+            //~^^^^ NOTE found defined static methods, maybe a `self` is missing?\n }\n \n fn param_bound<T: ManyImplTrait>(t: T) -> bool {"}, {"sha": "e459a243cc8a505b04422ee235035d9110a0a19a", "filename": "src/test/compile-fail/issue-7867.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,10 +18,10 @@ fn main() {\n         _ => ()\n     }\n \n-    match &Some(42i) {\n-        Some(x) => (), //~ ERROR expected `&core::option::Option<int>`,\n+    match &Some(42is) {\n+        Some(x) => (), //~ ERROR expected `&core::option::Option<isize>`,\n                        //        found `core::option::Option<_>`\n-        None => ()     //~ ERROR expected `&core::option::Option<int>`,\n+        None => ()     //~ ERROR expected `&core::option::Option<isize>`,\n                        //        found `core::option::Option<_>`\n     }\n }"}, {"sha": "3f9e92afba2b178915617868092faabd73f49594", "filename": "src/test/compile-fail/issue-8761.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-8761.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-8761.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8761.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,9 +10,9 @@\n \n enum Foo {\n     A = 1i64,\n-    //~^ ERROR mismatched types: expected `int`, found `i64`\n+    //~^ ERROR mismatched types: expected `isize`, found `i64`\n     B = 2u8\n-    //~^ ERROR mismatched types: expected `int`, found `u8`\n+    //~^ ERROR mismatched types: expected `isize`, found `u8`\n }\n \n fn main() {}"}, {"sha": "b7537f2a93251d5d5efc05e97a3b6d7ba2cb27fa", "filename": "src/test/compile-fail/issue-9575.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[start]\n-fn start(argc: int, argv: *const *const u8, crate_map: *const u8) -> int {\n+fn start(argc: isize, argv: *const *const u8, crate_map: *const u8) -> isize {\n     //~^ ERROR incorrect number of function parameters\n-    0\n+   0\n }"}, {"sha": "7aafeced3a6f45edcc533230ff28abf29b4876fd", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -19,8 +19,8 @@ impl<K, V> Map<K, V> for HashMap<K, V> {}\n // Test that trait types printed in error msgs include the type arguments.\n \n fn main() {\n-    let x: Box<HashMap<int, int>> = box HashMap::new();\n-    let x: Box<Map<int, int>> = x;\n-    let y: Box<Map<uint, int>> = box x;\n-    //~^ ERROR the trait `Map<uint, int>` is not implemented\n+    let x: Box<HashMap<isize, isize>> = box HashMap::new();\n+    let x: Box<Map<isize, isize>> = x;\n+    let y: Box<Map<usize, isize>> = box x;\n+    //~^ ERROR the trait `Map<usize, isize>` is not implemented\n }"}, {"sha": "178b73199766e2a49bb2cab3c3339cdd1ac0de2e", "filename": "src/test/compile-fail/method-self-arg-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -20,5 +20,5 @@ fn main() {\n     let x = Foo;\n     Foo::bar(x); //~ERROR mismatched types: expected `&Foo`, found `Foo`\n     Foo::bar(&&x); //~ERROR mismatched types: expected `&Foo`, found `&&Foo`\n-    Foo::bar(&42i); //~ERROR mismatched types: expected `&Foo`, found `&int`\n+    Foo::bar(&42is); //~ERROR mismatched types: expected `&Foo`, found `&isize`\n }"}, {"sha": "6a574f07e9d94596d27dd6dde7cb916b0966272a", "filename": "src/test/compile-fail/mut-pattern-mismatched.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmut-pattern-mismatched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fmut-pattern-mismatched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmut-pattern-mismatched.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,18 +9,18 @@\n // except according to those terms.\n \n fn main() {\n-    let foo = &mut 1i;\n+    let foo = &mut 1is;\n \n     // (separate lines to ensure the spans are accurate)\n \n     // SNAP b2085d9 uncomment this after the next snapshot\n     // NOTE(stage0) just in case tidy doesn't check snap's in tests\n-    // let &_ // ~ ERROR expected `&mut int`, found `&_`\n+    // let &_ // ~ ERROR expected `&mut isize`, found `&_`\n     //    = foo;\n     let &mut _ = foo;\n \n-    let bar = &1i;\n+    let bar = &1is;\n     let &_ = bar;\n-    let &mut _ //~ ERROR expected `&int`, found `&mut _`\n+    let &mut _ //~ ERROR expected `&isize`, found `&mut _`\n          = bar;\n }"}, {"sha": "4081792b6544ae37d636114f83fc87b81aba654d", "filename": "src/test/compile-fail/noexporttypeexe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,5 +18,5 @@ fn main() {\n     // because the def_id associated with the type was\n     // not convertible to a path.\n   let x: int = noexporttypelib::foo();\n-    //~^ ERROR expected `int`, found `core::option::Option<int>`\n+    //~^ ERROR expected `isize`, found `core::option::Option<isize>`\n }"}, {"sha": "b33b89be35d828970eed1d1293d51865c28693d2", "filename": "src/test/compile-fail/pptypedef.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fpptypedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fpptypedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpptypedef.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -11,9 +11,9 @@\n fn let_in<T, F>(x: T, f: F) where F: FnOnce(T) {}\n \n fn main() {\n-    let_in(3u, |i| { assert!(i == 3i); });\n-    //~^ ERROR expected `uint`, found `int`\n+    let_in(3u, |i| { assert!(i == 3is); });\n+    //~^ ERROR expected `usize`, found `isize`\n \n-    let_in(3i, |i| { assert!(i == 3u); });\n-    //~^ ERROR expected `int`, found `uint`\n+    let_in(3i, |i| { assert!(i == 3us); });\n+    //~^ ERROR expected `isize`, found `usize`\n }"}, {"sha": "0d441380e81447676d44db87a11fc4fb6a471f6b", "filename": "src/test/compile-fail/regions-infer-paramd-indirect.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -12,7 +12,7 @@\n // Check that we correctly infer that b and c must be region\n // parameterized because they reference a which requires a region.\n \n-type a<'a> = &'a int;\n+type a<'a> = &'a isize;\n type b<'a> = Box<a<'a>>;\n \n struct c<'a> {\n@@ -30,7 +30,8 @@ impl<'a> set_f<'a> for c<'a> {\n     }\n \n     fn set_f_bad(&mut self, b: Box<b>) {\n-        self.f = b; //~ ERROR mismatched types: expected `Box<Box<&'a int>>`, found `Box<Box<&int>>`\n+        self.f = b;\n+        //~^ ERROR mismatched types: expected `Box<Box<&'a isize>>`, found `Box<Box<&isize>>`\n     }\n }\n "}, {"sha": "f851a8244f61e71748672c8a1d36ffb487b297ed", "filename": "src/test/compile-fail/repeat_count.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -15,13 +15,13 @@ fn main() {\n     let a = [0; n]; //~ ERROR expected constant integer for repeat count, found variable\n     let b = [0; ()];\n //~^ ERROR expected constant integer for repeat count, found non-constant expression\n-//~^^ ERROR: expected `uint`, found `()`\n+//~^^ ERROR: expected `usize`, found `()`\n     let c = [0; true]; //~ ERROR expected positive integer for repeat count, found boolean\n-    //~^ ERROR: expected `uint`, found `bool`\n+    //~^ ERROR: expected `usize`, found `bool`\n     let d = [0; 0.5]; //~ ERROR expected positive integer for repeat count, found float\n-    //~^ ERROR: expected `uint`, found `_`\n+    //~^ ERROR: expected `usize`, found `_`\n     let e = [0; \"foo\"]; //~ ERROR expected positive integer for repeat count, found string\n-    //~^ ERROR: expected `uint`, found `&'static str`\n+    //~^ ERROR: expected `usize`, found `&'static str`\n     let f = [0; -4];\n     //~^ ERROR expected positive integer for repeat count, found negative integer\n     let f = [0u; -1];"}, {"sha": "fb84c1e2ebe9a265ab362887edddc617a2af4890", "filename": "src/test/compile-fail/structure-constructor-type-mismatch.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -24,33 +24,33 @@ type PairF<U> = Pair<f32,U>;\n \n fn main() {\n     let pt = PointF {\n-        //~^ ERROR expected f32, found int\n-        x: 1i,\n-        y: 2i,\n+        //~^ ERROR expected f32, found isize\n+        x: 1is,\n+        y: 2is,\n     };\n \n     let pt2 = Point::<f32> {\n-        //~^ ERROR expected f32, found int\n-        x: 3i,\n-        y: 4i,\n+        //~^ ERROR expected f32, found isize\n+        x: 3is,\n+        y: 4is,\n     };\n \n     let pair = PairF {\n-        //~^ ERROR expected f32, found int\n-        x: 5i,\n-        y: 6i,\n+        //~^ ERROR expected f32, found isize\n+        x: 5is,\n+        y: 6is,\n     };\n \n-    let pair2 = PairF::<int> {\n-        //~^ ERROR expected f32, found int\n-        x: 7i,\n-        y: 8i,\n+    let pair2 = PairF::<isize> {\n+        //~^ ERROR expected f32, found isize\n+        x: 7is,\n+        y: 8is,\n     };\n \n-    let pt3 = PointF::<int> {\n+    let pt3 = PointF::<isize> {\n         //~^ ERROR wrong number of type arguments\n-        x: 9i,\n-        y: 10i,\n+        x: 9is,\n+        y: 10is,\n     };\n }\n "}, {"sha": "5fc80d5660d04cd1c722b30eb20f667fc0061d7b", "filename": "src/test/compile-fail/trait-bounds-impl-comparison-1.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -29,7 +29,7 @@ trait Foo {\n     fn test_error8_fn<T: B>(&self);\n }\n \n-impl Foo for int {\n+impl Foo for isize {\n     // invalid bound for T, was defined as Eq in trait\n     fn test_error1_fn<T: Ord>(&self) {}\n     //~^ ERROR in method `test_error1_fn`, type parameter 0 requires bound `core::cmp::Ord`\n@@ -66,12 +66,12 @@ impl Foo for int {\n trait Getter<T> { }\n \n trait Trait {\n-    fn method<G:Getter<int>>();\n+    fn method<G:Getter<isize>>();\n }\n \n-impl Trait for uint {\n-    fn method<G: Getter<uint>>() {}\n-    //~^ ERROR in method `method`, type parameter 0 requires bound `Getter<uint>`\n+impl Trait for usize {\n+    fn method<G: Getter<usize>>() {}\n+    //~^ ERROR in method `method`, type parameter 0 requires bound `Getter<usize>`\n }\n \n fn main() {}"}, {"sha": "e6ea8e10b22cc11e03b1d6ccffdd9ed876469234", "filename": "src/test/compile-fail/trait-coercion-generic-bad.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -24,7 +24,7 @@ impl Trait<&'static str> for Struct {\n }\n \n fn main() {\n-    let s: Box<Trait<int>> = box Struct { person: \"Fred\" };\n-    //~^ ERROR the trait `Trait<int>` is not implemented for the type `Struct`\n+    let s: Box<Trait<isize>> = box Struct { person: \"Fred\" };\n+    //~^ ERROR the trait `Trait<isize>` is not implemented for the type `Struct`\n     s.f(1);\n }"}, {"sha": "44b478bfb152b1d35e34b1a471bccbb44bbdc33d", "filename": "src/test/compile-fail/trait-impl-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-impl-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftrait-impl-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-impl-1.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -21,6 +21,6 @@ impl<'a> T+'a {\n impl T for int {}\n \n fn main() {\n-    let x = &42i;\n-    x.foo(); //~ERROR: type `&int` does not implement any method in scope named `foo`\n+    let x = &42is;\n+    x.foo(); //~ERROR: type `&isize` does not implement any method in scope named `foo`\n }"}, {"sha": "7f073a7bfdbbaa2675070c7a39e50f88bf2f3789", "filename": "src/test/compile-fail/tuple-arity-mismatch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,12 +10,12 @@\n \n // Issue #6155\n \n-fn first((value, _): (int, f64)) -> int { value }\n+fn first((value, _): (isize, f64)) -> isize { value }\n \n fn main() {\n     let y = first ((1,2.0,3));\n     //~^ ERROR expected a tuple with 2 elements, found one with 3 elements\n \n     let y = first ((1,));\n-    //~^ ERROR expected `(int, f64)`, found `(int,)`\n+    //~^ ERROR expected `(isize, f64)`, found `(isize,)`\n }"}, {"sha": "20dd71e3bdf447355a90b4d59c9032eb474ef782", "filename": "src/test/compile-fail/tuple-index-out-of-bounds.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -8,17 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct Point(int, int);\n+struct Point(isize, isize);\n \n fn main() {\n     let origin = Point(0, 0);\n     origin.0;\n     origin.1;\n     origin.2;\n     //~^ ERROR attempted out-of-bounds tuple index `2` on type `Point`\n-    let tuple = (0i, 0i);\n+    let tuple = (0is, 0is);\n     tuple.0;\n     tuple.1;\n     tuple.2;\n-    //~^ ERROR attempted out-of-bounds tuple index `2` on type `(int, int)`\n+    //~^ ERROR attempted out-of-bounds tuple index `2` on type `(isize, isize)`\n }"}, {"sha": "85ad302f3ed4dde28977bd102b192e2962fb25d2", "filename": "src/test/compile-fail/tutorial-suffix-inference-test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -21,12 +21,12 @@ fn main() {\n     identity_u16(y);\n     //~^ ERROR mismatched types: expected `u16`, found `i32`\n \n-    let a = 3i;\n+    let a = 3is;\n \n-    fn identity_i(n: int) -> int { n }\n+    fn identity_i(n: isize) -> int { n }\n \n     identity_i(a); // ok\n     identity_u16(a);\n-    //~^ ERROR mismatched types: expected `u16`, found `int`\n+    //~^ ERROR mismatched types: expected `u16`, found `isize`\n \n }"}, {"sha": "8b0897565fb918f6767e94ab3610b6a23b7358c7", "filename": "src/test/compile-fail/type-mismatch-multiple.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftype-mismatch-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftype-mismatch-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-mismatch-multiple.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -10,6 +10,6 @@\n \n // Checking that the compiler reports multiple type errors at once\n // error-pattern:mismatched types: expected `bool`\n-// error-pattern:mismatched types: expected `int`\n+// error-pattern:mismatched types: expected `isize`\n \n-fn main() { let a: bool = 1i; let b: int = true; }\n+fn main() { let a: bool = 1is; let b: isize = true; }"}, {"sha": "92740cf5082a65ef11a45c37b2672f8f98754dd6", "filename": "src/test/compile-fail/typeck_type_placeholder_mismatch.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_mismatch.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,12 +18,12 @@ pub fn main() {\n }\n \n fn test1() {\n-    let x: Foo<_> = Bar::<uint>;\n-    //~^ ERROR mismatched types: expected `Foo<_>`, found `Bar<uint>`\n-    let y: Foo<uint> = x;\n+    let x: Foo<_> = Bar::<usize>;\n+    //~^ ERROR mismatched types: expected `Foo<_>`, found `Bar<usize>`\n+    let y: Foo<usize> = x;\n }\n \n fn test2() {\n-    let x: Foo<_> = Bar::<uint>;\n-    //~^ ERROR mismatched types: expected `Foo<_>`, found `Bar<uint>`\n+    let x: Foo<_> = Bar::<usize>;\n+    //~^ ERROR mismatched types: expected `Foo<_>`, found `Bar<usize>`\n }"}, {"sha": "702702990c244fc720697bf8a5693945fd3b74d3", "filename": "src/test/compile-fail/variadic-ffi.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -13,24 +13,24 @@ extern \"stdcall\" {\n }\n \n extern {\n-    fn foo(f: int, x: u8, ...);\n+    fn foo(f: isize, x: u8, ...);\n }\n \n-extern \"C\" fn bar(f: int, x: u8) {}\n+extern \"C\" fn bar(f: isize, x: u8) {}\n \n fn main() {\n     unsafe {\n         foo(); //~ ERROR: this function takes at least 2 parameters but 0 parameters were supplied\n         foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n \n-        let x: unsafe extern \"C\" fn(f: int, x: u8) = foo;\n-        //~^ ERROR: mismatched types: expected `unsafe extern \"C\" fn(int, u8)`\n-        //         , found `unsafe extern \"C\" fn(int, u8, ...)`\n+        let x: unsafe extern \"C\" fn(f: isize, x: u8) = foo;\n+        //~^ ERROR: mismatched types: expected `unsafe extern \"C\" fn(isize, u8)`\n+        //         , found `unsafe extern \"C\" fn(isize, u8, ...)`\n         //          (expected non-variadic fn, found variadic function)\n \n-        let y: unsafe extern \"C\" fn(f: int, x: u8, ...) = bar;\n-        //~^ ERROR: mismatched types: expected `unsafe extern \"C\" fn(int, u8, ...)`\n-        //         , found `extern \"C\" extern fn(int, u8)`\n+        let y: unsafe extern \"C\" fn(f: isize, x: u8, ...) = bar;\n+        //~^ ERROR: mismatched types: expected `unsafe extern \"C\" fn(isize, u8, ...)`\n+        //         , found `extern \"C\" extern fn(isize, u8)`\n         //          (expected variadic fn, found non-variadic function)\n \n         foo(1, 2, 3f32); //~ ERROR: can't pass an f32 to variadic function, cast to c_double"}, {"sha": "9ff0f011e1dc795f622c6fae10d52b37dca5ad87", "filename": "src/test/compile-fail/warn-foreign-int-types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fwarn-foreign-int-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fcompile-fail%2Fwarn-foreign-int-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwarn-foreign-int-types.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -13,9 +13,9 @@\n \n mod xx {\n     extern {\n-        pub fn strlen(str: *const u8) -> uint; //~ ERROR found rust type `uint`\n-        pub fn foo(x: int, y: uint); //~ ERROR found rust type `int`\n-        //~^ ERROR found rust type `uint`\n+        pub fn strlen(str: *const u8) -> usize; //~ ERROR found rust type `usize`\n+        pub fn foo(x: isize, y: usize); //~ ERROR found rust type `isize`\n+        //~^ ERROR found rust type `usize`\n     }\n }\n "}, {"sha": "e9f801c5f050e3c4a4f90ce026e61020c9467914", "filename": "src/test/debuginfo/basic-types-globals-metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -16,7 +16,7 @@\n // gdb-command:whatis 'basic-types-globals-metadata::B'\n // gdb-check:type = bool\n // gdb-command:whatis 'basic-types-globals-metadata::I'\n-// gdb-check:type = int\n+// gdb-check:type = isize\n // gdb-command:whatis 'basic-types-globals-metadata::C'\n // gdb-check:type = char\n // gdb-command:whatis 'basic-types-globals-metadata::I8'\n@@ -28,7 +28,7 @@\n // gdb-command:whatis 'basic-types-globals-metadata::I64'\n // gdb-check:type = i64\n // gdb-command:whatis 'basic-types-globals-metadata::U'\n-// gdb-check:type = uint\n+// gdb-check:type = usize\n // gdb-command:whatis 'basic-types-globals-metadata::U8'\n // gdb-check:type = u8\n // gdb-command:whatis 'basic-types-globals-metadata::U16'"}, {"sha": "5e2497043da7a4bf7dff5b8c75eb4f6d7bc5ef32", "filename": "src/test/debuginfo/basic-types-metadata.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -18,7 +18,7 @@\n // gdb-command:whatis b\n // gdb-check:type = bool\n // gdb-command:whatis i\n-// gdb-check:type = int\n+// gdb-check:type = isize\n // gdb-command:whatis c\n // gdb-check:type = char\n // gdb-command:whatis i8\n@@ -30,7 +30,7 @@\n // gdb-command:whatis i64\n // gdb-check:type = i64\n // gdb-command:whatis u\n-// gdb-check:type = uint\n+// gdb-check:type = usize\n // gdb-command:whatis u8\n // gdb-check:type = u8\n // gdb-command:whatis u16\n@@ -53,13 +53,13 @@\n fn main() {\n     let unit: () = ();\n     let b: bool = false;\n-    let i: int = -1;\n+    let i: isize = -1;\n     let c: char = 'a';\n     let i8: i8 = 68;\n     let i16: i16 = -16;\n     let i32: i32 = -32;\n     let i64: i64 = -64;\n-    let u: uint = 1;\n+    let u: usize = 1;\n     let u8: u8 = 100;\n     let u16: u16 = 16;\n     let u32: u32 = 32;"}, {"sha": "71c235c878cc11904ae8a6a826506c65bae3bae2", "filename": "src/test/debuginfo/option-like-enum.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -28,13 +28,13 @@\n // gdb-check:$3 = {RUST$ENCODED$ENUM$1$Empty = {454545, 0x87654321, 9988}}\n \n // gdb-command:print empty_gdb->discr\n-// gdb-check:$4 = (int *) 0x0\n+// gdb-check:$4 = (isize *) 0x0\n \n // gdb-command:print droid\n // gdb-check:$5 = {RUST$ENCODED$ENUM$2$Void = {id = 675675, range = 10000001, internals = 0x43218765}}\n \n // gdb-command:print void_droid_gdb->internals\n-// gdb-check:$6 = (int *) 0x0\n+// gdb-check:$6 = (isize *) 0x0\n \n // gdb-command:continue\n \n@@ -81,25 +81,25 @@\n // this case (by casting the value to a memory-equivalent struct).\n \n enum MoreFields<'a> {\n-    Full(u32, &'a int, i16),\n+    Full(u32, &'a isize, i16),\n     Empty\n }\n \n struct MoreFieldsRepr<'a> {\n     a: u32,\n-    discr: &'a int,\n+    discr: &'a isize,\n     b: i16\n }\n \n enum NamedFields<'a> {\n-    Droid { id: i32, range: i64, internals: &'a int },\n+    Droid { id: i32, range: i64, internals: &'a isize },\n     Void\n }\n \n struct NamedFieldsRepr<'a> {\n     id: i32,\n     range: i64,\n-    internals: &'a int\n+    internals: &'a isize\n }\n \n fn main() {"}, {"sha": "b508da73f4addfd7a5e30a716b72262d38611681", "filename": "src/test/debuginfo/type-names.rs", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftype-names.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -24,7 +24,7 @@\n // gdb-check:type = struct GenericStruct<type-names::Mod1::Struct2, type-names::Mod1::Mod2::Struct3>\n \n // gdb-command:whatis generic_struct2\n-// gdb-check:type = struct GenericStruct<type-names::Struct1, extern \"fastcall\" fn(int) -> uint>\n+// gdb-check:type = struct GenericStruct<type-names::Struct1, extern \"fastcall\" fn(isize) -> usize>\n \n // gdb-command:whatis mod_struct\n // gdb-check:type = struct Struct2\n@@ -79,33 +79,33 @@\n \n // RAW POINTERS\n // gdb-command:whatis mut_ptr1\n-// gdb-check:type = struct (*mut type-names::Struct1, int)\n+// gdb-check:type = struct (*mut type-names::Struct1, isize)\n \n // gdb-command:whatis mut_ptr2\n-// gdb-check:type = struct (*mut int, int)\n+// gdb-check:type = struct (*mut isize, isize)\n \n // gdb-command:whatis mut_ptr3\n-// gdb-check:type = struct (*mut type-names::Mod1::Mod2::Enum3<type-names::Struct1>, int)\n+// gdb-check:type = struct (*mut type-names::Mod1::Mod2::Enum3<type-names::Struct1>, isize)\n \n // gdb-command:whatis const_ptr1\n-// gdb-check:type = struct (*const type-names::Struct1, int)\n+// gdb-check:type = struct (*const type-names::Struct1, isize)\n \n // gdb-command:whatis const_ptr2\n-// gdb-check:type = struct (*const int, int)\n+// gdb-check:type = struct (*const isize, isize)\n \n // gdb-command:whatis const_ptr3\n-// gdb-check:type = struct (*const type-names::Mod1::Mod2::Enum3<type-names::Struct1>, int)\n+// gdb-check:type = struct (*const type-names::Mod1::Mod2::Enum3<type-names::Struct1>, isize)\n \n \n // VECTORS\n // gdb-command:whatis fixed_size_vec1\n // gdb-check:type = struct ([type-names::Struct1; 3], i16)\n \n // gdb-command:whatis fixed_size_vec2\n-// gdb-check:type = struct ([uint; 3], i16)\n+// gdb-check:type = struct ([usize; 3], i16)\n \n // gdb-command:whatis slice1\n-// gdb-check:type = struct &[uint]\n+// gdb-check:type = struct &[usize]\n \n // gdb-command:whatis slice2\n // gdb-check:type = struct &[type-names::Mod1::Enum2]\n@@ -128,50 +128,50 @@\n // gdb-check:type = struct &Trait2<type-names::Struct1, type-names::Struct1>\n \n // gdb-command:whatis generic_mut_ref_trait\n-// gdb-check:type = struct &mut Trait2<type-names::Mod1::Mod2::Struct3, type-names::GenericStruct<uint, int>>\n+// gdb-check:type = struct &mut Trait2<type-names::Mod1::Mod2::Struct3, type-names::GenericStruct<usize, isize>>\n \n \n // BARE FUNCTIONS\n // gdb-command:whatis rust_fn\n-// gdb-check:type = struct (fn(core::option::Option<int>, core::option::Option<&type-names::Mod1::Struct2>), uint)\n+// gdb-check:type = struct (fn(core::option::Option<isize>, core::option::Option<&type-names::Mod1::Struct2>), usize)\n \n // gdb-command:whatis extern_c_fn\n-// gdb-check:type = struct (extern \"C\" fn(int), uint)\n+// gdb-check:type = struct (extern \"C\" fn(isize), usize)\n \n // gdb-command:whatis unsafe_fn\n-// gdb-check:type = struct (unsafe fn(core::result::Result<char, f64>), uint)\n+// gdb-check:type = struct (unsafe fn(core::result::Result<char, f64>), usize)\n \n // gdb-command:whatis extern_stdcall_fn\n-// gdb-check:type = struct (extern \"stdcall\" fn(), uint)\n+// gdb-check:type = struct (extern \"stdcall\" fn(), usize)\n \n // gdb-command:whatis rust_fn_with_return_value\n-// gdb-check:type = struct (fn(f64) -> uint, uint)\n+// gdb-check:type = struct (fn(f64) -> usize, usize)\n \n // gdb-command:whatis extern_c_fn_with_return_value\n-// gdb-check:type = struct (extern \"C\" fn() -> type-names::Struct1, uint)\n+// gdb-check:type = struct (extern \"C\" fn() -> type-names::Struct1, usize)\n \n // gdb-command:whatis unsafe_fn_with_return_value\n-// gdb-check:type = struct (unsafe fn(type-names::GenericStruct<u16, u8>) -> type-names::Mod1::Struct2, uint)\n+// gdb-check:type = struct (unsafe fn(type-names::GenericStruct<u16, u8>) -> type-names::Mod1::Struct2, usize)\n \n // gdb-command:whatis extern_stdcall_fn_with_return_value\n-// gdb-check:type = struct (extern \"stdcall\" fn(Box<int>) -> uint, uint)\n+// gdb-check:type = struct (extern \"stdcall\" fn(Box<isize>) -> usize, usize)\n \n // gdb-command:whatis generic_function_int\n-// gdb-check:type = struct (fn(int) -> int, uint)\n+// gdb-check:type = struct (fn(isize) -> isize, usize)\n \n // gdb-command:whatis generic_function_struct3\n-// gdb-check:type = struct (fn(type-names::Mod1::Mod2::Struct3) -> type-names::Mod1::Mod2::Struct3, uint)\n+// gdb-check:type = struct (fn(type-names::Mod1::Mod2::Struct3) -> type-names::Mod1::Mod2::Struct3, usize)\n \n // gdb-command:whatis variadic_function\n-// gdb-check:type = struct (unsafe extern \"C\" fn(*const u8, ...) -> int, uint)\n+// gdb-check:type = struct (unsafe extern \"C\" fn(*const u8, ...) -> isize, usize)\n \n \n // CLOSURES\n // gdb-command:whatis closure1\n-// gdb-check:type = struct (closure, uint)\n+// gdb-check:type = struct (closure, usize)\n \n // gdb-command:whatis closure2\n-// gdb-check:type = struct (closure, uint)\n+// gdb-check:type = struct (closure, usize)\n \n #![omit_gdb_pretty_printer_section]\n \n@@ -183,7 +183,7 @@ struct GenericStruct<T1, T2>;\n \n enum Enum1 {\n     Variant1_1,\n-    Variant1_2(int)\n+    Variant1_2(isize)\n }\n \n mod Mod1 {\n@@ -209,23 +209,23 @@ mod Mod1 {\n trait Trait1 { }\n trait Trait2<T1, T2> { }\n \n-impl Trait1 for int {}\n-impl<T1, T2> Trait2<T1, T2> for int {}\n+impl Trait1 for isize {}\n+impl<T1, T2> Trait2<T1, T2> for isize {}\n \n-fn rust_fn(_: Option<int>, _: Option<&Mod1::Struct2>) {}\n-extern \"C\" fn extern_c_fn(_: int) {}\n+fn rust_fn(_: Option<isize>, _: Option<&Mod1::Struct2>) {}\n+extern \"C\" fn extern_c_fn(_: isize) {}\n unsafe fn unsafe_fn(_: Result<char, f64>) {}\n extern \"stdcall\" fn extern_stdcall_fn() {}\n \n-fn rust_fn_with_return_value(_: f64) -> uint { 4 }\n+fn rust_fn_with_return_value(_: f64) -> usize { 4 }\n extern \"C\" fn extern_c_fn_with_return_value() -> Struct1 { Struct1 }\n unsafe fn unsafe_fn_with_return_value(_: GenericStruct<u16, u8>) -> Mod1::Struct2 { Mod1::Struct2 }\n-extern \"stdcall\" fn extern_stdcall_fn_with_return_value(_: Box<int>) -> uint { 0 }\n+extern \"stdcall\" fn extern_stdcall_fn_with_return_value(_: Box<isize>) -> usize { 0 }\n \n fn generic_function<T>(x: T) -> T { x }\n \n extern {\n-    fn printf(_:*const u8, ...) -> int;\n+    fn printf(_:*const u8, ...) -> isize;\n }\n \n // In many of the cases below, the type that is actually under test is wrapped\n@@ -240,7 +240,7 @@ fn main() {\n     // Structs\n     let simple_struct = Struct1;\n     let generic_struct1: GenericStruct<Mod1::Struct2, Mod1::Mod2::Struct3> = GenericStruct;\n-    let generic_struct2: GenericStruct<Struct1, extern \"fastcall\" fn(int) -> uint> = GenericStruct;\n+    let generic_struct2: GenericStruct<Struct1, extern \"fastcall\" fn(isize) -> usize> = GenericStruct;\n     let mod_struct = Mod1::Struct2;\n \n     // Enums\n@@ -269,13 +269,13 @@ fn main() {\n     let mut_ref2 = (&mut mut_generic_struct, 0i32);\n \n     // Raw Pointers\n-    let mut_ptr1: (*mut Struct1, int) = (ptr::null_mut(), 0);\n-    let mut_ptr2: (*mut int, int) = (ptr::null_mut(), 0);\n-    let mut_ptr3: (*mut Mod1::Mod2::Enum3<Struct1>, int) = (ptr::null_mut(), 0);\n+    let mut_ptr1: (*mut Struct1, isize) = (ptr::null_mut(), 0);\n+    let mut_ptr2: (*mut isize, isize) = (ptr::null_mut(), 0);\n+    let mut_ptr3: (*mut Mod1::Mod2::Enum3<Struct1>, isize) = (ptr::null_mut(), 0);\n \n-    let const_ptr1: (*const Struct1, int) = (ptr::null(), 0);\n-    let const_ptr2: (*const int, int) = (ptr::null(), 0);\n-    let const_ptr3: (*const Mod1::Mod2::Enum3<Struct1>, int) = (ptr::null(), 0);\n+    let const_ptr1: (*const Struct1, isize) = (ptr::null(), 0);\n+    let const_ptr2: (*const isize, isize) = (ptr::null(), 0);\n+    let const_ptr3: (*const Mod1::Mod2::Enum3<Struct1>, isize) = (ptr::null(), 0);\n \n     // Vectors\n     let fixed_size_vec1 = ([Struct1, Struct1, Struct1], 0i16);\n@@ -297,7 +297,7 @@ fn main() {\n \n     let mut generic_mut_ref_trait_impl = 0i;\n     let generic_mut_ref_trait = (&mut generic_mut_ref_trait_impl) as\n-        &mut Trait2<Mod1::Mod2::Struct3, GenericStruct<uint, int>>;\n+        &mut Trait2<Mod1::Mod2::Struct3, GenericStruct<usize, isize>>;\n \n     // Bare Functions\n     let rust_fn = (rust_fn, 0u);\n@@ -310,7 +310,7 @@ fn main() {\n     let unsafe_fn_with_return_value = (unsafe_fn_with_return_value, 0u);\n     let extern_stdcall_fn_with_return_value = (extern_stdcall_fn_with_return_value, 0u);\n \n-    let generic_function_int = (generic_function::<int>, 0u);\n+    let generic_function_int = (generic_function::<isize>, 0u);\n     let generic_function_struct3 = (generic_function::<Mod1::Mod2::Struct3>, 0u);\n \n     let variadic_function = (printf, 0u);\n@@ -321,7 +321,7 @@ fn main() {\n     // how that maps to rustc's internal representation of these forms.\n     // Once closures have reached their 1.0 form, the tests below should\n     // probably be expanded.\n-    let closure1 = (|&: x:int| {}, 0u);\n+    let closure1 = (|&: x:isize| {}, 0u);\n     let closure2 = (|&: x:i8, y: f32| { (x as f32) + y }, 0u);\n \n     zzz(); // #break"}, {"sha": "f20087ef677f23a9efca115a008008513a8bb699", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -20,18 +20,18 @@\n \n // #4264 fixed-length vector types\n \n-pub fn foo(_: [int; (3 as uint)]) { }\n+pub fn foo(_: [isize; (3 as usize)]) { }\n \n pub fn bar() {\n-    const FOO: uint = ((5u as uint) - (4u as uint) as uint);\n-    let _: [(); (FOO as uint)] = ([(() as ())] as [(); 1]);\n+    const FOO: usize = ((5us as usize) - (4us as usize) as usize);\n+    let _: [(); (FOO as usize)] = ([(() as ())] as [(); 1]);\n \n-    let _: [(); (1u as uint)] = ([(() as ())] as [(); 1]);\n+    let _: [(); (1us as usize)] = ([(() as ())] as [(); 1]);\n \n     let _ =\n-        (((&((([(1i as int), (2 as int), (3 as int)] as [int; 3])) as\n-                [int; 3]) as &[int; 3]) as *const _ as *const [int; 3]) as\n-            *const [int; (3u as uint)] as *const [int; 3]);\n+        (((&((([(1is as isize), (2 as isize), (3 as isize)] as [isize; 3])) as\n+                [isize; 3]) as &[isize; 3]) as *const _ as *const [isize; 3])\n+            as *const [isize; (3us as usize)] as *const [isize; 3]);\n \n \n \n@@ -81,18 +81,19 @@\n                                                                                              core::fmt::Arguments<'_>))\n         as collections::string::String);\n }\n-pub type Foo = [int; (3u as uint)];\n+pub type Foo = [isize; (3us as usize)];\n pub struct Bar {\n-    pub x: [int; (3u as uint)],\n+    pub x: [isize; (3us as usize)],\n }\n-pub struct TupleBar([int; (4u as uint)]);\n-pub enum Baz { BazVariant([int; (5u as uint)]), }\n+pub struct TupleBar([isize; (4us as usize)]);\n+pub enum Baz { BazVariant([isize; (5us as usize)]), }\n pub fn id<T>(x: T) -> T { (x as T) }\n pub fn use_id() {\n     let _ =\n-        ((id::<[int; (3u as uint)]> as\n-             fn([int; 3]) -> [int; 3] {id})(([(1 as int), (2 as int),\n-                                              (3 as int)] as [int; 3])) as\n-            [int; 3]);\n+        ((id::<[isize; (3us as usize)]> as\n+             fn([isize; 3]) -> [isize; 3] {id})(([(1 as isize), (2 as isize),\n+                                                  (3 as isize)] as\n+                                                    [isize; 3])) as\n+            [isize; 3]);\n }\n fn main() { }"}, {"sha": "75be2f23c2b20003b2426543bdaf6afb6398c1fd", "filename": "src/test/pretty/issue-4264.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fpretty%2Fissue-4264.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Fpretty%2Fissue-4264.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -14,35 +14,35 @@\n \n // #4264 fixed-length vector types\n \n-pub fn foo(_: [int; 3]) {}\n+pub fn foo(_: [isize; 3]) {}\n \n pub fn bar() {\n-    const FOO: uint = 5u - 4u;\n+    const FOO: usize = 5us - 4us;\n     let _: [(); FOO] = [()];\n \n-    let _ : [(); 1u] = [()];\n+    let _ : [(); 1us] = [()];\n \n-    let _ = &([1i,2,3]) as *const _ as *const [int; 3u];\n+    let _ = &([1is,2,3]) as *const _ as *const [isize; 3us];\n \n     format!(\"test\");\n }\n \n-pub type Foo = [int; 3u];\n+pub type Foo = [isize; 3us];\n \n pub struct Bar {\n-    pub x: [int; 3u]\n+    pub x: [isize; 3us]\n }\n \n-pub struct TupleBar([int; 4u]);\n+pub struct TupleBar([isize; 4us]);\n \n pub enum Baz {\n-    BazVariant([int; 5u])\n+    BazVariant([isize; 5us])\n }\n \n pub fn id<T>(x: T) -> T { x }\n \n pub fn use_id() {\n-    let _ = id::<[int; 3u]>([1,2,3]);\n+    let _ = id::<[isize; 3us]>([1,2,3]);\n }\n \n "}, {"sha": "694a06ed83a6f6353cafcea4f207f43cb6fab108", "filename": "src/test/run-make/graphviz-flowgraph/f01.dot-expected.dot", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff01.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff01.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff01.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,9 +1,9 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 1i\"];\n-    N3[label=\"stmt 1i;\"];\n-    N4[label=\"block { 1i; }\"];\n+    N2[label=\"expr 1is\"];\n+    N3[label=\"stmt 1is;\"];\n+    N4[label=\"block { 1is; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "efa2c6404a25fbffd8144c2257b22656c1c49bfd", "filename": "src/test/run-make/graphviz-flowgraph/f03.dot-expected.dot", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff03.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff03.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff03.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,11 +1,11 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 3i\"];\n+    N2[label=\"expr 3is\"];\n     N3[label=\"expr 4\"];\n-    N4[label=\"expr 3i + 4\"];\n-    N5[label=\"stmt 3i + 4;\"];\n-    N6[label=\"block { 3i + 4; }\"];\n+    N4[label=\"expr 3is + 4\"];\n+    N5[label=\"stmt 3is + 4;\"];\n+    N6[label=\"block { 3is + 4; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "1f375b767ce49440315ee26862c8e784462dbfb1", "filename": "src/test/run-make/graphviz-flowgraph/f04.dot-expected.dot", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff04.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff04.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff04.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,10 +1,10 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 4i\"];\n+    N2[label=\"expr 4is\"];\n     N3[label=\"local _x\"];\n-    N4[label=\"stmt let _x = 4i;\"];\n-    N5[label=\"block { let _x = 4i; }\"];\n+    N4[label=\"stmt let _x = 4is;\"];\n+    N5[label=\"block { let _x = 4is; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "8c9a930098aa6514106f4e0c61e55be58c42211c", "filename": "src/test/run-make/graphviz-flowgraph/f05.dot-expected.dot", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff05.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff05.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff05.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,14 +1,14 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 5i\"];\n-    N3[label=\"expr 55i\"];\n-    N4[label=\"expr (5i, 55i)\"];\n+    N2[label=\"expr 5is\"];\n+    N3[label=\"expr 55is\"];\n+    N4[label=\"expr (5is, 55is)\"];\n     N5[label=\"local _x\"];\n     N6[label=\"local _y\"];\n     N7[label=\"pat (_x, _y)\"];\n-    N8[label=\"stmt let (_x, _y) = (5i, 55i);\"];\n-    N9[label=\"block { let (_x, _y) = (5i, 55i); }\"];\n+    N8[label=\"stmt let (_x, _y) = (5is, 55is);\"];\n+    N9[label=\"block { let (_x, _y) = (5is, 55is); }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "da7d5759b7edeb6e1f18dd1fd94b6c4fb029d571", "filename": "src/test/run-make/graphviz-flowgraph/f07.dot-expected.dot", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff07.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff07.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff07.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,12 +1,12 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 7i\"];\n-    N3[label=\"expr 77i\"];\n-    N4[label=\"expr 777i\"];\n-    N5[label=\"expr 7777i\"];\n-    N6[label=\"expr [7i, 77i, 777i, 7777i]\"];\n-    N7[label=\"expr match [7i, 77i, 777i, 7777i] { [x, y, ..] => x + y, }\"];\n+    N2[label=\"expr 7is\"];\n+    N3[label=\"expr 77is\"];\n+    N4[label=\"expr 777is\"];\n+    N5[label=\"expr 7777is\"];\n+    N6[label=\"expr [7is, 77is, 777is, 7777is]\"];\n+    N7[label=\"expr match [7is, 77is, 777is, 7777is] { [x, y, ..] => x + y, }\"];\n     N8[label=\"(dummy_node)\"];\n     N9[label=\"local x\"];\n     N10[label=\"local y\"];\n@@ -15,8 +15,8 @@ digraph block {\n     N13[label=\"expr x\"];\n     N14[label=\"expr y\"];\n     N15[label=\"expr x + y\"];\n-    N16[label=\"stmt match [7i, 77i, 777i, 7777i] { [x, y, ..] => x + y, };\"];\n-    N17[label=\"block { match [7i, 77i, 777i, 7777i] { [x, y, ..] => x + y, }; }\"];\n+    N16[label=\"stmt match [7is, 77is, 777is, 7777is] { [x, y, ..] => x + y, };\"];\n+    N17[label=\"block { match [7is, 77is, 777is, 7777is] { [x, y, ..] => x + y, }; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "ac1972424dc957547956542913c681980ce3150b", "filename": "src/test/run-make/graphviz-flowgraph/f08.dot-expected.dot", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff08.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff08.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff08.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,21 +1,21 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 8i\"];\n+    N2[label=\"expr 8is\"];\n     N3[label=\"local x\"];\n-    N4[label=\"stmt let x = 8i;\"];\n+    N4[label=\"stmt let x = 8is;\"];\n     N5[label=\"local _y\"];\n     N6[label=\"stmt let _y;\"];\n     N7[label=\"expr x\"];\n-    N8[label=\"expr 88i\"];\n-    N9[label=\"expr x > 88i\"];\n-    N10[label=\"expr 888i\"];\n+    N8[label=\"expr 88is\"];\n+    N9[label=\"expr x > 88is\"];\n+    N10[label=\"expr 888is\"];\n     N11[label=\"expr _y\"];\n-    N12[label=\"expr _y = 888i\"];\n-    N13[label=\"stmt _y = 888i;\"];\n-    N14[label=\"block { _y = 888i; }\"];\n-    N15[label=\"expr if x > 88i { _y = 888i; }\"];\n-    N16[label=\"block { let x = 8i; let _y; if x > 88i { _y = 888i; } }\"];\n+    N12[label=\"expr _y = 888is\"];\n+    N13[label=\"stmt _y = 888is;\"];\n+    N14[label=\"block { _y = 888is; }\"];\n+    N15[label=\"expr if x > 88is { _y = 888is; }\"];\n+    N16[label=\"block { let x = 8is; let _y; if x > 88is { _y = 888is; } }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "0dc3ff14fba757c05e13ba6c72337b7a519f5ed5", "filename": "src/test/run-make/graphviz-flowgraph/f09.dot-expected.dot", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,29 +1,29 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 91i\"];\n+    N2[label=\"expr 91is\"];\n     N3[label=\"local x\"];\n-    N4[label=\"stmt let x = 91i;\"];\n+    N4[label=\"stmt let x = 91is;\"];\n     N5[label=\"local _y\"];\n     N6[label=\"stmt let _y;\"];\n     N7[label=\"expr x\"];\n-    N8[label=\"expr 92i\"];\n-    N9[label=\"expr x > 92i\"];\n-    N10[label=\"expr 93i\"];\n+    N8[label=\"expr 92is\"];\n+    N9[label=\"expr x > 92is\"];\n+    N10[label=\"expr 93is\"];\n     N11[label=\"expr _y\"];\n-    N12[label=\"expr _y = 93i\"];\n-    N13[label=\"stmt _y = 93i;\"];\n-    N14[label=\"block { _y = 93i; }\"];\n-    N15[label=\"expr 94i\"];\n-    N16[label=\"expr 95i\"];\n-    N17[label=\"expr 94i + 95i\"];\n+    N12[label=\"expr _y = 93is\"];\n+    N13[label=\"stmt _y = 93is;\"];\n+    N14[label=\"block { _y = 93is; }\"];\n+    N15[label=\"expr 94is\"];\n+    N16[label=\"expr 95is\"];\n+    N17[label=\"expr 94is + 95is\"];\n     N18[label=\"expr _y\"];\n-    N19[label=\"expr _y = 94i + 95i\"];\n-    N20[label=\"stmt _y = 94i + 95i;\"];\n-    N21[label=\"block { _y = 94i + 95i; }\"];\n-    N22[label=\"expr { _y = 94i + 95i; }\"];\n-    N23[label=\"expr if x > 92i { _y = 93i; } else { _y = 94i + 95i; }\"];\n-    N24[label=\"block { let x = 91i; let _y; if x > 92i { _y = 93i; } else { _y = 94i + 95i; } }\"];\n+    N19[label=\"expr _y = 94is + 95is\"];\n+    N20[label=\"stmt _y = 94is + 95is;\"];\n+    N21[label=\"block { _y = 94is + 95is; }\"];\n+    N22[label=\"expr { _y = 94is + 95is; }\"];\n+    N23[label=\"expr if x > 92is { _y = 93is; } else { _y = 94is + 95is; }\"];\n+    N24[label=\"block {\\l    let x = 91is;\\l    let _y;\\l    if x > 92is { _y = 93is; } else { _y = 94is + 95is; }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "184772e7d5166bfe3d32f3a59b4f33c3fedfea27", "filename": "src/test/run-make/graphviz-flowgraph/f09.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff09.rs?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -9,10 +9,10 @@\n // except according to those terms.\n \n pub fn expr_if_twoarm_9() {\n-    let x = 91i; let _y;\n-    if x > 92i {\n-        _y = 93i;\n+    let x = 91is; let _y;\n+    if x > 92is {\n+        _y = 93is;\n     } else {\n-        _y = 94i+95i;\n+        _y = 94is+95is;\n     }\n }"}, {"sha": "37606ddac70f78c70977504632302d65589afb63", "filename": "src/test/run-make/graphviz-flowgraph/f10.dot-expected.dot", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff10.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff10.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff10.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,20 +1,20 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 10i\"];\n+    N2[label=\"expr 10is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 10i;\"];\n+    N4[label=\"stmt let mut x = 10is;\"];\n     N5[label=\"(dummy_node)\"];\n     N6[label=\"expr x\"];\n-    N7[label=\"expr 0i\"];\n-    N8[label=\"expr x > 0i\"];\n-    N9[label=\"expr while x > 0i { x -= 1i; }\"];\n-    N10[label=\"expr 1i\"];\n+    N7[label=\"expr 0is\"];\n+    N8[label=\"expr x > 0is\"];\n+    N9[label=\"expr while x > 0is { x -= 1is; }\"];\n+    N10[label=\"expr 1is\"];\n     N11[label=\"expr x\"];\n-    N12[label=\"expr x -= 1i\"];\n-    N13[label=\"stmt x -= 1i;\"];\n-    N14[label=\"block { x -= 1i; }\"];\n-    N15[label=\"block { let mut x = 10i; while x > 0i { x -= 1i; } }\"];\n+    N12[label=\"expr x -= 1is\"];\n+    N13[label=\"stmt x -= 1is;\"];\n+    N14[label=\"block { x -= 1is; }\"];\n+    N15[label=\"block { let mut x = 10is; while x > 0is { x -= 1is; } }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "39a55f1a0926bf301063d48db0bef468e78a7a69", "filename": "src/test/run-make/graphviz-flowgraph/f11.dot-expected.dot", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff11.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff11.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff11.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,20 +1,20 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 11i\"];\n+    N2[label=\"expr 11is\"];\n     N3[label=\"local mut _x\"];\n-    N4[label=\"stmt let mut _x = 11i;\"];\n+    N4[label=\"stmt let mut _x = 11is;\"];\n     N5[label=\"(dummy_node)\"];\n-    N6[label=\"expr loop  { _x -= 1i; }\"];\n-    N7[label=\"expr 1i\"];\n+    N6[label=\"expr loop  { _x -= 1is; }\"];\n+    N7[label=\"expr 1is\"];\n     N8[label=\"expr _x\"];\n-    N9[label=\"expr _x -= 1i\"];\n-    N10[label=\"stmt _x -= 1i;\"];\n-    N11[label=\"block { _x -= 1i; }\"];\n-    N12[label=\"stmt loop  { _x -= 1i; }\"];\n+    N9[label=\"expr _x -= 1is\"];\n+    N10[label=\"stmt _x -= 1is;\"];\n+    N11[label=\"block { _x -= 1is; }\"];\n+    N12[label=\"stmt loop  { _x -= 1is; }\"];\n     N13[label=\"expr \\\"unreachable\\\"\"];\n     N14[label=\"stmt \\\"unreachable\\\";\"];\n-    N15[label=\"block { let mut _x = 11i; loop  { _x -= 1i; } \\\"unreachable\\\"; }\"];\n+    N15[label=\"block { let mut _x = 11is; loop  { _x -= 1is; } \\\"unreachable\\\"; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "e9cd07c0356f89b1329be12def22a2abf723ea11", "filename": "src/test/run-make/graphviz-flowgraph/f12.dot-expected.dot", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,27 +1,27 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 12i\"];\n+    N2[label=\"expr 12is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 12i;\"];\n+    N4[label=\"stmt let mut x = 12is;\"];\n     N5[label=\"(dummy_node)\"];\n-    N6[label=\"expr loop  { x -= 1i; if x == 2i { break ; \\\"unreachable\\\"; } }\"];\n-    N7[label=\"expr 1i\"];\n+    N6[label=\"expr loop  { x -= 1is; if x == 2is { break ; \\\"unreachable\\\"; } }\"];\n+    N7[label=\"expr 1is\"];\n     N8[label=\"expr x\"];\n-    N9[label=\"expr x -= 1i\"];\n-    N10[label=\"stmt x -= 1i;\"];\n+    N9[label=\"expr x -= 1is\"];\n+    N10[label=\"stmt x -= 1is;\"];\n     N11[label=\"expr x\"];\n-    N12[label=\"expr 2i\"];\n-    N13[label=\"expr x == 2i\"];\n+    N12[label=\"expr 2is\"];\n+    N13[label=\"expr x == 2is\"];\n     N14[label=\"expr break\"];\n     N15[label=\"(dummy_node)\"];\n     N16[label=\"stmt break ;\"];\n     N17[label=\"expr \\\"unreachable\\\"\"];\n     N18[label=\"stmt \\\"unreachable\\\";\"];\n     N19[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N20[label=\"expr if x == 2i { break ; \\\"unreachable\\\"; }\"];\n-    N21[label=\"block { x -= 1i; if x == 2i { break ; \\\"unreachable\\\"; } }\"];\n-    N22[label=\"block { let mut x = 12i; loop  { x -= 1i; if x == 2i { break ; \\\"unreachable\\\"; } } }\"];\n+    N20[label=\"expr if x == 2is { break ; \\\"unreachable\\\"; }\"];\n+    N21[label=\"block { x -= 1is; if x == 2is { break ; \\\"unreachable\\\"; } }\"];\n+    N22[label=\"block {\\l    let mut x = 12is;\\l    loop  { x -= 1is; if x == 2is { break ; \\\"unreachable\\\"; } }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -34,7 +34,7 @@ digraph block {\n     N11 -> N12;\n     N12 -> N13;\n     N13 -> N14;\n-    N14 -> N6[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 2i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 block { x -= 1i; if x == 2i { break ; \\\"unreachable\\\"; } }\"];\n+    N14 -> N6[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 block { x -= 1is; if x == 2is { break ; \\\"unreachable\\\"; } }\"];\n     N15 -> N16;\n     N16 -> N17;\n     N17 -> N18;"}, {"sha": "ac1a631eb56ed955b975bfb72fcf2926a228c039", "filename": "src/test/run-make/graphviz-flowgraph/f14.dot-expected.dot", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff14.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff14.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff14.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,20 +1,20 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 14i\"];\n+    N2[label=\"expr 14is\"];\n     N3[label=\"local x\"];\n-    N4[label=\"stmt let x = 14i;\"];\n+    N4[label=\"stmt let x = 14is;\"];\n     N5[label=\"expr x\"];\n-    N6[label=\"expr 1i\"];\n-    N7[label=\"expr x > 1i\"];\n+    N6[label=\"expr 1is\"];\n+    N7[label=\"expr x > 1is\"];\n     N8[label=\"expr return\"];\n     N9[label=\"(dummy_node)\"];\n     N10[label=\"stmt return;\"];\n     N11[label=\"expr \\\"unreachable\\\"\"];\n     N12[label=\"stmt \\\"unreachable\\\";\"];\n     N13[label=\"block { return; \\\"unreachable\\\"; }\"];\n-    N14[label=\"expr if x > 1i { return; \\\"unreachable\\\"; }\"];\n-    N15[label=\"block { let x = 14i; if x > 1i { return; \\\"unreachable\\\"; } }\"];\n+    N14[label=\"expr if x > 1is { return; \\\"unreachable\\\"; }\"];\n+    N15[label=\"block { let x = 14is; if x > 1is { return; \\\"unreachable\\\"; } }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "7b01c606083ff1d602f978a13a11b8a88911323b", "filename": "src/test/run-make/graphviz-flowgraph/f15.dot-expected.dot", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,54 +1,54 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 15i\"];\n+    N2[label=\"expr 15is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 15i;\"];\n-    N5[label=\"expr 151i\"];\n+    N4[label=\"stmt let mut x = 15is;\"];\n+    N5[label=\"expr 151is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 151i;\"];\n+    N7[label=\"stmt let mut y = 151is;\"];\n     N8[label=\"(dummy_node)\"];\n-    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { break ; \\\"unreachable\\\"; }\\l                y -= 3i;\\l            }\\l        y -= 4i;\\l        x -= 5i;\\l    }\\l\"];\n+    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { break ; \\\"unreachable\\\"; }\\l                y -= 3is;\\l            }\\l        y -= 4is;\\l        x -= 5is;\\l    }\\l\"];\n     N10[label=\"(dummy_node)\"];\n-    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { break ; \\\"unreachable\\\"; }\\l        y -= 3i;\\l    }\\l\"];\n+    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l\"];\n     N12[label=\"expr x\"];\n-    N13[label=\"expr 1i\"];\n-    N14[label=\"expr x == 1i\"];\n+    N13[label=\"expr 1is\"];\n+    N14[label=\"expr x == 1is\"];\n     N15[label=\"expr break \\'outer\"];\n     N16[label=\"(dummy_node)\"];\n     N17[label=\"stmt break \\'outer ;\"];\n     N18[label=\"expr \\\"unreachable\\\"\"];\n     N19[label=\"stmt \\\"unreachable\\\";\"];\n     N20[label=\"block { break \\'outer ; \\\"unreachable\\\"; }\"];\n-    N21[label=\"expr if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"stmt if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\"];\n+    N21[label=\"expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\"];\n+    N22[label=\"stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\"];\n     N23[label=\"expr y\"];\n-    N24[label=\"expr 2i\"];\n-    N25[label=\"expr y >= 2i\"];\n+    N24[label=\"expr 2is\"];\n+    N25[label=\"expr y >= 2is\"];\n     N26[label=\"expr break\"];\n     N27[label=\"(dummy_node)\"];\n     N28[label=\"stmt break ;\"];\n     N29[label=\"expr \\\"unreachable\\\"\"];\n     N30[label=\"stmt \\\"unreachable\\\";\"];\n     N31[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N32[label=\"expr if y >= 2i { break ; \\\"unreachable\\\"; }\"];\n-    N33[label=\"stmt if y >= 2i { break ; \\\"unreachable\\\"; }\"];\n-    N34[label=\"expr 3i\"];\n+    N32[label=\"expr if y >= 2is { break ; \\\"unreachable\\\"; }\"];\n+    N33[label=\"stmt if y >= 2is { break ; \\\"unreachable\\\"; }\"];\n+    N34[label=\"expr 3is\"];\n     N35[label=\"expr y\"];\n-    N36[label=\"expr y -= 3i\"];\n-    N37[label=\"stmt y -= 3i;\"];\n-    N38[label=\"block {\\l    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { break ; \\\"unreachable\\\"; }\\l    y -= 3i;\\l}\\l\"];\n-    N39[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { break ; \\\"unreachable\\\"; }\\l        y -= 3i;\\l    }\\l\"];\n-    N40[label=\"expr 4i\"];\n+    N36[label=\"expr y -= 3is\"];\n+    N37[label=\"stmt y -= 3is;\"];\n+    N38[label=\"block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { break ; \\\"unreachable\\\"; }\\l    y -= 3is;\\l}\\l\"];\n+    N39[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l\"];\n+    N40[label=\"expr 4is\"];\n     N41[label=\"expr y\"];\n-    N42[label=\"expr y -= 4i\"];\n-    N43[label=\"stmt y -= 4i;\"];\n-    N44[label=\"expr 5i\"];\n+    N42[label=\"expr y -= 4is\"];\n+    N43[label=\"stmt y -= 4is;\"];\n+    N44[label=\"expr 5is\"];\n     N45[label=\"expr x\"];\n-    N46[label=\"expr x -= 5i\"];\n-    N47[label=\"stmt x -= 5i;\"];\n-    N48[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { break ; \\\"unreachable\\\"; }\\l            y -= 3i;\\l        }\\l    y -= 4i;\\l    x -= 5i;\\l}\\l\"];\n-    N49[label=\"block {\\l    let mut x = 15i;\\l    let mut y = 151i;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2i { break ; \\\"unreachable\\\"; }\\l                    y -= 3i;\\l                }\\l            y -= 4i;\\l            x -= 5i;\\l        }\\l}\\l\"];\n+    N46[label=\"expr x -= 5is\"];\n+    N47[label=\"stmt x -= 5is;\"];\n+    N48[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { break ; \\\"unreachable\\\"; }\\l            y -= 3is;\\l        }\\l    y -= 4is;\\l    x -= 5is;\\l}\\l\"];\n+    N49[label=\"block {\\l    let mut x = 15is;\\l    let mut y = 151is;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2is { break ; \\\"unreachable\\\"; }\\l                    y -= 3is;\\l                }\\l            y -= 4is;\\l            x -= 5is;\\l        }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -61,7 +61,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1i { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1i { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { break ; \\\"unreachable\\\"; }\\l    y -= 3i;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { break ; \\\"unreachable\\\"; }\\l        y -= 3i;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { break ; \\\"unreachable\\\"; }\\l        y -= 3i;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { break ; \\\"unreachable\\\"; }\\l            y -= 3i;\\l        }\\l    y -= 4i;\\l    x -= 5i;\\l}\\l\"];\n+    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { break ; \\\"unreachable\\\"; }\\l    y -= 3is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { break ; \\\"unreachable\\\"; }\\l            y -= 3is;\\l        }\\l    y -= 4is;\\l    x -= 5is;\\l}\\l\"];\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -73,7 +73,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 2i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 2i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { break ; \\\"unreachable\\\"; }\\l    y -= 3i;\\l}\\l\"];\n+    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { break ; \\\"unreachable\\\"; }\\l    y -= 3is;\\l}\\l\"];\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "2123185a083869415ef98d716fa46d6f5decb85e", "filename": "src/test/run-make/graphviz-flowgraph/f16.dot-expected.dot", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,57 +1,57 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 16i\"];\n+    N2[label=\"expr 16is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 16i;\"];\n-    N5[label=\"expr 16i\"];\n+    N4[label=\"stmt let mut x = 16is;\"];\n+    N5[label=\"expr 16is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 16i;\"];\n+    N7[label=\"stmt let mut y = 16is;\"];\n     N8[label=\"(dummy_node)\"];\n-    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 1i { break ; \\\"unreachable\\\"; }\\l                y -= 1i;\\l            }\\l        y -= 1i;\\l        x -= 1i;\\l    }\\l\"];\n+    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 1is { break ; \\\"unreachable\\\"; }\\l                y -= 1is;\\l            }\\l        y -= 1is;\\l        x -= 1is;\\l    }\\l\"];\n     N10[label=\"(dummy_node)\"];\n-    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l    }\\l\"];\n+    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l\"];\n     N12[label=\"expr x\"];\n-    N13[label=\"expr 1i\"];\n-    N14[label=\"expr x == 1i\"];\n+    N13[label=\"expr 1is\"];\n+    N14[label=\"expr x == 1is\"];\n     N15[label=\"expr continue \\'outer\"];\n     N16[label=\"(dummy_node)\"];\n     N17[label=\"stmt continue \\'outer ;\"];\n     N18[label=\"expr \\\"unreachable\\\"\"];\n     N19[label=\"stmt \\\"unreachable\\\";\"];\n     N20[label=\"block { continue \\'outer ; \\\"unreachable\\\"; }\"];\n-    N21[label=\"expr if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"stmt if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\"];\n+    N21[label=\"expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\"];\n+    N22[label=\"stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\"];\n     N23[label=\"expr y\"];\n-    N24[label=\"expr 1i\"];\n-    N25[label=\"expr y >= 1i\"];\n+    N24[label=\"expr 1is\"];\n+    N25[label=\"expr y >= 1is\"];\n     N26[label=\"expr break\"];\n     N27[label=\"(dummy_node)\"];\n     N28[label=\"stmt break ;\"];\n     N29[label=\"expr \\\"unreachable\\\"\"];\n     N30[label=\"stmt \\\"unreachable\\\";\"];\n     N31[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N32[label=\"expr if y >= 1i { break ; \\\"unreachable\\\"; }\"];\n-    N33[label=\"stmt if y >= 1i { break ; \\\"unreachable\\\"; }\"];\n-    N34[label=\"expr 1i\"];\n+    N32[label=\"expr if y >= 1is { break ; \\\"unreachable\\\"; }\"];\n+    N33[label=\"stmt if y >= 1is { break ; \\\"unreachable\\\"; }\"];\n+    N34[label=\"expr 1is\"];\n     N35[label=\"expr y\"];\n-    N36[label=\"expr y -= 1i\"];\n-    N37[label=\"stmt y -= 1i;\"];\n-    N38[label=\"block {\\l    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l}\\l\"];\n-    N39[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l    }\\l\"];\n-    N40[label=\"expr 1i\"];\n+    N36[label=\"expr y -= 1is\"];\n+    N37[label=\"stmt y -= 1is;\"];\n+    N38[label=\"block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l}\\l\"];\n+    N39[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l\"];\n+    N40[label=\"expr 1is\"];\n     N41[label=\"expr y\"];\n-    N42[label=\"expr y -= 1i\"];\n-    N43[label=\"stmt y -= 1i;\"];\n-    N44[label=\"expr 1i\"];\n+    N42[label=\"expr y -= 1is\"];\n+    N43[label=\"stmt y -= 1is;\"];\n+    N44[label=\"expr 1is\"];\n     N45[label=\"expr x\"];\n-    N46[label=\"expr x -= 1i\"];\n-    N47[label=\"stmt x -= 1i;\"];\n-    N48[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 1i { break ; \\\"unreachable\\\"; }\\l            y -= 1i;\\l        }\\l    y -= 1i;\\l    x -= 1i;\\l}\\l\"];\n-    N49[label=\"stmt \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 1i { break ; \\\"unreachable\\\"; }\\l                y -= 1i;\\l            }\\l        y -= 1i;\\l        x -= 1i;\\l    }\\l\"];\n+    N46[label=\"expr x -= 1is\"];\n+    N47[label=\"stmt x -= 1is;\"];\n+    N48[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 1is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l        }\\l    y -= 1is;\\l    x -= 1is;\\l}\\l\"];\n+    N49[label=\"stmt \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 1is { break ; \\\"unreachable\\\"; }\\l                y -= 1is;\\l            }\\l        y -= 1is;\\l        x -= 1is;\\l    }\\l\"];\n     N50[label=\"expr \\\"unreachable\\\"\"];\n     N51[label=\"stmt \\\"unreachable\\\";\"];\n-    N52[label=\"block {\\l    let mut x = 16i;\\l    let mut y = 16i;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 1i { break ; \\\"unreachable\\\"; }\\l                    y -= 1i;\\l                }\\l            y -= 1i;\\l            x -= 1i;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N52[label=\"block {\\l    let mut x = 16is;\\l    let mut y = 16is;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 1is { break ; \\\"unreachable\\\"; }\\l                    y -= 1is;\\l                }\\l            y -= 1is;\\l            x -= 1is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -64,7 +64,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1i { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1i { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 1i { break ; \\\"unreachable\\\"; }\\l            y -= 1i;\\l        }\\l    y -= 1i;\\l    x -= 1i;\\l}\\l\"];\n+    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 1is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l        }\\l    y -= 1is;\\l    x -= 1is;\\l}\\l\"];\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -76,7 +76,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 1i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 1i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l}\\l\"];\n+    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 1is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 1is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l}\\l\"];\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "7941b4f7ce540daee6eba3f28f0321a9b377cdb7", "filename": "src/test/run-make/graphviz-flowgraph/f17.dot-expected.dot", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff17.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff17.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff17.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,13 +1,13 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 1i\"];\n-    N3[label=\"expr 7i\"];\n-    N4[label=\"expr 17i\"];\n-    N5[label=\"expr [1i, 7i, 17i]\"];\n+    N2[label=\"expr 1is\"];\n+    N3[label=\"expr 7is\"];\n+    N4[label=\"expr 17is\"];\n+    N5[label=\"expr [1is, 7is, 17is]\"];\n     N6[label=\"local _v\"];\n-    N7[label=\"stmt let _v = [1i, 7i, 17i];\"];\n-    N8[label=\"block { let _v = [1i, 7i, 17i]; }\"];\n+    N7[label=\"stmt let _v = [1is, 7is, 17is];\"];\n+    N8[label=\"block { let _v = [1is, 7is, 17is]; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "c9e4b41c8126935c34914c3b8fc595729c6ec6bc", "filename": "src/test/run-make/graphviz-flowgraph/f20.dot-expected.dot", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff20.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff20.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff20.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,17 +1,17 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 2u\"];\n-    N3[label=\"expr 0u\"];\n-    N4[label=\"expr 20u\"];\n-    N5[label=\"expr [2u, 0u, 20u]\"];\n+    N2[label=\"expr 2us\"];\n+    N3[label=\"expr 0us\"];\n+    N4[label=\"expr 20us\"];\n+    N5[label=\"expr [2us, 0us, 20us]\"];\n     N6[label=\"local v\"];\n-    N7[label=\"stmt let v = [2u, 0u, 20u];\"];\n+    N7[label=\"stmt let v = [2us, 0us, 20us];\"];\n     N8[label=\"expr v\"];\n-    N9[label=\"expr 20u\"];\n-    N10[label=\"expr v[20u]\"];\n-    N11[label=\"stmt v[20u];\"];\n-    N12[label=\"block { let v = [2u, 0u, 20u]; v[20u]; }\"];\n+    N9[label=\"expr 20us\"];\n+    N10[label=\"expr v[20us]\"];\n+    N11[label=\"stmt v[20us];\"];\n+    N12[label=\"block { let v = [2us, 0us, 20us]; v[20us]; }\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;"}, {"sha": "e7a2cf2ff732f97e8d800858207ccf8f3f273b85", "filename": "src/test/run-make/graphviz-flowgraph/f21.dot-expected.dot", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,52 +1,52 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 15i\"];\n+    N2[label=\"expr 15is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 15i;\"];\n-    N5[label=\"expr 151i\"];\n+    N4[label=\"stmt let mut x = 15is;\"];\n+    N5[label=\"expr 151is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 151i;\"];\n+    N7[label=\"stmt let mut y = 151is;\"];\n     N8[label=\"(dummy_node)\"];\n-    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { return; \\\"unreachable\\\"; }\\l                y -= 3i;\\l                x -= 5i;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                y -= 3is;\\l                x -= 5is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n     N10[label=\"(dummy_node)\"];\n-    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        y -= 3i;\\l        x -= 5i;\\l    }\\l\"];\n+    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l\"];\n     N12[label=\"expr x\"];\n-    N13[label=\"expr 1i\"];\n-    N14[label=\"expr x == 1i\"];\n+    N13[label=\"expr 1is\"];\n+    N14[label=\"expr x == 1is\"];\n     N15[label=\"expr break \\'outer\"];\n     N16[label=\"(dummy_node)\"];\n     N17[label=\"stmt break \\'outer ;\"];\n     N18[label=\"expr \\\"unreachable\\\"\"];\n     N19[label=\"stmt \\\"unreachable\\\";\"];\n     N20[label=\"block { break \\'outer ; \\\"unreachable\\\"; }\"];\n-    N21[label=\"expr if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"stmt if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\"];\n+    N21[label=\"expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\"];\n+    N22[label=\"stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\"];\n     N23[label=\"expr y\"];\n-    N24[label=\"expr 2i\"];\n-    N25[label=\"expr y >= 2i\"];\n+    N24[label=\"expr 2is\"];\n+    N25[label=\"expr y >= 2is\"];\n     N26[label=\"expr return\"];\n     N27[label=\"(dummy_node)\"];\n     N28[label=\"stmt return;\"];\n     N29[label=\"expr \\\"unreachable\\\"\"];\n     N30[label=\"stmt \\\"unreachable\\\";\"];\n     N31[label=\"block { return; \\\"unreachable\\\"; }\"];\n-    N32[label=\"expr if y >= 2i { return; \\\"unreachable\\\"; }\"];\n-    N33[label=\"stmt if y >= 2i { return; \\\"unreachable\\\"; }\"];\n-    N34[label=\"expr 3i\"];\n+    N32[label=\"expr if y >= 2is { return; \\\"unreachable\\\"; }\"];\n+    N33[label=\"stmt if y >= 2is { return; \\\"unreachable\\\"; }\"];\n+    N34[label=\"expr 3is\"];\n     N35[label=\"expr y\"];\n-    N36[label=\"expr y -= 3i\"];\n-    N37[label=\"stmt y -= 3i;\"];\n-    N38[label=\"expr 5i\"];\n+    N36[label=\"expr y -= 3is\"];\n+    N37[label=\"stmt y -= 3is;\"];\n+    N38[label=\"expr 5is\"];\n     N39[label=\"expr x\"];\n-    N40[label=\"expr x -= 5i\"];\n-    N41[label=\"stmt x -= 5i;\"];\n-    N42[label=\"block {\\l    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { return; \\\"unreachable\\\"; }\\l    y -= 3i;\\l    x -= 5i;\\l}\\l\"];\n-    N43[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        y -= 3i;\\l        x -= 5i;\\l    }\\l\"];\n+    N40[label=\"expr x -= 5is\"];\n+    N41[label=\"stmt x -= 5is;\"];\n+    N42[label=\"block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    y -= 3is;\\l    x -= 5is;\\l}\\l\"];\n+    N43[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l\"];\n     N44[label=\"expr \\\"unreachable\\\"\"];\n     N45[label=\"stmt \\\"unreachable\\\";\"];\n-    N46[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { return; \\\"unreachable\\\"; }\\l            y -= 3i;\\l            x -= 5i;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n-    N47[label=\"block {\\l    let mut x = 15i;\\l    let mut y = 151i;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2i { return; \\\"unreachable\\\"; }\\l                    y -= 3i;\\l                    x -= 5i;\\l                }\\l            \\\"unreachable\\\";\\l        }\\l}\\l\"];\n+    N46[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            y -= 3is;\\l            x -= 5is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N47[label=\"block {\\l    let mut x = 15is;\\l    let mut y = 151is;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2is { return; \\\"unreachable\\\"; }\\l                    y -= 3is;\\l                    x -= 5is;\\l                }\\l            \\\"unreachable\\\";\\l        }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -59,7 +59,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1i { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1i { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { return; \\\"unreachable\\\"; }\\l    y -= 3i;\\l    x -= 5i;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        y -= 3i;\\l        x -= 5i;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        y -= 3i;\\l        x -= 5i;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { return; \\\"unreachable\\\"; }\\l            y -= 3i;\\l            x -= 5i;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    y -= 3is;\\l    x -= 5is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            y -= 3is;\\l            x -= 5is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -71,7 +71,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        y -= 3i;\\l        x -= 5i;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { return; \\\"unreachable\\\"; }\\l                y -= 3i;\\l                x -= 5i;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                y -= 3is;\\l                x -= 5is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "edd39b40b36a3a7b13df891ed2a585d7e88259eb", "filename": "src/test/run-make/graphviz-flowgraph/f22.dot-expected.dot", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,55 +1,55 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 15i\"];\n+    N2[label=\"expr 15is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 15i;\"];\n-    N5[label=\"expr 151i\"];\n+    N4[label=\"stmt let mut x = 15is;\"];\n+    N5[label=\"expr 151is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 151i;\"];\n+    N7[label=\"stmt let mut y = 151is;\"];\n     N8[label=\"(dummy_node)\"];\n-    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { return; \\\"unreachable\\\"; }\\l                x -= 1i;\\l                y -= 3i;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N9[label=\"expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                x -= 1is;\\l                y -= 3is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n     N10[label=\"(dummy_node)\"];\n-    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        y -= 3i;\\l    }\\l\"];\n+    N11[label=\"expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l\"];\n     N12[label=\"expr x\"];\n-    N13[label=\"expr 1i\"];\n-    N14[label=\"expr x == 1i\"];\n+    N13[label=\"expr 1is\"];\n+    N14[label=\"expr x == 1is\"];\n     N15[label=\"expr continue \\'outer\"];\n     N16[label=\"(dummy_node)\"];\n     N17[label=\"stmt continue \\'outer ;\"];\n     N18[label=\"expr \\\"unreachable\\\"\"];\n     N19[label=\"stmt \\\"unreachable\\\";\"];\n     N20[label=\"block { continue \\'outer ; \\\"unreachable\\\"; }\"];\n-    N21[label=\"expr if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"stmt if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\"];\n+    N21[label=\"expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\"];\n+    N22[label=\"stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\"];\n     N23[label=\"expr y\"];\n-    N24[label=\"expr 2i\"];\n-    N25[label=\"expr y >= 2i\"];\n+    N24[label=\"expr 2is\"];\n+    N25[label=\"expr y >= 2is\"];\n     N26[label=\"expr return\"];\n     N27[label=\"(dummy_node)\"];\n     N28[label=\"stmt return;\"];\n     N29[label=\"expr \\\"unreachable\\\"\"];\n     N30[label=\"stmt \\\"unreachable\\\";\"];\n     N31[label=\"block { return; \\\"unreachable\\\"; }\"];\n-    N32[label=\"expr if y >= 2i { return; \\\"unreachable\\\"; }\"];\n-    N33[label=\"stmt if y >= 2i { return; \\\"unreachable\\\"; }\"];\n-    N34[label=\"expr 1i\"];\n+    N32[label=\"expr if y >= 2is { return; \\\"unreachable\\\"; }\"];\n+    N33[label=\"stmt if y >= 2is { return; \\\"unreachable\\\"; }\"];\n+    N34[label=\"expr 1is\"];\n     N35[label=\"expr x\"];\n-    N36[label=\"expr x -= 1i\"];\n-    N37[label=\"stmt x -= 1i;\"];\n-    N38[label=\"expr 3i\"];\n+    N36[label=\"expr x -= 1is\"];\n+    N37[label=\"stmt x -= 1is;\"];\n+    N38[label=\"expr 3is\"];\n     N39[label=\"expr y\"];\n-    N40[label=\"expr y -= 3i\"];\n-    N41[label=\"stmt y -= 3i;\"];\n-    N42[label=\"block {\\l    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { return; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    y -= 3i;\\l}\\l\"];\n-    N43[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        y -= 3i;\\l    }\\l\"];\n+    N40[label=\"expr y -= 3is\"];\n+    N41[label=\"stmt y -= 3is;\"];\n+    N42[label=\"block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    y -= 3is;\\l}\\l\"];\n+    N43[label=\"stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l\"];\n     N44[label=\"expr \\\"unreachable\\\"\"];\n     N45[label=\"stmt \\\"unreachable\\\";\"];\n-    N46[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { return; \\\"unreachable\\\"; }\\l            x -= 1i;\\l            y -= 3i;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n-    N47[label=\"stmt \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { return; \\\"unreachable\\\"; }\\l                x -= 1i;\\l                y -= 3i;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N46[label=\"block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            x -= 1is;\\l            y -= 3is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N47[label=\"stmt \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                x -= 1is;\\l                y -= 3is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n     N48[label=\"expr \\\"unreachable\\\"\"];\n     N49[label=\"stmt \\\"unreachable\\\";\"];\n-    N50[label=\"block {\\l    let mut x = 15i;\\l    let mut y = 151i;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2i { return; \\\"unreachable\\\"; }\\l                    x -= 1i;\\l                    y -= 3i;\\l                }\\l            \\\"unreachable\\\";\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N50[label=\"block {\\l    let mut x = 15is;\\l    let mut y = 151is;\\l    \\'outer:\\l        loop  {\\l            \\'inner:\\l                loop  {\\l                    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                    if y >= 2is { return; \\\"unreachable\\\"; }\\l                    x -= 1is;\\l                    y -= 3is;\\l                }\\l            \\\"unreachable\\\";\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -62,7 +62,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1i { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1i { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2i { return; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    y -= 3i;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        y -= 3i;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        y -= 3i;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2i { return; \\\"unreachable\\\"; }\\l            x -= 1i;\\l            y -= 3i;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    y -= 3is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            x -= 1is;\\l            y -= 3is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -74,7 +74,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2i { return; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        y -= 3i;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1i { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2i { return; \\\"unreachable\\\"; }\\l                x -= 1i;\\l                y -= 3i;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                x -= 1is;\\l                y -= 3is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "2b5c5cdff44e33eb69d60ef07ab9a9904aa40998", "filename": "src/test/run-make/graphviz-flowgraph/f23.dot-expected.dot", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,57 +1,57 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 23i\"];\n+    N2[label=\"expr 23is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 23i;\"];\n-    N5[label=\"expr 23i\"];\n+    N4[label=\"stmt let mut x = 23is;\"];\n+    N5[label=\"expr 23is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 23i;\"];\n-    N8[label=\"expr 23i\"];\n+    N7[label=\"stmt let mut y = 23is;\"];\n+    N8[label=\"expr 23is\"];\n     N9[label=\"local mut z\"];\n-    N10[label=\"stmt let mut z = 23i;\"];\n+    N10[label=\"stmt let mut z = 23is;\"];\n     N11[label=\"(dummy_node)\"];\n     N12[label=\"expr x\"];\n-    N13[label=\"expr 0i\"];\n-    N14[label=\"expr x > 0i\"];\n-    N15[label=\"expr while x > 0i {\\l    x -= 1i;\\l    while y > 0i {\\l        y -= 1i;\\l        while z > 0i { z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n-    N16[label=\"expr 1i\"];\n+    N13[label=\"expr 0is\"];\n+    N14[label=\"expr x > 0is\"];\n+    N15[label=\"expr while x > 0is {\\l    x -= 1is;\\l    while y > 0is {\\l        y -= 1is;\\l        while z > 0is { z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N16[label=\"expr 1is\"];\n     N17[label=\"expr x\"];\n-    N18[label=\"expr x -= 1i\"];\n-    N19[label=\"stmt x -= 1i;\"];\n+    N18[label=\"expr x -= 1is\"];\n+    N19[label=\"stmt x -= 1is;\"];\n     N20[label=\"(dummy_node)\"];\n     N21[label=\"expr y\"];\n-    N22[label=\"expr 0i\"];\n-    N23[label=\"expr y > 0i\"];\n-    N24[label=\"expr while y > 0i {\\l    y -= 1i;\\l    while z > 0i { z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l\"];\n-    N25[label=\"expr 1i\"];\n+    N22[label=\"expr 0is\"];\n+    N23[label=\"expr y > 0is\"];\n+    N24[label=\"expr while y > 0is {\\l    y -= 1is;\\l    while z > 0is { z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N25[label=\"expr 1is\"];\n     N26[label=\"expr y\"];\n-    N27[label=\"expr y -= 1i\"];\n-    N28[label=\"stmt y -= 1i;\"];\n+    N27[label=\"expr y -= 1is\"];\n+    N28[label=\"stmt y -= 1is;\"];\n     N29[label=\"(dummy_node)\"];\n     N30[label=\"expr z\"];\n-    N31[label=\"expr 0i\"];\n-    N32[label=\"expr z > 0i\"];\n-    N33[label=\"expr while z > 0i { z -= 1i; }\"];\n-    N34[label=\"expr 1i\"];\n+    N31[label=\"expr 0is\"];\n+    N32[label=\"expr z > 0is\"];\n+    N33[label=\"expr while z > 0is { z -= 1is; }\"];\n+    N34[label=\"expr 1is\"];\n     N35[label=\"expr z\"];\n-    N36[label=\"expr z -= 1i\"];\n-    N37[label=\"stmt z -= 1i;\"];\n-    N38[label=\"block { z -= 1i; }\"];\n-    N39[label=\"stmt while z > 0i { z -= 1i; }\"];\n+    N36[label=\"expr z -= 1is\"];\n+    N37[label=\"stmt z -= 1is;\"];\n+    N38[label=\"block { z -= 1is; }\"];\n+    N39[label=\"stmt while z > 0is { z -= 1is; }\"];\n     N40[label=\"expr x\"];\n-    N41[label=\"expr 10i\"];\n-    N42[label=\"expr x > 10i\"];\n+    N41[label=\"expr 10is\"];\n+    N42[label=\"expr x > 10is\"];\n     N43[label=\"expr return\"];\n     N44[label=\"(dummy_node)\"];\n     N45[label=\"stmt return;\"];\n     N46[label=\"expr \\\"unreachable\\\"\"];\n     N47[label=\"stmt \\\"unreachable\\\";\"];\n     N48[label=\"block { return; \\\"unreachable\\\"; }\"];\n-    N49[label=\"expr if x > 10i { return; \\\"unreachable\\\"; }\"];\n-    N50[label=\"block { y -= 1i; while z > 0i { z -= 1i; } if x > 10i { return; \\\"unreachable\\\"; } }\"];\n-    N51[label=\"block {\\l    x -= 1i;\\l    while y > 0i {\\l        y -= 1i;\\l        while z > 0i { z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n-    N52[label=\"block {\\l    let mut x = 23i;\\l    let mut y = 23i;\\l    let mut z = 23i;\\l    while x > 0i {\\l        x -= 1i;\\l        while y > 0i {\\l            y -= 1i;\\l            while z > 0i { z -= 1i; }\\l            if x > 10i { return; \\\"unreachable\\\"; }\\l        }\\l    }\\l}\\l\"];\n+    N49[label=\"expr if x > 10is { return; \\\"unreachable\\\"; }\"];\n+    N50[label=\"block {\\l    y -= 1is;\\l    while z > 0is { z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N51[label=\"block {\\l    x -= 1is;\\l    while y > 0is {\\l        y -= 1is;\\l        while z > 0is { z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N52[label=\"block {\\l    let mut x = 23is;\\l    let mut y = 23is;\\l    let mut z = 23is;\\l    while x > 0is {\\l        x -= 1is;\\l        while y > 0is {\\l            y -= 1is;\\l            while z > 0is { z -= 1is; }\\l            if x > 10is { return; \\\"unreachable\\\"; }\\l        }\\l    }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -95,7 +95,7 @@ digraph block {\n     N40 -> N41;\n     N41 -> N42;\n     N42 -> N43;\n-    N43 -> N1[label=\"exiting scope_0 expr while y > 0i {\\l    y -= 1i;\\l    while z > 0i { z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr while x > 0i {\\l    x -= 1i;\\l    while y > 0i {\\l        y -= 1i;\\l        while z > 0i { z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N43 -> N1[label=\"exiting scope_0 expr while y > 0is {\\l    y -= 1is;\\l    while z > 0is { z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr while x > 0is {\\l    x -= 1is;\\l    while y > 0is {\\l        y -= 1is;\\l        while z > 0is { z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n     N44 -> N45;\n     N45 -> N46;\n     N46 -> N47;"}, {"sha": "ee3fe7ced6cd71d6b4d0fa691c67e8233106aa15", "filename": "src/test/run-make/graphviz-flowgraph/f24.dot-expected.dot", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,81 +1,81 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 24i\"];\n+    N2[label=\"expr 24is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 24i;\"];\n-    N5[label=\"expr 24i\"];\n+    N4[label=\"stmt let mut x = 24is;\"];\n+    N5[label=\"expr 24is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 24i;\"];\n-    N8[label=\"expr 24i\"];\n+    N7[label=\"stmt let mut y = 24is;\"];\n+    N8[label=\"expr 24is\"];\n     N9[label=\"local mut z\"];\n-    N10[label=\"stmt let mut z = 24i;\"];\n+    N10[label=\"stmt let mut z = 24is;\"];\n     N11[label=\"(dummy_node)\"];\n-    N12[label=\"expr loop  {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    loop  {\\l        if y == 0i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l        loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N12[label=\"expr loop  {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n     N13[label=\"expr x\"];\n-    N14[label=\"expr 0i\"];\n-    N15[label=\"expr x == 0i\"];\n+    N14[label=\"expr 0is\"];\n+    N15[label=\"expr x == 0is\"];\n     N16[label=\"expr break\"];\n     N17[label=\"(dummy_node)\"];\n     N18[label=\"stmt break ;\"];\n     N19[label=\"expr \\\"unreachable\\\"\"];\n     N20[label=\"stmt \\\"unreachable\\\";\"];\n     N21[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"expr if x == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N23[label=\"stmt if x == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N24[label=\"expr 1i\"];\n+    N22[label=\"expr if x == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N23[label=\"stmt if x == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N24[label=\"expr 1is\"];\n     N25[label=\"expr x\"];\n-    N26[label=\"expr x -= 1i\"];\n-    N27[label=\"stmt x -= 1i;\"];\n+    N26[label=\"expr x -= 1is\"];\n+    N27[label=\"stmt x -= 1is;\"];\n     N28[label=\"(dummy_node)\"];\n-    N29[label=\"expr loop  {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N29[label=\"expr loop  {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n     N30[label=\"expr y\"];\n-    N31[label=\"expr 0i\"];\n-    N32[label=\"expr y == 0i\"];\n+    N31[label=\"expr 0is\"];\n+    N32[label=\"expr y == 0is\"];\n     N33[label=\"expr break\"];\n     N34[label=\"(dummy_node)\"];\n     N35[label=\"stmt break ;\"];\n     N36[label=\"expr \\\"unreachable\\\"\"];\n     N37[label=\"stmt \\\"unreachable\\\";\"];\n     N38[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N39[label=\"expr if y == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N40[label=\"stmt if y == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N41[label=\"expr 1i\"];\n+    N39[label=\"expr if y == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N40[label=\"stmt if y == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N41[label=\"expr 1is\"];\n     N42[label=\"expr y\"];\n-    N43[label=\"expr y -= 1i\"];\n-    N44[label=\"stmt y -= 1i;\"];\n+    N43[label=\"expr y -= 1is\"];\n+    N44[label=\"stmt y -= 1is;\"];\n     N45[label=\"(dummy_node)\"];\n-    N46[label=\"expr loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N46[label=\"expr loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N47[label=\"expr z\"];\n-    N48[label=\"expr 0i\"];\n-    N49[label=\"expr z == 0i\"];\n+    N48[label=\"expr 0is\"];\n+    N49[label=\"expr z == 0is\"];\n     N50[label=\"expr break\"];\n     N51[label=\"(dummy_node)\"];\n     N52[label=\"stmt break ;\"];\n     N53[label=\"expr \\\"unreachable\\\"\"];\n     N54[label=\"stmt \\\"unreachable\\\";\"];\n     N55[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N56[label=\"expr if z == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N57[label=\"stmt if z == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N58[label=\"expr 1i\"];\n+    N56[label=\"expr if z == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N57[label=\"stmt if z == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N58[label=\"expr 1is\"];\n     N59[label=\"expr z\"];\n-    N60[label=\"expr z -= 1i\"];\n-    N61[label=\"stmt z -= 1i;\"];\n-    N62[label=\"block { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n-    N63[label=\"stmt loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N60[label=\"expr z -= 1is\"];\n+    N61[label=\"stmt z -= 1is;\"];\n+    N62[label=\"block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n+    N63[label=\"stmt loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N64[label=\"expr x\"];\n-    N65[label=\"expr 10i\"];\n-    N66[label=\"expr x > 10i\"];\n+    N65[label=\"expr 10is\"];\n+    N66[label=\"expr x > 10is\"];\n     N67[label=\"expr return\"];\n     N68[label=\"(dummy_node)\"];\n     N69[label=\"stmt return;\"];\n     N70[label=\"expr \\\"unreachable\\\"\"];\n     N71[label=\"stmt \\\"unreachable\\\";\"];\n     N72[label=\"block { return; \\\"unreachable\\\"; }\"];\n-    N73[label=\"expr if x > 10i { return; \\\"unreachable\\\"; }\"];\n-    N74[label=\"block {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l\"];\n-    N75[label=\"block {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    loop  {\\l        if y == 0i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l        loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n-    N76[label=\"block {\\l    let mut x = 24i;\\l    let mut y = 24i;\\l    let mut z = 24i;\\l    loop  {\\l        if x == 0i { break ; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        loop  {\\l            if y == 0i { break ; \\\"unreachable\\\"; }\\l            y -= 1i;\\l            loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l            if x > 10i { return; \\\"unreachable\\\"; }\\l        }\\l    }\\l}\\l\"];\n+    N73[label=\"expr if x > 10is { return; \\\"unreachable\\\"; }\"];\n+    N74[label=\"block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N75[label=\"block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N76[label=\"block {\\l    let mut x = 24is;\\l    let mut y = 24is;\\l    let mut z = 24is;\\l    loop  {\\l        if x == 0is { break ; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        loop  {\\l            if y == 0is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l            loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l            if x > 10is { return; \\\"unreachable\\\"; }\\l        }\\l    }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -90,7 +90,7 @@ digraph block {\n     N13 -> N14;\n     N14 -> N15;\n     N15 -> N16;\n-    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    loop  {\\l        if y == 0i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l        loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n     N17 -> N18;\n     N18 -> N19;\n     N19 -> N20;\n@@ -107,7 +107,7 @@ digraph block {\n     N30 -> N31;\n     N31 -> N32;\n     N32 -> N33;\n-    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n     N34 -> N35;\n     N35 -> N36;\n     N36 -> N37;\n@@ -124,7 +124,7 @@ digraph block {\n     N47 -> N48;\n     N48 -> N49;\n     N49 -> N50;\n-    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N51 -> N52;\n     N52 -> N53;\n     N53 -> N54;\n@@ -143,7 +143,7 @@ digraph block {\n     N64 -> N65;\n     N65 -> N66;\n     N66 -> N67;\n-    N67 -> N1[label=\"exiting scope_0 expr loop  {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr loop  {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    loop  {\\l        if y == 0i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l        loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l        if x > 10i { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N67 -> N1[label=\"exiting scope_0 expr loop  {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr loop  {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n     N68 -> N69;\n     N69 -> N70;\n     N70 -> N71;"}, {"sha": "82799c724b0bde59299236539d819b70c33a3603", "filename": "src/test/run-make/graphviz-flowgraph/f25.dot-expected.dot", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/5a4ca319185a3f399986bc5e5a2d0a96fac583ae/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot?ref=5a4ca319185a3f399986bc5e5a2d0a96fac583ae", "patch": "@@ -1,81 +1,81 @@\n digraph block {\n     N0[label=\"entry\"];\n     N1[label=\"exit\"];\n-    N2[label=\"expr 25i\"];\n+    N2[label=\"expr 25is\"];\n     N3[label=\"local mut x\"];\n-    N4[label=\"stmt let mut x = 25i;\"];\n-    N5[label=\"expr 25i\"];\n+    N4[label=\"stmt let mut x = 25is;\"];\n+    N5[label=\"expr 25is\"];\n     N6[label=\"local mut y\"];\n-    N7[label=\"stmt let mut y = 25i;\"];\n-    N8[label=\"expr 25i\"];\n+    N7[label=\"stmt let mut y = 25is;\"];\n+    N8[label=\"expr 25is\"];\n     N9[label=\"local mut z\"];\n-    N10[label=\"stmt let mut z = 25i;\"];\n+    N10[label=\"stmt let mut z = 25is;\"];\n     N11[label=\"(dummy_node)\"];\n-    N12[label=\"expr \\'a:\\l    loop  {\\l        if x == 0i { break ; \\\"unreachable\\\"; }\\l        x -= 1i;\\l        \\'a:\\l            loop  {\\l                if y == 0i { break ; \\\"unreachable\\\"; }\\l                y -= 1i;\\l                \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l                if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l            }\\l    }\\l\"];\n+    N12[label=\"expr \\'a:\\l    loop  {\\l        if x == 0is { break ; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        \\'a:\\l            loop  {\\l                if y == 0is { break ; \\\"unreachable\\\"; }\\l                y -= 1is;\\l                \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l                if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l            }\\l    }\\l\"];\n     N13[label=\"expr x\"];\n-    N14[label=\"expr 0i\"];\n-    N15[label=\"expr x == 0i\"];\n+    N14[label=\"expr 0is\"];\n+    N15[label=\"expr x == 0is\"];\n     N16[label=\"expr break\"];\n     N17[label=\"(dummy_node)\"];\n     N18[label=\"stmt break ;\"];\n     N19[label=\"expr \\\"unreachable\\\"\"];\n     N20[label=\"stmt \\\"unreachable\\\";\"];\n     N21[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N22[label=\"expr if x == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N23[label=\"stmt if x == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N24[label=\"expr 1i\"];\n+    N22[label=\"expr if x == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N23[label=\"stmt if x == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N24[label=\"expr 1is\"];\n     N25[label=\"expr x\"];\n-    N26[label=\"expr x -= 1i\"];\n-    N27[label=\"stmt x -= 1i;\"];\n+    N26[label=\"expr x -= 1is\"];\n+    N27[label=\"stmt x -= 1is;\"];\n     N28[label=\"(dummy_node)\"];\n-    N29[label=\"expr \\'a:\\l    loop  {\\l        if y == 0i { break ; \\\"unreachable\\\"; }\\l        y -= 1i;\\l        \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l        if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l    }\\l\"];\n+    N29[label=\"expr \\'a:\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l    }\\l\"];\n     N30[label=\"expr y\"];\n-    N31[label=\"expr 0i\"];\n-    N32[label=\"expr y == 0i\"];\n+    N31[label=\"expr 0is\"];\n+    N32[label=\"expr y == 0is\"];\n     N33[label=\"expr break\"];\n     N34[label=\"(dummy_node)\"];\n     N35[label=\"stmt break ;\"];\n     N36[label=\"expr \\\"unreachable\\\"\"];\n     N37[label=\"stmt \\\"unreachable\\\";\"];\n     N38[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N39[label=\"expr if y == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N40[label=\"stmt if y == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N41[label=\"expr 1i\"];\n+    N39[label=\"expr if y == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N40[label=\"stmt if y == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N41[label=\"expr 1is\"];\n     N42[label=\"expr y\"];\n-    N43[label=\"expr y -= 1i\"];\n-    N44[label=\"stmt y -= 1i;\"];\n+    N43[label=\"expr y -= 1is\"];\n+    N44[label=\"stmt y -= 1is;\"];\n     N45[label=\"(dummy_node)\"];\n-    N46[label=\"expr \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N46[label=\"expr \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N47[label=\"expr z\"];\n-    N48[label=\"expr 0i\"];\n-    N49[label=\"expr z == 0i\"];\n+    N48[label=\"expr 0is\"];\n+    N49[label=\"expr z == 0is\"];\n     N50[label=\"expr break\"];\n     N51[label=\"(dummy_node)\"];\n     N52[label=\"stmt break ;\"];\n     N53[label=\"expr \\\"unreachable\\\"\"];\n     N54[label=\"stmt \\\"unreachable\\\";\"];\n     N55[label=\"block { break ; \\\"unreachable\\\"; }\"];\n-    N56[label=\"expr if z == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N57[label=\"stmt if z == 0i { break ; \\\"unreachable\\\"; }\"];\n-    N58[label=\"expr 1i\"];\n+    N56[label=\"expr if z == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N57[label=\"stmt if z == 0is { break ; \\\"unreachable\\\"; }\"];\n+    N58[label=\"expr 1is\"];\n     N59[label=\"expr z\"];\n-    N60[label=\"expr z -= 1i\"];\n-    N61[label=\"stmt z -= 1i;\"];\n-    N62[label=\"block { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n-    N63[label=\"stmt \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N60[label=\"expr z -= 1is\"];\n+    N61[label=\"stmt z -= 1is;\"];\n+    N62[label=\"block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n+    N63[label=\"stmt \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N64[label=\"expr x\"];\n-    N65[label=\"expr 10i\"];\n-    N66[label=\"expr x > 10i\"];\n+    N65[label=\"expr 10is\"];\n+    N66[label=\"expr x > 10is\"];\n     N67[label=\"expr continue \\'a\"];\n     N68[label=\"(dummy_node)\"];\n     N69[label=\"stmt continue \\'a ;\"];\n     N70[label=\"expr \\\"unreachable\\\"\"];\n     N71[label=\"stmt \\\"unreachable\\\";\"];\n     N72[label=\"block { continue \\'a ; \\\"unreachable\\\"; }\"];\n-    N73[label=\"expr if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\"];\n-    N74[label=\"block {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n-    N75[label=\"block {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    \\'a:\\l        loop  {\\l            if y == 0i { break ; \\\"unreachable\\\"; }\\l            y -= 1i;\\l            \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l            if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l        }\\l}\\l\"];\n-    N76[label=\"block {\\l    let mut x = 25i;\\l    let mut y = 25i;\\l    let mut z = 25i;\\l    \\'a:\\l        loop  {\\l            if x == 0i { break ; \\\"unreachable\\\"; }\\l            x -= 1i;\\l            \\'a:\\l                loop  {\\l                    if y == 0i { break ; \\\"unreachable\\\"; }\\l                    y -= 1i;\\l                    \\'a:\\l                        loop  {\\l                            if z == 0i { break ; \\\"unreachable\\\"; }\\l                            z -= 1i;\\l                        }\\l                    if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l                }\\l        }\\l}\\l\"];\n+    N73[label=\"expr if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\"];\n+    N74[label=\"block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N75[label=\"block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    \\'a:\\l        loop  {\\l            if y == 0is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l            \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l            if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l        }\\l}\\l\"];\n+    N76[label=\"block {\\l    let mut x = 25is;\\l    let mut y = 25is;\\l    let mut z = 25is;\\l    \\'a:\\l        loop  {\\l            if x == 0is { break ; \\\"unreachable\\\"; }\\l            x -= 1is;\\l            \\'a:\\l                loop  {\\l                    if y == 0is { break ; \\\"unreachable\\\"; }\\l                    y -= 1is;\\l                    \\'a:\\l                        loop  {\\l                            if z == 0is { break ; \\\"unreachable\\\"; }\\l                            z -= 1is;\\l                        }\\l                    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l                }\\l        }\\l}\\l\"];\n     N0 -> N2;\n     N2 -> N3;\n     N3 -> N4;\n@@ -90,7 +90,7 @@ digraph block {\n     N13 -> N14;\n     N14 -> N15;\n     N15 -> N16;\n-    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0i { break ; \\\"unreachable\\\"; }\\l    x -= 1i;\\l    \\'a:\\l        loop  {\\l            if y == 0i { break ; \\\"unreachable\\\"; }\\l            y -= 1i;\\l            \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l            if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l        }\\l}\\l\"];\n+    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    \\'a:\\l        loop  {\\l            if y == 0is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l            \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l            if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l        }\\l}\\l\"];\n     N17 -> N18;\n     N18 -> N19;\n     N19 -> N20;\n@@ -107,7 +107,7 @@ digraph block {\n     N30 -> N31;\n     N31 -> N32;\n     N32 -> N33;\n-    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n     N34 -> N35;\n     N35 -> N36;\n     N36 -> N37;\n@@ -124,7 +124,7 @@ digraph block {\n     N47 -> N48;\n     N48 -> N49;\n     N49 -> N50;\n-    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0i { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\"];\n+    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n     N51 -> N52;\n     N52 -> N53;\n     N53 -> N54;\n@@ -143,7 +143,7 @@ digraph block {\n     N64 -> N65;\n     N65 -> N66;\n     N66 -> N67;\n-    N67 -> N28[label=\"exiting scope_0 expr continue \\'a,\\lexiting scope_1 stmt continue \\'a ;,\\lexiting scope_2 block { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x > 10i { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_4 block {\\l    if y == 0i { break ; \\\"unreachable\\\"; }\\l    y -= 1i;\\l    \\'a: loop  { if z == 0i { break ; \\\"unreachable\\\"; } z -= 1i; }\\l    if x > 10i { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N67 -> N28[label=\"exiting scope_0 expr continue \\'a,\\lexiting scope_1 stmt continue \\'a ;,\\lexiting scope_2 block { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x > 10is { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_4 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n     N68 -> N69;\n     N69 -> N70;\n     N70 -> N71;"}]}