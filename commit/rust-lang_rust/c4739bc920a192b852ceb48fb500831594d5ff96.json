{"sha": "c4739bc920a192b852ceb48fb500831594d5ff96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzM5YmM5MjBhMTkyYjg1MmNlYjQ4ZmI1MDA4MzE1OTRkNWZmOTY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-19T13:21:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-02T15:55:12Z"}, "message": "Rework DocFragment", "tree": {"sha": "0fb239e7a34923fc12b61a80c08a6b04ad559427", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb239e7a34923fc12b61a80c08a6b04ad559427"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4739bc920a192b852ceb48fb500831594d5ff96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4739bc920a192b852ceb48fb500831594d5ff96", "html_url": "https://github.com/rust-lang/rust/commit/c4739bc920a192b852ceb48fb500831594d5ff96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4739bc920a192b852ceb48fb500831594d5ff96/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90ccf4f5adfb2562fc95c996b97faac7775a34bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/90ccf4f5adfb2562fc95c996b97faac7775a34bb", "html_url": "https://github.com/rust-lang/rust/commit/90ccf4f5adfb2562fc95c996b97faac7775a34bb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5c5ad5d7ccf6a9481d122ac42de36343f0961f48", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c4739bc920a192b852ceb48fb500831594d5ff96/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4739bc920a192b852ceb48fb500831594d5ff96/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=c4739bc920a192b852ceb48fb500831594d5ff96", "patch": "@@ -481,7 +481,7 @@ crate enum DocFragmentKind {\n     RawDoc,\n     /// A doc fragment created from a `#[doc(include=\"filename\")]` attribute. Contains both the\n     /// given filename and the file contents.\n-    Include { filename: String },\n+    Include { filename: Symbol },\n }\n \n impl<'a> FromIterator<&'a DocFragment> for String {\n@@ -565,21 +565,21 @@ impl Attributes {\n     /// Reads a `MetaItem` from within an attribute, looks for whether it is a\n     /// `#[doc(include=\"file\")]`, and returns the filename and contents of the file as loaded from\n     /// its expansion.\n-    crate fn extract_include(mi: &ast::MetaItem) -> Option<(String, String)> {\n+    crate fn extract_include(mi: &ast::MetaItem) -> Option<(Symbol, String)> {\n         mi.meta_item_list().and_then(|list| {\n             for meta in list {\n                 if meta.has_name(sym::include) {\n                     // the actual compiled `#[doc(include=\"filename\")]` gets expanded to\n                     // `#[doc(include(file=\"filename\", contents=\"file contents\")]` so we need to\n                     // look for that instead\n                     return meta.meta_item_list().and_then(|list| {\n-                        let mut filename: Option<String> = None;\n+                        let mut filename: Option<Symbol> = None;\n                         let mut contents: Option<String> = None;\n \n                         for it in list {\n                             if it.has_name(sym::file) {\n                                 if let Some(name) = it.value_str() {\n-                                    filename = Some(name.to_string());\n+                                    filename = Some(name);\n                                 }\n                             } else if it.has_name(sym::contents) {\n                                 if let Some(docs) = it.value_str() {"}]}