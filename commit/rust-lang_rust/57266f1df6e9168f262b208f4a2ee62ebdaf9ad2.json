{"sha": "57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MjY2ZjFkZjZlOTE2OGYyNjJiMjA4ZjRhMmVlNjJlYmRhZjlhZDI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-18T11:05:51Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-18T11:05:51Z"}, "message": "Continue String to Symbol conversion in rustdoc", "tree": {"sha": "ebf31718275811c79e23c26b378cf1da467f4e75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebf31718275811c79e23c26b378cf1da467f4e75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "html_url": "https://github.com/rust-lang/rust/commit/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee693d08e98d25f566075cbed73e12236c05abd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee693d08e98d25f566075cbed73e12236c05abd", "html_url": "https://github.com/rust-lang/rust/commit/fee693d08e98d25f566075cbed73e12236c05abd"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "22496065afd7be5717b432c1b60a47c17b14ed4a", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -103,7 +103,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                     .cx\n                     .tcx\n                     .provided_trait_methods(trait_def_id)\n-                    .map(|meth| meth.ident.to_string())\n+                    .map(|meth| meth.ident.name)\n                     .collect();\n \n                 impls.push(Item {"}, {"sha": "783be6c8243d3cd6933603c56f583f6a85117fce", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -427,7 +427,7 @@ crate fn build_impl(\n \n     let provided = trait_\n         .def_id()\n-        .map(|did| tcx.provided_trait_methods(did).map(|meth| meth.ident.to_string()).collect())\n+        .map(|did| tcx.provided_trait_methods(did).map(|meth| meth.ident.name).collect())\n         .unwrap_or_default();\n \n     debug!(\"build_impl: impl {:?} for {:?}\", trait_.def_id(), for_.def_id());"}, {"sha": "07255168d068589135bf6f1b6ee2e31431ff052e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -2065,9 +2065,9 @@ fn clean_impl(impl_: &hir::Item<'_>, cx: &DocContext<'_>) -> Vec<Item> {\n         build_deref_target_impls(cx, &items, &mut ret);\n     }\n \n-    let provided: FxHashSet<String> = trait_\n+    let provided: FxHashSet<Symbol> = trait_\n         .def_id()\n-        .map(|did| cx.tcx.provided_trait_methods(did).map(|meth| meth.ident.to_string()).collect())\n+        .map(|did| cx.tcx.provided_trait_methods(did).map(|meth| meth.ident.name).collect())\n         .unwrap_or_default();\n \n     let for_ = for_.clean(cx);"}, {"sha": "cd6eccea53218c964f5b02cad38727148f0a9517", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -1762,7 +1762,7 @@ crate enum ImplPolarity {\n crate struct Impl {\n     crate unsafety: hir::Unsafety,\n     crate generics: Generics,\n-    crate provided_trait_methods: FxHashSet<String>,\n+    crate provided_trait_methods: FxHashSet<Symbol>,\n     crate trait_: Option<Type>,\n     crate for_: Type,\n     crate items: Vec<Item>,"}, {"sha": "d55c8f38912475660c88d136c4e81feda907f064", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -2966,7 +2966,7 @@ fn render_assoc_item(\n             AssocItemLink::GotoSource(did, provided_methods) => {\n                 // We're creating a link from an impl-item to the corresponding\n                 // trait-item and need to map the anchored type accordingly.\n-                let ty = if provided_methods.contains(&*name.as_str()) {\n+                let ty = if provided_methods.contains(&name) {\n                     ItemType::Method\n                 } else {\n                     ItemType::TyMethod\n@@ -3429,7 +3429,7 @@ fn render_union(\n #[derive(Copy, Clone)]\n enum AssocItemLink<'a> {\n     Anchor(Option<&'a str>),\n-    GotoSource(DefId, &'a FxHashSet<String>),\n+    GotoSource(DefId, &'a FxHashSet<Symbol>),\n }\n \n impl<'a> AssocItemLink<'a> {"}, {"sha": "020b77871742330dcc7fe841589735f653ebffbd", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57266f1df6e9168f262b208f4a2ee62ebdaf9ad2/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=57266f1df6e9168f262b208f4a2ee62ebdaf9ad2", "patch": "@@ -440,7 +440,10 @@ impl From<clean::Impl> for Impl {\n         Impl {\n             is_unsafe: unsafety == rustc_hir::Unsafety::Unsafe,\n             generics: generics.into(),\n-            provided_trait_methods: provided_trait_methods.into_iter().collect(),\n+            provided_trait_methods: provided_trait_methods\n+                .into_iter()\n+                .map(|x| x.to_string())\n+                .collect(),\n             trait_: trait_.map(Into::into),\n             for_: for_.into(),\n             items: ids(items),"}]}