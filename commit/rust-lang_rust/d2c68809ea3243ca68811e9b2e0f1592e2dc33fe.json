{"sha": "d2c68809ea3243ca68811e9b2e0f1592e2dc33fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYzY4ODA5ZWEzMjQzY2E2ODgxMWU5YjJlMGYxNTkyZTJkYzMzZmU=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-08T01:54:44Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-08T02:05:24Z"}, "message": "Changes from review", "tree": {"sha": "dfdad93b53c7bcb839675b80402c08de0233133f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfdad93b53c7bcb839675b80402c08de0233133f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe", "html_url": "https://github.com/rust-lang/rust/commit/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a787fcbc865cd66921f8052a9cccad33a13b92", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a787fcbc865cd66921f8052a9cccad33a13b92", "html_url": "https://github.com/rust-lang/rust/commit/e4a787fcbc865cd66921f8052a9cccad33a13b92"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6b2ecf725119bb58c8ee861d17c0c25566e05c2c", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2c68809ea3243ca68811e9b2e0f1592e2dc33fe/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=d2c68809ea3243ca68811e9b2e0f1592e2dc33fe", "patch": "@@ -11,7 +11,7 @@ use ide_db::{defs::Definition, RootDatabase};\n \n use hir::{\n     db::{DefDatabase, HirDatabase},\n-    Adt, AsName, AssocItem, Crate, Field, HasAttrs, ItemInNs, MethodOwner, ModuleDef,\n+    Adt, AsName, AssocItem, Crate, Field, HasAttrs, ItemInNs, MethodOwner, ModuleDef, AssocItemContainer, AsAssocItem\n };\n use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n@@ -219,7 +219,7 @@ fn rewrite_url_link(db: &RootDatabase, def: ModuleDef, target: &str) -> Option<S\n }\n \n /// Retrieve a link to documentation for the given symbol.\n-pub fn external_docs(db: &RootDatabase, position: &FilePosition) -> Option<DocumentationLink> {\n+pub(crate) fn external_docs(db: &RootDatabase, position: &FilePosition) -> Option<DocumentationLink> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id).syntax().clone();\n     let token = pick_best(file.token_at_offset(position.offset))?;\n@@ -401,7 +401,7 @@ fn get_symbol_fragment(db: &dyn HirDatabase, field_or_assoc: &FieldOrAssocItem)\n         FieldOrAssocItem::AssocItem(assoc) => match assoc {\n             AssocItem::Function(function) => {\n                 let is_trait_method =\n-                    matches!(function.method_owner(db), Some(MethodOwner::Trait(..)));\n+                    matches!(function.as_assoc_item(db).map(|assoc| assoc.container(db)), Some(AssocItemContainer::Trait(..)));\n                 // This distinction may get more complicated when specialisation is available.\n                 // Rustdoc makes this decision based on whether a method 'has defaultness'.\n                 // Currently this is only the case for provided trait methods."}]}