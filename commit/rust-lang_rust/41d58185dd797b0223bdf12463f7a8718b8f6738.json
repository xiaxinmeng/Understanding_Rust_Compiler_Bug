{"sha": "41d58185dd797b0223bdf12463f7a8718b8f6738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDU4MTg1ZGQ3OTdiMDIyM2JkZjEyNDYzZjdhODcxOGI4ZjY3Mzg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T11:54:48Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Explain ParamEnv::reveal_all usage", "tree": {"sha": "12e880a87487c41323196b68214ef6e78ed3ba50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12e880a87487c41323196b68214ef6e78ed3ba50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d58185dd797b0223bdf12463f7a8718b8f6738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d58185dd797b0223bdf12463f7a8718b8f6738", "html_url": "https://github.com/rust-lang/rust/commit/41d58185dd797b0223bdf12463f7a8718b8f6738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d58185dd797b0223bdf12463f7a8718b8f6738/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b651b1a88024df0cda937445593fd360e457ad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b651b1a88024df0cda937445593fd360e457ad0", "html_url": "https://github.com/rust-lang/rust/commit/6b651b1a88024df0cda937445593fd360e457ad0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "78638a399482b3dd8ad34c057ea8f7886bb47052", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41d58185dd797b0223bdf12463f7a8718b8f6738/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d58185dd797b0223bdf12463f7a8718b8f6738/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=41d58185dd797b0223bdf12463f7a8718b8f6738", "patch": "@@ -578,6 +578,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             ty::ConstKind::Param(_) => throw_inval!(TooGeneric),\n             ty::ConstKind::Unevaluated(def_id, substs) => {\n                 let instance = self.resolve(def_id, substs)?;\n+                // For statics we pick `ParamEnv::reveal_all`, because statics don't have generics\n+                // and thus don't care about the parameter environment. While we could just use\n+                // `self.param_env`, that would mean we invoke the query to evaluate the static\n+                // with different parameter environments, thus causing the static to be evaluated\n+                // multiple times.\n                 let param_env = if self.tcx.is_static(def_id) {\n                     ty::ParamEnv::reveal_all()\n                 } else {"}]}