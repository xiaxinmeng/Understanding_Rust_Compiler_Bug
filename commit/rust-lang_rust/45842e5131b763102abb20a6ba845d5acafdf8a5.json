{"sha": "45842e5131b763102abb20a6ba845d5acafdf8a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ODQyZTUxMzFiNzYzMTAyYWJiMjBhNmJhODQ1ZDVhY2FmZGY4YTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-11-28T15:33:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-11-28T15:33:12Z"}, "message": "Fix categorizations", "tree": {"sha": "47c0a92f0c2d7e3966693a767e86d8a4e48d3f10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47c0a92f0c2d7e3966693a767e86d8a4e48d3f10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45842e5131b763102abb20a6ba845d5acafdf8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45842e5131b763102abb20a6ba845d5acafdf8a5", "html_url": "https://github.com/rust-lang/rust/commit/45842e5131b763102abb20a6ba845d5acafdf8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45842e5131b763102abb20a6ba845d5acafdf8a5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1c5c3522da22385a30d09843c7eed87ce68c1aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c5c3522da22385a30d09843c7eed87ce68c1aa", "html_url": "https://github.com/rust-lang/rust/commit/c1c5c3522da22385a30d09843c7eed87ce68c1aa"}], "stats": {"total": 37, "additions": 12, "deletions": 25}, "files": [{"sha": "62fdf295aa799ad2a2647056fd1aabdc1a861cd9", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=45842e5131b763102abb20a6ba845d5acafdf8a5", "patch": "@@ -104,14 +104,14 @@ fn is_argument(map: &hir::map::Map<'_>, id: HirId) -> bool {\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n     fn consume(&mut self, cmt: &Place<'tcx>, mode: ConsumeMode) {\n-        if let Categorization::Local(lid) = cmt.cat {\n+        if let PlaceBase::Local(lid) = cmt.base {\n             if let ConsumeMode::Move = mode {\n                 // moved out or in. clearly can't be localized\n                 self.set.remove(&lid);\n             }\n         }\n         let map = &self.cx.tcx.hir();\n-        if let Categorization::Local(lid) = cmt.cat {\n+        if let PlaceBase::Local(lid) = cmt.base {\n             if let Some(Node::Binding(_)) = map.find(cmt.hir_id) {\n                 if self.set.contains(&lid) {\n                     // let y = x where x is known\n@@ -124,7 +124,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n     }\n \n     fn borrow(&mut self, cmt: &Place<'tcx>, _: ty::BorrowKind) {\n-        if let Categorization::Local(lid) = cmt.cat {\n+        if let PlaceBase::Local(lid) = cmt.base {\n             self.set.remove(&lid);\n         }\n     }"}, {"sha": "948367d8cee7fc33b8671bfc57024cd2d04c5112", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=45842e5131b763102abb20a6ba845d5acafdf8a5", "patch": "@@ -1588,7 +1588,7 @@ impl<'tcx> Delegate<'tcx> for MutatePairDelegate {\n \n     fn borrow(&mut self, cmt: &Place<'tcx>, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n-            if let Categorization::Local(id) = cmt.cat {\n+            if let PlaceBase::Local(id) = cmt.base {\n                 if Some(id) == self.hir_id_low {\n                     self.span_low = Some(cmt.span)\n                 }\n@@ -1600,7 +1600,7 @@ impl<'tcx> Delegate<'tcx> for MutatePairDelegate {\n     }\n \n     fn mutate(&mut self, cmt: &Place<'tcx>) {\n-        if let Categorization::Local(id) = cmt.cat {\n+        if let PlaceBase::Local(id) = cmt.base {\n             if Some(id) == self.hir_id_low {\n                 self.span_low = Some(cmt.span)\n             }"}, {"sha": "617841f2e5de91518325bf9c208d066393b0757c", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=45842e5131b763102abb20a6ba845d5acafdf8a5", "patch": "@@ -325,9 +325,7 @@ struct MovedVariablesCtxt {\n \n impl MovedVariablesCtxt {\n     fn move_common(&mut self, cmt: &euv::Place<'_>) {\n-        let cmt = unwrap_downcast_or_interior(cmt);\n-\n-        if let mc::Categorization::Local(vid) = cmt.cat {\n+        if let euv::PlaceBase::Local(vid) = cmt.base {\n             self.moved_vars.insert(vid);\n         }\n     }\n@@ -345,13 +343,3 @@ impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n     fn mutate(&mut self, _: &euv::Place<'tcx>) {}\n }\n \n-fn unwrap_downcast_or_interior<'a, 'tcx>(mut cmt: &'a euv::Place<'tcx>) -> euv::Place<'tcx> {\n-    loop {\n-        match cmt.cat {\n-            mc::Categorization::Downcast(ref c, _) | mc::Categorization::Interior(ref c, _) => {\n-                cmt = c;\n-            },\n-            _ => return (*cmt).clone(),\n-        }\n-    }\n-}"}, {"sha": "59220e732a02f084b10e460429f0d8b035384cb2", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45842e5131b763102abb20a6ba845d5acafdf8a5/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=45842e5131b763102abb20a6ba845d5acafdf8a5", "patch": "@@ -42,18 +42,17 @@ struct MutVarsDelegate {\n \n impl<'tcx> MutVarsDelegate {\n     #[allow(clippy::similar_names)]\n-    fn update(&mut self, cat: &'tcx Categorization<'_>) {\n-        match *cat {\n-            Categorization::Local(id) => {\n+    fn update(&mut self, cat: &Place<'tcx>) {\n+        match cat.base {\n+            PlaceBase::Local(id) => {\n                 self.used_mutably.insert(id);\n             },\n-            Categorization::Upvar(_) => {\n+            PlaceBase::Upvar(_) => {\n                 //FIXME: This causes false negatives. We can't get the `NodeId` from\n                 //`Categorization::Upvar(_)`. So we search for any `Upvar`s in the\n                 //`while`-body, not just the ones in the condition.\n                 self.skip = true\n             },\n-            Categorization::Deref(ref cmt, _) | Categorization::Interior(ref cmt, _) => self.update(&cmt.cat),\n             _ => {},\n         }\n     }\n@@ -64,11 +63,11 @@ impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n \n     fn borrow(&mut self, cmt: &Place<'tcx>, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n-            self.update(&cmt.cat)\n+            self.update(&cmt)\n         }\n     }\n \n     fn mutate(&mut self, cmt: &Place<'tcx>) {\n-        self.update(&cmt.cat)\n+        self.update(&cmt)\n     }\n }"}]}