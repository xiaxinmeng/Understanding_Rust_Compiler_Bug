{"sha": "e6b6d1b64589e077a8ba6e8c752eabd3cfec6755", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YjZkMWI2NDU4OWUwNzdhOGJhNmU4Yzc1MmVhYmQzY2ZlYzY3NTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T01:45:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T01:45:49Z"}, "message": "rustc: Make trans_path() generic-safe wrt nullary tags", "tree": {"sha": "69359584654921a058485100a91c6be11483f726", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69359584654921a058485100a91c6be11483f726"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755", "html_url": "https://github.com/rust-lang/rust/commit/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95dc89f0124b85e289024c9ff96ae2e6f9f2b249", "url": "https://api.github.com/repos/rust-lang/rust/commits/95dc89f0124b85e289024c9ff96ae2e6f9f2b249", "html_url": "https://github.com/rust-lang/rust/commit/95dc89f0124b85e289024c9ff96ae2e6f9f2b249"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "8bbd9fa239394bcd4f8eb5acd71ebfadcbdfd1a7", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6b6d1b64589e077a8ba6e8c752eabd3cfec6755/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e6b6d1b64589e077a8ba6e8c752eabd3cfec6755", "patch": "@@ -3441,8 +3441,15 @@ fn trans_path(@block_ctxt cx, &ast.path p, &option.t[ast.def] dopt,\n \n                         auto alloc_result = alloc_ty(cx, tag_ty);\n                         auto lltagblob = alloc_result.val;\n+\n+                        auto lltagty;\n+                        if (ty.type_has_dynamic_size(tag_ty)) {\n+                            lltagty = T_opaque_tag(cx.fcx.ccx.tn);\n+                        } else {\n+                            lltagty = type_of(cx.fcx.ccx, tag_ty);\n+                        }\n                         auto lltagptr = alloc_result.bcx.build.PointerCast(\n-                            lltagblob, T_ptr(type_of(cx.fcx.ccx, tag_ty)));\n+                            lltagblob, T_ptr(lltagty));\n \n                         auto lldiscrimptr = alloc_result.bcx.build.GEP(\n                             lltagptr, vec(C_int(0), C_int(0)));"}]}