{"sha": "56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZmY5ZWYwMjYyZjViYWQ3ZmExZDBhYzNiNzY5NzRkODg2NzFhZmQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-22T19:43:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-22T19:43:06Z"}, "message": "Merge #5492\n\n5492: Use symbol tags r=matklad a=kjeremy\n\nCurrently the only spec'd tag is \"deprecated\".\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "af048a1c9c32c4a9d6449b6152b5c0e4727cd56d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af048a1c9c32c4a9d6449b6152b5c0e4727cd56d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGJbKCRBK7hj4Ov3rIwAAdHIIACAvSe0tAtpIyrTvyqCuKa7K\nGj3bfHu75F2A9YO984Qk4fRDLyDrVTbaTZW7daXj7PlFdlDAf/48EYYJDpq6scXG\n8U7zunUVPsviiCHBznsO3AJkf9+s7vvGk62YdCxXqL5SlC+B2rae554BN4meTb1d\nUlRDidPOv6zWXFsu7CHVldYzfSKFRdlkCBltnJUX5clw9laj9yafFcmt01rHcLoo\nBU8z/VkOdD4wOXOngwnp+4uVTi8TaiCeYdpOVew0vHFUvx+SACXEcV0Mm3+5WFc2\nGjjw7sXiKoX7u4hIJxF2on6q0wC3l6G0UCXQPkREGwVwratDIhvXM51gyPMh9BU=\n=6vfu\n-----END PGP SIGNATURE-----\n", "payload": "tree af048a1c9c32c4a9d6449b6152b5c0e4727cd56d\nparent e72c6220cda30ebe2bde4e0bd7d344c248332ecc\nparent 7eedf19cfa334be06ae2efc6c97d7fff83ccc202\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595446986 +0000\ncommitter GitHub <noreply@github.com> 1595446986 +0000\n\nMerge #5492\n\n5492: Use symbol tags r=matklad a=kjeremy\n\nCurrently the only spec'd tag is \"deprecated\".\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "html_url": "https://github.com/rust-lang/rust/commit/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72c6220cda30ebe2bde4e0bd7d344c248332ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e72c6220cda30ebe2bde4e0bd7d344c248332ecc", "html_url": "https://github.com/rust-lang/rust/commit/e72c6220cda30ebe2bde4e0bd7d344c248332ecc"}, {"sha": "7eedf19cfa334be06ae2efc6c97d7fff83ccc202", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eedf19cfa334be06ae2efc6c97d7fff83ccc202", "html_url": "https://github.com/rust-lang/rust/commit/7eedf19cfa334be06ae2efc6c97d7fff83ccc202"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "af7062815331ef773124b5e079233b3219b3892e", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "patch": "@@ -619,9 +619,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.77.0\"\n+version = \"0.78.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"897c6c8930fbf12b67deffc83729287bb379dd5e5a4bd0ae2d81eff8d6503db6\"\n+checksum = \"d2e6cf68e3492cfa2035f0382c1da1b6ab045db0320feca505b86b4f13d66c27\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "758aa1c5d7d24c091231a807e507d0ddf2f1f94c", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "patch": "@@ -20,7 +20,7 @@ env_logger = { version = \"0.7.1\", default-features = false }\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.77.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.78.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n rand = { version = \"0.7.3\", features = [\"small_rng\"] }"}, {"sha": "8d8c9442b6d14a0241c94094630a5db9093c4bf3", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "patch": "@@ -15,7 +15,7 @@ use lsp_types::{\n     DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams, HoverContents, Location,\n     Position, PrepareRenameResponse, Range, RenameParams, SemanticTokensParams,\n     SemanticTokensRangeParams, SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation,\n-    TextDocumentIdentifier, Url, WorkspaceEdit,\n+    SymbolTag, TextDocumentIdentifier, Url, WorkspaceEdit,\n };\n use ra_ide::{\n     FileId, FilePosition, FileRange, HoverAction, HoverGotoTypeData, NavigationTarget, Query,\n@@ -253,10 +253,17 @@ pub(crate) fn handle_document_symbol(\n     let mut parents: Vec<(DocumentSymbol, Option<usize>)> = Vec::new();\n \n     for symbol in snap.analysis.file_structure(file_id)? {\n+        let mut tags = Vec::new();\n+        if symbol.deprecated {\n+            tags.push(SymbolTag::Deprecated)\n+        };\n+\n+        #[allow(deprecated)]\n         let doc_symbol = DocumentSymbol {\n             name: symbol.label,\n             detail: symbol.detail,\n             kind: to_proto::symbol_kind(symbol.kind),\n+            tags: Some(tags),\n             deprecated: Some(symbol.deprecated),\n             range: to_proto::range(&line_index, symbol.node_range),\n             selection_range: to_proto::range(&line_index, symbol.navigation_range),\n@@ -296,9 +303,19 @@ pub(crate) fn handle_document_symbol(\n         url: &Url,\n         res: &mut Vec<SymbolInformation>,\n     ) {\n+        let mut tags = Vec::new();\n+\n+        #[allow(deprecated)]\n+        match symbol.deprecated {\n+            Some(true) => tags.push(SymbolTag::Deprecated),\n+            _ => {}\n+        }\n+\n+        #[allow(deprecated)]\n         res.push(SymbolInformation {\n             name: symbol.name.clone(),\n             kind: symbol.kind,\n+            tags: Some(tags),\n             deprecated: symbol.deprecated,\n             location: Location::new(url.clone(), symbol.range),\n             container_name,\n@@ -342,9 +359,12 @@ pub(crate) fn handle_workspace_symbol(\n         let mut res = Vec::new();\n         for nav in snap.analysis.symbol_search(query)? {\n             let container_name = nav.container_name.as_ref().map(|v| v.to_string());\n+\n+            #[allow(deprecated)]\n             let info = SymbolInformation {\n                 name: nav.name.to_string(),\n                 kind: to_proto::symbol_kind(nav.kind),\n+                tags: None,\n                 location: to_proto::location_from_nav(snap, nav)?,\n                 container_name,\n                 deprecated: None,"}]}