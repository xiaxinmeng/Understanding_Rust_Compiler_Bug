{"sha": "db6364fecc2b0e9a95d9aaece820a86265b4cb4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNjM2NGZlY2MyYjBlOWE5NWQ5YWFlY2U4MjBhODYyNjViNGNiNGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-11T10:41:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-11T10:41:00Z"}, "message": "Merge #7972\n\n7972: fix: add semicolon after type ascription r=matklad a=conradludgate\n\nFixes #7971\n\nCo-authored-by: Conrad Ludgate <conradludgate@gmail.com>", "tree": {"sha": "1535e87e9279ba6047891aab1a84efb437dc54db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1535e87e9279ba6047891aab1a84efb437dc54db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6364fecc2b0e9a95d9aaece820a86265b4cb4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSfO8CRBK7hj4Ov3rIwAAdHIIAFXVYrRAOCkP+wZSsnecOCgg\nkWNT7swzP3xjafl2icHHhUPnyKZSq7gl0T8gu7lbnxIB/weV4QLx8EzXkRsqgs3R\ncWIpDifEs0MpNCuSrDPGyH1dPRzFoqMbxtgSsN4RSJP4OCVyKPPZxVrUqr1BBW5b\nx4lhn7nuB40EWpdQsTXTJro2baWR5MDsrzJejr0zg6OnDtbyZugURy7glMJcBprU\nFFbkHum3mZObxSrVG6KV0qiTTTgHL7pVSrq2cqjL5QqtgHGyzGA0RpI3g6lkLcEI\nqZUm4YYEPY1gEPLUM2aTYVwrbBmy9evIWbBCnfQ40kuttiViZKoP3+pvFAHzDRk=\n=gb0T\n-----END PGP SIGNATURE-----\n", "payload": "tree 1535e87e9279ba6047891aab1a84efb437dc54db\nparent 610eba33207a22611e914b2f52ba4850f1dba427\nparent 233820d78055d4e040509afe6823453290facae5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615459260 +0000\ncommitter GitHub <noreply@github.com> 1615459260 +0000\n\nMerge #7972\n\n7972: fix: add semicolon after type ascription r=matklad a=conradludgate\n\nFixes #7971\n\nCo-authored-by: Conrad Ludgate <conradludgate@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6364fecc2b0e9a95d9aaece820a86265b4cb4f", "html_url": "https://github.com/rust-lang/rust/commit/db6364fecc2b0e9a95d9aaece820a86265b4cb4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6364fecc2b0e9a95d9aaece820a86265b4cb4f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610eba33207a22611e914b2f52ba4850f1dba427", "url": "https://api.github.com/repos/rust-lang/rust/commits/610eba33207a22611e914b2f52ba4850f1dba427", "html_url": "https://github.com/rust-lang/rust/commit/610eba33207a22611e914b2f52ba4850f1dba427"}, {"sha": "233820d78055d4e040509afe6823453290facae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/233820d78055d4e040509afe6823453290facae5", "html_url": "https://github.com/rust-lang/rust/commit/233820d78055d4e040509afe6823453290facae5"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "ee879c15197bad428c57294f8884f5d858a71e0d", "filename": "crates/ide_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/db6364fecc2b0e9a95d9aaece820a86265b4cb4f/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6364fecc2b0e9a95d9aaece820a86265b4cb4f/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=db6364fecc2b0e9a95d9aaece820a86265b4cb4f", "patch": "@@ -56,13 +56,20 @@ pub(crate) fn add_turbo_fish(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n     if let Some(let_stmt) = ctx.find_node_at_offset::<ast::LetStmt>() {\n         if let_stmt.colon_token().is_none() {\n             let type_pos = let_stmt.pat()?.syntax().last_token()?.text_range().end();\n+            let semi_pos = let_stmt.syntax().last_token()?.text_range().end();\n+\n             acc.add(\n                 AssistId(\"add_type_ascription\", AssistKind::RefactorRewrite),\n                 \"Add `: _` before assignment operator\",\n                 ident.text_range(),\n-                |builder| match ctx.config.snippet_cap {\n-                    Some(cap) => builder.insert_snippet(cap, type_pos, \": ${0:_}\"),\n-                    None => builder.insert(type_pos, \": _\"),\n+                |builder| {\n+                    if let_stmt.semicolon_token().is_none() {\n+                        builder.insert(semi_pos, \";\");\n+                    }\n+                    match ctx.config.snippet_cap {\n+                        Some(cap) => builder.insert_snippet(cap, type_pos, \": ${0:_}\"),\n+                        None => builder.insert(type_pos, \": _\"),\n+                    }\n                 },\n             )?\n         } else {\n@@ -265,4 +272,24 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn add_type_ascription_append_semicolon() {\n+        check_assist_by_label(\n+            add_turbo_fish,\n+            r#\"\n+fn make<T>() -> T {}\n+fn main() {\n+    let x = make$0()\n+}\n+\"#,\n+            r#\"\n+fn make<T>() -> T {}\n+fn main() {\n+    let x: ${0:_} = make();\n+}\n+\"#,\n+            \"Add `: _` before assignment operator\",\n+        );\n+    }\n }"}]}