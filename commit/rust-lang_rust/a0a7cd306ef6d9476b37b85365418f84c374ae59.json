{"sha": "a0a7cd306ef6d9476b37b85365418f84c374ae59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYTdjZDMwNmVmNmQ5NDc2YjM3Yjg1MzY1NDE4Zjg0YzM3NGFlNTk=", "commit": {"author": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2020-09-23T07:28:38Z"}, "committer": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2020-09-23T07:28:38Z"}, "message": "Use retry dialog also for downloads\n\nSince the change already implements a retry dialog for\nnetwork operations, let's also use it for allowing to retry the\nactual file.", "tree": {"sha": "5a60e8905cafb0ca25477738cbc4510a4429f73f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a60e8905cafb0ca25477738cbc4510a4429f73f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0a7cd306ef6d9476b37b85365418f84c374ae59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a7cd306ef6d9476b37b85365418f84c374ae59", "html_url": "https://github.com/rust-lang/rust/commit/a0a7cd306ef6d9476b37b85365418f84c374ae59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0a7cd306ef6d9476b37b85365418f84c374ae59/comments", "author": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1503d9de411347752fab7313e53d2061fa0186b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1503d9de411347752fab7313e53d2061fa0186b1", "html_url": "https://github.com/rust-lang/rust/commit/1503d9de411347752fab7313e53d2061fa0186b1"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "409e4b5c26586df17aee1fb0f4d5f09eb117af5b", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/a0a7cd306ef6d9476b37b85365418f84c374ae59/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a0a7cd306ef6d9476b37b85365418f84c374ae59/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=a0a7cd306ef6d9476b37b85365418f84c374ae59", "patch": "@@ -194,11 +194,19 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n \n     const dest = path.join(config.globalStoragePath, \"rust-analyzer.vsix\");\n-    await download({\n-        url: artifact.browser_download_url,\n-        dest,\n-        progressTitle: \"Downloading rust-analyzer extension\",\n-    });\n+\n+    await performDownloadWithRetryDialog(async () => {\n+        // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n+        await fs.unlink(dest).catch(err => {\n+            if (err.code !== \"ENOENT\") throw err;\n+        });\n+\n+        await download({\n+            url: artifact.browser_download_url,\n+            dest,\n+            progressTitle: \"Downloading rust-analyzer extension\",\n+        });\n+    }, state);\n \n     await vscode.commands.executeCommand(\"workbench.extensions.installExtension\", vscode.Uri.file(dest));\n     await fs.unlink(dest);\n@@ -317,18 +325,20 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n     const artifact = release.assets.find(artifact => artifact.name === `rust-analyzer-${platform}.gz`);\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n \n-    // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n-    await fs.unlink(dest).catch(err => {\n-        if (err.code !== \"ENOENT\") throw err;\n-    });\n-\n-    await download({\n-        url: artifact.browser_download_url,\n-        dest,\n-        progressTitle: \"Downloading rust-analyzer server\",\n-        gunzip: true,\n-        mode: 0o755\n-    });\n+    await performDownloadWithRetryDialog(async () => {\n+        // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n+        await fs.unlink(dest).catch(err => {\n+            if (err.code !== \"ENOENT\") throw err;\n+        });\n+\n+        await download({\n+            url: artifact.browser_download_url,\n+            dest,\n+            progressTitle: \"Downloading rust-analyzer server\",\n+            gunzip: true,\n+            mode: 0o755\n+        });\n+    }, state);\n \n     // Patching executable if that's NixOS.\n     if (await fs.stat(\"/etc/nixos\").then(_ => true).catch(_ => false)) {\n@@ -372,15 +382,15 @@ async function queryForGithubToken(state: PersistentState): Promise<void> {\n         password: true,\n         prompt: `\n             This dialog allows to store a Github authorization token.\n-            The usage of an authorization token allows will increase the rate\n+            The usage of an authorization token will increase the rate\n             limit on the use of Github APIs and can thereby prevent getting\n             throttled.\n-            Auth tokens can be obtained at https://github.com/settings/tokens`,\n+            Auth tokens can be created at https://github.com/settings/tokens`,\n     };\n \n     const newToken = await vscode.window.showInputBox(githubTokenOptions);\n     if (newToken) {\n         log.info(\"Storing new github token\");\n         await state.updateGithubToken(newToken);\n     }\n-}\n\\ No newline at end of file\n+}"}]}