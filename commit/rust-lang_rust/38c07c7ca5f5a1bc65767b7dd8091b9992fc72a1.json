{"sha": "38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YzA3YzdjYTVmNWExYmM2NTc2N2I3ZGQ4MDkxYjk5OTJmYzcyYTE=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-07-29T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-07-29T11:21:20Z"}, "message": "Implement `Printer` for `&mut SymbolPrinter`\n\nto avoid passing `SymbolPrinter` by value.", "tree": {"sha": "c3b42334efe409b7e0e3c0624a2d0d0fe71e7994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3b42334efe409b7e0e3c0624a2d0d0fe71e7994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "html_url": "https://github.com/rust-lang/rust/commit/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0a8bf7901a3fe2e073b1e702e80f58b76d5087", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0a8bf7901a3fe2e073b1e702e80f58b76d5087", "html_url": "https://github.com/rust-lang/rust/commit/6e0a8bf7901a3fe2e073b1e702e80f58b76d5087"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "1b4e6b4e38177bf658afb1a8907098323df6ae05", "filename": "compiler/rustc_symbol_mangling/src/legacy.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs?ref=38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "patch": "@@ -55,7 +55,8 @@ pub(super) fn mangle(\n \n     let hash = get_symbol_hash(tcx, instance, instance_ty, instantiating_crate);\n \n-    let mut printer = SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false }\n+    let mut printer = SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false };\n+    printer\n         .print_def_path(\n             def_id,\n             if let ty::InstanceDef::DropGlue(_, _) = instance.def {\n@@ -198,7 +199,7 @@ struct SymbolPrinter<'tcx> {\n // `PrettyPrinter` aka pretty printing of e.g. types in paths,\n // symbol names should have their own printing machinery.\n \n-impl Printer<'tcx> for SymbolPrinter<'tcx> {\n+impl Printer<'tcx> for &mut SymbolPrinter<'tcx> {\n     type Error = fmt::Error;\n \n     type Path = Self;\n@@ -242,7 +243,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn print_const(mut self, ct: &'tcx ty::Const<'tcx>) -> Result<Self::Const, Self::Error> {\n+    fn print_const(self, ct: &'tcx ty::Const<'tcx>) -> Result<Self::Const, Self::Error> {\n         // only print integers\n         if let ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int { .. })) = ct.val {\n             if ct.ty.is_integral() {\n@@ -253,7 +254,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn path_crate(mut self, cnum: CrateNum) -> Result<Self::Path, Self::Error> {\n+    fn path_crate(self, cnum: CrateNum) -> Result<Self::Path, Self::Error> {\n         self.write_str(&self.tcx.crate_name(cnum).as_str())?;\n         Ok(self)\n     }\n@@ -344,7 +345,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n     }\n }\n \n-impl PrettyPrinter<'tcx> for SymbolPrinter<'tcx> {\n+impl PrettyPrinter<'tcx> for &mut SymbolPrinter<'tcx> {\n     fn region_should_not_be_omitted(&self, _region: ty::Region<'_>) -> bool {\n         false\n     }"}]}