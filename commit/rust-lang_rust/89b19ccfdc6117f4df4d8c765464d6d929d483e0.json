{"sha": "89b19ccfdc6117f4df4d8c765464d6d929d483e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YjE5Y2NmZGM2MTE3ZjRkZjRkOGM3NjU0NjRkNmQ5MjlkNDgzZTA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-30T20:37:59Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-16T18:57:19Z"}, "message": "Continue to emit unreachable pattern on cases caught by overlapping patterns", "tree": {"sha": "5dc8764bbeced8f79b150bd12ded691bd34f0212", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dc8764bbeced8f79b150bd12ded691bd34f0212"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89b19ccfdc6117f4df4d8c765464d6d929d483e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89b19ccfdc6117f4df4d8c765464d6d929d483e0", "html_url": "https://github.com/rust-lang/rust/commit/89b19ccfdc6117f4df4d8c765464d6d929d483e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89b19ccfdc6117f4df4d8c765464d6d929d483e0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6832da85c2241c9d75d01f1779f54cd9054d7a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/6832da85c2241c9d75d01f1779f54cd9054d7a08", "html_url": "https://github.com/rust-lang/rust/commit/6832da85c2241c9d75d01f1779f54cd9054d7a08"}], "stats": {"total": 110, "additions": 76, "deletions": 34}, "files": [{"sha": "7bc4bf291ee488f5b61543b5b90ec71c197749f2", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -429,10 +429,6 @@ fn check_arms<'tcx>(\n \n                         hir::MatchSource::ForLoopDesugar |\n                         hir::MatchSource::Normal => {\n-                            if let box PatternKind::Range(..) = pat.kind {\n-                                // Covered by `overlapping_patterns` with more context\n-                                break;\n-                            }\n                             let mut err = cx.tcx.struct_span_lint_hir(\n                                 lint::builtin::UNREACHABLE_PATTERNS,\n                                 hir_pat.hir_id,"}, {"sha": "ca4cd89732276831dbb53298c2cfdb95573d8395", "filename": "src/test/ui/check_match/issue-43253.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -32,6 +32,12 @@ LL |         1..10 => {},\n LL |         8..=9 => {},\n    |         ^^^^^ overlapping patterns\n \n+warning: unreachable pattern\n+  --> $DIR/issue-43253.rs:35:9\n+   |\n+LL |         8..=9 => {},\n+   |         ^^^^^\n+\n warning: unreachable pattern\n   --> $DIR/issue-43253.rs:41:9\n    |"}, {"sha": "a0c1b013f390ac721b49e31b73fc0de65e64b8c5", "filename": "src/test/ui/exhaustive_integer_patterns.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -41,7 +41,9 @@ fn main() {\n     match x { //~ ERROR non-exhaustive patterns\n         -7 => {}\n         -5..=120 => {}\n-        -2..=20 => {} //~ ERROR multiple patterns covering the same range\n+        -2..=20 => {}\n+        //~^ ERROR unreachable pattern\n+        //~| ERROR multiple patterns covering the same range\n         125 => {}\n     }\n "}, {"sha": "44fbc969225710051d1c266d379065a21ac11d52", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -48,6 +48,12 @@ LL |         -5..=120 => {}\n LL |         -2..=20 => {}\n    |         ^^^^^^^ overlapping patterns\n \n+error: unreachable pattern\n+  --> $DIR/exhaustive_integer_patterns.rs:44:9\n+   |\n+LL |         -2..=20 => {}\n+   |         ^^^^^^^\n+\n error[E0004]: non-exhaustive patterns: `std::i8::MIN..=-8i8`, `-6i8`, `121i8..=124i8` and 1 more not covered\n   --> $DIR/exhaustive_integer_patterns.rs:41:11\n    |\n@@ -57,77 +63,77 @@ LL |     match x {\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `std::i8::MIN` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:82:11\n+  --> $DIR/exhaustive_integer_patterns.rs:84:11\n    |\n LL |     match 0i8 {\n    |           ^^^ pattern `std::i8::MIN` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `0i16` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:90:11\n+  --> $DIR/exhaustive_integer_patterns.rs:92:11\n    |\n LL |     match 0i16 {\n    |           ^^^^ pattern `0i16` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `128u8..=std::u8::MAX` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:108:11\n+  --> $DIR/exhaustive_integer_patterns.rs:110:11\n    |\n LL |     match 0u8 {\n    |           ^^^ pattern `128u8..=std::u8::MAX` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `(0u8, Some(_))` and `(2u8..=std::u8::MAX, Some(_))` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:120:11\n+  --> $DIR/exhaustive_integer_patterns.rs:122:11\n    |\n LL |     match (0u8, Some(())) {\n    |           ^^^^^^^^^^^^^^^ patterns `(0u8, Some(_))` and `(2u8..=std::u8::MAX, Some(_))` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `(126u8..=127u8, false)` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:125:11\n+  --> $DIR/exhaustive_integer_patterns.rs:127:11\n    |\n LL |     match (0u8, true) {\n    |           ^^^^^^^^^^^ pattern `(126u8..=127u8, false)` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error: multiple patterns covering the same range\n-  --> $DIR/exhaustive_integer_patterns.rs:140:9\n+  --> $DIR/exhaustive_integer_patterns.rs:142:9\n    |\n LL |         0 .. 2 => {}\n    |         ------ this range overlaps on `1u8`\n LL |         1 ..= 2 => {}\n    |         ^^^^^^^ overlapping patterns\n \n error[E0004]: non-exhaustive patterns: `std::u128::MAX` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:145:11\n+  --> $DIR/exhaustive_integer_patterns.rs:147:11\n    |\n LL |     match 0u128 {\n    |           ^^^^^ pattern `std::u128::MAX` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `5u128..=std::u128::MAX` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:149:11\n+  --> $DIR/exhaustive_integer_patterns.rs:151:11\n    |\n LL |     match 0u128 {\n    |           ^^^^^ pattern `5u128..=std::u128::MAX` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `0u128..=3u128` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:153:11\n+  --> $DIR/exhaustive_integer_patterns.rs:155:11\n    |\n LL |     match 0u128 {\n    |           ^^^^^ pattern `0u128..=3u128` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 16 previous errors\n \n For more information about this error, try `rustc --explain E0004`."}, {"sha": "b6a89b8910c49e69c63a934e487e33b75a22b753", "filename": "src/test/ui/match/match-range-fail-dominate.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.rs?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -3,25 +3,33 @@\n fn main() {\n     match 5 {\n       1 ..= 10 => { }\n-      5 ..= 6 => { } //~ ERROR multiple patterns covering the same range\n+      5 ..= 6 => { }\n+      //~^ ERROR unreachable pattern\n+      //~| ERROR multiple patterns covering the same range\n       _ => {}\n     };\n \n     match 5 {\n       3 ..= 6 => { }\n-      4 ..= 6 => { } //~ ERROR multiple patterns covering the same range\n+      4 ..= 6 => { }\n+      //~^ ERROR unreachable pattern\n+      //~| ERROR multiple patterns covering the same range\n       _ => {}\n     };\n \n     match 5 {\n       4 ..= 6 => { }\n-      4 ..= 6 => { } //~ ERROR multiple patterns covering the same range\n+      4 ..= 6 => { }\n+      //~^ ERROR unreachable pattern\n+      //~| ERROR multiple patterns covering the same range\n       _ => {}\n     };\n \n     match 'c' {\n       'A' ..= 'z' => {}\n-      'a' ..= 'z' => {} //~ ERROR multiple patterns covering the same range\n+      'a' ..= 'z' => {}\n+      //~^ ERROR unreachable pattern\n+      //~| ERROR multiple patterns covering the same range\n       _ => {}\n     };\n "}, {"sha": "4a76e05fab53e66f91070aeccf255f949a7358e0", "filename": "src/test/ui/match/match-range-fail-dominate.stderr", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89b19ccfdc6117f4df4d8c765464d6d929d483e0/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr?ref=89b19ccfdc6117f4df4d8c765464d6d929d483e0", "patch": "@@ -12,32 +12,62 @@ note: lint level defined here\n LL | #![deny(unreachable_patterns, overlapping_patterns)]\n    |                               ^^^^^^^^^^^^^^^^^^^^\n \n+error: unreachable pattern\n+  --> $DIR/match-range-fail-dominate.rs:6:7\n+   |\n+LL |       5 ..= 6 => { }\n+   |       ^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/match-range-fail-dominate.rs:1:9\n+   |\n+LL | #![deny(unreachable_patterns, overlapping_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n error: multiple patterns covering the same range\n-  --> $DIR/match-range-fail-dominate.rs:12:7\n+  --> $DIR/match-range-fail-dominate.rs:14:7\n    |\n LL |       3 ..= 6 => { }\n    |       ------- this range overlaps on `4i32..=6i32`\n LL |       4 ..= 6 => { }\n    |       ^^^^^^^ overlapping patterns\n \n+error: unreachable pattern\n+  --> $DIR/match-range-fail-dominate.rs:14:7\n+   |\n+LL |       4 ..= 6 => { }\n+   |       ^^^^^^^\n+\n error: multiple patterns covering the same range\n-  --> $DIR/match-range-fail-dominate.rs:18:7\n+  --> $DIR/match-range-fail-dominate.rs:22:7\n    |\n LL |       4 ..= 6 => { }\n    |       ------- this range overlaps on `4i32..=6i32`\n LL |       4 ..= 6 => { }\n    |       ^^^^^^^ overlapping patterns\n \n+error: unreachable pattern\n+  --> $DIR/match-range-fail-dominate.rs:22:7\n+   |\n+LL |       4 ..= 6 => { }\n+   |       ^^^^^^^\n+\n error: multiple patterns covering the same range\n-  --> $DIR/match-range-fail-dominate.rs:24:7\n+  --> $DIR/match-range-fail-dominate.rs:30:7\n    |\n LL |       'A' ..= 'z' => {}\n    |       ----------- this range overlaps on `'a'..='z'`\n LL |       'a' ..= 'z' => {}\n    |       ^^^^^^^^^^^ overlapping patterns\n \n+error: unreachable pattern\n+  --> $DIR/match-range-fail-dominate.rs:30:7\n+   |\n+LL |       'a' ..= 'z' => {}\n+   |       ^^^^^^^^^^^\n+\n warning: floating-point types cannot be used in patterns\n-  --> $DIR/match-range-fail-dominate.rs:29:7\n+  --> $DIR/match-range-fail-dominate.rs:37:7\n    |\n LL |       0.01f64 ..= 6.5f64 => {}\n    |       ^^^^^^^\n@@ -47,7 +77,7 @@ LL |       0.01f64 ..= 6.5f64 => {}\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n warning: floating-point types cannot be used in patterns\n-  --> $DIR/match-range-fail-dominate.rs:29:19\n+  --> $DIR/match-range-fail-dominate.rs:37:19\n    |\n LL |       0.01f64 ..= 6.5f64 => {}\n    |                   ^^^^^^\n@@ -56,7 +86,7 @@ LL |       0.01f64 ..= 6.5f64 => {}\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n warning: floating-point types cannot be used in patterns\n-  --> $DIR/match-range-fail-dominate.rs:36:7\n+  --> $DIR/match-range-fail-dominate.rs:44:7\n    |\n LL |       0.02f64 => {}\n    |       ^^^^^^^\n@@ -65,25 +95,19 @@ LL |       0.02f64 => {}\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n error: unreachable pattern\n-  --> $DIR/match-range-fail-dominate.rs:36:7\n+  --> $DIR/match-range-fail-dominate.rs:44:7\n    |\n LL |       0.02f64 => {}\n    |       ^^^^^^^\n-   |\n-note: lint level defined here\n-  --> $DIR/match-range-fail-dominate.rs:1:9\n-   |\n-LL | #![deny(unreachable_patterns, overlapping_patterns)]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n \n warning: floating-point types cannot be used in patterns\n-  --> $DIR/match-range-fail-dominate.rs:29:7\n+  --> $DIR/match-range-fail-dominate.rs:37:7\n    |\n LL |       0.01f64 ..= 6.5f64 => {}\n    |       ^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 9 previous errors\n "}]}