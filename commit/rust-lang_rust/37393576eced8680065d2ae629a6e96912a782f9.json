{"sha": "37393576eced8680065d2ae629a6e96912a782f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MzkzNTc2ZWNlZDg2ODAwNjVkMmFlNjI5YTZlOTY5MTJhNzgyZjk=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-10-03T07:27:12Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-10-20T04:57:52Z"}, "message": "Stabilize impl_header_lifetime_elision in 2015\n\nIt's already stable in 2018; this finishes the stabilization.", "tree": {"sha": "bfbd9971b4d8f2579f61e2575343c6e3d4c6fd8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfbd9971b4d8f2579f61e2575343c6e3d4c6fd8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37393576eced8680065d2ae629a6e96912a782f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37393576eced8680065d2ae629a6e96912a782f9", "html_url": "https://github.com/rust-lang/rust/commit/37393576eced8680065d2ae629a6e96912a782f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37393576eced8680065d2ae629a6e96912a782f9/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89be71a46234a2231b5b3839cd497188e072291f", "url": "https://api.github.com/repos/rust-lang/rust/commits/89be71a46234a2231b5b3839cd497188e072291f", "html_url": "https://github.com/rust-lang/rust/commit/89be71a46234a2231b5b3839cd497188e072291f"}], "stats": {"total": 178, "additions": 37, "deletions": 141}, "files": [{"sha": "4156b1bec92a09dc1a9bb7ffcd5a0e1db9db6aed", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -87,7 +87,7 @@\n #![feature(doc_spotlight)]\n #![feature(extern_types)]\n #![feature(fundamental)]\n-#![feature(impl_header_lifetime_elision)]\n+#![cfg_attr(stage0, feature(impl_header_lifetime_elision))]\n #![feature(intrinsics)]\n #![feature(lang_items)]\n #![feature(link_llvm_intrinsics)]"}, {"sha": "d340924aab1db7b602ef44070b11a1f7eaa3327f", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -19,7 +19,7 @@\n #![feature(flt2dec)]\n #![feature(fmt_internals)]\n #![feature(hashmap_internals)]\n-#![feature(impl_header_lifetime_elision)]\n+#![cfg_attr(stage0, feature(impl_header_lifetime_elision))]\n #![feature(pattern)]\n #![feature(range_is_empty)]\n #![feature(raw)]"}, {"sha": "1daea18d053193eb486723d0808df42dd2446337", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -125,9 +125,8 @@ pub struct LoweringContext<'a> {\n \n     // Whether or not in-band lifetimes are being collected. This is used to\n     // indicate whether or not we're in a place where new lifetimes will result\n-    // in in-band lifetime definitions, such a function or an impl header.\n-    // This will always be false unless the `in_band_lifetimes` or\n-    // `impl_header_lifetime_elision` feature is enabled.\n+    // in in-band lifetime definitions, such a function or an impl header,\n+    // including implicit lifetimes from `impl_header_lifetime_elision`.\n     is_collecting_in_band_lifetimes: bool,\n \n     // Currently in-scope lifetimes defined in impl headers, fn headers, or HRTB.\n@@ -709,12 +708,8 @@ impl<'a> LoweringContext<'a> {\n         assert!(self.lifetimes_to_define.is_empty());\n         let old_anonymous_lifetime_mode = self.anonymous_lifetime_mode;\n \n-        if self.sess.features_untracked().impl_header_lifetime_elision {\n-            self.anonymous_lifetime_mode = anonymous_lifetime_mode;\n-            self.is_collecting_in_band_lifetimes = true;\n-        } else if self.sess.features_untracked().in_band_lifetimes {\n-            self.is_collecting_in_band_lifetimes = true;\n-        }\n+        self.anonymous_lifetime_mode = anonymous_lifetime_mode;\n+        self.is_collecting_in_band_lifetimes = true;\n \n         let (in_band_ty_params, res) = f(self);\n "}, {"sha": "d8defabd3fe6616f90802efe8d956f438952c158", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -67,7 +67,7 @@\n #![feature(step_trait)]\n #![feature(integer_atomics)]\n #![feature(test)]\n-#![feature(impl_header_lifetime_elision)]\n+#![cfg_attr(stage0, feature(impl_header_lifetime_elision))]\n #![feature(in_band_lifetimes)]\n #![feature(macro_at_most_once_rep)]\n #![feature(crate_visibility_modifier)]"}, {"sha": "b197d29b184de11f6adec4e559c466290d270f06", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -21,7 +21,7 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(in_band_lifetimes)]\n-#![feature(impl_header_lifetime_elision)]\n+#![cfg_attr(stage0, feature(impl_header_lifetime_elision))]\n #![feature(unboxed_closures)]\n #![feature(fn_traits)]\n #![feature(unsize)]"}, {"sha": "2f44dff2e22c3472cc18c58232f2ab585600fb57", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -16,7 +16,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n \n #![feature(nll)]\n #![feature(in_band_lifetimes)]\n-#![feature(impl_header_lifetime_elision)]\n+#![cfg_attr(stage0, feature(impl_header_lifetime_elision))]\n #![feature(slice_patterns)]\n #![feature(slice_sort_by_cached_key)]\n #![feature(box_patterns)]"}, {"sha": "90a5a4cef21864bffbde23a5d675f2a21b325912", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -462,10 +462,6 @@ declare_features! (\n \n     (active, abi_amdgpu_kernel, \"1.29.0\", Some(51575), None),\n \n-    // impl<I:Iterator> Iterator for &mut Iterator\n-    // impl Debug for Foo<'_>\n-    (active, impl_header_lifetime_elision, \"1.30.0\", Some(15872), Some(Edition::Edition2018)),\n-\n     // Support for arbitrary delimited token streams in non-macro attributes\n     (active, unrestricted_attribute_tokens, \"1.30.0\", Some(44690), None),\n \n@@ -684,6 +680,9 @@ declare_features! (\n     (accepted, min_const_fn, \"1.31.0\", Some(53555), None),\n     // Scoped lints\n     (accepted, tool_lints, \"1.31.0\", Some(44690), None),\n+    // impl<I:Iterator> Iterator for &mut Iterator\n+    // impl Debug for Foo<'_>\n+    (accepted, impl_header_lifetime_elision, \"1.31.0\", Some(15872), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must"}, {"sha": "b7e07e1dca6740fa249adcf7dac15da0718520c1", "filename": "src/test/ui/feature-gates/feature-gate-impl_header_lifetime_elision-with-in_band.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs?ref=89be71a46234a2231b5b3839cd497188e072291f", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![allow(warnings)]\n-\n-// Make sure this related feature didn't accidentally enable this\n-#![feature(in_band_lifetimes)]\n-\n-trait MyTrait<'a> { }\n-\n-impl MyTrait<'a> for &u32 { }\n-//~^ ERROR missing lifetime specifier\n-\n-struct MyStruct;\n-trait MarkerTrait {}\n-\n-impl MarkerTrait for &'_ MyStruct { }\n-//~^ ERROR missing lifetime specifier\n-\n-fn main() {}"}, {"sha": "9487d11d505ca184fc23c0aa838086b34505f0bb", "filename": "src/test/ui/feature-gates/feature-gate-impl_header_lifetime_elision-with-in_band.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr?ref=89be71a46234a2231b5b3839cd497188e072291f", "patch": "@@ -1,15 +0,0 @@\n-error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-impl_header_lifetime_elision-with-in_band.rs:18:22\n-   |\n-LL | impl MyTrait<'a> for &u32 { }\n-   |                      ^ expected lifetime parameter\n-\n-error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-impl_header_lifetime_elision-with-in_band.rs:24:23\n-   |\n-LL | impl MarkerTrait for &'_ MyStruct { }\n-   |                       ^^ expected lifetime parameter\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0106`."}, {"sha": "3eb2ac1b00851b3aac677570bf39664a5ec9de93", "filename": "src/test/ui/feature-gates/feature-gate-impl_header_lifetime_elision.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.rs?ref=89be71a46234a2231b5b3839cd497188e072291f", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![allow(warnings)]\n-\n-trait MyTrait<'a> { }\n-\n-impl<'a> MyTrait<'a> for &u32 { }\n-//~^ ERROR missing lifetime specifier\n-\n-impl<'a> MyTrait<'_> for &'a f32 { }\n-//~^ ERROR missing lifetime specifier\n-\n-fn main() {}"}, {"sha": "2c8a7dd4305a76e8777a251df1000616db422a90", "filename": "src/test/ui/feature-gates/feature-gate-impl_header_lifetime_elision.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89be71a46234a2231b5b3839cd497188e072291f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_header_lifetime_elision.stderr?ref=89be71a46234a2231b5b3839cd497188e072291f", "patch": "@@ -1,15 +0,0 @@\n-error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-impl_header_lifetime_elision.rs:15:26\n-   |\n-LL | impl<'a> MyTrait<'a> for &u32 { }\n-   |                          ^ expected lifetime parameter\n-\n-error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-impl_header_lifetime_elision.rs:18:18\n-   |\n-LL | impl<'a> MyTrait<'_> for &'a f32 { }\n-   |                  ^^ expected lifetime parameter\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0106`."}, {"sha": "ae1f81c2f5721fd54742b3036ebd2b7d0dcb8b60", "filename": "src/test/ui/feature-gates/feature-gate-in_band_lifetimes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -10,9 +10,6 @@\n \n #![allow(warnings)]\n \n-// Make sure this related feature didn't accidentally enable this\n-#![feature(impl_header_lifetime_elision)]\n-\n fn foo(x: &'x u8) -> &'x u8 { x }\n //~^ ERROR use of undeclared lifetime name\n //~^^ ERROR use of undeclared lifetime name"}, {"sha": "cc0855306e162e97d984ca8807d8cebbd90b6aeb", "filename": "src/test/ui/feature-gates/feature-gate-in_band_lifetimes.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,101 +1,101 @@\n error[E0261]: use of undeclared lifetime name `'x`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:16:12\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:13:12\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |            ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'x`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:16:23\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:13:23\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |                       ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:28:12\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:25:12\n    |\n LL | impl<'a> X<'b> {\n    |            ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:30:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:27:27\n    |\n LL |     fn inner_2(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:36:8\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:33:8\n    |\n LL | impl X<'b> {\n    |        ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:38:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:35:27\n    |\n LL |     fn inner_3(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:46:9\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:43:9\n    |\n LL | impl Y<&'a u8> {\n    |         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:48:25\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:45:25\n    |\n LL |     fn inner(&self) -> &'a u8 {\n    |                         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:56:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:53:27\n    |\n LL |     fn any_lifetime() -> &'b u8;\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:58:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:55:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:58:40\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:55:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                                        ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:63:14\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:60:14\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n    |              ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:63:25\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:60:25\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n    |                         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:66:31\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:63:31\n    |\n LL |     fn my_lifetime(&self) -> &'a u8 { self.0 }\n    |                               ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:68:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:65:27\n    |\n LL |     fn any_lifetime() -> &'b u8 { &0 }\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:70:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:67:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:70:40\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:67:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                                        ^^ undeclared lifetime"}, {"sha": "49f528df8f6ccf88817e1fed056e6ee41684b0af", "filename": "src/test/ui/impl-header-lifetime-elision/assoc-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -13,8 +13,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait {\n     type Output;\n }"}, {"sha": "022b8bc717b96120a93bc35a6e565fa32c2e3e5f", "filename": "src/test/ui/impl-header-lifetime-elision/assoc-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,11 +1,11 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/assoc-type.rs:23:19\n+  --> $DIR/assoc-type.rs:21:19\n    |\n LL |     type Output = &i32;\n    |                   ^ expected lifetime parameter\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/assoc-type.rs:28:20\n+  --> $DIR/assoc-type.rs:26:20\n    |\n LL |     type Output = &'_ i32;\n    |                    ^^ expected lifetime parameter"}, {"sha": "384c08ff5bb38f8e4b51ccd90c1c7b71678988a0", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -13,8 +13,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n use std::fmt::Debug;\n \n // Equivalent to `Box<dyn Debug + 'static>`:"}, {"sha": "f0e174a12074d8a24e098dff3beb54e4549439f5", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,11 +1,11 @@\n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/dyn-trait.rs:32:16\n+  --> $DIR/dyn-trait.rs:30:16\n    |\n LL |     static_val(x); //~ ERROR cannot infer\n    |                ^\n    |\n-note: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 31:26...\n-  --> $DIR/dyn-trait.rs:31:26\n+note: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 29:26...\n+  --> $DIR/dyn-trait.rs:29:26\n    |\n LL | fn with_dyn_debug_static<'a>(x: Box<dyn Debug + 'a>) {\n    |                          ^^"}, {"sha": "c0d454d9426464e83338c777de0dd44bfaf02a1c", "filename": "src/test/ui/impl-header-lifetime-elision/explicit-and-elided-same-header.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fexplicit-and-elided-same-header.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fexplicit-and-elided-same-header.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fexplicit-and-elided-same-header.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -12,8 +12,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n // This works for functions...\n fn foo<'a>(x: &str, y: &'a str) {}\n "}, {"sha": "b68a0f375f60d5c5ffc0d8362ee3609bb6c42a96", "filename": "src/test/ui/impl-header-lifetime-elision/path-elided.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait { }\n \n struct Foo<'a> { x: &'a u32 }"}, {"sha": "03e8f8c9ad5d2cb8ec2570785438eee54abbf7d6", "filename": "src/test/ui/impl-header-lifetime-elision/path-elided.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,5 +1,5 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/path-elided.rs:18:18\n+  --> $DIR/path-elided.rs:16:18\n    |\n LL | impl MyTrait for Foo {\n    |                  ^^^ expected lifetime parameter"}, {"sha": "b2c7a415efe98f4122e8cd55f0cea5df61e73ffe", "filename": "src/test/ui/impl-header-lifetime-elision/path-underscore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -14,8 +14,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait { }\n \n struct Foo<'a> { x: &'a u32 }"}, {"sha": "e62e7dc56a4afa595ebfc2871b487dd0cdd962c1", "filename": "src/test/ui/impl-header-lifetime-elision/ref-underscore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -14,8 +14,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait { }\n \n impl MyTrait for &i32 {"}, {"sha": "1fb57b96ba9b444a1c7be9e2ae53f6f4d06e64af", "filename": "src/test/ui/impl-header-lifetime-elision/trait-elided.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait<'a> { }\n \n impl MyTrait for u32 {"}, {"sha": "7138b321f97d46712c45ab98aaa1a257333e971f", "filename": "src/test/ui/impl-header-lifetime-elision/trait-elided.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,5 +1,5 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/trait-elided.rs:16:6\n+  --> $DIR/trait-elided.rs:14:6\n    |\n LL | impl MyTrait for u32 {\n    |      ^^^^^^^ expected lifetime parameter"}, {"sha": "54d23f5f4dea8c4bbf532fcf96e0bba03ad70052", "filename": "src/test/ui/impl-header-lifetime-elision/trait-underscore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -15,8 +15,6 @@\n \n #![allow(warnings)]\n \n-#![feature(impl_header_lifetime_elision)]\n-\n trait MyTrait<'a> { }\n \n // This is equivalent to `MyTrait<'a> for &'b i32`, which is proven by"}, {"sha": "84d06a1d20aac76485ed819f553df31cff08644b", "filename": "src/test/ui/nll/issue-52742.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -10,7 +10,6 @@\n \n #![feature(nll)]\n #![feature(in_band_lifetimes)]\n-#![feature(impl_header_lifetime_elision)]\n \n struct Foo<'a, 'b> {\n     x: &'a u32,"}, {"sha": "ccd6ec5cb77fa8f5f9d62e4c425a1fdcff92dfea", "filename": "src/test/ui/nll/issue-52742.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37393576eced8680065d2ae629a6e96912a782f9/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr?ref=37393576eced8680065d2ae629a6e96912a782f9", "patch": "@@ -1,5 +1,5 @@\n error: unsatisfied lifetime constraints\n-  --> $DIR/issue-52742.rs:26:9\n+  --> $DIR/issue-52742.rs:25:9\n    |\n LL |     fn take_bar(&mut self, b: Bar<'_>) {\n    |                 ---------         -- let's call this `'1`"}]}