{"sha": "01b254b411a954ebed24a38f873e02b7f6edd0a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjI1NGI0MTFhOTU0ZWJlZDI0YTM4Zjg3M2UwMmI3ZjZlZGQwYTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-02T23:56:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-03T05:11:46Z"}, "message": "Rename istr-stuff to str in the runtime. Issue #855", "tree": {"sha": "7eee87e94a52526d2f4828435d256cfd869fb4d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eee87e94a52526d2f4828435d256cfd869fb4d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b254b411a954ebed24a38f873e02b7f6edd0a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b254b411a954ebed24a38f873e02b7f6edd0a6", "html_url": "https://github.com/rust-lang/rust/commit/01b254b411a954ebed24a38f873e02b7f6edd0a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b254b411a954ebed24a38f873e02b7f6edd0a6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d71995ec20ab03c0ef7f30424162ad0830d781", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d71995ec20ab03c0ef7f30424162ad0830d781", "html_url": "https://github.com/rust-lang/rust/commit/a1d71995ec20ab03c0ef7f30424162ad0830d781"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "1d03f7681017ba2bf85e7385d4601ceec107d474", "filename": "src/lib/str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=01b254b411a954ebed24a38f873e02b7f6edd0a6", "patch": "@@ -7,7 +7,7 @@ export eq, lteq, hash, is_empty, is_not_empty, is_whitespace, byte_len, index,\n        str_from_cstr, sbuf, as_buf, push_byte, utf8_char_width, safe_slice;\n \n native \"rust\" mod rustrt {\n-    fn rust_istr_push(s: &mutable str, ch: u8);\n+    fn rust_str_push(s: &mutable str, ch: u8);\n }\n \n fn eq(a: &str, b: &str) -> bool { a == b }\n@@ -315,10 +315,10 @@ fn pop_byte(s: &mutable str) -> u8 {\n     ret b;\n }\n \n-fn push_byte(s: &mutable str, b: u8) { rustrt::rust_istr_push(s, b); }\n+fn push_byte(s: &mutable str, b: u8) { rustrt::rust_str_push(s, b); }\n \n fn push_bytes(s: &mutable str, bytes: &[u8]) {\n-    for byte in bytes { rustrt::rust_istr_push(s, byte); }\n+    for byte in bytes { rustrt::rust_str_push(s, byte); }\n }\n \n fn split(s: &str, sep: u8) -> [str] {"}, {"sha": "25fb93313143d647a83899ae8eaf8b9f50a32c71", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=01b254b411a954ebed24a38f873e02b7f6edd0a6", "patch": "@@ -43,9 +43,9 @@ command_line_args : public kernel_owned<command_line_args>\n                            \"command line arg interior\");\n         args->fill = args->alloc = sizeof(rust_vec*) * argc;\n         for (int i = 0; i < argc; ++i) {\n-            rust_vec *str = make_istr(kernel, argv[i],\n-                                      strlen(argv[i]),\n-                                      \"command line arg\");\n+            rust_vec *str = make_str(kernel, argv[i],\n+                                     strlen(argv[i]),\n+                                     \"command line arg\");\n             ((rust_vec**)&args->data)[i] = str;\n         }\n     }"}, {"sha": "a09e7ac184984a1445dc08c6b54f5c455ac0d5b1", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=01b254b411a954ebed24a38f873e02b7f6edd0a6", "patch": "@@ -40,7 +40,7 @@ last_os_error(rust_task *task) {\n     }\n #endif\n \n-    rust_vec * st = make_istr(task->kernel, buf, strlen(buf),\n+    rust_vec * st = make_str(task->kernel, buf, strlen(buf),\n                               \"last_os_error\");\n #ifdef __WIN32__\n     LocalFree((HLOCAL)buf);\n@@ -63,7 +63,7 @@ rust_getcwd(rust_task *task) {\n         return NULL;\n     }\n \n-    return make_istr(task->kernel, cbuf, strlen(cbuf), \"rust_str(getcwd\");\n+    return make_str(task->kernel, cbuf, strlen(cbuf), \"rust_str(getcwd\");\n }\n \n extern \"C\" CDECL\n@@ -127,7 +127,7 @@ vec_from_buf_shared(rust_task *task, type_desc *ty,\n }\n \n extern \"C\" CDECL void\n-rust_istr_push(rust_task* task, rust_vec** sp, uint8_t byte) {\n+rust_str_push(rust_task* task, rust_vec** sp, uint8_t byte) {\n     size_t fill = (*sp)->fill;\n     reserve_vec(task, sp, fill + 1);\n     (*sp)->data[fill-1] = byte;\n@@ -329,7 +329,7 @@ rust_list_files(rust_task *task, rust_vec **path) {\n     HANDLE hFind = FindFirstFile((char*)(*path)->data, &FindFileData);\n     if (hFind != INVALID_HANDLE_VALUE) {\n         do {\n-            rust_vec *str = make_istr(task->kernel, FindFileData.cFileName,\n+            rust_vec *str = make_str(task->kernel, FindFileData.cFileName,\n                                       strlen(FindFileData.cFileName),\n                                       \"list_files_str\");\n             strings.push(str);\n@@ -341,7 +341,7 @@ rust_list_files(rust_task *task, rust_vec **path) {\n   if (dirp) {\n       struct dirent *dp;\n       while ((dp = readdir(dirp))) {\n-          rust_vec *str = make_istr(task->kernel, dp->d_name,\n+          rust_vec *str = make_str(task->kernel, dp->d_name,\n                                     strlen(dp->d_name),\n                                     \"list_files_str\");\n           strings.push(str);"}, {"sha": "25886aef74bf3949fe5166ef359cc56feac3083f", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=01b254b411a954ebed24a38f873e02b7f6edd0a6", "patch": "@@ -189,7 +189,7 @@ inline void reserve_vec(rust_task* task, rust_vec** vpp, size_t size) {\n }\n \n inline rust_vec *\n-make_istr(rust_kernel* kernel, char* c, size_t strlen, const char* name) {\n+make_str(rust_kernel* kernel, char* c, size_t strlen, const char* name) {\n     size_t str_fill = strlen + 1;\n     size_t str_alloc = str_fill;\n     rust_vec *str = (rust_vec *)"}, {"sha": "ef215ce68c8b71ceb6b8e9ae102e951cc7e6288c", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/01b254b411a954ebed24a38f873e02b7f6edd0a6/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=01b254b411a954ebed24a38f873e02b7f6edd0a6", "patch": "@@ -47,7 +47,7 @@ rust_file_is_dir\n rust_get_stdin\n rust_get_stdout\n rust_get_stderr\n-rust_istr_push\n+rust_str_push\n rust_list_files\n rust_process_wait\n rust_ptr_eq"}]}