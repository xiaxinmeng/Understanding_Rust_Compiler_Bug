{"sha": "f2c66605c2482e9e6b611b6e062ea475a42a620f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYzY2NjA1YzI0ODJlOWU2YjYxMWI2ZTA2MmVhNDc1YTQyYTYyMGY=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-11T00:14:04Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-11T00:14:04Z"}, "message": "vscode: add error handling to downloadFile()", "tree": {"sha": "a19afba6d0f4138f106ff4a5ac967458532cccc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a19afba6d0f4138f106ff4a5ac967458532cccc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2c66605c2482e9e6b611b6e062ea475a42a620f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c66605c2482e9e6b611b6e062ea475a42a620f", "html_url": "https://github.com/rust-lang/rust/commit/f2c66605c2482e9e6b611b6e062ea475a42a620f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2c66605c2482e9e6b611b6e062ea475a42a620f/comments", "author": null, "committer": null, "parents": [{"sha": "f8d6d6f23bfb15021be91031ba983da19f0d3ada", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6d6f23bfb15021be91031ba983da19f0d3ada", "html_url": "https://github.com/rust-lang/rust/commit/f8d6d6f23bfb15021be91031ba983da19f0d3ada"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "9d37eaa0edaaff87ec5fbbecb031ed655b1b7418", "filename": "editors/code/src/installation/download_file.ts", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f2c66605c2482e9e6b611b6e062ea475a42a620f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f2c66605c2482e9e6b611b6e062ea475a42a620f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts?ref=f2c66605c2482e9e6b611b6e062ea475a42a620f", "patch": "@@ -13,16 +13,23 @@ export async function downloadFile(\n     destFilePath: fs.PathLike,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n-    const response = await fetch(url);\n+    const res = await fetch(url);\n \n-    const totalBytes = Number(response.headers.get('content-length'));\n+    if (!res.ok) {\n+        console.log(\"Error\", res.status, \"while downloading file from\", url);\n+        console.dir({ body: await res.text(), headers: res.headers }, { depth: 3 });\n+\n+        throw new Error(`Got response ${res.status} when trying to download a file`);\n+    }\n+\n+    const totalBytes = Number(res.headers.get('content-length'));\n     assert(!Number.isNaN(totalBytes), \"Sanity check of content-length protocol\");\n \n     let readBytes = 0;\n \n     console.log(\"Downloading file of\", totalBytes, \"bytes size from\", url, \"to\", destFilePath);\n \n-    return new Promise<void>((resolve, reject) => response.body\n+    return new Promise<void>((resolve, reject) => res.body\n         .on(\"data\", (chunk: Buffer) => {\n             readBytes += chunk.length;\n             onProgress(readBytes, totalBytes);"}]}