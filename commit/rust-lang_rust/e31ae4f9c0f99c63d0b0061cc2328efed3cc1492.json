{"sha": "e31ae4f9c0f99c63d0b0061cc2328efed3cc1492", "node_id": "C_kwDOAAsO6NoAKGUzMWFlNGY5YzBmOTljNjNkMGIwMDYxY2MyMzI4ZWZlZDNjYzE0OTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-16T20:36:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-16T20:36:05Z"}, "message": "Rollup merge of #103087 - phimuemue:btreemap_append_doc, r=Mark-Simulacrum\n\nDocumentation BTreeMap::append's behavior for already existing keys\n\n`BTreeMap::append` overwrites existing values with new ones. This commit adds explicit documentation for that.", "tree": {"sha": "89c664d54961bb8d68589608cb6c9c2faebeeb20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89c664d54961bb8d68589608cb6c9c2faebeeb20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjTGs1CRBK7hj4Ov3rIwAAEsoIAK6Y+fqcN6nhuM1Nau+4DmAH\nsk6KzYnb6DkyrB+9GaVFYuSFPKeY4ustgKaGYJ7F39JTv8Ys+cnafS2d7c8eIouT\n3BHOFPdsZRM97MGfYmkdri/OVKYn3/SCgcH+p6cnD5kcUULOH+SjQ15fbeTjcGxK\ngW2w9aseRT32GyR0hIdVY9NOK3xRwrAVgmaDShsgFYnHtigGXkNUJAE+6fvnymYq\n18i9SQ0nfrfDIx2KwtQ6hLipAEvrTYtQHgVgtvUAx+OYXeZ1nRnu68a0ra1YlnOY\nZ9W+PipHYtskgMBLDJ7dMUn/NpNnmKeHP37FHRVoaBal5F+YG9BFGmUjqX6N/kU=\n=dNvl\n-----END PGP SIGNATURE-----\n", "payload": "tree 89c664d54961bb8d68589608cb6c9c2faebeeb20\nparent bf286a82e236e065c67909657e3a35d1511d1864\nparent 4854e37dbce901db40cc94f078cce87985d7e0b1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665952565 +0200\ncommitter GitHub <noreply@github.com> 1665952565 +0200\n\nRollup merge of #103087 - phimuemue:btreemap_append_doc, r=Mark-Simulacrum\n\nDocumentation BTreeMap::append's behavior for already existing keys\n\n`BTreeMap::append` overwrites existing values with new ones. This commit adds explicit documentation for that.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492", "html_url": "https://github.com/rust-lang/rust/commit/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf286a82e236e065c67909657e3a35d1511d1864", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf286a82e236e065c67909657e3a35d1511d1864", "html_url": "https://github.com/rust-lang/rust/commit/bf286a82e236e065c67909657e3a35d1511d1864"}, {"sha": "4854e37dbce901db40cc94f078cce87985d7e0b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4854e37dbce901db40cc94f078cce87985d7e0b1", "html_url": "https://github.com/rust-lang/rust/commit/4854e37dbce901db40cc94f078cce87985d7e0b1"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c4c75e46a2a3b687574c14327e129332c54f40c0", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31ae4f9c0f99c63d0b0061cc2328efed3cc1492/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=e31ae4f9c0f99c63d0b0061cc2328efed3cc1492", "patch": "@@ -1093,6 +1093,9 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n \n     /// Moves all elements from `other` into `self`, leaving `other` empty.\n     ///\n+    /// If a key from `other` is already present in `self`, the respective\n+    /// value from `self` will be overwritten with the respective value from `other`.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1101,10 +1104,10 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// let mut a = BTreeMap::new();\n     /// a.insert(1, \"a\");\n     /// a.insert(2, \"b\");\n-    /// a.insert(3, \"c\");\n+    /// a.insert(3, \"c\"); // Note: Key (3) also present in b.\n     ///\n     /// let mut b = BTreeMap::new();\n-    /// b.insert(3, \"d\");\n+    /// b.insert(3, \"d\"); // Note: Key (3) also present in a.\n     /// b.insert(4, \"e\");\n     /// b.insert(5, \"f\");\n     ///\n@@ -1115,7 +1118,7 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     ///\n     /// assert_eq!(a[&1], \"a\");\n     /// assert_eq!(a[&2], \"b\");\n-    /// assert_eq!(a[&3], \"d\");\n+    /// assert_eq!(a[&3], \"d\"); // Note: \"c\" has been overwritten.\n     /// assert_eq!(a[&4], \"e\");\n     /// assert_eq!(a[&5], \"f\");\n     /// ```"}]}