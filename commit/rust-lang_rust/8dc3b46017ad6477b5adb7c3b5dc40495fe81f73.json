{"sha": "8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzNiNDYwMTdhZDY0NzdiNWFkYjdjM2I1ZGM0MDQ5NWZlODFmNzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-30T12:40:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-30T12:40:47Z"}, "message": "fix: avoid panic when parsing extern block\n\ncloses #10083", "tree": {"sha": "240f37220f8987ec637541bec00fdd4e1014afc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/240f37220f8987ec637541bec00fdd4e1014afc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "html_url": "https://github.com/rust-lang/rust/commit/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a833fba98aaa728b16d23db3da04c624601b0751", "url": "https://api.github.com/repos/rust-lang/rust/commits/a833fba98aaa728b16d23db3da04c624601b0751", "html_url": "https://github.com/rust-lang/rust/commit/a833fba98aaa728b16d23db3da04c624601b0751"}], "stats": {"total": 56, "additions": 43, "deletions": 13}, "files": [{"sha": "9763df63f222bd38ff73c9207b46f14eed5275ad", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -93,6 +93,7 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n     };\n \n     let mut has_mods = false;\n+    let mut has_extern = false;\n \n     // modifiers\n     if p.at(T![const]) && p.nth(1) != T!['{'] {\n@@ -102,7 +103,7 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n \n     // test_err async_without_semicolon\n     // fn foo() { let _ = async {} }\n-    if p.at(T![async]) && p.nth(1) != T!['{'] && p.nth(1) != T![move] && p.nth(1) != T![|] {\n+    if p.at(T![async]) && !matches!(p.nth(1), T!['{'] | T![move] | T![|]) {\n         p.eat(T![async]);\n         has_mods = true;\n     }\n@@ -114,7 +115,8 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n         has_mods = true;\n     }\n \n-    if p.at(T![extern]) && p.nth(1) != T!['{'] && (p.nth(1) != STRING || p.nth(2) != T!['{']) {\n+    if p.at(T![extern]) {\n+        has_extern = true;\n         has_mods = true;\n         abi(p);\n     }\n@@ -211,25 +213,23 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             type_alias(p, m);\n         }\n \n+        // test unsafe_extern_block\n         // unsafe extern \"C\" {}\n-        T![extern] => {\n-            abi(p);\n+        T!['{'] if has_extern => {\n             extern_item_list(p);\n             m.complete(p, EXTERN_BLOCK);\n         }\n \n-        _ => {\n-            if !has_visibility && !has_mods {\n-                return Err(m);\n+        _ if has_visibility || has_mods => {\n+            if has_mods {\n+                p.error(\"expected existential, fn, trait or impl\");\n             } else {\n-                if has_mods {\n-                    p.error(\"expected existential, fn, trait or impl\");\n-                } else {\n-                    p.error(\"expected an item\");\n-                }\n-                m.complete(p, ERROR);\n+                p.error(\"expected an item\");\n             }\n+            m.complete(p, ERROR);\n         }\n+\n+        _ => return Err(m),\n     }\n     Ok(())\n }"}, {"sha": "85e10ca36dbc3309a905666bdf32ffa2e477865a", "filename": "crates/syntax/test_data/parser/err/0048_repated_extern_modifier.rast", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rast?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -0,0 +1,15 @@\n+SOURCE_FILE@0..22\n+  ERROR@0..10\n+    ABI@0..10\n+      EXTERN_KW@0..6 \"extern\"\n+      WHITESPACE@6..7 \" \"\n+      STRING@7..10 \"\\\"C\\\"\"\n+  WHITESPACE@10..11 \" \"\n+  ERROR@11..21\n+    ABI@11..21\n+      EXTERN_KW@11..17 \"extern\"\n+      WHITESPACE@17..18 \" \"\n+      STRING@18..21 \"\\\"C\\\"\"\n+  WHITESPACE@21..22 \"\\n\"\n+error 10..10: expected existential, fn, trait or impl\n+error 21..21: expected existential, fn, trait or impl"}, {"sha": "1fb18eaf1bcc5facfbc2ff491e4844fa168c1dcf", "filename": "crates/syntax/test_data/parser/err/0048_repated_extern_modifier.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0048_repated_extern_modifier.rs?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -0,0 +1 @@\n+extern \"C\" extern \"C\"\r"}, {"sha": "8044e6674dab2ddde70f9741f6f56c2a1e4dcb81", "filename": "crates/syntax/test_data/parser/inline/ok/0167_unsafe_extern_block.rast", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -0,0 +1,13 @@\n+SOURCE_FILE@0..21\n+  EXTERN_BLOCK@0..20\n+    UNSAFE_KW@0..6 \"unsafe\"\n+    WHITESPACE@6..7 \" \"\n+    ABI@7..17\n+      EXTERN_KW@7..13 \"extern\"\n+      WHITESPACE@13..14 \" \"\n+      STRING@14..17 \"\\\"C\\\"\"\n+    WHITESPACE@17..18 \" \"\n+    EXTERN_ITEM_LIST@18..20\n+      L_CURLY@18..19 \"{\"\n+      R_CURLY@19..20 \"}\"\n+  WHITESPACE@20..21 \"\\n\""}, {"sha": "9475aec15c155c4e4160efea82706c48cb6ffd6b", "filename": "crates/syntax/test_data/parser/inline/ok/0167_unsafe_extern_block.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -0,0 +1 @@\n+unsafe extern \"C\" {}"}]}