{"sha": "cea73d6341a136c6f915c45133748ecfbe36729b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYTczZDYzNDFhMTM2YzZmOTE1YzQ1MTMzNzQ4ZWNmYmUzNjcyOWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-15T20:17:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-15T20:17:04Z"}, "message": "update recently moved tests", "tree": {"sha": "94de0a0c63a0f5ae6a9ec80f47e2bf709fc57627", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94de0a0c63a0f5ae6a9ec80f47e2bf709fc57627"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cea73d6341a136c6f915c45133748ecfbe36729b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cea73d6341a136c6f915c45133748ecfbe36729b", "html_url": "https://github.com/rust-lang/rust/commit/cea73d6341a136c6f915c45133748ecfbe36729b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cea73d6341a136c6f915c45133748ecfbe36729b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e14d307b1c6cb551574369f513b8d87fbe52b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e14d307b1c6cb551574369f513b8d87fbe52b7", "html_url": "https://github.com/rust-lang/rust/commit/e5e14d307b1c6cb551574369f513b8d87fbe52b7"}], "stats": {"total": 64, "additions": 37, "deletions": 27}, "files": [{"sha": "0d8185839ccb47b380e556df6fa3d5b84d307907", "filename": "src/test/ui/extern/extern-wrong-value-type.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Fextern%2Fextern-wrong-value-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Fextern%2Fextern-wrong-value-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-wrong-value-type.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -1,9 +1,11 @@\n-error[E0277]: the trait bound `extern \"C\" fn() {f}: std::ops::Fn<()>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<()>` closure, found `extern \"C\" fn() {f}`\n   --> $DIR/extern-wrong-value-type.rs:19:5\n    |\n LL |     is_fn(f);\n-   |     ^^^^^ the trait `std::ops::Fn<()>` is not implemented for `extern \"C\" fn() {f}`\n+   |     ^^^^^ expected an `Fn<()>` closure, found `extern \"C\" fn() {f}`\n    |\n+   = help: the trait `std::ops::Fn<()>` is not implemented for `extern \"C\" fn() {f}`\n+   = note: wrap the `extern \"C\" fn() {f}` in a closure with no arguments: `|| { /* code */ }\n note: required by `is_fn`\n   --> $DIR/extern-wrong-value-type.rs:14:1\n    |"}, {"sha": "198b343cdd3e76481ef3db3bed0a98de1059825f", "filename": "src/test/ui/fn/fn-trait-formatting.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Ffn%2Ffn-trait-formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Ffn%2Ffn-trait-formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Ffn-trait-formatting.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -25,15 +25,13 @@ LL |     let _: () = (box || -> isize { unimplemented!() }) as Box<FnMut() -> is\n    = note: expected type `()`\n               found type `std::boxed::Box<dyn std::ops::FnMut() -> isize>`\n \n-error[E0277]: the trait bound `{integer}: std::ops::Fn<(isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<(isize,)>` closure, found `{integer}`\n   --> $DIR/fn-trait-formatting.rs:29:5\n    |\n LL |     needs_fn(1);\n-   |     ^^^^^^^^ the trait `std::ops::Fn<(isize,)>` is not implemented for `{integer}`\n+   |     ^^^^^^^^ expected an `Fn<(isize,)>` closure, found `{integer}`\n    |\n-   = help: the following implementations were found:\n-             <&'a F as std::ops::Fn<A>>\n-             <core::str::LinesAnyMap as std::ops::Fn<(&'a str,)>>\n+   = help: the trait `std::ops::Fn<(isize,)>` is not implemented for `{integer}`\n note: required by `needs_fn`\n   --> $DIR/fn-trait-formatting.rs:13:1\n    |"}, {"sha": "e5e66efcaa2ced9cd2b62c7010e0ad72c03c48ab", "filename": "src/test/ui/unboxed-closures/unboxed-closures-fnmut-as-fn.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-fnmut-as-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-fnmut-as-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-fnmut-as-fn.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -1,9 +1,10 @@\n-error[E0277]: the trait bound `S: std::ops::Fn<(isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<(isize,)>` closure, found `S`\n   --> $DIR/unboxed-closures-fnmut-as-fn.rs:38:13\n    |\n LL |     let x = call_it(&S, 22);\n-   |             ^^^^^^^ the trait `std::ops::Fn<(isize,)>` is not implemented for `S`\n+   |             ^^^^^^^ expected an `Fn<(isize,)>` closure, found `S`\n    |\n+   = help: the trait `std::ops::Fn<(isize,)>` is not implemented for `S`\n note: required by `call_it`\n   --> $DIR/unboxed-closures-fnmut-as-fn.rs:33:1\n    |"}, {"sha": "7c76c10443af91763ee0c6e454b9f7236cd3e7f6", "filename": "src/test/ui/unboxed-closures/unboxed-closures-unsafe-extern-fn.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unsafe-extern-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unsafe-extern-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unsafe-extern-fn.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -1,33 +1,36 @@\n-error[E0277]: the trait bound `for<'r> for<'s> unsafe fn(&'s isize) -> isize {square}: std::ops::Fn<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:22:13\n    |\n LL |     let x = call_it(&square, 22);\n-   |             ^^^^^^^ the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^ expected an `Fn<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n note: required by `call_it`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:17:1\n    |\n LL | fn call_it<F:Fn(&isize)->isize>(_: &F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> for<'s> unsafe fn(&'s isize) -> isize {square}: std::ops::FnMut<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnMut<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:27:13\n    |\n LL |     let y = call_it_mut(&mut square, 22);\n-   |             ^^^^^^^^^^^ the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^^^^^ expected an `FnMut<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n note: required by `call_it_mut`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:18:1\n    |\n LL | fn call_it_mut<F:FnMut(&isize)->isize>(_: &mut F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> for<'s> unsafe fn(&'s isize) -> isize {square}: std::ops::FnOnce<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnOnce<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:32:13\n    |\n LL |     let z = call_it_once(square, 22);\n-   |             ^^^^^^^^^^^^ the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^^^^^^ expected an `FnOnce<(&isize,)>` closure, found `for<'r> unsafe fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `for<'r> unsafe fn(&'r isize) -> isize {square}`\n note: required by `call_it_once`\n   --> $DIR/unboxed-closures-unsafe-extern-fn.rs:19:1\n    |"}, {"sha": "18ade48de664080d54ff9db4b563650de44316fa", "filename": "src/test/ui/unboxed-closures/unboxed-closures-wrong-abi.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-abi.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -1,33 +1,36 @@\n-error[E0277]: the trait bound `for<'r> for<'s> extern \"C\" fn(&'s isize) -> isize {square}: std::ops::Fn<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-abi.rs:22:13\n    |\n LL |     let x = call_it(&square, 22);\n-   |             ^^^^^^^ the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^ expected an `Fn<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n note: required by `call_it`\n   --> $DIR/unboxed-closures-wrong-abi.rs:17:1\n    |\n LL | fn call_it<F:Fn(&isize)->isize>(_: &F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> for<'s> extern \"C\" fn(&'s isize) -> isize {square}: std::ops::FnMut<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnMut<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-abi.rs:27:13\n    |\n LL |     let y = call_it_mut(&mut square, 22);\n-   |             ^^^^^^^^^^^ the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^^^^^ expected an `FnMut<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n note: required by `call_it_mut`\n   --> $DIR/unboxed-closures-wrong-abi.rs:18:1\n    |\n LL | fn call_it_mut<F:FnMut(&isize)->isize>(_: &mut F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> for<'s> extern \"C\" fn(&'s isize) -> isize {square}: std::ops::FnOnce<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnOnce<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-abi.rs:32:13\n    |\n LL |     let z = call_it_once(square, 22);\n-   |             ^^^^^^^^^^^^ the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n+   |             ^^^^^^^^^^^^ expected an `FnOnce<(&isize,)>` closure, found `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `for<'r> extern \"C\" fn(&'r isize) -> isize {square}`\n note: required by `call_it_once`\n   --> $DIR/unboxed-closures-wrong-abi.rs:19:1\n    |"}, {"sha": "f27b73017a28fed53e9f7745f9fda65843b61585", "filename": "src/test/ui/unboxed-closures/unboxed-closures-wrong-arg-type-extern-fn.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-arg-type-extern-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cea73d6341a136c6f915c45133748ecfbe36729b/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-arg-type-extern-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-wrong-arg-type-extern-fn.stderr?ref=cea73d6341a136c6f915c45133748ecfbe36729b", "patch": "@@ -1,33 +1,36 @@\n-error[E0277]: the trait bound `for<'r> unsafe fn(isize) -> isize {square}: std::ops::Fn<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::Fn<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:23:13\n    |\n LL |     let x = call_it(&square, 22);\n-   |             ^^^^^^^ the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n+   |             ^^^^^^^ expected an `Fn<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::Fn<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n note: required by `call_it`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:18:1\n    |\n LL | fn call_it<F:Fn(&isize)->isize>(_: &F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> unsafe fn(isize) -> isize {square}: std::ops::FnMut<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnMut<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:28:13\n    |\n LL |     let y = call_it_mut(&mut square, 22);\n-   |             ^^^^^^^^^^^ the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n+   |             ^^^^^^^^^^^ expected an `FnMut<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnMut<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n note: required by `call_it_mut`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:19:1\n    |\n LL | fn call_it_mut<F:FnMut(&isize)->isize>(_: &mut F, _: isize) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the trait bound `for<'r> unsafe fn(isize) -> isize {square}: std::ops::FnOnce<(&'r isize,)>` is not satisfied\n+error[E0277]: expected a `std::ops::FnOnce<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:33:13\n    |\n LL |     let z = call_it_once(square, 22);\n-   |             ^^^^^^^^^^^^ the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n+   |             ^^^^^^^^^^^^ expected an `FnOnce<(&isize,)>` closure, found `unsafe fn(isize) -> isize {square}`\n    |\n+   = help: the trait `for<'r> std::ops::FnOnce<(&'r isize,)>` is not implemented for `unsafe fn(isize) -> isize {square}`\n note: required by `call_it_once`\n   --> $DIR/unboxed-closures-wrong-arg-type-extern-fn.rs:20:1\n    |"}]}