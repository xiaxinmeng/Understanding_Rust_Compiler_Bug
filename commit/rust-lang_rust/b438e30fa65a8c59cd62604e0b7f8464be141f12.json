{"sha": "b438e30fa65a8c59cd62604e0b7f8464be141f12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MzhlMzBmYTY1YThjNTljZDYyNjA0ZTBiN2Y4NDY0YmUxNDFmMTI=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-10-06T00:41:46Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-03-31T14:15:27Z"}, "message": "Track bound vars", "tree": {"sha": "ef9c6c0177fbcdccea70f14a11dd40cc343b9a77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef9c6c0177fbcdccea70f14a11dd40cc343b9a77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b438e30fa65a8c59cd62604e0b7f8464be141f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b438e30fa65a8c59cd62604e0b7f8464be141f12", "html_url": "https://github.com/rust-lang/rust/commit/b438e30fa65a8c59cd62604e0b7f8464be141f12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b438e30fa65a8c59cd62604e0b7f8464be141f12/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d121b34e9919dda5f1c2baa672459cbabbf05817", "url": "https://api.github.com/repos/rust-lang/rust/commits/d121b34e9919dda5f1c2baa672459cbabbf05817", "html_url": "https://github.com/rust-lang/rust/commit/d121b34e9919dda5f1c2baa672459cbabbf05817"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4c13941f66599b28d3532e1f5ff2ff96ac20aff0", "filename": "clippy_lints/src/unit_return_expecting_ord.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b438e30fa65a8c59cd62604e0b7f8464be141f12/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b438e30fa65a8c59cd62604e0b7f8464be141f12/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs?ref=b438e30fa65a8c59cd62604e0b7f8464be141f12", "patch": "@@ -44,7 +44,7 @@ fn get_trait_predicates_for_trait_id<'tcx>(\n     for (pred, _) in generics.predicates {\n         if_chain! {\n             if let PredicateKind::Trait(poly_trait_pred, _) = pred.kind().skip_binder();\n-            let trait_pred = cx.tcx.erase_late_bound_regions(ty::Binder::bind(poly_trait_pred));\n+            let trait_pred = cx.tcx.erase_late_bound_regions(pred.kind().rebind(poly_trait_pred));\n             if let Some(trait_def_id) = trait_id;\n             if trait_def_id == trait_pred.trait_ref.def_id;\n             then {\n@@ -58,12 +58,12 @@ fn get_trait_predicates_for_trait_id<'tcx>(\n fn get_projection_pred<'tcx>(\n     cx: &LateContext<'tcx>,\n     generics: GenericPredicates<'tcx>,\n-    pred: TraitPredicate<'tcx>,\n+    trait_pred: TraitPredicate<'tcx>,\n ) -> Option<ProjectionPredicate<'tcx>> {\n     generics.predicates.iter().find_map(|(proj_pred, _)| {\n-        if let ty::PredicateKind::Projection(proj_pred) = proj_pred.kind().skip_binder() {\n-            let projection_pred = cx.tcx.erase_late_bound_regions(ty::Binder::bind(proj_pred));\n-            if projection_pred.projection_ty.substs == pred.trait_ref.substs {\n+        if let ty::PredicateKind::Projection(pred) = proj_pred.kind().skip_binder() {\n+            let projection_pred = cx.tcx.erase_late_bound_regions(proj_pred.kind().rebind(pred));\n+            if projection_pred.projection_ty.substs == trait_pred.trait_ref.substs {\n                 return Some(projection_pred);\n             }\n         }"}]}