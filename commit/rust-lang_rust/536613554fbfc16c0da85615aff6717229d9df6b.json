{"sha": "536613554fbfc16c0da85615aff6717229d9df6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNjYxMzU1NGZiZmMxNmMwZGE4NTYxNWFmZjY3MTcyMjlkOWRmNmI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-25T18:10:23Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-25T18:10:23Z"}, "message": "Clean up YieldFinder", "tree": {"sha": "41b775d717bd806f510e904f2bfcaf6384e8ffed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41b775d717bd806f510e904f2bfcaf6384e8ffed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/536613554fbfc16c0da85615aff6717229d9df6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/536613554fbfc16c0da85615aff6717229d9df6b", "html_url": "https://github.com/rust-lang/rust/commit/536613554fbfc16c0da85615aff6717229d9df6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/536613554fbfc16c0da85615aff6717229d9df6b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c71153113b965b6dfd265590a4d20a73d08ee4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c71153113b965b6dfd265590a4d20a73d08ee4d7", "html_url": "https://github.com/rust-lang/rust/commit/c71153113b965b6dfd265590a4d20a73d08ee4d7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "944d03737d37d0eb48dfa595ca8b1d9178a76284", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/536613554fbfc16c0da85615aff6717229d9df6b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/536613554fbfc16c0da85615aff6717229d9df6b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=536613554fbfc16c0da85615aff6717229d9df6b", "patch": "@@ -1175,13 +1175,18 @@ struct YieldFinder<'a> {\n \n impl<'a> YieldFinder<'a> {\n     fn lookup<F: FnOnce(&mut Self)>(&mut self, id: NodeId, f: F) {\n-        if let Some(result) = self.cache.get(&id) {\n-            self.result = *result;\n+        // Don't traverse further if we found a yield expression\n+        if self.result.is_some() {\n             return;\n         }\n-        if self.result.is_some() {\n+\n+        // See if there's an entry in the cache\n+        if let Some(result) = self.cache.get(&id) {\n+            self.result = *result;\n             return;\n         }\n+\n+        // Otherwise calculate the result and insert it into the cache\n         f(self);\n         self.cache.insert(id, self.result);\n     }"}]}