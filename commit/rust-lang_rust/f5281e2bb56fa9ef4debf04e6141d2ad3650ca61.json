{"sha": "f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MjgxZTJiYjU2ZmE5ZWY0ZGViZjA0ZTYxNDFkMmFkMzY1MGNhNjE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-27T18:45:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-01T11:13:05Z"}, "message": "Do not make fake types for upvars if we haven't yet inferred whether they are borrowed\nor by value.", "tree": {"sha": "41c819d435955b1e037f76e3bbca7b9afab45701", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c819d435955b1e037f76e3bbca7b9afab45701"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "html_url": "https://github.com/rust-lang/rust/commit/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc41cc0ec9fbe395598fde5ef22b3e95582a5236", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc41cc0ec9fbe395598fde5ef22b3e95582a5236", "html_url": "https://github.com/rust-lang/rust/commit/bc41cc0ec9fbe395598fde5ef22b3e95582a5236"}], "stats": {"total": 42, "additions": 18, "deletions": 24}, "files": [{"sha": "f1e73ddc5a1e4389c4de13b84346a12edf68e976", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "patch": "@@ -5643,32 +5643,26 @@ pub fn closure_upvars<'tcx>(typer: &mc::Typer<'tcx>,\n                             closure_expr_id: closure_id.node\n                         };\n \n-                        let captured_freevar_ty = match typer.upvar_capture(upvar_id) {\n-                            Some(UpvarCapture::ByValue) => {\n-                                freevar_ty\n-                            }\n-\n-                            Some(UpvarCapture::ByRef(borrow)) => {\n-                                mk_rptr(tcx,\n-                                        tcx.mk_region(borrow.region),\n-                                        ty::mt {\n-                                            ty: freevar_ty,\n-                                            mutbl: borrow.kind.to_mutbl_lossy(),\n-                                        })\n-                            }\n+                        typer.upvar_capture(upvar_id).map(|capture| {\n+                            let freevar_ref_ty = match capture {\n+                                UpvarCapture::ByValue => {\n+                                    freevar_ty\n+                                }\n+                                UpvarCapture::ByRef(borrow) => {\n+                                    mk_rptr(tcx,\n+                                            tcx.mk_region(borrow.region),\n+                                            ty::mt {\n+                                                ty: freevar_ty,\n+                                                mutbl: borrow.kind.to_mutbl_lossy(),\n+                                            })\n+                                }\n+                            };\n \n-                            None => {\n-                                // FIXME(#16640) we should really return None here;\n-                                // but that requires better inference integration,\n-                                // for now gin up something.\n-                                freevar_ty\n+                            ClosureUpvar {\n+                                def: freevar.def,\n+                                span: freevar.span,\n+                                ty: freevar_ref_ty,\n                             }\n-                        };\n-\n-                        Some(ClosureUpvar {\n-                            def: freevar.def,\n-                            span: freevar.span,\n-                            ty: captured_freevar_ty,\n                         })\n                     })\n                     .collect()"}]}