{"sha": "517af7e74389aae865b1d17df2bedb7e35f2740b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxN2FmN2U3NDM4OWFhZTg2NWIxZDE3ZGYyYmVkYjdlMzVmMjc0MGI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-28T02:18:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-28T02:18:16Z"}, "message": "early => earley. Oops.", "tree": {"sha": "cdae39e4b9e773a28d32f089c6a387e344e0a58a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdae39e4b9e773a28d32f089c6a387e344e0a58a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/517af7e74389aae865b1d17df2bedb7e35f2740b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/517af7e74389aae865b1d17df2bedb7e35f2740b", "html_url": "https://github.com/rust-lang/rust/commit/517af7e74389aae865b1d17df2bedb7e35f2740b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/517af7e74389aae865b1d17df2bedb7e35f2740b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11e90f31cedabec1e84b505bbf64103c3421574", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11e90f31cedabec1e84b505bbf64103c3421574", "html_url": "https://github.com/rust-lang/rust/commit/e11e90f31cedabec1e84b505bbf64103c3421574"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dee3c71788f16cadce043cf29f7552e115d0b86a", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/517af7e74389aae865b1d17df2bedb7e35f2740b/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/517af7e74389aae865b1d17df2bedb7e35f2740b/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=517af7e74389aae865b1d17df2bedb7e35f2740b", "patch": "@@ -371,7 +371,7 @@ type capture_clause = @~[capture_item];\n // If the syntax extension is an MBE macro, it will attempt to match its\n // LHS \"matchers\" against the provided token tree, and if it finds a\n // match, will transcribe the RHS token tree, splicing in any captured\n-// early_parser::matched_nonterminals into the tt_nonterminals it finds.\n+// earley_parser::matched_nonterminals into the tt_nonterminals it finds.\n //\n // The RHS of an MBE macro is the only place a tt_nonterminal or tt_seq\n // makes any real sense. You could write them elsewhere but nothing"}]}