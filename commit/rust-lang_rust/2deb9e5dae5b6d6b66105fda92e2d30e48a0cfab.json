{"sha": "2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab", "node_id": "C_kwDOAAsO6NoAKDJkZWI5ZTVkYWU1YjZkNmI2NjEwNWZkYTkyZTJkMzBlNDhhMGNmYWI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-24T20:21:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-24T20:21:47Z"}, "message": "add exposed_only_ro test", "tree": {"sha": "adce703d72644be5e402196eaaa606dfbc90a62a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adce703d72644be5e402196eaaa606dfbc90a62a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab", "html_url": "https://github.com/rust-lang/rust/commit/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e7de117c84ccfe611a14791dbb53c5e1520b50", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e7de117c84ccfe611a14791dbb53c5e1520b50", "html_url": "https://github.com/rust-lang/rust/commit/d1e7de117c84ccfe611a14791dbb53c5e1520b50"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b3adb0b855f637cdfa9bf98319257852876d44cd", "filename": "tests/fail/stacked_borrows/exposed_only_ro.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab/tests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab/tests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.rs?ref=2deb9e5dae5b6d6b66105fda92e2d30e48a0cfab", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: -Zmiri-permissive-provenance\n+#![feature(strict_provenance)]\n+\n+// If we have only exposed read-only pointers, doing a write through a wildcard ptr should fail.\n+\n+fn main() {\n+    let mut x = 0;\n+    let _fool = &mut x as *mut i32; // this would have fooled the old untagged pointer logic\n+    let addr = (&x as *const i32).expose_addr();\n+    let ptr = std::ptr::from_exposed_addr_mut::<i32>(addr);\n+    unsafe { ptr.write(0) }; //~ ERROR: borrow stack\n+}"}]}