{"sha": "88d433e56fb6b9d94780e03d325d0f4d5260546a", "node_id": "C_kwDOAAsO6NoAKDg4ZDQzM2U1NmZiNmI5ZDk0NzgwZTAzZDMyNWQwZjRkNTI2MDU0NmE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-10T09:22:54Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-12T08:34:52Z"}, "message": "Rebless", "tree": {"sha": "ac9c9726845285c22f8f20b0e3542a454bb5bb8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac9c9726845285c22f8f20b0e3542a454bb5bb8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d433e56fb6b9d94780e03d325d0f4d5260546a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmIHcSwACgkQbQF6ltjm\nwvlEPBAAjBcT+dDHumEe0o2z3oWAJ2A1DpBCqaQYKDbhRC6iEoIYydYQSPnQQoxD\nAOe88YlfbujRYsDAifL2PDZo2ewBrObYC/wZEnkmuokU9WlPTkUHNhfaGTJz7LBW\nsb217WEPZIcPHwws6B56OiKg6p/nyee//RvCklxD2DgWRxGdPsI10ntXRKakF7QG\noV4t9BJ9RgRrwrGpOSOUPkjj1EEgFyXwEtUdf1P+RDMCM6dS4uI8TCHMEYth5iol\n8ZlZ21LcwlWoBDDqvuQ6jGrhp9llSJmpA2w+KWn3PSeVTfw70ZVO2uv95pp1y3Zo\njgA045EBK9uKR0WB+3v3X9gtYexdQWqnGxSLIsfC7naxO406C3hgQWYeHpqBBs2r\nnaWVb6GvK3ii3kHlQ2eyTF0mxvlwlDul6ENnyTV+htPaMy20h+Bg/+FoH2ySRH8+\nsyyraR9AGICSmdBSGGkWOGolXTLoZDuK5VVA0HmqNCF3t3kfPQXI5wH5uFDDW6Ru\n4lG9D8YLH9hHucN8SzPJG9Z4A4tmdPUWx/wxhwoQ0WbhqUVpbBiIjKSPLPrJJLRo\nuVWEPpFZXhWyrwQya84Oz4PqIjzS4QI+Vr1OZUEClGchoEeqywYmJvVgxvzbRL+l\nKGEqbH6UfuQD5nqGoVLIalBHgZbgAopV4yl+K//U/6n+XLkHLZk=\n=aQix\n-----END PGP SIGNATURE-----", "payload": "tree ac9c9726845285c22f8f20b0e3542a454bb5bb8f\nparent 12397ab48ba9e14fbcc1f65954682f764f36e31b\nauthor Deadbeef <ent3rm4n@gmail.com> 1644484974 +1100\ncommitter Deadbeef <ent3rm4n@gmail.com> 1644654892 +1100\n\nRebless\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d433e56fb6b9d94780e03d325d0f4d5260546a", "html_url": "https://github.com/rust-lang/rust/commit/88d433e56fb6b9d94780e03d325d0f4d5260546a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d433e56fb6b9d94780e03d325d0f4d5260546a/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12397ab48ba9e14fbcc1f65954682f764f36e31b", "url": "https://api.github.com/repos/rust-lang/rust/commits/12397ab48ba9e14fbcc1f65954682f764f36e31b", "html_url": "https://github.com/rust-lang/rust/commit/12397ab48ba9e14fbcc1f65954682f764f36e31b"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "c1a6bf6e34d0bb643585e58cbeaa4805dd2a4deb", "filename": "src/test/ui/const-generics/issue-93647.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.rs?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -1,6 +1,6 @@\n struct X<const N: usize = {\n     (||1usize)()\n-    //~^ ERROR calls in constants are limited to\n+    //~^ ERROR cannot call\n }>;\n \n fn main() {}"}, {"sha": "e2048ecd60f6d6e6974e136925de0f9f3ba09cfc", "filename": "src/test/ui/const-generics/issue-93647.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-93647.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -1,8 +1,11 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const closure in constants\n   --> $DIR/issue-93647.rs:2:5\n    |\n LL |     (||1usize)()\n    |     ^^^^^^^^^^^^\n+   |\n+   = note: closures need an RFC before allowed to be called in constants\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "abe68c17a0d7f1c0b7062547968dbf2d2db2bdb7", "filename": "src/test/ui/consts/const-fn-error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -6,7 +6,6 @@ const fn f(x: usize) -> usize {\n         //~^ ERROR mutable references\n         //~| ERROR cannot convert\n         //~| ERROR cannot call non-const fn\n-        //~| ERROR E0080\n         //~| ERROR `for` is not allowed in a `const fn`\n         sum += i;\n     }"}, {"sha": "1fc9db277610e5a45c483fe8ef6f8e04274816b6", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-const-trait-method-fail.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: the trait bound `u32: ~const Plus` is not satisfied\n    |\n LL |     a.plus(b)\n    |       ^^^^^^^ the trait `~const Plus` is not implemented for `u32`\n+   |\n+note: the trait `Plus` is implemented for `u32`, but that implementation is not `const`\n+  --> $DIR/call-const-trait-method-fail.rs:24:7\n+   |\n+LL |     a.plus(b)\n+   |       ^^^^^^^\n \n error[E0015]: cannot call non-const fn `<u32 as Plus>::plus` in constant functions\n   --> $DIR/call-const-trait-method-fail.rs:24:7"}, {"sha": "3963f64ad32b3b90b59cb9f2b9ae9b7588012b38", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-fail.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: can't compare `T` with `T` in const contexts\n    |\n LL |     *t == *t\n    |     ^^^^^^^^ no implementation for `T == T`\n+   |\n+note: the trait `PartialEq` is implemented for `T`, but that implementation is not `const`\n+  --> $DIR/call-generic-method-fail.rs:5:5\n+   |\n+LL |     *t == *t\n+   |     ^^^^^^^^\n \n error[E0015]: cannot call non-const operator in constant functions\n   --> $DIR/call-generic-method-fail.rs:5:5"}, {"sha": "948830d6def58f7388ccf8d5859f74fe410947cd", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-default-method-bodies.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: the trait bound `NonConstImpl: ~const ConstDefaultFn` is not satis\n    |\n LL |     NonConstImpl.a();\n    |                  ^^^ the trait `~const ConstDefaultFn` is not implemented for `NonConstImpl`\n+   |\n+note: the trait `ConstDefaultFn` is implemented for `NonConstImpl`, but that implementation is not `const`\n+  --> $DIR/const-default-method-bodies.rs:25:18\n+   |\n+LL |     NonConstImpl.a();\n+   |                  ^^^\n \n error[E0015]: cannot call non-const fn `<NonConstImpl as ConstDefaultFn>::a` in constant functions\n   --> $DIR/const-default-method-bodies.rs:25:18"}, {"sha": "3ca9abb139b86e03753ef05983a639b40360af8b", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate.gated.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: the trait bound `cross_crate::NonConst: ~const cross_crate::MyTrai\n    |\n LL |     NonConst.func();\n    |              ^^^^^^ the trait `~const cross_crate::MyTrait` is not implemented for `cross_crate::NonConst`\n+   |\n+note: the trait `cross_crate::MyTrait` is implemented for `cross_crate::NonConst`, but that implementation is not `const`\n+  --> $DIR/cross-crate.rs:15:14\n+   |\n+LL |     NonConst.func();\n+   |              ^^^^^^\n \n error[E0015]: cannot call non-const fn `<cross_crate::NonConst as cross_crate::MyTrait>::func` in constant functions\n   --> $DIR/cross-crate.rs:15:14"}, {"sha": "db4d61f88ab2f08a85e66bae320e31da06633aa5", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-same-trait-ck.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: the trait bound `(): ~const Tr` is not satisfied\n    |\n LL |         ().a()\n    |            ^^^ the trait `~const Tr` is not implemented for `()`\n+   |\n+note: the trait `Tr` is implemented for `()`, but that implementation is not `const`\n+  --> $DIR/default-method-body-is-const-same-trait-ck.rs:10:12\n+   |\n+LL |         ().a()\n+   |            ^^^\n \n error[E0015]: cannot call non-const fn `<() as Tr>::a` in constant functions\n   --> $DIR/default-method-body-is-const-same-trait-ck.rs:10:12"}, {"sha": "931c0b3658fd9d4f0d26e30a29ca46fbc36b0256", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-88155.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88d433e56fb6b9d94780e03d325d0f4d5260546a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr?ref=88d433e56fb6b9d94780e03d325d0f4d5260546a", "patch": "@@ -3,6 +3,12 @@ error[E0277]: the trait bound `T: ~const A` is not satisfied\n    |\n LL |     T::assoc()\n    |     ^^^^^^^^^^ the trait `~const A` is not implemented for `T`\n+   |\n+note: the trait `A` is implemented for `T`, but that implementation is not `const`\n+  --> $DIR/issue-88155.rs:9:5\n+   |\n+LL |     T::assoc()\n+   |     ^^^^^^^^^^\n \n error[E0015]: cannot call non-const fn `<T as A>::assoc` in constant functions\n   --> $DIR/issue-88155.rs:9:5"}]}