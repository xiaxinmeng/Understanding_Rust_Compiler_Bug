{"sha": "343463c824f4672f19be08f4786d3eeb2e7dea9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MzQ2M2M4MjRmNDY3MmYxOWJlMDhmNDc4NmQzZWViMmU3ZGVhOWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-26T06:12:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-15T12:27:00Z"}, "message": "implement durability", "tree": {"sha": "9357f9212269ca51e49b6945ec56612b7949c957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9357f9212269ca51e49b6945ec56612b7949c957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343463c824f4672f19be08f4786d3eeb2e7dea9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343463c824f4672f19be08f4786d3eeb2e7dea9f", "html_url": "https://github.com/rust-lang/rust/commit/343463c824f4672f19be08f4786d3eeb2e7dea9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343463c824f4672f19be08f4786d3eeb2e7dea9f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9266c18ce61daa53481db67e982acf25fd0452e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9266c18ce61daa53481db67e982acf25fd0452e3", "html_url": "https://github.com/rust-lang/rust/commit/9266c18ce61daa53481db67e982acf25fd0452e3"}], "stats": {"total": 175, "additions": 128, "deletions": 47}, "files": [{"sha": "7a0cc5c6e50a9a75c0e2d928b745a5a7d755ec42", "filename": "Cargo.lock", "status": "modified", "additions": 45, "deletions": 20, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -297,6 +297,19 @@ dependencies = [\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"crossbeam\"\n+version = \"0.7.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-channel 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-deque 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"crossbeam-channel\"\n version = \"0.3.9\"\n@@ -314,6 +327,15 @@ dependencies = [\n  \"crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"crossbeam-deque\"\n+version = \"0.7.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"crossbeam-epoch\"\n version = \"0.7.2\"\n@@ -360,7 +382,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -450,7 +472,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -910,7 +932,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1030,7 +1052,7 @@ dependencies = [\n  \"proc-macro-hack 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1064,7 +1086,7 @@ dependencies = [\n  \"pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1098,7 +1120,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1197,7 +1219,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.13.0 (git+https://github.com/nikomatsakis/salsa?branch=durability)\",\n ]\n \n [[package]]\n@@ -1658,29 +1680,30 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"salsa\"\n-version = \"0.12.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+version = \"0.13.0\"\n+source = \"git+https://github.com/nikomatsakis/salsa?branch=durability#fd1a0bfc333f571180ed986b9bd9f84b06bf9e7b\"\n dependencies = [\n+ \"crossbeam 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa-macros 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa-macros 0.13.0 (git+https://github.com/nikomatsakis/salsa?branch=durability)\",\n  \"smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"salsa-macros\"\n-version = \"0.12.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+version = \"0.13.0\"\n+source = \"git+https://github.com/nikomatsakis/salsa?branch=durability#fd1a0bfc333f571180ed986b9bd9f84b06bf9e7b\"\n dependencies = [\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1725,7 +1748,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1809,7 +1832,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"syn\"\n-version = \"0.15.42\"\n+version = \"0.15.43\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1824,7 +1847,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2169,8 +2192,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n \"checksum console 0.7.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ca57c2c14b8a2bf3105bc9d15574aad80babf6a9c44b1058034cdf8bd169628\"\n \"checksum cpuprofiler 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"33f07976bb6821459632d7a18d97ccca005cb5c552f251f822c7c1781c1d7035\"\n+\"checksum crossbeam 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d818a4990769aac0c7ff1360e233ef3a41adcb009ebb2036bf6915eb0f6b23c\"\n \"checksum crossbeam-channel 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8ec7fcd21571dc78f96cc96243cab8d8f035247c3efd16c687be154c3fa9efa\"\n \"checksum crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05e44b8cf3e1a625844d1750e1f7820da46044ff6d28f4d43e455ba3e5bb2c13\"\n+\"checksum crossbeam-deque 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b18cd2e169ad86297e6bc0ad9aa679aee9daa4f19e8163860faf7c164e4f5a71\"\n \"checksum crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fedcd6772e37f3da2a9af9bf12ebe046c0dfe657992377b4df982a2b54cd37a9\"\n \"checksum crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b\"\n \"checksum crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6\"\n@@ -2300,8 +2325,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c92464b447c0ee8c4fb3824ecc8383b81717b9f1e74ba2e72540aef7b9f82997\"\n-\"checksum salsa 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2891cd628406e8a0ca714b827511de1bff76f796e3382cc72a3de732ccad5aea\"\n-\"checksum salsa-macros 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b7f1e25ca2b995bdf032946174929d62156ffd57abd7ff88dc6f9bdeb5ac0c59\"\n+\"checksum salsa 0.13.0 (git+https://github.com/nikomatsakis/salsa?branch=durability)\" = \"<none>\"\n+\"checksum salsa-macros 0.13.0 (git+https://github.com/nikomatsakis/salsa?branch=durability)\" = \"<none>\"\n \"checksum same-file 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"585e8ddcedc187886a30fa705c47985c3fa88d06624095856b36ca0b82ff4421\"\n \"checksum scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b42e15e59b18a828bbf5c58ea01debb36b9b096346de35d941dcb89009f24a0d\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n@@ -2318,7 +2343,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum stacker 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb79482f57cf598af52094ec4cc3b3c42499d3ce5bd426f2ac41515b7e57404b\"\n \"checksum strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n \"checksum superslice 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab16ced94dbd8a46c82fd81e3ed9a8727dac2977ea869d217bcc4ea1f122e81f\"\n-\"checksum syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eadc09306ca51a40555dd6fc2b415538e9e18bc9f870e47b1a524a79fe2dcf5e\"\n+\"checksum syn 0.15.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee06ea4b620ab59a2267c6b48be16244a3389f8bfa0986bdd15c35b890b00af3\"\n \"checksum synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"02353edf96d6e4dc81aea2d8490a7e9db177bf8acb0e951c24940bf866cb313f\"\n \"checksum tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9\"\n \"checksum tera 0.11.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4b505279e19d8f7d24b1a9dc58327c9c36174b1a2c7ebdeac70792d017cb64f3\""}, {"sha": "8aff02a0fc34e4b46add98a7ff616dfad8714f13", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -6,3 +6,4 @@ incremental = true\n debug = 1 # only line info\n \n [patch.'crates-io']\n+salsa = { git = \"https://github.com/nikomatsakis/salsa\", branch = \"durability\" }"}, {"sha": "9e76bcebf4627d2d0d8aeff0a081178bac806275", "filename": "crates/ra_cli/src/analysis_bench.rs", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -1,10 +1,14 @@\n use std::{\n     path::{Path, PathBuf},\n+    sync::Arc,\n     time::Instant,\n };\n \n-use ra_db::{salsa::Database, SourceDatabase};\n-use ra_ide_api::{Analysis, AnalysisHost, FilePosition, LineCol};\n+use ra_db::{\n+    salsa::{Database, Durability},\n+    FileId, SourceDatabase,\n+};\n+use ra_ide_api::{Analysis, AnalysisChange, AnalysisHost, FilePosition, LineCol};\n \n use crate::Result;\n \n@@ -16,7 +20,7 @@ pub(crate) enum Op {\n pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n     let start = Instant::now();\n     eprint!(\"loading: \");\n-    let (host, roots) = ra_batch::load_cargo(path)?;\n+    let (mut host, roots) = ra_batch::load_cargo(path)?;\n     let db = host.raw_database();\n     eprintln!(\"{:?}\\n\", start.elapsed());\n \n@@ -44,7 +48,7 @@ pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n \n     match op {\n         Op::Highlight { .. } => {\n-            let res = do_work(&host, |analysis| {\n+            let res = do_work(&mut host, file_id, |analysis| {\n                 analysis.diagnostics(file_id).unwrap();\n                 analysis.highlight_as_html(file_id, false).unwrap()\n             });\n@@ -59,7 +63,7 @@ pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n                 .offset(LineCol { line, col_utf16: column });\n             let file_postion = FilePosition { file_id, offset };\n \n-            let res = do_work(&host, |analysis| analysis.completions(file_postion));\n+            let res = do_work(&mut host, file_id, |analysis| analysis.completions(file_postion));\n             if verbose {\n                 println!(\"\\n{:#?}\", res);\n             }\n@@ -68,7 +72,7 @@ pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n     Ok(())\n }\n \n-fn do_work<F: Fn(&Analysis) -> T, T>(host: &AnalysisHost, work: F) -> T {\n+fn do_work<F: Fn(&Analysis) -> T, T>(host: &mut AnalysisHost, file_id: FileId, work: F) -> T {\n     {\n         let start = Instant::now();\n         eprint!(\"from scratch:   \");\n@@ -84,7 +88,27 @@ fn do_work<F: Fn(&Analysis) -> T, T>(host: &AnalysisHost, work: F) -> T {\n     {\n         let start = Instant::now();\n         eprint!(\"trivial change: \");\n-        host.raw_database().salsa_runtime().next_revision();\n+        host.raw_database().salsa_runtime().synthetic_write(Durability::LOW);\n+        work(&host.analysis());\n+        eprintln!(\"{:?}\", start.elapsed());\n+    }\n+    {\n+        let start = Instant::now();\n+        eprint!(\"comment change: \");\n+        {\n+            let mut text = host.analysis().file_text(file_id).unwrap().to_string();\n+            text.push_str(\"\\n/* Hello world */\\n\");\n+            let mut change = AnalysisChange::new();\n+            change.change_file(file_id, Arc::new(text));\n+            host.apply_change(change);\n+        }\n+        work(&host.analysis());\n+        eprintln!(\"{:?}\", start.elapsed());\n+    }\n+    {\n+        let start = Instant::now();\n+        eprint!(\"const change:   \");\n+        host.raw_database().salsa_runtime().synthetic_write(Durability::HIGH);\n         let res = work(&host.analysis());\n         eprintln!(\"{:?}\", start.elapsed());\n         res"}, {"sha": "2fac07bc5ae81830d1847e69b43a61180b108f4c", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -5,7 +5,7 @@ version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n \n [dependencies]\n-salsa = \"0.12.3\"\n+salsa = \"0.13.0\"\n relative-path = \"0.4.0\"\n rustc-hash = \"1.0\"\n "}, {"sha": "018fcd096feb94caf72f8367280dd1d414939cf5", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -1,3 +1,5 @@\n+#![recursion_limit = \"512\"]\n+\n //! HIR (previously known as descriptors) provides a high-level object oriented\n //! access to Rust code.\n //!"}, {"sha": "b634f0b79dfa02557454d477d5736f811867fd8f", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -38,7 +38,7 @@ impl TraitSolver {\n     ) -> Option<chalk_solve::Solution> {\n         let context = ChalkContext { db, krate: self.krate };\n         debug!(\"solve goal: {:?}\", goal);\n-        let solution = self.inner.lock().solve_with_fuel(&context, goal, Some(1000));\n+        let solution = self.inner.lock().solve(&context, goal);\n         debug!(\"solve({:?}) => {:?}\", goal, solution);\n         solution\n     }"}, {"sha": "0234c572d3804c08d0150cb5c345be53f02d3881", "filename": "crates/ra_ide_api/src/change.rs", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fchange.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -1,7 +1,7 @@\n use std::{fmt, sync::Arc, time};\n \n use ra_db::{\n-    salsa::{Database, SweepStrategy},\n+    salsa::{Database, Durability, SweepStrategy},\n     CrateGraph, FileId, SourceDatabase, SourceRoot, SourceRootId,\n };\n use ra_prof::{memory_usage, profile, Bytes};\n@@ -155,54 +155,71 @@ impl RootDatabase {\n         log::info!(\"apply_change {:?}\", change);\n         {\n             let _p = profile(\"RootDatabase::apply_change/cancellation\");\n-            self.salsa_runtime().next_revision();\n+            self.salsa_runtime().synthetic_write(Durability::LOW);\n         }\n         if !change.new_roots.is_empty() {\n             let mut local_roots = Vec::clone(&self.local_roots());\n             for (root_id, is_local) in change.new_roots {\n                 let root = if is_local { SourceRoot::new() } else { SourceRoot::new_library() };\n-                self.set_source_root(root_id, Arc::new(root));\n+                let durability = durability(&root);\n+                self.set_source_root_with_durability(root_id, Arc::new(root), durability);\n                 if is_local {\n                     local_roots.push(root_id);\n                 }\n             }\n-            self.set_local_roots(Arc::new(local_roots));\n+            self.set_local_roots_with_durability(Arc::new(local_roots), Durability::HIGH);\n         }\n \n         for (root_id, root_change) in change.roots_changed {\n             self.apply_root_change(root_id, root_change);\n         }\n         for (file_id, text) in change.files_changed {\n-            self.set_file_text(file_id, text)\n+            let source_root_id = self.file_source_root(file_id);\n+            let source_root = self.source_root(source_root_id);\n+            let durability = durability(&source_root);\n+            self.set_file_text_with_durability(file_id, text, durability)\n         }\n         if !change.libraries_added.is_empty() {\n             let mut libraries = Vec::clone(&self.library_roots());\n             for library in change.libraries_added {\n                 libraries.push(library.root_id);\n-                self.set_source_root(library.root_id, Default::default());\n-                self.set_constant_library_symbols(library.root_id, Arc::new(library.symbol_index));\n+                self.set_source_root_with_durability(\n+                    library.root_id,\n+                    Default::default(),\n+                    Durability::HIGH,\n+                );\n+                self.set_library_symbols_with_durability(\n+                    library.root_id,\n+                    Arc::new(library.symbol_index),\n+                    Durability::HIGH,\n+                );\n                 self.apply_root_change(library.root_id, library.root_change);\n             }\n-            self.set_library_roots(Arc::new(libraries));\n+            self.set_library_roots_with_durability(Arc::new(libraries), Durability::HIGH);\n         }\n         if let Some(crate_graph) = change.crate_graph {\n-            self.set_crate_graph(Arc::new(crate_graph))\n+            self.set_crate_graph_with_durability(Arc::new(crate_graph), Durability::HIGH)\n         }\n     }\n \n     fn apply_root_change(&mut self, root_id: SourceRootId, root_change: RootChange) {\n         let mut source_root = SourceRoot::clone(&self.source_root(root_id));\n+        let durability = durability(&source_root);\n         for add_file in root_change.added {\n-            self.set_file_text(add_file.file_id, add_file.text);\n-            self.set_file_relative_path(add_file.file_id, add_file.path.clone());\n-            self.set_file_source_root(add_file.file_id, root_id);\n+            self.set_file_text_with_durability(add_file.file_id, add_file.text, durability);\n+            self.set_file_relative_path_with_durability(\n+                add_file.file_id,\n+                add_file.path.clone(),\n+                durability,\n+            );\n+            self.set_file_source_root_with_durability(add_file.file_id, root_id, durability);\n             source_root.files.insert(add_file.path, add_file.file_id);\n         }\n         for remove_file in root_change.removed {\n-            self.set_file_text(remove_file.file_id, Default::default());\n+            self.set_file_text_with_durability(remove_file.file_id, Default::default(), durability);\n             source_root.files.remove(&remove_file.path);\n         }\n-        self.set_source_root(root_id, Arc::new(source_root));\n+        self.set_source_root_with_durability(root_id, Arc::new(source_root), durability);\n     }\n \n     pub(crate) fn maybe_collect_garbage(&mut self) {\n@@ -308,3 +325,11 @@ impl RootDatabase {\n         acc\n     }\n }\n+\n+fn durability(source_root: &SourceRoot) -> Durability {\n+    if source_root.is_library {\n+        Durability::HIGH\n+    } else {\n+        Durability::LOW\n+    }\n+}"}, {"sha": "fc8252e4b5af26a9b2268ffc73ae311a3ab644fe", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -1,7 +1,7 @@\n use std::{sync::Arc, time};\n \n use ra_db::{\n-    salsa::{self, Database},\n+    salsa::{self, Database, Durability},\n     Canceled, CheckCanceled, FileId, SourceDatabase,\n };\n \n@@ -57,9 +57,9 @@ impl RootDatabase {\n             last_gc: time::Instant::now(),\n             last_gc_check: time::Instant::now(),\n         };\n-        db.set_crate_graph(Default::default());\n-        db.set_local_roots(Default::default());\n-        db.set_library_roots(Default::default());\n+        db.set_crate_graph_with_durability(Default::default(), Durability::HIGH);\n+        db.set_local_roots_with_durability(Default::default(), Durability::HIGH);\n+        db.set_library_roots_with_durability(Default::default(), Durability::HIGH);\n         let lru_capacity = lru_capacity.unwrap_or(ra_db::DEFAULT_LRU_CAP);\n         db.query_mut(ra_db::ParseQuery).set_lru_capacity(lru_capacity);\n         db.query_mut(hir::db::ParseMacroQuery).set_lru_capacity(lru_capacity);"}, {"sha": "fa4ae4379b9f24e1dbc699a5f00909e2b22d6940", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -281,6 +281,9 @@ impl AnalysisHost {\n     pub fn raw_database(&self) -> &(impl hir::db::HirDatabase + salsa::Database) {\n         &self.db\n     }\n+    pub fn raw_database_mut(&mut self) -> &mut (impl hir::db::HirDatabase + salsa::Database) {\n+        &mut self.db\n+    }\n }\n \n /// Analysis is a snapshot of a world state at a moment in time. It is the main"}, {"sha": "ca388e4722ea3113989e5f11489476b132d4bd3a", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343463c824f4672f19be08f4786d3eeb2e7dea9f/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=343463c824f4672f19be08f4786d3eeb2e7dea9f", "patch": "@@ -1,3 +1,4 @@\n+#![recursion_limit = \"512\"]\n mod caps;\n mod cargo_target_spec;\n mod conv;"}]}