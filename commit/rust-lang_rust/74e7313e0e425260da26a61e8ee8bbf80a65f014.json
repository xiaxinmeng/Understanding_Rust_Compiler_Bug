{"sha": "74e7313e0e425260da26a61e8ee8bbf80a65f014", "node_id": "C_kwDOAAsO6NoAKDc0ZTczMTNlMGU0MjUyNjBkYTI2YTYxZThlZThiYmY4MGE2NWYwMTQ", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-21T22:45:55Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-21T22:45:55Z"}, "message": "Fix generated tokens hygiene", "tree": {"sha": "c0cbf8b961c9a420f8264ccf6c91ae958aa73bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0cbf8b961c9a420f8264ccf6c91ae958aa73bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74e7313e0e425260da26a61e8ee8bbf80a65f014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74e7313e0e425260da26a61e8ee8bbf80a65f014", "html_url": "https://github.com/rust-lang/rust/commit/74e7313e0e425260da26a61e8ee8bbf80a65f014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74e7313e0e425260da26a61e8ee8bbf80a65f014/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44628f7273052d0bb8e8218518dacab210e1fe0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/44628f7273052d0bb8e8218518dacab210e1fe0d", "html_url": "https://github.com/rust-lang/rust/commit/44628f7273052d0bb8e8218518dacab210e1fe0d"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "e8a1e61376fe5e60ee0cb99094559b46a1d27028", "filename": "compiler/rustc_expand/src/mbe/transcribe.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/74e7313e0e425260da26a61e8ee8bbf80a65f014/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e7313e0e425260da26a61e8ee8bbf80a65f014/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs?ref=74e7313e0e425260da26a61e8ee8bbf80a65f014", "patch": "@@ -257,7 +257,7 @@ pub(super) fn transcribe<'a>(\n \n             // Replace meta-variable expressions with the result of their expansion.\n             mbe::TokenTree::MetaVarExpr(sp, expr) => {\n-                transcribe_metavar_expr(cx, expr, interp, &repeats, &mut result, &sp)?;\n+                transcribe_metavar_expr(cx, expr, interp, &mut marker, &repeats, &mut result, &sp)?;\n             }\n \n             // If we are entering a new delimiter, we push its contents to the `stack` to be\n@@ -513,17 +513,23 @@ fn transcribe_metavar_expr<'a>(\n     cx: &ExtCtxt<'a>,\n     expr: MetaVarExpr,\n     interp: &FxHashMap<MacroRulesNormalizedIdent, NamedMatch>,\n+    marker: &mut Marker,\n     repeats: &[(usize, usize)],\n     result: &mut Vec<TreeAndSpacing>,\n     sp: &DelimSpan,\n ) -> PResult<'a, ()> {\n+    let mut visited_span = || {\n+        let mut span = sp.entire();\n+        marker.visit_span(&mut span);\n+        span\n+    };\n     match expr {\n         MetaVarExpr::Count(original_ident, depth_opt) => {\n             let matched = matched_from_ident(cx, original_ident, interp)?;\n             let count = count_repetitions(cx, depth_opt, matched, &repeats, sp)?;\n             let tt = TokenTree::token(\n                 TokenKind::lit(token::Integer, sym::integer(count), None),\n-                sp.entire(),\n+                visited_span(),\n             );\n             result.push(tt.into());\n         }\n@@ -536,7 +542,7 @@ fn transcribe_metavar_expr<'a>(\n                 result.push(\n                     TokenTree::token(\n                         TokenKind::lit(token::Integer, sym::integer(*index), None),\n-                        sp.entire(),\n+                        visited_span(),\n                     )\n                     .into(),\n                 );\n@@ -548,7 +554,7 @@ fn transcribe_metavar_expr<'a>(\n                 result.push(\n                     TokenTree::token(\n                         TokenKind::lit(token::Integer, sym::integer(*length), None),\n-                        sp.entire(),\n+                        visited_span(),\n                     )\n                     .into(),\n                 );"}]}