{"sha": "d22ad76ca83acda1428829173451eee0221f685a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMmFkNzZjYTgzYWNkYTE0Mjg4MjkxNzM0NTFlZWUwMjIxZjY4NWE=", "commit": {"author": {"name": "Pazzaz", "email": "pazzaz.sundqvist@gmail.com", "date": "2018-06-16T18:19:19Z"}, "committer": {"name": "Pazzaz", "email": "pazzaz.sundqvist@gmail.com", "date": "2018-06-16T18:56:17Z"}, "message": "Optimize sum of Durations by using custom function", "tree": {"sha": "5180e42bd753dbcbe9583e7f7b95ced01b51cd91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5180e42bd753dbcbe9583e7f7b95ced01b51cd91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d22ad76ca83acda1428829173451eee0221f685a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d22ad76ca83acda1428829173451eee0221f685a", "html_url": "https://github.com/rust-lang/rust/commit/d22ad76ca83acda1428829173451eee0221f685a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d22ad76ca83acda1428829173451eee0221f685a/comments", "author": {"login": "Pazzaz", "id": 16006944, "node_id": "MDQ6VXNlcjE2MDA2OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/16006944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pazzaz", "html_url": "https://github.com/Pazzaz", "followers_url": "https://api.github.com/users/Pazzaz/followers", "following_url": "https://api.github.com/users/Pazzaz/following{/other_user}", "gists_url": "https://api.github.com/users/Pazzaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pazzaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pazzaz/subscriptions", "organizations_url": "https://api.github.com/users/Pazzaz/orgs", "repos_url": "https://api.github.com/users/Pazzaz/repos", "events_url": "https://api.github.com/users/Pazzaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Pazzaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Pazzaz", "id": 16006944, "node_id": "MDQ6VXNlcjE2MDA2OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/16006944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pazzaz", "html_url": "https://github.com/Pazzaz", "followers_url": "https://api.github.com/users/Pazzaz/followers", "following_url": "https://api.github.com/users/Pazzaz/following{/other_user}", "gists_url": "https://api.github.com/users/Pazzaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pazzaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pazzaz/subscriptions", "organizations_url": "https://api.github.com/users/Pazzaz/orgs", "repos_url": "https://api.github.com/users/Pazzaz/repos", "events_url": "https://api.github.com/users/Pazzaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Pazzaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "253205658edc477a0b429f3ce25a92099dc7ddc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/253205658edc477a0b429f3ce25a92099dc7ddc4", "html_url": "https://github.com/rust-lang/rust/commit/253205658edc477a0b429f3ce25a92099dc7ddc4"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "466f28f0ef0aab4182b4b433cb03315724094266", "filename": "src/libcore/tests/time.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d22ad76ca83acda1428829173451eee0221f685a/src%2Flibcore%2Ftests%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ad76ca83acda1428829173451eee0221f685a/src%2Flibcore%2Ftests%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Ftime.rs?ref=d22ad76ca83acda1428829173451eee0221f685a", "patch": "@@ -161,6 +161,20 @@ fn checked_div() {\n     assert_eq!(Duration::new(2, 0).checked_div(0), None);\n }\n \n+#[test]\n+fn correct_sum() {\n+    let durations = [\n+        Duration::new(1, 999_999_999),\n+        Duration::new(2, 999_999_999),\n+        Duration::new(0, 999_999_999),\n+        Duration::new(0, 999_999_999),\n+        Duration::new(0, 999_999_999),\n+        Duration::new(5, 0),\n+    ];\n+    let sum = durations.iter().sum::<Duration>();\n+    assert_eq!(sum, Duration::new(1+2+5+4, 1_000_000_000 - 5));\n+}\n+\n #[test]\n fn debug_formatting_extreme_values() {\n     assert_eq!("}, {"sha": "25721b7fcecbb8f93a317df1f99ddf4dcb4548ba", "filename": "src/libcore/time.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d22ad76ca83acda1428829173451eee0221f685a/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ad76ca83acda1428829173451eee0221f685a/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=d22ad76ca83acda1428829173451eee0221f685a", "patch": "@@ -524,17 +524,47 @@ impl DivAssign<u32> for Duration {\n     }\n }\n \n+macro_rules! sum_durations {\n+    ($iter:expr) => {{\n+        let mut total_secs: u64 = 0;\n+        let mut total_nanos: u64 = 0;\n+\n+        for entry in $iter {\n+            total_secs = total_secs\n+                .checked_add(entry.secs)\n+                .expect(\"overflow in iter::sum over durations\");\n+            total_nanos = match total_nanos.checked_add(entry.nanos as u64) {\n+                Some(n) => n,\n+                None => {\n+                    total_secs = total_secs\n+                        .checked_add(total_nanos / NANOS_PER_SEC as u64)\n+                        .expect(\"overflow in iter::sum over durations\");\n+                    (total_nanos % NANOS_PER_SEC as u64) + entry.nanos as u64\n+                }\n+            };\n+        }\n+        total_secs = total_secs\n+            .checked_add(total_nanos / NANOS_PER_SEC as u64)\n+            .expect(\"overflow in iter::sum over durations\");\n+        total_nanos = total_nanos % NANOS_PER_SEC as u64;\n+        Duration {\n+            secs: total_secs,\n+            nanos: total_nanos as u32,\n+        }\n+    }};\n+}\n+\n #[stable(feature = \"duration_sum\", since = \"1.16.0\")]\n impl Sum for Duration {\n     fn sum<I: Iterator<Item=Duration>>(iter: I) -> Duration {\n-        iter.fold(Duration::new(0, 0), |a, b| a + b)\n+        sum_durations!(iter)\n     }\n }\n \n #[stable(feature = \"duration_sum\", since = \"1.16.0\")]\n impl<'a> Sum<&'a Duration> for Duration {\n     fn sum<I: Iterator<Item=&'a Duration>>(iter: I) -> Duration {\n-        iter.fold(Duration::new(0, 0), |a, b| a + *b)\n+        sum_durations!(iter)\n     }\n }\n "}]}