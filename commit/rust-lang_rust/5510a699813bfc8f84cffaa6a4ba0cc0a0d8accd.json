{"sha": "5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "node_id": "C_kwDOAAsO6NoAKDU1MTBhNjk5ODEzYmZjOGY4NGNmZmFhNmE0YmEwY2MwYTBkOGFjY2Q", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-09-08T01:59:09Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-09-08T01:59:09Z"}, "message": "Stabilize `#![feature(mixed_integer_ops)]`", "tree": {"sha": "4520b7478a798d1e6bb8026bd31b431e384e025d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4520b7478a798d1e6bb8026bd31b431e384e025d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYxlMgQAKCRC4DhnkZita\npKvFAQCJCR/XmQbBik8KKPAtp2FtvDpoT+C6BbTQh7WA4Q8daQD+KT6kRQFs7ELF\na3v40Rf4JTqWQZnd1MZcI/FOsWXZSAM=\n=kVQM\n-----END PGP SIGNATURE-----", "payload": "tree 4520b7478a798d1e6bb8026bd31b431e384e025d\nparent c2804e6ec2c29a5c7368600ea173b890e2655c3d\nauthor Jacob Pratt <jacob@jhpratt.dev> 1662602349 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1662602349 -0400\n\nStabilize `#![feature(mixed_integer_ops)]`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "html_url": "https://github.com/rust-lang/rust/commit/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2804e6ec2c29a5c7368600ea173b890e2655c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2804e6ec2c29a5c7368600ea173b890e2655c3d", "html_url": "https://github.com/rust-lang/rust/commit/c2804e6ec2c29a5c7368600ea173b890e2655c3d"}], "stats": {"total": 62, "additions": 24, "deletions": 38}, "files": [{"sha": "bfe56b733b3f7a5a095b256d469b1de70bb3b821", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "patch": "@@ -190,7 +190,6 @@\n #![feature(link_llvm_intrinsics)]\n #![feature(macro_metavar_expr)]\n #![feature(min_specialization)]\n-#![feature(mixed_integer_ops)]\n #![feature(must_not_suspend)]\n #![feature(negative_impls)]\n #![feature(never_type)]"}, {"sha": "7d0f6266bbb0400baa6276460686b68ce0048c4e", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "patch": "@@ -464,12 +464,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_unsigned(2), Some(3));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).checked_add_unsigned(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -533,12 +532,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_sub_unsigned(2), Some(-1));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN + 2).checked_sub_unsigned(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -907,12 +905,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_unsigned(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MAX.saturating_add_unsigned(100), \", stringify!($SelfT), \"::MAX);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -954,12 +951,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(100\", stringify!($SelfT), \".saturating_sub_unsigned(127), -27);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MIN.saturating_sub_unsigned(100), \", stringify!($SelfT), \"::MIN);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1135,12 +1131,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(100\", stringify!($SelfT), \".wrapping_add_unsigned(27), 127);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MAX.wrapping_add_unsigned(2), \", stringify!($SelfT), \"::MIN + 1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n@@ -1176,12 +1171,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(0\", stringify!($SelfT), \".wrapping_sub_unsigned(127), -127);\")]\n         #[doc = concat!(\"assert_eq!((-2\", stringify!($SelfT), \").wrapping_sub_unsigned(\", stringify!($UnsignedT), \"::MAX), -1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n@@ -1529,13 +1523,12 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_unsigned(2), (3, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN).overflowing_add_unsigned(\", stringify!($UnsignedT), \"::MAX), (\", stringify!($SelfT), \"::MAX, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).overflowing_add_unsigned(3), (\", stringify!($SelfT), \"::MIN, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1580,13 +1573,12 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_sub_unsigned(2), (-1, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX).overflowing_sub_unsigned(\", stringify!($UnsignedT), \"::MAX), (\", stringify!($SelfT), \"::MIN, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN + 2).overflowing_sub_unsigned(3), (\", stringify!($SelfT), \"::MAX, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "1b60ec67e31936353ab2c9a9d0d7f3cda819ddf7", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "patch": "@@ -474,13 +474,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_signed(2), Some(3));\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_signed(-2), None);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).checked_add_signed(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1057,13 +1056,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_signed(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_signed(-2), 0);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).saturating_add_signed(4), \", stringify!($SelfT), \"::MAX);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1198,13 +1196,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".wrapping_add_signed(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".wrapping_add_signed(-2), \", stringify!($SelfT), \"::MAX);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).wrapping_add_signed(4), 1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1564,13 +1561,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_signed(2), (3, false));\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_signed(-2), (\", stringify!($SelfT), \"::MAX, true));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).overflowing_add_signed(4), (1, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "8d89ed51419a725ef31fa76478de59d06e3a9e63", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "patch": "@@ -296,7 +296,6 @@\n #![feature(is_some_with)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n-#![feature(mixed_integer_ops)]\n #![feature(nonnull_slice_from_raw_parts)]\n #![feature(panic_can_unwind)]\n #![feature(panic_info_message)]"}]}