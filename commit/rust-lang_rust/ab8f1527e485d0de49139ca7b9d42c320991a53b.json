{"sha": "ab8f1527e485d0de49139ca7b9d42c320991a53b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOGYxNTI3ZTQ4NWQwZGU0OTEzOWNhN2I5ZDQyYzMyMDk5MWE1M2I=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-02T17:09:26Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-29T16:17:12Z"}, "message": "Remove internal mutability from source_locations_enabled", "tree": {"sha": "563ca8e6f54fd7e422f113c3ea732ce94a45c655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/563ca8e6f54fd7e422f113c3ea732ce94a45c655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8f1527e485d0de49139ca7b9d42c320991a53b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8f1527e485d0de49139ca7b9d42c320991a53b", "html_url": "https://github.com/rust-lang/rust/commit/ab8f1527e485d0de49139ca7b9d42c320991a53b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8f1527e485d0de49139ca7b9d42c320991a53b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1fe9253e2b9ed072af6bc2d80feb6be0ffee8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1fe9253e2b9ed072af6bc2d80feb6be0ffee8a5", "html_url": "https://github.com/rust-lang/rust/commit/f1fe9253e2b9ed072af6bc2d80feb6be0ffee8a5"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "c262167d92092bcdfe5816ef7f42cc0337e53120", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=ab8f1527e485d0de49139ca7b9d42c320991a53b", "patch": "@@ -32,7 +32,7 @@ use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, MirDebugScope, Variable\n     VariableKind, FunctionDebugContextData};\n \n use libc::c_uint;\n-use std::cell::{Cell, RefCell};\n+use std::cell::RefCell;\n use std::ffi::CString;\n \n use syntax_pos::{self, Span, Pos};\n@@ -158,7 +158,7 @@ impl DebugInfoBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n         variable_kind: VariableKind,\n         span: Span,\n     ) {\n-        assert!(!dbg_context.get_ref(span).source_locations_enabled.get());\n+        assert!(!dbg_context.get_ref(span).source_locations_enabled);\n         let cx = self.cx();\n \n         let file = span_start(cx, span).file;\n@@ -327,7 +327,7 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         // Initialize fn debug context (including scope map and namespace map)\n         let fn_debug_context = FunctionDebugContextData {\n             fn_metadata,\n-            source_locations_enabled: Cell::new(false),\n+            source_locations_enabled: false,\n             defining_crate: def_id.krate,\n         };\n "}, {"sha": "dec93a65dbaf49aa42526d0e4e2630d024178ff0", "filename": "src/librustc_codegen_llvm/debuginfo/source_loc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs?ref=ab8f1527e485d0de49139ca7b9d42c320991a53b", "patch": "@@ -30,7 +30,7 @@ pub fn set_source_location<D>(\n         FunctionDebugContext::RegularContext(ref data) => data\n     };\n \n-    let dbg_loc = if function_debug_context.source_locations_enabled.get() {\n+    let dbg_loc = if function_debug_context.source_locations_enabled {\n         debug!(\"set_source_location: {}\", bx.sess().source_map().span_to_string(span));\n         let loc = span_start(bx.cx(), span);\n         InternalDebugLocation::new(scope.unwrap(), loc.line, loc.col.to_usize())"}, {"sha": "aa7cdbed99446904d21b52719c5b0555285ac5e3", "filename": "src/librustc_codegen_ssa/debuginfo.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs?ref=ab8f1527e485d0de49139ca7b9d42c320991a53b", "patch": "@@ -1,6 +1,5 @@\n use syntax_pos::{BytePos, Span};\n use rustc::hir::def_id::CrateNum;\n-use std::cell::Cell;\n \n pub enum FunctionDebugContext<D> {\n     RegularContext(FunctionDebugContextData<D>),\n@@ -36,18 +35,18 @@ impl<D> FunctionDebugContext<D> {\n /// they are disabled when beginning to codegen a new function. This functions\n /// switches source location emitting on and must therefore be called before the\n /// first real statement/expression of the function is codegened.\n-pub fn start_emitting_source_locations<D>(dbg_context: &FunctionDebugContext<D>) {\n+pub fn start_emitting_source_locations<D>(dbg_context: &mut FunctionDebugContext<D>) {\n     match *dbg_context {\n-        FunctionDebugContext::RegularContext(ref data) => {\n-            data.source_locations_enabled.set(true)\n+        FunctionDebugContext::RegularContext(ref mut data) => {\n+            data.source_locations_enabled = true;\n         },\n         _ => { /* safe to ignore */ }\n     }\n }\n \n pub struct FunctionDebugContextData<D> {\n     pub fn_metadata: D,\n-    pub source_locations_enabled: Cell<bool>,\n+    pub source_locations_enabled: bool,\n     pub defining_crate: CrateNum,\n }\n "}, {"sha": "15597542d49920d46f298fed67554e6d5f763a00", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8f1527e485d0de49139ca7b9d42c320991a53b/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=ab8f1527e485d0de49139ca7b9d42c320991a53b", "patch": "@@ -334,7 +334,7 @@ pub fn codegen_mir<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n     // Up until here, IR instructions for this function have explicitly not been annotated with\n     // source code location, so we don't step into call setup code. From here on, source location\n     // emitting should be enabled.\n-    debuginfo::start_emitting_source_locations(&fx.debug_context);\n+    debuginfo::start_emitting_source_locations(&mut fx.debug_context);\n \n     let rpo = traversal::reverse_postorder(&mir);\n     let mut visited = BitSet::new_empty(mir.basic_blocks().len());"}]}