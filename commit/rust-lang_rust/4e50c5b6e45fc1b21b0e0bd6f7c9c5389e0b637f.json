{"sha": "4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNTBjNWI2ZTQ1ZmMxYjIxYjBlMGJkNmY3YzljNTM4OWUwYjYzN2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-11T10:15:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-19T14:35:07Z"}, "message": "add tests for assigning fields without initializing var\n\nWe did not seem to have any!", "tree": {"sha": "498707a0a34f8724934ff630f8237e5e69658f7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498707a0a34f8724934ff630f8237e5e69658f7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "html_url": "https://github.com/rust-lang/rust/commit/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78e987ab8f71c733ab1081018492f87ba47e9da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/78e987ab8f71c733ab1081018492f87ba47e9da5", "html_url": "https://github.com/rust-lang/rust/commit/78e987ab8f71c733ab1081018492f87ba47e9da5"}], "stats": {"total": 234, "additions": 234, "deletions": 0}, "files": [{"sha": "8025b998d5d1dea715744d5fb174b70a53c00ac5", "filename": "src/test/ui/nll/assign_mutable_fields.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.rs?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Currently, we permit you to assign to individual fields of a mut\n+// var, but we do not permit you to use the complete var afterwards.\n+// We hope to fix this at some point.\n+//\n+// FIXME(#21232)\n+\n+#![feature(nll)]\n+\n+fn assign_both_fields_and_use() {\n+    let mut x: (u32, u32);\n+    x.0 = 1;\n+    x.1 = 22;\n+    drop(x.0);\n+    drop(x.1);\n+}\n+\n+fn assign_both_fields_the_use_var() {\n+    let mut x: (u32, u32);\n+    x.0 = 1;\n+    x.1 = 22;\n+    drop(x); //~ ERROR\n+}\n+\n+fn main() { }"}, {"sha": "278dcce4acdee5b318eaf5863f637cfcbea4f384", "filename": "src/test/ui/nll/assign_mutable_fields.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fassign_mutable_fields.stderr?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,9 @@\n+error[E0381]: use of possibly uninitialized variable: `x`\n+  --> $DIR/assign_mutable_fields.rs:31:10\n+   |\n+LL |     drop(x); //~ ERROR\n+   |          ^ use of possibly uninitialized `x`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0381`."}, {"sha": "3660017e75dc05606b13257dfa918fadb2626d26", "filename": "src/test/ui/nll/reassignment_immutable_fields.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.rs?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test is currently disallowed, but we hope someday to support it.\n+//\n+// FIXME(#21232)\n+\n+#![feature(nll)]\n+\n+fn assign_both_fields_and_use() {\n+    let x: (u32, u32);\n+    x.0 = 1; //~ ERROR\n+    x.1 = 22; //~ ERROR\n+    drop(x.0);\n+    drop(x.1);\n+}\n+\n+fn assign_both_fields_the_use_var() {\n+    let x: (u32, u32);\n+    x.0 = 1; //~ ERROR\n+    x.1 = 22; //~ ERROR\n+    drop(x); //~ ERROR\n+}\n+\n+fn main() { }"}, {"sha": "853e82d0e9923f001fedc4ad7348707ebade1c8e", "filename": "src/test/ui/nll/reassignment_immutable_fields.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields.stderr?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,44 @@\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields.rs:19:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields.rs:20:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.1 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields.rs:27:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields.rs:28:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.1 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot assign\n+\n+error[E0381]: use of possibly uninitialized variable: `x`\n+  --> $DIR/reassignment_immutable_fields.rs:29:10\n+   |\n+LL |     drop(x); //~ ERROR\n+   |          ^ use of possibly uninitialized `x`\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors occurred: E0381, E0594.\n+For more information about an error, try `rustc --explain E0381`."}, {"sha": "17a82bf0c9bea0be09cdd795846651bc93d493ce", "filename": "src/test/ui/nll/reassignment_immutable_fields_overlapping.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.rs?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This should never be allowed -- `foo.a` and `foo.b` are\n+// overlapping, so since `x` is not `mut` we should not permit\n+// reassignment.\n+\n+#![feature(nll)]\n+\n+union Foo {\n+    a: u32,\n+    b: u32,\n+}\n+\n+unsafe fn overlapping_fields() {\n+    let x: Foo;\n+    x.a = 1;  //~ ERROR\n+    x.b = 22; //~ ERROR\n+}\n+\n+fn main() { }"}, {"sha": "1981b1497002b36773f6abddf6d5e61fac885529", "filename": "src/test/ui/nll/reassignment_immutable_fields_overlapping.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_overlapping.stderr?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,20 @@\n+error[E0594]: cannot assign to `x.a`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:24:5\n+   |\n+LL |     let x: Foo;\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.a = 1;  //~ ERROR\n+   |     ^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.b`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:25:5\n+   |\n+LL |     let x: Foo;\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.a = 1;  //~ ERROR\n+LL |     x.b = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot assign\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "e413ad4f9473bfd2d585d19d2bb054a610fe036f", "filename": "src/test/ui/nll/reassignment_immutable_fields_twice.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.rs?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This should never be allowed -- since `x` is not `mut`, so `x.0`\n+// cannot be assigned twice.\n+\n+#![feature(nll)]\n+\n+fn var_then_field() {\n+    let x: (u32, u32);\n+    x = (22, 44);\n+    x.0 = 1; //~ ERROR\n+}\n+\n+fn same_field_twice() {\n+    let x: (u32, u32);\n+    x.0 = 1; //~ ERROR\n+    x.0 = 22; //~ ERROR\n+    x.1 = 44; //~ ERROR\n+}\n+\n+fn main() { }"}, {"sha": "cf0461f275c9174e9978eca137339126aca0581c", "filename": "src/test/ui/nll/reassignment_immutable_fields_twice.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freassignment_immutable_fields_twice.stderr?ref=4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "patch": "@@ -0,0 +1,38 @@\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_twice.rs:19:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x = (22, 44);\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_twice.rs:24:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_twice.rs:25:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.0 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot assign\n+\n+error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n+  --> $DIR/reassignment_immutable_fields_twice.rs:26:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - help: consider changing this to be mutable: `mut x`\n+...\n+LL |     x.1 = 44; //~ ERROR\n+   |     ^^^^^^^^ cannot assign\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0594`."}]}