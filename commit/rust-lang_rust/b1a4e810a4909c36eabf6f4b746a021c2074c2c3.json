{"sha": "b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYTRlODEwYTQ5MDljMzZlYWJmNmY0Yjc0NmEwMjFjMjA3NGMyYzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-26T23:31:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T23:31:42Z"}, "message": "Merge #5087\n\n5087: Try to find rustfmt in more places r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "88ddac56c779586cf9c678588fdd69970585f372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ddac56c779586cf9c678588fdd69970585f372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9oVeCRBK7hj4Ov3rIwAAdHIIADIsgzyUEhfMJCd5dmx2PTf7\n6RxOt1p+8lxLX6epMQXV4jfmQiJdszVjjHUOFrv4HrdiCTVLohRE4ogIAqaR08vi\nk112kfhZHPJJnBJmJeOcszRrjuaeMm+SHlxPwzythT5sBs5WcKkuM8syT22bcmht\nI1S/m4xkaM4f3SnB7lGzcZ29fQg1eHfYsFRv0nhq2lxNblvAsLEh446ZjJbK8VmV\nPCrWiQTJGVu2+DxlN3bXIP8Zq1OlFMBkIE7a3vOLMbk/J50cjnd0aUiN5b4SNXh9\naFJaoSaY2xBuD+GLa/eup1d1xfOZEhmIczn8Ae/5GGUKznyL+C3Y52WZ48ZqC64=\n=Jct9\n-----END PGP SIGNATURE-----\n", "payload": "tree 88ddac56c779586cf9c678588fdd69970585f372\nparent 2dcab133e116ef691d45a32ab5eef8ae9cfa9477\nparent 9617bb4f07f724b25abd4040a960f5ccff97b569\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593214302 +0000\ncommitter GitHub <noreply@github.com> 1593214302 +0000\n\nMerge #5087\n\n5087: Try to find rustfmt in more places r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "html_url": "https://github.com/rust-lang/rust/commit/b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dcab133e116ef691d45a32ab5eef8ae9cfa9477", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcab133e116ef691d45a32ab5eef8ae9cfa9477", "html_url": "https://github.com/rust-lang/rust/commit/2dcab133e116ef691d45a32ab5eef8ae9cfa9477"}, {"sha": "9617bb4f07f724b25abd4040a960f5ccff97b569", "url": "https://api.github.com/repos/rust-lang/rust/commits/9617bb4f07f724b25abd4040a960f5ccff97b569", "html_url": "https://github.com/rust-lang/rust/commit/9617bb4f07f724b25abd4040a960f5ccff97b569"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "044314a8f83bcf04a201a6d26db7cabda1e3110f", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "patch": "@@ -1395,6 +1395,7 @@ dependencies = [\n  \"ra_project_model\",\n  \"ra_syntax\",\n  \"ra_text_edit\",\n+ \"ra_toolchain\",\n  \"ra_tt\",\n  \"rand\",\n  \"rustc-hash\","}, {"sha": "9532fb255543fc17cad54d411a2f783ecaaebc0d", "filename": "crates/ra_toolchain/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Fra_toolchain%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Fra_toolchain%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_toolchain%2Fsrc%2Flib.rs?ref=b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "patch": "@@ -15,6 +15,10 @@ pub fn rustup() -> PathBuf {\n     get_path_for_executable(\"rustup\")\n }\n \n+pub fn rustfmt() -> PathBuf {\n+    get_path_for_executable(\"rustfmt\")\n+}\n+\n /// Return a `PathBuf` to use for the given executable.\n ///\n /// E.g., `get_path_for_executable(\"cargo\")` may return just `cargo` if that"}, {"sha": "122a1605fa4b3460cf5f4a7bb4f72aa42c41e4dc", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "patch": "@@ -41,6 +41,7 @@ ra_text_edit = { path = \"../ra_text_edit\" }\n vfs = { path = \"../vfs\" }\n vfs-notify = { path = \"../vfs-notify\" }\n ra_cfg = { path = \"../ra_cfg\"}\n+ra_toolchain = { path = \"../ra_toolchain\" }\n \n # This should only be used in CLI\n ra_db = { path = \"../ra_db\" }"}, {"sha": "38e3c3324f13d37e5bcc25b094179f64fd3f6b9a", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1a4e810a4909c36eabf6f4b746a021c2074c2c3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "patch": "@@ -650,7 +650,7 @@ pub(crate) fn handle_formatting(\n \n     let mut rustfmt = match &snap.config.rustfmt {\n         RustfmtConfig::Rustfmt { extra_args } => {\n-            let mut cmd = process::Command::new(\"rustfmt\");\n+            let mut cmd = process::Command::new(ra_toolchain::rustfmt());\n             cmd.args(extra_args);\n             if let Some(&crate_id) = crate_ids.first() {\n                 // Assume all crates are in the same edition"}]}