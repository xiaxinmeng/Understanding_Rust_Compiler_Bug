{"sha": "b9635df6fef51f9611ecc9fbb6c3edb71a968286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NjM1ZGY2ZmVmNTFmOTYxMWVjYzlmYmI2YzNlZGI3MWE5NjgyODY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-14T00:12:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-14T00:15:31Z"}, "message": "Slight enhancements to round-trip code (run kdiff3 on mismatch, remove hard-wired input dir)", "tree": {"sha": "ad3910cf49ec1a289b0c09e13319c39f196b3dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad3910cf49ec1a289b0c09e13319c39f196b3dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9635df6fef51f9611ecc9fbb6c3edb71a968286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9635df6fef51f9611ecc9fbb6c3edb71a968286", "html_url": "https://github.com/rust-lang/rust/commit/b9635df6fef51f9611ecc9fbb6c3edb71a968286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9635df6fef51f9611ecc9fbb6c3edb71a968286/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7885bdc5750b10cab267052284df1f8bfc284fa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7885bdc5750b10cab267052284df1f8bfc284fa8", "html_url": "https://github.com/rust-lang/rust/commit/7885bdc5750b10cab267052284df1f8bfc284fa8"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "60e299172d2c0b213753d97d0cf7ddf3b9872c94", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b9635df6fef51f9611ecc9fbb6c3edb71a968286/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9635df6fef51f9611ecc9fbb6c3edb71a968286/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=b9635df6fef51f9611ecc9fbb6c3edb71a968286", "patch": "@@ -49,6 +49,10 @@ fn read_whole_file(&str filename) -> str {\n     str::unsafe_from_bytes(io::file_reader(filename).read_whole_stream())\n }\n \n+fn write_file(&str filename, &str content) {\n+    io::file_writer(filename, [io::create]).write_str(content);\n+}\n+\n fn file_contains(&str filename, &str needle) -> bool {\n     auto contents = read_whole_file(filename);\n     ret str::find(contents, needle) != -1;\n@@ -160,8 +164,8 @@ fn pp_variants(&ast::crate crate, &codemap::codemap cmap, &str filename) {\n     }\n }\n \n-fn check_roundtrip(@ast::crate crate2, &codemap::codemap cmap, &str fakefilename) {\n-    auto str3 = as_str(bind pprust::print_crate(cmap, crate2, \"empty.rs\", _, pprust::no_ann()));\n+fn check_roundtrip(@ast::crate crate2, &codemap::codemap cmap, &str filename) {\n+    auto str3 = as_str(bind pprust::print_crate(cmap, crate2, filename, _, pprust::no_ann()));\n     auto cm4 = codemap::new_codemap();\n     if (true\n       && !contains(str3, \"][]\") // https://github.com/graydon/rust/issues/669\n@@ -171,25 +175,29 @@ fn check_roundtrip(@ast::crate crate2, &codemap::codemap cmap, &str fakefilename\n       && !contains(str3, \"spawn\") // more precedence issues\n       && !contains(str3, \"bind\") // more precedence issues?\n        ) {\n-        auto crate4 = parser::parse_crate_from_source_str(fakefilename, str3, ~[], cm4);\n+        auto crate4 = parser::parse_crate_from_source_str(filename, str3, ~[], cm4);\n         // should compare crates at this point, but it's easier to compare strings\n-        auto str5 = as_str(bind pprust::print_crate(cmap, crate4, \"empty.rs\", _, pprust::no_ann()));\n+        auto str5 = as_str(bind pprust::print_crate(cmap, crate4, filename, _, pprust::no_ann()));\n         if (!str::is_ascii(str3)) {\n-          log_err \"Non-ASCII in \" + fakefilename; // why does non-ASCII work correctly with \"rustc --pretty normal\" but not here???\n+          log_err \"Non-ASCII in \" + filename; // why does non-ASCII work correctly with \"rustc --pretty normal\" but not here???\n         } else if (str3 != str5) {\n-          log_err \"Mismatch: \" + fakefilename;\n-          log_err \"str3:\\n\" + str3;\n-          log_err \"str5:\\n\" + str5;\n-          fail \"Mismatch\";\n+            write_file(\"round-trip-a.rs\", str3);\n+            write_file(\"round-trip-b.rs\", str5);\n+            std::run::run_program(\"kdiff3\", [\"round-trip-a.rs\", \"round-trip-b.rs\"]);\n+            fail \"Mismatch\";\n         }\n    }\n }\n \n fn main(vec[str] args) {\n+    if (vec::len(args) != 2u) {\n+        log_err #fmt(\"usage: %s <testdir>\", args.(0));\n+        ret;\n+    }\n     auto files = ~[];\n-    auto root = \"/Users/jruderman/code/rust/src/\"; // XXX\n+    auto root = args.(1);\n     find_rust_files(files, root); // not using time here because that currently screws with passing-a-mutable-array\n-    log_err uint::str(ivec::len(files)) + \" files\";\n+    log_err #fmt(\"%u files\", ivec::len(files));\n \n     for (str file in files) {\n         log_err \"=== \" + file + \" ===\";\n@@ -200,7 +208,7 @@ fn main(vec[str] args) {\n          && !str::ends_with(file, \"block-expr-precedence.rs\") // https://github.com/graydon/rust/issues/674\n          && !str::ends_with(file, \"syntax-extension-fmt.rs\") // an issue where -2147483648 gains an extra negative sign each time through, which i can't reproduce using \"rustc --pretty normal\"???\n ) {\n-            check_roundtrip(crate, cm, file + \".pp.rs\");\n+            check_roundtrip(crate, cm, file);\n         }\n         //pprust::print_crate(cm, crate, file, devnull(), pprust::no_ann());\n         // Currently hits https://github.com/graydon/rust/issues/675"}]}