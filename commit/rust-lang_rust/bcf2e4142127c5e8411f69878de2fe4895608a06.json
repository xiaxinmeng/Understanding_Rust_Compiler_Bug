{"sha": "bcf2e4142127c5e8411f69878de2fe4895608a06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZjJlNDE0MjEyN2M1ZTg0MTFmNjk4NzhkZTJmZTQ4OTU2MDhhMDY=", "commit": {"author": {"name": "Guillem Nieto", "email": "gnieto.talo@gmail.com", "date": "2018-02-05T23:31:06Z"}, "committer": {"name": "Guillem Nieto", "email": "gnieto.talo@gmail.com", "date": "2018-02-06T00:06:32Z"}, "message": "Fix ICE comparing `ExprRange`\n\n`eq_expr` on hir::utils was throwing an ICE due to an invalid\nLateContext being used. Due to this missusage, it was generating an ICE\nwith the code on the following issue:\nhttps://github.com/rust-lang-nursery/rust-clippy/issues/2423", "tree": {"sha": "d06cc30198ed4339e4a050dd99ec6a68fca7cffb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d06cc30198ed4339e4a050dd99ec6a68fca7cffb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcf2e4142127c5e8411f69878de2fe4895608a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf2e4142127c5e8411f69878de2fe4895608a06", "html_url": "https://github.com/rust-lang/rust/commit/bcf2e4142127c5e8411f69878de2fe4895608a06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcf2e4142127c5e8411f69878de2fe4895608a06/comments", "author": {"login": "gnieto", "id": 4637936, "node_id": "MDQ6VXNlcjQ2Mzc5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4637936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnieto", "html_url": "https://github.com/gnieto", "followers_url": "https://api.github.com/users/gnieto/followers", "following_url": "https://api.github.com/users/gnieto/following{/other_user}", "gists_url": "https://api.github.com/users/gnieto/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnieto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnieto/subscriptions", "organizations_url": "https://api.github.com/users/gnieto/orgs", "repos_url": "https://api.github.com/users/gnieto/repos", "events_url": "https://api.github.com/users/gnieto/events{/privacy}", "received_events_url": "https://api.github.com/users/gnieto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnieto", "id": 4637936, "node_id": "MDQ6VXNlcjQ2Mzc5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4637936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnieto", "html_url": "https://github.com/gnieto", "followers_url": "https://api.github.com/users/gnieto/followers", "following_url": "https://api.github.com/users/gnieto/following{/other_user}", "gists_url": "https://api.github.com/users/gnieto/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnieto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnieto/subscriptions", "organizations_url": "https://api.github.com/users/gnieto/orgs", "repos_url": "https://api.github.com/users/gnieto/repos", "events_url": "https://api.github.com/users/gnieto/events{/privacy}", "received_events_url": "https://api.github.com/users/gnieto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "503a63390df10c6c025f1c1c514a232a0a163c38", "url": "https://api.github.com/repos/rust-lang/rust/commits/503a63390df10c6c025f1c1c514a232a0a163c38", "html_url": "https://github.com/rust-lang/rust/commit/503a63390df10c6c025f1c1c514a232a0a163c38"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "a99a56bc5544b5c76d93f78bb1910bd466e268db", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bcf2e4142127c5e8411f69878de2fe4895608a06/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf2e4142127c5e8411f69878de2fe4895608a06/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=bcf2e4142127c5e8411f69878de2fe4895608a06", "patch": "@@ -229,7 +229,18 @@ pub fn constant_simple(lcx: &LateContext, e: &Expr) -> Option<Constant> {\n     constant(lcx, e).and_then(|(cst, res)| if res { None } else { Some(cst) })\n }\n \n-struct ConstEvalLateContext<'a, 'tcx: 'a> {\n+/// Creates a ConstEvalLateContext from the given LateContext and TypeckTables\n+pub fn constant_context<'c, 'cc>(lcx: &LateContext<'c, 'cc>, tables: &'cc ty::TypeckTables<'cc>) -> ConstEvalLateContext<'c, 'cc> {\n+    ConstEvalLateContext {\n+        tcx: lcx.tcx,\n+        tables,\n+        param_env: lcx.param_env,\n+        needed_resolution: false,\n+        substs: lcx.tcx.intern_substs(&[]),\n+    }\n+}\n+\n+pub struct ConstEvalLateContext<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     tables: &'a ty::TypeckTables<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n@@ -239,7 +250,7 @@ struct ConstEvalLateContext<'a, 'tcx: 'a> {\n \n impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n     /// simple constant folding: Insert an expression, get a constant or none.\n-    fn expr(&mut self, e: &Expr) -> Option<Constant> {\n+    pub fn expr(&mut self, e: &Expr) -> Option<Constant> {\n         match e.node {\n             ExprPath(ref qpath) => self.fetch_path(qpath, e.hir_id),\n             ExprBlock(ref block) => self.block(block),"}, {"sha": "34073d9725b986d3df2f75fae4efe263aafe3cfa", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bcf2e4142127c5e8411f69878de2fe4895608a06/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf2e4142127c5e8411f69878de2fe4895608a06/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=bcf2e4142127c5e8411f69878de2fe4895608a06", "patch": "@@ -1,4 +1,4 @@\n-use consts::constant;\n+use consts::{constant, constant_context};\n use rustc::lint::*;\n use rustc::hir::*;\n use std::hash::{Hash, Hasher};\n@@ -117,8 +117,12 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n                 !self.ignore_fn && l_path == r_path && self.eq_exprs(l_args, r_args)\n             },\n             (&ExprRepeat(ref le, ll_id), &ExprRepeat(ref re, rl_id)) => {\n-                self.eq_expr(le, re)\n-                    && self.eq_expr(&self.cx.tcx.hir.body(ll_id).value, &self.cx.tcx.hir.body(rl_id).value)\n+                let mut celcx = constant_context(self.cx, self.cx.tcx.body_tables(ll_id));\n+                let ll = celcx.expr(&self.cx.tcx.hir.body(ll_id).value);\n+                let mut celcx = constant_context(self.cx, self.cx.tcx.body_tables(rl_id));\n+                let rl = celcx.expr(&self.cx.tcx.hir.body(rl_id).value);\n+\n+                self.eq_expr(le, re) && ll == rl\n             },\n             (&ExprRet(ref l), &ExprRet(ref r)) => both(l, r, |l, r| self.eq_expr(l, r)),\n             (&ExprPath(ref l), &ExprPath(ref r)) => self.eq_qpath(l, r),"}, {"sha": "0488591bae992578beb87f33756206b0a43312d6", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bcf2e4142127c5e8411f69878de2fe4895608a06/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf2e4142127c5e8411f69878de2fe4895608a06/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=bcf2e4142127c5e8411f69878de2fe4895608a06", "patch": "@@ -396,3 +396,18 @@ fn ifs_same_cond() {\n }\n \n fn main() {}\n+\n+// Issue #2423. This was causing an ICE\n+fn func() {\n+    if true {\n+        f(&[0; 62]);\n+        f(&[0; 4]);\n+        f(&[0; 3]);\n+    } else {\n+        f(&[0; 62]);\n+        f(&[0; 6]);\n+        f(&[0; 6]);\n+    }\n+}\n+\n+fn f(val: &[u8]) {}"}]}