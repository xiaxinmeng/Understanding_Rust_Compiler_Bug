{"sha": "c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZmZiYzMxNTFhODY3NmVmZTFhZThhYzFjY2YzNTNmNzZjNTI1NDk=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-09-15T09:22:22Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-09-15T10:28:25Z"}, "message": "debuginfo: Fix style nits for pull request.", "tree": {"sha": "46689ac098ee6e765005ac0e6780729db230d078", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46689ac098ee6e765005ac0e6780729db230d078"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "html_url": "https://github.com/rust-lang/rust/commit/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccb721a58d2973ea65e382d8af28932aa649b579", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb721a58d2973ea65e382d8af28932aa649b579", "html_url": "https://github.com/rust-lang/rust/commit/ccb721a58d2973ea65e382d8af28932aa649b579"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "beadcf3a19df8282bb06091ddf4f56c730703dab", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "patch": "@@ -2120,7 +2120,6 @@ pub mod llvm {\n         #[fast_ffi]\n         pub fn LLVMDICompositeTypeSetTypeArray(CompositeType: ValueRef, TypeArray: ValueRef);\n \n-\n         #[fast_ffi]\n         pub fn LLVMIsAArgument(value_ref: ValueRef) -> ValueRef;\n "}, {"sha": "59cf137b2b374d922818bf63134521691de2fc5f", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "patch": "@@ -601,10 +601,8 @@ pub fn create_function_debug_context(cx: &mut CrateContext,\n             _) => {\n             (ident, fn_decl, generics, Some(top_level_block), span)\n         }\n-        ast_map::node_foreign_item(@ast::foreign_item { _ }, _, _, _) => {\n-            return FunctionWithoutDebugInfo;\n-        }\n-        ast_map::node_variant(*)     |\n+        ast_map::node_foreign_item(@ast::foreign_item { _ }, _, _, _) |\n+        ast_map::node_variant(*) |\n         ast_map::node_struct_ctor(*) => {\n             return FunctionWithoutDebugInfo;\n         }\n@@ -1166,9 +1164,10 @@ impl RecursiveTypeDescription {\n                 // Insert the stub into the cache in order to allow recursive references ...\n                 debug_context(cx).created_types.insert(cache_id, metadata_stub);\n \n-                // ... then create the member descriptions\n+                // ... then create the member descriptions ...\n                 let member_descriptions = member_description_factory(cx);\n \n+                // ... and attach them to the stub to complete it.\n                 set_members_of_composite_type(cx,\n                                               metadata_stub,\n                                               llvm_type,\n@@ -1465,7 +1464,7 @@ fn prepare_enum_metadata(cx: &mut CrateContext,\n }\n \n enum MemberOffset {\n-    FixedMemberOffset{ bytes: uint },\n+    FixedMemberOffset { bytes: uint },\n     // For ComputedMemberOffset, the offset is read from the llvm type definition\n     ComputedMemberOffset\n }\n@@ -1863,14 +1862,14 @@ fn trait_metadata(cx: &mut CrateContext,\n     // the trait's methods.\n     let path = ty::item_path(cx.tcx, def_id);\n     let ident = path.last().ident();\n-    let name = ppaux::trait_store_to_str(cx.tcx, trait_store)\n-             + ppaux::mutability_to_str(mutability)\n-             + token::ident_to_str(&ident);\n+    let name = ppaux::trait_store_to_str(cx.tcx, trait_store) +\n+               ppaux::mutability_to_str(mutability) +\n+               token::ident_to_str(&ident);\n     // Add type and region parameters\n     let name = ppaux::parameterized(cx.tcx, name, &substs.regions, substs.tps);\n \n-    let (containing_scope,\n-         definition_span) = get_namespace_and_span_for_item(cx, def_id, usage_site_span);\n+    let (containing_scope, definition_span) =\n+        get_namespace_and_span_for_item(cx, def_id, usage_site_span);\n \n     let file_name = span_start(cx, definition_span).file.name;\n     let file_metadata = file_metadata(cx, file_name);"}, {"sha": "db02e69cfb875001f2e48162f14af93326e84d19", "filename": "src/test/debug-info/trait-pointers.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ffbc3151a8676efe1ae8ac1ccf353f76c52549/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs?ref=c3ffbc3151a8676efe1ae8ac1ccf353f76c52549", "patch": "@@ -31,5 +31,3 @@ fn main() {\n     let managed: @Trait = @Struct { a:2, b: 3.0 } as @Trait;\n     let unique: ~Trait = ~Struct { a:2, b: 3.0 } as ~Trait;\n }\n-\n-fn zzz() {()}"}]}