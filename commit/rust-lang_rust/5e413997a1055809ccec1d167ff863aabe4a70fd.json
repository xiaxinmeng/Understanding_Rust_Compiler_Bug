{"sha": "5e413997a1055809ccec1d167ff863aabe4a70fd", "node_id": "C_kwDOAAsO6NoAKDVlNDEzOTk3YTEwNTU4MDljY2VjMWQxNjdmZjg2M2FhYmU0YTcwZmQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-26T09:46:03Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-26T09:46:03Z"}, "message": "minor: Add test for parameter and reborrow hint order", "tree": {"sha": "cf5f16d6a52553179ddac451c93aefff40ef9210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf5f16d6a52553179ddac451c93aefff40ef9210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e413997a1055809ccec1d167ff863aabe4a70fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e413997a1055809ccec1d167ff863aabe4a70fd", "html_url": "https://github.com/rust-lang/rust/commit/5e413997a1055809ccec1d167ff863aabe4a70fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e413997a1055809ccec1d167ff863aabe4a70fd/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b120216de987f2e7700b7707ef6b5d5b5545d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94", "html_url": "https://github.com/rust-lang/rust/commit/1b120216de987f2e7700b7707ef6b5d5b5545d94"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "fa36241c8c34f5e5f9ef83afcb3e0d484ace0710", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5e413997a1055809ccec1d167ff863aabe4a70fd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e413997a1055809ccec1d167ff863aabe4a70fd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=5e413997a1055809ccec1d167ff863aabe4a70fd", "patch": "@@ -36,13 +36,13 @@ pub enum LifetimeElisionHints {\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub enum InlayKind {\n-    ImplicitReborrow,\n-    TypeHint,\n-    ParameterHint,\n-    ClosureReturnTypeHint,\n     ChainingHint,\n+    ClosureReturnTypeHint,\n     GenericParamListHint,\n+    ImplicitReborrow,\n     LifetimeHint,\n+    ParameterHint,\n+    TypeHint,\n }\n \n #[derive(Debug)]\n@@ -110,11 +110,11 @@ fn hints(\n     config: &InlayHintsConfig,\n     node: SyntaxNode,\n ) {\n-    let krate = match sema.scope(&node) {\n-        Some(it) => it.krate(),\n+    let famous_defs = match sema.scope(&node) {\n+        Some(it) => FamousDefs(sema, it.krate()),\n         None => return,\n     };\n-    let famous_defs = FamousDefs(sema, krate);\n+\n     if let Some(expr) = ast::Expr::cast(node.clone()) {\n         chaining_hints(hints, sema, &famous_defs, config, &expr);\n         match expr {\n@@ -1637,10 +1637,7 @@ fn main() {\n     fn skip_constructor_and_enum_type_hints() {\n         check_with_config(\n             InlayHintsConfig {\n-                render_colons: true,\n                 type_hints: true,\n-                parameter_hints: true,\n-                chaining_hints: true,\n                 hide_named_constructor_hints: true,\n                 ..DISABLED_CONFIG\n             },\n@@ -2147,33 +2144,36 @@ impl () {\n     #[test]\n     fn hints_implicit_reborrow() {\n         check_with_config(\n-            InlayHintsConfig { reborrow_hints: true, ..DISABLED_CONFIG },\n+            InlayHintsConfig { reborrow_hints: true, parameter_hints: true, ..DISABLED_CONFIG },\n             r#\"\n fn __() {\n     let unique = &mut ();\n     let r_mov = unique;\n     let foo: &mut _ = unique;\n                     //^^^^^^ &mut *\n     ref_mut_id(unique);\n+             //^^^^^^ mut_ref\n              //^^^^^^ &mut *\n     let shared = ref_id(unique);\n+                      //^^^^^^ shared_ref\n                       //^^^^^^ &*\n     let mov = shared;\n     let r_mov: &_ = shared;\n     ref_id(shared);\n+         //^^^^^^ shared_ref\n \n     identity(unique);\n     identity(shared);\n }\n fn identity<T>(t: T) -> T {\n     t\n }\n-fn ref_mut_id(x: &mut ()) -> &mut () {\n-    x\n-  //^ &mut *\n+fn ref_mut_id(mut_ref: &mut ()) -> &mut () {\n+    mut_ref\n+  //^^^^^^^ &mut *\n }\n-fn ref_id(x: &()) -> &() {\n-    x\n+fn ref_id(shared_ref: &()) -> &() {\n+    shared_ref\n }\n \"#,\n         );"}]}