{"sha": "835eaaa77e73cb259f60de33ad093a465e9dc65c", "node_id": "C_kwDOAAsO6NoAKDgzNWVhYWE3N2U3M2NiMjU5ZjYwZGUzM2FkMDkzYTQ2NWU5ZGM2NWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-03T19:01:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-03T19:01:46Z"}, "message": "Rollup merge of #94550 - GuillaumeGomez:HKF-macros, r=notriddle\n\nrustdoc: Add test for higher kinded functions generated by macros\n\nFixes #75564.\n\nThe problem has been solved apparently so adding a test to prevent a regression.\n\nr? ```@notriddle```", "tree": {"sha": "1dc6b29af2c18b68fa8550339f61aff2ed7a7eea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dc6b29af2c18b68fa8550339f61aff2ed7a7eea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835eaaa77e73cb259f60de33ad093a465e9dc65c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIRCaCRBK7hj4Ov3rIwAA6KgIAK1BhIQTdjPac79gHLygJxeg\new9FT94+Uxl+fEUv9G7ciqNDH6WABto+xirFseuiKDq+BV0zark51EtLWZfcciRI\n3LohOOWHzIsRmYmwqMtEb4e48QcJWQD/7TUHrPoPBrOzDDcYYcDl0s5IoowPr9rW\nCCyZaExPYXN/QoOEuhAQpQPr1XwPbYk0zpEbWW/bw5cNW6+sFXqiAJWsAw0uckD+\nExcEpAlVneSi2q9DP1t0Ariq1LrVOGmK3ctjWU330O0OtXUxI4Jbs7Mzap5kO3Im\n3sv+AioqWr8/GD4AM0eh5J1Ge7rDStyHrpmhpnLp0Ji5zA0WRIKjlbyY2R1w7/0=\n=Uzvw\n-----END PGP SIGNATURE-----\n", "payload": "tree 1dc6b29af2c18b68fa8550339f61aff2ed7a7eea\nparent 16c6594f34cd0bb30596b5f5175cd4b6fa7c5e5d\nparent e3f04de3d430c70e95676a5a7e9028031e9244fb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646334106 +0100\ncommitter GitHub <noreply@github.com> 1646334106 +0100\n\nRollup merge of #94550 - GuillaumeGomez:HKF-macros, r=notriddle\n\nrustdoc: Add test for higher kinded functions generated by macros\n\nFixes #75564.\n\nThe problem has been solved apparently so adding a test to prevent a regression.\n\nr? ```@notriddle```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835eaaa77e73cb259f60de33ad093a465e9dc65c", "html_url": "https://github.com/rust-lang/rust/commit/835eaaa77e73cb259f60de33ad093a465e9dc65c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835eaaa77e73cb259f60de33ad093a465e9dc65c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16c6594f34cd0bb30596b5f5175cd4b6fa7c5e5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/16c6594f34cd0bb30596b5f5175cd4b6fa7c5e5d", "html_url": "https://github.com/rust-lang/rust/commit/16c6594f34cd0bb30596b5f5175cd4b6fa7c5e5d"}, {"sha": "e3f04de3d430c70e95676a5a7e9028031e9244fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f04de3d430c70e95676a5a7e9028031e9244fb", "html_url": "https://github.com/rust-lang/rust/commit/e3f04de3d430c70e95676a5a7e9028031e9244fb"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "02a4305644e7d57684158e441e83c8181b779c80", "filename": "src/test/rustdoc/macro-higher-kinded-function.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/835eaaa77e73cb259f60de33ad093a465e9dc65c/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835eaaa77e73cb259f60de33ad093a465e9dc65c/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs?ref=835eaaa77e73cb259f60de33ad093a465e9dc65c", "patch": "@@ -0,0 +1,21 @@\n+#![crate_name = \"foo\"]\n+\n+pub struct TyCtxt<'tcx>(&'tcx u8);\n+\n+macro_rules! gen {\n+    ($(($name:ident, $tcx:lifetime, [$k:ty], [$r:ty]))*) => {\n+        pub struct Providers {\n+            $(pub $name: for<$tcx> fn(TyCtxt<$tcx>, $k) -> $r,)*\n+        }\n+    }\n+}\n+\n+// @has 'foo/struct.Providers.html'\n+// @has - '//*[@class=\"docblock item-decl\"]//code' \"pub a: for<'tcx> fn(_: TyCtxt<'tcx>, _: u8) -> i8,\"\n+// @has - '//*[@class=\"docblock item-decl\"]//code' \"pub b: for<'tcx> fn(_: TyCtxt<'tcx>, _: u16) -> i16,\"\n+// @has - '//*[@id=\"structfield.a\"]/code' \"a: for<'tcx> fn(_: TyCtxt<'tcx>, _: u8) -> i8\"\n+// @has - '//*[@id=\"structfield.b\"]/code' \"b: for<'tcx> fn(_: TyCtxt<'tcx>, _: u16) -> i16\"\n+gen! {\n+    (a, 'tcx, [u8], [i8])\n+    (b, 'tcx, [u16], [i16])\n+}"}]}