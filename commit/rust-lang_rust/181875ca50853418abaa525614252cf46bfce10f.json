{"sha": "181875ca50853418abaa525614252cf46bfce10f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTg3NWNhNTA4NTM0MThhYmFhNTI1NjE0MjUyY2Y0NmJmY2UxMGY=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-21T02:55:52Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-21T02:55:52Z"}, "message": "Remove RefCell::{with, with_mut}\n\nThese are superfluous now that we have fixed rvalue lifetimes and Deref.", "tree": {"sha": "f8180978f23634cddbd5574ec6058c861d43ff63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8180978f23634cddbd5574ec6058c861d43ff63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/181875ca50853418abaa525614252cf46bfce10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/181875ca50853418abaa525614252cf46bfce10f", "html_url": "https://github.com/rust-lang/rust/commit/181875ca50853418abaa525614252cf46bfce10f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/181875ca50853418abaa525614252cf46bfce10f/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eae7df43cd21b76fe91eeaf6ef2af9bd2a8fafc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eae7df43cd21b76fe91eeaf6ef2af9bd2a8fafc", "html_url": "https://github.com/rust-lang/rust/commit/6eae7df43cd21b76fe91eeaf6ef2af9bd2a8fafc"}], "stats": {"total": 85, "additions": 11, "deletions": 74}, "files": [{"sha": "4676ada1727eb3206d2c2fbd3c8fda5e462ba087", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/181875ca50853418abaa525614252cf46bfce10f/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181875ca50853418abaa525614252cf46bfce10f/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=181875ca50853418abaa525614252cf46bfce10f", "patch": "@@ -313,10 +313,10 @@ pub fn phase_3_run_analysis_passes(sess: Session,\n     time(time_passes, \"looking for entry point\", (),\n          |_| middle::entry::find_entry_point(&sess, krate, &ast_map));\n \n-    sess.macro_registrar_fn.with_mut(|r| *r =\n+    *sess.macro_registrar_fn.borrow_mut() =\n         time(time_passes, \"looking for macro registrar\", (), |_|\n             syntax::ext::registrar::find_macro_registrar(\n-                sess.diagnostic(), krate)));\n+                sess.diagnostic(), krate));\n \n     let freevars = time(time_passes, \"freevar finding\", (), |_|\n                         freevars::annotate_freevars(def_map, krate));"}, {"sha": "f1089891ea5fb464a497c57f287367ceaee22301", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/181875ca50853418abaa525614252cf46bfce10f/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181875ca50853418abaa525614252cf46bfce10f/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=181875ca50853418abaa525614252cf46bfce10f", "patch": "@@ -135,11 +135,11 @@ impl CStore {\n     }\n \n     pub fn reset(&self) {\n-        self.metas.with_mut(|s| s.clear());\n-        self.extern_mod_crate_map.with_mut(|s| s.clear());\n-        self.used_crate_sources.with_mut(|s| s.clear());\n-        self.used_libraries.with_mut(|s| s.clear());\n-        self.used_link_args.with_mut(|s| s.clear());\n+        self.metas.borrow_mut().clear();\n+        self.extern_mod_crate_map.borrow_mut().clear();\n+        self.used_crate_sources.borrow_mut().clear();\n+        self.used_libraries.borrow_mut().clear();\n+        self.used_link_args.borrow_mut().clear();\n     }\n \n     // This method is used when generating the command line to pass through to"}, {"sha": "df1c29ded6e0eb10beadaf0bcff43b5c6855a965", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=181875ca50853418abaa525614252cf46bfce10f", "patch": "@@ -173,28 +173,6 @@ impl<T> RefCell<T> {\n         }\n     }\n \n-    /// Immutably borrows the wrapped value and applies `blk` to it.\n-    ///\n-    /// # Failure\n-    ///\n-    /// Fails if the value is currently mutably borrowed.\n-    #[inline]\n-    pub fn with<U>(&self, blk: |&T| -> U) -> U {\n-        let ptr = self.borrow();\n-        blk(ptr.get())\n-    }\n-\n-    /// Mutably borrows the wrapped value and applies `blk` to it.\n-    ///\n-    /// # Failure\n-    ///\n-    /// Fails if the value is currently borrowed.\n-    #[inline]\n-    pub fn with_mut<U>(&self, blk: |&mut T| -> U) -> U {\n-        let mut ptr = self.borrow_mut();\n-        blk(ptr.get())\n-    }\n-\n     /// Sets the value, replacing what was there.\n     ///\n     /// # Failure\n@@ -372,43 +350,6 @@ mod test {\n         assert!(x.try_borrow_mut().is_none());\n     }\n \n-    #[test]\n-    fn with_ok() {\n-        let x = RefCell::new(0);\n-        assert_eq!(1, x.with(|x| *x+1));\n-    }\n-\n-    #[test]\n-    #[should_fail]\n-    fn mut_borrow_with() {\n-        let x = RefCell::new(0);\n-        let _b1 = x.borrow_mut();\n-        x.with(|x| *x+1);\n-    }\n-\n-    #[test]\n-    fn borrow_with() {\n-        let x = RefCell::new(0);\n-        let _b1 = x.borrow();\n-        assert_eq!(1, x.with(|x| *x+1));\n-    }\n-\n-    #[test]\n-    fn with_mut_ok() {\n-        let x = RefCell::new(0);\n-        x.with_mut(|x| *x += 1);\n-        let b = x.borrow();\n-        assert_eq!(1, *b.get());\n-    }\n-\n-    #[test]\n-    #[should_fail]\n-    fn borrow_with_mut() {\n-        let x = RefCell::new(0);\n-        let _b = x.borrow();\n-        x.with_mut(|x| *x += 1);\n-    }\n-\n     #[test]\n     #[should_fail]\n     fn discard_doesnt_unborrow() {"}, {"sha": "7fb23d77f3c6cb94b90c257a5e37ba0249e3f4e0", "filename": "src/libstd/gc.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Fgc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Fgc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgc.rs?ref=181875ca50853418abaa525614252cf46bfce10f", "patch": "@@ -87,10 +87,8 @@ mod tests {\n     fn test_clone() {\n         let x = Gc::new(RefCell::new(5));\n         let y = x.clone();\n-        x.borrow().with_mut(|inner| {\n-            *inner = 20;\n-        });\n-        assert_eq!(y.borrow().with(|x| *x), 20);\n+        *x.borrow().borrow_mut() = 20;\n+        assert_eq!(*y.borrow().borrow(), 20);\n     }\n \n     #[test]"}, {"sha": "c41e3b01f4732d583da6881ca84ed39eec7d2a37", "filename": "src/libstd/rc.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181875ca50853418abaa525614252cf46bfce10f/src%2Flibstd%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frc.rs?ref=181875ca50853418abaa525614252cf46bfce10f", "patch": "@@ -198,10 +198,8 @@ mod tests {\n     fn test_clone() {\n         let x = Rc::new(RefCell::new(5));\n         let y = x.clone();\n-        x.deref().with_mut(|inner| {\n-            *inner = 20;\n-        });\n-        assert_eq!(y.deref().with(|v| *v), 20);\n+        *x.borrow_mut() = 20;\n+        assert_eq!(*y.borrow(), 20);\n     }\n \n     #[test]"}]}