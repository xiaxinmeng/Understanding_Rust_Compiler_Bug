{"sha": "91106f7cc390434f91ac01070dcae8eecd8d909e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMTA2ZjdjYzM5MDQzNGY5MWFjMDEwNzBkY2FlOGVlY2Q4ZDkwOWU=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-10-06T15:35:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-06T15:35:41Z"}, "message": "Rollup merge of #36930 - angelsl:issue-36202, r=frewsxcv\n\nClarify last element in str.{r,}splitn documentation\n\nAn attempt at #36202.\n\nI'm not sure if my wording is actually clearer, to be honest...", "tree": {"sha": "83ee81c751ce8265e6265412f904562bcf3ac6a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83ee81c751ce8265e6265412f904562bcf3ac6a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91106f7cc390434f91ac01070dcae8eecd8d909e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91106f7cc390434f91ac01070dcae8eecd8d909e", "html_url": "https://github.com/rust-lang/rust/commit/91106f7cc390434f91ac01070dcae8eecd8d909e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91106f7cc390434f91ac01070dcae8eecd8d909e/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a199bf3fc6bf3ba35938a69b81d967b570a9b63", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a199bf3fc6bf3ba35938a69b81d967b570a9b63", "html_url": "https://github.com/rust-lang/rust/commit/5a199bf3fc6bf3ba35938a69b81d967b570a9b63"}, {"sha": "a4e9c392092b5a6d51296470c29f86aaaf255925", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e9c392092b5a6d51296470c29f86aaaf255925", "html_url": "https://github.com/rust-lang/rust/commit/a4e9c392092b5a6d51296470c29f86aaaf255925"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "609eb28348e21a2b571c8f063e4749bd9ed32b39", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/91106f7cc390434f91ac01070dcae8eecd8d909e/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91106f7cc390434f91ac01070dcae8eecd8d909e/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=91106f7cc390434f91ac01070dcae8eecd8d909e", "patch": "@@ -1053,10 +1053,10 @@ impl str {\n     }\n \n     /// An iterator over substrings of the given string slice, separated by a\n-    /// pattern, restricted to returning at most `count` items.\n+    /// pattern, restricted to returning at most `n` items.\n     ///\n-    /// The last element returned, if any, will contain the remainder of the\n-    /// string slice.\n+    /// If `n` substrings are returned, the last substring (the `n`th substring)\n+    /// will contain the remainder of the string.\n     ///\n     /// The pattern can be a `&str`, [`char`], or a closure that determines the\n     /// split.\n@@ -1098,16 +1098,16 @@ impl str {\n     /// assert_eq!(v, [\"abc\", \"defXghi\"]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn splitn<'a, P: Pattern<'a>>(&'a self, count: usize, pat: P) -> SplitN<'a, P> {\n-        core_str::StrExt::splitn(self, count, pat)\n+    pub fn splitn<'a, P: Pattern<'a>>(&'a self, n: usize, pat: P) -> SplitN<'a, P> {\n+        core_str::StrExt::splitn(self, n, pat)\n     }\n \n     /// An iterator over substrings of this string slice, separated by a\n     /// pattern, starting from the end of the string, restricted to returning\n-    /// at most `count` items.\n+    /// at most `n` items.\n     ///\n-    /// The last element returned, if any, will contain the remainder of the\n-    /// string slice.\n+    /// If `n` substrings are returned, the last substring (the `n`th substring)\n+    /// will contain the remainder of the string.\n     ///\n     /// The pattern can be a `&str`, [`char`], or a closure that\n     /// determines the split.\n@@ -1145,10 +1145,10 @@ impl str {\n     /// assert_eq!(v, [\"ghi\", \"abc1def\"]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn rsplitn<'a, P: Pattern<'a>>(&'a self, count: usize, pat: P) -> RSplitN<'a, P>\n+    pub fn rsplitn<'a, P: Pattern<'a>>(&'a self, n: usize, pat: P) -> RSplitN<'a, P>\n         where P::Searcher: ReverseSearcher<'a>\n     {\n-        core_str::StrExt::rsplitn(self, count, pat)\n+        core_str::StrExt::rsplitn(self, n, pat)\n     }\n \n     /// An iterator over the matches of a pattern within the given string"}]}