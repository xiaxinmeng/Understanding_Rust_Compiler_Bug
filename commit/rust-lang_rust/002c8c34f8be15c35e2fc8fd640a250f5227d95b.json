{"sha": "002c8c34f8be15c35e2fc8fd640a250f5227d95b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMmM4YzM0ZjhiZTE1YzM1ZTJmYzhmZDY0MGEyNTBmNTIyN2Q5NWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-04T14:31:08Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-04T14:31:08Z"}, "message": "re-add missing comments", "tree": {"sha": "645939e001ae6ee847b922ab760ad25ffdd555a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/645939e001ae6ee847b922ab760ad25ffdd555a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/002c8c34f8be15c35e2fc8fd640a250f5227d95b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/002c8c34f8be15c35e2fc8fd640a250f5227d95b", "html_url": "https://github.com/rust-lang/rust/commit/002c8c34f8be15c35e2fc8fd640a250f5227d95b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/002c8c34f8be15c35e2fc8fd640a250f5227d95b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a99fdd90df92d5cb9a1b5b5f6ee66aad627766", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a99fdd90df92d5cb9a1b5b5f6ee66aad627766", "html_url": "https://github.com/rust-lang/rust/commit/c1a99fdd90df92d5cb9a1b5b5f6ee66aad627766"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "4cee123909bb0b5f9e39f6f247f7130e2b139b27", "filename": "src/misc.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/002c8c34f8be15c35e2fc8fd640a250f5227d95b/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/002c8c34f8be15c35e2fc8fd640a250f5227d95b/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=002c8c34f8be15c35e2fc8fd640a250f5227d95b", "patch": "@@ -365,9 +365,10 @@ impl LintPass for UsedUnderscoreBinding {\n }\n \n impl LateLintPass for UsedUnderscoreBinding {\n+    #[rustfmt_skip]\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         if in_attributes_expansion(cx, expr) {\n-            // Don't lint things expanded by #[derive(...)], etc\n+    // Don't lint things expanded by #[derive(...)], etc\n             return;\n         }\n         let needs_lint = match expr.node {\n@@ -376,9 +377,9 @@ impl LateLintPass for UsedUnderscoreBinding {\n                                 .last()\n                                 .expect(\"path should always have at least one segment\")\n                                 .identifier;\n-                ident.name.as_str().chars().next() == Some('_') &&\n-                ident.name.as_str().chars().skip(1).next() != Some('_') &&\n-                ident.name != ident.unhygienic_name && is_used(cx, expr)\n+                ident.name.as_str().chars().next() == Some('_') && // starts with '_'\n+                ident.name.as_str().chars().skip(1).next() != Some('_') &&  // doesn't start with \"__\"\n+                ident.name != ident.unhygienic_name && is_used(cx, expr) // not in bang macro\n             }\n             ExprField(_, spanned) => {\n                 let name = spanned.node.as_str();"}]}