{"sha": "78d919280d36652c1ca069cb3f6713d38e64e823", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZDkxOTI4MGQzNjY1MmMxY2EwNjljYjNmNjcxM2QzOGU2NGU4MjM=", "commit": {"author": {"name": "Chris Jefferson", "email": "chris@bubblescope.net", "date": "2021-01-04T09:22:56Z"}, "committer": {"name": "Chris Jefferson", "email": "chris@bubblescope.net", "date": "2021-01-16T09:36:28Z"}, "message": "Clarify what the effects of a 'logic error' are", "tree": {"sha": "7f6dd1a7b8fc39c615e61fe6cabdff87646bfe65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f6dd1a7b8fc39c615e61fe6cabdff87646bfe65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78d919280d36652c1ca069cb3f6713d38e64e823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78d919280d36652c1ca069cb3f6713d38e64e823", "html_url": "https://github.com/rust-lang/rust/commit/78d919280d36652c1ca069cb3f6713d38e64e823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78d919280d36652c1ca069cb3f6713d38e64e823/comments", "author": {"login": "ChrisJefferson", "id": 811527, "node_id": "MDQ6VXNlcjgxMTUyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/811527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisJefferson", "html_url": "https://github.com/ChrisJefferson", "followers_url": "https://api.github.com/users/ChrisJefferson/followers", "following_url": "https://api.github.com/users/ChrisJefferson/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisJefferson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisJefferson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisJefferson/subscriptions", "organizations_url": "https://api.github.com/users/ChrisJefferson/orgs", "repos_url": "https://api.github.com/users/ChrisJefferson/repos", "events_url": "https://api.github.com/users/ChrisJefferson/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisJefferson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisJefferson", "id": 811527, "node_id": "MDQ6VXNlcjgxMTUyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/811527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisJefferson", "html_url": "https://github.com/ChrisJefferson", "followers_url": "https://api.github.com/users/ChrisJefferson/followers", "following_url": "https://api.github.com/users/ChrisJefferson/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisJefferson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisJefferson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisJefferson/subscriptions", "organizations_url": "https://api.github.com/users/ChrisJefferson/orgs", "repos_url": "https://api.github.com/users/ChrisJefferson/repos", "events_url": "https://api.github.com/users/ChrisJefferson/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisJefferson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cd459fd629bc5444cdbda3ceb341cd0bf6eece2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd459fd629bc5444cdbda3ceb341cd0bf6eece2", "html_url": "https://github.com/rust-lang/rust/commit/0cd459fd629bc5444cdbda3ceb341cd0bf6eece2"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "c63e79745f1cbbd3f1e19cc379669eb8c1cb703a", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=78d919280d36652c1ca069cb3f6713d38e64e823", "patch": "@@ -161,7 +161,10 @@ use super::SpecExtend;\n /// It is a logic error for an item to be modified in such a way that the\n /// item's ordering relative to any other item, as determined by the `Ord`\n /// trait, changes while it is in the heap. This is normally only possible\n-/// through `Cell`, `RefCell`, global state, I/O, or unsafe code.\n+/// through `Cell`, `RefCell`, global state, I/O, or unsafe code. The\n+/// behavior resulting from such a logic error is not specified, but will\n+/// not result in undefined behavior. This could include panics, incorrect\n+/// results, aborts, memory leaks, and non-termination.\n ///\n /// # Examples\n ///"}, {"sha": "5e63a303d22c3bb6682483dd0c05b14377687caa", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=78d919280d36652c1ca069cb3f6713d38e64e823", "patch": "@@ -51,6 +51,9 @@ pub(super) const MIN_LEN: usize = node::MIN_LEN_AFTER_SPLIT;\n /// It is a logic error for a key to be modified in such a way that the key's ordering relative to\n /// any other key, as determined by the [`Ord`] trait, changes while it is in the map. This is\n /// normally only possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n+/// The behavior resulting from such a logic error is not specified, but will not result in\n+/// undefined behavior. This could include panics, incorrect results, aborts, memory leaks, and\n+/// non-termination.\n ///\n /// [`Cell`]: core::cell::Cell\n /// [`RefCell`]: core::cell::RefCell"}, {"sha": "c2a96dd8ef471b46a00130d7f7b67e755bd2f21a", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=78d919280d36652c1ca069cb3f6713d38e64e823", "patch": "@@ -22,6 +22,9 @@ use super::Recover;\n /// It is a logic error for an item to be modified in such a way that the item's ordering relative\n /// to any other item, as determined by the [`Ord`] trait, changes while it is in the set. This is\n /// normally only possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n+/// The behavior resulting from such a logic error is not specified, but will not result in\n+/// undefined behavior. This could include panics, incorrect results, aborts, memory leaks, and\n+/// non-termination.\n ///\n /// [`Ord`]: core::cmp::Ord\n /// [`Cell`]: core::cell::Cell"}, {"sha": "829fc3817af2de6cfc434a521331f76abf270438", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=78d919280d36652c1ca069cb3f6713d38e64e823", "patch": "@@ -52,6 +52,9 @@ use crate::sys;\n /// hash, as determined by the [`Hash`] trait, or its equality, as determined by\n /// the [`Eq`] trait, changes while it is in the map. This is normally only\n /// possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n+/// The behavior resulting from such a logic error is not specified, but will\n+/// not result in undefined behavior. This could include panics, incorrect results,\n+/// aborts, memory leaks, and non-termination.\n ///\n /// The hash table implementation is a Rust port of Google's [SwissTable].\n /// The original C++ version of SwissTable can be found [here], and this"}, {"sha": "baa3026ff7514d2d4ed3dfd608131990aacc9ca9", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d919280d36652c1ca069cb3f6713d38e64e823/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=78d919280d36652c1ca069cb3f6713d38e64e823", "patch": "@@ -37,7 +37,9 @@ use super::map::{map_try_reserve_error, RandomState};\n /// item's hash, as determined by the [`Hash`] trait, or its equality, as\n /// determined by the [`Eq`] trait, changes while it is in the set. This is\n /// normally only possible through [`Cell`], [`RefCell`], global state, I/O, or\n-/// unsafe code.\n+/// unsafe code. The behavior resulting from such a logic error is not\n+/// specified, but will not result in undefined behavior. This could include\n+/// panics, incorrect results, aborts, memory leaks, and non-termination.\n ///\n /// # Examples\n ///"}]}