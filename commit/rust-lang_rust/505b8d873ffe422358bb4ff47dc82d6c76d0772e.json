{"sha": "505b8d873ffe422358bb4ff47dc82d6c76d0772e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNWI4ZDg3M2ZmZTQyMjM1OGJiNGZmNDdkYzgyZDZjNzZkMDc3MmU=", "commit": {"author": {"name": "Andrey Tkachenko", "email": "andreytkachenko64@gmail.com", "date": "2019-06-06T12:26:54Z"}, "committer": {"name": "Andrey Tkachenko", "email": "andreytkachenko64@gmail.com", "date": "2019-06-06T12:26:54Z"}, "message": "[#1083] Try block syntax: fix tests", "tree": {"sha": "b5b9eb1151c6fdbfcbeeaaf4dfd2b2db015a6266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5b9eb1151c6fdbfcbeeaaf4dfd2b2db015a6266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/505b8d873ffe422358bb4ff47dc82d6c76d0772e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/505b8d873ffe422358bb4ff47dc82d6c76d0772e", "html_url": "https://github.com/rust-lang/rust/commit/505b8d873ffe422358bb4ff47dc82d6c76d0772e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/505b8d873ffe422358bb4ff47dc82d6c76d0772e/comments", "author": {"login": "andreytkachenko", "id": 1773973, "node_id": "MDQ6VXNlcjE3NzM5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1773973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreytkachenko", "html_url": "https://github.com/andreytkachenko", "followers_url": "https://api.github.com/users/andreytkachenko/followers", "following_url": "https://api.github.com/users/andreytkachenko/following{/other_user}", "gists_url": "https://api.github.com/users/andreytkachenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreytkachenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreytkachenko/subscriptions", "organizations_url": "https://api.github.com/users/andreytkachenko/orgs", "repos_url": "https://api.github.com/users/andreytkachenko/repos", "events_url": "https://api.github.com/users/andreytkachenko/events{/privacy}", "received_events_url": "https://api.github.com/users/andreytkachenko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andreytkachenko", "id": 1773973, "node_id": "MDQ6VXNlcjE3NzM5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1773973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreytkachenko", "html_url": "https://github.com/andreytkachenko", "followers_url": "https://api.github.com/users/andreytkachenko/followers", "following_url": "https://api.github.com/users/andreytkachenko/following{/other_user}", "gists_url": "https://api.github.com/users/andreytkachenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreytkachenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreytkachenko/subscriptions", "organizations_url": "https://api.github.com/users/andreytkachenko/orgs", "repos_url": "https://api.github.com/users/andreytkachenko/repos", "events_url": "https://api.github.com/users/andreytkachenko/events{/privacy}", "received_events_url": "https://api.github.com/users/andreytkachenko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "281c9eeaff8eac4e666089f80f67cf684e1d001b", "url": "https://api.github.com/repos/rust-lang/rust/commits/281c9eeaff8eac4e666089f80f67cf684e1d001b", "html_url": "https://github.com/rust-lang/rust/commit/281c9eeaff8eac4e666089f80f67cf684e1d001b"}], "stats": {"total": 86, "additions": 41, "deletions": 45}, "files": [{"sha": "6cc5dbc6f27daf721b9c8d172046ca57ebe88567", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=505b8d873ffe422358bb4ff47dc82d6c76d0772e", "patch": "@@ -948,7 +948,6 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n             Expr::Block { statements, tail } => self.infer_block(statements, *tail, expected),\n             Expr::TryBlock { body } => {\n                 let _inner = self.infer_expr(*body, expected);\n-                \n                 // FIXME should be std::result::Result<{inner}, _>\n                 Ty::Unknown\n             }"}, {"sha": "725fb99f66855d19a61815f53306a62d5a545f89", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=505b8d873ffe422358bb4ff47dc82d6c76d0772e", "patch": "@@ -76,7 +76,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         T![loop] => loop_expr(p, None),\n         T![for] => for_expr(p, None),\n         T![while] => while_expr(p, None),\n-        T![try] => try_expr(p, None),\n+        T![try] => try_block_expr(p, None),\n         LIFETIME if la == T![:] => {\n             let m = p.start();\n             label(p);\n@@ -118,7 +118,9 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         }\n     };\n     let blocklike = match done.kind() {\n-        IF_EXPR | WHILE_EXPR | FOR_EXPR | LOOP_EXPR | MATCH_EXPR | BLOCK_EXPR | TRY_BLOCK_EXPR => BlockLike::Block,\n+        IF_EXPR | WHILE_EXPR | FOR_EXPR | LOOP_EXPR | MATCH_EXPR | BLOCK_EXPR | TRY_BLOCK_EXPR => {\n+            BlockLike::Block\n+        }\n         _ => BlockLike::NotBlock,\n     };\n     Some((done, blocklike))\n@@ -494,13 +496,11 @@ fn break_expr(p: &mut Parser, r: Restrictions) -> CompletedMarker {\n     m.complete(p, BREAK_EXPR)\n }\n \n-// test try_expr\n+// test try_block_expr\n // fn foo() {\n-//     try {\n-//     \n-//     }\n+//     let _ = try {};\n // }\n-fn try_expr(p: &mut Parser, m: Option<Marker>) -> CompletedMarker {\n+fn try_block_expr(p: &mut Parser, m: Option<Marker>) -> CompletedMarker {\n     assert!(p.at(T![try]));\n     let m = m.unwrap_or_else(|| p.start());\n     p.bump();"}, {"sha": "0f1b41eb64b4763678cee225ad9bbab5c42fdfcf", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0130_try_block_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rs?ref=505b8d873ffe422358bb4ff47dc82d6c76d0772e", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    let _ = try {};\n+}"}, {"sha": "53f49b9b5d577fa9d4f48373b5bd6f37a67deda1", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0130_try_block_expr.txt", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/505b8d873ffe422358bb4ff47dc82d6c76d0772e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0130_try_block_expr.txt?ref=505b8d873ffe422358bb4ff47dc82d6c76d0772e", "patch": "@@ -0,0 +1,31 @@\n+SOURCE_FILE@[0; 33)\n+  FN_DEF@[0; 32)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK@[9; 32)\n+      L_CURLY@[9; 10) \"{\"\n+      WHITESPACE@[10; 15) \"\\n    \"\n+      LET_STMT@[15; 30)\n+        LET_KW@[15; 18) \"let\"\n+        WHITESPACE@[18; 19) \" \"\n+        PLACEHOLDER_PAT@[19; 20)\n+          UNDERSCORE@[19; 20) \"_\"\n+        WHITESPACE@[20; 21) \" \"\n+        EQ@[21; 22) \"=\"\n+        WHITESPACE@[22; 23) \" \"\n+        TRY_EXPR@[23; 29)\n+          TRY_KW@[23; 26) \"try\"\n+          WHITESPACE@[26; 27) \" \"\n+          BLOCK@[27; 29)\n+            L_CURLY@[27; 28) \"{\"\n+            R_CURLY@[28; 29) \"}\"\n+        SEMI@[29; 30) \";\"\n+      WHITESPACE@[30; 31) \"\\n\"\n+      R_CURLY@[31; 32) \"}\"\n+  WHITESPACE@[32; 33) \"\\n\""}, {"sha": "8cc11ddcc2607cd827be9e36367f966342a0b64a", "filename": "crates/ra_syntax/tests/data/parser/ok/0051_try_block.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/281c9eeaff8eac4e666089f80f67cf684e1d001b/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/281c9eeaff8eac4e666089f80f67cf684e1d001b/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.rs?ref=281c9eeaff8eac4e666089f80f67cf684e1d001b", "patch": "@@ -1,5 +0,0 @@\n-fn main() {\n-    let res = try {\n-\n-    };\n-}"}, {"sha": "f94eb3bcde44d9d51cb3881e5ff24945f1515457", "filename": "crates/ra_syntax/tests/data/parser/ok/0051_try_block.txt", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/281c9eeaff8eac4e666089f80f67cf684e1d001b/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/281c9eeaff8eac4e666089f80f67cf684e1d001b/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0051_try_block.txt?ref=281c9eeaff8eac4e666089f80f67cf684e1d001b", "patch": "@@ -1,32 +0,0 @@\n-SOURCE_FILE@[0; 41)\n-  FN_DEF@[0; 41)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 7)\n-      IDENT@[3; 7) \"main\"\n-    PARAM_LIST@[7; 9)\n-      L_PAREN@[7; 8) \"(\"\n-      R_PAREN@[8; 9) \")\"\n-    WHITESPACE@[9; 10) \" \"\n-    BLOCK@[10; 41)\n-      L_CURLY@[10; 11) \"{\"\n-      WHITESPACE@[11; 16) \"\\n    \"\n-      LET_STMT@[16; 39)\n-        LET_KW@[16; 19) \"let\"\n-        WHITESPACE@[19; 20) \" \"\n-        BIND_PAT@[20; 23)\n-          NAME@[20; 23)\n-            IDENT@[20; 23) \"res\"\n-        WHITESPACE@[23; 24) \" \"\n-        EQ@[24; 25) \"=\"\n-        WHITESPACE@[25; 26) \" \"\n-        TRY_EXPR@[26; 38)\n-          TRY_KW@[26; 29) \"try\"\n-          WHITESPACE@[29; 30) \" \"\n-          BLOCK@[30; 38)\n-            L_CURLY@[30; 31) \"{\"\n-            WHITESPACE@[31; 37) \"\\n\\n    \"\n-            R_CURLY@[37; 38) \"}\"\n-        SEMI@[38; 39) \";\"\n-      WHITESPACE@[39; 40) \"\\n\"\n-      R_CURLY@[40; 41) \"}\"\n\\ No newline at end of file"}]}