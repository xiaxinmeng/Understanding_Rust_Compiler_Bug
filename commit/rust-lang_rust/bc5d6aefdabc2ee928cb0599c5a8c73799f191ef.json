{"sha": "bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNWQ2YWVmZGFiYzJlZTkyOGNiMDU5OWM1YThjNzM3OTlmMTkxZWY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-06T18:10:40Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-06T18:30:00Z"}, "message": "Added a task wakeup callback. Closes #599.\n\nThe callback happens when a task moves from the \"blocked\" state to the\n\"running\" state. The callback is also inherited by child tasks. There\nis currently only a native API.\n\nThis code hasn't been heavily exercised yet.", "tree": {"sha": "807d489bf1280b0b9c6b4ccbc4a5dc3e186513ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/807d489bf1280b0b9c6b4ccbc4a5dc3e186513ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "html_url": "https://github.com/rust-lang/rust/commit/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/comments", "author": null, "committer": null, "parents": [{"sha": "bbdba21b1f3c7dfc4c0bac3525cc35939ae8ca4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbdba21b1f3c7dfc4c0bac3525cc35939ae8ca4c", "html_url": "https://github.com/rust-lang/rust/commit/bbdba21b1f3c7dfc4c0bac3525cc35939ae8ca4c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "00368205de7c94b40607794dd2faf32190c794e8", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "patch": "@@ -291,8 +291,10 @@ rust_scheduler::create_task(rust_task *spawner, const char *name) {\n         new (this->kernel) rust_task (this, &newborn_tasks, spawner, name);\n     DLOG(this, task, \"created task: \" PTR \", spawner: %s, name: %s\",\n                         task, spawner ? spawner->name : \"null\", name);\n-    if(spawner)\n+    if(spawner) {\n         task->pin(spawner->pinned_on);\n+        task->on_wakeup(spawner->_on_wakeup);\n+    }\n     newborn_tasks.append(task);\n     return task;\n }"}, {"sha": "87492600524638df0d12b5c83d21143db5b9d991", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "patch": "@@ -73,7 +73,8 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     running_on(-1),\n     pinned_on(-1),\n     local_region(&sched->srv->local_region),\n-    synchronized_region(&sched->srv->synchronized_region)\n+    synchronized_region(&sched->srv->synchronized_region),\n+    _on_wakeup(NULL)\n {\n     LOGPTR(sched, \"new task\", (uintptr_t)this);\n     DLOG(sched, task, \"sizeof(task) = %d (0x%x)\", sizeof *this, sizeof *this);\n@@ -431,6 +432,10 @@ rust_task::wakeup(rust_cond *from) {\n     I(sched, cond == from);\n     cond = NULL;\n     cond_name = \"none\";\n+\n+    if(_on_wakeup) {\n+        _on_wakeup->on_wakeup();\n+    }\n }\n \n void\n@@ -541,6 +546,10 @@ void rust_task::unpin() {\n     pinned_on = -1;\n }\n \n+void rust_task::on_wakeup(rust_task::wakeup_callback *callback) {\n+    _on_wakeup = callback;\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "29da8d827235caea34da125c118a434e6f64ba04", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/bc5d6aefdabc2ee928cb0599c5a8c73799f191ef/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=bc5d6aefdabc2ee928cb0599c5a8c73799f191ef", "patch": "@@ -83,6 +83,13 @@ rust_task : public maybe_proxy<rust_task>,\n     memory_region local_region;\n     memory_region synchronized_region;\n \n+    class wakeup_callback {\n+    public:\n+        virtual void on_wakeup() = 0;\n+    };\n+\n+    wakeup_callback *_on_wakeup;\n+\n     // Only a pointer to 'name' is kept, so it must live as long as this task.\n     rust_task(rust_scheduler *sched,\n               rust_task_list *state,\n@@ -156,6 +163,8 @@ rust_task : public maybe_proxy<rust_task>,\n     void pin();\n     void pin(int id);\n     void unpin();\n+\n+    void on_wakeup(wakeup_callback *callback);\n };\n \n //"}]}