{"sha": "29185844c48499278b4a713e9a40f1a6d0437eba", "node_id": "C_kwDOAAsO6NoAKDI5MTg1ODQ0YzQ4NDk5Mjc4YjRhNzEzZTlhNDBmMWE2ZDA0MzdlYmE", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-02T09:40:39Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-02-07T20:27:09Z"}, "message": "Add a flag enabling drop range tracking in generators", "tree": {"sha": "183bd78201acbe21f69cfae00199576bca5132b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183bd78201acbe21f69cfae00199576bca5132b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29185844c48499278b4a713e9a40f1a6d0437eba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29185844c48499278b4a713e9a40f1a6d0437eba", "html_url": "https://github.com/rust-lang/rust/commit/29185844c48499278b4a713e9a40f1a6d0437eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29185844c48499278b4a713e9a40f1a6d0437eba/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f52c31840df7ec9c9350baff51a8964b20b5e1ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52c31840df7ec9c9350baff51a8964b20b5e1ba", "html_url": "https://github.com/rust-lang/rust/commit/f52c31840df7ec9c9350baff51a8964b20b5e1ba"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "e5e467030826fc786d44107aa229b390b4237d45", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=29185844c48499278b4a713e9a40f1a6d0437eba", "patch": "@@ -730,6 +730,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(debug_info_for_profiling, true);\n     tracked!(debug_macros, true);\n     tracked!(dep_info_omit_d_target, true);\n+    tracked!(drop_tracking, true);\n     tracked!(dual_proc_macros, true);\n     tracked!(fewer_names, Some(true));\n     tracked!(force_unstable_if_unmarked, true);"}, {"sha": "c490872a0b424ed790a2e16df376b514b537c187", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=29185844c48499278b4a713e9a40f1a6d0437eba", "patch": "@@ -1173,6 +1173,8 @@ options! {\n     dont_buffer_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n         \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting) \\\n         (default: no)\"),\n+    drop_tracking: bool = (false, parse_bool, [TRACKED],\n+        \"enables drop tracking in generators (default: no)\"),\n     dual_proc_macros: bool = (false, parse_bool, [TRACKED],\n         \"load proc macros for both target and host, but only link to the target (default: no)\"),\n     dump_dep_graph: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "90da74e89d84b58f3e7b3352865985675bb2a4e1", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=29185844c48499278b4a713e9a40f1a6d0437eba", "patch": "@@ -22,11 +22,6 @@ use tracing::debug;\n \n mod drop_ranges;\n \n-// FIXME(eholk): This flag is here to give a quick way to disable drop tracking in case we find\n-// unexpected breakages while it's still new. It should be removed before too long. For example,\n-// see #93161.\n-const ENABLE_DROP_TRACKING: bool = false;\n-\n struct InteriorVisitor<'a, 'tcx> {\n     fcx: &'a FnCtxt<'a, 'tcx>,\n     types: FxIndexSet<ty::GeneratorInteriorTypeCause<'tcx>>,\n@@ -82,7 +77,7 @@ impl<'a, 'tcx> InteriorVisitor<'a, 'tcx> {\n                                 yield_data.expr_and_pat_count, self.expr_count, source_span\n                             );\n \n-                            if ENABLE_DROP_TRACKING\n+                            if self.fcx.sess().opts.debugging_opts.drop_tracking\n                                 && self\n                                     .drop_ranges\n                                     .is_dropped_at(hir_id, yield_data.expr_and_pat_count)"}, {"sha": "1f7db877bea99b19f0332d79346df5d25745496d", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29185844c48499278b4a713e9a40f1a6d0437eba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs?ref=29185844c48499278b4a713e9a40f1a6d0437eba", "patch": "@@ -37,7 +37,7 @@ pub fn compute_drop_ranges<'a, 'tcx>(\n     def_id: DefId,\n     body: &'tcx Body<'tcx>,\n ) -> DropRanges {\n-    if super::ENABLE_DROP_TRACKING {\n+    if fcx.sess().opts.debugging_opts.drop_tracking {\n         let consumed_borrowed_places = find_consumed_and_borrowed(fcx, def_id, body);\n \n         let num_exprs = fcx.tcx.region_scope_tree(def_id).body_expr_count(body.id()).unwrap_or(0);"}]}