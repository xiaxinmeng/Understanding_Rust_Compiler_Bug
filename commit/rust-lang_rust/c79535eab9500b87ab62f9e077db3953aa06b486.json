{"sha": "c79535eab9500b87ab62f9e077db3953aa06b486", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OTUzNWVhYjk1MDBiODdhYjYyZjllMDc3ZGIzOTUzYWEwNmI0ODY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-16T14:29:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T08:56:48Z"}, "message": "remove some unused types from the tests", "tree": {"sha": "0abe93cfb7c9d3106d77487b7e766ea436c466ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0abe93cfb7c9d3106d77487b7e766ea436c466ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c79535eab9500b87ab62f9e077db3953aa06b486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c79535eab9500b87ab62f9e077db3953aa06b486", "html_url": "https://github.com/rust-lang/rust/commit/c79535eab9500b87ab62f9e077db3953aa06b486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c79535eab9500b87ab62f9e077db3953aa06b486/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27e649537770ba6631f3347974e3ae7e082adfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27e649537770ba6631f3347974e3ae7e082adfe", "html_url": "https://github.com/rust-lang/rust/commit/b27e649537770ba6631f3347974e3ae7e082adfe"}], "stats": {"total": 31, "additions": 6, "deletions": 25}, "files": [{"sha": "b20d614b3036bbe620d873ff5dedcc311d0d11ff", "filename": "src/test/ui/issues/issue-27060-rpass.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27060-rpass.rs?ref=c79535eab9500b87ab62f9e077db3953aa06b486", "patch": "@@ -7,19 +7,10 @@ pub struct Good {\n     aligned: [u8; 32],\n }\n \n-#[repr(packed)]\n-pub struct JustArray {\n-    array: [u32]\n-}\n-\n // kill this test when that turns to a hard error\n #[allow(safe_packed_borrows)]\n fn main() {\n-    let good = Good {\n-        data: &0,\n-        data2: [&0, &0],\n-        aligned: [0; 32]\n-    };\n+    let good = Good { data: &0, data2: [&0, &0], aligned: [0; 32] };\n \n     unsafe {\n         let _ = &good.data; // ok"}, {"sha": "78f2022ed38df6c8bf6143fb774a96b471a12eee", "filename": "src/test/ui/issues/issue-27060.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27060.rs?ref=c79535eab9500b87ab62f9e077db3953aa06b486", "patch": "@@ -5,11 +5,6 @@ pub struct Good {\n     aligned: [u8; 32],\n }\n \n-#[repr(packed)]\n-pub struct JustArray {\n-    array: [u32]\n-}\n-\n #[deny(safe_packed_borrows)]\n fn main() {\n     let good = Good {"}, {"sha": "d14ae4d41d5c52d6526acfd4b8bd835542ec0d05", "filename": "src/test/ui/issues/issue-27060.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr?ref=c79535eab9500b87ab62f9e077db3953aa06b486", "patch": "@@ -1,11 +1,11 @@\n error: borrow of packed field is unsafe and requires unsafe function or block (error E0133)\n-  --> $DIR/issue-27060.rs:26:13\n+  --> $DIR/issue-27060.rs:21:13\n    |\n LL |     let _ = &good.data;\n    |             ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-27060.rs:13:8\n+  --> $DIR/issue-27060.rs:8:8\n    |\n LL | #[deny(safe_packed_borrows)]\n    |        ^^^^^^^^^^^^^^^^^^^\n@@ -14,7 +14,7 @@ LL | #[deny(safe_packed_borrows)]\n    = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n \n error: borrow of packed field is unsafe and requires unsafe function or block (error E0133)\n-  --> $DIR/issue-27060.rs:28:13\n+  --> $DIR/issue-27060.rs:23:13\n    |\n LL |     let _ = &good.data2[0];\n    |             ^^^^^^^^^^^^^^"}, {"sha": "c684fd62ee345d086e1917eacbb06a4ad0e564dd", "filename": "src/test/ui/lint/packed_reference.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs?ref=c79535eab9500b87ab62f9e077db3953aa06b486", "patch": "@@ -7,11 +7,6 @@ pub struct Good {\n     aligned: [u8; 32],\n }\n \n-#[repr(packed)]\n-pub struct JustArray {\n-    array: [u32],\n-}\n-\n fn main() {\n     unsafe {\n         let good = Good { data: &0, data2: [&0, &0], aligned: [0; 32] };"}, {"sha": "428f4b66944ec9d1f17c14e8e702e0b3960b1126", "filename": "src/test/ui/lint/packed_reference.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c79535eab9500b87ab62f9e077db3953aa06b486/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr?ref=c79535eab9500b87ab62f9e077db3953aa06b486", "patch": "@@ -1,5 +1,5 @@\n error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:19:17\n+  --> $DIR/packed_reference.rs:14:17\n    |\n LL |         let _ = &good.data;\n    |                 ^^^^^^^^^^\n@@ -12,7 +12,7 @@ LL | #![deny(packed_references)]\n    = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n \n error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:20:17\n+  --> $DIR/packed_reference.rs:15:17\n    |\n LL |         let _ = &good.data2[0];\n    |                 ^^^^^^^^^^^^^^"}]}