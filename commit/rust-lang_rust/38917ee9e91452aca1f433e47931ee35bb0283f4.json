{"sha": "38917ee9e91452aca1f433e47931ee35bb0283f4", "node_id": "C_kwDOAAsO6NoAKDM4OTE3ZWU5ZTkxNDUyYWNhMWY0MzNlNDc5MzFlZTM1YmIwMjgzZjQ", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-01-14T23:31:32Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-01-14T23:31:32Z"}, "message": "Mention the lack of `windows_mut` in `windows`", "tree": {"sha": "e19d048af0dcbc82b51c2047bee64b72f885de1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e19d048af0dcbc82b51c2047bee64b72f885de1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38917ee9e91452aca1f433e47931ee35bb0283f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38917ee9e91452aca1f433e47931ee35bb0283f4", "html_url": "https://github.com/rust-lang/rust/commit/38917ee9e91452aca1f433e47931ee35bb0283f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38917ee9e91452aca1f433e47931ee35bb0283f4/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfffe406fbcabb37b95779f2d252c4a277191e0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfffe406fbcabb37b95779f2d252c4a277191e0d", "html_url": "https://github.com/rust-lang/rust/commit/bfffe406fbcabb37b95779f2d252c4a277191e0d"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "340c6745853dffe884f0456c739f2ff9577893bc", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38917ee9e91452aca1f433e47931ee35bb0283f4/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38917ee9e91452aca1f433e47931ee35bb0283f4/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=38917ee9e91452aca1f433e47931ee35bb0283f4", "patch": "@@ -781,6 +781,22 @@ impl<T> [T] {\n     /// let mut iter = slice.windows(4);\n     /// assert!(iter.next().is_none());\n     /// ```\n+    ///\n+    /// There's no `windows_mut`, as that existing would let safe code violate the\n+    /// \"only one `&mut` at a time to the same thing\" rule.  However, you can sometimes\n+    /// use [`Cell::as_slice_of_cells`](crate::cell::Cell::as_slice_of_cells) in\n+    /// conjunction with `windows` to accomplish something similar:\n+    /// ```\n+    /// use std::cell::Cell;\n+    ///\n+    /// let mut array = ['R', 'u', 's', 't', ' ', '2', '0', '1', '5'];\n+    /// let slice = &mut array[..];\n+    /// let slice_of_cells: &[Cell<char>] = Cell::from_mut(slice).as_slice_of_cells();\n+    /// for w in slice_of_cells.windows(3) {\n+    ///     Cell::swap(&w[0], &w[2]);\n+    /// }\n+    /// assert_eq!(array, ['s', 't', ' ', '2', '0', '1', '5', 'u', 'R']);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn windows(&self, size: usize) -> Windows<'_, T> {"}]}