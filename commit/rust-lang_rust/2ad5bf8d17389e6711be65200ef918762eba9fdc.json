{"sha": "2ad5bf8d17389e6711be65200ef918762eba9fdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZDViZjhkMTczODllNjcxMWJlNjUyMDBlZjkxODc2MmViYTlmZGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-21T08:50:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-21T08:50:47Z"}, "message": "Merge #5471\n\n5471: Typo r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "8a84cbc26f0c1013f627357dcd8f9e0ae310e8fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a84cbc26f0c1013f627357dcd8f9e0ae310e8fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ad5bf8d17389e6711be65200ef918762eba9fdc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFqxnCRBK7hj4Ov3rIwAAdHIIAJ2Nw4ApjM9yUeXwyky61zxt\nKTrjA70ZfM+EbOXFGJLuhRvBdiuhS4SKfoaSp0zlKxji6ihyXqJPNGjUWMzPwAGm\nGqbD4rvg58egr5Z782zOIG3+97WIougpDj+K/Foz3m+rHoLdUuJs0Jo0C2eGlUPm\nqVGtXIqu/aLCrkPD82JvC/DyLIGGgany9FBW/DQ3q3UyiVUg40ueGVDCf5xscViz\nNIPG2ISRRQRSEcPxzkAoNdwCmGh7XEM4seJlUUHDrNw4HdoUKNM03WCyWAYRkT/c\n9el+qd0zOq9g9IFPnwtDyGYE3/5AGuxVmtn2RrdBIBpmTGHqgNtr8xJNxhoQQQM=\n=BP3r\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a84cbc26f0c1013f627357dcd8f9e0ae310e8fe\nparent 99b8140d91c9da82f3de0c2522111ee82b7ed280\nparent 8f3fdf33155449f2d6d35f3f05099a59b259bd42\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595321447 +0000\ncommitter GitHub <noreply@github.com> 1595321447 +0000\n\nMerge #5471\n\n5471: Typo r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad5bf8d17389e6711be65200ef918762eba9fdc", "html_url": "https://github.com/rust-lang/rust/commit/2ad5bf8d17389e6711be65200ef918762eba9fdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ad5bf8d17389e6711be65200ef918762eba9fdc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b8140d91c9da82f3de0c2522111ee82b7ed280", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b8140d91c9da82f3de0c2522111ee82b7ed280", "html_url": "https://github.com/rust-lang/rust/commit/99b8140d91c9da82f3de0c2522111ee82b7ed280"}, {"sha": "8f3fdf33155449f2d6d35f3f05099a59b259bd42", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3fdf33155449f2d6d35f3f05099a59b259bd42", "html_url": "https://github.com/rust-lang/rust/commit/8f3fdf33155449f2d6d35f3f05099a59b259bd42"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ad376ad18585d493e94e67db6563aa4e96fb8a7e", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ad5bf8d17389e6711be65200ef918762eba9fdc/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad5bf8d17389e6711be65200ef918762eba9fdc/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=2ad5bf8d17389e6711be65200ef918762eba9fdc", "patch": "@@ -22,7 +22,7 @@ pub use cargo_metadata::diagnostic::{\n pub enum FlycheckConfig {\n     CargoCommand {\n         command: String,\n-        target_tripple: Option<String>,\n+        target_triple: Option<String>,\n         all_targets: bool,\n         all_features: bool,\n         features: Vec<String>,\n@@ -179,7 +179,7 @@ impl FlycheckActor {\n         let mut cmd = match &self.config {\n             FlycheckConfig::CargoCommand {\n                 command,\n-                target_tripple,\n+                target_triple,\n                 all_targets,\n                 all_features,\n                 extra_args,\n@@ -190,7 +190,7 @@ impl FlycheckActor {\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n                     .arg(self.workspace_root.join(\"Cargo.toml\"));\n \n-                if let Some(target) = target_tripple {\n+                if let Some(target) = target_triple {\n                     cmd.args(&[\"--target\", target.as_str()]);\n                 }\n                 if *all_targets {"}, {"sha": "fec4feee529b2346eb4893667c746ca847185215", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ad5bf8d17389e6711be65200ef918762eba9fdc/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad5bf8d17389e6711be65200ef918762eba9fdc/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=2ad5bf8d17389e6711be65200ef918762eba9fdc", "patch": "@@ -148,7 +148,7 @@ impl Config {\n             rustfmt: RustfmtConfig::Rustfmt { extra_args: Vec::new() },\n             flycheck: Some(FlycheckConfig::CargoCommand {\n                 command: \"check\".to_string(),\n-                target_tripple: None,\n+                target_triple: None,\n                 all_targets: true,\n                 all_features: false,\n                 extra_args: Vec::new(),\n@@ -224,7 +224,7 @@ impl Config {\n                 }\n                 Some(_) | None => FlycheckConfig::CargoCommand {\n                     command: data.checkOnSave_command,\n-                    target_tripple: data.checkOnSave_target.or(data.cargo_target),\n+                    target_triple: data.checkOnSave_target.or(data.cargo_target),\n                     all_targets: data.checkOnSave_allTargets,\n                     all_features: data.checkOnSave_allFeatures.unwrap_or(data.cargo_allFeatures),\n                     features: data.checkOnSave_features.unwrap_or(data.cargo_features),"}]}