{"sha": "8f11da4bfc892c063dbb9109a286178e842d0b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMTFkYTRiZmM4OTJjMDYzZGJiOTEwOWEyODYxNzhlODQyZDBiNTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-13T04:26:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-13T04:26:57Z"}, "message": "Rollup merge of #57508 - DebugSteven:inline-extern, r=GuillaumeGomez\n\nrustdoc: Allow inlining of reexported crates and crate items\n\nFixes #46296\n\nThis PR checks for when a `pub extern crate` statement has a `#[doc(inline)]` attribute & inlines its contents. Code is based off of the inlining statements for `pub use` statements.", "tree": {"sha": "2db12dd0ba530d2d4723cec4eae7405b809d3488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2db12dd0ba530d2d4723cec4eae7405b809d3488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f11da4bfc892c063dbb9109a286178e842d0b52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcOr4RCRBK7hj4Ov3rIwAAdHIIAFjylitbB2hHnyok75uypNfN\nCT4Qeq6L0vL/1bbh2TktBPu2gXyOnYuFundDRj0M+zK9YxEdmVaqfaN5fsYdTpKS\nPavd5CxmVVNj9shZsP99AoddDj20mSPdzPqVUeuFGenvZHxhXBzaxvGh1xEFwrsI\nTkN3UUVupQ/XDU7MX6xyvFHFZBmLXYikBWZaPZ/0BeLQNjeer1O0Biud8tURJXqW\n4xZtyTX+tqoCaIbN3KXKtWs5aaEtAV5dTGYJZnFvMpGf2ghQQ05AJu9unPtK4MrH\n9rdkWf1NYlBWI3yAA9V8BEprTWZ+joFTxmRL4gk0OixgPdaBJIuJOolW9+PduiA=\n=u9fD\n-----END PGP SIGNATURE-----\n", "payload": "tree 2db12dd0ba530d2d4723cec4eae7405b809d3488\nparent ce448f364a0f9180430f55a45287b7cdd5a98ef0\nparent ca47808479f7b5eccdbb595c7769ea6009db9a9c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547353617 +0100\ncommitter GitHub <noreply@github.com> 1547353617 +0100\n\nRollup merge of #57508 - DebugSteven:inline-extern, r=GuillaumeGomez\n\nrustdoc: Allow inlining of reexported crates and crate items\n\nFixes #46296\n\nThis PR checks for when a `pub extern crate` statement has a `#[doc(inline)]` attribute & inlines its contents. Code is based off of the inlining statements for `pub use` statements.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f11da4bfc892c063dbb9109a286178e842d0b52", "html_url": "https://github.com/rust-lang/rust/commit/8f11da4bfc892c063dbb9109a286178e842d0b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f11da4bfc892c063dbb9109a286178e842d0b52/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce448f364a0f9180430f55a45287b7cdd5a98ef0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce448f364a0f9180430f55a45287b7cdd5a98ef0", "html_url": "https://github.com/rust-lang/rust/commit/ce448f364a0f9180430f55a45287b7cdd5a98ef0"}, {"sha": "ca47808479f7b5eccdbb595c7769ea6009db9a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca47808479f7b5eccdbb595c7769ea6009db9a9c", "html_url": "https://github.com/rust-lang/rust/commit/ca47808479f7b5eccdbb595c7769ea6009db9a9c"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "6eea95b61c99051e5652a028c4639bebcc283c37", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=8f11da4bfc892c063dbb9109a286178e842d0b52", "patch": "@@ -587,7 +587,7 @@ impl Clean<Item> for doctree::Module {\n         let attrs = self.attrs.clean(cx);\n \n         let mut items: Vec<Item> = vec![];\n-        items.extend(self.extern_crates.iter().map(|x| x.clean(cx)));\n+        items.extend(self.extern_crates.iter().flat_map(|x| x.clean(cx)));\n         items.extend(self.imports.iter().flat_map(|x| x.clean(cx)));\n         items.extend(self.structs.iter().map(|x| x.clean(cx)));\n         items.extend(self.unions.iter().map(|x| x.clean(cx)));\n@@ -3503,9 +3503,30 @@ fn build_deref_target_impls(cx: &DocContext,\n     }\n }\n \n-impl Clean<Item> for doctree::ExternCrate {\n-    fn clean(&self, cx: &DocContext) -> Item {\n-        Item {\n+impl Clean<Vec<Item>> for doctree::ExternCrate {\n+    fn clean(&self, cx: &DocContext) -> Vec<Item> {\n+\n+        let please_inline = self.vis.node.is_pub() && self.attrs.iter().any(|a| {\n+            a.name() == \"doc\" && match a.meta_item_list() {\n+                Some(l) => attr::list_contains_name(&l, \"inline\"),\n+                None => false,\n+            }\n+        });\n+\n+        if please_inline {\n+            let mut visited = FxHashSet::default();\n+\n+            let def = Def::Mod(DefId {\n+                krate: self.cnum,\n+                index: CRATE_DEF_INDEX,\n+            });\n+\n+            if let Some(items) = inline::try_inline(cx, def, self.name, &mut visited) {\n+                return items;\n+            }\n+        }\n+\n+        vec![Item {\n             name: None,\n             attrs: self.attrs.clean(cx),\n             source: self.whence.clean(cx),\n@@ -3514,7 +3535,7 @@ impl Clean<Item> for doctree::ExternCrate {\n             stability: None,\n             deprecation: None,\n             inner: ExternCrateItem(self.name.clean(cx), self.path.clone())\n-        }\n+        }]\n     }\n }\n "}, {"sha": "8c89c8d6c76c55b4d1d7d235bc98e537e7c13e0e", "filename": "src/test/rustdoc/auxiliary/pub-extern-crate.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-extern-crate.rs?ref=8f11da4bfc892c063dbb9109a286178e842d0b52", "patch": "@@ -0,0 +1,2 @@\n+#![crate_name = \"inner\"]\n+pub struct SomeStruct;"}, {"sha": "26747a4d1aca5f12b19319ba7c0dee4cb7349659", "filename": "src/test/rustdoc/pub-extern-crate.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Ftest%2Frustdoc%2Fpub-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f11da4bfc892c063dbb9109a286178e842d0b52/src%2Ftest%2Frustdoc%2Fpub-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fpub-extern-crate.rs?ref=8f11da4bfc892c063dbb9109a286178e842d0b52", "patch": "@@ -0,0 +1,9 @@\n+// aux-build:pub-extern-crate.rs\n+\n+// @has pub_extern_crate/index.html\n+// @!has - '//code' 'pub extern crate inner'\n+// @has - '//a/@href' 'inner/index.html'\n+// @has pub_extern_crate/inner/index.html\n+// @has pub_extern_crate/inner/struct.SomeStruct.html\n+#[doc(inline)]\n+pub extern crate inner;"}]}