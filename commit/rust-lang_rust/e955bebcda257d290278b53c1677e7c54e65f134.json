{"sha": "e955bebcda257d290278b53c1677e7c54e65f134", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NTViZWJjZGEyNTdkMjkwMjc4YjUzYzE2NzdlN2M1NGU2NWYxMzQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-07-02T12:14:59Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-07-02T12:14:59Z"}, "message": "Remove render-redirect-pages option in rustdoc", "tree": {"sha": "b7e2774e571f704aedf1b4bc0696d3fa7fd0d4a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7e2774e571f704aedf1b4bc0696d3fa7fd0d4a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e955bebcda257d290278b53c1677e7c54e65f134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e955bebcda257d290278b53c1677e7c54e65f134", "html_url": "https://github.com/rust-lang/rust/commit/e955bebcda257d290278b53c1677e7c54e65f134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e955bebcda257d290278b53c1677e7c54e65f134/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2962027721b8dc700de339350f96b284c15fcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/af2962027721b8dc700de339350f96b284c15fcd", "html_url": "https://github.com/rust-lang/rust/commit/af2962027721b8dc700de339350f96b284c15fcd"}], "stats": {"total": 87, "additions": 1, "deletions": 86}, "files": [{"sha": "8c56cf1cb3414bb1508114f63ce389b9a4fddc20", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -13,7 +13,6 @@ fn main() {\n     let libdir = env::var_os(\"RUSTDOC_LIBDIR\").expect(\"RUSTDOC_LIBDIR was not set\");\n     let stage = env::var(\"RUSTC_STAGE\").expect(\"RUSTC_STAGE was not set\");\n     let sysroot = env::var_os(\"RUSTC_SYSROOT\").expect(\"RUSTC_SYSROOT was not set\");\n-    let mut has_unstable = false;\n \n     use std::str::FromStr;\n \n@@ -55,22 +54,10 @@ fn main() {\n         cmd.arg(\"--crate-version\").arg(version);\n     }\n \n-    // Needed to be able to run all rustdoc tests.\n-    if env::var_os(\"RUSTDOC_GENERATE_REDIRECT_PAGES\").is_some() {\n-        // This \"unstable-options\" can be removed when `--generate-redirect-pages` is stabilized\n-        if !has_unstable {\n-            cmd.arg(\"-Z\").arg(\"unstable-options\");\n-        }\n-        cmd.arg(\"--generate-redirect-pages\");\n-        has_unstable = true;\n-    }\n-\n     // Needed to be able to run all rustdoc tests.\n     if let Some(ref x) = env::var_os(\"RUSTDOC_RESOURCE_SUFFIX\") {\n         // This \"unstable-options\" can be removed when `--resource-suffix` is stabilized\n-        if !has_unstable {\n-            cmd.arg(\"-Z\").arg(\"unstable-options\");\n-        }\n+        cmd.arg(\"-Z\").arg(\"unstable-options\");\n         cmd.arg(\"--resource-suffix\").arg(x);\n     }\n "}, {"sha": "4c6f69fdbabd8f0413842c7e41759d5b52f9f80a", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -451,7 +451,6 @@ impl Step for Std {\n                 .arg(\"--markdown-css\")\n                 .arg(\"rust.css\")\n                 .arg(\"--markdown-no-toc\")\n-                .arg(\"--generate-redirect-pages\")\n                 .arg(\"-Z\")\n                 .arg(\"unstable-options\")\n                 .arg(\"--resource-suffix\")"}, {"sha": "14a6f3c89a3c9486560bb7da93af8f33caba8ea0", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -242,8 +242,6 @@ pub struct RenderOptions {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     pub generate_search_filter: bool,\n-    /// Option (disabled by default) to generate files used by RLS and some other tools.\n-    pub generate_redirect_pages: bool,\n     /// Document items that have lower than `pub` visibility.\n     pub document_private: bool,\n     /// Document items that have `doc(hidden)`.\n@@ -528,7 +526,6 @@ impl Options {\n         let static_root_path = matches.opt_str(\"static-root-path\");\n         let generate_search_filter = !matches.opt_present(\"disable-per-crate-search\");\n         let persist_doctests = matches.opt_str(\"persist-doctests\").map(PathBuf::from);\n-        let generate_redirect_pages = matches.opt_present(\"generate-redirect-pages\");\n         let test_builder = matches.opt_str(\"test-builder\").map(PathBuf::from);\n         let codegen_options_strs = matches.opt_strs(\"C\");\n         let debugging_options_strs = matches.opt_strs(\"Z\");\n@@ -592,7 +589,6 @@ impl Options {\n                 markdown_css,\n                 markdown_playground_url,\n                 generate_search_filter,\n-                generate_redirect_pages,\n                 document_private,\n                 document_hidden,\n             },"}, {"sha": "cc78b4682d231a9d6431a818152fdab3ab34e378", "filename": "src/librustdoc/html/item_type.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -154,47 +154,10 @@ impl ItemType {\n             ItemType::TraitAlias => \"traitalias\",\n         }\n     }\n-\n-    pub fn name_space(&self) -> &'static str {\n-        match *self {\n-            ItemType::Struct\n-            | ItemType::Union\n-            | ItemType::Enum\n-            | ItemType::Module\n-            | ItemType::Typedef\n-            | ItemType::Trait\n-            | ItemType::Primitive\n-            | ItemType::AssocType\n-            | ItemType::OpaqueTy\n-            | ItemType::TraitAlias\n-            | ItemType::ForeignType => NAMESPACE_TYPE,\n-\n-            ItemType::ExternCrate\n-            | ItemType::Import\n-            | ItemType::Function\n-            | ItemType::Static\n-            | ItemType::Impl\n-            | ItemType::TyMethod\n-            | ItemType::Method\n-            | ItemType::StructField\n-            | ItemType::Variant\n-            | ItemType::Constant\n-            | ItemType::AssocConst => NAMESPACE_VALUE,\n-\n-            ItemType::Macro | ItemType::ProcAttribute | ItemType::ProcDerive => NAMESPACE_MACRO,\n-\n-            ItemType::Keyword => NAMESPACE_KEYWORD,\n-        }\n-    }\n }\n \n impl fmt::Display for ItemType {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"{}\", self.as_str())\n     }\n }\n-\n-pub const NAMESPACE_TYPE: &str = \"t\";\n-pub const NAMESPACE_VALUE: &str = \"v\";\n-pub const NAMESPACE_MACRO: &str = \"m\";\n-pub const NAMESPACE_KEYWORD: &str = \"k\";"}, {"sha": "69e3540ed625be77c49298ce2a26682fc823550d", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -195,8 +195,6 @@ crate struct SharedContext {\n     /// Optional path string to be used to load static files on output pages. If not set, uses\n     /// combinations of `../` to reach the documentation root.\n     pub static_root_path: Option<String>,\n-    /// Option disabled by default to generate files used by RLS and some other tools.\n-    pub generate_redirect_pages: bool,\n     /// The fs handle we are working with.\n     pub fs: DocFS,\n     /// The default edition used to parse doctests.\n@@ -468,7 +466,6 @@ pub fn run(\n         resource_suffix,\n         static_root_path,\n         generate_search_filter,\n-        generate_redirect_pages,\n         document_private,\n         ..\n     } = options;\n@@ -536,7 +533,6 @@ pub fn run(\n         themes,\n         resource_suffix,\n         static_root_path,\n-        generate_redirect_pages,\n         fs: DocFS::new(&errors),\n         edition,\n         codes: ErrorCodes::from(UnstableFeatures::from_environment().is_nightly_build()),\n@@ -1556,14 +1552,6 @@ impl Context {\n                 if !self.render_redirect_pages {\n                     all.append(full_path(self, &item), &item_type);\n                 }\n-                if self.shared.generate_redirect_pages {\n-                    // Redirect from a sane URL using the namespace to Rustdoc's\n-                    // URL for the page.\n-                    let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());\n-                    let redir_dst = self.dst.join(redir_name);\n-                    let v = layout::redirect(file_name);\n-                    self.shared.fs.write(&redir_dst, v.as_bytes())?;\n-                }\n                 // If the item is a macro, redirect from the old macro URL (with !)\n                 // to the new one (without).\n                 if item_type == ItemType::Macro {"}, {"sha": "8e2dd77cc115542ff779142ea76c9ac7e1b3f577", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -374,13 +374,6 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"PATH\",\n             )\n         }),\n-        unstable(\"generate-redirect-pages\", |o| {\n-            o.optflag(\n-                \"\",\n-                \"generate-redirect-pages\",\n-                \"Generate extra pages to support legacy URLs and tool links\",\n-            )\n-        }),\n         unstable(\"show-coverage\", |o| {\n             o.optflag(\n                 \"\","}, {"sha": "9dac49c6413d803ca7906b8b5dc11864a68e5625", "filename": "src/test/rustdoc/issue-19190.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-19190.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags:-Z unstable-options --generate-redirect-pages\n-\n use std::ops::Deref;\n \n pub struct Foo;\n@@ -15,7 +13,6 @@ impl Deref for Bar {\n     fn deref(&self) -> &Foo { loop {} }\n }\n \n-// @has issue_19190/Bar.t.html\n // @has issue_19190/struct.Bar.html\n // @has - '//*[@id=\"method.foo\"]//code' 'fn foo(&self)'\n // @has - '//*[@id=\"method.foo\"]' 'fn foo(&self)'"}, {"sha": "6de198453cd273d2fde91ceb7580d280a630987e", "filename": "src/test/rustdoc/structfields.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e955bebcda257d290278b53c1677e7c54e65f134/src%2Ftest%2Frustdoc%2Fstructfields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e955bebcda257d290278b53c1677e7c54e65f134/src%2Ftest%2Frustdoc%2Fstructfields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstructfields.rs?ref=e955bebcda257d290278b53c1677e7c54e65f134", "patch": "@@ -1,7 +1,3 @@\n-// compile-flags:-Z unstable-options --generate-redirect-pages\n-\n-// @has structfields/Foo.t.html\n-// @has - struct.Foo.html\n // @has structfields/struct.Foo.html\n pub struct Foo {\n     // @has - //pre \"pub a: ()\"\n@@ -16,17 +12,13 @@ pub struct Foo {\n     pub d: usize,\n }\n \n-// @has structfields/Bar.t.html\n-// @has - struct.Bar.html\n // @has structfields/struct.Bar.html\n pub struct Bar {\n     // @has - //pre \"pub a: ()\"\n     pub a: (),\n     // @!has - //pre \"// some fields omitted\"\n }\n \n-// @has structfields/Qux.t.html\n-// @has - enum.Qux.html\n // @has structfields/enum.Qux.html\n pub enum Qux {\n     Quz {"}]}