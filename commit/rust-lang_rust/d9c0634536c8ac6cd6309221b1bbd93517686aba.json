{"sha": "d9c0634536c8ac6cd6309221b1bbd93517686aba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YzA2MzQ1MzZjOGFjNmNkNjMwOTIyMWIxYmJkOTM1MTc2ODZhYmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T23:50:36Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T23:56:11Z"}, "message": "std: various additional language benchmarks in util.", "tree": {"sha": "2f74200543bb9347e1d7479bb7f4cf216e80421e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f74200543bb9347e1d7479bb7f4cf216e80421e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9c0634536c8ac6cd6309221b1bbd93517686aba", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c0634536c8ac6cd6309221b1bbd93517686aba", "html_url": "https://github.com/rust-lang/rust/commit/d9c0634536c8ac6cd6309221b1bbd93517686aba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9c0634536c8ac6cd6309221b1bbd93517686aba/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "html_url": "https://github.com/rust-lang/rust/commit/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "8fcfa083cb65cae8762c50091246d8753af6d7ac", "filename": "src/libstd/util.rs", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/d9c0634536c8ac6cd6309221b1bbd93517686aba/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c0634536c8ac6cd6309221b1bbd93517686aba/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=d9c0634536c8ac6cd6309221b1bbd93517686aba", "patch": "@@ -195,3 +195,68 @@ mod tests {\n         unsafe { assert_eq!(did_run, true); }\n     }\n }\n+\n+/// Completely miscellaneous language-construct benchmarks.\n+#[cfg(test)]\n+mod bench {\n+\n+    use extra::test::BenchHarness;\n+    use option::{Some,None};\n+\n+    // Static/dynamic method dispatch\n+\n+    struct Struct {\n+        field: int\n+    }\n+\n+    trait Trait {\n+        fn method(&self) -> int;\n+    }\n+\n+    impl Trait for Struct {\n+        fn method(&self) -> int {\n+            self.field\n+        }\n+    }\n+\n+    #[bench]\n+    fn trait_vtable_method_call(bh: &mut BenchHarness) {\n+        let s = Struct { field: 10 };\n+        let t = &s as &Trait;\n+        do bh.iter {\n+            t.method();\n+        }\n+    }\n+\n+    #[bench]\n+    fn trait_static_method_call(bh: &mut BenchHarness) {\n+        let s = Struct { field: 10 };\n+        do bh.iter {\n+            s.method();\n+        }\n+    }\n+\n+    // Overhead of various match forms\n+\n+    #[bench]\n+    fn match_option_some(bh: &mut BenchHarness) {\n+        let x = Some(10);\n+        do bh.iter {\n+            let _q = match x {\n+                Some(y) => y,\n+                None => 11\n+            };\n+        }\n+    }\n+\n+    #[bench]\n+    fn match_vec_pattern(bh: &mut BenchHarness) {\n+        let x = [1,2,3,4,5,6];\n+        do bh.iter {\n+            let _q = match x {\n+                [1,2,3,.._] => 10,\n+                _ => 11\n+            };\n+        }\n+    }\n+}"}]}