{"sha": "0be21b05d6811936a22d491f2cea4c7fe244ce2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZTIxYjA1ZDY4MTE5MzZhMjJkNDkxZjJjZWE0YzdmZTI0NGNlMmY=", "commit": {"author": {"name": "Francesco Zardi", "email": "frazar@users.noreply.github.com", "date": "2020-10-21T19:53:05Z"}, "committer": {"name": "Francesco Zardi", "email": "frazar@users.noreply.github.com", "date": "2020-10-21T19:53:05Z"}, "message": "Move safe intrinsic tests", "tree": {"sha": "e9d82a5ac0cdfcd5bd1e6269785c2083ee589403", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d82a5ac0cdfcd5bd1e6269785c2083ee589403"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0be21b05d6811936a22d491f2cea4c7fe244ce2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0be21b05d6811936a22d491f2cea4c7fe244ce2f", "html_url": "https://github.com/rust-lang/rust/commit/0be21b05d6811936a22d491f2cea4c7fe244ce2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0be21b05d6811936a22d491f2cea4c7fe244ce2f/comments", "author": {"login": "frazar", "id": 914950, "node_id": "MDQ6VXNlcjkxNDk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/914950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frazar", "html_url": "https://github.com/frazar", "followers_url": "https://api.github.com/users/frazar/followers", "following_url": "https://api.github.com/users/frazar/following{/other_user}", "gists_url": "https://api.github.com/users/frazar/gists{/gist_id}", "starred_url": "https://api.github.com/users/frazar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frazar/subscriptions", "organizations_url": "https://api.github.com/users/frazar/orgs", "repos_url": "https://api.github.com/users/frazar/repos", "events_url": "https://api.github.com/users/frazar/events{/privacy}", "received_events_url": "https://api.github.com/users/frazar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frazar", "id": 914950, "node_id": "MDQ6VXNlcjkxNDk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/914950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frazar", "html_url": "https://github.com/frazar", "followers_url": "https://api.github.com/users/frazar/followers", "following_url": "https://api.github.com/users/frazar/following{/other_user}", "gists_url": "https://api.github.com/users/frazar/gists{/gist_id}", "starred_url": "https://api.github.com/users/frazar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frazar/subscriptions", "organizations_url": "https://api.github.com/users/frazar/orgs", "repos_url": "https://api.github.com/users/frazar/repos", "events_url": "https://api.github.com/users/frazar/events{/privacy}", "received_events_url": "https://api.github.com/users/frazar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3aa44b01df7dd679adfe3afe55283cfed611508", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3aa44b01df7dd679adfe3afe55283cfed611508", "html_url": "https://github.com/rust-lang/rust/commit/f3aa44b01df7dd679adfe3afe55283cfed611508"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "4b354c4c145e53948d65d6e6cad28324f16f2115", "filename": "crates/hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0be21b05d6811936a22d491f2cea4c7fe244ce2f/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0be21b05d6811936a22d491f2cea4c7fe244ce2f/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=0be21b05d6811936a22d491f2cea4c7fe244ce2f", "patch": "@@ -437,23 +437,3 @@ fn assoc_item_macros() {\n         \"#]],\n     );\n }\n-\n-#[test]\n-fn safe_intrinsic() {\n-    check(\n-        r\"\n-        #![feature(core_intrinsics)]\n-\n-        fn reverse(input: u32) -> u32 {\n-            std::intrinsics::bitreverse(input)\n-        }\n-    \",\n-        expect![[r#\"\n-            inner attrs: Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"feature\"))] }, input: Some(TokenTree(SUBTREE () 0\n-              IDENT   core_intrinsics 1)) }]) }\n-\n-            top-level items:\n-            Function { name: Name(Text(\"reverse\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, has_body: true, is_unsafe: false, params: [Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"u32\"))] }, generic_args: [None] })], is_varargs: false, ret_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"u32\"))] }, generic_args: [None] }), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(0) }\n-        \"#]],\n-    );\n-}"}, {"sha": "2da9688cab0e0703f12444587fb8c9a372cb8932", "filename": "crates/hir_ty/src/diagnostics/unsafe_check.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0be21b05d6811936a22d491f2cea4c7fe244ce2f/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0be21b05d6811936a22d491f2cea4c7fe244ce2f/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs?ref=0be21b05d6811936a22d491f2cea4c7fe244ce2f", "patch": "@@ -199,6 +199,24 @@ fn main() {\n         let x = STATIC_MUT.a;\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn no_missing_unsafe_diagnostic_with_safe_intrinsic() {\n+        check_diagnostics(\n+            r#\"\n+extern \"rust-intrinsic\" {\n+    pub fn bitreverse(x: u32) -> u32; // Safe intrinsic\n+    pub fn floorf32(x: f32) -> f32; // Unsafe intrinsic\n+}\n+\n+fn main() {\n+    let _ = bitreverse(12);\n+    let _ = floorf32(12.0);\n+          //^^^^^^^^^^^^^^ This operation is unsafe and requires an unsafe function or block\n+}\n \"#,\n         );\n     }"}]}