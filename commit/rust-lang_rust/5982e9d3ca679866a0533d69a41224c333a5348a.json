{"sha": "5982e9d3ca679866a0533d69a41224c333a5348a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODJlOWQzY2E2Nzk4NjZhMDUzM2Q2OWE0MTIyNGMzMzNhNTM0OGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T09:25:57Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T09:25:57Z"}, "message": "downgrade some assertions to debug_ again", "tree": {"sha": "681f613a01cf679a64c621f0a9695e6b1a01dfb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681f613a01cf679a64c621f0a9695e6b1a01dfb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5982e9d3ca679866a0533d69a41224c333a5348a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5982e9d3ca679866a0533d69a41224c333a5348a", "html_url": "https://github.com/rust-lang/rust/commit/5982e9d3ca679866a0533d69a41224c333a5348a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5982e9d3ca679866a0533d69a41224c333a5348a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f568e72f336cd64fecb240c6aafbe4bf7ed4379", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f568e72f336cd64fecb240c6aafbe4bf7ed4379", "html_url": "https://github.com/rust-lang/rust/commit/6f568e72f336cd64fecb240c6aafbe4bf7ed4379"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "1df389d9c8beeeb645f991cc5af6f03ba60a2483", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5982e9d3ca679866a0533d69a41224c333a5348a/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5982e9d3ca679866a0533d69a41224c333a5348a/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=5982e9d3ca679866a0533d69a41224c333a5348a", "patch": "@@ -195,7 +195,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         kind: MemoryKind<M::MemoryKinds>,\n     ) -> Pointer<M::PointerTag> {\n         let id = self.tcx.alloc_map.lock().reserve();\n-        assert_ne!(\n+        debug_assert_ne!(\n             Some(kind),\n             M::STATIC_KIND.map(MemoryKind::Machine),\n             \"dynamically allocating static memory\""}, {"sha": "4f96cb698915d25146c45e2bff6d9528bf49e772", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5982e9d3ca679866a0533d69a41224c333a5348a/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5982e9d3ca679866a0533d69a41224c333a5348a/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=5982e9d3ca679866a0533d69a41224c333a5348a", "patch": "@@ -1130,10 +1130,12 @@ where\n         let layout = self.layout_of(ty)?;\n \n         // More sanity checks\n-        let (size, align) = self.read_size_and_align_from_vtable(vtable)?;\n-        assert_eq!(size, layout.size);\n-        // only ABI alignment is preserved\n-        assert_eq!(align, layout.align.abi);\n+        if cfg!(debug_assertions) {\n+            let (size, align) = self.read_size_and_align_from_vtable(vtable)?;\n+            assert_eq!(size, layout.size);\n+            // only ABI alignment is preserved\n+            assert_eq!(align, layout.align.abi);\n+        }\n \n         let mplace = MPlaceTy { mplace: MemPlace { meta: MemPlaceMeta::None, ..*mplace }, layout };\n         Ok((instance, mplace))"}]}