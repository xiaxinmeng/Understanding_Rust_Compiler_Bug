{"sha": "d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "node_id": "C_kwDOAAsO6NoAKGQyN2VjNmM4NmQwYzM0NjRiNWRhNzFjODZmMGRiNTNmZjU5MjQyYzA", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-05-23T15:44:05Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-05-24T13:26:52Z"}, "message": "Add flag for stricter checks on uninit/zeroed", "tree": {"sha": "2767f3c13783bb2f383a67514ded1941acb58152", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2767f3c13783bb2f383a67514ded1941acb58152"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "html_url": "https://github.com/rust-lang/rust/commit/d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d27ec6c86d0c3464b5da71c86f0db53ff59242c0/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5011ae46a14fa30fd247b51ffe71e0bab1a63d04", "url": "https://api.github.com/repos/rust-lang/rust/commits/5011ae46a14fa30fd247b51ffe71e0bab1a63d04", "html_url": "https://github.com/rust-lang/rust/commit/5011ae46a14fa30fd247b51ffe71e0bab1a63d04"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "6937e658ed5ee8a8abe7e5909637fe6611251905", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d27ec6c86d0c3464b5da71c86f0db53ff59242c0/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27ec6c86d0c3464b5da71c86f0db53ff59242c0/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "patch": "@@ -58,6 +58,7 @@ pub(crate) use llvm::codegen_llvm_intrinsic_call;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_span::symbol::{kw, sym, Symbol};\n+use rustc_target::abi::InitKind;\n \n use crate::prelude::*;\n use cranelift_codegen::ir::AtomicRmwOp;\n@@ -671,7 +672,12 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_zero_valid && !layout.might_permit_raw_init(fx, /*zero:*/ true) {\n+            if intrinsic == sym::assert_zero_valid\n+                && !layout.might_permit_raw_init(\n+                    fx,\n+                    InitKind::Zero,\n+                    fx.tcx.sess.opts.debugging_opts.strict_init_checks) {\n+\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,\n@@ -682,7 +688,12 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_uninit_valid && !layout.might_permit_raw_init(fx, /*zero:*/ false) {\n+            if intrinsic == sym::assert_uninit_valid\n+                && !layout.might_permit_raw_init(\n+                    fx,\n+                    InitKind::Uninit,\n+                    fx.tcx.sess.opts.debugging_opts.strict_init_checks) {\n+\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,"}]}