{"sha": "ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNGZiOTVkYzllMjM0ZDM1YTdhOTRmNmNkYzM3Y2I1MTAzYzM1ZWQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-01-11T12:37:08Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-01-17T15:49:32Z"}, "message": "Support clang-based run-make tests in rustbuild.", "tree": {"sha": "89c224e14b67476141c8bb6a79287b0f81e5da7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89c224e14b67476141c8bb6a79287b0f81e5da7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed", "html_url": "https://github.com/rust-lang/rust/commit/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b25105924a23f1070e916ce3bff4be5a7c9c58", "url": "https://api.github.com/repos/rust-lang/rust/commits/50b25105924a23f1070e916ce3bff4be5a7c9c58", "html_url": "https://github.com/rust-lang/rust/commit/50b25105924a23f1070e916ce3bff4be5a7c9c58"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "ff66c75dc8c65ff06d40134b8dc4003090990809", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ea4fb95dc9e234d35a7a94f6cdc37cb5103c35ed", "patch": "@@ -1106,13 +1106,13 @@ impl Step for Compiletest {\n                     }).to_string()\n             })\n         };\n-        let lldb_exe = if builder.config.lldb_enabled && !target.contains(\"emscripten\") {\n+        let (lldb_exe, clang_exe) =\n+            if builder.config.lldb_enabled && !target.contains(\"emscripten\") {\n             // Test against the lldb that was just built.\n-            builder.llvm_out(target)\n-                .join(\"bin\")\n-                .join(\"lldb\")\n+            (builder.llvm_out(target).join(\"bin\").join(\"lldb\"),\n+             builder.llvm_out(target).join(\"bin\").join(\"clang\"))\n         } else {\n-            PathBuf::from(\"lldb\")\n+            (PathBuf::from(\"lldb\"), PathBuf::from(\"clang\"))\n         };\n         let lldb_version = Command::new(&lldb_exe)\n             .arg(\"--version\")\n@@ -1127,6 +1127,31 @@ impl Step for Compiletest {\n             }\n         }\n \n+        let clang_version = Command::new(&clang_exe)\n+            .arg(\"--version\")\n+            .output()\n+            .map(|output| { String::from_utf8_lossy(&output.stdout).to_string() })\n+            .ok();\n+        if let Some(ref vers) = clang_version {\n+            cmd.arg(\"--clang-version\").arg(vers);\n+        }\n+\n+        if let Some(var) = env::var_os(\"RUSTBUILD_FORCE_CLANG_BASED_TESTS\") {\n+            match &var.to_string_lossy()[..] {\n+                \"1\" | \"yes\" | \"on\" => {\n+                    cmd.arg(\"--force-clang-based-tests\");\n+                }\n+                \"0\" | \"no\" | \"off\" => {\n+                    // Nothing to do.\n+                }\n+                other => {\n+                    // Let's make sure typos don't get unnoticed\n+                    panic!(\"Unrecognized option '{}' set in \\\n+                            RUSTBUILD_FORCE_CLANG_BASED_TESTS\", other);\n+                }\n+            }\n+        }\n+\n         // Get paths from cmd args\n         let paths = match &builder.config.cmd {\n             Subcommand::Test { ref paths, .. } => &paths[..],"}]}