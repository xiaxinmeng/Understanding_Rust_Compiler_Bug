{"sha": "8abd2931196beb4bea3133d32643c6634a13fa07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYmQyOTMxMTk2YmViNGJlYTMxMzNkMzI2NDNjNjYzNGExM2ZhMDc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-14T09:54:28Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-14T09:54:28Z"}, "message": "sysroot_flag is now used for more flags", "tree": {"sha": "5cccc9c8ad0f68e434507e211a7a484a1579ca62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cccc9c8ad0f68e434507e211a7a484a1579ca62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8abd2931196beb4bea3133d32643c6634a13fa07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXX9RUAAoJEFbW7qD8Z6xGOocQAKH9IqlFxxQQzj0A9Eh3C4Or\njiQdfo5J433g7dIu4wm4nGOoYhg2JLreJeZ+pit1ZWMjGcWjWqhxnybsmK1C6xW+\nuZzMcPOmLMsZDp7981kdTnBks7iLSVF9lRZJsQdmXauHmFv0XLUPOcLEeF3MDrEW\n12vN1EeHNKYGqFEAWx/r9GQKoGZnIPtal2TK2rFhSIT3dAw4RekSAWoBaBX/TmkG\ndyPuMJnjysO1QGb660rfHNqYHifTibvo8NkVZLM4vYOsUvPVn+KVKydBWxXIHlYT\nZbT4kucSrYZXz98tNG6SnlOR4mzGaGXMk0uv7hJH4Wou6UNlvgh8GdEDZupxrcgN\n5feDy1jeg5WBTKyFV0ERcgleQBOodq9N67w/OrzBJ8kuR0/Zf0wFS+czSYpH2gxL\n5gOXWdEtow4gQPlaeJgriEg+nY/lkrLOQWNWdk+YSJmMaxAc2RlYRsWi2iTPt+6v\neuUjCh6ydDTvxmv461/NA/1PgYzw23KCg2LrDQQ5nvHyM7KaLc1cgn4CjgDFRel7\nqZJkfTp3Hy9R6HlEYgJJK4pLnCg8pTFSePibpyWGBISa3w5ifxXZDzJpafoh96Wx\nbdTNAknFVmTmPZUUgSEQChvy+B6uO/rzM/iEegoGsOwrwD7F5PrLkMcxvZsBbht+\nlBzW27mvBDwzrAyOJQVz\n=w5j1\n-----END PGP SIGNATURE-----", "payload": "tree 5cccc9c8ad0f68e434507e211a7a484a1579ca62\nparent 1bd00e8cb4667afe5cec047f460e27e3e6664629\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465898068 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465898068 +0200\n\nsysroot_flag is now used for more flags"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8abd2931196beb4bea3133d32643c6634a13fa07", "html_url": "https://github.com/rust-lang/rust/commit/8abd2931196beb4bea3133d32643c6634a13fa07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8abd2931196beb4bea3133d32643c6634a13fa07/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bd00e8cb4667afe5cec047f460e27e3e6664629", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd00e8cb4667afe5cec047f460e27e3e6664629", "html_url": "https://github.com/rust-lang/rust/commit/1bd00e8cb4667afe5cec047f460e27e3e6664629"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "77cfc57db293d187f4c15b7863c7654cd5ac129d", "filename": "tests/compiletest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8abd2931196beb4bea3133d32643c6634a13fa07/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8abd2931196beb4bea3133d32643c6634a13fa07/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=8abd2931196beb4bea3133d32643c6634a13fa07", "patch": "@@ -15,20 +15,20 @@ fn run_mode(mode: &'static str) {\n             .expect(\"need to specify RUST_SYSROOT env var or use rustup or multirust\")\n             .to_owned(),\n     };\n-    let sysroot_flag = format!(\"--sysroot {} -Dwarnings\", sysroot);\n+    let flags = format!(\"--sysroot {} -Dwarnings\", sysroot);\n \n     // FIXME: read directories in sysroot/lib/rustlib and generate the test targets from that\n     let targets = &[\"x86_64-unknown-linux-gnu\", \"i686-unknown-linux-gnu\"];\n \n     for &target in targets {\n         let mut config = compiletest::default_config();\n-        config.host_rustcflags = Some(sysroot_flag.clone());\n+        config.host_rustcflags = Some(flags.clone());\n         config.mode = mode.parse().expect(\"Invalid mode\");\n         config.run_lib_path = format!(\"{}/lib/rustlib/{}/lib\", sysroot, target);\n         config.rustc_path = \"target/debug/miri\".into();\n         config.src_base = PathBuf::from(format!(\"tests/{}\", mode));\n         config.target = target.to_owned();\n-        config.target_rustcflags = Some(sysroot_flag.clone());\n+        config.target_rustcflags = Some(flags.clone());\n         compiletest::run_tests(&config);\n     }\n }"}]}