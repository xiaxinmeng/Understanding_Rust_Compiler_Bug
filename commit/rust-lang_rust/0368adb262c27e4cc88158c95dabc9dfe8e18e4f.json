{"sha": "0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "node_id": "C_kwDOAAsO6NoAKDAzNjhhZGIyNjJjMjdlNGNjODgxNThjOTVkYWJjOWRmZThlMThlNGY", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-01-18T09:23:50Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-01-18T14:53:24Z"}, "message": "Fix #107090, fix missing arguments for fluent", "tree": {"sha": "adbacc5382dc41948ebe60c374272653eeb68838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adbacc5382dc41948ebe60c374272653eeb68838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "html_url": "https://github.com/rust-lang/rust/commit/0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a41f889f563b2384c63c990b5423d201d62ebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/04a41f889f563b2384c63c990b5423d201d62ebd", "html_url": "https://github.com/rust-lang/rust/commit/04a41f889f563b2384c63c990b5423d201d62ebd"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "164d6d26d230d656f0896e69cf8269b9d8845aaa", "filename": "compiler/rustc_error_messages/locales/en-US/infer.ftl", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl?ref=0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "patch": "@@ -268,28 +268,28 @@ infer_but_calling_introduces = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$lifetime_kind ->\n-    [named] lifetime `{$lifetime}`\n-    *[anon] an anonymous lifetime `'_`\n-} but calling `{assoc_item}` introduces an implicit `'static` lifetime requirement\n+    [true] lifetime `{$lifetime}`\n+    *[false] an anonymous lifetime `'_`\n+} but calling `{$assoc_item}` introduces an implicit `'static` lifetime requirement\n     .label1 = {$has_lifetime ->\n-        [named] lifetime `{$lifetime}`\n-        *[anon] an anonymous lifetime `'_`\n+        [true] lifetime `{$lifetime}`\n+        *[false] an anonymous lifetime `'_`\n     }\n     .label2 = ...is used and required to live as long as `'static` here because of an implicit lifetime bound on the {$has_impl_path ->\n-        [named] `impl` of `{$impl_path}`\n-        *[anon] inherent `impl`\n+        [true] `impl` of `{$impl_path}`\n+        *[false] inherent `impl`\n     }\n \n infer_but_needs_to_satisfy = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$has_lifetime ->\n-    [named] lifetime `{$lifetime}`\n-    *[anon] an anonymous lifetime `'_`\n+    [true] lifetime `{$lifetime}`\n+    *[false] an anonymous lifetime `'_`\n } but it needs to satisfy a `'static` lifetime requirement\n     .influencer = this data with {$has_lifetime ->\n-        [named] lifetime `{$lifetime}`\n-        *[anon] an anonymous lifetime `'_`\n+        [true] lifetime `{$lifetime}`\n+        *[false] an anonymous lifetime `'_`\n     }...\n     .require = {$spans_empty ->\n         *[true] ...is used and required to live as long as `'static` here\n@@ -302,8 +302,8 @@ infer_more_targeted = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$has_lifetime ->\n-    [named] lifetime `{$lifetime}`\n-    *[anon] an anonymous lifetime `'_`\n+    [true] lifetime `{$lifetime}`\n+    *[false] an anonymous lifetime `'_`\n } but calling `{$ident}` introduces an implicit `'static` lifetime requirement\n \n infer_ril_introduced_here = `'static` requirement introduced here"}, {"sha": "8bf3a160abbb4aaf2f064fef5967b0f3b7b83e8b", "filename": "compiler/rustc_infer/src/errors/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs?ref=0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "patch": "@@ -927,6 +927,8 @@ pub struct ButNeedsToSatisfy {\n     #[subdiagnostic]\n     pub req_introduces_loc: Option<ReqIntroducedLocations>,\n \n+    pub has_param_name: bool,\n+    pub param_name: String,\n     pub spans_empty: bool,\n     pub has_lifetime: bool,\n     pub lifetime: String,"}, {"sha": "6a463583dfb0ff42573d3cbf0c308ef67fe434a1", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0368adb262c27e4cc88158c95dabc9dfe8e18e4f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=0368adb262c27e4cc88158c95dabc9dfe8e18e4f", "patch": "@@ -98,6 +98,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n         let sp = var_origin.span();\n         let return_sp = sub_origin.span();\n         let param = self.find_param_with_region(*sup_r, *sub_r)?;\n+        let simple_ident = param.param.pat.simple_ident();\n         let lifetime_name = if sup_r.has_name() { sup_r.to_string() } else { \"'_\".to_owned() };\n \n         let (mention_influencer, influencer_point) =\n@@ -187,7 +188,9 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n             req_introduces_loc: subdiag,\n \n             has_lifetime: sup_r.has_name(),\n-            lifetime: sup_r.to_string(),\n+            lifetime: lifetime_name.clone(),\n+            has_param_name: simple_ident.is_some(),\n+            param_name: simple_ident.map(|x| x.to_string()).unwrap_or_default(),\n             spans_empty,\n             bound,\n         };"}]}