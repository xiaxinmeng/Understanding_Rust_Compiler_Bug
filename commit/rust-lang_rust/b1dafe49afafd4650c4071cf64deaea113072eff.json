{"sha": "b1dafe49afafd4650c4071cf64deaea113072eff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZGFmZTQ5YWZhZmQ0NjUwYzQwNzFjZjY0ZGVhZWExMTMwNzJlZmY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-14T17:27:09Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-14T17:27:09Z"}, "message": "Get rid of more deprecated strs on non 64-bit linux platforms.", "tree": {"sha": "b99278682d222d064fdb3c86812b4040fc0ac82a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b99278682d222d064fdb3c86812b4040fc0ac82a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1dafe49afafd4650c4071cf64deaea113072eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1dafe49afafd4650c4071cf64deaea113072eff", "html_url": "https://github.com/rust-lang/rust/commit/b1dafe49afafd4650c4071cf64deaea113072eff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1dafe49afafd4650c4071cf64deaea113072eff/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08a4440d643fb6f7db90f67b40f9f29c6bdf5228", "url": "https://api.github.com/repos/rust-lang/rust/commits/08a4440d643fb6f7db90f67b40f9f29c6bdf5228", "html_url": "https://github.com/rust-lang/rust/commit/08a4440d643fb6f7db90f67b40f9f29c6bdf5228"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "91f08ef5dd2afd976089e516fa6d7a9ddb1eb074", "filename": "src/libcore/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1dafe49afafd4650c4071cf64deaea113072eff/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1dafe49afafd4650c4071cf64deaea113072eff/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=b1dafe49afafd4650c4071cf64deaea113072eff", "patch": "@@ -554,7 +554,7 @@ fn list_dir(p: path) -> ~[~str] {\n     fn star(p: ~str) -> ~str { p }\n \n     #[cfg(windows)]\n-    fn star(p: str) -> ~str {\n+    fn star(p: ~str) -> ~str {\n         let pl = str::len(p);\n         if pl == 0u || (p[pl - 1u] as char != path::consts::path_sep\n                         || p[pl - 1u] as char != path::consts::alt_path_sep) {"}, {"sha": "7062d6e997e187ceeb371b42fff63c8e80761543", "filename": "src/rustc/back/rpath.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b1dafe49afafd4650c4071cf64deaea113072eff/src%2Frustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1dafe49afafd4650c4071cf64deaea113072eff/src%2Frustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Frpath.rs?ref=b1dafe49afafd4650c4071cf64deaea113072eff", "patch": "@@ -314,32 +314,32 @@ mod test {\n     #[test]\n     #[cfg(target_os = \"linux\")]\n     fn test_rpath_relative() {\n-      let o = session::os_linux;\n-      check not_win32(o);\n-      let res = get_rpath_relative_to_output(o,\n+        let o = session::os_linux;\n+        check not_win32(o);\n+        let res = get_rpath_relative_to_output(o,\n             ~\"/usr\", ~\"bin/rustc\", ~\"lib/libstd.so\");\n-      assert res == ~\"$ORIGIN/../lib\";\n+        assert res == ~\"$ORIGIN/../lib\";\n     }\n \n     #[test]\n     #[cfg(target_os = \"freebsd\")]\n     fn test_rpath_relative() {\n-      let o = session::os_freebsd;\n-      check not_win32(o);\n-      let res = get_rpath_relative_to_output(o,\n-            \"/usr\", \"bin/rustc\", \"lib/libstd.so\");\n-      assert res == \"$ORIGIN/../lib\";\n+        let o = session::os_freebsd;\n+        check not_win32(o);\n+        let res = get_rpath_relative_to_output(o,\n+            ~\"/usr\", ~\"bin/rustc\", ~\"lib/libstd.so\");\n+        assert res == ~\"$ORIGIN/../lib\";\n     }\n \n     #[test]\n     #[cfg(target_os = \"macos\")]\n     fn test_rpath_relative() {\n-      // this is why refinements would be nice\n-      let o = session::os_macos;\n-      check not_win32(o);\n-      let res = get_rpath_relative_to_output(o, \"/usr\", \"bin/rustc\",\n-                                             \"lib/libstd.so\");\n-        assert res == \"@executable_path/../lib\";\n+        // this is why refinements would be nice\n+        let o = session::os_macos;\n+        check not_win32(o);\n+        let res = get_rpath_relative_to_output(o, ~\"/usr\", ~\"bin/rustc\",\n+                                               ~\"lib/libstd.so\");\n+        assert res == ~\"@executable_path/../lib\";\n     }\n \n     #[test]"}]}