{"sha": "5d17dfee2f042e33672c17710eaa2d36278599a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMTdkZmVlMmYwNDJlMzM2NzJjMTc3MTBlYWEyZDM2Mjc4NTk5YTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-14T15:14:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T15:14:29Z"}, "message": "Merge #5376\n\n5376: Check licenses r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7153af51229c91857c1ec366f605a7f303ec74c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7153af51229c91857c1ec366f605a7f303ec74c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d17dfee2f042e33672c17710eaa2d36278599a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcvVCRBK7hj4Ov3rIwAAdHIIAGO3yUADLxu7gEvR/i7YM8WC\n5+Xwjy45VFzxMItm+6pVGHrei2LxTJvIxJnZ4JMWVh9TGheTUcmzo8u6PcxJc30O\npBcZppU/GuGhVLELV9PKAVKN6W5uzzTIaE9Siw5n5d/+m/MLuAzDQWOTgmy4AeOv\nbt9CD6oflwKzg41hwsdcjX5x0zv4tlc8m42hoy6SWgGc8uF+5/abBJ5syrMVn7F5\nAti3V3RcZ22PpmgJnL+PNuQDY9GF+8fP7umd3lh0ckmhc+rWB94NwHtDaToSjtVd\nJTtrJeX7nxJhklKt8FFx1MDiPTXBkz8+SJ5f0rNuUrsZrMdBBSkV7pVNqCTHEn4=\n=beeI\n-----END PGP SIGNATURE-----\n", "payload": "tree 7153af51229c91857c1ec366f605a7f303ec74c8\nparent 139214d8ca9b42a3966b45decd820d11cc056714\nparent 239a6012eb97e4ec74ad975266436d6eb4ec9bec\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594739669 +0000\ncommitter GitHub <noreply@github.com> 1594739669 +0000\n\nMerge #5376\n\n5376: Check licenses r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d17dfee2f042e33672c17710eaa2d36278599a3", "html_url": "https://github.com/rust-lang/rust/commit/5d17dfee2f042e33672c17710eaa2d36278599a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d17dfee2f042e33672c17710eaa2d36278599a3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "139214d8ca9b42a3966b45decd820d11cc056714", "url": "https://api.github.com/repos/rust-lang/rust/commits/139214d8ca9b42a3966b45decd820d11cc056714", "html_url": "https://github.com/rust-lang/rust/commit/139214d8ca9b42a3966b45decd820d11cc056714"}, {"sha": "239a6012eb97e4ec74ad975266436d6eb4ec9bec", "url": "https://api.github.com/repos/rust-lang/rust/commits/239a6012eb97e4ec74ad975266436d6eb4ec9bec", "html_url": "https://github.com/rust-lang/rust/commit/239a6012eb97e4ec74ad975266436d6eb4ec9bec"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "94d451e231ecde473a3435332b2160c836abf272", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=5d17dfee2f042e33672c17710eaa2d36278599a3", "patch": "@@ -20,7 +20,7 @@ use walkdir::{DirEntry, WalkDir};\n \n use crate::{\n     codegen::Mode,\n-    not_bash::{fs2, pushd, pushenv, rm_rf, run},\n+    not_bash::{fs2, pushd, pushenv, rm_rf},\n };\n \n pub use anyhow::{bail, Context as _, Result};"}, {"sha": "0f3a56b25fca2b0fd9aa21c03adbd0f26013347d", "filename": "xtask/src/not_bash.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Fsrc%2Fnot_bash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Fsrc%2Fnot_bash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fnot_bash.rs?ref=5d17dfee2f042e33672c17710eaa2d36278599a3", "patch": "@@ -54,7 +54,8 @@ pub mod fs2 {\n     }\n }\n \n-macro_rules! _run {\n+#[macro_export]\n+macro_rules! run {\n     ($($expr:expr),*) => {\n         run!($($expr),*; echo = true)\n     };\n@@ -65,7 +66,7 @@ macro_rules! _run {\n         $crate::not_bash::run_process(format!($($expr),*), false, Some($stdin))\n     };\n }\n-pub(crate) use _run as run;\n+pub use crate::run;\n \n pub struct Pushd {\n     _p: (),"}, {"sha": "72088e4148ace61d06e84350192d8ace119b2ac7", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d17dfee2f042e33672c17710eaa2d36278599a3/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=5d17dfee2f042e33672c17710eaa2d36278599a3", "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use xtask::{\n     codegen::{self, Mode},\n-    not_bash::fs2,\n+    not_bash::{fs2, run},\n     project_root, run_rustfmt, rust_files,\n };\n \n@@ -49,6 +49,45 @@ fn rust_files_are_tidy() {\n     tidy_docs.finish();\n }\n \n+#[test]\n+fn check_licenses() {\n+    let expected = \"\n+0BSD OR MIT OR Apache-2.0\n+Apache-2.0\n+Apache-2.0 / MIT\n+Apache-2.0 OR BSL-1.0\n+Apache-2.0 OR MIT\n+Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\n+Apache-2.0/MIT\n+BSD-2-Clause\n+BSD-3-Clause\n+CC0-1.0\n+ISC\n+MIT\n+MIT / Apache-2.0\n+MIT OR Apache-2.0\n+MIT/Apache-2.0\n+MIT/Apache-2.0 AND BSD-2-Clause\n+Unlicense OR MIT\n+Unlicense/MIT\n+Zlib\n+\"\n+    .lines()\n+    .filter(|it| !it.is_empty())\n+    .collect::<Vec<_>>();\n+\n+    let meta = run!(\"cargo metadata --format-version 1\"; echo = false).unwrap();\n+    let mut licenses = meta\n+        .split(|c| c == ',' || c == '{' || c == '}')\n+        .filter(|it| it.contains(r#\"\"license\"\"#))\n+        .map(|it| it.trim())\n+        .map(|it| it[r#\"\"license\":\"#.len()..].trim_matches('\"'))\n+        .collect::<Vec<_>>();\n+    licenses.sort();\n+    licenses.dedup();\n+    assert_eq!(licenses, expected);\n+}\n+\n fn check_todo(path: &Path, text: &str) {\n     let need_todo = &[\n         // This file itself obviously needs to use todo (<- like this!)."}]}