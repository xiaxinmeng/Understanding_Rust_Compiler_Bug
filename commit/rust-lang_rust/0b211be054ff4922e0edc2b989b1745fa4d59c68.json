{"sha": "0b211be054ff4922e0edc2b989b1745fa4d59c68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMjExYmUwNTRmZjQ5MjJlMGVkYzJiOTg5YjE3NDVmYTRkNTljNjg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-19T12:45:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-19T12:45:58Z"}, "message": "Use SystemV abi for extern \"sysv64\" even on Windows", "tree": {"sha": "99ca9c96ea582e84341c983e016572de5372ccca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ca9c96ea582e84341c983e016572de5372ccca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b211be054ff4922e0edc2b989b1745fa4d59c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b211be054ff4922e0edc2b989b1745fa4d59c68", "html_url": "https://github.com/rust-lang/rust/commit/0b211be054ff4922e0edc2b989b1745fa4d59c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b211be054ff4922e0edc2b989b1745fa4d59c68/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26e7bc1ed68e5be33c75417997319f37bb4fc806", "url": "https://api.github.com/repos/rust-lang/rust/commits/26e7bc1ed68e5be33c75417997319f37bb4fc806", "html_url": "https://github.com/rust-lang/rust/commit/26e7bc1ed68e5be33c75417997319f37bb4fc806"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "0a6d54c73b3e4181b7a6e91f92ea0d3349ae72b7", "filename": "src/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b211be054ff4922e0edc2b989b1745fa4d59c68/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b211be054ff4922e0edc2b989b1745fa4d59c68/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=0b211be054ff4922e0edc2b989b1745fa4d59c68", "patch": "@@ -91,7 +91,8 @@ fn clif_sig_from_fn_sig<'tcx>(\n     };\n     let (call_conv, inputs, output): (CallConv, Vec<Ty<'tcx>>, Ty<'tcx>) = match abi {\n         Abi::Rust => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n-        Abi::C | Abi::Unadjusted | Abi::SysV64 => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n+        Abi::C | Abi::Unadjusted => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n+        Abi::SysV64 => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         Abi::RustCall => {\n             assert_eq!(sig.inputs().len(), 2);\n             let extra_args = match sig.inputs().last().unwrap().kind {"}]}