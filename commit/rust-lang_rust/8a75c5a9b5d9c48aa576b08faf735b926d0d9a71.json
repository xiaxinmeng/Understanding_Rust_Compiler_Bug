{"sha": "8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "node_id": "C_kwDOAAsO6NoAKDhhNzVjNWE5YjVkOWM0OGFhNTc2YjA4ZmFmNzM1YjkyNmQwZDlhNzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-25T09:44:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-25T09:44:16Z"}, "message": "Auto merge of #104650 - BlackHoleFox:stuck-with-xcode-13, r=Mark-Simulacrum\n\nBuild macOS distribution artifacts with XCode 13\n\nAfter all of the `rust-lang/rust` Apple runners started using macOS 12, the builds created by CI began to use XCode 14.0.1. Due to this (as far as we can tell), XCode's build tools started to ignore the `MACOSX_DEPLOYMENT_TARGET` being defined by us for the distributed builds that let both `rustc` and `libstd` work on older versions. The current idea is that since XCode 14's macOS SDK doesn't support deployment targets before 10.13, it uses some default of its own. You can see the difference between stable's and the most recent nighty's supported versions [here](https://github.com/rust-lang/rust/issues/104570#issuecomment-1321225907).\n\nI wasn't able to confirm my SDK versioning hypothesis locally since I think there's something jammed with my XCode installation, but hopefully this should still fix it for releases.\n\nCloses https://github.com/rust-lang/rust/issues/104570\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "2d19b37fe47d05f12dd5464f22e8c3988680cce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d19b37fe47d05f12dd5464f22e8c3988680cce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "html_url": "https://github.com/rust-lang/rust/commit/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41e0363055ade59584cff667c79f64937e6ef3f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/41e0363055ade59584cff667c79f64937e6ef3f9", "html_url": "https://github.com/rust-lang/rust/commit/41e0363055ade59584cff667c79f64937e6ef3f9"}, {"sha": "cda219e365073418a42ab023e49dbcecf0c14466", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda219e365073418a42ab023e49dbcecf0c14466", "html_url": "https://github.com/rust-lang/rust/commit/cda219e365073418a42ab023e49dbcecf0c14466"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "ebbed11d04b8d775c98b0c020db6db8f3ee42172", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "patch": "@@ -96,6 +96,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB\n@@ -301,6 +304,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: \"--enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -312,6 +316,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: \"--enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -322,6 +327,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -353,6 +359,7 @@ jobs:\n               SCRIPT: \"./x.py dist bootstrap --include-default-paths --stage 2\"\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --host=aarch64-apple-darwin --target=aarch64-apple-darwin --enable-full-tools --enable-sanitizers --enable-profiler --disable-docs --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               USE_XCODE_CLANG: 1\n               MACOSX_DEPLOYMENT_TARGET: 11.0\n               MACOSX_STD_DEPLOYMENT_TARGET: 11.0\n@@ -503,6 +510,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB\n@@ -615,6 +625,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB"}, {"sha": "10de2e8d5eaa89f71d8f68874fed5db6696211c1", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "patch": "@@ -153,6 +153,10 @@ x--expand-yaml-anchors--remove:\n         run: src/ci/scripts/install-sccache.sh\n         <<: *step\n \n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        <<: *step\n+\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         <<: *step\n@@ -466,6 +470,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -478,6 +483,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -489,6 +495,7 @@ jobs:\n               RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n               NO_OVERFLOW_CHECKS: 1\n@@ -527,6 +534,7 @@ jobs:\n                 --set rust.jemalloc\n                 --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              SELECT_XCODE: /Applications/Xcode_13.4.1.app\n               USE_XCODE_CLANG: 1\n               MACOSX_DEPLOYMENT_TARGET: 11.0\n               MACOSX_STD_DEPLOYMENT_TARGET: 11.0"}, {"sha": "3b9c77d42ba5f74995e2ed1117de32881318ec12", "filename": "src/ci/scripts/select-xcode.sh", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/src%2Fci%2Fscripts%2Fselect-xcode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8a75c5a9b5d9c48aa576b08faf735b926d0d9a71/src%2Fci%2Fscripts%2Fselect-xcode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fselect-xcode.sh?ref=8a75c5a9b5d9c48aa576b08faf735b926d0d9a71", "patch": "@@ -0,0 +1,13 @@\n+#!/bin/bash\n+# This script selects the Xcode instance to use.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isMacOS; then\n+    if [[ -s \"${SELECT_XCODE-}\" ]]; then\n+        sudo xcode-select -s \"${SELECT_XCODE}\"\n+    fi\n+fi"}]}