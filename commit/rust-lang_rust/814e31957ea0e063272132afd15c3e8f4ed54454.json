{"sha": "814e31957ea0e063272132afd15c3e8f4ed54454", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNGUzMTk1N2VhMGUwNjMyNzIxMzJhZmQxNWMzZThmNGVkNTQ0NTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-10T18:14:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-10T18:14:17Z"}, "message": "Merge #6804\n\n6804: Bump the macro token limit r=jonas-schievink a=jonas-schievink\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/6504\r\n\r\nNot entirely sure what the previous limit was based on, but it looks like it does get hit in practice.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "5cda6ebbeb109d3f04ad9f81b5f21344e2a65471", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cda6ebbeb109d3f04ad9f81b5f21344e2a65471"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/814e31957ea0e063272132afd15c3e8f4ed54454", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0mV5CRBK7hj4Ov3rIwAAdHIIAE1vKA60G3g+ZkaZoEd08g63\nHOuQDfXMWPSFui93jHbHLbid42qxJooe9eHPBzIXtONj41RnEm+E+gBMgrh2fb6B\nwhbz8TUt5pbQuSndOP7CUDweTil7P94IqpUeENaBH+AjXUB6koEw1MLggB5mA77n\n+m9qDRgoG6nsSkhI7MRxtIJp/isrq+67Wu/BKtBEXfgd3yy7WSNtbkEHogVCVNOL\npVDIgboYaTbcW8xBuP09Fdtb/ple+sgrq3vBS9nbOCCFrAU1QJZgwrOOrwAaYOz2\nuRpiAQBMNZFEiXqTWAv4Ym8nWvTRE6LRDZf6sGF9O88LUqXjFRET5lcIKNKHWhA=\n=0A55\n-----END PGP SIGNATURE-----\n", "payload": "tree 5cda6ebbeb109d3f04ad9f81b5f21344e2a65471\nparent 6095debda842a84904398e410589669dda51cf14\nparent 829d9d36ebd3b86f447b12ba573cf3e6cb5b0373\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607624057 +0000\ncommitter GitHub <noreply@github.com> 1607624057 +0000\n\nMerge #6804\n\n6804: Bump the macro token limit r=jonas-schievink a=jonas-schievink\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/6504\r\n\r\nNot entirely sure what the previous limit was based on, but it looks like it does get hit in practice.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/814e31957ea0e063272132afd15c3e8f4ed54454", "html_url": "https://github.com/rust-lang/rust/commit/814e31957ea0e063272132afd15c3e8f4ed54454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/814e31957ea0e063272132afd15c3e8f4ed54454/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6095debda842a84904398e410589669dda51cf14", "url": "https://api.github.com/repos/rust-lang/rust/commits/6095debda842a84904398e410589669dda51cf14", "html_url": "https://github.com/rust-lang/rust/commit/6095debda842a84904398e410589669dda51cf14"}, {"sha": "829d9d36ebd3b86f447b12ba573cf3e6cb5b0373", "url": "https://api.github.com/repos/rust-lang/rust/commits/829d9d36ebd3b86f447b12ba573cf3e6cb5b0373", "html_url": "https://github.com/rust-lang/rust/commit/829d9d36ebd3b86f447b12ba573cf3e6cb5b0373"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ffb70f723c096d6c003f8f5e806706294a426d4f", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/814e31957ea0e063272132afd15c3e8f4ed54454/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/814e31957ea0e063272132afd15c3e8f4ed54454/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=814e31957ea0e063272132afd15c3e8f4ed54454", "patch": "@@ -13,6 +13,12 @@ use crate::{\n     MacroFile, ProcMacroExpander,\n };\n \n+/// Total limit on the number of tokens produced by any macro invocation.\n+///\n+/// If an invocation produces more tokens than this limit, it will not be stored in the database and\n+/// an error will be emitted.\n+const TOKEN_LIMIT: usize = 524288;\n+\n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum TokenExpander {\n     MacroRules(mbe::MacroRules),\n@@ -227,10 +233,10 @@ fn macro_expand_with_arg(\n     let ExpandResult { value: tt, err } = macro_rules.0.expand(db, lazy_id, &macro_arg.0);\n     // Set a hard limit for the expanded tt\n     let count = tt.count();\n-    if count > 262144 {\n+    if count > TOKEN_LIMIT {\n         return ExpandResult::str_err(format!(\n-            \"Total tokens count exceed limit : count = {}\",\n-            count\n+            \"macro invocation exceeds token limit: produced {} tokens, limit is {}\",\n+            count, TOKEN_LIMIT,\n         ));\n     }\n "}]}