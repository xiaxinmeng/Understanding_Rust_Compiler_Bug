{"sha": "82d9a77dade454ee8d09f198fa839e7755ff7bfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZDlhNzdkYWRlNDU0ZWU4ZDA5ZjE5OGZhODM5ZTc3NTVmZjdiZmI=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-06T20:39:36Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-06T21:17:54Z"}, "message": "Touch up type inference for boolean operators\n\nAlso try to infer its subexpressions and set type expectations\nwhenever possible.", "tree": {"sha": "791b3c0ee6069a06896c815795ff7e86877887df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/791b3c0ee6069a06896c815795ff7e86877887df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d9a77dade454ee8d09f198fa839e7755ff7bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d9a77dade454ee8d09f198fa839e7755ff7bfb", "html_url": "https://github.com/rust-lang/rust/commit/82d9a77dade454ee8d09f198fa839e7755ff7bfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d9a77dade454ee8d09f198fa839e7755ff7bfb/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc233a02e8dc07619a969400c445ec47c2b1a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc233a02e8dc07619a969400c445ec47c2b1a9d", "html_url": "https://github.com/rust-lang/rust/commit/4fc233a02e8dc07619a969400c445ec47c2b1a9d"}], "stats": {"total": 136, "additions": 93, "deletions": 43}, "files": [{"sha": "8f56cdb1515049cc056ab73719fb69d0634b61bf", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -526,6 +526,20 @@ struct InferenceContext<'a, D: HirDatabase> {\n     return_ty: Ty,\n }\n \n+// helper function that determines whether a binary operator\n+// always returns a boolean\n+fn is_boolean_operator(op: BinOp) -> bool {\n+    match op {\n+        BinOp::BooleanOr\n+        | BinOp::BooleanAnd\n+        | BinOp::EqualityTest\n+        | BinOp::LesserEqualTest\n+        | BinOp::GreaterEqualTest\n+        | BinOp::LesserTest\n+        | BinOp::GreaterTest => true,\n+    }\n+}\n+\n impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     fn new(\n         db: &'a D,\n@@ -907,13 +921,21 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n             }\n             ast::Expr::RangeExpr(_e) => Ty::Unknown,\n             ast::Expr::BinExpr(e) => match e.op() {\n-                Some(BinOp::BooleanOr)\n-                | Some(BinOp::BooleanAnd)\n-                | Some(BinOp::EqualityTest)\n-                | Some(BinOp::LesserEqualTest)\n-                | Some(BinOp::GreaterEqualTest)\n-                | Some(BinOp::LesserTest)\n-                | Some(BinOp::GreaterTest) => Ty::Bool,\n+                Some(op) => {\n+                    let subtype_expectation = match op {\n+                        BinOp::BooleanAnd | BinOp::BooleanOr => Expectation::has_type(Ty::Bool),\n+                        _ => Expectation::none(),\n+                    };\n+                    let (lhs, rhs) = e.sub_exprs();\n+                    let _lhs_ty = self.infer_expr_opt(lhs, &subtype_expectation)?;\n+                    let _rhs_ty = self.infer_expr_opt(rhs, &subtype_expectation)?;\n+\n+                    if is_boolean_operator(op) {\n+                        Ty::Bool\n+                    } else {\n+                        Ty::Unknown\n+                    }\n+                }\n                 _ => Ty::Unknown,\n             },\n             ast::Expr::Literal(_e) => Ty::Unknown,"}, {"sha": "1650606b71ca72ebc3512a68c425b8674e4f1dc2", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -157,11 +157,18 @@ impl S {\n fn infer_boolean_op() {\n     check_inference(\n         r#\"\n+fn f(x: bool) -> i32 {\n+    0i32\n+}\n+\n fn test() {\n     let x = a && b;\n     let y = true || false;\n     let z = x == y;\n     let h = CONST_1 <= CONST_2;\n+    let c = f(z || y) + 5;\n+    let d = b;\n+    let e = 3i32 && \"hello world\";\n \n     10 < 3\n }"}, {"sha": "ca01ad15934ecadc867d0ee18b2f281437b97222", "filename": "crates/ra_hir/src/ty/tests/data/0008_boolean_op.txt", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0008_boolean_op.txt", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0008_boolean_op.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0008_boolean_op.txt?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -1,10 +1,31 @@\n-[21; 22) 'x': bool\n-[68; 69) 'z': bool\n-[72; 78) 'x == y': bool\n-[45; 58) 'true || false': bool\n-[11; 125) '{     ... < 3 }': bool\n-[117; 123) '10 < 3': bool\n-[88; 89) 'h': bool\n-[41; 42) 'y': bool\n-[92; 110) 'CONST_...ONST_2': bool\n-[25; 31) 'a && b': bool\n+[28; 32) '0i32': i32\n+[22; 34) '{     0i32 }': i32\n+[6; 7) 'x': [unknown]\n+[127; 134) 'CONST_1': [unknown]\n+[201; 205) '3i32': bool\n+[76; 77) 'y': bool\n+[65; 66) 'b': bool\n+[60; 66) 'a && b': bool\n+[127; 145) 'CONST_...ONST_2': bool\n+[182; 183) 'd': [unknown]\n+[229; 231) '10': [unknown]\n+[209; 222) '\"hello world\"': bool\n+[229; 235) '10 < 3': bool\n+[186; 187) 'b': [unknown]\n+[159; 172) 'f(z || y) + 5': [unknown]\n+[56; 57) 'x': bool\n+[112; 113) 'y': bool\n+[201; 222) '3i32 &...world\"': bool\n+[234; 235) '3': [unknown]\n+[138; 145) 'CONST_2': [unknown]\n+[80; 93) 'true || false': bool\n+[46; 237) '{     ... < 3 }': bool\n+[197; 198) 'e': bool\n+[107; 113) 'x == y': bool\n+[88; 93) 'false': bool\n+[80; 84) 'true': bool\n+[123; 124) 'h': bool\n+[155; 156) 'c': [unknown]\n+[103; 104) 'z': bool\n+[60; 61) 'a': bool\n+[107; 108) 'x': bool"}, {"sha": "9df8ec6637f6a5b069cf5e964f9c33f596b8d8e1", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -511,20 +511,33 @@ impl<'a> BinExpr<'a> {\n     pub fn op(&self) -> Option<BinOp> {\n         self.syntax()\n             .children()\n-            .filter_map(|c| {\n-                match c.kind() {\n-                    PIPEPIPE => Some(BinOp::BooleanOr),\n-                    AMPAMP => Some(BinOp::BooleanAnd),\n-                    EQEQ => Some(BinOp::EqualityTest),\n-                    LTEQ => Some(BinOp::LesserEqualTest),\n-                    GTEQ => Some(BinOp::GreaterEqualTest),\n-                    L_ANGLE => Some(BinOp::LesserTest),\n-                    R_ANGLE => Some(BinOp::GreaterTest),\n-                    _ => None,\n-                }\n+            .filter_map(|c| match c.kind() {\n+                PIPEPIPE => Some(BinOp::BooleanOr),\n+                AMPAMP => Some(BinOp::BooleanAnd),\n+                EQEQ => Some(BinOp::EqualityTest),\n+                LTEQ => Some(BinOp::LesserEqualTest),\n+                GTEQ => Some(BinOp::GreaterEqualTest),\n+                L_ANGLE => Some(BinOp::LesserTest),\n+                R_ANGLE => Some(BinOp::GreaterTest),\n+                _ => None,\n             })\n             .next()\n     }\n+\n+    pub fn lhs(self) -> Option<Expr<'a>> {\n+        children(self).nth(0)\n+    }\n+\n+    pub fn rhs(self) -> Option<Expr<'a>> {\n+        children(self).nth(1)\n+    }\n+\n+    pub fn sub_exprs(self) -> (Option<Expr<'a>>, Option<Expr<'a>>) {\n+        let mut children = children(self);\n+        let first = children.next();\n+        let second = children.next();\n+        (first, second)\n+    }\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]"}, {"sha": "7df6a9c4661fd2c6a982bef127d63b86779eacee", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -217,15 +217,7 @@ impl<R: TreeRoot<RaTypes>> BinExprNode<R> {\n }\n \n \n-impl<'a> BinExpr<'a> {\n-    pub fn lhs(self) -> Option<Expr<'a>> {\n-        super::child_opt(self)\n-    }\n-\n-    pub fn rhs(self) -> Option<Expr<'a>> {\n-        super::child_opt(self)\n-    }\n-}\n+impl<'a> BinExpr<'a> {}\n \n // BindPat\n #[derive(Debug, Clone, Copy,)]"}, {"sha": "c55e9e07a83b7ee88013a83201b106c3857cfa3c", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/82d9a77dade454ee8d09f198fa839e7755ff7bfb/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=82d9a77dade454ee8d09f198fa839e7755ff7bfb", "patch": "@@ -422,12 +422,7 @@ Grammar(\n         \"RefExpr\": (options: [\"Expr\"]),\n         \"PrefixExpr\": (options: [\"Expr\"]),\n         \"RangeExpr\": (),\n-        \"BinExpr\": (\n-            options: [\n-                [\"lhs\", \"Expr\"],\n-                [\"rhs\", \"Expr\"]\n-            ]\n-        ),\n+        \"BinExpr\": (),\n         \"String\": (),\n         \"Byte\": (),\n         \"ByteString\": (),"}]}