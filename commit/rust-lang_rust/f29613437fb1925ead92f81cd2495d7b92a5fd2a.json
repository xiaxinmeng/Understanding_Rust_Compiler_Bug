{"sha": "f29613437fb1925ead92f81cd2495d7b92a5fd2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyOTYxMzQzN2ZiMTkyNWVhZDkyZjgxY2QyNDk1ZDdiOTJhNWZkMmE=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-10T02:40:14Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "Adding feature gate", "tree": {"sha": "1d42c8b6e500c9b20d5414ef624897a6668dc7b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d42c8b6e500c9b20d5414ef624897a6668dc7b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f29613437fb1925ead92f81cd2495d7b92a5fd2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f29613437fb1925ead92f81cd2495d7b92a5fd2a", "html_url": "https://github.com/rust-lang/rust/commit/f29613437fb1925ead92f81cd2495d7b92a5fd2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f29613437fb1925ead92f81cd2495d7b92a5fd2a/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bd8ea1a6b88545e59442a3603f1b235cf57e3ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bd8ea1a6b88545e59442a3603f1b235cf57e3ba", "html_url": "https://github.com/rust-lang/rust/commit/6bd8ea1a6b88545e59442a3603f1b235cf57e3ba"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "9b5be298fd54e008a32cd21890ce46fe2e2f68a6", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -431,6 +431,9 @@ declare_features! (\n \n     // Nested groups in `use` (RFC 2128)\n     (active, use_nested_groups, \"1.23.0\", Some(44494)),\n+\n+    // generic associated types (RFC 1598)\n+    (active, generic_associated_types, \"1.23.0\", Some(44265)),\n );\n \n declare_features! (\n@@ -1618,6 +1621,9 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                 gate_feature_post!(&self, associated_type_defaults, ti.span,\n                                   \"associated type defaults are unstable\");\n             }\n+            _ if ti.generics.is_parameterized() => {\n+                gate_feature_post!(&self, generic_associated_types, ti.span, \"generic associated types are unstable\");\n+            }\n             _ => {}\n         }\n         visit::walk_trait_item(self, ti);\n@@ -1636,6 +1642,9 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, const_fn, ii.span, \"const fn is unstable\");\n                 }\n             }\n+            _ if ii.generics.is_parameterized() => {\n+                gate_feature_post!(&self, generic_associated_types, ii.span, \"generic associated types are unstable\");\n+            }\n             _ => {}\n         }\n         visit::walk_impl_item(self, ii);"}, {"sha": "a8fc8226f316add3a781c529ab648b1e31eb4f3c", "filename": "src/test/compile-fail/generic-associated-types.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Fcompile-fail%2Fgeneric-associated-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Fcompile-fail%2Fgeneric-associated-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-associated-types.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::Deref;\n+\n+trait PointerFamily {\n+    type Pointer<T>: Deref<Target = T>;\n+}\n+\n+fn main() {}"}, {"sha": "81475c6888d3faac8d9a96dd27da41ae4876dc56", "filename": "src/test/run-pass/rfc1598-generic-associated-types/construct_with_other_type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(generic_associated_types)]\n+\n trait Foo {\n     type Bar<'a, 'b>;\n }"}, {"sha": "40b1d1312927c82666afbf5f2f014f86a3433233", "filename": "src/test/run-pass/rfc1598-generic-associated-types/iterable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fiterable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fiterable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fiterable.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(generic_associated_types)]\n+\n trait Iterable {\n     type Item<'a>;\n     type Iter<'a>: Iterator<Item = Self::Item<'a>>;"}, {"sha": "0d0f1396969f33e81afe40a3e840a66bb593d750", "filename": "src/test/run-pass/rfc1598-generic-associated-types/pointer_family.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fpointer_family.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(generic_associated_types)]\n+\n use std::rc::Rc;\n use std::sync::Arc;\n use std::ops::Deref;"}, {"sha": "fd476e2592dc4e08ab66cbab1bebf30f775098c3", "filename": "src/test/run-pass/rfc1598-generic-associated-types/streaming_iterator.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(generic_associated_types)]\n+\n use std::fmt::Display;\n \n trait StreamingIterator {"}, {"sha": "269e5dc26fc8e2895255df8bb974882622657183", "filename": "src/test/run-pass/rfc1598-generic-associated-types/where.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29613437fb1925ead92f81cd2495d7b92a5fd2a/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhere.rs?ref=f29613437fb1925ead92f81cd2495d7b92a5fd2a", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(generic_associated_types)]\n+\n // Checking the interaction with this other feature\n #![feature(associated_type_defaults)]\n "}]}