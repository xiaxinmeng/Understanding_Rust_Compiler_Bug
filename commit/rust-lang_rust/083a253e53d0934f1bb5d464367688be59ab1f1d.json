{"sha": "083a253e53d0934f1bb5d464367688be59ab1f1d", "node_id": "C_kwDOAAsO6NoAKDA4M2EyNTNlNTNkMDkzNGYxYmI1ZDQ2NDM2NzY4OGJlNTlhYjFmMWQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-16T08:53:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-16T08:53:04Z"}, "message": "Rollup merge of #99277 - joshtriplett:stabilize-core-cstr-alloc-cstring, r=Mark-Simulacrum\n\nStabilize `core::ffi::CStr`, `alloc::ffi::CString`, and friends\n\nStabilize the `core_c_str` and `alloc_c_string` feature gates.\n\nChange `std::ffi` to re-export these types rather than creating type\naliases, since they now have matching stability.", "tree": {"sha": "1b1926a7f8c1e9bdc3c164e0e273ee3bead817d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b1926a7f8c1e9bdc3c164e0e273ee3bead817d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083a253e53d0934f1bb5d464367688be59ab1f1d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi0nxwCRBK7hj4Ov3rIwAAtdEIAGxM5jl5f9pYLU6cMmEgT0fi\nvWYbsCET0PvaC5TetwZUzaKU25DccUyor9V2SUKkmlU93TcvmjLSK0qifovnMQoV\nLUhffrmbzevXB9/4SBAeLRhKTQjtf2kduxQCk//E5bW3fPFqNVuO/VyOeIrve2R+\n6L3vhx2aQTz7yNsUX/dwQG7bM73l6UAfpjeOrp3mv6PAixFieLo3OH2xNlo3L8U8\naUkmDeGX029M+wageMzvm5fOe2W6qyNSASwGMA9MBm9Adoum0wtQMxggEZ/yS/iT\nw2Oap3N3VoOkQcNeoZi3+tdVcxwKpCKtOjZI4quBKc8y4MNMk07Qh3PNEv0UX1Y=\n=i1P5\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b1926a7f8c1e9bdc3c164e0e273ee3bead817d7\nparent 96474a718be0d7d660e2f3835bac9f4c7572f993\nparent d6b7480c2a086d9284cfd4ed3f3e3612880a75d7\nauthor Yuki Okushi <jtitor@2k36.org> 1657961584 +0900\ncommitter GitHub <noreply@github.com> 1657961584 +0900\n\nRollup merge of #99277 - joshtriplett:stabilize-core-cstr-alloc-cstring, r=Mark-Simulacrum\n\nStabilize `core::ffi::CStr`, `alloc::ffi::CString`, and friends\n\nStabilize the `core_c_str` and `alloc_c_string` feature gates.\n\nChange `std::ffi` to re-export these types rather than creating type\naliases, since they now have matching stability.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083a253e53d0934f1bb5d464367688be59ab1f1d", "html_url": "https://github.com/rust-lang/rust/commit/083a253e53d0934f1bb5d464367688be59ab1f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083a253e53d0934f1bb5d464367688be59ab1f1d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96474a718be0d7d660e2f3835bac9f4c7572f993", "url": "https://api.github.com/repos/rust-lang/rust/commits/96474a718be0d7d660e2f3835bac9f4c7572f993", "html_url": "https://github.com/rust-lang/rust/commit/96474a718be0d7d660e2f3835bac9f4c7572f993"}, {"sha": "d6b7480c2a086d9284cfd4ed3f3e3612880a75d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b7480c2a086d9284cfd4ed3f3e3612880a75d7", "html_url": "https://github.com/rust-lang/rust/commit/d6b7480c2a086d9284cfd4ed3f3e3612880a75d7"}], "stats": {"total": 48, "additions": 14, "deletions": 34}, "files": [{"sha": "ae61b1f1e8ed5f43496f959fb52108231dff61dd", "filename": "library/alloc/src/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -108,7 +108,7 @@ use crate::sync::Arc;\n /// and other memory errors.\n #[derive(PartialEq, PartialOrd, Eq, Ord, Hash, Clone)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"cstring_type\")]\n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub struct CString {\n     // Invariant 1: the slice ends with a zero byte and has a length of at least one.\n     // Invariant 2: the slice contains only one zero byte.\n@@ -132,7 +132,7 @@ pub struct CString {\n /// let _: NulError = CString::new(b\"f\\0oo\".to_vec()).unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub struct NulError(usize, Vec<u8>);\n \n #[derive(Clone, PartialEq, Eq, Debug)]\n@@ -157,7 +157,7 @@ enum FromBytesWithNulErrorKind {\n /// let _: FromVecWithNulError = CString::from_vec_with_nul(b\"f\\0oo\".to_vec()).unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub struct FromVecWithNulError {\n     error_kind: FromBytesWithNulErrorKind,\n     bytes: Vec<u8>,\n@@ -223,7 +223,7 @@ impl FromVecWithNulError {\n /// This `struct` is created by [`CString::into_string()`]. See\n /// its documentation for more.\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub struct IntoStringError {\n     inner: CString,\n     error: Utf8Error,"}, {"sha": "e8530fbc1f08f506bc1852b1a9537d3f980e74b3", "filename": "library/alloc/src/ffi/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -78,11 +78,11 @@\n //! [`String`]: crate::string::String\n //! [`CStr`]: core::ffi::CStr\n \n-#![unstable(feature = \"alloc_ffi\", issue = \"94079\")]\n+#![stable(feature = \"alloc_ffi\", since = \"1.64.0\")]\n \n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub use self::c_str::FromVecWithNulError;\n-#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n pub use self::c_str::{CString, IntoStringError, NulError};\n \n mod c_str;"}, {"sha": "315469387e5ae86a6499b90931382794df4f3d04", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -86,7 +86,6 @@\n #![allow(explicit_outlives_requirements)]\n //\n // Library features:\n-#![cfg_attr(not(no_global_oom_handling), feature(alloc_c_string))]\n #![feature(alloc_layout_extra)]\n #![feature(allocator_api)]\n #![feature(array_chunks)]\n@@ -106,7 +105,6 @@\n #![feature(const_maybe_uninit_write)]\n #![feature(const_maybe_uninit_as_mut_ptr)]\n #![feature(const_refs_to_cell)]\n-#![feature(core_c_str)]\n #![feature(core_intrinsics)]\n #![feature(const_eval_select)]\n #![feature(const_pin)]"}, {"sha": "c29e7b9c81efb0d985887809ccadaec3ff0d4092", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -11,7 +11,6 @@\n #![feature(const_nonnull_slice_from_raw_parts)]\n #![feature(const_ptr_write)]\n #![feature(const_try)]\n-#![feature(core_c_str)]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]\n #![feature(exact_size_is_empty)]"}, {"sha": "ee9baf811e29c099c70d18323978f655a98e65a6", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -76,7 +76,7 @@ use crate::str;\n /// [str]: prim@str \"str\"\n #[derive(Hash)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"CStr\")]\n-#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n+#[stable(feature = \"core_c_str\", since = \"1.64.0\")]\n #[rustc_has_incoherent_inherent_impls]\n // FIXME:\n // `fn from` in `impl From<&CStr> for Box<CStr>` current implementation relies\n@@ -108,7 +108,7 @@ pub struct CStr {\n /// let _: FromBytesWithNulError = CStr::from_bytes_with_nul(b\"f\\0oo\").unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n+#[stable(feature = \"core_c_str\", since = \"1.64.0\")]\n pub struct FromBytesWithNulError {\n     kind: FromBytesWithNulErrorKind,\n }"}, {"sha": "ec1eaa99f0b8e756cb4c7c713180a6368dfac458", "filename": "library/core/src/ffi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -14,7 +14,7 @@ use crate::marker::PhantomData;\n use crate::num::*;\n use crate::ops::{Deref, DerefMut};\n \n-#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n+#[stable(feature = \"core_c_str\", since = \"1.64.0\")]\n pub use self::c_str::{CStr, FromBytesUntilNulError, FromBytesWithNulError};\n \n mod c_str;"}, {"sha": "d987bf69b25768919536407fde46130fec1005d4", "filename": "library/std/src/ffi/mod.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -146,24 +146,10 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-/// See [alloc::ffi::FromVecWithNulError].\n-#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n-pub type FromVecWithNulError = alloc::ffi::FromVecWithNulError;\n-/// See [alloc::ffi::CString].\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub type CString = alloc::ffi::CString;\n-/// See [alloc::ffi::IntoStringError].\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub type IntoStringError = alloc::ffi::IntoStringError;\n-/// See [alloc::ffi::NulError].\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub type NulError = alloc::ffi::NulError;\n-/// See [core::ffi::CStr].\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub type CStr = core::ffi::CStr;\n-/// See [core::ffi::FromBytesWithNulError].\n-#[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n-pub type FromBytesWithNulError = core::ffi::FromBytesWithNulError;\n+#[stable(feature = \"alloc_c_string\", since = \"1.64.0\")]\n+pub use alloc::ffi::{CString, FromVecWithNulError, IntoStringError, NulError};\n+#[stable(feature = \"core_c_str\", since = \"1.64.0\")]\n+pub use core::ffi::{CStr, FromBytesWithNulError};\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::os_str::{OsStr, OsString};"}, {"sha": "ab50845e2b208f17e6a34f541ec183a473bf5990", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a253e53d0934f1bb5d464367688be59ab1f1d/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=083a253e53d0934f1bb5d464367688be59ab1f1d", "patch": "@@ -264,7 +264,6 @@\n #![feature(atomic_mut_ptr)]\n #![feature(char_error_internals)]\n #![feature(char_internals)]\n-#![feature(core_c_str)]\n #![feature(core_intrinsics)]\n #![feature(cstr_from_bytes_until_nul)]\n #![feature(cstr_internals)]\n@@ -297,8 +296,6 @@\n //\n // Library features (alloc):\n #![feature(alloc_layout_extra)]\n-#![feature(alloc_c_string)]\n-#![feature(alloc_ffi)]\n #![feature(allocator_api)]\n #![feature(get_mut_unchecked)]\n #![feature(map_try_insert)]"}]}