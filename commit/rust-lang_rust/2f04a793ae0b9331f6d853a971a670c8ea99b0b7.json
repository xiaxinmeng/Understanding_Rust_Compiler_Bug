{"sha": "2f04a793ae0b9331f6d853a971a670c8ea99b0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMDRhNzkzYWUwYjkzMzFmNmQ4NTNhOTcxYTY3MGM4ZWE5OWIwYjc=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-02-26T21:20:46Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-02-26T21:27:34Z"}, "message": "Revert `Vec::spare_capacity_mut` impl to prevent pointers invalidation", "tree": {"sha": "1897993205a9c779e3c68408b1d537171d1434e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1897993205a9c779e3c68408b1d537171d1434e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f04a793ae0b9331f6d853a971a670c8ea99b0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f04a793ae0b9331f6d853a971a670c8ea99b0b7", "html_url": "https://github.com/rust-lang/rust/commit/2f04a793ae0b9331f6d853a971a670c8ea99b0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f04a793ae0b9331f6d853a971a670c8ea99b0b7/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cecdb181ade91c0a5ffab9a148dba68fc7d00ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cecdb181ade91c0a5ffab9a148dba68fc7d00ee3", "html_url": "https://github.com/rust-lang/rust/commit/cecdb181ade91c0a5ffab9a148dba68fc7d00ee3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "e5545d2a77ff7cd9273f8826912bec260f47ae9c", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f04a793ae0b9331f6d853a971a670c8ea99b0b7/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f04a793ae0b9331f6d853a971a670c8ea99b0b7/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=2f04a793ae0b9331f6d853a971a670c8ea99b0b7", "patch": "@@ -1879,7 +1879,15 @@ impl<T, A: Allocator> Vec<T, A> {\n     #[unstable(feature = \"vec_spare_capacity\", issue = \"75017\")]\n     #[inline]\n     pub fn spare_capacity_mut(&mut self) -> &mut [MaybeUninit<T>] {\n-        self.split_at_spare_mut().1\n+        // Note:\n+        // This method is not implemented in terms of `split_at_spare_mut`,\n+        // to prevent invalidation of pointers to the buffer.\n+        unsafe {\n+            slice::from_raw_parts_mut(\n+                self.as_mut_ptr().add(self.len) as *mut MaybeUninit<T>,\n+                self.buf.capacity() - self.len,\n+            )\n+        }\n     }\n \n     /// Returns vector content as a slice of `T`, along with the remaining spare"}]}