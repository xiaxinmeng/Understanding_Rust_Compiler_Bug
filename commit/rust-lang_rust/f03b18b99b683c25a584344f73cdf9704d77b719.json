{"sha": "f03b18b99b683c25a584344f73cdf9704d77b719", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwM2IxOGI5OWI2ODNjMjVhNTg0MzQ0ZjczY2RmOTcwNGQ3N2I3MTk=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-01T17:17:04Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T10:13:22Z"}, "message": "Add `is_null` helper\n\nThis is cheaper than creating a null-`ScalarInt` and comparing\nand then just throwing it away.", "tree": {"sha": "88fc10c4c3336396defae41c0b5c7e4dd3b5b9c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88fc10c4c3336396defae41c0b5c7e4dd3b5b9c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f03b18b99b683c25a584344f73cdf9704d77b719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f03b18b99b683c25a584344f73cdf9704d77b719", "html_url": "https://github.com/rust-lang/rust/commit/f03b18b99b683c25a584344f73cdf9704d77b719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f03b18b99b683c25a584344f73cdf9704d77b719/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0347ca7d02276c8f395bac553d7df400cc10548e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0347ca7d02276c8f395bac553d7df400cc10548e", "html_url": "https://github.com/rust-lang/rust/commit/0347ca7d02276c8f395bac553d7df400cc10548e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "89d9ba2c0c34bd3af72bf11cf8bfe601b64a4e16", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f03b18b99b683c25a584344f73cdf9704d77b719/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03b18b99b683c25a584344f73cdf9704d77b719/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=f03b18b99b683c25a584344f73cdf9704d77b719", "patch": "@@ -188,6 +188,11 @@ impl ScalarInt {\n         Self { data: 0, size: size.bytes() as u8 }\n     }\n \n+    #[inline]\n+    pub fn is_null(self) -> bool {\n+        self.data == 0\n+    }\n+\n     pub(crate) fn ptr_sized_op<'tcx>(\n         self,\n         dl: &TargetDataLayout,"}, {"sha": "c72089ec55a993da51f9e621c1ea5f83a2a9aca5", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f03b18b99b683c25a584344f73cdf9704d77b719/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03b18b99b683c25a584344f73cdf9704d77b719/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=f03b18b99b683c25a584344f73cdf9704d77b719", "patch": "@@ -1,6 +1,6 @@\n use rustc_middle::mir;\n use rustc_middle::ty::layout::HasTyCtxt;\n-use rustc_middle::ty::{self, ScalarInt, Ty};\n+use rustc_middle::ty::{self, Ty};\n use std::borrow::Borrow;\n use std::collections::hash_map::Entry;\n use std::hash::Hash;\n@@ -199,7 +199,7 @@ impl<'mir, 'tcx: 'mir> CompileTimeEvalContext<'mir, 'tcx> {\n             // is in bounds, because if they are in bounds, the pointer can't be null.\n             // Inequality with integers other than null can never be known for sure.\n             (Scalar::Int(int), Scalar::Ptr(ptr)) | (Scalar::Ptr(ptr), Scalar::Int(int)) => {\n-                int == ScalarInt::null(int.size()) && !self.memory.ptr_may_be_null(ptr)\n+                int.is_null() && !self.memory.ptr_may_be_null(ptr)\n             }\n             // FIXME: return `true` for at least some comparisons where we can reliably\n             // determine the result of runtime inequality tests at compile-time."}]}