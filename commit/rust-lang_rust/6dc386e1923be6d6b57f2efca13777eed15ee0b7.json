{"sha": "6dc386e1923be6d6b57f2efca13777eed15ee0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYzM4NmUxOTIzYmU2ZDZiNTdmMmVmY2ExMzc3N2VlZDE1ZWUwYjc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-05T16:04:52Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-17T12:34:58Z"}, "message": "Don't truncate the shift amount\n\nIt isn't actually necessary", "tree": {"sha": "80fd8133fce00bf39472062dd8346c85d71069e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80fd8133fce00bf39472062dd8346c85d71069e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dc386e1923be6d6b57f2efca13777eed15ee0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc386e1923be6d6b57f2efca13777eed15ee0b7", "html_url": "https://github.com/rust-lang/rust/commit/6dc386e1923be6d6b57f2efca13777eed15ee0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dc386e1923be6d6b57f2efca13777eed15ee0b7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7cfb9d6d5abee6c3774fa7530f3fbf4e174137a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cfb9d6d5abee6c3774fa7530f3fbf4e174137a", "html_url": "https://github.com/rust-lang/rust/commit/f7cfb9d6d5abee6c3774fa7530f3fbf4e174137a"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "1a0cf939b2fa869ff28c262b67c153bd851f0698", "filename": "src/num.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6dc386e1923be6d6b57f2efca13777eed15ee0b7/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc386e1923be6d6b57f2efca13777eed15ee0b7/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=6dc386e1923be6d6b57f2efca13777eed15ee0b7", "patch": "@@ -293,22 +293,20 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n         }\n         BinOp::Shl => {\n             let lhs_ty = fx.bcx.func.dfg.value_type(lhs);\n-            let actual_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n-            let actual_shift = clif_intcast(fx, actual_shift, types::I8, false);\n-            let val = fx.bcx.ins().ishl(lhs, actual_shift);\n+            let masked_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n+            let val = fx.bcx.ins().ishl(lhs, masked_shift);\n             let ty = fx.bcx.func.dfg.value_type(val);\n             let max_shift = i64::from(ty.bits()) - 1;\n             let has_overflow = fx.bcx.ins().icmp_imm(IntCC::UnsignedGreaterThan, rhs, max_shift);\n             (val, has_overflow)\n         }\n         BinOp::Shr => {\n             let lhs_ty = fx.bcx.func.dfg.value_type(lhs);\n-            let actual_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n-            let actual_shift = clif_intcast(fx, actual_shift, types::I8, false);\n+            let masked_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n             let val = if !signed {\n-                fx.bcx.ins().ushr(lhs, actual_shift)\n+                fx.bcx.ins().ushr(lhs, masked_shift)\n             } else {\n-                fx.bcx.ins().sshr(lhs, actual_shift)\n+                fx.bcx.ins().sshr(lhs, masked_shift)\n             };\n             let ty = fx.bcx.func.dfg.value_type(val);\n             let max_shift = i64::from(ty.bits()) - 1;"}]}