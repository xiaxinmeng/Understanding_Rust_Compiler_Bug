{"sha": "1a235274a1aec01d8bf7f30e1631fba62e2ca411", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMjM1Mjc0YTFhZWMwMWQ4YmY3ZjMwZTE2MzFmYmE2MmUyY2E0MTE=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-10-25T00:07:12Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-10-25T00:34:45Z"}, "message": "libsyntax: Consolidate branch to benefit from exhaustive checking instead of unwrapping", "tree": {"sha": "d3b6cb75a5dbca89f669428793f98c0e774ccbae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b6cb75a5dbca89f669428793f98c0e774ccbae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a235274a1aec01d8bf7f30e1631fba62e2ca411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a235274a1aec01d8bf7f30e1631fba62e2ca411", "html_url": "https://github.com/rust-lang/rust/commit/1a235274a1aec01d8bf7f30e1631fba62e2ca411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a235274a1aec01d8bf7f30e1631fba62e2ca411/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "998914f5da91bd6e07a0bdf45612dcd446e6fa94", "url": "https://api.github.com/repos/rust-lang/rust/commits/998914f5da91bd6e07a0bdf45612dcd446e6fa94", "html_url": "https://github.com/rust-lang/rust/commit/998914f5da91bd6e07a0bdf45612dcd446e6fa94"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "02faf315f01ca95c8420d707a550903bf1967ef2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a235274a1aec01d8bf7f30e1631fba62e2ca411/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a235274a1aec01d8bf7f30e1631fba62e2ca411/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1a235274a1aec01d8bf7f30e1631fba62e2ca411", "patch": "@@ -3304,13 +3304,13 @@ impl<'a> Parser<'a> {\n                             pat = PatEnum(path, Some(args));\n                         }\n                       }\n-                      _ if qself.is_some() => {\n-                        // Parse qualified path\n-                        pat = PatQPath(qself.unwrap(), path);\n-                      }\n                       _ => {\n-                        // Parse nullary enum\n-                        pat = PatEnum(path, Some(vec![]));\n+                        pat = match qself {\n+                            // Parse qualified path\n+                            Some(qself) => PatQPath(qself, path),\n+                            // Parse nullary enum\n+                            None => PatEnum(path, Some(vec![]))\n+                        };\n                       }\n                     }\n                 }"}]}