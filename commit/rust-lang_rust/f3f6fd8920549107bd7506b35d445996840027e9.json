{"sha": "f3f6fd8920549107bd7506b35d445996840027e9", "node_id": "C_kwDOAAsO6NoAKGYzZjZmZDg5MjA1NDkxMDdiZDc1MDZiMzVkNDQ1OTk2ODQwMDI3ZTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-18T01:59:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-18T01:59:38Z"}, "message": "Auto merge of #10775 - lochetti:fix_10723, r=xFrednet\n\nIgnoring `let_underscore_untyped` warnings in code from proc macros\n\nDon't linting let_underscore_untyped if code was generated by procedural macro.\n\nThis PR fixes https://github.com/rust-lang/rust-clippy/issues/10723\n\n---\n\ncloses: https://github.com/rust-lang/rust-clippy/issues/10723\n\nchangelog: Fix: [`let_underscore_untyped`]: No longer lints inside proc macros\n[#10775](https://github.com/rust-lang/rust-clippy/pull/10775)\n<!-- changelog_checked -->", "tree": {"sha": "7f0e70fec87def7e0f4a2ad04b96e329c71faee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f0e70fec87def7e0f4a2ad04b96e329c71faee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3f6fd8920549107bd7506b35d445996840027e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f6fd8920549107bd7506b35d445996840027e9", "html_url": "https://github.com/rust-lang/rust/commit/f3f6fd8920549107bd7506b35d445996840027e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3f6fd8920549107bd7506b35d445996840027e9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223f5184ba45e54cebaca3317fe9bcc24a725dc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/223f5184ba45e54cebaca3317fe9bcc24a725dc1", "html_url": "https://github.com/rust-lang/rust/commit/223f5184ba45e54cebaca3317fe9bcc24a725dc1"}, {"sha": "2d9d81fc1e881f4ccf84c0509ffc23c8086cdcc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d9d81fc1e881f4ccf84c0509ffc23c8086cdcc6", "html_url": "https://github.com/rust-lang/rust/commit/2d9d81fc1e881f4ccf84c0509ffc23c8086cdcc6"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "34a9d21760631bc040f240f32dfc585914a94f37", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3f6fd8920549107bd7506b35d445996840027e9/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f6fd8920549107bd7506b35d445996840027e9/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=f3f6fd8920549107bd7506b35d445996840027e9", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_from_proc_macro;\n use clippy_utils::ty::{implements_trait, is_must_use_ty, match_type};\n use clippy_utils::{is_must_use_func_call, paths};\n use rustc_hir::{ExprKind, Local, PatKind};\n@@ -138,7 +139,7 @@ const SYNC_GUARD_PATHS: [&[&str]; 3] = [\n ];\n \n impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n-    fn check_local(&mut self, cx: &LateContext<'_>, local: &Local<'_>) {\n+    fn check_local(&mut self, cx: &LateContext<'tcx>, local: &Local<'tcx>) {\n         if !in_external_macro(cx.tcx.sess, local.span)\n             && let PatKind::Wild = local.pat.kind\n             && let Some(init) = local.init\n@@ -200,6 +201,10 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n \t\t\t\t\t}\n \t\t\t\t}\n \n+                // Ignore if it is from a procedural macro...\n+                if is_from_proc_macro(cx, init) {\n+                    return;\n+                }\n \n \t\t\t\tspan_lint_and_help(\n                     cx,"}, {"sha": "05ecd9b281ab286b6ce2dab16f0cf4e4e62e7b44", "filename": "tests/ui/let_underscore_untyped.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f3f6fd8920549107bd7506b35d445996840027e9/tests%2Fui%2Flet_underscore_untyped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f6fd8920549107bd7506b35d445996840027e9/tests%2Fui%2Flet_underscore_untyped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.rs?ref=f3f6fd8920549107bd7506b35d445996840027e9", "patch": "@@ -1,6 +1,12 @@\n+//@aux-build: proc_macros.rs\n+\n #![allow(unused)]\n #![warn(clippy::let_underscore_untyped)]\n \n+extern crate proc_macros;\n+use proc_macros::with_span;\n+\n+use clippy_utils::is_from_proc_macro;\n use std::future::Future;\n use std::{boxed::Box, fmt::Display};\n \n@@ -32,6 +38,14 @@ fn g() -> impl Fn() {\n     || {}\n }\n \n+with_span!(\n+    span\n+\n+    fn dont_lint_proc_macro() {\n+        let _ = a();\n+    }\n+);\n+\n fn main() {\n     let _ = a();\n     let _ = b(1);"}, {"sha": "bbf2508af10b7439bf6e8cd7cda3b5bc73511125", "filename": "tests/ui/let_underscore_untyped.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f3f6fd8920549107bd7506b35d445996840027e9/tests%2Fui%2Flet_underscore_untyped.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3f6fd8920549107bd7506b35d445996840027e9/tests%2Fui%2Flet_underscore_untyped.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.stderr?ref=f3f6fd8920549107bd7506b35d445996840027e9", "patch": "@@ -1,60 +1,60 @@\n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:36:5\n+  --> $DIR/let_underscore_untyped.rs:50:5\n    |\n LL |     let _ = a();\n    |     ^^^^^^^^^^^^\n    |\n help: consider adding a type annotation\n-  --> $DIR/let_underscore_untyped.rs:36:10\n+  --> $DIR/let_underscore_untyped.rs:50:10\n    |\n LL |     let _ = a();\n    |          ^\n    = note: `-D clippy::let-underscore-untyped` implied by `-D warnings`\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:37:5\n+  --> $DIR/let_underscore_untyped.rs:51:5\n    |\n LL |     let _ = b(1);\n    |     ^^^^^^^^^^^^^\n    |\n help: consider adding a type annotation\n-  --> $DIR/let_underscore_untyped.rs:37:10\n+  --> $DIR/let_underscore_untyped.rs:51:10\n    |\n LL |     let _ = b(1);\n    |          ^\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:39:5\n+  --> $DIR/let_underscore_untyped.rs:53:5\n    |\n LL |     let _ = d(&1);\n    |     ^^^^^^^^^^^^^^\n    |\n help: consider adding a type annotation\n-  --> $DIR/let_underscore_untyped.rs:39:10\n+  --> $DIR/let_underscore_untyped.rs:53:10\n    |\n LL |     let _ = d(&1);\n    |          ^\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:40:5\n+  --> $DIR/let_underscore_untyped.rs:54:5\n    |\n LL |     let _ = e();\n    |     ^^^^^^^^^^^^\n    |\n help: consider adding a type annotation\n-  --> $DIR/let_underscore_untyped.rs:40:10\n+  --> $DIR/let_underscore_untyped.rs:54:10\n    |\n LL |     let _ = e();\n    |          ^\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:41:5\n+  --> $DIR/let_underscore_untyped.rs:55:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n    |\n help: consider adding a type annotation\n-  --> $DIR/let_underscore_untyped.rs:41:10\n+  --> $DIR/let_underscore_untyped.rs:55:10\n    |\n LL |     let _ = f();\n    |          ^"}]}