{"sha": "05c31baf83ffe6f96ee379d00a236356ce39fd6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YzMxYmFmODNmZmU2Zjk2ZWUzNzlkMDBhMjM2MzU2Y2UzOWZkNmQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-04T13:09:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-04T13:09:04Z"}, "message": "Rollup merge of #59639 - cuviper:ignore-uninhabited, r=eddyb\n\nNever return uninhabited values at all\n\nFunctions with uninhabited return values are already marked `noreturn`,\nbut we were still generating return instructions for this. When running\nwith `-C passes=lint`, LLVM prints:\n\n    Unusual: Return statement in function with noreturn attribute\n\nThe LLVM manual makes a stronger statement about `noreturn` though:\n\n> This produces undefined behavior at runtime if the function ever does\ndynamically return.\n\nWe now emit an `abort` anywhere that would have tried to return an\nuninhabited value.\n\nFixes #48227\ncc #7463 #48229\n\nr? @eddyb", "tree": {"sha": "fd21ae4442c99cc154c885b3a2ef29b05f78138d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd21ae4442c99cc154c885b3a2ef29b05f78138d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05c31baf83ffe6f96ee379d00a236356ce39fd6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpgHwCRBK7hj4Ov3rIwAAdHIIAFtZb5l8oRsLZGU/T0G5bqeo\nTm3QKu42Bc+LKkGhqQ9PzqKRt4IWZEqL2tIzH6ALYaQSYX9hYt0O3sGSxiCRVa7b\nTbPMbyzCgLl4W/fNoOtCGW7UCc+VqLRbC6Nnwdtc5srjCRzED7STvIO4db8wCX8T\n19K2WE+q8RA7om0onQbsIBeGoduS/WeU90mwChh5opFEl5uwCnKva/GpcqCkCZWu\njvoVr2pSy8Noe6sFqEaMKnDf/8hfPeINH08OLHlJgtQpQgRjNhtI14VgglZ9bz5P\ndkoDfbrp7WRBMjzfgsiuqGIXenQNssmvJp7l2bqpDJ+p413XGLC7ppdxJIcgbnA=\n=d3E0\n-----END PGP SIGNATURE-----\n", "payload": "tree fd21ae4442c99cc154c885b3a2ef29b05f78138d\nparent 56328a595201285fcafc07835a64799cf59171f4\nparent c2e0d7f1eb25bd9b4a8eaa7990cd0fd3a8c416bb\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554383344 +0200\ncommitter GitHub <noreply@github.com> 1554383344 +0200\n\nRollup merge of #59639 - cuviper:ignore-uninhabited, r=eddyb\n\nNever return uninhabited values at all\n\nFunctions with uninhabited return values are already marked `noreturn`,\nbut we were still generating return instructions for this. When running\nwith `-C passes=lint`, LLVM prints:\n\n    Unusual: Return statement in function with noreturn attribute\n\nThe LLVM manual makes a stronger statement about `noreturn` though:\n\n> This produces undefined behavior at runtime if the function ever does\ndynamically return.\n\nWe now emit an `abort` anywhere that would have tried to return an\nuninhabited value.\n\nFixes #48227\ncc #7463 #48229\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05c31baf83ffe6f96ee379d00a236356ce39fd6d", "html_url": "https://github.com/rust-lang/rust/commit/05c31baf83ffe6f96ee379d00a236356ce39fd6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05c31baf83ffe6f96ee379d00a236356ce39fd6d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56328a595201285fcafc07835a64799cf59171f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/56328a595201285fcafc07835a64799cf59171f4", "html_url": "https://github.com/rust-lang/rust/commit/56328a595201285fcafc07835a64799cf59171f4"}, {"sha": "c2e0d7f1eb25bd9b4a8eaa7990cd0fd3a8c416bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e0d7f1eb25bd9b4a8eaa7990cd0fd3a8c416bb", "html_url": "https://github.com/rust-lang/rust/commit/c2e0d7f1eb25bd9b4a8eaa7990cd0fd3a8c416bb"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "e64c847db651bbaebdd0da0a7e981f3e45225c05", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/05c31baf83ffe6f96ee379d00a236356ce39fd6d/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c31baf83ffe6f96ee379d00a236356ce39fd6d/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=05c31baf83ffe6f96ee379d00a236356ce39fd6d", "patch": "@@ -238,6 +238,13 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 }\n             }\n         }\n+        if self.fn_ty.ret.layout.abi.is_uninhabited() {\n+            // Functions with uninhabited return values are marked `noreturn`,\n+            // so we should make sure that we never actually do.\n+            bx.abort();\n+            bx.unreachable();\n+            return;\n+        }\n         let llval = match self.fn_ty.ret.mode {\n             PassMode::Ignore(IgnoreMode::Zst) | PassMode::Indirect(..) => {\n                 bx.ret_void();"}, {"sha": "1b65da9f2877a74e98b85297e3d2ecfcd80adaa1", "filename": "src/test/codegen/noreturn-uninhabited.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/05c31baf83ffe6f96ee379d00a236356ce39fd6d/src%2Ftest%2Fcodegen%2Fnoreturn-uninhabited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c31baf83ffe6f96ee379d00a236356ce39fd6d/src%2Ftest%2Fcodegen%2Fnoreturn-uninhabited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnoreturn-uninhabited.rs?ref=05c31baf83ffe6f96ee379d00a236356ce39fd6d", "patch": "@@ -0,0 +1,32 @@\n+// compile-flags: -g -C no-prepopulate-passes\n+// ignore-tidy-linelength\n+\n+#![crate_type = \"lib\"]\n+\n+#[derive(Clone, Copy)]\n+pub enum EmptyEnum {}\n+\n+#[no_mangle]\n+pub fn empty(x: &EmptyEnum) -> EmptyEnum {\n+    // CHECK: @empty({{.*}}) unnamed_addr #0\n+    // CHECK-NOT: ret void\n+    // CHECK: call void @llvm.trap()\n+    // CHECK: unreachable\n+    *x\n+}\n+\n+pub struct Foo(String, EmptyEnum);\n+\n+#[no_mangle]\n+pub fn foo(x: String, y: &EmptyEnum) -> Foo {\n+    // CHECK: @foo({{.*}}) unnamed_addr #0\n+    // CHECK-NOT: ret %Foo\n+    // CHECK: call void @llvm.trap()\n+    // CHECK: unreachable\n+    Foo(x, *y)\n+}\n+\n+// CHECK: attributes #0 = {{{.*}} noreturn {{.*}}}\n+\n+// CHECK: DISubprogram(name: \"empty\", {{.*}} DIFlagNoReturn\n+// CHECK: DISubprogram(name: \"foo\", {{.*}} DIFlagNoReturn"}]}