{"sha": "e44a6bcc8208f9d906febf9278120b75a6af67f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NGE2YmNjODIwOGY5ZDkwNmZlYmY5Mjc4MTIwYjc1YTZhZjY3Zjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-04T09:25:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-04T09:25:23Z"}, "message": "for types in bounds", "tree": {"sha": "0b6a9e8d5c9527d9bd1ed266213d591ea957623c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b6a9e8d5c9527d9bd1ed266213d591ea957623c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e44a6bcc8208f9d906febf9278120b75a6af67f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e44a6bcc8208f9d906febf9278120b75a6af67f9", "html_url": "https://github.com/rust-lang/rust/commit/e44a6bcc8208f9d906febf9278120b75a6af67f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e44a6bcc8208f9d906febf9278120b75a6af67f9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a017aaa52fc41316b5dd2cd90b5171ca869697a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a017aaa52fc41316b5dd2cd90b5171ca869697a", "html_url": "https://github.com/rust-lang/rust/commit/3a017aaa52fc41316b5dd2cd90b5171ca869697a"}], "stats": {"total": 503, "additions": 311, "deletions": 192}, "files": [{"sha": "79bc95ce414d3575464614d11b702698864b6e94", "filename": "crates/libsyntax2/src/grammar/type_params.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -70,15 +70,15 @@ pub(super) fn bounds_without_colon(p: &mut Parser) {\n     loop {\n         let has_paren = p.eat(L_PAREN);\n         p.eat(QUESTION);\n-        if p.at(FOR_KW) {\n-            //TODO\n-        }\n-        if p.at(LIFETIME) {\n-            p.bump();\n-        } else if paths::is_path_start(p) {\n-            paths::type_path(p);\n-        } else {\n-            break;\n+        match p.current() {\n+            LIFETIME => p.bump(),\n+            FOR_KW => {\n+                types::for_type(p)\n+            }\n+            _ if paths::is_path_start(p) => {\n+                types::path_type(p)\n+            }\n+            _ => break,\n         }\n         if has_paren {\n             p.expect(R_PAREN);"}, {"sha": "27e5b086e3d7f26bee5a3418e00badbbb392fbc8", "filename": "crates/libsyntax2/src/grammar/types.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -191,12 +191,17 @@ fn fn_pointer_type(p: &mut Parser) {\n \n // test for_type\n // type A = for<'a> fn() -> ();\n-fn for_type(p: &mut Parser) {\n+pub(super) fn for_type(p: &mut Parser) {\n     assert!(p.at(FOR_KW));\n     let m = p.start();\n     p.bump();\n     type_params::opt_type_param_list(p);\n-    type_(p);\n+    match p.current() {\n+        FN_KW | UNSAFE_KW | EXTERN_KW => fn_pointer_type(p),\n+        _ if paths::is_path_start(p) => path_type_(p, false),\n+        _ => p.error(\"expected a path\"),\n+\n+    }\n     m.complete(p, FOR_TYPE);\n }\n \n@@ -226,12 +231,16 @@ fn dyn_trait_type(p: &mut Parser) {\n // type C = self::Foo;\n // type D = super::Foo;\n pub(super) fn path_type(p: &mut Parser) {\n+    path_type_(p, true)\n+}\n+\n+pub(super) fn path_type_(p: &mut Parser, allow_bounds: bool) {\n     assert!(paths::is_path_start(p) || p.at(L_ANGLE));\n     let m = p.start();\n     paths::type_path(p);\n     // test path_type_with_bounds\n     // fn foo() -> Box<T + 'f> {}\n-    if p.eat(PLUS) {\n+    if allow_bounds && p.eat(PLUS) {\n         type_params::bounds_without_colon(p);\n     }\n     m.complete(p, PATH_TYPE);"}, {"sha": "c3fca013eedec809a74c421c7ae320386736f8c1", "filename": "crates/libsyntax2/tests/data/parser/inline/0016_type_item_where_clause.txt", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -16,11 +16,12 @@ ROOT@[0; 31)\n                 IDENT@[15; 18) \"Foo\"\n         COLON@[18; 19)\n         WHITESPACE@[19; 20)\n-        PATH@[20; 24)\n-          PATH_SEGMENT@[20; 24)\n-            NAME_REF@[20; 24)\n-              IDENT@[20; 24) \"Copy\"\n-              err: `expected COMMA`\n+        PATH_TYPE@[20; 24)\n+          PATH@[20; 24)\n+            PATH_SEGMENT@[20; 24)\n+              NAME_REF@[20; 24)\n+                IDENT@[20; 24) \"Copy\"\n+                err: `expected COMMA`\n     WHITESPACE@[24; 25)\n     EQ@[25; 26)\n     WHITESPACE@[26; 27)"}, {"sha": "549b571c23638337871dc0b7fcc7dfba72947380", "filename": "crates/libsyntax2/tests/data/parser/inline/0041_type_param_bounds.txt", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -16,19 +16,21 @@ ROOT@[0; 35)\n         PLUS@[15; 16)\n         WHITESPACE@[16; 17)\n         QUESTION@[17; 18)\n-        PATH@[18; 23)\n-          PATH_SEGMENT@[18; 23)\n-            NAME_REF@[18; 23)\n-              IDENT@[18; 23) \"Sized\"\n-        WHITESPACE@[23; 24)\n-        PLUS@[24; 25)\n-        WHITESPACE@[25; 26)\n-        L_PAREN@[26; 27)\n-        PATH@[27; 31)\n-          PATH_SEGMENT@[27; 31)\n-            NAME_REF@[27; 31)\n-              IDENT@[27; 31) \"Copy\"\n-        R_PAREN@[31; 32)\n+        PATH_TYPE@[18; 32)\n+          PATH@[18; 23)\n+            PATH_SEGMENT@[18; 23)\n+              NAME_REF@[18; 23)\n+                IDENT@[18; 23) \"Sized\"\n+          WHITESPACE@[23; 24)\n+          PLUS@[24; 25)\n+          WHITESPACE@[25; 26)\n+          L_PAREN@[26; 27)\n+          PATH_TYPE@[27; 31)\n+            PATH@[27; 31)\n+              PATH_SEGMENT@[27; 31)\n+                NAME_REF@[27; 31)\n+                  IDENT@[27; 31) \"Copy\"\n+          R_PAREN@[31; 32)\n       R_ANGLE@[32; 33)\n     SEMI@[33; 34)\n   WHITESPACE@[34; 35)"}, {"sha": "72d9220e81041cf5d374f34c5dbd5b84753166f0", "filename": "crates/libsyntax2/tests/data/parser/inline/0049_trait_item_list.txt", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0049_trait_item_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0049_trait_item_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0049_trait_item_list.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -18,10 +18,11 @@ ROOT@[0; 83)\n           IDENT@[18; 19) \"A\"\n         COLON@[19; 20)\n         WHITESPACE@[20; 21)\n-        PATH@[21; 26)\n-          PATH_SEGMENT@[21; 26)\n-            NAME_REF@[21; 26)\n-              IDENT@[21; 26) \"Clone\"\n+        PATH_TYPE@[21; 26)\n+          PATH@[21; 26)\n+            PATH_SEGMENT@[21; 26)\n+              NAME_REF@[21; 26)\n+                IDENT@[21; 26) \"Clone\"\n         SEMI@[26; 27)\n       WHITESPACE@[27; 32)\n       CONST_DEF@[32; 45)"}, {"sha": "40c77db4b8fd0533c3c193624b788895cae91d73", "filename": "crates/libsyntax2/tests/data/parser/inline/0056_trait_item.txt", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -12,17 +12,19 @@ ROOT@[0; 42)\n       R_ANGLE@[9; 10)\n     COLON@[10; 11)\n     WHITESPACE@[11; 12)\n-    PATH@[12; 16)\n-      PATH_SEGMENT@[12; 16)\n-        NAME_REF@[12; 16)\n-          IDENT@[12; 16) \"Hash\"\n-    WHITESPACE@[16; 17)\n-    PLUS@[17; 18)\n-    WHITESPACE@[18; 19)\n-    PATH@[19; 24)\n-      PATH_SEGMENT@[19; 24)\n-        NAME_REF@[19; 24)\n-          IDENT@[19; 24) \"Clone\"\n+    PATH_TYPE@[12; 24)\n+      PATH@[12; 16)\n+        PATH_SEGMENT@[12; 16)\n+          NAME_REF@[12; 16)\n+            IDENT@[12; 16) \"Hash\"\n+      WHITESPACE@[16; 17)\n+      PLUS@[17; 18)\n+      WHITESPACE@[18; 19)\n+      PATH_TYPE@[19; 24)\n+        PATH@[19; 24)\n+          PATH_SEGMENT@[19; 24)\n+            NAME_REF@[19; 24)\n+              IDENT@[19; 24) \"Clone\"\n     WHITESPACE@[24; 25)\n     WHERE_CLAUSE@[25; 38)\n       WHERE_KW@[25; 30)\n@@ -35,10 +37,11 @@ ROOT@[0; 42)\n                 IDENT@[31; 32) \"U\"\n         COLON@[32; 33)\n         WHITESPACE@[33; 34)\n-        PATH@[34; 38)\n-          PATH_SEGMENT@[34; 38)\n-            NAME_REF@[34; 38)\n-              IDENT@[34; 38) \"Copy\"\n+        PATH_TYPE@[34; 38)\n+          PATH@[34; 38)\n+            PATH_SEGMENT@[34; 38)\n+              NAME_REF@[34; 38)\n+                IDENT@[34; 38) \"Copy\"\n     WHITESPACE@[38; 39)\n     ITEM_LIST@[39; 41)\n       L_CURLY@[39; 40)"}, {"sha": "281e79deb1d007713a18ec50951261ce1625ac3a", "filename": "crates/libsyntax2/tests/data/parser/inline/0059_function_where_clause.txt", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0059_function_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0059_function_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0059_function_where_clause.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -25,10 +25,11 @@ ROOT@[0; 29)\n                 IDENT@[18; 19) \"T\"\n         COLON@[19; 20)\n         WHITESPACE@[20; 21)\n-        PATH@[21; 25)\n-          PATH_SEGMENT@[21; 25)\n-            NAME_REF@[21; 25)\n-              IDENT@[21; 25) \"Copy\"\n+        PATH_TYPE@[21; 25)\n+          PATH@[21; 25)\n+            PATH_SEGMENT@[21; 25)\n+              NAME_REF@[21; 25)\n+                IDENT@[21; 25) \"Copy\"\n     WHITESPACE@[25; 26)\n     BLOCK@[26; 28)\n       L_CURLY@[26; 27)"}, {"sha": "b6fea5ab245961e96cd1907e0c13a0f23acd78af", "filename": "crates/libsyntax2/tests/data/parser/inline/0060_function_type_params.txt", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0060_function_type_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0060_function_type_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0060_function_type_params.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -11,17 +11,19 @@ ROOT@[0; 28)\n           IDENT@[7; 8) \"T\"\n         COLON@[8; 9)\n         WHITESPACE@[9; 10)\n-        PATH@[10; 15)\n-          PATH_SEGMENT@[10; 15)\n-            NAME_REF@[10; 15)\n-              IDENT@[10; 15) \"Clone\"\n-        WHITESPACE@[15; 16)\n-        PLUS@[16; 17)\n-        WHITESPACE@[17; 18)\n-        PATH@[18; 22)\n-          PATH_SEGMENT@[18; 22)\n-            NAME_REF@[18; 22)\n-              IDENT@[18; 22) \"Copy\"\n+        PATH_TYPE@[10; 22)\n+          PATH@[10; 15)\n+            PATH_SEGMENT@[10; 15)\n+              NAME_REF@[10; 15)\n+                IDENT@[10; 15) \"Clone\"\n+          WHITESPACE@[15; 16)\n+          PLUS@[16; 17)\n+          WHITESPACE@[17; 18)\n+          PATH_TYPE@[18; 22)\n+            PATH@[18; 22)\n+              PATH_SEGMENT@[18; 22)\n+                NAME_REF@[18; 22)\n+                  IDENT@[18; 22) \"Copy\"\n       R_ANGLE@[22; 23)\n     PARAM_LIST@[23; 25)\n       L_PAREN@[23; 24)"}, {"sha": "68fce58ee5bffda624e485ce9cc62b1b30eae947", "filename": "crates/libsyntax2/tests/data/parser/inline/0063_impl_trait_type.txt", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0063_impl_trait_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0063_impl_trait_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0063_impl_trait_type.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -10,30 +10,31 @@ ROOT@[0; 43)\n     IMPL_TRAIT_TYPE@[9; 41)\n       IMPL_KW@[9; 13)\n       WHITESPACE@[13; 14)\n-      PATH@[14; 36)\n-        PATH_SEGMENT@[14; 36)\n-          NAME_REF@[14; 22)\n-            IDENT@[14; 22) \"Iterator\"\n-          TYPE_ARG_LIST@[22; 36)\n-            L_ANGLE@[22; 23)\n-            ASSOC_TYPE_ARG@[23; 35)\n-              NAME_REF@[23; 27)\n-                IDENT@[23; 27) \"Item\"\n-              EQ@[27; 28)\n-              PATH_TYPE@[28; 35)\n-                PATH@[28; 35)\n-                  PATH_SEGMENT@[28; 35)\n-                    NAME_REF@[28; 31)\n-                      IDENT@[28; 31) \"Foo\"\n-                    TYPE_ARG_LIST@[31; 35)\n-                      L_ANGLE@[31; 32)\n-                      LIFETIME_ARG@[32; 34)\n-                        LIFETIME@[32; 34) \"'a\"\n-                      R_ANGLE@[34; 35)\n-            R_ANGLE@[35; 36)\n-      WHITESPACE@[36; 37)\n-      PLUS@[37; 38)\n-      WHITESPACE@[38; 39)\n-      LIFETIME@[39; 41) \"'a\"\n+      PATH_TYPE@[14; 41)\n+        PATH@[14; 36)\n+          PATH_SEGMENT@[14; 36)\n+            NAME_REF@[14; 22)\n+              IDENT@[14; 22) \"Iterator\"\n+            TYPE_ARG_LIST@[22; 36)\n+              L_ANGLE@[22; 23)\n+              ASSOC_TYPE_ARG@[23; 35)\n+                NAME_REF@[23; 27)\n+                  IDENT@[23; 27) \"Item\"\n+                EQ@[27; 28)\n+                PATH_TYPE@[28; 35)\n+                  PATH@[28; 35)\n+                    PATH_SEGMENT@[28; 35)\n+                      NAME_REF@[28; 31)\n+                        IDENT@[28; 31) \"Foo\"\n+                      TYPE_ARG_LIST@[31; 35)\n+                        L_ANGLE@[31; 32)\n+                        LIFETIME_ARG@[32; 34)\n+                          LIFETIME@[32; 34) \"'a\"\n+                        R_ANGLE@[34; 35)\n+              R_ANGLE@[35; 36)\n+        WHITESPACE@[36; 37)\n+        PLUS@[37; 38)\n+        WHITESPACE@[38; 39)\n+        LIFETIME@[39; 41) \"'a\"\n     SEMI@[41; 42)\n   WHITESPACE@[42; 43)"}, {"sha": "39bab8dd21ed21502f586473bf65beb7cd8abc57", "filename": "crates/libsyntax2/tests/data/parser/inline/0097_param_list_opt_patterns.txt", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -11,28 +11,29 @@ ROOT@[0; 35)\n           IDENT@[7; 8) \"F\"\n         COLON@[8; 9)\n         WHITESPACE@[9; 10)\n-        PATH@[10; 29)\n-          PATH_SEGMENT@[10; 29)\n-            NAME_REF@[10; 15)\n-              IDENT@[10; 15) \"FnMut\"\n-            PARAM_LIST@[15; 29)\n-              L_PAREN@[15; 16)\n-              PARAM@[16; 28)\n-                REFERENCE_TYPE@[16; 28)\n-                  AMP@[16; 17)\n-                  MUT_KW@[17; 20)\n-                  WHITESPACE@[20; 21)\n-                  PATH_TYPE@[21; 28)\n-                    PATH@[21; 28)\n-                      PATH_SEGMENT@[21; 28)\n-                        NAME_REF@[21; 24)\n-                          IDENT@[21; 24) \"Foo\"\n-                        TYPE_ARG_LIST@[24; 28)\n-                          L_ANGLE@[24; 25)\n-                          LIFETIME_ARG@[25; 27)\n-                            LIFETIME@[25; 27) \"'a\"\n-                          R_ANGLE@[27; 28)\n-              R_PAREN@[28; 29)\n+        PATH_TYPE@[10; 29)\n+          PATH@[10; 29)\n+            PATH_SEGMENT@[10; 29)\n+              NAME_REF@[10; 15)\n+                IDENT@[10; 15) \"FnMut\"\n+              PARAM_LIST@[15; 29)\n+                L_PAREN@[15; 16)\n+                PARAM@[16; 28)\n+                  REFERENCE_TYPE@[16; 28)\n+                    AMP@[16; 17)\n+                    MUT_KW@[17; 20)\n+                    WHITESPACE@[20; 21)\n+                    PATH_TYPE@[21; 28)\n+                      PATH@[21; 28)\n+                        PATH_SEGMENT@[21; 28)\n+                          NAME_REF@[21; 24)\n+                            IDENT@[21; 24) \"Foo\"\n+                          TYPE_ARG_LIST@[24; 28)\n+                            L_ANGLE@[24; 25)\n+                            LIFETIME_ARG@[25; 27)\n+                              LIFETIME@[25; 27) \"'a\"\n+                            R_ANGLE@[27; 28)\n+                R_PAREN@[28; 29)\n       R_ANGLE@[29; 30)\n     PARAM_LIST@[30; 32)\n       L_PAREN@[30; 31)"}, {"sha": "9fe8035541651962865c6e85c3a9c9b4b5c82992", "filename": "crates/libsyntax2/tests/data/parser/inline/0098_where_clause.txt", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -30,21 +30,23 @@ ROOT@[0; 87)\n                 IDENT@[34; 35) \"T\"\n         COLON@[35; 36)\n         WHITESPACE@[36; 37)\n-        PATH@[37; 42)\n-          PATH_SEGMENT@[37; 42)\n-            NAME_REF@[37; 42)\n-              IDENT@[37; 42) \"Clone\"\n-        WHITESPACE@[42; 43)\n-        PLUS@[43; 44)\n-        WHITESPACE@[44; 45)\n-        PATH@[45; 49)\n-          PATH_SEGMENT@[45; 49)\n-            NAME_REF@[45; 49)\n-              IDENT@[45; 49) \"Copy\"\n-        WHITESPACE@[49; 50)\n-        PLUS@[50; 51)\n-        WHITESPACE@[51; 52)\n-        LIFETIME@[52; 59) \"'static\"\n+        PATH_TYPE@[37; 59)\n+          PATH@[37; 42)\n+            PATH_SEGMENT@[37; 42)\n+              NAME_REF@[37; 42)\n+                IDENT@[37; 42) \"Clone\"\n+          WHITESPACE@[42; 43)\n+          PLUS@[43; 44)\n+          WHITESPACE@[44; 45)\n+          PATH_TYPE@[45; 59)\n+            PATH@[45; 49)\n+              PATH_SEGMENT@[45; 49)\n+                NAME_REF@[45; 49)\n+                  IDENT@[45; 49) \"Copy\"\n+            WHITESPACE@[49; 50)\n+            PLUS@[50; 51)\n+            WHITESPACE@[51; 52)\n+            LIFETIME@[52; 59) \"'static\"\n       COMMA@[59; 60)\n       WHITESPACE@[60; 64)\n       WHERE_PRED@[64; 82)"}, {"sha": "c81ae55450da63750a4ba7333a48f46518e7cdc1", "filename": "crates/libsyntax2/tests/data/parser/inline/0100_dyn_trait_type.txt", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0100_dyn_trait_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0100_dyn_trait_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0100_dyn_trait_type.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -10,30 +10,31 @@ ROOT@[0; 42)\n     DYN_TRAIT_TYPE@[9; 40)\n       DYN_KW@[9; 12)\n       WHITESPACE@[12; 13)\n-      PATH@[13; 35)\n-        PATH_SEGMENT@[13; 35)\n-          NAME_REF@[13; 21)\n-            IDENT@[13; 21) \"Iterator\"\n-          TYPE_ARG_LIST@[21; 35)\n-            L_ANGLE@[21; 22)\n-            ASSOC_TYPE_ARG@[22; 34)\n-              NAME_REF@[22; 26)\n-                IDENT@[22; 26) \"Item\"\n-              EQ@[26; 27)\n-              PATH_TYPE@[27; 34)\n-                PATH@[27; 34)\n-                  PATH_SEGMENT@[27; 34)\n-                    NAME_REF@[27; 30)\n-                      IDENT@[27; 30) \"Foo\"\n-                    TYPE_ARG_LIST@[30; 34)\n-                      L_ANGLE@[30; 31)\n-                      LIFETIME_ARG@[31; 33)\n-                        LIFETIME@[31; 33) \"'a\"\n-                      R_ANGLE@[33; 34)\n-            R_ANGLE@[34; 35)\n-      WHITESPACE@[35; 36)\n-      PLUS@[36; 37)\n-      WHITESPACE@[37; 38)\n-      LIFETIME@[38; 40) \"'a\"\n+      PATH_TYPE@[13; 40)\n+        PATH@[13; 35)\n+          PATH_SEGMENT@[13; 35)\n+            NAME_REF@[13; 21)\n+              IDENT@[13; 21) \"Iterator\"\n+            TYPE_ARG_LIST@[21; 35)\n+              L_ANGLE@[21; 22)\n+              ASSOC_TYPE_ARG@[22; 34)\n+                NAME_REF@[22; 26)\n+                  IDENT@[22; 26) \"Item\"\n+                EQ@[26; 27)\n+                PATH_TYPE@[27; 34)\n+                  PATH@[27; 34)\n+                    PATH_SEGMENT@[27; 34)\n+                      NAME_REF@[27; 30)\n+                        IDENT@[27; 30) \"Foo\"\n+                      TYPE_ARG_LIST@[30; 34)\n+                        L_ANGLE@[30; 31)\n+                        LIFETIME_ARG@[31; 33)\n+                          LIFETIME@[31; 33) \"'a\"\n+                        R_ANGLE@[33; 34)\n+              R_ANGLE@[34; 35)\n+        WHITESPACE@[35; 36)\n+        PLUS@[36; 37)\n+        WHITESPACE@[37; 38)\n+        LIFETIME@[38; 40) \"'a\"\n     SEMI@[40; 41)\n   WHITESPACE@[41; 42)"}, {"sha": "aa2f1b7125a0d6a756a8e32d659a09c10a091281", "filename": "crates/libsyntax2/tests/data/parser/ok/0001_struct_item.txt", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -11,10 +11,11 @@ ROOT@[0; 32)\n           IDENT@[9; 10) \"T\"\n         COLON@[10; 11)\n         WHITESPACE@[11; 12)\n-        PATH@[12; 16)\n-          PATH_SEGMENT@[12; 16)\n-            NAME_REF@[12; 16)\n-              IDENT@[12; 16) \"Copy\"\n+        PATH_TYPE@[12; 16)\n+          PATH@[12; 16)\n+            PATH_SEGMENT@[12; 16)\n+              NAME_REF@[12; 16)\n+                IDENT@[12; 16) \"Copy\"\n       R_ANGLE@[16; 17)\n     WHITESPACE@[17; 18)\n     NAMED_FIELD_DEF_LIST@[18; 31)"}, {"sha": "ac1a58e9abc103dae4f8347125d6268ab55e9cad", "filename": "crates/libsyntax2/tests/data/parser/ok/0020_type_param_bounds.txt", "status": "modified", "additions": 40, "deletions": 35, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0020_type_param_bounds.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0020_type_param_bounds.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0020_type_param_bounds.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -102,10 +102,11 @@ ROOT@[0; 200)\n         WHITESPACE@[106; 107)\n         PLUS@[107; 108)\n         WHITESPACE@[108; 109)\n-        PATH@[109; 114)\n-          PATH_SEGMENT@[109; 114)\n-            NAME_REF@[109; 114)\n-              IDENT@[109; 114) \"Clone\"\n+        PATH_TYPE@[109; 114)\n+          PATH@[109; 114)\n+            PATH_SEGMENT@[109; 114)\n+              NAME_REF@[109; 114)\n+                IDENT@[109; 114) \"Clone\"\n       R_ANGLE@[114; 115)\n     SEMI@[115; 116)\n   WHITESPACE@[116; 117)\n@@ -121,17 +122,19 @@ ROOT@[0; 200)\n           IDENT@[126; 127) \"T\"\n         COLON@[127; 128)\n         WHITESPACE@[128; 129)\n-        PATH@[129; 134)\n-          PATH_SEGMENT@[129; 134)\n-            NAME_REF@[129; 134)\n-              IDENT@[129; 134) \"Clone\"\n-        WHITESPACE@[134; 135)\n-        PLUS@[135; 136)\n-        WHITESPACE@[136; 137)\n-        PATH@[137; 141)\n-          PATH_SEGMENT@[137; 141)\n-            NAME_REF@[137; 141)\n-              IDENT@[137; 141) \"Copy\"\n+        PATH_TYPE@[129; 141)\n+          PATH@[129; 134)\n+            PATH_SEGMENT@[129; 134)\n+              NAME_REF@[129; 134)\n+                IDENT@[129; 134) \"Clone\"\n+          WHITESPACE@[134; 135)\n+          PLUS@[135; 136)\n+          WHITESPACE@[136; 137)\n+          PATH_TYPE@[137; 141)\n+            PATH@[137; 141)\n+              PATH_SEGMENT@[137; 141)\n+                NAME_REF@[137; 141)\n+                  IDENT@[137; 141) \"Copy\"\n       R_ANGLE@[141; 142)\n     SEMI@[142; 143)\n   WHITESPACE@[143; 144)\n@@ -147,26 +150,28 @@ ROOT@[0; 200)\n           IDENT@[153; 154) \"T\"\n         COLON@[154; 155)\n         WHITESPACE@[155; 156)\n-        PATH@[156; 161)\n-          PATH_SEGMENT@[156; 161)\n-            COLONCOLON@[156; 158)\n-            NAME_REF@[158; 161)\n-              IDENT@[158; 161) \"Foo\"\n-        WHITESPACE@[161; 162)\n-        PLUS@[162; 163)\n-        WHITESPACE@[163; 164)\n-        PATH@[164; 173)\n-          PATH@[164; 168)\n-            PATH_SEGMENT@[164; 168)\n-              SELF_KW@[164; 168)\n-          COLONCOLON@[168; 170)\n-          PATH_SEGMENT@[170; 173)\n-            NAME_REF@[170; 173)\n-              IDENT@[170; 173) \"Bar\"\n-        WHITESPACE@[173; 174)\n-        PLUS@[174; 175)\n-        WHITESPACE@[175; 176)\n-        LIFETIME@[176; 178) \"'a\"\n+        PATH_TYPE@[156; 178)\n+          PATH@[156; 161)\n+            PATH_SEGMENT@[156; 161)\n+              COLONCOLON@[156; 158)\n+              NAME_REF@[158; 161)\n+                IDENT@[158; 161) \"Foo\"\n+          WHITESPACE@[161; 162)\n+          PLUS@[162; 163)\n+          WHITESPACE@[163; 164)\n+          PATH_TYPE@[164; 178)\n+            PATH@[164; 173)\n+              PATH@[164; 168)\n+                PATH_SEGMENT@[164; 168)\n+                  SELF_KW@[164; 168)\n+              COLONCOLON@[168; 170)\n+              PATH_SEGMENT@[170; 173)\n+                NAME_REF@[170; 173)\n+                  IDENT@[170; 173) \"Bar\"\n+            WHITESPACE@[173; 174)\n+            PLUS@[174; 175)\n+            WHITESPACE@[175; 176)\n+            LIFETIME@[176; 178) \"'a\"\n       R_ANGLE@[178; 179)\n     SEMI@[179; 180)\n   WHITESPACE@[180; 181)"}, {"sha": "588170fbef53a8998a0ed1dab8daa72090594b0f", "filename": "crates/libsyntax2/tests/data/parser/ok/0032_where_for.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.rs?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -0,0 +1,4 @@\n+fn test_serialization<SER>()\n+where\n+    SER: Serialize + for<'de> Deserialize<'de> + PartialEq + std::fmt::Debug,\n+{}"}, {"sha": "e3b9386a8031daf1f07057be6fe2948e06fb5bdc", "filename": "crates/libsyntax2/tests/data/parser/ok/0032_where_for.txt", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0032_where_for.txt?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -0,0 +1,85 @@\n+ROOT@[0; 116)\n+  FN_DEF@[0; 115)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 21)\n+      IDENT@[3; 21) \"test_serialization\"\n+    TYPE_PARAM_LIST@[21; 26)\n+      L_ANGLE@[21; 22)\n+      TYPE_PARAM@[22; 25)\n+        NAME@[22; 25)\n+          IDENT@[22; 25) \"SER\"\n+      R_ANGLE@[25; 26)\n+    PARAM_LIST@[26; 28)\n+      L_PAREN@[26; 27)\n+      R_PAREN@[27; 28)\n+    WHITESPACE@[28; 29)\n+    WHERE_CLAUSE@[29; 112)\n+      WHERE_KW@[29; 34)\n+      WHITESPACE@[34; 39)\n+      WHERE_PRED@[39; 111)\n+        PATH_TYPE@[39; 42)\n+          PATH@[39; 42)\n+            PATH_SEGMENT@[39; 42)\n+              NAME_REF@[39; 42)\n+                IDENT@[39; 42) \"SER\"\n+        COLON@[42; 43)\n+        WHITESPACE@[43; 44)\n+        PATH_TYPE@[44; 111)\n+          PATH@[44; 53)\n+            PATH_SEGMENT@[44; 53)\n+              NAME_REF@[44; 53)\n+                IDENT@[44; 53) \"Serialize\"\n+          WHITESPACE@[53; 54)\n+          PLUS@[54; 55)\n+          WHITESPACE@[55; 56)\n+          FOR_TYPE@[56; 81)\n+            FOR_KW@[56; 59)\n+            TYPE_PARAM_LIST@[59; 64)\n+              L_ANGLE@[59; 60)\n+              LIFETIME_PARAM@[60; 63)\n+                LIFETIME@[60; 63) \"'de\"\n+              R_ANGLE@[63; 64)\n+            WHITESPACE@[64; 65)\n+            PATH_TYPE@[65; 81)\n+              PATH@[65; 81)\n+                PATH_SEGMENT@[65; 81)\n+                  NAME_REF@[65; 76)\n+                    IDENT@[65; 76) \"Deserialize\"\n+                  TYPE_ARG_LIST@[76; 81)\n+                    L_ANGLE@[76; 77)\n+                    LIFETIME_ARG@[77; 80)\n+                      LIFETIME@[77; 80) \"'de\"\n+                    R_ANGLE@[80; 81)\n+          WHITESPACE@[81; 82)\n+          PLUS@[82; 83)\n+          WHITESPACE@[83; 84)\n+          PATH_TYPE@[84; 111)\n+            PATH@[84; 93)\n+              PATH_SEGMENT@[84; 93)\n+                NAME_REF@[84; 93)\n+                  IDENT@[84; 93) \"PartialEq\"\n+            WHITESPACE@[93; 94)\n+            PLUS@[94; 95)\n+            WHITESPACE@[95; 96)\n+            PATH_TYPE@[96; 111)\n+              PATH@[96; 111)\n+                PATH@[96; 104)\n+                  PATH@[96; 99)\n+                    PATH_SEGMENT@[96; 99)\n+                      NAME_REF@[96; 99)\n+                        IDENT@[96; 99) \"std\"\n+                  COLONCOLON@[99; 101)\n+                  PATH_SEGMENT@[101; 104)\n+                    NAME_REF@[101; 104)\n+                      IDENT@[101; 104) \"fmt\"\n+                COLONCOLON@[104; 106)\n+                PATH_SEGMENT@[106; 111)\n+                  NAME_REF@[106; 111)\n+                    IDENT@[106; 111) \"Debug\"\n+      COMMA@[111; 112)\n+    WHITESPACE@[112; 113)\n+    BLOCK@[113; 115)\n+      L_CURLY@[113; 114)\n+      R_CURLY@[114; 115)\n+  WHITESPACE@[115; 116)"}, {"sha": "282a03271f8bbe695c2586ba2523ca0f6ad10340", "filename": "crates/server/src/path_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Fserver%2Fsrc%2Fpath_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44a6bcc8208f9d906febf9278120b75a6af67f9/crates%2Fserver%2Fsrc%2Fpath_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fpath_map.rs?ref=e44a6bcc8208f9d906febf9278120b75a6af67f9", "patch": "@@ -99,8 +99,8 @@ mod test {\n     #[test]\n     fn test_resolve() {\n         let mut m = PathMap::new();\n-        let id1 = m.get_or_insert(PathBuf::from(\"/foo\"));\n-        let id2 = m.get_or_insert(PathBuf::from(\"/foo/bar.rs\"));\n+        let id1 = m.get_or_insert(PathBuf::from(\"/foo\"), Root::Workspace);\n+        let id2 = m.get_or_insert(PathBuf::from(\"/foo/bar.rs\"), Root::Workspace);\n         assert_eq!(\n             m.resolve(id1, &RelativePath::new(\"bar.rs\")),\n             Some(id2),"}]}