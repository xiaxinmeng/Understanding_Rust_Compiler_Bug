{"sha": "84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YjFlMDg0ODYyYzA4YzE5YzM2ZjBjZjFmMzY5ODM0M2M4YmE3ZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-18T04:41:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-18T04:41:43Z"}, "message": "Auto merge of #25560 - Manishearth:rollup, r=Manishearth\n\n- Successful merges: #25526, #25530, #25537\n- Failed merges:", "tree": {"sha": "c8c050b2e23bd046792caaf22df68b981fe7526c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8c050b2e23bd046792caaf22df68b981fe7526c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "html_url": "https://github.com/rust-lang/rust/commit/84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8583c160c0784730b9fd487e0e82615db7ba5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8583c160c0784730b9fd487e0e82615db7ba5b", "html_url": "https://github.com/rust-lang/rust/commit/8a8583c160c0784730b9fd487e0e82615db7ba5b"}, {"sha": "5ed02b5c0eced7c9e4aa72b2096e537bede31df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ed02b5c0eced7c9e4aa72b2096e537bede31df8", "html_url": "https://github.com/rust-lang/rust/commit/5ed02b5c0eced7c9e4aa72b2096e537bede31df8"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d2fe9c6e550c90cf73a1baef1cff6b4e9f746629", "filename": "src/doc/trpl/closures.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fdoc%2Ftrpl%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fdoc%2Ftrpl%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fclosures.md?ref=84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "patch": "@@ -54,9 +54,9 @@ The second is that the syntax is similar, but a bit different. I\u2019ve added spac\n here to make them look a little closer:\n \n ```rust\n-fn  plus_one_v1   (x: i32 ) -> i32 { x + 1 }\n-let plus_one_v2 = |x: i32 | -> i32 { x + 1 };\n-let plus_one_v3 = |x: i32 |          x + 1  ;\n+fn  plus_one_v1   (x: i32) -> i32 { x + 1 }\n+let plus_one_v2 = |x: i32| -> i32 { x + 1 };\n+let plus_one_v3 = |x: i32|          x + 1  ;\n ```\n \n Small differences, but they\u2019re similar in ways.\n@@ -136,7 +136,7 @@ This gives us:\n note: `nums` moved into closure environment here because it has type\n   `[closure(()) -> collections::vec::Vec<i32>]`, which is non-copyable\n let takes_nums = || nums;\n-                    ^~~~~~~\n+                 ^~~~~~~\n ```\n \n `Vec<T>` has ownership over its contents, and therefore, when we refer to it\n@@ -352,8 +352,8 @@ error: the trait `core::marker::Sized` is not implemented for the type\n factory() -> (Fn(i32) -> Vec<i32>) {\n              ^~~~~~~~~~~~~~~~~~~~~\n note: `core::ops::Fn(i32) -> collections::vec::Vec<i32>` does not have a constant size known at compile-time\n-fa ctory() -> (Fn(i32) -> Vec<i32>) {\n-              ^~~~~~~~~~~~~~~~~~~~~\n+factory() -> (Fn(i32) -> Vec<i32>) {\n+             ^~~~~~~~~~~~~~~~~~~~~\n \n ```\n "}, {"sha": "bb5adac5ebfc128751167856e94615e5f81da5c3", "filename": "src/doc/trpl/references-and-borrowing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md?ref=84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "patch": "@@ -297,7 +297,7 @@ We can\u2019t modify `v` because it\u2019s borrowed by the loop.\n References must live as long as the resource they refer to. Rust will check the\n scopes of your references to ensure that this is true.\n \n-If Rust didn\u2019t check that this property, we could accidentally use a reference\n+If Rust didn\u2019t check this property, we could accidentally use a reference\n which was invalid. For example:\n \n ```rust,ignore"}, {"sha": "0d8fb312d11315c3a52d0e4fe6d7075a126c11f1", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84b1e084862c08c19c36f0cf1f3698343c8ba7fa/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=84b1e084862c08c19c36f0cf1f3698343c8ba7fa", "patch": "@@ -111,7 +111,7 @@ fn parse_token_list(file: &str) -> HashMap<String, token::Token> {\n             \"LIT_BINARY_RAW\"    => token::Literal(token::BinaryRaw(Name(0), 0), None),\n             \"QUESTION\"          => token::Question,\n             \"SHEBANG\"           => token::Shebang(Name(0)),\n-            _                   => panic!(\"Bad token str `{}`\", val),\n+            _                   => continue,\n         };\n \n         res.insert(num.to_string(), tok);"}]}