{"sha": "6c6a81e48ed15c27e80e17fe7db6905e15a61a22", "node_id": "C_kwDOAAsO6NoAKDZjNmE4MWU0OGVkMTVjMjdlODBlMTdmZTdkYjY5MDVlMTVhNjFhMjI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-02T18:46:03Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:56Z"}, "message": "Remove binders_to_ignore from LifetimeCaptureContext", "tree": {"sha": "804376c691fc98235314cfd211e71abdd89eb4fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804376c691fc98235314cfd211e71abdd89eb4fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6a81e48ed15c27e80e17fe7db6905e15a61a22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zAACgkQgTGiTgx5\n76/2HhAAu6TpZwWmPGUOEkcneJioahDmE/bh+g0Wno00QRKXITO3PNyWZdZ6aYII\nJSdoh87iz7K+DMBwvy6RLm4ZEhyLM/ZER6XhrsX5P/55l/DlJyIy6FXYIbeuDfm9\nUd+pGoL3FGYpYb1CiTd0qAiXBmiCO7szBl2VR94gK9raRLYrhs14iQIC3s+XN0bq\nZNI4eNJ+tKzTpcarWmhlRUUk+e2j1m/6bN9ud8mPlBixhPEib3EOyj/oEcChSjyX\nsndid9euxo0WujrkzRuuJYmnI0Ihfj8DstfbEhHA8nFxwSN9XS/u7nkuRhIx6PV0\nLLonAyNbIS8/GJoXoVEAodgh1N71bQPryI1De9+AlzCINyvlsfSWdxlTRuCFsZ5x\n3frJgLFDp3omtVphf/Tqxj7z2P7h4NS1oQLMFO5MIPXiFN3iS+KyDmQDmPYNIxiJ\nF3chhGAKxZjb4rXNJSg9EJqOjYSw5dywxtcWg5jt+T+ooyssZcV19OoZaAGeHpyY\nlUnQ9j1KXo6u8/4jYYCpNakIlXnMBIbsYoI8Fuv9qGs16ozXLjLOFFXTuZdkb6XV\nKNmyfelnKOAI+F9QAeF1T3bjvD3kimEw/m7aM60Ps0EofHT6k9T6OsppZhopzetF\nrC891Xv9maKw6Rjz/p5NjFAyLr7goChduOu8aySTB4fRwTZPIuI=\n=Gl+n\n-----END PGP SIGNATURE-----", "payload": "tree 804376c691fc98235314cfd211e71abdd89eb4fb\nparent 95158fdf3a1854a99cf6232538ca6c503be578cf\nauthor Santiago Pastorino <spastorino@gmail.com> 1659465963 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623216 -0300\n\nRemove binders_to_ignore from LifetimeCaptureContext\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6a81e48ed15c27e80e17fe7db6905e15a61a22", "html_url": "https://github.com/rust-lang/rust/commit/6c6a81e48ed15c27e80e17fe7db6905e15a61a22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6a81e48ed15c27e80e17fe7db6905e15a61a22/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95158fdf3a1854a99cf6232538ca6c503be578cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/95158fdf3a1854a99cf6232538ca6c503be578cf", "html_url": "https://github.com/rust-lang/rust/commit/95158fdf3a1854a99cf6232538ca6c503be578cf"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "32ab34bfd2ac883a35ec4015c249fe25e1f2f686", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6c6a81e48ed15c27e80e17fe7db6905e15a61a22/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6a81e48ed15c27e80e17fe7db6905e15a61a22/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=6c6a81e48ed15c27e80e17fe7db6905e15a61a22", "patch": "@@ -45,7 +45,7 @@ use rustc_ast::{self as ast, *};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::Fingerprint;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sorted_map::SortedMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n@@ -146,8 +146,6 @@ struct LifetimeCaptureContext {\n             LifetimeRes, // original resolution\n         ),\n     >,\n-    /// Traversed binders.  The ids in this set should *not* be rebound.\n-    binders_to_ignore: FxHashSet<NodeId>,\n }\n \n trait ResolverAstLoweringExt {\n@@ -768,14 +766,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         let generic_params = self.arena.alloc_from_iter(generic_params);\n         debug!(?generic_params);\n \n-        if let Some(ctxt) = &mut self.captured_lifetimes {\n-            ctxt.binders_to_ignore.insert(binder);\n-        }\n-        let ret = f(self, generic_params);\n-        if let Some(ctxt) = &mut self.captured_lifetimes {\n-            ctxt.binders_to_ignore.remove(&binder);\n-        }\n-        ret\n+        f(self, generic_params)\n     }\n \n     fn with_dyn_type_scope<T>(&mut self, in_scope: bool, f: impl FnOnce(&mut Self) -> T) -> T {\n@@ -1346,7 +1337,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     &mut lctx.captured_lifetimes,\n                     Some(LifetimeCaptureContext {\n                         captures: std::mem::take(&mut collected_lifetimes),\n-                        binders_to_ignore: Default::default(),\n                     }),\n                 );\n \n@@ -1735,10 +1725,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         self.with_hir_id_owner(opaque_ty_node_id, |this| {\n             let lifetime_stash = std::mem::replace(\n                 &mut this.captured_lifetimes,\n-                Some(LifetimeCaptureContext {\n-                    captures: std::mem::take(&mut captures),\n-                    binders_to_ignore: Default::default(),\n-                }),\n+                Some(LifetimeCaptureContext { captures: std::mem::take(&mut captures) }),\n             );\n \n             let lifetimes_in_bounds ="}]}