{"sha": "fb52883690831a0bbb8b97d75eadc696dd2fd422", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNTI4ODM2OTA4MzFhMGJiYjhiOTdkNzVlYWRjNjk2ZGQyZmQ0MjI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-24T23:12:01Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-30T03:16:15Z"}, "message": "Account for existing type params when suggesting replacing `_` for a new one", "tree": {"sha": "413543772522ee9e5cbe4e3f711b7ae0c864c23e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413543772522ee9e5cbe4e3f711b7ae0c864c23e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb52883690831a0bbb8b97d75eadc696dd2fd422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb52883690831a0bbb8b97d75eadc696dd2fd422", "html_url": "https://github.com/rust-lang/rust/commit/fb52883690831a0bbb8b97d75eadc696dd2fd422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb52883690831a0bbb8b97d75eadc696dd2fd422/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c8b2dcb1944a1b693778b7d96a99aaad635bbd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c8b2dcb1944a1b693778b7d96a99aaad635bbd8", "html_url": "https://github.com/rust-lang/rust/commit/6c8b2dcb1944a1b693778b7d96a99aaad635bbd8"}], "stats": {"total": 115, "additions": 81, "deletions": 34}, "files": [{"sha": "ccff01755e93a6b7a7bc3234c08075131b8da643", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=fb52883690831a0bbb8b97d75eadc696dd2fd422", "patch": "@@ -134,11 +134,30 @@ crate fn placeholder_type_error(\n     suggest: bool,\n ) {\n     if !placeholder_types.is_empty() {\n-        let mut sugg: Vec<_> = placeholder_types.iter().map(|sp| (*sp, \"T\".to_string())).collect();\n+        let possible_names = [\"T\", \"K\", \"L\", \"A\", \"B\", \"C\"];\n+        let used_names = generics.iter().filter_map(|p| match p.name {\n+            hir::ParamName::Plain(ident) => Some(ident.name),\n+            _ => None,\n+        }).collect::<Vec<_>>();\n+\n+        let mut type_name = \"ParamName\";\n+        for name in &possible_names {\n+            if !used_names.contains(&Symbol::intern(name)) {\n+                type_name = name;\n+                break;\n+            }\n+        }\n+        \n+        let mut sugg: Vec<_> = placeholder_types.iter()\n+            .map(|sp| (*sp, type_name.to_string()))\n+            .collect();\n         if generics.is_empty() {\n-            sugg.push((ident_span.shrink_to_hi(), \"<T>\".to_string()));\n+            sugg.push((ident_span.shrink_to_hi(), format!(\"<{}>\", type_name)));\n         } else {\n-            sugg.push((generics.iter().last().unwrap().span.shrink_to_hi(), \", T\".to_string()));\n+            sugg.push((\n+                generics.iter().last().unwrap().span.shrink_to_hi(),\n+                format!(\", {}\", type_name),\n+            ));\n         }\n         let mut err = struct_span_err!(\n             tcx.sess,"}, {"sha": "d1fb51e0fe2443e83b4f9d504e70ebdc8139de40", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=fb52883690831a0bbb8b97d75eadc696dd2fd422", "patch": "@@ -19,6 +19,12 @@ static TEST5: (_, _) = (1, 2);\n fn test6(_: _) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n \n+fn test6_b<T>(_: _, _: T) { }\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+\n+fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+\n fn test7(x: _) { let _x: usize = x; }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n "}, {"sha": "20a74b3dac332eacd1d7839136e17a28ca3e7edb", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 53, "deletions": 31, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb52883690831a0bbb8b97d75eadc696dd2fd422/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=fb52883690831a0bbb8b97d75eadc696dd2fd422", "patch": "@@ -54,7 +54,29 @@ LL | fn test6<T>(_: T) { }\n    |         ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:22:13\n+  --> $DIR/typeck_type_placeholder_item.rs:22:18\n+   |\n+LL | fn test6_b<T>(_: _, _: T) { }\n+   |                  ^ not allowed in type signatures\n+   |\n+help: use type parameters instead\n+   |\n+LL | fn test6_b<T, K>(_: K, _: T) { }\n+   |             ^^^     ^\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:25:30\n+   |\n+LL | fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n+   |                              ^ not allowed in type signatures\n+   |\n+help: use type parameters instead\n+   |\n+LL | fn test6_c<T, K, L, A, B, C>(_: C, _: (T, K, L, A, B)) { }\n+   |                         ^^^     ^\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:28:13\n    |\n LL | fn test7(x: _) { let _x: usize = x; }\n    |             ^ not allowed in type signatures\n@@ -65,7 +87,7 @@ LL | fn test7<T>(x: T) { let _x: usize = x; }\n    |         ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:25:22\n+  --> $DIR/typeck_type_placeholder_item.rs:31:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n    |                      ^ not allowed in type signatures\n@@ -76,7 +98,7 @@ LL | fn test8<T>(_f: fn() -> T) { }\n    |         ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:47:8\n+  --> $DIR/typeck_type_placeholder_item.rs:53:8\n    |\n LL |     a: _,\n    |        ^ not allowed in type signatures\n@@ -95,7 +117,7 @@ LL |     b: (T, T),\n    |\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:53:21\n+  --> $DIR/typeck_type_placeholder_item.rs:59:21\n    |\n LL |     fn fn_test() -> _ { 5 }\n    |                     ^\n@@ -104,7 +126,7 @@ LL |     fn fn_test() -> _ { 5 }\n    |                     help: replace this with the correct return type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:56:22\n+  --> $DIR/typeck_type_placeholder_item.rs:62:22\n    |\n LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      ^^^^^^\n@@ -113,7 +135,7 @@ LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      help: replace this with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:59:22\n+  --> $DIR/typeck_type_placeholder_item.rs:65:22\n    |\n LL |     static FN_TEST3: _ = \"test\";\n    |                      ^\n@@ -122,7 +144,7 @@ LL |     static FN_TEST3: _ = \"test\";\n    |                      help: replace `_` with the correct type: `&'static str`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:62:22\n+  --> $DIR/typeck_type_placeholder_item.rs:68:22\n    |\n LL |     static FN_TEST4: _ = 145;\n    |                      ^\n@@ -131,15 +153,15 @@ LL |     static FN_TEST4: _ = 145;\n    |                      help: replace `_` with the correct type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:65:23\n+  --> $DIR/typeck_type_placeholder_item.rs:71:23\n    |\n LL |     static FN_TEST5: (_, _) = (1, 2);\n    |                       ^  ^ not allowed in type signatures\n    |                       |\n    |                       not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:68:20\n+  --> $DIR/typeck_type_placeholder_item.rs:74:20\n    |\n LL |     fn fn_test6(_: _) { }\n    |                    ^ not allowed in type signatures\n@@ -150,7 +172,7 @@ LL |     fn fn_test6<T>(_: T) { }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:71:20\n+  --> $DIR/typeck_type_placeholder_item.rs:77:20\n    |\n LL |     fn fn_test7(x: _) { let _x: usize = x; }\n    |                    ^ not allowed in type signatures\n@@ -161,7 +183,7 @@ LL |     fn fn_test7<T>(x: T) { let _x: usize = x; }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:74:29\n+  --> $DIR/typeck_type_placeholder_item.rs:80:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n@@ -172,7 +194,7 @@ LL |     fn fn_test8<T>(_f: fn() -> T) { }\n    |                ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:96:12\n+  --> $DIR/typeck_type_placeholder_item.rs:102:12\n    |\n LL |         a: _,\n    |            ^ not allowed in type signatures\n@@ -191,19 +213,19 @@ LL |         b: (T, T),\n    |\n \n error[E0282]: type annotations needed\n-  --> $DIR/typeck_type_placeholder_item.rs:101:27\n+  --> $DIR/typeck_type_placeholder_item.rs:107:27\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                           ^^^^^^ cannot infer type\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:101:27\n+  --> $DIR/typeck_type_placeholder_item.rs:107:27\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                           ^^^^^^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:105:29\n+  --> $DIR/typeck_type_placeholder_item.rs:111:29\n    |\n LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             ^^^^^^\n@@ -212,7 +234,7 @@ LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             help: replace this with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:108:21\n+  --> $DIR/typeck_type_placeholder_item.rs:114:21\n    |\n LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                     ^           ^ not allowed in type signatures\n@@ -225,7 +247,7 @@ LL |     fn fn_test13<T>(x: T) -> (i32, T) { (x, x) }\n    |                 ^^^    ^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:113:31\n+  --> $DIR/typeck_type_placeholder_item.rs:119:31\n    |\n LL |     fn method_test1(&self, x: _);\n    |                               ^ not allowed in type signatures\n@@ -236,7 +258,7 @@ LL |     fn method_test1<T>(&self, x: T);\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:115:31\n+  --> $DIR/typeck_type_placeholder_item.rs:121:31\n    |\n LL |     fn method_test2(&self, x: _) -> _;\n    |                               ^     ^ not allowed in type signatures\n@@ -249,7 +271,7 @@ LL |     fn method_test2<T>(&self, x: T) -> T;\n    |                    ^^^           ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:117:31\n+  --> $DIR/typeck_type_placeholder_item.rs:123:31\n    |\n LL |     fn method_test3(&self) -> _;\n    |                               ^ not allowed in type signatures\n@@ -260,7 +282,7 @@ LL |     fn method_test3<T>(&self) -> T;\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:119:26\n+  --> $DIR/typeck_type_placeholder_item.rs:125:26\n    |\n LL |     fn assoc_fn_test1(x: _);\n    |                          ^ not allowed in type signatures\n@@ -271,7 +293,7 @@ LL |     fn assoc_fn_test1<T>(x: T);\n    |                      ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:121:26\n+  --> $DIR/typeck_type_placeholder_item.rs:127:26\n    |\n LL |     fn assoc_fn_test2(x: _) -> _;\n    |                          ^     ^ not allowed in type signatures\n@@ -284,7 +306,7 @@ LL |     fn assoc_fn_test2<T>(x: T) -> T;\n    |                      ^^^    ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:123:28\n+  --> $DIR/typeck_type_placeholder_item.rs:129:28\n    |\n LL |     fn assoc_fn_test3() -> _;\n    |                            ^ not allowed in type signatures\n@@ -295,7 +317,7 @@ LL |     fn assoc_fn_test3<T>() -> T;\n    |                      ^^^      ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:31:24\n+  --> $DIR/typeck_type_placeholder_item.rs:37:24\n    |\n LL |     fn test9(&self) -> _ { () }\n    |                        ^\n@@ -304,7 +326,7 @@ LL |     fn test9(&self) -> _ { () }\n    |                        help: replace this with the correct return type: `()`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:34:27\n+  --> $DIR/typeck_type_placeholder_item.rs:40:27\n    |\n LL |     fn test10(&self, _x : _) { }\n    |                           ^ not allowed in type signatures\n@@ -315,7 +337,7 @@ LL |     fn test10<T>(&self, _x : T) { }\n    |              ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:39:24\n+  --> $DIR/typeck_type_placeholder_item.rs:45:24\n    |\n LL |     fn clone(&self) -> _ { Test9 }\n    |                        ^\n@@ -324,7 +346,7 @@ LL |     fn clone(&self) -> _ { Test9 }\n    |                        help: replace this with the correct return type: `Test9`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:42:37\n+  --> $DIR/typeck_type_placeholder_item.rs:48:37\n    |\n LL |     fn clone_from(&mut self, other: _) { *self = Test9; }\n    |                                     ^ not allowed in type signatures\n@@ -335,7 +357,7 @@ LL |     fn clone_from<T>(&mut self, other: T) { *self = Test9; }\n    |                  ^^^                   ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:80:31\n+  --> $DIR/typeck_type_placeholder_item.rs:86:31\n    |\n LL |         fn fn_test9(&self) -> _ { () }\n    |                               ^\n@@ -344,7 +366,7 @@ LL |         fn fn_test9(&self) -> _ { () }\n    |                               help: replace this with the correct return type: `()`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:83:34\n+  --> $DIR/typeck_type_placeholder_item.rs:89:34\n    |\n LL |         fn fn_test10(&self, _x : _) { }\n    |                                  ^ not allowed in type signatures\n@@ -355,7 +377,7 @@ LL |         fn fn_test10<T>(&self, _x : T) { }\n    |                     ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:88:28\n+  --> $DIR/typeck_type_placeholder_item.rs:94:28\n    |\n LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            ^\n@@ -364,7 +386,7 @@ LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            help: replace this with the correct return type: `main::FnTest9`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:91:41\n+  --> $DIR/typeck_type_placeholder_item.rs:97:41\n    |\n LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n    |                                         ^ not allowed in type signatures\n@@ -374,7 +396,7 @@ help: use type parameters instead\n LL |         fn clone_from<T>(&mut self, other: T) { *self = FnTest9; }\n    |                      ^^^                   ^\n \n-error: aborting due to 36 previous errors\n+error: aborting due to 38 previous errors\n \n Some errors have detailed explanations: E0121, E0282.\n For more information about an error, try `rustc --explain E0121`."}]}