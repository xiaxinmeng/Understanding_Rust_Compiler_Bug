{"sha": "6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "node_id": "C_kwDOAAsO6NoAKDZkZTRiZGZhOGUzNmJjZjVjODE0YjBkNDNhZmMxY2VmYjA2MzA1MzM", "commit": {"author": {"name": "lukaslueg", "email": "lukas.lueg@gmail.com", "date": "2022-08-15T18:13:31Z"}, "committer": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2022-08-15T18:24:30Z"}, "message": "Fix label not starting with lcase-letter\n\nCo-authored-by: Fridtjof Stoldt <xFrednet@gmail.com>", "tree": {"sha": "0ce63e2ed2f27ffd1158e166bda950bad9159ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ce63e2ed2f27ffd1158e166bda950bad9159ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "html_url": "https://github.com/rust-lang/rust/commit/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533/comments", "author": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0428f0d234319649ce7b7d1571ec169d58a6642e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0428f0d234319649ce7b7d1571ec169d58a6642e", "html_url": "https://github.com/rust-lang/rust/commit/0428f0d234319649ce7b7d1571ec169d58a6642e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4d703d691acc2f81e57296256027072221c27214", "filename": "clippy_lints/src/if_let_mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_mutex.rs?ref=6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "patch": "@@ -64,7 +64,7 @@ impl<'tcx> LateLintPass<'tcx> for IfLetMutex {\n                     let diag = |diag: &mut Diagnostic| {\n                         diag.span_label(\n                             op_mutex.span,\n-                            \"This Mutex will remain locked for the entire `if let`-block...\",\n+                            \"this Mutex will remain locked for the entire `if let`-block...\",\n                         );\n                         diag.span_label(\n                             arm_mutex.span,"}, {"sha": "8a4d5dbac592b33d12a0d3b0061413a719e17248", "filename": "tests/ui/if_let_mutex.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533/tests%2Fui%2Fif_let_mutex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6de4bdfa8e36bcf5c814b0d43afc1cefb0630533/tests%2Fui%2Fif_let_mutex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_mutex.stderr?ref=6de4bdfa8e36bcf5c814b0d43afc1cefb0630533", "patch": "@@ -2,7 +2,7 @@ error: calling `Mutex::lock` inside the scope of another `Mutex::lock` causes a\n   --> $DIR/if_let_mutex.rs:10:5\n    |\n LL |       if let Err(locked) = m.lock() {\n-   |       ^                    - This Mutex will remain locked for the entire `if let`-block...\n+   |       ^                    - this Mutex will remain locked for the entire `if let`-block...\n    |  _____|\n    | |\n LL | |         do_stuff(locked);\n@@ -20,7 +20,7 @@ error: calling `Mutex::lock` inside the scope of another `Mutex::lock` causes a\n   --> $DIR/if_let_mutex.rs:22:5\n    |\n LL |       if let Some(locked) = m.lock().unwrap().deref() {\n-   |       ^                     - This Mutex will remain locked for the entire `if let`-block...\n+   |       ^                     - this Mutex will remain locked for the entire `if let`-block...\n    |  _____|\n    | |\n LL | |         do_stuff(locked);\n@@ -37,7 +37,7 @@ error: calling `Mutex::lock` inside the scope of another `Mutex::lock` causes a\n   --> $DIR/if_let_mutex.rs:43:5\n    |\n LL |       if let Ok(i) = mutex.lock() {\n-   |       ^              ----- This Mutex will remain locked for the entire `if let`-block...\n+   |       ^              ----- this Mutex will remain locked for the entire `if let`-block...\n    |  _____|\n    | |\n LL | |         do_stuff(i);"}]}