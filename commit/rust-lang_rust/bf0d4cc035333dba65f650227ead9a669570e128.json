{"sha": "bf0d4cc035333dba65f650227ead9a669570e128", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMGQ0Y2MwMzUzMzNkYmE2NWY2NTAyMjdlYWQ5YTY2OTU3MGUxMjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-16T04:03:40Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-16T04:03:40Z"}, "message": "rustc: Allow external structs to be constructed. Closes #3012.\n\nEmbarrassing.", "tree": {"sha": "11fcbe4d0eae0e8e823816c92e22ab05a2d1de59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11fcbe4d0eae0e8e823816c92e22ab05a2d1de59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf0d4cc035333dba65f650227ead9a669570e128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0d4cc035333dba65f650227ead9a669570e128", "html_url": "https://github.com/rust-lang/rust/commit/bf0d4cc035333dba65f650227ead9a669570e128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf0d4cc035333dba65f650227ead9a669570e128/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee2f0dd63838a7d42007ee848a4a532dd97fdb54", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2f0dd63838a7d42007ee848a4a532dd97fdb54", "html_url": "https://github.com/rust-lang/rust/commit/ee2f0dd63838a7d42007ee848a4a532dd97fdb54"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "70bf3f580ce02429bc7de671d7d44a253d067779", "filename": "src/rustc/middle/resolve3.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf0d4cc035333dba65f650227ead9a669570e128/src%2Frustc%2Fmiddle%2Fresolve3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0d4cc035333dba65f650227ead9a669570e128/src%2Frustc%2Fmiddle%2Fresolve3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve3.rs?ref=bf0d4cc035333dba65f650227ead9a669570e128", "patch": "@@ -1476,6 +1476,8 @@ class Resolver {\n             if has_constructor {\n                 child_name_bindings.define_value(def, dummy_sp());\n             }\n+\n+            self.structs.insert(def_id, has_constructor);\n           }\n           def_self(*) | def_arg(*) | def_local(*) |\n           def_prim_ty(*) | def_ty_param(*) | def_binding(*) |\n@@ -4409,7 +4411,7 @@ class Resolver {\n                 //    let bar = Bar { ... } // no type parameters\n \n                 match self.resolve_path(path, TypeNS, false, visitor) {\n-                    some(def_ty(class_id))\n+                    some(def_ty(class_id)) | some(def_class(class_id, _))\n                             if self.structs.contains_key(class_id) => {\n                         let has_constructor = self.structs.get(class_id);\n                         let class_def = def_class(class_id, has_constructor);"}]}