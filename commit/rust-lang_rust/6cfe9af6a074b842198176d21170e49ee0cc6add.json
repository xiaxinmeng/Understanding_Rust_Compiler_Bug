{"sha": "6cfe9af6a074b842198176d21170e49ee0cc6add", "node_id": "C_kwDOAAsO6NoAKDZjZmU5YWY2YTA3NGI4NDIxOTgxNzZkMjExNzBlNDllZTBjYzZhZGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-10T21:40:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-10T21:40:35Z"}, "message": "Rollup merge of #91575 - compiler-errors:issue-91556, r=cjgillot\n\nFix ICE on format string of macro with secondary-label\n\nThis generalizes the fix #86104 to also correctly skip `Span::from_inner` for the `secondary_label` of a format macro parsing error as well.\n\nWe can alternatively skip the `span_label` diagnostic call for the secondary label as well, since that label probably only makes sense when the _proper_ span is computed.\n\nFixes #91556", "tree": {"sha": "72d0adfc798b935a639b2cff690ada6975cdcd88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72d0adfc798b935a639b2cff690ada6975cdcd88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cfe9af6a074b842198176d21170e49ee0cc6add", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhs8lTCRBK7hj4Ov3rIwAA2fMIADbelUtm7fHCiHA1aHHlI8MM\nGjuPxWLY/AaTXCaoogPynWrzBUXcBu79Rbor5+ledtUrtziQDDUsBNDlBf5cow9n\nrUlgykfi0/70EqMrrvf4BdxnKtyafu83cVZ1rLxi/jhrzNztBLe0S67yMp8dWUM1\n1o0rLxi50h4nIaNqmmsGjsAnjyjjtH3LygeLudxToOb+KVONysIwbNvQr7ksvPWj\nsjI1zHMCbEoZ65+LWZBjr1ntpFFwoMdpSYEpRVcnG8vDU5Z7FOiX/4Cw7TH2uju9\nKCp9zz+tchPmzFuPaTvk9HxnP2tw/vo3wGkigCMhaLwhb03tn2lrHmZ4smvCrUA=\n=37UB\n-----END PGP SIGNATURE-----\n", "payload": "tree 72d0adfc798b935a639b2cff690ada6975cdcd88\nparent ca352c45222dfc55c478d853b7057fcac1bd39ac\nparent 99bd24e9a3a812fcbaa82c3465f28dbe7a60667c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639172435 +0100\ncommitter GitHub <noreply@github.com> 1639172435 +0100\n\nRollup merge of #91575 - compiler-errors:issue-91556, r=cjgillot\n\nFix ICE on format string of macro with secondary-label\n\nThis generalizes the fix #86104 to also correctly skip `Span::from_inner` for the `secondary_label` of a format macro parsing error as well.\n\nWe can alternatively skip the `span_label` diagnostic call for the secondary label as well, since that label probably only makes sense when the _proper_ span is computed.\n\nFixes #91556\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfe9af6a074b842198176d21170e49ee0cc6add", "html_url": "https://github.com/rust-lang/rust/commit/6cfe9af6a074b842198176d21170e49ee0cc6add", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cfe9af6a074b842198176d21170e49ee0cc6add/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca352c45222dfc55c478d853b7057fcac1bd39ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca352c45222dfc55c478d853b7057fcac1bd39ac", "html_url": "https://github.com/rust-lang/rust/commit/ca352c45222dfc55c478d853b7057fcac1bd39ac"}, {"sha": "99bd24e9a3a812fcbaa82c3465f28dbe7a60667c", "url": "https://api.github.com/repos/rust-lang/rust/commits/99bd24e9a3a812fcbaa82c3465f28dbe7a60667c", "html_url": "https://github.com/rust-lang/rust/commit/99bd24e9a3a812fcbaa82c3465f28dbe7a60667c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "8c343b6ea081733c08cbd8c1a62c9110b7936e1e", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe9af6a074b842198176d21170e49ee0cc6add/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe9af6a074b842198176d21170e49ee0cc6add/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=6cfe9af6a074b842198176d21170e49ee0cc6add", "patch": "@@ -995,8 +995,9 @@ pub fn expand_preparsed_format_args(\n             e.note(&note);\n         }\n         if let Some((label, span)) = err.secondary_label {\n-            let sp = fmt_span.from_inner(span);\n-            e.span_label(sp, label);\n+            if efmt_kind_is_lit {\n+                e.span_label(fmt_span.from_inner(span), label);\n+            }\n         }\n         e.emit();\n         return DummyResult::raw_expr(sp, true);"}, {"sha": "e782e6f9076313e73e8baa5cd48108136835bf9f", "filename": "src/test/ui/fmt/issue-91556.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe9af6a074b842198176d21170e49ee0cc6add/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe9af6a074b842198176d21170e49ee0cc6add/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.rs?ref=6cfe9af6a074b842198176d21170e49ee0cc6add", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+  let _ = format!(concat!(\"{0}\ud835\uddb3\ud835\uddbe\ud835\uddcc\ud835\uddcd{\"), i);\n+  //~^ ERROR: invalid format string: expected `'}'` but string was terminated\n+  //~| NOTE: if you intended to print `{`, you can escape it using `{{`\n+  //~| NOTE: in this expansion of concat!\n+  //~| NOTE: in this expansion of concat!\n+  //~| NOTE: expected `'}'` in format string\n+}"}, {"sha": "dbd5aef458b8e4591956f8f91c0de1501df9bbc1", "filename": "src/test/ui/fmt/issue-91556.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe9af6a074b842198176d21170e49ee0cc6add/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe9af6a074b842198176d21170e49ee0cc6add/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fissue-91556.stderr?ref=6cfe9af6a074b842198176d21170e49ee0cc6add", "patch": "@@ -0,0 +1,11 @@\n+error: invalid format string: expected `'}'` but string was terminated\n+  --> $DIR/issue-91556.rs:2:19\n+   |\n+LL |   let _ = format!(concat!(\"{0}\ud835\uddb3\ud835\uddbe\ud835\uddcc\ud835\uddcd{\"), i);\n+   |                   ^^^^^^^^^^^^^^^^^^^ expected `'}'` in format string\n+   |\n+   = note: if you intended to print `{`, you can escape it using `{{`\n+   = note: this error originates in the macro `concat` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}