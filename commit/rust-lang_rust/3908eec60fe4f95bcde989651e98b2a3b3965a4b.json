{"sha": "3908eec60fe4f95bcde989651e98b2a3b3965a4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDhlZWM2MGZlNGY5NWJjZGU5ODk2NTFlOThiMmEzYjM5NjVhNGI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-08T19:09:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T19:09:06Z"}, "message": "Rollup merge of #82881 - Manishearth:crate-root, r=estebank\n\ndiagnostics: Be clear about \"crate root\" and `::foo` paths in resolve diagnostics\n\nVarious changes to make sure the diagnostics are clear about the differences in `::foo` paths across editions:\n\n - `::foo` will say \"crate root\" in 2015 and \"list of imported crates\" in 2018\n - `crate::` will never reference imported crates in 2018\n\nFixes https://github.com/rust-lang/rust/issues/82876", "tree": {"sha": "d26c880126869cb6d0559130b0183f680bd11bfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d26c880126869cb6d0559130b0183f680bd11bfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3908eec60fe4f95bcde989651e98b2a3b3965a4b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRnZSCRBK7hj4Ov3rIwAAdHIIAAZl8HxgsPngy5PrAtvmuZmg\nwph+IpZSUXUTJjeDp2oXn52PeuOu9Porkn2V3mDbpDvKJmfUOAZXXgpZNVNPl0UO\n57m/IMpFVdjPc6BGOrD6ATQV6J936AMEqeyAeOkdD9fAfA8NIvcq1jWdxW9GVY0F\nkkXSTAE8twG/hnp9oM3V4IaK+mnozN//wxvN53PheTbrqA1oYM2N7rM1FAyC5j4m\n7CNL95QTQDKeGcXXdrUTUQyxBTNk03ynshek5uqxS7kinj6JWqvOr5Bvg7H4RRmn\nPzJgRxsTQRNPOunEGchoCa99pKuP8YB42aJDVOt7mc9aXW2Gk6gbweVQY95GDGs=\n=ky9f\n-----END PGP SIGNATURE-----\n", "payload": "tree d26c880126869cb6d0559130b0183f680bd11bfb\nparent a5035c9995a87495267965b3a43bc2e1f66d747d\nparent 0eeae1abfcd8e588b41b01100db4dbc9384f6144\nauthor Mara Bos <m-ou.se@m-ou.se> 1615230546 +0100\ncommitter GitHub <noreply@github.com> 1615230546 +0100\n\nRollup merge of #82881 - Manishearth:crate-root, r=estebank\n\ndiagnostics: Be clear about \"crate root\" and `::foo` paths in resolve diagnostics\n\nVarious changes to make sure the diagnostics are clear about the differences in `::foo` paths across editions:\n\n - `::foo` will say \"crate root\" in 2015 and \"list of imported crates\" in 2018\n - `crate::` will never reference imported crates in 2018\n\nFixes https://github.com/rust-lang/rust/issues/82876\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3908eec60fe4f95bcde989651e98b2a3b3965a4b", "html_url": "https://github.com/rust-lang/rust/commit/3908eec60fe4f95bcde989651e98b2a3b3965a4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3908eec60fe4f95bcde989651e98b2a3b3965a4b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5035c9995a87495267965b3a43bc2e1f66d747d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5035c9995a87495267965b3a43bc2e1f66d747d", "html_url": "https://github.com/rust-lang/rust/commit/a5035c9995a87495267965b3a43bc2e1f66d747d"}, {"sha": "0eeae1abfcd8e588b41b01100db4dbc9384f6144", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eeae1abfcd8e588b41b01100db4dbc9384f6144", "html_url": "https://github.com/rust-lang/rust/commit/0eeae1abfcd8e588b41b01100db4dbc9384f6144"}], "stats": {"total": 142, "additions": 129, "deletions": 13}, "files": [{"sha": "2ee7f53ffa847e4f800838fc69920666df438865", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -16,6 +16,7 @@ use rustc_hir::def::{self, CtorKind, CtorOf, DefKind};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::PrimTy;\n use rustc_session::parse::feature_err;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n@@ -133,7 +134,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         let is_enum_variant = &|res| matches!(res, Res::Def(DefKind::Variant, _));\n \n         // Make the base error.\n-        let expected = source.descr_expected();\n+        let mut expected = source.descr_expected();\n         let path_str = Segment::names_to_string(path);\n         let item_str = path.last().unwrap().ident;\n         let (base_msg, fallback_label, base_span, could_be_expr) = if let Some(res) = res {\n@@ -166,6 +167,15 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             let (mod_prefix, mod_str) = if path.len() == 1 {\n                 (String::new(), \"this scope\".to_string())\n             } else if path.len() == 2 && path[0].ident.name == kw::PathRoot {\n+                if self.r.session.edition() > Edition::Edition2015 {\n+                    // In edition 2018 onwards, the `::foo` syntax may only pull from the extern prelude\n+                    // which overrides all other expectations of item type\n+                    expected = \"crate\";\n+                    (String::new(), \"the list of imported crates\".to_string())\n+                } else {\n+                    (String::new(), \"the crate root\".to_string())\n+                }\n+            } else if path.len() == 2 && path[0].ident.name == kw::Crate {\n                 (String::new(), \"the crate root\".to_string())\n             } else {\n                 let mod_path = &path[..path.len() - 1];"}, {"sha": "2ce54658c0b1074cbce0d07f7430b24aebf904be", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -2433,8 +2433,10 @@ impl<'a> Resolver<'a> {\n                                     Applicability::MaybeIncorrect,\n                                 )),\n                             )\n-                        } else {\n+                        } else if self.session.edition() == Edition::Edition2015 {\n                             (format!(\"maybe a missing crate `{}`?\", ident), None)\n+                        } else {\n+                            (format!(\"could not find `{}` in the crate root\", ident), None)\n                         }\n                     } else if i == 0 {\n                         if ident\n@@ -2450,10 +2452,16 @@ impl<'a> Resolver<'a> {\n                         }\n                     } else {\n                         let parent = path[i - 1].ident.name;\n-                        let parent = if parent == kw::PathRoot {\n-                            \"crate root\".to_owned()\n-                        } else {\n-                            format!(\"`{}`\", parent)\n+                        let parent = match parent {\n+                            // ::foo is mounted at the crate root for 2015, and is the extern\n+                            // prelude for 2018+\n+                            kw::PathRoot if self.session.edition() > Edition::Edition2015 => {\n+                                \"the list of imported crates\".to_owned()\n+                            }\n+                            kw::PathRoot | kw::Crate => \"the crate root\".to_owned(),\n+                            _ => {\n+                                format!(\"`{}`\", parent)\n+                            }\n                         };\n \n                         let mut msg = format!(\"could not find `{}` in {}\", ident, parent);"}, {"sha": "4c890e3ae69949ece9ee03b83da6caf76d47b143", "filename": "src/test/ui/editions-crate-root-2015.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions-crate-root-2015.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -0,0 +1,21 @@\n+// edition:2015\n+\n+mod inner {\n+    fn global_inner(_: ::nonexistant::Foo) {\n+        //~^ ERROR failed to resolve: maybe a missing crate `nonexistant`?\n+    }\n+    fn crate_inner(_: crate::nonexistant::Foo) {\n+        //~^ ERROR failed to resolve: maybe a missing crate `nonexistant`?\n+    }\n+\n+    fn bare_global(_: ::nonexistant) {\n+        //~^ ERROR cannot find type `nonexistant` in the crate root\n+    }\n+    fn bare_crate(_: crate::nonexistant) {\n+        //~^ ERROR cannot find type `nonexistant` in the crate root\n+    }\n+}\n+\n+fn main() {\n+\n+}"}, {"sha": "f8d65fec3d12def79add8452fc4cf944570a6f25", "filename": "src/test/ui/editions-crate-root-2015.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions-crate-root-2015.stderr?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -0,0 +1,28 @@\n+error[E0433]: failed to resolve: maybe a missing crate `nonexistant`?\n+  --> $DIR/editions-crate-root-2015.rs:4:26\n+   |\n+LL |     fn global_inner(_: ::nonexistant::Foo) {\n+   |                          ^^^^^^^^^^^ maybe a missing crate `nonexistant`?\n+\n+error[E0433]: failed to resolve: maybe a missing crate `nonexistant`?\n+  --> $DIR/editions-crate-root-2015.rs:7:30\n+   |\n+LL |     fn crate_inner(_: crate::nonexistant::Foo) {\n+   |                              ^^^^^^^^^^^ maybe a missing crate `nonexistant`?\n+\n+error[E0412]: cannot find type `nonexistant` in the crate root\n+  --> $DIR/editions-crate-root-2015.rs:11:25\n+   |\n+LL |     fn bare_global(_: ::nonexistant) {\n+   |                         ^^^^^^^^^^^ not found in the crate root\n+\n+error[E0412]: cannot find type `nonexistant` in the crate root\n+  --> $DIR/editions-crate-root-2015.rs:14:29\n+   |\n+LL |     fn bare_crate(_: crate::nonexistant) {\n+   |                             ^^^^^^^^^^^ not found in the crate root\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0412, E0433.\n+For more information about an error, try `rustc --explain E0412`."}, {"sha": "61e4329bbb347aa2686f51040576b091d1660330", "filename": "src/test/ui/editions-crate-root-2018.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions-crate-root-2018.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -0,0 +1,21 @@\n+// edition:2018\n+\n+mod inner {\n+    fn global_inner(_: ::nonexistant::Foo) {\n+        //~^ ERROR failed to resolve: could not find `nonexistant` in the list of imported crates\n+    }\n+    fn crate_inner(_: crate::nonexistant::Foo) {\n+        //~^ ERROR failed to resolve: could not find `nonexistant` in the crate root\n+    }\n+\n+    fn bare_global(_: ::nonexistant) {\n+        //~^ ERROR cannot find crate `nonexistant` in the list of imported crates\n+    }\n+    fn bare_crate(_: crate::nonexistant) {\n+        //~^ ERROR cannot find type `nonexistant` in the crate root\n+    }\n+}\n+\n+fn main() {\n+\n+}"}, {"sha": "967a5a2fca155f346d5ab0aedd0f8118e3dad58a", "filename": "src/test/ui/editions-crate-root-2018.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions-crate-root-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions-crate-root-2018.stderr?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -0,0 +1,28 @@\n+error[E0433]: failed to resolve: could not find `nonexistant` in the list of imported crates\n+  --> $DIR/editions-crate-root-2018.rs:4:26\n+   |\n+LL |     fn global_inner(_: ::nonexistant::Foo) {\n+   |                          ^^^^^^^^^^^ could not find `nonexistant` in the list of imported crates\n+\n+error[E0433]: failed to resolve: could not find `nonexistant` in the crate root\n+  --> $DIR/editions-crate-root-2018.rs:7:30\n+   |\n+LL |     fn crate_inner(_: crate::nonexistant::Foo) {\n+   |                              ^^^^^^^^^^^ could not find `nonexistant` in the crate root\n+\n+error[E0412]: cannot find crate `nonexistant` in the list of imported crates\n+  --> $DIR/editions-crate-root-2018.rs:11:25\n+   |\n+LL |     fn bare_global(_: ::nonexistant) {\n+   |                         ^^^^^^^^^^^ not found in the list of imported crates\n+\n+error[E0412]: cannot find type `nonexistant` in the crate root\n+  --> $DIR/editions-crate-root-2018.rs:14:29\n+   |\n+LL |     fn bare_crate(_: crate::nonexistant) {\n+   |                             ^^^^^^^^^^^ not found in the crate root\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0412, E0433.\n+For more information about an error, try `rustc --explain E0412`."}, {"sha": "1cde0f72140d10389349828c91aef2457b1da778", "filename": "src/test/ui/editions/edition-imports-virtual-2015-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `E`\n   --> $DIR/edition-imports-virtual-2015-gated.rs:8:5\n    |\n LL |     gen_gated!();\n-   |     ^^^^^^^^^^^^^ could not find `E` in crate root\n+   |     ^^^^^^^^^^^^^ could not find `E` in the list of imported crates\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "7f1163bebde67b9327021e4a2d059a2c39a61c8b", "filename": "src/test/ui/resolve/raw-ident-in-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -1,5 +1,5 @@\n // Regression test for issue #63882.\n \n-type A = crate::r#break; //~ ERROR cannot find type `r#break` in module `crate`\n+type A = crate::r#break; //~ ERROR cannot find type `r#break` in the crate root\n \n fn main() {}"}, {"sha": "771dacbbb20d9402089eef0f7bf365980220ecf3", "filename": "src/test/ui/resolve/raw-ident-in-path.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fraw-ident-in-path.stderr?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -1,8 +1,8 @@\n-error[E0412]: cannot find type `r#break` in module `crate`\n+error[E0412]: cannot find type `r#break` in the crate root\n   --> $DIR/raw-ident-in-path.rs:3:17\n    |\n LL | type A = crate::r#break;\n-   |                 ^^^^^^^ not found in `crate`\n+   |                 ^^^^^^^ not found in the crate root\n \n error: aborting due to previous error\n "}, {"sha": "def60feb5a6ef18e248c06aeb97588316ac3cc05", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let s = ::xcrate::S;\n-    //~^ ERROR failed to resolve: could not find `xcrate` in crate root\n+    //~^ ERROR failed to resolve: could not find `xcrate` in the list of imported crates\n }"}, {"sha": "7df4f06d1c7e53ca1ffe880631131c685f16e663", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3908eec60fe4f95bcde989651e98b2a3b3965a4b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr?ref=3908eec60fe4f95bcde989651e98b2a3b3965a4b", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve: could not find `xcrate` in crate root\n+error[E0433]: failed to resolve: could not find `xcrate` in the list of imported crates\n   --> $DIR/non-existent-2.rs:4:15\n    |\n LL |     let s = ::xcrate::S;\n-   |               ^^^^^^ could not find `xcrate` in crate root\n+   |               ^^^^^^ could not find `xcrate` in the list of imported crates\n \n error: aborting due to previous error\n "}]}