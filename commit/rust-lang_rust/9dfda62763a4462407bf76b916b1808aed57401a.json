{"sha": "9dfda62763a4462407bf76b916b1808aed57401a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZmRhNjI3NjNhNDQ2MjQwN2JmNzZiOTE2YjE4MDhhZWQ1NzQwMWE=", "commit": {"author": {"name": "Jannis Harder", "email": "me@jix.one", "date": "2021-03-08T10:58:05Z"}, "committer": {"name": "Jannis Harder", "email": "me@jix.one", "date": "2021-03-18T21:52:46Z"}, "message": "Clarify docs for Read::read's return value", "tree": {"sha": "c80d04500f1a944b98b43934707aa435a4baf02a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c80d04500f1a944b98b43934707aa435a4baf02a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dfda62763a4462407bf76b916b1808aed57401a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dfda62763a4462407bf76b916b1808aed57401a", "html_url": "https://github.com/rust-lang/rust/commit/9dfda62763a4462407bf76b916b1808aed57401a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dfda62763a4462407bf76b916b1808aed57401a/comments", "author": {"login": "jix", "id": 128138, "node_id": "MDQ6VXNlcjEyODEzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/128138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jix", "html_url": "https://github.com/jix", "followers_url": "https://api.github.com/users/jix/followers", "following_url": "https://api.github.com/users/jix/following{/other_user}", "gists_url": "https://api.github.com/users/jix/gists{/gist_id}", "starred_url": "https://api.github.com/users/jix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jix/subscriptions", "organizations_url": "https://api.github.com/users/jix/orgs", "repos_url": "https://api.github.com/users/jix/repos", "events_url": "https://api.github.com/users/jix/events{/privacy}", "received_events_url": "https://api.github.com/users/jix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jix", "id": 128138, "node_id": "MDQ6VXNlcjEyODEzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/128138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jix", "html_url": "https://github.com/jix", "followers_url": "https://api.github.com/users/jix/followers", "following_url": "https://api.github.com/users/jix/following{/other_user}", "gists_url": "https://api.github.com/users/jix/gists{/gist_id}", "starred_url": "https://api.github.com/users/jix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jix/subscriptions", "organizations_url": "https://api.github.com/users/jix/orgs", "repos_url": "https://api.github.com/users/jix/repos", "events_url": "https://api.github.com/users/jix/events{/privacy}", "received_events_url": "https://api.github.com/users/jix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c500ec6c36fa8287317d6dc342a64c079301de", "url": "https://api.github.com/repos/rust-lang/rust/commits/76c500ec6c36fa8287317d6dc342a64c079301de", "html_url": "https://github.com/rust-lang/rust/commit/76c500ec6c36fa8287317d6dc342a64c079301de"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "6abb300054af8c22516eb93200324a46941f606c", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9dfda62763a4462407bf76b916b1808aed57401a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dfda62763a4462407bf76b916b1808aed57401a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=9dfda62763a4462407bf76b916b1808aed57401a", "patch": "@@ -514,8 +514,8 @@ pub trait Read {\n     /// waiting for data, but if an object needs to block for a read and cannot,\n     /// it will typically signal this via an [`Err`] return value.\n     ///\n-    /// If the return value of this method is [`Ok(n)`], then it must be\n-    /// guaranteed that `0 <= n <= buf.len()`. A nonzero `n` value indicates\n+    /// If the return value of this method is [`Ok(n)`], then implementations must\n+    /// guarantee that `0 <= n <= buf.len()`. A nonzero `n` value indicates\n     /// that the buffer `buf` has been filled in with `n` bytes of data from this\n     /// source. If `n` is `0`, then it can indicate one of two scenarios:\n     ///\n@@ -529,6 +529,11 @@ pub trait Read {\n     /// This may happen for example because fewer bytes are actually available right now\n     /// (e. g. being close to end-of-file) or because read() was interrupted by a signal.\n     ///\n+    /// As this trait is safe to implement, callers cannot rely on `n <= buf.len()` for safety.\n+    /// Extra care needs to be taken when `unsafe` functions are used to access the read bytes.\n+    /// Callers have to ensure that no unchecked out-of-bounds accesses are possible even if\n+    /// `n > buf.len()`.\n+    ///\n     /// No guarantees are provided about the contents of `buf` when this\n     /// function is called, implementations cannot rely on any property of the\n     /// contents of `buf` being true. It is recommended that *implementations*"}]}