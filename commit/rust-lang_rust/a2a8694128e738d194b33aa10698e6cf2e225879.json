{"sha": "a2a8694128e738d194b33aa10698e6cf2e225879", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYTg2OTQxMjhlNzM4ZDE5NGIzM2FhMTA2OThlNmNmMmUyMjU4Nzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-29T18:23:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-29T18:23:00Z"}, "message": "Auto merge of #33859 - nrc:save-field-sub, r=pnkfelix\n\nsave-analysis: be a bit more defensive with field sub-expressions\n\nPrevents an ice with `(...).f` since the sub-expression is in the AST but not the HIR.\n\nWe could actually do better in this specific case, but it doesn't seem worth it.", "tree": {"sha": "82ad2e7973f5fdc47a1e5136f67cd99f9c2bd98e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ad2e7973f5fdc47a1e5136f67cd99f9c2bd98e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2a8694128e738d194b33aa10698e6cf2e225879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a8694128e738d194b33aa10698e6cf2e225879", "html_url": "https://github.com/rust-lang/rust/commit/a2a8694128e738d194b33aa10698e6cf2e225879", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2a8694128e738d194b33aa10698e6cf2e225879/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f3e8c7863b5af9c85f13ec546d7897359acd32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3e8c7863b5af9c85f13ec546d7897359acd32f", "html_url": "https://github.com/rust-lang/rust/commit/8f3e8c7863b5af9c85f13ec546d7897359acd32f"}, {"sha": "c8ee3f20823251b6141f3046593526c5bb218da3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ee3f20823251b6141f3046593526c5bb218da3", "html_url": "https://github.com/rust-lang/rust/commit/c8ee3f20823251b6141f3046593526c5bb218da3"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "23c03670c1ed673eefc1cc3e84b03ea2502fae5a", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a2a8694128e738d194b33aa10698e6cf2e225879/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a8694128e738d194b33aa10698e6cf2e225879/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=a2a8694128e738d194b33aa10698e6cf2e225879", "patch": "@@ -38,7 +38,7 @@ pub mod external_data;\n pub mod span_utils;\n \n use rustc::hir;\n-use rustc::hir::map::NodeItem;\n+use rustc::hir::map::{Node, NodeItem};\n use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;\n use rustc::session::config::CrateType::CrateTypeExecutable;\n@@ -391,7 +391,14 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n         }\n         match expr.node {\n             ast::ExprKind::Field(ref sub_ex, ident) => {\n-                let hir_node = self.tcx.map.expect_expr(sub_ex.id);\n+                let hir_node = match self.tcx.map.find(sub_ex.id) {\n+                    Some(Node::NodeExpr(expr)) => expr,\n+                    _ => {\n+                        debug!(\"Missing or weird node for sub-expression {} in {:?}\",\n+                               sub_ex.id, expr);\n+                        return None;\n+                    }\n+                };\n                 match self.tcx.expr_ty_adjusted(&hir_node).sty {\n                     ty::TyStruct(def, _) => {\n                         let f = def.struct_variant().field_named(ident.node.name);\n@@ -411,7 +418,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 }\n             }\n             ast::ExprKind::Struct(ref path, _, _) => {\n-                let hir_node = self.tcx.map.expect_expr(expr.id);\n                 match self.tcx.expr_ty_adjusted(&hir_node).sty {\n                     ty::TyStruct(def, _) => {\n                         let sub_span = self.span_utils.span_for_last_ident(path.span);"}]}