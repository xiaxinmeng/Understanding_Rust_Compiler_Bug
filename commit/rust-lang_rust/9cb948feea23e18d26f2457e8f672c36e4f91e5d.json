{"sha": "9cb948feea23e18d26f2457e8f672c36e4f91e5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYjk0OGZlZWEyM2UxOGQyNmYyNDU3ZThmNjcyYzM2ZTRmOTFlNWQ=", "commit": {"author": {"name": "Sam Elliott", "email": "selliott@lowrisc.org", "date": "2019-08-02T16:05:59Z"}, "committer": {"name": "Sam Elliott", "email": "selliott@lowrisc.org", "date": "2019-08-02T16:05:59Z"}, "message": "rustbuild: WebAssembly is no longer an experimental LLVM backend", "tree": {"sha": "df66b7699dc0ede1395846280c427fa619138363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df66b7699dc0ede1395846280c427fa619138363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cb948feea23e18d26f2457e8f672c36e4f91e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb948feea23e18d26f2457e8f672c36e4f91e5d", "html_url": "https://github.com/rust-lang/rust/commit/9cb948feea23e18d26f2457e8f672c36e4f91e5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cb948feea23e18d26f2457e8f672c36e4f91e5d/comments", "author": {"login": "lenary", "id": 14548, "node_id": "MDQ6VXNlcjE0NTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/14548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenary", "html_url": "https://github.com/lenary", "followers_url": "https://api.github.com/users/lenary/followers", "following_url": "https://api.github.com/users/lenary/following{/other_user}", "gists_url": "https://api.github.com/users/lenary/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenary/subscriptions", "organizations_url": "https://api.github.com/users/lenary/orgs", "repos_url": "https://api.github.com/users/lenary/repos", "events_url": "https://api.github.com/users/lenary/events{/privacy}", "received_events_url": "https://api.github.com/users/lenary/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lenary", "id": 14548, "node_id": "MDQ6VXNlcjE0NTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/14548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenary", "html_url": "https://github.com/lenary", "followers_url": "https://api.github.com/users/lenary/followers", "following_url": "https://api.github.com/users/lenary/following{/other_user}", "gists_url": "https://api.github.com/users/lenary/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenary/subscriptions", "organizations_url": "https://api.github.com/users/lenary/orgs", "repos_url": "https://api.github.com/users/lenary/repos", "events_url": "https://api.github.com/users/lenary/events{/privacy}", "received_events_url": "https://api.github.com/users/lenary/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "184fb08037d0349b715d6926af7ec54595607151", "url": "https://api.github.com/repos/rust-lang/rust/commits/184fb08037d0349b715d6926af7ec54595607151", "html_url": "https://github.com/rust-lang/rust/commit/184fb08037d0349b715d6926af7ec54595607151"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "6816eaeaa9486e66e99465094a1c4dce76e2a5ab", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9cb948feea23e18d26f2457e8f672c36e4f91e5d/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/9cb948feea23e18d26f2457e8f672c36e4f91e5d/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=9cb948feea23e18d26f2457e8f672c36e4f91e5d", "patch": "@@ -57,14 +57,13 @@\n # support. You'll need to write a target specification at least, and most\n # likely, teach rustc about the C ABI of the target. Get in touch with the\n # Rust team and file an issue if you need assistance in porting!\n-#targets = \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;X86\"\n+#targets = \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;WebAssembly;X86\"\n \n # LLVM experimental targets to build support for. These targets are specified in\n # the same format as above, but since these targets are experimental, they are\n # not built by default and the experimental Rust compilation targets that depend\n-# on them will not work unless the user opts in to building them. By default the\n-# `WebAssembly` target is enabled when compiling LLVM from scratch.\n-#experimental-targets = \"WebAssembly\"\n+# on them will not work unless the user opts in to building them.\n+#experimental-targets = \"\"\n \n # Cap the number of parallel linker invocations when compiling LLVM.\n # This can be useful when building LLVM with debug info, which significantly"}, {"sha": "174e4638aac81e5af0f413d6ff8bd32a6b2ec96f", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cb948feea23e18d26f2457e8f672c36e4f91e5d/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cb948feea23e18d26f2457e8f672c36e4f91e5d/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=9cb948feea23e18d26f2457e8f672c36e4f91e5d", "patch": "@@ -125,7 +125,7 @@ impl Step for Llvm {\n         } else {\n             match builder.config.llvm_targets {\n                 Some(ref s) => s,\n-                None => \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;X86\",\n+                None => \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;WebAssembly;X86\",\n             }\n         };\n \n@@ -134,7 +134,7 @@ impl Step for Llvm {\n         } else {\n             match builder.config.llvm_experimental_targets {\n                 Some(ref s) => s,\n-                None => \"WebAssembly\",\n+                None => \"\",\n             }\n         };\n "}]}