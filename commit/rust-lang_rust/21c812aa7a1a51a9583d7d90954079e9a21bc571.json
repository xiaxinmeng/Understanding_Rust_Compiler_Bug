{"sha": "21c812aa7a1a51a9583d7d90954079e9a21bc571", "node_id": "C_kwDOAAsO6NoAKDIxYzgxMmFhN2ExYTUxYTk1ODNkN2Q5MDk1NDA3OWU5YTIxYmM1NzE", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-30T15:34:29Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-30T15:34:29Z"}, "message": "Remove Clean trait implementation for ty::VariantDef", "tree": {"sha": "6c441fbcc9d8ca5099ef705cbd641188be9f3e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c441fbcc9d8ca5099ef705cbd641188be9f3e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c812aa7a1a51a9583d7d90954079e9a21bc571", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c812aa7a1a51a9583d7d90954079e9a21bc571", "html_url": "https://github.com/rust-lang/rust/commit/21c812aa7a1a51a9583d7d90954079e9a21bc571", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c812aa7a1a51a9583d7d90954079e9a21bc571/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c907b6f7e0f89c3c4146b585961d2ddcf173584b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c907b6f7e0f89c3c4146b585961d2ddcf173584b", "html_url": "https://github.com/rust-lang/rust/commit/c907b6f7e0f89c3c4146b585961d2ddcf173584b"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "838283e32daf4db61c7721f2ac85f1feb05825ac", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21c812aa7a1a51a9583d7d90954079e9a21bc571/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c812aa7a1a51a9583d7d90954079e9a21bc571/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=21c812aa7a1a51a9583d7d90954079e9a21bc571", "patch": "@@ -17,8 +17,8 @@ use rustc_span::symbol::{kw, sym, Symbol};\n \n use crate::clean::{\n     self, clean_fn_decl_from_did_and_sig, clean_middle_field, clean_middle_ty, clean_ty,\n-    clean_ty_generics, clean_visibility, utils, Attributes, AttributesExt, Clean, ImplKind, ItemId,\n-    Type, Visibility,\n+    clean_ty_generics, clean_variant_def, clean_visibility, utils, Attributes, AttributesExt,\n+    Clean, ImplKind, ItemId, Type, Visibility,\n };\n use crate::core::DocContext;\n use crate::formats::item_type::ItemType;\n@@ -236,7 +236,7 @@ fn build_enum(cx: &mut DocContext<'_>, did: DefId) -> clean::Enum {\n \n     clean::Enum {\n         generics: clean_ty_generics(cx, cx.tcx.generics_of(did), predicates),\n-        variants: cx.tcx.adt_def(did).variants().iter().map(|v| v.clean(cx)).collect(),\n+        variants: cx.tcx.adt_def(did).variants().iter().map(|v| clean_variant_def(v, cx)).collect(),\n     }\n }\n "}, {"sha": "efd8cf5205bb4b0d01658433695d4468b6213502", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/21c812aa7a1a51a9583d7d90954079e9a21bc571/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c812aa7a1a51a9583d7d90954079e9a21bc571/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=21c812aa7a1a51a9583d7d90954079e9a21bc571", "patch": "@@ -1834,23 +1834,21 @@ fn clean_variant_data<'tcx>(\n     }\n }\n \n-impl<'tcx> Clean<'tcx, Item> for ty::VariantDef {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Item {\n-        let kind = match self.ctor_kind {\n-            CtorKind::Const => Variant::CLike,\n-            CtorKind::Fn => Variant::Tuple(\n-                self.fields.iter().map(|field| clean_middle_field(field, cx)).collect(),\n-            ),\n-            CtorKind::Fictive => Variant::Struct(VariantStruct {\n-                struct_type: CtorKind::Fictive,\n-                fields: self.fields.iter().map(|field| clean_middle_field(field, cx)).collect(),\n-            }),\n-        };\n-        let what_rustc_thinks =\n-            Item::from_def_id_and_parts(self.def_id, Some(self.name), VariantItem(kind), cx);\n-        // don't show `pub` for variants, which always inherit visibility\n-        Item { visibility: Inherited, ..what_rustc_thinks }\n-    }\n+pub(crate) fn clean_variant_def<'tcx>(variant: &ty::VariantDef, cx: &mut DocContext<'tcx>) -> Item {\n+    let kind = match variant.ctor_kind {\n+        CtorKind::Const => Variant::CLike,\n+        CtorKind::Fn => Variant::Tuple(\n+            variant.fields.iter().map(|field| clean_middle_field(field, cx)).collect(),\n+        ),\n+        CtorKind::Fictive => Variant::Struct(VariantStruct {\n+            struct_type: CtorKind::Fictive,\n+            fields: variant.fields.iter().map(|field| clean_middle_field(field, cx)).collect(),\n+        }),\n+    };\n+    let what_rustc_thinks =\n+        Item::from_def_id_and_parts(variant.def_id, Some(variant.name), VariantItem(kind), cx);\n+    // don't show `pub` for variants, which always inherit visibility\n+    Item { visibility: Inherited, ..what_rustc_thinks }\n }\n \n impl<'tcx> Clean<'tcx, Variant> for hir::VariantData<'tcx> {"}]}