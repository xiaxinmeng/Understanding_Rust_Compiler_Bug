{"sha": "3a072131da2e574e914073af6d72360ead735781", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMDcyMTMxZGEyZTU3NGU5MTQwNzNhZjZkNzIzNjBlYWQ3MzU3ODE=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-10T06:22:01Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-10T06:22:01Z"}, "message": "Ah, right, rerun the scripts", "tree": {"sha": "855107a74f6707e29359031d7cd1bbf898f79423", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/855107a74f6707e29359031d7cd1bbf898f79423"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a072131da2e574e914073af6d72360ead735781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a072131da2e574e914073af6d72360ead735781", "html_url": "https://github.com/rust-lang/rust/commit/3a072131da2e574e914073af6d72360ead735781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a072131da2e574e914073af6d72360ead735781/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5326b0d62104801f0b33c4d8f3749d93eebc02", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5326b0d62104801f0b33c4d8f3749d93eebc02", "html_url": "https://github.com/rust-lang/rust/commit/4b5326b0d62104801f0b33c4d8f3749d93eebc02"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "4b9bfef79748ce66008ee19963669a5c943c7c17", "filename": "tests/ui/atomic_ordering_exchange.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_exchange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_exchange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange.stderr?ref=3a072131da2e574e914073af6d72360ead735781", "patch": "@@ -79,47 +79,47 @@ LL |     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Release);\n    |\n    = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `Release`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_exchange.rs:35:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n    |                                                         ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `Release`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_exchange.rs:36:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n    |                                                         ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_exchange.rs:39:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n    |                                                         ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_exchange.rs:40:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n    |                                                         ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `Acquire`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `Acquire`\n   --> $DIR/atomic_ordering_exchange.rs:43:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n    |                                                         ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering modes `Acquire` or `Relaxed` instead\n \n-error: compare_exchange's failure ordering may not stronger than the success ordering of `AcqRel`\n+error: compare_exchange's failure ordering may not be stronger than the success ordering of `AcqRel`\n   --> $DIR/atomic_ordering_exchange.rs:44:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);"}, {"sha": "de7026f3ffafa1ecdc9c1bc7ddcfdd1ae445a3da", "filename": "tests/ui/atomic_ordering_exchange_weak.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr?ref=3a072131da2e574e914073af6d72360ead735781", "patch": "@@ -79,47 +79,47 @@ LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::\n    |\n    = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_exchange_weak.rs:37:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n    |                                                                   ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_exchange_weak.rs:38:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n    |                                                                   ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_exchange_weak.rs:41:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n    |                                                                   ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_exchange_weak.rs:42:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n    |                                                                   ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Acquire`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Acquire`\n   --> $DIR/atomic_ordering_exchange_weak.rs:45:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n    |                                                                   ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering modes `Acquire` or `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `AcqRel`\n   --> $DIR/atomic_ordering_exchange_weak.rs:46:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);"}, {"sha": "694548ece97b250b52d756ee143437646e1a7353", "filename": "tests/ui/atomic_ordering_fetch_update.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_fetch_update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a072131da2e574e914073af6d72360ead735781/tests%2Fui%2Fatomic_ordering_fetch_update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_fetch_update.stderr?ref=3a072131da2e574e914073af6d72360ead735781", "patch": "@@ -79,47 +79,47 @@ LL |     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Release, |old| Some(\n    |\n    = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `Release`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_fetch_update.rs:35:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `Release`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `Release`\n   --> $DIR/atomic_ordering_fetch_update.rs:36:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_fetch_update.rs:39:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `Relaxed`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `Relaxed`\n   --> $DIR/atomic_ordering_fetch_update.rs:40:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering mode `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `Acquire`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `Acquire`\n   --> $DIR/atomic_ordering_fetch_update.rs:43:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using ordering modes `Acquire` or `Relaxed` instead\n \n-error: fetch_update's failure ordering may not stronger than the success ordering of `AcqRel`\n+error: fetch_update's failure ordering may not be stronger than the success ordering of `AcqRel`\n   --> $DIR/atomic_ordering_fetch_update.rs:44:46\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));"}]}