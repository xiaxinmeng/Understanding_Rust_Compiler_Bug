{"sha": "0b2f3604fd733db5ad9498eaf129655879c242b3", "node_id": "C_kwDOAAsO6NoAKDBiMmYzNjA0ZmQ3MzNkYjVhZDk0OThlYWYxMjk2NTU4NzljMjQyYjM", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-04-09T22:16:38Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-04-09T22:16:38Z"}, "message": "Update asm-may_unwind test to handle use of asm with outputs.", "tree": {"sha": "1c5b57326664c6b9e28ce340c0cdfe57564c83cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c5b57326664c6b9e28ce340c0cdfe57564c83cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b2f3604fd733db5ad9498eaf129655879c242b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2f3604fd733db5ad9498eaf129655879c242b3", "html_url": "https://github.com/rust-lang/rust/commit/0b2f3604fd733db5ad9498eaf129655879c242b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b2f3604fd733db5ad9498eaf129655879c242b3/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf3ef0da0c630ab239e4f26e86602eabe585e74f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3ef0da0c630ab239e4f26e86602eabe585e74f", "html_url": "https://github.com/rust-lang/rust/commit/bf3ef0da0c630ab239e4f26e86602eabe585e74f"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "bf4202764a7ec665ebdaa4ac97debda0a95b4b03", "filename": "src/test/codegen/asm-may_unwind.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0b2f3604fd733db5ad9498eaf129655879c242b3/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b2f3604fd733db5ad9498eaf129655879c242b3/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs?ref=0b2f3604fd733db5ad9498eaf129655879c242b3", "patch": "@@ -18,10 +18,23 @@ impl Drop for Foo {\n     }\n }\n \n-// CHECK-LABEL: @may_unwind\n+// CHECK-LABEL: @asm_may_unwind\n #[no_mangle]\n-pub unsafe fn may_unwind() {\n+pub unsafe fn asm_may_unwind() {\n     let _m = Foo;\n     // CHECK: invoke void asm sideeffect alignstack inteldialect unwind \"\"\n     asm!(\"\", options(may_unwind));\n }\n+\n+// CHECK-LABEL: @asm_with_result_may_unwind\n+#[no_mangle]\n+pub unsafe fn asm_with_result_may_unwind() -> u64 {\n+    let _m = Foo;\n+    let res: u64;\n+    // CHECK: [[RES:%[0-9]+]] = invoke i64 asm sideeffect alignstack inteldialect unwind\n+    // CHECK-NEXT: to label %[[NORMALBB:[a-b0-9]+]]\n+    asm!(\"mov {}, 1\", out(reg) res, options(may_unwind));\n+    // CHECK: [[NORMALBB]]:\n+    // CHECK: ret i64 [[RES:%[0-9]+]]\n+    res\n+}"}]}