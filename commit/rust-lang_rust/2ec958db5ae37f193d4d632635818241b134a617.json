{"sha": "2ec958db5ae37f193d4d632635818241b134a617", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYzk1OGRiNWFlMzdmMTkzZDRkNjMyNjM1ODE4MjQxYjEzNGE2MTc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-19T16:56:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-19T16:56:37Z"}, "message": "test: fix seeded_rng uses", "tree": {"sha": "e70154a92e7996d0b18a3e40db90992c3f568bd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70154a92e7996d0b18a3e40db90992c3f568bd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec958db5ae37f193d4d632635818241b134a617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec958db5ae37f193d4d632635818241b134a617", "html_url": "https://github.com/rust-lang/rust/commit/2ec958db5ae37f193d4d632635818241b134a617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec958db5ae37f193d4d632635818241b134a617/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acc147769ec8ad6193ee04719dac67d1e66466c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/acc147769ec8ad6193ee04719dac67d1e66466c4", "html_url": "https://github.com/rust-lang/rust/commit/acc147769ec8ad6193ee04719dac67d1e66466c4"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "92e91929f1a2987fc2126e622c8b7cb3c7e07c06", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ec958db5ae37f193d4d632635818241b134a617/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec958db5ae37f193d4d632635818241b134a617/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=2ec958db5ae37f193d4d632635818241b134a617", "patch": "@@ -302,26 +302,26 @@ fn main() {\n         }\n     };\n \n-    let seed = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n+    let seed = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         old_int_benchmarks(rng, num_keys, &mut results);\n         old_str_benchmarks(rng, num_keys, &mut results);\n         write_results(\"std::oldmap::HashMap\", &results);\n     }\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         linear_int_benchmarks(rng, num_keys, &mut results);\n         linear_str_benchmarks(rng, num_keys, &mut results);\n         write_results(\"core::hashmap::linear::LinearMap\", &results);\n     }\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         tree_int_benchmarks(rng, num_keys, &mut results);\n         tree_str_benchmarks(rng, num_keys, &mut results);"}, {"sha": "65bb9fc1e9009ab45989ef129adc5f8e6cd3fdda", "filename": "src/test/bench/core-set.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ec958db5ae37f193d4d632635818241b134a617/src%2Ftest%2Fbench%2Fcore-set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec958db5ae37f193d4d632635818241b134a617/src%2Ftest%2Fbench%2Fcore-set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-set.rs?ref=2ec958db5ae37f193d4d632635818241b134a617", "patch": "@@ -152,27 +152,27 @@ fn main() {\n         }\n     };\n \n-    let seed = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n+    let seed = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n     let max = 200000;\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         results.bench_int(rng, num_keys, max, || LinearSet::new::<uint>());\n         results.bench_str(rng, num_keys, || LinearSet::new::<~str>());\n         write_results(\"core::hashmap::LinearSet\", &results);\n     }\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         results.bench_int(rng, num_keys, max, || TreeSet::new::<uint>());\n         results.bench_str(rng, num_keys, || TreeSet::new::<~str>());\n         write_results(\"std::treemap::TreeSet\", &results);\n     }\n \n     {\n-        let rng = rand::seeded_rng(&seed);\n+        let rng = rand::seeded_rng(seed);\n         let mut results = empty_results();\n         results.bench_int(rng, num_keys, max, || BitvSet::new());\n         write_results(\"std::bitv::BitvSet\", &results);"}]}