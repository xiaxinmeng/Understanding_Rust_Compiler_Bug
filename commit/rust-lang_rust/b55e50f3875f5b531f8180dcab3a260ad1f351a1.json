{"sha": "b55e50f3875f5b531f8180dcab3a260ad1f351a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NWU1MGYzODc1ZjViNTMxZjgxODBkY2FiM2EyNjBhZDFmMzUxYTE=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-04-10T21:57:44Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-04-10T21:57:44Z"}, "message": "rustfmt: Move getopts::Options creation to its own function", "tree": {"sha": "803e011128454179b5f06f0c11395c523045cea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/803e011128454179b5f06f0c11395c523045cea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b55e50f3875f5b531f8180dcab3a260ad1f351a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b55e50f3875f5b531f8180dcab3a260ad1f351a1", "html_url": "https://github.com/rust-lang/rust/commit/b55e50f3875f5b531f8180dcab3a260ad1f351a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b55e50f3875f5b531f8180dcab3a260ad1f351a1/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19849fea15badfb96539034b4dd646eb2d3a551d", "url": "https://api.github.com/repos/rust-lang/rust/commits/19849fea15badfb96539034b4dd646eb2d3a551d", "html_url": "https://github.com/rust-lang/rust/commit/19849fea15badfb96539034b4dd646eb2d3a551d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "dba91612761522bc694700c0349c2a438ed56b3c", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b55e50f3875f5b531f8180dcab3a260ad1f351a1/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b55e50f3875f5b531f8180dcab3a260ad1f351a1/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=b55e50f3875f5b531f8180dcab3a260ad1f351a1", "patch": "@@ -134,7 +134,7 @@ fn update_config(config: &mut Config, matches: &Matches) -> Result<(), String> {\n     }\n }\n \n-fn execute() -> i32 {\n+fn make_opts() -> Options {\n     let mut opts = Options::new();\n     opts.optflag(\"h\", \"help\", \"show this message\");\n     opts.optflag(\"V\", \"version\", \"show version information\");\n@@ -154,6 +154,12 @@ fn execute() -> i32 {\n                  found reverts to the input file path\",\n                 \"[Path for the configuration file]\");\n \n+    opts\n+}\n+\n+fn execute() -> i32 {\n+    let opts = make_opts();\n+\n     let matches = match opts.parse(env::args().skip(1)) {\n         Ok(m) => m,\n         Err(e) => {"}]}