{"sha": "223dbd2187e5b966d192dac9745d47831dccb9b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyM2RiZDIxODdlNWI5NjZkMTkyZGFjOTc0NWQ0NzgzMWRjY2I5YjM=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T10:17:09Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T10:43:06Z"}, "message": "Style fix", "tree": {"sha": "50669f643998b7864b904d75b72a719dd7686a02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50669f643998b7864b904d75b72a719dd7686a02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/223dbd2187e5b966d192dac9745d47831dccb9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/223dbd2187e5b966d192dac9745d47831dccb9b3", "html_url": "https://github.com/rust-lang/rust/commit/223dbd2187e5b966d192dac9745d47831dccb9b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/223dbd2187e5b966d192dac9745d47831dccb9b3/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c51d8f1df1efdb2e98b7717544a6db8cad14e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c51d8f1df1efdb2e98b7717544a6db8cad14e7", "html_url": "https://github.com/rust-lang/rust/commit/95c51d8f1df1efdb2e98b7717544a6db8cad14e7"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "a6c1c0906aef108df6ffaa1e9044116cd05a2ac1", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/223dbd2187e5b966d192dac9745d47831dccb9b3/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/223dbd2187e5b966d192dac9745d47831dccb9b3/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=223dbd2187e5b966d192dac9745d47831dccb9b3", "patch": "@@ -156,8 +156,8 @@ export async function deactivate() {\n async function bootstrap(config: Config, state: PersistentState): Promise<string> {\n     await fs.mkdir(config.globalStoragePath, { recursive: true });\n \n-    if (config.package.releaseTag != NIGHTLY_TAG) {\n-        await state.removeNightlyReleaseId();\n+    if (config.package.releaseTag !== NIGHTLY_TAG) {\n+        await state.updateNightlyReleaseId(undefined);\n     }\n     await bootstrapExtension(config, state);\n     const path = await bootstrapServer(config, state);\n@@ -166,8 +166,9 @@ async function bootstrap(config: Config, state: PersistentState): Promise<string\n \n async function bootstrapExtension(config: Config, state: PersistentState): Promise<void> {\n     if (config.package.releaseTag === null) return;\n+    const currentExtensionIsNightly = config.package.releaseTag === NIGHTLY_TAG;\n     if (config.channel === \"stable\") {\n-        if (config.package.releaseTag === NIGHTLY_TAG) {\n+        if (currentExtensionIsNightly) {\n             void vscode.window.showWarningMessage(\n                 `You are running a nightly version of rust-analyzer extension. ` +\n                 `To switch to stable, uninstall the extension and re-install it from the marketplace`\n@@ -178,13 +179,14 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     if (serverPath(config)) return;\n \n     const now = Date.now();\n-    if (config.package.releaseTag === NIGHTLY_TAG) {\n+    const isInitialDownload = state.nightlyReleaseId === undefined;\n+    if (currentExtensionIsNightly) {\n         // Check if we should poll github api for the new nightly version\n         // if we haven't done it during the past hour\n         const lastCheck = state.lastCheck;\n \n         const anHour = 60 * 60 * 1000;\n-        const shouldCheckForNewNightly = state.nightlyReleaseId === undefined || (now - (lastCheck ?? 0)) > anHour;\n+        const shouldCheckForNewNightly = isInitialDownload || (now - (lastCheck ?? 0)) > anHour;\n \n         if (!shouldCheckForNewNightly) return;\n     }\n@@ -193,18 +195,18 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n         return await fetchRelease(\"nightly\", state.githubToken, config.httpProxy);\n     }).catch(async (e) => {\n         log.error(e);\n-        if (state.nightlyReleaseId === undefined) { // Show error only for the initial download\n+        if (isInitialDownload) {\n             await vscode.window.showErrorMessage(`Failed to download rust-analyzer nightly: ${e}`);\n         }\n         return;\n     });\n     if (release === undefined) {\n-        if (state.nightlyReleaseId === undefined) { // Show error only for the initial download\n+        if (isInitialDownload) {\n             await vscode.window.showErrorMessage(\"Failed to download rust-analyzer nightly: empty release contents returned\");\n         }\n         return;\n     }\n-    if (config.package.releaseTag === NIGHTLY_TAG && release.id === state.nightlyReleaseId) return;\n+    if (currentExtensionIsNightly && release.id === state.nightlyReleaseId) return;\n \n     const userResponse = await vscode.window.showInformationMessage(\n         \"New version of rust-analyzer (nightly) is available (requires reload).\","}, {"sha": "dd2aeecca3545ecfd13e656eb84716d66fc552f1", "filename": "editors/code/src/persistent_state.ts", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/223dbd2187e5b966d192dac9745d47831dccb9b3/editors%2Fcode%2Fsrc%2Fpersistent_state.ts", "raw_url": "https://github.com/rust-lang/rust/raw/223dbd2187e5b966d192dac9745d47831dccb9b3/editors%2Fcode%2Fsrc%2Fpersistent_state.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fpersistent_state.ts?ref=223dbd2187e5b966d192dac9745d47831dccb9b3", "patch": "@@ -24,12 +24,9 @@ export class PersistentState {\n     get nightlyReleaseId(): number | undefined {\n         return this.globalState.get(\"releaseId\");\n     }\n-    async updateNightlyReleaseId(value: number) {\n+    async updateNightlyReleaseId(value: number | undefined) {\n         await this.globalState.update(\"releaseId\", value);\n     }\n-    async removeNightlyReleaseId() {\n-        await this.globalState.update(\"releaseId\", undefined);\n-    }\n \n     /**\n      * Version of the extension that installed the server."}]}