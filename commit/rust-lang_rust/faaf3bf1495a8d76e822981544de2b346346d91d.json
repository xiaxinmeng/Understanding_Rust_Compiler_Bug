{"sha": "faaf3bf1495a8d76e822981544de2b346346d91d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYWYzYmYxNDk1YThkNzZlODIyOTgxNTQ0ZGUyYjM0NjM0NmQ5MWQ=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-26T07:25:17Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-26T07:25:17Z"}, "message": "Fix failing test", "tree": {"sha": "f85fb71543d0f7191656d7c84eff31fd2bd8033e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f85fb71543d0f7191656d7c84eff31fd2bd8033e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faaf3bf1495a8d76e822981544de2b346346d91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faaf3bf1495a8d76e822981544de2b346346d91d", "html_url": "https://github.com/rust-lang/rust/commit/faaf3bf1495a8d76e822981544de2b346346d91d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faaf3bf1495a8d76e822981544de2b346346d91d/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0737451fcf342e763b3700e6a491928cc887633", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0737451fcf342e763b3700e6a491928cc887633", "html_url": "https://github.com/rust-lang/rust/commit/d0737451fcf342e763b3700e6a491928cc887633"}], "stats": {"total": 138, "additions": 71, "deletions": 67}, "files": [{"sha": "08523de3ccd814df1f57277786db946ec77afd1d", "filename": "src/test/run-pass/float-nan.rs", "status": "modified", "additions": 71, "deletions": 67, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/faaf3bf1495a8d76e822981544de2b346346d91d/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faaf3bf1495a8d76e822981544de2b346346d91d/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-nan.rs?ref=faaf3bf1495a8d76e822981544de2b346346d91d", "patch": "@@ -10,82 +10,86 @@\n \n extern mod std;\n \n+use core::num::Float::{\n+  NaN, infinity, neg_infinity\n+};\n+\n pub fn main() {\n-  let nan = float::NaN;\n-  assert!((float::is_NaN(nan)));\n+  let nan = NaN::<float>();\n+  assert!((nan).is_NaN());\n \n-  let inf = float::infinity;\n-  assert!((-inf == float::neg_infinity));\n+  let inf = infinity::<float>();\n+  assert!(-inf == neg_infinity::<float>());\n \n-  assert!(( nan !=  nan));\n-  assert!(( nan != -nan));\n-  assert!((-nan != -nan));\n-  assert!((-nan !=  nan));\n+  assert!( nan !=  nan);\n+  assert!( nan != -nan);\n+  assert!(-nan != -nan);\n+  assert!(-nan !=  nan);\n \n-  assert!(( nan !=   1.));\n-  assert!(( nan !=   0.));\n-  assert!(( nan !=  inf));\n-  assert!(( nan != -inf));\n+  assert!( nan !=   1.);\n+  assert!( nan !=   0.);\n+  assert!( nan !=  inf);\n+  assert!( nan != -inf);\n \n-  assert!((  1. !=  nan));\n-  assert!((  0. !=  nan));\n-  assert!(( inf !=  nan));\n-  assert!((-inf !=  nan));\n+  assert!(  1. !=  nan);\n+  assert!(  0. !=  nan);\n+  assert!( inf !=  nan);\n+  assert!(-inf !=  nan);\n \n-  assert!((!( nan ==  nan)));\n-  assert!((!( nan == -nan)));\n-  assert!((!( nan ==   1.)));\n-  assert!((!( nan ==   0.)));\n-  assert!((!( nan ==  inf)));\n-  assert!((!( nan == -inf)));\n-  assert!((!(  1. ==  nan)));\n-  assert!((!(  0. ==  nan)));\n-  assert!((!( inf ==  nan)));\n-  assert!((!(-inf ==  nan)));\n-  assert!((!(-nan ==  nan)));\n-  assert!((!(-nan == -nan)));\n+  assert!(!( nan ==  nan));\n+  assert!(!( nan == -nan));\n+  assert!(!( nan ==   1.));\n+  assert!(!( nan ==   0.));\n+  assert!(!( nan ==  inf));\n+  assert!(!( nan == -inf));\n+  assert!(!(  1. ==  nan));\n+  assert!(!(  0. ==  nan));\n+  assert!(!( inf ==  nan));\n+  assert!(!(-inf ==  nan));\n+  assert!(!(-nan ==  nan));\n+  assert!(!(-nan == -nan));\n \n-  assert!((!( nan >  nan)));\n-  assert!((!( nan > -nan)));\n-  assert!((!( nan >   0.)));\n-  assert!((!( nan >  inf)));\n-  assert!((!( nan > -inf)));\n-  assert!((!(  0. >  nan)));\n-  assert!((!( inf >  nan)));\n-  assert!((!(-inf >  nan)));\n-  assert!((!(-nan >  nan)));\n+  assert!(!( nan >  nan));\n+  assert!(!( nan > -nan));\n+  assert!(!( nan >   0.));\n+  assert!(!( nan >  inf));\n+  assert!(!( nan > -inf));\n+  assert!(!(  0. >  nan));\n+  assert!(!( inf >  nan));\n+  assert!(!(-inf >  nan));\n+  assert!(!(-nan >  nan));\n \n-  assert!((!(nan <   0.)));\n-  assert!((!(nan <   1.)));\n-  assert!((!(nan <  -1.)));\n-  assert!((!(nan <  inf)));\n-  assert!((!(nan < -inf)));\n-  assert!((!(nan <  nan)));\n-  assert!((!(nan < -nan)));\n+  assert!(!(nan <   0.));\n+  assert!(!(nan <   1.));\n+  assert!(!(nan <  -1.));\n+  assert!(!(nan <  inf));\n+  assert!(!(nan < -inf));\n+  assert!(!(nan <  nan));\n+  assert!(!(nan < -nan));\n \n-  assert!((!(  0. < nan)));\n-  assert!((!(  1. < nan)));\n-  assert!((!( -1. < nan)));\n-  assert!((!( inf < nan)));\n-  assert!((!(-inf < nan)));\n-  assert!((!(-nan < nan)));\n+  assert!(!(  0. < nan));\n+  assert!(!(  1. < nan));\n+  assert!(!( -1. < nan));\n+  assert!(!( inf < nan));\n+  assert!(!(-inf < nan));\n+  assert!(!(-nan < nan));\n \n-  assert!((float::is_NaN(nan + inf)));\n-  assert!((float::is_NaN(nan + -inf)));\n-  assert!((float::is_NaN(nan + 0.)));\n-  assert!((float::is_NaN(nan + 1.)));\n-  assert!((float::is_NaN(nan * 1.)));\n-  assert!((float::is_NaN(nan / 1.)));\n-  assert!((float::is_NaN(nan / 0.)));\n-  assert!((float::is_NaN(0. / 0.)));\n-  assert!((float::is_NaN(-inf + inf)));\n-  assert!((float::is_NaN(inf - inf)));\n+  assert!((nan + inf).is_NaN());\n+  assert!((nan + -inf).is_NaN());\n+  assert!((nan + 0.).is_NaN());\n+  assert!((nan + 1.).is_NaN());\n+  assert!((nan * 1.).is_NaN());\n+  assert!((nan / 1.).is_NaN());\n+  assert!((nan / 0.).is_NaN());\n+  assert!((0f/0f).is_NaN());\n+  assert!((-inf + inf).is_NaN());\n+  assert!((inf - inf).is_NaN());\n \n-  assert!((!float::is_NaN(-1.)));\n-  assert!((!float::is_NaN(0.)));\n-  assert!((!float::is_NaN(0.1)));\n-  assert!((!float::is_NaN(1.)));\n-  assert!((!float::is_NaN(inf)));\n-  assert!((!float::is_NaN(-inf)));\n-  assert!((!float::is_NaN(1./-inf)));\n+  assert!(!(-1f).is_NaN());\n+  assert!(!(0f).is_NaN());\n+  assert!(!(0.1f).is_NaN());\n+  assert!(!(1f).is_NaN());\n+  assert!(!(inf).is_NaN());\n+  assert!(!(-inf).is_NaN());\n+  assert!(!(1./-inf).is_NaN());\n }"}]}