{"sha": "18e6b508dd48d7559f8033e10a3741135e6425ce", "node_id": "C_kwDOAAsO6NoAKDE4ZTZiNTA4ZGQ0OGQ3NTU5ZjgwMzNlMTBhMzc0MTEzNWU2NDI1Y2U", "commit": {"author": {"name": "hamidreza kalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2021-09-22T08:14:23Z"}, "committer": {"name": "hamidreza kalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2021-09-22T08:14:23Z"}, "message": "remove dead code", "tree": {"sha": "712b0120016a2e3029140ac045d0706ee8894a92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712b0120016a2e3029140ac045d0706ee8894a92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e6b508dd48d7559f8033e10a3741135e6425ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e6b508dd48d7559f8033e10a3741135e6425ce", "html_url": "https://github.com/rust-lang/rust/commit/18e6b508dd48d7559f8033e10a3741135e6425ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e6b508dd48d7559f8033e10a3741135e6425ce/comments", "author": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "569ac5bee186e907cc14300ab0d46976ed063580", "url": "https://api.github.com/repos/rust-lang/rust/commits/569ac5bee186e907cc14300ab0d46976ed063580", "html_url": "https://github.com/rust-lang/rust/commit/569ac5bee186e907cc14300ab0d46976ed063580"}], "stats": {"total": 34, "additions": 3, "deletions": 31}, "files": [{"sha": "ec5d462da2b338ffc6746ddbc7c12f93bb16ee31", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 3, "deletions": 31, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/18e6b508dd48d7559f8033e10a3741135e6425ce/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e6b508dd48d7559f8033e10a3741135e6425ce/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=18e6b508dd48d7559f8033e10a3741135e6425ce", "patch": "@@ -1,16 +1,15 @@\n-use std::{convert::TryInto, iter};\n+use std::convert::TryInto;\n \n use crate::hover::find_definition;\n use crate::{\n-    display::{ToNav, TryToNav},\n+    display::TryToNav,\n     doc_links::{doc_attributes, extract_definitions_from_docs, resolve_doc_path_for_def},\n     FilePosition, NavigationTarget, RangeInfo,\n };\n-use either::Either;\n use hir::{AsAssocItem, InFile, ModuleDef, Semantics};\n use ide_db::{\n     base_db::{AnchoredPath, FileId, FileLoader},\n-    defs::{Definition, NameClass, NameRefClass},\n+    defs::Definition,\n     helpers::{pick_best_token, try_resolve_derive_input_at},\n     RootDatabase,\n };\n@@ -151,37 +150,10 @@ fn try_find_trait_item_definition(\n         .map(|it| vec![it])\n }\n \n-pub(crate) fn reference_definition(\n-    sema: &Semantics<RootDatabase>,\n-    name_ref: Either<&ast::Lifetime, &ast::NameRef>,\n-) -> Vec<NavigationTarget> {\n-    let name_kind = match name_ref.either(\n-        |lifetime| NameRefClass::classify_lifetime(sema, lifetime),\n-        |name_ref| NameRefClass::classify(sema, name_ref),\n-    ) {\n-        Some(class) => class,\n-        None => return Vec::new(),\n-    };\n-    match name_kind {\n-        NameRefClass::Definition(def) => def_to_nav(sema.db, def),\n-        NameRefClass::FieldShorthand { local_ref, field_ref } => {\n-            local_and_field_to_nav(sema.db, local_ref, field_ref)\n-        }\n-    }\n-}\n-\n fn def_to_nav(db: &RootDatabase, def: Definition) -> Vec<NavigationTarget> {\n     def.try_to_nav(db).map(|it| vec![it]).unwrap_or_default()\n }\n \n-fn local_and_field_to_nav(\n-    db: &RootDatabase,\n-    local: hir::Local,\n-    field: hir::Field,\n-) -> Vec<NavigationTarget> {\n-    iter::once(local.to_nav(db)).chain(field.try_to_nav(db)).collect()\n-}\n-\n #[cfg(test)]\n mod tests {\n     use ide_db::base_db::FileRange;"}]}