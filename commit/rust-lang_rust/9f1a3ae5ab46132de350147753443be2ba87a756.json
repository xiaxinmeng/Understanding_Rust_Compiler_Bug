{"sha": "9f1a3ae5ab46132de350147753443be2ba87a756", "node_id": "C_kwDOAAsO6NoAKDlmMWEzYWU1YWI0NjEzMmRlMzUwMTQ3NzUzNDQzYmUyYmE4N2E3NTY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-18T14:37:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T14:37:58Z"}, "message": "Merge #11046\n\n11046: internal: move all the lexing to the parser crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "66d9a9d9e0870f79de1a9fdac3847fc8a4c51838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66d9a9d9e0870f79de1a9fdac3847fc8a4c51838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f1a3ae5ab46132de350147753443be2ba87a756", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvfJGCRBK7hj4Ov3rIwAAaP4IADnJBbkbnFHke8ztcNzopJPD\n+mobEKlLbipjTK3b0zFKBmJYq6JI2gUF2NL/hdZrmCBdRkWuGgPuA4ShZ5nxBgaA\nM2MW+01Lwl4tWMAPjvGUyhnhE7u0ykDJxevM6CUclItj05MrQ1UpwfBZx6TuPVqs\n56BVs+XxUz4qODx6jX2SNDREtlfBYpnG8um4OZVOmEfe1bSOFmGSYeVj2t6b1HbC\nlRc1hgMRqtKXfEHj0pJ8iibtTXRTFmpHAh/wmGRIFc+M+Y09PcFighu29FJ58oRA\nburflmkt1aOQhrVSvLATsIKCOCQJ0KiOz/i2GeM72Rc2vukxgbYAF7Vcsjktz24=\n=78Qb\n-----END PGP SIGNATURE-----\n", "payload": "tree 66d9a9d9e0870f79de1a9fdac3847fc8a4c51838\nparent 7f28b49759de5629a39536be0f14a55423da3e43\nparent 92dad471bc3df761569a36642fcec8649e17f264\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639838278 +0000\ncommitter GitHub <noreply@github.com> 1639838278 +0000\n\nMerge #11046\n\n11046: internal: move all the lexing to the parser crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1a3ae5ab46132de350147753443be2ba87a756", "html_url": "https://github.com/rust-lang/rust/commit/9f1a3ae5ab46132de350147753443be2ba87a756", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f1a3ae5ab46132de350147753443be2ba87a756/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f28b49759de5629a39536be0f14a55423da3e43", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f28b49759de5629a39536be0f14a55423da3e43", "html_url": "https://github.com/rust-lang/rust/commit/7f28b49759de5629a39536be0f14a55423da3e43"}, {"sha": "92dad471bc3df761569a36642fcec8649e17f264", "url": "https://api.github.com/repos/rust-lang/rust/commits/92dad471bc3df761569a36642fcec8649e17f264", "html_url": "https://github.com/rust-lang/rust/commit/92dad471bc3df761569a36642fcec8649e17f264"}], "stats": {"total": 1990, "additions": 971, "deletions": 1019}, "files": [{"sha": "44ef223557b9941733609ddb48a682d11a1759f1", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -609,6 +609,7 @@ dependencies = [\n  \"hir\",\n  \"ide_db\",\n  \"itertools\",\n+ \"parser\",\n  \"profile\",\n  \"rustc-hash\",\n  \"sourcegen\",\n@@ -654,6 +655,7 @@ dependencies = [\n  \"itertools\",\n  \"limit\",\n  \"once_cell\",\n+ \"parser\",\n  \"profile\",\n  \"rayon\",\n  \"rustc-hash\",\n@@ -695,6 +697,7 @@ dependencies = [\n  \"hir\",\n  \"ide_db\",\n  \"itertools\",\n+ \"parser\",\n  \"rustc-hash\",\n  \"syntax\",\n  \"test_utils\",\n@@ -1066,7 +1069,9 @@ name = \"parser\"\n version = \"0.0.0\"\n dependencies = [\n  \"drop_bomb\",\n+ \"expect-test\",\n  \"limit\",\n+ \"rustc-ap-rustc_lexer\",\n ]\n \n [[package]]"}, {"sha": "3cd186fdf554d814f3ec26a62a455518870d872d", "filename": "crates/ide_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2FCargo.toml?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -16,6 +16,7 @@ itertools = \"0.10.0\"\n either = \"1.6.1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n+parser = { path = \"../parser\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n profile = { path = \"../profile\", version = \"0.0.0\" }"}, {"sha": "f91b2fe44e48e5ba042593a82065aa7b2418470e", "filename": "crates/ide_assists/src/utils/suggest_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -135,7 +135,7 @@ fn normalize(name: &str) -> Option<String> {\n }\n \n fn is_valid_name(name: &str) -> bool {\n-    match syntax::lex_single_syntax_kind(name) {\n+    match parser::LexedStr::single_token(name) {\n         Some((syntax::SyntaxKind::IDENT, _error)) => true,\n         _ => false,\n     }"}, {"sha": "cfcf9f56c87c96c7def4c0d31e09dadd59ea9598", "filename": "crates/ide_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2FCargo.toml?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -22,6 +22,7 @@ arrayvec = \"0.7\"\n indexmap = \"1.7\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n+parser = { path = \"../parser\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n base_db = { path = \"../base_db\", version = \"0.0.0\" }"}, {"sha": "188499db72cf02bd0d9ac21b64418947823ba709", "filename": "crates/ide_db/src/rename.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Frename.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -28,7 +28,7 @@ use hir::{AsAssocItem, FieldSource, HasSource, InFile, ModuleSource, Semantics};\n use stdx::never;\n use syntax::{\n     ast::{self, HasName},\n-    lex_single_syntax_kind, AstNode, SyntaxKind, TextRange, T,\n+    AstNode, SyntaxKind, TextRange, T,\n };\n use text_edit::{TextEdit, TextEditBuilder};\n \n@@ -490,7 +490,7 @@ pub enum IdentifierKind {\n \n impl IdentifierKind {\n     pub fn classify(new_name: &str) -> Result<IdentifierKind> {\n-        match lex_single_syntax_kind(new_name) {\n+        match parser::LexedStr::single_token(new_name) {\n             Some(res) => match res {\n                 (SyntaxKind::IDENT, _) => Ok(IdentifierKind::Ident),\n                 (T![_], _) => Ok(IdentifierKind::Underscore),"}, {"sha": "9a8221ac6c42ca29971cd6c7f1524917689a391c", "filename": "crates/ide_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2FCargo.toml?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -16,6 +16,7 @@ rustc-hash = \"1.1.0\"\n itertools = \"0.10.0\"\n \n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n+parser = { path = \"../parser\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n hir = { path = \"../hir\", version = \"0.0.0\" }"}, {"sha": "ae7d5b4bf156d9df3ba3af5312ee0372fbd6c3f3", "filename": "crates/ide_ssr/src/parsing.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_ssr%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fide_ssr%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fparsing.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -256,19 +256,13 @@ fn validate_rule(rule: &SsrRule) -> Result<(), SsrError> {\n }\n \n fn tokenize(source: &str) -> Result<Vec<Token>, SsrError> {\n-    let mut start = 0;\n-    let (raw_tokens, errors) = syntax::tokenize(source);\n-    if let Some(first_error) = errors.first() {\n+    let lexed = parser::LexedStr::new(source);\n+    if let Some((_, first_error)) = lexed.errors().next() {\n         bail!(\"Failed to parse pattern: {}\", first_error);\n     }\n     let mut tokens: Vec<Token> = Vec::new();\n-    for raw_token in raw_tokens {\n-        let token_len = usize::from(raw_token.len);\n-        tokens.push(Token {\n-            kind: raw_token.kind,\n-            text: SmolStr::new(&source[start..start + token_len]),\n-        });\n-        start += token_len;\n+    for i in 0..lexed.len() {\n+        tokens.push(Token { kind: lexed.kind(i), text: lexed.text(i).into() });\n     }\n     Ok(tokens)\n }"}, {"sha": "109842b0cd06f57d842b32f10fa0924158217eb4", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -4,10 +4,9 @@ use parser::{ParseError, TreeSink};\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     ast::{self, make::tokens::doc_comment},\n-    tokenize, AstToken, Parse, PreorderWithTokens, SmolStr, SyntaxElement, SyntaxKind,\n+    AstToken, Parse, PreorderWithTokens, SmolStr, SyntaxElement, SyntaxKind,\n     SyntaxKind::*,\n-    SyntaxNode, SyntaxToken, SyntaxTreeBuilder, TextRange, TextSize, Token as RawToken, WalkEvent,\n-    T,\n+    SyntaxNode, SyntaxToken, SyntaxTreeBuilder, TextRange, TextSize, WalkEvent, T,\n };\n use tt::buffer::{Cursor, TokenBuffer};\n \n@@ -69,15 +68,14 @@ pub fn token_tree_to_syntax_node(\n \n /// Convert a string to a `TokenTree`\n pub fn parse_to_token_tree(text: &str) -> Option<(tt::Subtree, TokenMap)> {\n-    let (tokens, errors) = tokenize(text);\n-    if !errors.is_empty() {\n+    let lexed = parser::LexedStr::new(text);\n+    if lexed.errors().next().is_some() {\n         return None;\n     }\n \n     let mut conv = RawConvertor {\n-        text,\n-        offset: TextSize::default(),\n-        inner: tokens.iter(),\n+        lexed: lexed,\n+        pos: 0,\n         id_alloc: TokenIdAlloc {\n             map: Default::default(),\n             global_offset: TextSize::default(),\n@@ -146,7 +144,7 @@ fn convert_tokens<C: TokenConvertor>(conv: &mut C) -> tt::Subtree {\n             Some(it) => it,\n         };\n \n-        let k: SyntaxKind = token.kind();\n+        let k: SyntaxKind = token.kind(&conv);\n         if k == COMMENT {\n             if let Some(tokens) = conv.convert_doc_comment(&token) {\n                 // FIXME: There has to be a better way to do this\n@@ -199,19 +197,19 @@ fn convert_tokens<C: TokenConvertor>(conv: &mut C) -> tt::Subtree {\n             } else {\n                 let spacing = match conv.peek() {\n                     Some(next)\n-                        if next.kind().is_trivia()\n-                            || next.kind() == T!['[']\n-                            || next.kind() == T!['{']\n-                            || next.kind() == T!['('] =>\n+                        if next.kind(&conv).is_trivia()\n+                            || next.kind(&conv) == T!['[']\n+                            || next.kind(&conv) == T!['{']\n+                            || next.kind(&conv) == T!['('] =>\n                     {\n                         tt::Spacing::Alone\n                     }\n-                    Some(next) if next.kind().is_punct() && next.kind() != UNDERSCORE => {\n+                    Some(next) if next.kind(&conv).is_punct() && next.kind(&conv) != UNDERSCORE => {\n                         tt::Spacing::Joint\n                     }\n                     _ => tt::Spacing::Alone,\n                 };\n-                let char = match token.to_char() {\n+                let char = match token.to_char(&conv) {\n                     Some(c) => c,\n                     None => {\n                         panic!(\"Token from lexer must be single char: token = {:#?}\", token);\n@@ -222,7 +220,7 @@ fn convert_tokens<C: TokenConvertor>(conv: &mut C) -> tt::Subtree {\n         } else {\n             macro_rules! make_leaf {\n                 ($i:ident) => {\n-                    tt::$i { id: conv.id_alloc().alloc(range), text: token.to_text() }.into()\n+                    tt::$i { id: conv.id_alloc().alloc(range), text: token.to_text(conv) }.into()\n                 };\n             }\n             let leaf: tt::Leaf = match k {\n@@ -243,7 +241,7 @@ fn convert_tokens<C: TokenConvertor>(conv: &mut C) -> tt::Subtree {\n \n                     let r = TextRange::at(range.start() + char_unit, range.len() - char_unit);\n                     let ident = tt::Leaf::from(tt::Ident {\n-                        text: SmolStr::new(&token.to_text()[1..]),\n+                        text: SmolStr::new(&token.to_text(conv)[1..]),\n                         id: conv.id_alloc().alloc(r),\n                     });\n                     result.push(ident.into());\n@@ -392,22 +390,21 @@ impl TokenIdAlloc {\n \n /// A Raw Token (straightly from lexer) convertor\n struct RawConvertor<'a> {\n-    text: &'a str,\n-    offset: TextSize,\n+    lexed: parser::LexedStr<'a>,\n+    pos: usize,\n     id_alloc: TokenIdAlloc,\n-    inner: std::slice::Iter<'a, RawToken>,\n }\n \n-trait SrcToken: std::fmt::Debug {\n-    fn kind(&self) -> SyntaxKind;\n+trait SrcToken<Ctx>: std::fmt::Debug {\n+    fn kind(&self, ctx: &Ctx) -> SyntaxKind;\n \n-    fn to_char(&self) -> Option<char>;\n+    fn to_char(&self, ctx: &Ctx) -> Option<char>;\n \n-    fn to_text(&self) -> SmolStr;\n+    fn to_text(&self, ctx: &Ctx) -> SmolStr;\n }\n \n-trait TokenConvertor {\n-    type Token: SrcToken;\n+trait TokenConvertor: Sized {\n+    type Token: SrcToken<Self>;\n \n     fn convert_doc_comment(&self, token: &Self::Token) -> Option<Vec<tt::TokenTree>>;\n \n@@ -418,42 +415,45 @@ trait TokenConvertor {\n     fn id_alloc(&mut self) -> &mut TokenIdAlloc;\n }\n \n-impl<'a> SrcToken for (&'a RawToken, &'a str) {\n-    fn kind(&self) -> SyntaxKind {\n-        self.0.kind\n+impl<'a> SrcToken<RawConvertor<'a>> for usize {\n+    fn kind(&self, ctx: &RawConvertor<'a>) -> SyntaxKind {\n+        ctx.lexed.kind(*self)\n     }\n \n-    fn to_char(&self) -> Option<char> {\n-        self.1.chars().next()\n+    fn to_char(&self, ctx: &RawConvertor<'a>) -> Option<char> {\n+        ctx.lexed.text(*self).chars().next()\n     }\n \n-    fn to_text(&self) -> SmolStr {\n-        self.1.into()\n+    fn to_text(&self, ctx: &RawConvertor<'_>) -> SmolStr {\n+        ctx.lexed.text(*self).into()\n     }\n }\n \n impl<'a> TokenConvertor for RawConvertor<'a> {\n-    type Token = (&'a RawToken, &'a str);\n+    type Token = usize;\n \n-    fn convert_doc_comment(&self, token: &Self::Token) -> Option<Vec<tt::TokenTree>> {\n-        convert_doc_comment(&doc_comment(token.1))\n+    fn convert_doc_comment(&self, token: &usize) -> Option<Vec<tt::TokenTree>> {\n+        let text = self.lexed.text(*token);\n+        convert_doc_comment(&doc_comment(text))\n     }\n \n     fn bump(&mut self) -> Option<(Self::Token, TextRange)> {\n-        let token = self.inner.next()?;\n-        let range = TextRange::at(self.offset, token.len);\n-        self.offset += token.len;\n+        if self.pos == self.lexed.len() {\n+            return None;\n+        }\n+        let token = self.pos;\n+        self.pos += 1;\n+        let range = self.lexed.text_range(token);\n+        let range = TextRange::new(range.start.try_into().unwrap(), range.end.try_into().unwrap());\n \n-        Some(((token, &self.text[range]), range))\n+        Some((token, range))\n     }\n \n     fn peek(&self) -> Option<Self::Token> {\n-        let token = self.inner.as_slice().get(0);\n-\n-        token.map(|it| {\n-            let range = TextRange::at(self.offset, it.len);\n-            (it, &self.text[range])\n-        })\n+        if self.pos == self.lexed.len() {\n+            return None;\n+        }\n+        Some(self.pos)\n     }\n \n     fn id_alloc(&mut self) -> &mut TokenIdAlloc {\n@@ -523,17 +523,17 @@ impl SynToken {\n     }\n }\n \n-impl SrcToken for SynToken {\n-    fn kind(&self) -> SyntaxKind {\n+impl<'a> SrcToken<Convertor<'a>> for SynToken {\n+    fn kind(&self, _ctx: &Convertor<'a>) -> SyntaxKind {\n         self.token().kind()\n     }\n-    fn to_char(&self) -> Option<char> {\n+    fn to_char(&self, _ctx: &Convertor<'a>) -> Option<char> {\n         match self {\n             SynToken::Ordinary(_) => None,\n             SynToken::Punch(it, i) => it.text().chars().nth((*i).into()),\n         }\n     }\n-    fn to_text(&self) -> SmolStr {\n+    fn to_text(&self, _ctx: &Convertor<'a>) -> SmolStr {\n         self.token().text().into()\n     }\n }"}, {"sha": "f419c78d46cc4def294df68ddb42c2f265ad55d8", "filename": "crates/mbe/src/to_parser_tokens.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fmbe%2Fsrc%2Fto_parser_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fmbe%2Fsrc%2Fto_parser_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fto_parser_tokens.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -1,7 +1,7 @@\n //! Convert macro-by-example tokens which are specific to macro expansion into a\n //! format that works for our parser.\n \n-use syntax::{lex_single_syntax_kind, SyntaxKind, SyntaxKind::*, T};\n+use syntax::{SyntaxKind, SyntaxKind::*, T};\n use tt::buffer::TokenBuffer;\n \n pub(crate) fn to_parser_tokens(buffer: &TokenBuffer) -> parser::Tokens {\n@@ -35,7 +35,7 @@ pub(crate) fn to_parser_tokens(buffer: &TokenBuffer) -> parser::Tokens {\n                         let is_negated = lit.text.starts_with('-');\n                         let inner_text = &lit.text[if is_negated { 1 } else { 0 }..];\n \n-                        let kind = lex_single_syntax_kind(inner_text)\n+                        let kind = parser::LexedStr::single_token(inner_text)\n                             .map(|(kind, _error)| kind)\n                             .filter(|kind| {\n                                 kind.is_literal()"}, {"sha": "4028082d0885f1459edd19324fb890340c0444e0", "filename": "crates/parser/Cargo.toml", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2FCargo.toml?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -11,5 +11,8 @@ doctest = false\n \n [dependencies]\n drop_bomb = \"0.1.4\"\n-\n+rustc_lexer = { version = \"725.0.0\", package = \"rustc-ap-rustc_lexer\" }\n limit = { path = \"../limit\", version = \"0.0.0\" }\n+\n+[dev-dependencies]\n+expect-test = \"1.2\""}, {"sha": "b8936c34403d34f71f3e370de7b960a887eaebcd", "filename": "crates/parser/src/lexed_str.rs", "status": "added", "additions": 300, "deletions": 0, "changes": 300, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Flexed_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Flexed_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flexed_str.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,300 @@\n+//! Lexing `&str` into a sequence of Rust tokens.\n+//!\n+//! Note that strictly speaking the parser in this crate is not required to work\n+//! on tokens which originated from text. Macros, eg, can synthesize tokens out\n+//! of thin air. So, ideally, lexer should be an orthogonal crate. It is however\n+//! convenient to include a text-based lexer here!\n+//!\n+//! Note that these tokens, unlike the tokens we feed into the parser, do\n+//! include info about comments and whitespace.\n+\n+use std::ops;\n+\n+use crate::{\n+    SyntaxKind::{self, *},\n+    T,\n+};\n+\n+pub struct LexedStr<'a> {\n+    text: &'a str,\n+    kind: Vec<SyntaxKind>,\n+    start: Vec<u32>,\n+    error: Vec<LexError>,\n+}\n+\n+struct LexError {\n+    msg: String,\n+    token: u32,\n+}\n+\n+impl<'a> LexedStr<'a> {\n+    pub fn new(text: &'a str) -> LexedStr<'a> {\n+        let mut res = LexedStr { text, kind: Vec::new(), start: Vec::new(), error: Vec::new() };\n+\n+        let mut offset = 0;\n+        if let Some(shebang_len) = rustc_lexer::strip_shebang(text) {\n+            res.push(SHEBANG, offset);\n+            offset = shebang_len\n+        };\n+        for token in rustc_lexer::tokenize(&text[offset..]) {\n+            let token_text = &text[offset..][..token.len];\n+\n+            let (kind, err) = from_rustc(&token.kind, token_text);\n+            res.push(kind, offset);\n+            offset += token.len;\n+\n+            if let Some(err) = err {\n+                let token = res.len() as u32;\n+                let msg = err.to_string();\n+                res.error.push(LexError { msg, token });\n+            }\n+        }\n+        res.push(EOF, offset);\n+\n+        res\n+    }\n+\n+    pub fn single_token(text: &'a str) -> Option<(SyntaxKind, Option<String>)> {\n+        if text.is_empty() {\n+            return None;\n+        }\n+\n+        let token = rustc_lexer::first_token(text);\n+        if token.len != text.len() {\n+            return None;\n+        }\n+\n+        let (kind, err) = from_rustc(&token.kind, text);\n+        Some((kind, err.map(|it| it.to_owned())))\n+    }\n+\n+    pub fn as_str(&self) -> &str {\n+        self.text\n+    }\n+\n+    pub fn len(&self) -> usize {\n+        self.kind.len() - 1\n+    }\n+\n+    pub fn is_empty(&self) -> bool {\n+        self.len() == 0\n+    }\n+\n+    pub fn kind(&self, i: usize) -> SyntaxKind {\n+        assert!(i < self.len());\n+        self.kind[i]\n+    }\n+\n+    pub fn text(&self, i: usize) -> &str {\n+        self.range_text(i..i + 1)\n+    }\n+    pub fn range_text(&self, r: ops::Range<usize>) -> &str {\n+        assert!(r.start < r.end && r.end <= self.len());\n+        let lo = self.start[r.start] as usize;\n+        let hi = self.start[r.end] as usize;\n+        &self.text[lo..hi]\n+    }\n+\n+    // Naming is hard.\n+    pub fn text_range(&self, i: usize) -> ops::Range<usize> {\n+        assert!(i < self.len());\n+        let lo = self.start[i] as usize;\n+        let hi = self.start[i + 1] as usize;\n+        lo..hi\n+    }\n+    pub fn text_start(&self, i: usize) -> usize {\n+        assert!(i <= self.len());\n+        self.start[i] as usize\n+    }\n+    pub fn text_len(&self, i: usize) -> usize {\n+        assert!(i < self.len());\n+        let r = self.text_range(i);\n+        r.end - r.start\n+    }\n+\n+    pub fn error(&self, i: usize) -> Option<&str> {\n+        assert!(i < self.len());\n+        let err = self.error.binary_search_by_key(&(i as u32), |i| i.token).ok()?;\n+        Some(self.error[err].msg.as_str())\n+    }\n+\n+    pub fn errors(&self) -> impl Iterator<Item = (usize, &str)> + '_ {\n+        self.error.iter().map(|it| (it.token as usize, it.msg.as_str()))\n+    }\n+\n+    pub fn to_tokens(&self) -> crate::Tokens {\n+        let mut res = crate::Tokens::default();\n+        let mut was_joint = false;\n+        for i in 0..self.len() {\n+            let kind = self.kind(i);\n+            if kind.is_trivia() {\n+                was_joint = false\n+            } else {\n+                if kind == SyntaxKind::IDENT {\n+                    let token_text = self.text(i);\n+                    let contextual_kw = SyntaxKind::from_contextual_keyword(token_text)\n+                        .unwrap_or(SyntaxKind::IDENT);\n+                    res.push_ident(contextual_kw);\n+                } else {\n+                    if was_joint {\n+                        res.was_joint();\n+                    }\n+                    res.push(kind);\n+                }\n+                was_joint = true;\n+            }\n+        }\n+        res\n+    }\n+\n+    fn push(&mut self, kind: SyntaxKind, offset: usize) {\n+        self.kind.push(kind);\n+        self.start.push(offset as u32);\n+    }\n+}\n+\n+/// Returns `SyntaxKind` and an optional tokenize error message.\n+fn from_rustc(\n+    kind: &rustc_lexer::TokenKind,\n+    token_text: &str,\n+) -> (SyntaxKind, Option<&'static str>) {\n+    // A note on an intended tradeoff:\n+    // We drop some useful information here (see patterns with double dots `..`)\n+    // Storing that info in `SyntaxKind` is not possible due to its layout requirements of\n+    // being `u16` that come from `rowan::SyntaxKind`.\n+    let mut err = \"\";\n+\n+    let syntax_kind = {\n+        match kind {\n+            rustc_lexer::TokenKind::LineComment { doc_style: _ } => COMMENT,\n+            rustc_lexer::TokenKind::BlockComment { doc_style: _, terminated } => {\n+                if !terminated {\n+                    err = \"Missing trailing `*/` symbols to terminate the block comment\";\n+                }\n+                COMMENT\n+            }\n+\n+            rustc_lexer::TokenKind::Whitespace => WHITESPACE,\n+\n+            rustc_lexer::TokenKind::Ident if token_text == \"_\" => UNDERSCORE,\n+            rustc_lexer::TokenKind::Ident => SyntaxKind::from_keyword(token_text).unwrap_or(IDENT),\n+\n+            rustc_lexer::TokenKind::RawIdent => IDENT,\n+            rustc_lexer::TokenKind::Literal { kind, .. } => return from_rustc_literal(kind),\n+\n+            rustc_lexer::TokenKind::Lifetime { starts_with_number } => {\n+                if *starts_with_number {\n+                    err = \"Lifetime name cannot start with a number\";\n+                }\n+                LIFETIME_IDENT\n+            }\n+\n+            rustc_lexer::TokenKind::Semi => T![;],\n+            rustc_lexer::TokenKind::Comma => T![,],\n+            rustc_lexer::TokenKind::Dot => T![.],\n+            rustc_lexer::TokenKind::OpenParen => T!['('],\n+            rustc_lexer::TokenKind::CloseParen => T![')'],\n+            rustc_lexer::TokenKind::OpenBrace => T!['{'],\n+            rustc_lexer::TokenKind::CloseBrace => T!['}'],\n+            rustc_lexer::TokenKind::OpenBracket => T!['['],\n+            rustc_lexer::TokenKind::CloseBracket => T![']'],\n+            rustc_lexer::TokenKind::At => T![@],\n+            rustc_lexer::TokenKind::Pound => T![#],\n+            rustc_lexer::TokenKind::Tilde => T![~],\n+            rustc_lexer::TokenKind::Question => T![?],\n+            rustc_lexer::TokenKind::Colon => T![:],\n+            rustc_lexer::TokenKind::Dollar => T![$],\n+            rustc_lexer::TokenKind::Eq => T![=],\n+            rustc_lexer::TokenKind::Bang => T![!],\n+            rustc_lexer::TokenKind::Lt => T![<],\n+            rustc_lexer::TokenKind::Gt => T![>],\n+            rustc_lexer::TokenKind::Minus => T![-],\n+            rustc_lexer::TokenKind::And => T![&],\n+            rustc_lexer::TokenKind::Or => T![|],\n+            rustc_lexer::TokenKind::Plus => T![+],\n+            rustc_lexer::TokenKind::Star => T![*],\n+            rustc_lexer::TokenKind::Slash => T![/],\n+            rustc_lexer::TokenKind::Caret => T![^],\n+            rustc_lexer::TokenKind::Percent => T![%],\n+            rustc_lexer::TokenKind::Unknown => ERROR,\n+        }\n+    };\n+\n+    let err = if err.is_empty() { None } else { Some(err) };\n+    (syntax_kind, err)\n+}\n+\n+fn from_rustc_literal(kind: &rustc_lexer::LiteralKind) -> (SyntaxKind, Option<&'static str>) {\n+    let mut err = \"\";\n+\n+    let syntax_kind = match *kind {\n+        rustc_lexer::LiteralKind::Int { empty_int, base: _ } => {\n+            if empty_int {\n+                err = \"Missing digits after the integer base prefix\";\n+            }\n+            INT_NUMBER\n+        }\n+        rustc_lexer::LiteralKind::Float { empty_exponent, base: _ } => {\n+            if empty_exponent {\n+                err = \"Missing digits after the exponent symbol\";\n+            }\n+            FLOAT_NUMBER\n+        }\n+        rustc_lexer::LiteralKind::Char { terminated } => {\n+            if !terminated {\n+                err = \"Missing trailing `'` symbol to terminate the character literal\";\n+            }\n+            CHAR\n+        }\n+        rustc_lexer::LiteralKind::Byte { terminated } => {\n+            if !terminated {\n+                err = \"Missing trailing `'` symbol to terminate the byte literal\";\n+            }\n+            BYTE\n+        }\n+        rustc_lexer::LiteralKind::Str { terminated } => {\n+            if !terminated {\n+                err = \"Missing trailing `\\\"` symbol to terminate the string literal\";\n+            }\n+            STRING\n+        }\n+        rustc_lexer::LiteralKind::ByteStr { terminated } => {\n+            if !terminated {\n+                err = \"Missing trailing `\\\"` symbol to terminate the byte string literal\";\n+            }\n+            BYTE_STRING\n+        }\n+        rustc_lexer::LiteralKind::RawStr { err: raw_str_err, .. } => {\n+            if let Some(raw_str_err) = raw_str_err {\n+                err = match raw_str_err {\n+                    rustc_lexer::RawStrError::InvalidStarter { .. } => \"Missing `\\\"` symbol after `#` symbols to begin the raw string literal\",\n+                    rustc_lexer::RawStrError::NoTerminator { expected, found, .. } => if expected == found {\n+                        \"Missing trailing `\\\"` to terminate the raw string literal\"\n+                    } else {\n+                        \"Missing trailing `\\\"` with `#` symbols to terminate the raw string literal\"\n+                    },\n+                    rustc_lexer::RawStrError::TooManyDelimiters { .. } => \"Too many `#` symbols: raw strings may be delimited by up to 65535 `#` symbols\",\n+                };\n+            };\n+            STRING\n+        }\n+        rustc_lexer::LiteralKind::RawByteStr { err: raw_str_err, .. } => {\n+            if let Some(raw_str_err) = raw_str_err {\n+                err = match raw_str_err {\n+                    rustc_lexer::RawStrError::InvalidStarter { .. } => \"Missing `\\\"` symbol after `#` symbols to begin the raw byte string literal\",\n+                    rustc_lexer::RawStrError::NoTerminator { expected, found, .. } => if expected == found {\n+                        \"Missing trailing `\\\"` to terminate the raw byte string literal\"\n+                    } else {\n+                        \"Missing trailing `\\\"` with `#` symbols to terminate the raw byte string literal\"\n+                    },\n+                    rustc_lexer::RawStrError::TooManyDelimiters { .. } => \"Too many `#` symbols: raw byte strings may be delimited by up to 65535 `#` symbols\",\n+                };\n+            };\n+\n+            BYTE_STRING\n+        }\n+    };\n+\n+    let err = if err.is_empty() { None } else { Some(err) };\n+    (syntax_kind, err)\n+}"}, {"sha": "dc02ae6e83f44a1a3c1928e22303c47b2baad19b", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -18,16 +18,20 @@\n //! [`Parser`]: crate::parser::Parser\n #![allow(rustdoc::private_intra_doc_links)]\n \n+mod lexed_str;\n mod token_set;\n mod syntax_kind;\n mod event;\n mod parser;\n mod grammar;\n mod tokens;\n \n+#[cfg(test)]\n+mod tests;\n+\n pub(crate) use token_set::TokenSet;\n \n-pub use crate::{syntax_kind::SyntaxKind, tokens::Tokens};\n+pub use crate::{lexed_str::LexedStr, syntax_kind::SyntaxKind, tokens::Tokens};\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct ParseError(pub Box<String>);"}, {"sha": "ebba9925618b6d720a5ba6d200d4a52bc342cba8", "filename": "crates/parser/src/tests.rs", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,71 @@\n+use std::{\n+    fmt::Write,\n+    fs,\n+    path::{Path, PathBuf},\n+};\n+\n+use expect_test::expect_file;\n+\n+use crate::LexedStr;\n+\n+#[test]\n+fn valid_lexes_input() {\n+    for case in TestCase::list(\"lexer/ok\") {\n+        let actual = lex(&case.text);\n+        expect_file![case.txt].assert_eq(&actual)\n+    }\n+}\n+\n+#[test]\n+fn invalid_lexes_input() {\n+    for case in TestCase::list(\"lexer/err\") {\n+        let actual = lex(&case.text);\n+        expect_file![case.txt].assert_eq(&actual)\n+    }\n+}\n+\n+fn lex(text: &str) -> String {\n+    let lexed = LexedStr::new(text);\n+\n+    let mut res = String::new();\n+    for i in 0..lexed.len() {\n+        let kind = lexed.kind(i);\n+        let text = lexed.text(i);\n+        let error = lexed.error(i);\n+\n+        let error = error.map(|err| format!(\" error: {}\", err)).unwrap_or_default();\n+        writeln!(res, \"{:?} {:?}{}\", kind, text, error).unwrap();\n+    }\n+    res\n+}\n+\n+#[derive(PartialEq, Eq, PartialOrd, Ord)]\n+struct TestCase {\n+    rs: PathBuf,\n+    txt: PathBuf,\n+    text: String,\n+}\n+\n+impl TestCase {\n+    fn list(path: &'static str) -> Vec<TestCase> {\n+        let crate_root_dir = Path::new(env!(\"CARGO_MANIFEST_DIR\"));\n+        let test_data_dir = crate_root_dir.join(\"test_data\");\n+        let dir = test_data_dir.join(path);\n+\n+        let mut res = Vec::new();\n+        let read_dir = fs::read_dir(&dir)\n+            .unwrap_or_else(|err| panic!(\"can't `read_dir` {}: {}\", dir.display(), err));\n+        for file in read_dir {\n+            let file = file.unwrap();\n+            let path = file.path();\n+            if path.extension().unwrap_or_default() == \"rs\" {\n+                let rs = path;\n+                let txt = rs.with_extension(\"txt\");\n+                let text = fs::read_to_string(&rs).unwrap();\n+                res.push(TestCase { rs, txt, text });\n+            }\n+        }\n+        res.sort();\n+        res\n+    }\n+}"}, {"sha": "4fc2361add21f9a10a306391e214d20796fbdf65", "filename": "crates/parser/src/tokens.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Fsrc%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftokens.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -1,7 +1,8 @@\n //! Input for the parser -- a sequence of tokens.\n //!\n //! As of now, parser doesn't have access to the *text* of the tokens, and makes\n-//! decisions based solely on their classification.\n+//! decisions based solely on their classification. Unlike `LexerToken`, the\n+//! `Tokens` doesn't include whitespace and comments.\n \n use crate::SyntaxKind;\n "}, {"sha": "286584c887f114c2fa3a18cad945b501e5fab846", "filename": "crates/parser/test_data/lexer/err/empty_exponent.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0056_empty_exponent.rs"}, {"sha": "af03d73ced9a60490eeab6e92d255df0e1f08aef", "filename": "crates/parser/test_data/lexer/err/empty_exponent.txt", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_exponent.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,48 @@\n+FLOAT_NUMBER \"0e\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"0E\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\\n\"\n+FLOAT_NUMBER \"42e+\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42e-\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42E+\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42E-\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\\n\"\n+INT_NUMBER \"42\"\n+DOT \".\"\n+IDENT \"e\"\n+PLUS \"+\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"42\"\n+DOT \".\"\n+IDENT \"e\"\n+MINUS \"-\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"42\"\n+DOT \".\"\n+IDENT \"E\"\n+PLUS \"+\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"42\"\n+DOT \".\"\n+IDENT \"E\"\n+MINUS \"-\"\n+WHITESPACE \"\\n\\n\"\n+FLOAT_NUMBER \"42.2e+\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2e-\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2E+\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2E-\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\\n\"\n+FLOAT_NUMBER \"42.2e+f32\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2e-f32\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2E+f32\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"42.2E-f32\" error: Missing digits after the exponent symbol\n+WHITESPACE \"\\n\""}, {"sha": "aa2a9fdca17e0f9e15e89939d77e2e319db2e4e5", "filename": "crates/parser/test_data/lexer/err/empty_int.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0055_empty_int.rs"}, {"sha": "7f7194f4522ecc124a433322f129141500213f73", "filename": "crates/parser/test_data/lexer/err/empty_int.txt", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Fempty_int.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,26 @@\n+INT_NUMBER \"0b\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0o\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0x\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\\n\"\n+INT_NUMBER \"0b_\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0o_\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0x_\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\\n\"\n+INT_NUMBER \"0bnoDigit\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0onoDigit\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0xnoDigit\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\\n\"\n+INT_NUMBER \"0xG\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0xg\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\\n\"\n+INT_NUMBER \"0x_g\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0x_G\" error: Missing digits after the integer base prefix\n+WHITESPACE \"\\n\""}, {"sha": "a7698a404a87dc1ef9a86344e1dc2ea58ba0e30b", "filename": "crates/parser/test_data/lexer/err/lifetime_starts_with_a_number.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0057_lifetime_starts_with_a_number.rs"}, {"sha": "e919bf2a4aef2a86d9b9dfd0ff5f8e84ab135408", "filename": "crates/parser/test_data/lexer/err/lifetime_starts_with_a_number.txt", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Flifetime_starts_with_a_number.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,4 @@\n+LIFETIME_IDENT \"'1\" error: Lifetime name cannot start with a number\n+WHITESPACE \"\\n\"\n+LIFETIME_IDENT \"'1lifetime\" error: Lifetime name cannot start with a number\n+WHITESPACE \"\\n\""}, {"sha": "22e83649f7d5219bb31ce45bd7e986e57ea4e72e", "filename": "crates/parser/test_data/lexer/err/unclosed_block_comment_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0051_unclosed_block_comment_at_eof.rs"}, {"sha": "7d2c329762163634b1e9c503e6c7d32b75d81ec3", "filename": "crates/parser/test_data/lexer/err/unclosed_block_comment_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+COMMENT \"/*\" error: Missing trailing `*/` symbols to terminate the block comment"}, {"sha": "c45c2844dbcc1ec5c032faa0b6f252c9a53c1a91", "filename": "crates/parser/test_data/lexer/err/unclosed_block_comment_with_content.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0052_unclosed_block_comment_with_content.rs"}, {"sha": "227a20660f72be05939bc90e638097611c4305cc", "filename": "crates/parser/test_data/lexer/err/unclosed_block_comment_with_content.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_block_comment_with_content.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+COMMENT \"/* comment\\n\" error: Missing trailing `*/` symbols to terminate the block comment"}, {"sha": "795dc7e25c587d7bc068e2f8b311505b75da2b68", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.rs"}, {"sha": "36944dbb2de01b7fe3a4ae704e4fbd9a98de2561", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "36f4f432187d6542e917e3ca4f1614907cd6b25b", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.rs"}, {"sha": "534a3cadcc95e5baac5fda891405183763bd8f9e", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "836c112c1572fe38f697b997b159df136cee0503", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.rs"}, {"sha": "03f61de9a842f97b1859e9a340593dd66f3cd9b2", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\\\\x7f\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "3c23a03722873d7d2d0c91271a629bce34550ec2", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.rs"}, {"sha": "e11d49d1ee187bbe7cdb9db133aeef95818fa9d7", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\ud83e\udd80\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "cce6615381d5e9e22bbfc2f4f04181d2f865dfa5", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.rs"}, {"sha": "4e374b1206cde299ddfc8878e98990a396b699ea", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\\\\\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "f2ff58ba9a883643b6b8e5d69f75344cbee6e9ad", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash_double_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.rs"}, {"sha": "ee1997586015427980c02577525c1c57c9690b62", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash_double_quote.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_double_quote.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\\\\\\\"\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "5e680aabb7b1c9c085bb39516429236ae2e685cc", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.rs"}, {"sha": "b109d8629c9ee7048fd645907409fe386f59e615", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\\\\n\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "d6898541e623c39b25417cceaba0f0324ea5da3e", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.rs"}, {"sha": "eaca94fa41e24733d34aaee14aeb2e98137ebc96", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\" \" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "1c6df1d00e4e65390deb4dc086bd7dc516272241", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.rs"}, {"sha": "3b79f48bcd265691440639e3eadebcc8c275772d", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_string_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_string_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"b\\\"\\\\u{20AA}\" error: Missing trailing `\"` symbol to terminate the byte string literal"}, {"sha": "d146a8090d185b63ae752335134f55851dd0b539", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.rs"}, {"sha": "5525376f4502ffd34cbb090614b83012bf748ee5", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\\\\x7f\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "c9230dc24ea4421b5c88fa4bbb6eb402f7daffa6", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.rs"}, {"sha": "e7a8be4f6e08524752324f6fa798627b0d288dca", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\ud83e\udd80\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "abffa5037c0daa68a067eb6bc9f1c9a1b6d0f795", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.rs"}, {"sha": "d9937135a9b4ce00e4ba69f94bb7c12fe300d2c3", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\\\\\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "4f46836a935e31ab6b65ad8b185d51b34840b500", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.rs"}, {"sha": "c408cdb2b57cb1bdb8fac10609e119aeb4ebfa31", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\\\\n\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "645b641eedb669cc85718c4a33665ac042278bc8", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash_single_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.rs"}, {"sha": "b331f95607416a675f922dbef9eb09862d704eea", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_slash_single_quote.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_slash_single_quote.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\\\\'\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "93b7f9c87c9144783b4a4cf7ba0a093a68e6691d", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0013_unclosed_byte_with_space.rs"}, {"sha": "80c0e1c00a1ec34450231124a04cb36741c8d66b", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b' \" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "a3dec7c255d0e17d6c55516c6e514bc574e1b083", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.rs"}, {"sha": "e1c3dc141e89d43f86d6668f661f31e52b957996", "filename": "crates/parser/test_data/lexer/err/unclosed_byte_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_byte_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE \"b'\\\\u{20AA}\" error: Missing trailing `'` symbol to terminate the byte literal"}, {"sha": "ad2823b48f78a0667817300ddcac54c2f6c385e9", "filename": "crates/parser/test_data/lexer/err/unclosed_char_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0001_unclosed_char_at_eof.rs"}, {"sha": "218c7a2d7660b1db7e07ac3fcd93d1ac4e80043b", "filename": "crates/parser/test_data/lexer/err/unclosed_char_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "cf74b4dad3b89ec75d72ff183be8e1ed7bc2bee6", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.rs"}, {"sha": "a0d8e1b83a0f61b1f4b1c868144a2855f86a8edc", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\\\\x7f\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "e264a4152801b9c0475cc725983039da19f15b2a", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.rs"}, {"sha": "56f19cce0784e07afb4dad163a27631a6133bfa9", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\ud83e\udd80\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "6ba258b10932b6a2147c88b623cffa331623b96b", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0006_unclosed_char_with_slash.rs"}, {"sha": "cfa0e0752aae82bd872295b3156114047cb9149c", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\\\\\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "78bef7e3eb291e0f0826ee0455cbce8dada6990c", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.rs"}, {"sha": "6a42a4e22b998dd514b6bdebde3adff51284ec54", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\\\\n\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "a0e722065bd7004922c59f030e495dbd27baafd4", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash_single_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.rs"}, {"sha": "1275f6aa857fdcc1b560d56bb060bc315673625f", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_slash_single_quote.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_slash_single_quote.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\\\\'\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "309ecfe4786464210a9aaaf78df6d9d10ae72537", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0005_unclosed_char_with_space.rs"}, {"sha": "746c425c4e06caedd3a57fc2dd2550fb15df89f1", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"' \" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "50be91f68524873a1aafa2cdf67cbc7a62cc31a6", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.rs"}, {"sha": "9abd5909821e9b99d8bb1f3ee4b04d02aeadb7fb", "filename": "crates/parser/test_data/lexer/err/unclosed_char_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_char_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+CHAR \"'\\\\u{20AA}\" error: Missing trailing `'` symbol to terminate the character literal"}, {"sha": "3fcfc96600a7f61bef4f93cea453de5f298dfcd7", "filename": "crates/parser/test_data/lexer/err/unclosed_nested_block_comment_entirely.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0053_unclosed_nested_block_comment_entirely.rs"}, {"sha": "15ce8905a995b08a5c374a459376b9b5474efaa5", "filename": "crates/parser/test_data/lexer/err/unclosed_nested_block_comment_entirely.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_entirely.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+COMMENT \"/* /* /*\\n\" error: Missing trailing `*/` symbols to terminate the block comment"}, {"sha": "26c898f019d6805a2445db2c3aa75b26d88fb736", "filename": "crates/parser/test_data/lexer/err/unclosed_nested_block_comment_partially.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0054_unclosed_nested_block_comment_partially.rs"}, {"sha": "e9b74ee7f8276fc900d5b884e411b8c7ec3fdfba", "filename": "crates/parser/test_data/lexer/err/unclosed_nested_block_comment_partially.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_nested_block_comment_partially.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+COMMENT \"/** /*! /* comment */ */\\n\" error: Missing trailing `*/` symbols to terminate the block comment"}, {"sha": "ae5bae62230856c72a718c0388a90fb420ef2f55", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.rs"}, {"sha": "6ec1780c30b857a17a53349df571053d24bb7bb5", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "d50270afe1e1cd85d31c59dd38e72d0b70be8db2", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.rs"}, {"sha": "d65f1bb2ff04903e0aff214b1de1b2d6560ddc28", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\\\\x7f\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "9ef01207a173f33d66653c7c452095a885d7d525", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.rs"}, {"sha": "0f9e0a1657ad48931064337a6616e7ecb6b8b1fb", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\ud83e\udd80\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "0b3c015d74d48df9df99ea1d9398e47913f2641d", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0045_unclosed_raw_byte_string_with_slash.rs"}, {"sha": "202dcd2d43e3845b4658169d1618a01b89ddd80c", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\\\\\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "0d8b0e7ab04f79b56c0ed51114ee02318de89347", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0046_unclosed_raw_byte_string_with_slash_n.rs"}, {"sha": "d45485b529ed665b1252b0a87182ec160036e13a", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\\\\n\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "14c602fd2b35a949b27bd9c6484e08114d90b92f", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0044_unclosed_raw_byte_string_with_space.rs"}, {"sha": "1bfabbc3ab622493623c47f5c1fb25c3d48d5374", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\" \" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "90e299a1a977cab7edf3c3f4ccd891f258e38ef3", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.rs"}, {"sha": "104ab8aaeefa4c4390e580a6e4abe550f45a3792", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_byte_string_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_byte_string_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\\\"\\\\u{20AA}\" error: Missing trailing `\"` with `#` symbols to terminate the raw byte string literal"}, {"sha": "557c59b625190937a1e56e4d04cd37454fa38b5c", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.rs"}, {"sha": "71b20fd19db7ce261aad06c286b0502376af17af", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "5bec883dc7ae19bff364f58ed3b3df038fecd4aa", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.rs"}, {"sha": "dc106dd24a111c0d3f8ef0ab232ffbfa2bcbc6ba", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\\\\x7f\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "bd046e4bb9148e109cbe00519a49c22f16014928", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.rs"}, {"sha": "30ee029f65679c39d86235b071f6fd73c0e6c6ae", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\ud83e\udd80\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "9242077b8b7c58f62aa24fd4efcaf8f5b1fe2789", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.rs"}, {"sha": "8a6f6cc436662ec5d5e302fbf06af9c33ca767a1", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\\\\\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "db1c16f2ba5ac812292e310602083f67cf77ab56", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.rs"}, {"sha": "f46eff2516ac4a761515b2f4f201756fd855d18f", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\\\\n\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "f104bae4f2cdfdeb47dec924c57bd0215b99dfdd", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.rs"}, {"sha": "49b6afea45a5c4e3f59419df6783467d28356713", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\" \" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "bf05c39134bd08d95d5094ccfe660bf4a0974de2", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.rs"}, {"sha": "d10d6d8e8c2fdcdcd5d966f7365682e5c732cfb5", "filename": "crates/parser/test_data/lexer/err/unclosed_raw_string_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_raw_string_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\\\"\\\\u{20AA}\" error: Missing trailing `\"` with `#` symbols to terminate the raw string literal"}, {"sha": "9d68933c44f13985b9eb19159da6eb3ff0e574bf", "filename": "crates/parser/test_data/lexer/err/unclosed_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0017_unclosed_string_at_eof.rs"}, {"sha": "3b89ce0ca1caebb78638a32f5872ebc19c6f70d3", "filename": "crates/parser/test_data/lexer/err/unclosed_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "56186a34444f4986761a67a953d4c35cb1bac065", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.rs"}, {"sha": "6694cf17a6c59bbac7dc21e86976ec88dcac0b65", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_ascii_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ascii_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\\\\x7f\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "d439b8d2a1d6c12e517bb66ffb3ce05f1e09031b", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.rs"}, {"sha": "5f4501c18e5192fcccd827bc420dd015f286ad14", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_ferris.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_ferris.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\ud83e\udd80\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "00a25840087190c844abad32d4ae185260446822", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0022_unclosed_string_with_slash.rs"}, {"sha": "a8ac565ac8425d650b7cdd45bcd90378dae08879", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\\\\\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "403c2d6ddc698b0dd413fe92223411cbd8222e98", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash_double_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.rs"}, {"sha": "919183b919382ad94052de25a9e56603d3a1d2e9", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash_double_quote.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_double_quote.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\\\\\\\"\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "a0c29b8cff7fc6f2b421683f51266c38e2d0cc2f", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.rs"}, {"sha": "39e288af965b13932ed28d15f561343a018cc231", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_slash_n.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_slash_n.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\\\\n\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "72cdc841fbd787e46735053268635236840e9c64", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0021_unclosed_string_with_space.rs"}, {"sha": "dcff94d7ed3c8964b4f0e58cc52edf2be0b91e26", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_space.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_space.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\" \" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "ed24095c3d4fc8904d1726f52167550ad75cadff", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.rs"}, {"sha": "ac232b530daab984919a4b0e00f6b9ab18261fc9", "filename": "crates/parser/test_data/lexer/err/unclosed_string_with_unicode_escape.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funclosed_string_with_unicode_escape.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"\\\"\\\\u{20AA}\" error: Missing trailing `\"` symbol to terminate the string literal"}, {"sha": "7e8cadf4f4928e457deffc4c63fdd53b9e8f8cb2", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_byte_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0048_unstarted_raw_byte_string_at_eof.rs"}, {"sha": "cf942c92f3b197a53441564747b583bb8ec015c5", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_byte_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+BYTE_STRING \"br##\" error: Missing `\"` symbol after `#` symbols to begin the raw byte string literal"}, {"sha": "d9b55455ac40cde3f42a9962f3d5cb35fd6aa903", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_byte_string_with_ascii.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0050_unstarted_raw_byte_string_with_ascii.rs"}, {"sha": "042769c27564290ec1255944ceeadbda1762cece", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_byte_string_with_ascii.txt", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_byte_string_with_ascii.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,9 @@\n+BYTE_STRING \"br## \" error: Missing `\"` symbol after `#` symbols to begin the raw byte string literal\n+IDENT \"I\"\n+WHITESPACE \" \"\n+IDENT \"lack\"\n+WHITESPACE \" \"\n+IDENT \"a\"\n+WHITESPACE \" \"\n+IDENT \"quote\"\n+BANG \"!\""}, {"sha": "eddf8d0809445b52a740f0329a46753d5c0ab6c9", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0047_unstarted_raw_string_at_eof.rs"}, {"sha": "2f7c7529a95c008dd4e58b4fd93dd5ee56e9a1aa", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_string_at_eof.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_at_eof.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1 @@\n+STRING \"r##\" error: Missing `\"` symbol after `#` symbols to begin the raw string literal"}, {"sha": "534668a9b6622683d1476bb839974af766ab3197", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_string_with_ascii.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/err/0049_unstarted_raw_string_with_ascii.rs"}, {"sha": "4a06b0abe748e8fb12ffa0b79719d59bfee4e6ed", "filename": "crates/parser/test_data/lexer/err/unstarted_raw_string_with_ascii.txt", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Ferr%2Funstarted_raw_string_with_ascii.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,9 @@\n+STRING \"r## \" error: Missing `\"` symbol after `#` symbols to begin the raw string literal\n+IDENT \"I\"\n+WHITESPACE \" \"\n+IDENT \"lack\"\n+WHITESPACE \" \"\n+IDENT \"a\"\n+WHITESPACE \" \"\n+IDENT \"quote\"\n+BANG \"!\""}, {"sha": "b880a59d952f95ab1a00e91e29b6326e329b82e0", "filename": "crates/parser/test_data/lexer/ok/block_comment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0012_block_comment.rs"}, {"sha": "18bb5cad87f0f81a1a8ac8ea3b281a3480ab4269", "filename": "crates/parser/test_data/lexer/ok/block_comment.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fblock_comment.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,6 @@\n+COMMENT \"/* */\"\n+WHITESPACE \"\\n\"\n+COMMENT \"/**/\"\n+WHITESPACE \"\\n\"\n+COMMENT \"/* /* */ */\"\n+WHITESPACE \"\\n\""}, {"sha": "b54930f5e699c24bbf5bc2e3a85c478ca8eea605", "filename": "crates/parser/test_data/lexer/ok/byte_strings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0008_byte_strings.rs"}, {"sha": "c848ac368e4f60a141fc58c9a8dadf2e1cbae33b", "filename": "crates/parser/test_data/lexer/ok/byte_strings.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fbyte_strings.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,22 @@\n+BYTE \"b''\"\n+WHITESPACE \" \"\n+BYTE \"b'x'\"\n+WHITESPACE \" \"\n+BYTE_STRING \"b\\\"foo\\\"\"\n+WHITESPACE \" \"\n+BYTE_STRING \"br\\\"\\\"\"\n+WHITESPACE \"\\n\"\n+BYTE \"b''suf\"\n+WHITESPACE \" \"\n+BYTE_STRING \"b\\\"\\\"ix\"\n+WHITESPACE \" \"\n+BYTE_STRING \"br\\\"\\\"br\"\n+WHITESPACE \"\\n\"\n+BYTE \"b'\\\\n'\"\n+WHITESPACE \" \"\n+BYTE \"b'\\\\\\\\'\"\n+WHITESPACE \" \"\n+BYTE \"b'\\\\''\"\n+WHITESPACE \" \"\n+BYTE \"b'hello'\"\n+WHITESPACE \"\\n\""}, {"sha": "454ee0a5f61721c71b9d60f8ce931571446cf978", "filename": "crates/parser/test_data/lexer/ok/chars.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0006_chars.rs"}, {"sha": "66e58cc298f407ab3807f59ed7222f21ccfbfa93", "filename": "crates/parser/test_data/lexer/ok/chars.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fchars.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,16 @@\n+CHAR \"'x'\"\n+WHITESPACE \" \"\n+CHAR \"' '\"\n+WHITESPACE \" \"\n+CHAR \"'0'\"\n+WHITESPACE \" \"\n+CHAR \"'hello'\"\n+WHITESPACE \" \"\n+CHAR \"'\\\\x7f'\"\n+WHITESPACE \" \"\n+CHAR \"'\\\\n'\"\n+WHITESPACE \" \"\n+CHAR \"'\\\\\\\\'\"\n+WHITESPACE \" \"\n+CHAR \"'\\\\''\"\n+WHITESPACE \"\\n\""}, {"sha": "95d09f2b10159347eece71399a7e2e907ea3df4f", "filename": "crates/parser/test_data/lexer/ok/hello.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0001_hello.rs"}, {"sha": "7f5ce9de1b6596b1e31df3e806b47a44f8369aef", "filename": "crates/parser/test_data/lexer/ok/hello.txt", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fhello.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,3 @@\n+IDENT \"hello\"\n+WHITESPACE \" \"\n+IDENT \"world\""}, {"sha": "c05c9c009d7e69382aae1bb987561c35f759686e", "filename": "crates/parser/test_data/lexer/ok/ident.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0003_ident.rs"}, {"sha": "5689644c07e7992374f8ba927588251b9718e7ec", "filename": "crates/parser/test_data/lexer/ok/ident.txt", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fident.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,14 @@\n+IDENT \"foo\"\n+WHITESPACE \" \"\n+IDENT \"foo_\"\n+WHITESPACE \" \"\n+IDENT \"_foo\"\n+WHITESPACE \" \"\n+UNDERSCORE \"_\"\n+WHITESPACE \" \"\n+IDENT \"__\"\n+WHITESPACE \" \"\n+IDENT \"x\"\n+WHITESPACE \" \"\n+IDENT \"\u043f\u0440\u0438\u0432\u0435\u0442\"\n+WHITESPACE \"\\n\""}, {"sha": "1e91bff4e7d83b662f500d05976d24f37fff0d3e", "filename": "crates/parser/test_data/lexer/ok/keywords.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0011_keywords.rs"}, {"sha": "e19b1399aa1d6445db02eda07ee6f72c385f67bf", "filename": "crates/parser/test_data/lexer/ok/keywords.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fkeywords.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,64 @@\n+ASYNC_KW \"async\"\n+WHITESPACE \" \"\n+FN_KW \"fn\"\n+WHITESPACE \" \"\n+USE_KW \"use\"\n+WHITESPACE \" \"\n+STRUCT_KW \"struct\"\n+WHITESPACE \" \"\n+TRAIT_KW \"trait\"\n+WHITESPACE \" \"\n+ENUM_KW \"enum\"\n+WHITESPACE \" \"\n+IMPL_KW \"impl\"\n+WHITESPACE \" \"\n+TRUE_KW \"true\"\n+WHITESPACE \" \"\n+FALSE_KW \"false\"\n+WHITESPACE \" \"\n+AS_KW \"as\"\n+WHITESPACE \" \"\n+EXTERN_KW \"extern\"\n+WHITESPACE \" \"\n+CRATE_KW \"crate\"\n+WHITESPACE \"\\n\"\n+MOD_KW \"mod\"\n+WHITESPACE \" \"\n+PUB_KW \"pub\"\n+WHITESPACE \" \"\n+SELF_KW \"self\"\n+WHITESPACE \" \"\n+SUPER_KW \"super\"\n+WHITESPACE \" \"\n+IN_KW \"in\"\n+WHITESPACE \" \"\n+WHERE_KW \"where\"\n+WHITESPACE \" \"\n+FOR_KW \"for\"\n+WHITESPACE \" \"\n+LOOP_KW \"loop\"\n+WHITESPACE \" \"\n+WHILE_KW \"while\"\n+WHITESPACE \" \"\n+IF_KW \"if\"\n+WHITESPACE \" \"\n+MATCH_KW \"match\"\n+WHITESPACE \" \"\n+CONST_KW \"const\"\n+WHITESPACE \"\\n\"\n+STATIC_KW \"static\"\n+WHITESPACE \" \"\n+MUT_KW \"mut\"\n+WHITESPACE \" \"\n+TYPE_KW \"type\"\n+WHITESPACE \" \"\n+REF_KW \"ref\"\n+WHITESPACE \" \"\n+LET_KW \"let\"\n+WHITESPACE \" \"\n+ELSE_KW \"else\"\n+WHITESPACE \" \"\n+MOVE_KW \"move\"\n+WHITESPACE \" \"\n+RETURN_KW \"return\"\n+WHITESPACE \"\\n\""}, {"sha": "b764f1dce3c050a936622b9dfd401c9679cf79fb", "filename": "crates/parser/test_data/lexer/ok/lifetimes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0007_lifetimes.rs"}, {"sha": "eeb1e95414ea16ebe9644ca6155a63df1912f823", "filename": "crates/parser/test_data/lexer/ok/lifetimes.txt", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Flifetimes.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,8 @@\n+LIFETIME_IDENT \"'a\"\n+WHITESPACE \" \"\n+LIFETIME_IDENT \"'foo\"\n+WHITESPACE \" \"\n+LIFETIME_IDENT \"'foo_bar_baz\"\n+WHITESPACE \" \"\n+LIFETIME_IDENT \"'_\"\n+WHITESPACE \"\\n\""}, {"sha": "bc761c235d8977fe87cfc258d6ed29ec592ed85d", "filename": "crates/parser/test_data/lexer/ok/numbers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0004_numbers.rs"}, {"sha": "8d13c3f610681fa5ffc83118092b525c1ebc2a43", "filename": "crates/parser/test_data/lexer/ok/numbers.txt", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fnumbers.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,57 @@\n+INT_NUMBER \"0\"\n+WHITESPACE \" \"\n+INT_NUMBER \"00\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0_\"\n+WHITESPACE \" \"\n+FLOAT_NUMBER \"0.\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0z\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"01790\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0b1790\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0o1790\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0x1790aAbBcCdDeEfF\"\n+WHITESPACE \" \"\n+INT_NUMBER \"001279\"\n+WHITESPACE \" \"\n+INT_NUMBER \"0_1279\"\n+WHITESPACE \" \"\n+FLOAT_NUMBER \"0.1279\"\n+WHITESPACE \" \"\n+FLOAT_NUMBER \"0e1279\"\n+WHITESPACE \" \"\n+FLOAT_NUMBER \"0E1279\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0\"\n+DOT \".\"\n+DOT \".\"\n+INT_NUMBER \"2\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0\"\n+DOT \".\"\n+IDENT \"foo\"\n+L_PAREN \"(\"\n+R_PAREN \")\"\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"0e+1\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"0\"\n+DOT \".\"\n+IDENT \"e\"\n+PLUS \"+\"\n+INT_NUMBER \"1\"\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"0.0E-2\"\n+WHITESPACE \"\\n\"\n+FLOAT_NUMBER \"0___0.10000____0000e+111__\"\n+WHITESPACE \"\\n\"\n+INT_NUMBER \"1i64\"\n+WHITESPACE \" \"\n+FLOAT_NUMBER \"92.0f32\"\n+WHITESPACE \" \"\n+INT_NUMBER \"11__s\"\n+WHITESPACE \"\\n\""}, {"sha": "b40a1b6a248d316220d367b92fa33362a34dbd08", "filename": "crates/parser/test_data/lexer/ok/raw_ident.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0014_raw_ident.rs"}, {"sha": "fddad998216acdbbfb48ed73c4d65efdd2775a9b", "filename": "crates/parser/test_data/lexer/ok/raw_ident.txt", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_ident.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,2 @@\n+IDENT \"r#raw_ident\"\n+WHITESPACE \"\\n\""}, {"sha": "e5ed0b693b390d94f2826d0bb0af5dee2fd990a2", "filename": "crates/parser/test_data/lexer/ok/raw_strings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0013_raw_strings.rs"}, {"sha": "13cf733b7d1731ea2ff9375562af0cb76a9017b4", "filename": "crates/parser/test_data/lexer/ok/raw_strings.txt", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fraw_strings.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,2 @@\n+STRING \"r###\\\"this is a r##\\\"raw\\\"## string\\\"###\"\n+WHITESPACE \"\\n\""}, {"sha": "4b6653f9cc9d23ce7f98500b92e2de9215094f44", "filename": "crates/parser/test_data/lexer/ok/single_line_comments.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0010_single_line_comments.rs"}, {"sha": "a7681e9f5086a714d03bc67505e009985da13999", "filename": "crates/parser/test_data/lexer/ok/single_line_comments.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsingle_line_comments.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,22 @@\n+SHEBANG \"#!/usr/bin/env bash\"\n+WHITESPACE \"\\n\"\n+COMMENT \"// hello\"\n+WHITESPACE \"\\n\"\n+COMMENT \"//! World\"\n+WHITESPACE \"\\n\"\n+COMMENT \"//!! Inner line doc\"\n+WHITESPACE \"\\n\"\n+COMMENT \"/// Outer line doc\"\n+WHITESPACE \"\\n\"\n+COMMENT \"//// Just a comment\"\n+WHITESPACE \"\\n\\n\"\n+COMMENT \"//\"\n+WHITESPACE \"\\n\"\n+COMMENT \"//!\"\n+WHITESPACE \"\\n\"\n+COMMENT \"//!!\"\n+WHITESPACE \"\\n\"\n+COMMENT \"///\"\n+WHITESPACE \"\\n\"\n+COMMENT \"////\"\n+WHITESPACE \"\\n\""}, {"sha": "4ddb5bffccc55312c51733650d703089c5626b37", "filename": "crates/parser/test_data/lexer/ok/strings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0009_strings.rs"}, {"sha": "ec222591bd39303176be1d48d1474f090a529122", "filename": "crates/parser/test_data/lexer/ok/strings.txt", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fstrings.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,8 @@\n+STRING \"\\\"hello\\\"\"\n+WHITESPACE \" \"\n+STRING \"r\\\"world\\\"\"\n+WHITESPACE \" \"\n+STRING \"\\\"\\\\n\\\\\\\"\\\\\\\\no escape\\\"\"\n+WHITESPACE \" \"\n+STRING \"\\\"multi\\nline\\\"\"\n+WHITESPACE \"\\n\""}, {"sha": "487569b5ae3c4d579595ac97668b788cb5bee418", "filename": "crates/parser/test_data/lexer/ok/symbols.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0005_symbols.rs"}, {"sha": "533ccff9a8734767ce28506537a2d6d6d68becc9", "filename": "crates/parser/test_data/lexer/ok/symbols.txt", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fsymbols.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,77 @@\n+SEMICOLON \";\"\n+WHITESPACE \" \"\n+COMMA \",\"\n+WHITESPACE \" \"\n+L_PAREN \"(\"\n+WHITESPACE \" \"\n+R_PAREN \")\"\n+WHITESPACE \" \"\n+L_CURLY \"{\"\n+WHITESPACE \" \"\n+R_CURLY \"}\"\n+WHITESPACE \" \"\n+L_BRACK \"[\"\n+WHITESPACE \" \"\n+R_BRACK \"]\"\n+WHITESPACE \" \"\n+L_ANGLE \"<\"\n+WHITESPACE \" \"\n+R_ANGLE \">\"\n+WHITESPACE \" \"\n+AT \"@\"\n+WHITESPACE \" \"\n+POUND \"#\"\n+WHITESPACE \" \"\n+TILDE \"~\"\n+WHITESPACE \" \"\n+QUESTION \"?\"\n+WHITESPACE \" \"\n+DOLLAR \"$\"\n+WHITESPACE \" \"\n+AMP \"&\"\n+WHITESPACE \" \"\n+PIPE \"|\"\n+WHITESPACE \" \"\n+PLUS \"+\"\n+WHITESPACE \" \"\n+STAR \"*\"\n+WHITESPACE \" \"\n+SLASH \"/\"\n+WHITESPACE \" \"\n+CARET \"^\"\n+WHITESPACE \" \"\n+PERCENT \"%\"\n+WHITESPACE \"\\n\"\n+DOT \".\"\n+WHITESPACE \" \"\n+DOT \".\"\n+DOT \".\"\n+WHITESPACE \" \"\n+DOT \".\"\n+DOT \".\"\n+DOT \".\"\n+WHITESPACE \" \"\n+DOT \".\"\n+DOT \".\"\n+EQ \"=\"\n+WHITESPACE \"\\n\"\n+COLON \":\"\n+WHITESPACE \" \"\n+COLON \":\"\n+COLON \":\"\n+WHITESPACE \"\\n\"\n+EQ \"=\"\n+WHITESPACE \" \"\n+EQ \"=\"\n+R_ANGLE \">\"\n+WHITESPACE \"\\n\"\n+BANG \"!\"\n+WHITESPACE \" \"\n+BANG \"!\"\n+EQ \"=\"\n+WHITESPACE \"\\n\"\n+MINUS \"-\"\n+WHITESPACE \" \"\n+MINUS \"-\"\n+R_ANGLE \">\"\n+WHITESPACE \"\\n\""}, {"sha": "08fce1418a73608e5513f8173cc4a30749e8c1ea", "filename": "crates/parser/test_data/lexer/ok/whitespace.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "previous_filename": "crates/syntax/test_data/lexer/ok/0002_whitespace.rs"}, {"sha": "8ccb79e4ec74deb61ef2e2528735e0c709ee60f6", "filename": "crates/parser/test_data/lexer/ok/whitespace.txt", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Flexer%2Fok%2Fwhitespace.txt?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -0,0 +1,12 @@\n+IDENT \"a\"\n+WHITESPACE \" \"\n+IDENT \"b\"\n+WHITESPACE \"  \"\n+IDENT \"c\"\n+WHITESPACE \"\\n\"\n+IDENT \"d\"\n+WHITESPACE \"\\n\\n\"\n+IDENT \"e\"\n+WHITESPACE \"\\t\"\n+IDENT \"f\"\n+WHITESPACE \"\\n\""}, {"sha": "65a6b7ac4e4a046773e66155507349987a913846", "filename": "crates/syntax/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Flib.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -48,7 +48,6 @@ use text_edit::Indel;\n \n pub use crate::{\n     ast::{AstNode, AstToken},\n-    parsing::lexer::{lex_single_syntax_kind, lex_single_valid_syntax_kind, tokenize, Token},\n     ptr::{AstPtr, SyntaxNodePtr},\n     syntax_error::SyntaxError,\n     syntax_node::{"}, {"sha": "cba1ddde855aa1578ae8a1e8bc27cd57eb1e9554", "filename": "crates/syntax/src/parsing.rs", "status": "modified", "additions": 9, "deletions": 38, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -1,7 +1,6 @@\n //! Lexing, bridging to parser (which does the actual parsing) and\n //! incremental reparsing.\n \n-pub(crate) mod lexer;\n mod text_tree_sink;\n mod reparsing;\n \n@@ -10,18 +9,17 @@ use text_tree_sink::TextTreeSink;\n \n use crate::{syntax_node::GreenNode, AstNode, SyntaxError, SyntaxNode};\n \n-pub(crate) use crate::parsing::{lexer::*, reparsing::incremental_reparse};\n+pub(crate) use crate::parsing::reparsing::incremental_reparse;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n-    let (lexer_tokens, lexer_errors) = tokenize(text);\n-    let parser_tokens = to_parser_tokens(text, &lexer_tokens);\n+    let lexed = parser::LexedStr::new(text);\n+    let parser_tokens = lexed.to_tokens();\n \n-    let mut tree_sink = TextTreeSink::new(text, &lexer_tokens);\n+    let mut tree_sink = TextTreeSink::new(lexed);\n \n     parser::parse_source_file(&parser_tokens, &mut tree_sink);\n \n-    let (tree, mut parser_errors) = tree_sink.finish();\n-    parser_errors.extend(lexer_errors);\n+    let (tree, parser_errors) = tree_sink.finish();\n \n     (tree, parser_errors)\n }\n@@ -31,14 +29,13 @@ pub(crate) fn parse_text_as<T: AstNode>(\n     text: &str,\n     entry_point: parser::ParserEntryPoint,\n ) -> Result<T, ()> {\n-    let (lexer_tokens, lexer_errors) = tokenize(text);\n-    if !lexer_errors.is_empty() {\n+    let lexed = parser::LexedStr::new(text);\n+    if lexed.errors().next().is_some() {\n         return Err(());\n     }\n+    let parser_tokens = lexed.to_tokens();\n \n-    let parser_tokens = to_parser_tokens(text, &lexer_tokens);\n-\n-    let mut tree_sink = TextTreeSink::new(text, &lexer_tokens);\n+    let mut tree_sink = TextTreeSink::new(lexed);\n \n     // TextTreeSink assumes that there's at least some root node to which it can attach errors and\n     // tokens. We arbitrarily give it a SourceFile.\n@@ -54,29 +51,3 @@ pub(crate) fn parse_text_as<T: AstNode>(\n \n     SyntaxNode::new_root(tree).first_child().and_then(T::cast).ok_or(())\n }\n-\n-pub(crate) fn to_parser_tokens(text: &str, lexer_tokens: &[lexer::Token]) -> ::parser::Tokens {\n-    let mut off = 0;\n-    let mut res = parser::Tokens::default();\n-    let mut was_joint = false;\n-    for t in lexer_tokens {\n-        if t.kind.is_trivia() {\n-            was_joint = false;\n-        } else {\n-            if t.kind == SyntaxKind::IDENT {\n-                let token_text = &text[off..][..usize::from(t.len)];\n-                let contextual_kw =\n-                    SyntaxKind::from_contextual_keyword(token_text).unwrap_or(SyntaxKind::IDENT);\n-                res.push_ident(contextual_kw);\n-            } else {\n-                if was_joint {\n-                    res.was_joint();\n-                }\n-                res.push(t.kind);\n-            }\n-            was_joint = true;\n-        }\n-        off += usize::from(t.len);\n-    }\n-    res\n-}"}, {"sha": "ae4844e486e586669e427fce6b3fcd9fbfa4b8d1", "filename": "crates/syntax/src/parsing/lexer.rs", "status": "removed", "additions": 0, "deletions": 261, "changes": 261, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,261 +0,0 @@\n-//! Lexer analyzes raw input string and produces lexemes (tokens).\n-//! It is just a bridge to `rustc_lexer`.\n-\n-use std::convert::TryInto;\n-\n-use rustc_lexer::RawStrError;\n-\n-use crate::{\n-    SyntaxError,\n-    SyntaxKind::{self, *},\n-    TextRange, TextSize, T,\n-};\n-\n-/// A token of Rust source.\n-#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n-pub struct Token {\n-    /// The kind of token.\n-    pub kind: SyntaxKind,\n-    /// The length of the token.\n-    pub len: TextSize,\n-}\n-\n-/// Break a string up into its component tokens.\n-/// Beware that it checks for shebang first and its length contributes to resulting\n-/// tokens offsets.\n-pub fn tokenize(text: &str) -> (Vec<Token>, Vec<SyntaxError>) {\n-    // non-empty string is a precondition of `rustc_lexer::strip_shebang()`.\n-    if text.is_empty() {\n-        return Default::default();\n-    }\n-\n-    let mut tokens = Vec::new();\n-    let mut errors = Vec::new();\n-\n-    let mut offset = match rustc_lexer::strip_shebang(text) {\n-        Some(shebang_len) => {\n-            tokens.push(Token { kind: SHEBANG, len: shebang_len.try_into().unwrap() });\n-            shebang_len\n-        }\n-        None => 0,\n-    };\n-\n-    let text_without_shebang = &text[offset..];\n-\n-    for rustc_token in rustc_lexer::tokenize(text_without_shebang) {\n-        let token_len: TextSize = rustc_token.len.try_into().unwrap();\n-        let token_range = TextRange::at(offset.try_into().unwrap(), token_len);\n-\n-        let (syntax_kind, err_message) =\n-            rustc_token_kind_to_syntax_kind(&rustc_token.kind, &text[token_range]);\n-\n-        tokens.push(Token { kind: syntax_kind, len: token_len });\n-\n-        if let Some(err_message) = err_message {\n-            errors.push(SyntaxError::new(err_message, token_range));\n-        }\n-\n-        offset += rustc_token.len;\n-    }\n-\n-    (tokens, errors)\n-}\n-\n-/// Returns `SyntaxKind` and `Option<SyntaxError>` if `text` parses as a single token.\n-///\n-/// Returns `None` if the string contains zero *or two or more* tokens.\n-/// The token is malformed if the returned error is not `None`.\n-///\n-/// Beware that unescape errors are not checked at tokenization time.\n-pub fn lex_single_syntax_kind(text: &str) -> Option<(SyntaxKind, Option<SyntaxError>)> {\n-    let (first_token, err) = lex_first_token(text)?;\n-    if first_token.len != TextSize::of(text) {\n-        return None;\n-    }\n-    Some((first_token.kind, err))\n-}\n-\n-/// The same as `lex_single_syntax_kind()` but returns only `SyntaxKind` and\n-/// returns `None` if any tokenization error occurred.\n-///\n-/// Beware that unescape errors are not checked at tokenization time.\n-pub fn lex_single_valid_syntax_kind(text: &str) -> Option<SyntaxKind> {\n-    let (single_token, err) = lex_single_syntax_kind(text)?;\n-    if err.is_some() {\n-        return None;\n-    }\n-    Some(single_token)\n-}\n-\n-/// Returns `SyntaxKind` and `Option<SyntaxError>` of the first token\n-/// encountered at the beginning of the string.\n-///\n-/// Returns `None` if the string contains zero tokens or if the token was parsed\n-/// with an error.\n-/// The token is malformed if the returned error is not `None`.\n-///\n-/// Beware that unescape errors are not checked at tokenization time.\n-fn lex_first_token(text: &str) -> Option<(Token, Option<SyntaxError>)> {\n-    // non-empty string is a precondition of `rustc_lexer::first_token()`.\n-    if text.is_empty() {\n-        return None;\n-    }\n-\n-    let rustc_token = rustc_lexer::first_token(text);\n-    let (syntax_kind, err_message) = rustc_token_kind_to_syntax_kind(&rustc_token.kind, text);\n-\n-    let token = Token { kind: syntax_kind, len: rustc_token.len.try_into().unwrap() };\n-    let optional_error = err_message\n-        .map(|err_message| SyntaxError::new(err_message, TextRange::up_to(TextSize::of(text))));\n-\n-    Some((token, optional_error))\n-}\n-\n-/// Returns `SyntaxKind` and an optional tokenize error message.\n-fn rustc_token_kind_to_syntax_kind(\n-    rustc_token_kind: &rustc_lexer::TokenKind,\n-    token_text: &str,\n-) -> (SyntaxKind, Option<&'static str>) {\n-    // A note on an intended tradeoff:\n-    // We drop some useful information here (see patterns with double dots `..`)\n-    // Storing that info in `SyntaxKind` is not possible due to its layout requirements of\n-    // being `u16` that come from `rowan::SyntaxKind`.\n-\n-    let syntax_kind = {\n-        match rustc_token_kind {\n-            rustc_lexer::TokenKind::LineComment { doc_style: _ } => COMMENT,\n-\n-            rustc_lexer::TokenKind::BlockComment { doc_style: _, terminated: true } => COMMENT,\n-            rustc_lexer::TokenKind::BlockComment { doc_style: _, terminated: false } => {\n-                return (\n-                    COMMENT,\n-                    Some(\"Missing trailing `*/` symbols to terminate the block comment\"),\n-                );\n-            }\n-\n-            rustc_lexer::TokenKind::Whitespace => WHITESPACE,\n-\n-            rustc_lexer::TokenKind::Ident => {\n-                if token_text == \"_\" {\n-                    UNDERSCORE\n-                } else {\n-                    SyntaxKind::from_keyword(token_text).unwrap_or(IDENT)\n-                }\n-            }\n-\n-            rustc_lexer::TokenKind::RawIdent => IDENT,\n-            rustc_lexer::TokenKind::Literal { kind, .. } => return match_literal_kind(kind),\n-\n-            rustc_lexer::TokenKind::Lifetime { starts_with_number: false } => LIFETIME_IDENT,\n-            rustc_lexer::TokenKind::Lifetime { starts_with_number: true } => {\n-                return (LIFETIME_IDENT, Some(\"Lifetime name cannot start with a number\"))\n-            }\n-\n-            rustc_lexer::TokenKind::Semi => T![;],\n-            rustc_lexer::TokenKind::Comma => T![,],\n-            rustc_lexer::TokenKind::Dot => T![.],\n-            rustc_lexer::TokenKind::OpenParen => T!['('],\n-            rustc_lexer::TokenKind::CloseParen => T![')'],\n-            rustc_lexer::TokenKind::OpenBrace => T!['{'],\n-            rustc_lexer::TokenKind::CloseBrace => T!['}'],\n-            rustc_lexer::TokenKind::OpenBracket => T!['['],\n-            rustc_lexer::TokenKind::CloseBracket => T![']'],\n-            rustc_lexer::TokenKind::At => T![@],\n-            rustc_lexer::TokenKind::Pound => T![#],\n-            rustc_lexer::TokenKind::Tilde => T![~],\n-            rustc_lexer::TokenKind::Question => T![?],\n-            rustc_lexer::TokenKind::Colon => T![:],\n-            rustc_lexer::TokenKind::Dollar => T![$],\n-            rustc_lexer::TokenKind::Eq => T![=],\n-            rustc_lexer::TokenKind::Bang => T![!],\n-            rustc_lexer::TokenKind::Lt => T![<],\n-            rustc_lexer::TokenKind::Gt => T![>],\n-            rustc_lexer::TokenKind::Minus => T![-],\n-            rustc_lexer::TokenKind::And => T![&],\n-            rustc_lexer::TokenKind::Or => T![|],\n-            rustc_lexer::TokenKind::Plus => T![+],\n-            rustc_lexer::TokenKind::Star => T![*],\n-            rustc_lexer::TokenKind::Slash => T![/],\n-            rustc_lexer::TokenKind::Caret => T![^],\n-            rustc_lexer::TokenKind::Percent => T![%],\n-            rustc_lexer::TokenKind::Unknown => ERROR,\n-        }\n-    };\n-\n-    return (syntax_kind, None);\n-\n-    fn match_literal_kind(kind: &rustc_lexer::LiteralKind) -> (SyntaxKind, Option<&'static str>) {\n-        let mut err = \"\";\n-        let syntax_kind = match *kind {\n-            rustc_lexer::LiteralKind::Int { empty_int, base: _ } => {\n-                if empty_int {\n-                    err = \"Missing digits after the integer base prefix\";\n-                }\n-                INT_NUMBER\n-            }\n-            rustc_lexer::LiteralKind::Float { empty_exponent, base: _ } => {\n-                if empty_exponent {\n-                    err = \"Missing digits after the exponent symbol\";\n-                }\n-                FLOAT_NUMBER\n-            }\n-            rustc_lexer::LiteralKind::Char { terminated } => {\n-                if !terminated {\n-                    err = \"Missing trailing `'` symbol to terminate the character literal\";\n-                }\n-                CHAR\n-            }\n-            rustc_lexer::LiteralKind::Byte { terminated } => {\n-                if !terminated {\n-                    err = \"Missing trailing `'` symbol to terminate the byte literal\";\n-                }\n-                BYTE\n-            }\n-            rustc_lexer::LiteralKind::Str { terminated } => {\n-                if !terminated {\n-                    err = \"Missing trailing `\\\"` symbol to terminate the string literal\";\n-                }\n-                STRING\n-            }\n-            rustc_lexer::LiteralKind::ByteStr { terminated } => {\n-                if !terminated {\n-                    err = \"Missing trailing `\\\"` symbol to terminate the byte string literal\";\n-                }\n-                BYTE_STRING\n-            }\n-            rustc_lexer::LiteralKind::RawStr { err: raw_str_err, .. } => {\n-                if let Some(raw_str_err) = raw_str_err {\n-                    err = match raw_str_err {\n-                        RawStrError::InvalidStarter { .. } => \"Missing `\\\"` symbol after `#` symbols to begin the raw string literal\",\n-                        RawStrError::NoTerminator { expected, found, .. } => if expected == found {\n-                            \"Missing trailing `\\\"` to terminate the raw string literal\"\n-                        } else {\n-                            \"Missing trailing `\\\"` with `#` symbols to terminate the raw string literal\"\n-                        },\n-                        RawStrError::TooManyDelimiters { .. } => \"Too many `#` symbols: raw strings may be delimited by up to 65535 `#` symbols\",\n-                    };\n-                };\n-                STRING\n-            }\n-            rustc_lexer::LiteralKind::RawByteStr { err: raw_str_err, .. } => {\n-                if let Some(raw_str_err) = raw_str_err {\n-                    err = match raw_str_err {\n-                        RawStrError::InvalidStarter { .. } => \"Missing `\\\"` symbol after `#` symbols to begin the raw byte string literal\",\n-                        RawStrError::NoTerminator { expected, found, .. } => if expected == found {\n-                            \"Missing trailing `\\\"` to terminate the raw byte string literal\"\n-                        } else {\n-                            \"Missing trailing `\\\"` with `#` symbols to terminate the raw byte string literal\"\n-                        },\n-                        RawStrError::TooManyDelimiters { .. } => \"Too many `#` symbols: raw byte strings may be delimited by up to 65535 `#` symbols\",\n-                    };\n-                };\n-\n-                BYTE_STRING\n-            }\n-        };\n-\n-        let err = if err.is_empty() { None } else { Some(err) };\n-\n-        (syntax_kind, err)\n-    }\n-}"}, {"sha": "e9567a838c6c7adc20e438b5a890d376b57ccc45", "filename": "crates/syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -10,11 +10,7 @@ use parser::Reparser;\n use text_edit::Indel;\n \n use crate::{\n-    parsing::{\n-        lexer::{lex_single_syntax_kind, tokenize, Token},\n-        text_tree_sink::TextTreeSink,\n-        to_parser_tokens,\n-    },\n+    parsing::text_tree_sink::TextTreeSink,\n     syntax_node::{GreenNode, GreenToken, NodeOrToken, SyntaxElement, SyntaxNode},\n     SyntaxError,\n     SyntaxKind::*,\n@@ -53,7 +49,7 @@ fn reparse_token(\n             }\n \n             let mut new_text = get_text_after_edit(prev_token.clone().into(), edit);\n-            let (new_token_kind, new_err) = lex_single_syntax_kind(&new_text)?;\n+            let (new_token_kind, new_err) = parser::LexedStr::single_token(&new_text)?;\n \n             if new_token_kind != prev_token_kind\n                 || (new_token_kind == IDENT && is_contextual_kw(&new_text))\n@@ -66,17 +62,18 @@ fn reparse_token(\n             // `b` no longer remains an identifier, but becomes a part of byte string literal\n             if let Some(next_char) = root.text().char_at(prev_token.text_range().end()) {\n                 new_text.push(next_char);\n-                let token_with_next_char = lex_single_syntax_kind(&new_text);\n+                let token_with_next_char = parser::LexedStr::single_token(&new_text);\n                 if let Some((_kind, _error)) = token_with_next_char {\n                     return None;\n                 }\n                 new_text.pop();\n             }\n \n             let new_token = GreenToken::new(rowan::SyntaxKind(prev_token_kind.into()), &new_text);\n+            let range = TextRange::up_to(TextSize::of(&new_text));\n             Some((\n                 prev_token.replace_with(new_token),\n-                new_err.into_iter().collect(),\n+                new_err.into_iter().map(|msg| SyntaxError::new(msg, range)).collect(),\n                 prev_token.text_range(),\n             ))\n         }\n@@ -91,17 +88,17 @@ fn reparse_block(\n     let (node, reparser) = find_reparsable_node(root, edit.delete)?;\n     let text = get_text_after_edit(node.clone().into(), edit);\n \n-    let (lexer_tokens, new_lexer_errors) = tokenize(&text);\n-    if !is_balanced(&lexer_tokens) {\n+    let lexed = parser::LexedStr::new(text.as_str());\n+    let parser_tokens = lexed.to_tokens();\n+    if !is_balanced(&lexed) {\n         return None;\n     }\n-    let parser_tokens = to_parser_tokens(&text, &lexer_tokens);\n \n-    let mut tree_sink = TextTreeSink::new(&text, &lexer_tokens);\n+    let mut tree_sink = TextTreeSink::new(lexed);\n+\n     reparser.parse(&parser_tokens, &mut tree_sink);\n \n-    let (green, mut new_parser_errors) = tree_sink.finish();\n-    new_parser_errors.extend(new_lexer_errors);\n+    let (green, new_parser_errors) = tree_sink.finish();\n \n     Some((node.replace_with(green), new_parser_errors, node.text_range()))\n }\n@@ -131,16 +128,13 @@ fn find_reparsable_node(node: &SyntaxNode, range: TextRange) -> Option<(SyntaxNo\n     })\n }\n \n-fn is_balanced(tokens: &[Token]) -> bool {\n-    if tokens.is_empty()\n-        || tokens.first().unwrap().kind != T!['{']\n-        || tokens.last().unwrap().kind != T!['}']\n-    {\n+fn is_balanced(lexed: &parser::LexedStr<'_>) -> bool {\n+    if lexed.is_empty() || lexed.kind(0) != T!['{'] || lexed.kind(lexed.len() - 1) != T!['}'] {\n         return false;\n     }\n     let mut balance = 0usize;\n-    for t in &tokens[1..tokens.len() - 1] {\n-        match t.kind {\n+    for i in 1..lexed.len() - 1 {\n+        match lexed.kind(i) {\n             T!['{'] => balance += 1,\n             T!['}'] => {\n                 balance = match balance.checked_sub(1) {"}, {"sha": "c9e7feb96575d841b68acf1552b0977eb67cde51", "filename": "crates/syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 36, "deletions": 50, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -2,25 +2,22 @@\n \n use std::mem;\n \n-use parser::{ParseError, TreeSink};\n+use parser::{LexedStr, ParseError, TreeSink};\n \n use crate::{\n     ast,\n-    parsing::Token,\n     syntax_node::GreenNode,\n     SyntaxError,\n     SyntaxKind::{self, *},\n-    SyntaxTreeBuilder, TextRange, TextSize,\n+    SyntaxTreeBuilder, TextRange,\n };\n \n /// Bridges the parser with our specific syntax tree representation.\n ///\n /// `TextTreeSink` also handles attachment of trivia (whitespace) to nodes.\n pub(crate) struct TextTreeSink<'a> {\n-    text: &'a str,\n-    tokens: &'a [Token],\n-    text_pos: TextSize,\n-    token_pos: usize,\n+    lexed: LexedStr<'a>,\n+    pos: usize,\n     state: State,\n     inner: SyntaxTreeBuilder,\n }\n@@ -39,12 +36,7 @@ impl<'a> TreeSink for TextTreeSink<'a> {\n             State::Normal => (),\n         }\n         self.eat_trivias();\n-        let n_tokens = n_tokens as usize;\n-        let len = self.tokens[self.token_pos..self.token_pos + n_tokens]\n-            .iter()\n-            .map(|it| it.len)\n-            .sum::<TextSize>();\n-        self.do_token(kind, len, n_tokens);\n+        self.do_token(kind, n_tokens as usize);\n     }\n \n     fn start_node(&mut self, kind: SyntaxKind) {\n@@ -60,20 +52,12 @@ impl<'a> TreeSink for TextTreeSink<'a> {\n         }\n \n         let n_trivias =\n-            self.tokens[self.token_pos..].iter().take_while(|it| it.kind.is_trivia()).count();\n-        let leading_trivias = &self.tokens[self.token_pos..self.token_pos + n_trivias];\n-        let mut trivia_end =\n-            self.text_pos + leading_trivias.iter().map(|it| it.len).sum::<TextSize>();\n-\n-        let n_attached_trivias = {\n-            let leading_trivias = leading_trivias.iter().rev().map(|it| {\n-                let next_end = trivia_end - it.len;\n-                let range = TextRange::new(next_end, trivia_end);\n-                trivia_end = next_end;\n-                (it.kind, &self.text[range])\n-            });\n-            n_attached_trivias(kind, leading_trivias)\n-        };\n+            (self.pos..self.lexed.len()).take_while(|&it| self.lexed.kind(it).is_trivia()).count();\n+        let leading_trivias = self.pos..self.pos + n_trivias;\n+        let n_attached_trivias = n_attached_trivias(\n+            kind,\n+            leading_trivias.rev().map(|it| (self.lexed.kind(it), self.lexed.text(it))),\n+        );\n         self.eat_n_trivias(n_trivias - n_attached_trivias);\n         self.inner.start_node(kind);\n         self.eat_n_trivias(n_attached_trivias);\n@@ -88,20 +72,14 @@ impl<'a> TreeSink for TextTreeSink<'a> {\n     }\n \n     fn error(&mut self, error: ParseError) {\n-        self.inner.error(error, self.text_pos);\n+        let text_pos = self.lexed.text_start(self.pos).try_into().unwrap();\n+        self.inner.error(error, text_pos);\n     }\n }\n \n impl<'a> TextTreeSink<'a> {\n-    pub(super) fn new(text: &'a str, tokens: &'a [Token]) -> Self {\n-        Self {\n-            text,\n-            tokens,\n-            text_pos: 0.into(),\n-            token_pos: 0,\n-            state: State::PendingStart,\n-            inner: SyntaxTreeBuilder::default(),\n-        }\n+    pub(super) fn new(lexed: parser::LexedStr<'a>) -> Self {\n+        Self { lexed, pos: 0, state: State::PendingStart, inner: SyntaxTreeBuilder::default() }\n     }\n \n     pub(super) fn finish_eof(mut self) -> (GreenNode, Vec<SyntaxError>, bool) {\n@@ -113,8 +91,17 @@ impl<'a> TextTreeSink<'a> {\n             State::PendingStart | State::Normal => unreachable!(),\n         }\n \n-        let (node, errors) = self.inner.finish_raw();\n-        let is_eof = self.token_pos == self.tokens.len();\n+        let (node, mut errors) = self.inner.finish_raw();\n+        for (i, err) in self.lexed.errors() {\n+            let text_range = self.lexed.text_range(i);\n+            let text_range = TextRange::new(\n+                text_range.start.try_into().unwrap(),\n+                text_range.end.try_into().unwrap(),\n+            );\n+            errors.push(SyntaxError::new(err, text_range))\n+        }\n+\n+        let is_eof = self.pos == self.lexed.len();\n \n         (node, errors, is_eof)\n     }\n@@ -125,27 +112,26 @@ impl<'a> TextTreeSink<'a> {\n     }\n \n     fn eat_trivias(&mut self) {\n-        while let Some(&token) = self.tokens.get(self.token_pos) {\n-            if !token.kind.is_trivia() {\n+        while self.pos < self.lexed.len() {\n+            let kind = self.lexed.kind(self.pos);\n+            if !kind.is_trivia() {\n                 break;\n             }\n-            self.do_token(token.kind, token.len, 1);\n+            self.do_token(kind, 1);\n         }\n     }\n \n     fn eat_n_trivias(&mut self, n: usize) {\n         for _ in 0..n {\n-            let token = self.tokens[self.token_pos];\n-            assert!(token.kind.is_trivia());\n-            self.do_token(token.kind, token.len, 1);\n+            let kind = self.lexed.kind(self.pos);\n+            assert!(kind.is_trivia());\n+            self.do_token(kind, 1);\n         }\n     }\n \n-    fn do_token(&mut self, kind: SyntaxKind, len: TextSize, n_tokens: usize) {\n-        let range = TextRange::at(self.text_pos, len);\n-        let text = &self.text[range];\n-        self.text_pos += len;\n-        self.token_pos += n_tokens;\n+    fn do_token(&mut self, kind: SyntaxKind, n_tokens: usize) {\n+        let text = &self.lexed.range_text(self.pos..self.pos + n_tokens);\n+        self.pos += n_tokens;\n         self.inner.token(kind, text);\n     }\n }"}, {"sha": "69c5b1cd35a842007c64f1aa7cd5722bd9a686e9", "filename": "crates/syntax/src/tests.rs", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1a3ae5ab46132de350147753443be2ba87a756/crates%2Fsyntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests.rs?ref=9f1a3ae5ab46132de350147753443be2ba87a756", "patch": "@@ -3,7 +3,6 @@ mod sourcegen_ast;\n mod ast_src;\n \n use std::{\n-    fmt::Write,\n     fs,\n     path::{Path, PathBuf},\n };\n@@ -13,25 +12,7 @@ use expect_test::expect_file;\n use rayon::prelude::*;\n use test_utils::{bench, bench_fixture, project_root};\n \n-use crate::{ast, fuzz, tokenize, AstNode, SourceFile, SyntaxError, TextRange, TextSize, Token};\n-\n-#[test]\n-fn lexer_tests() {\n-    // FIXME:\n-    // * Add tests for unicode escapes in byte-character and [raw]-byte-string literals\n-    // * Add tests for unescape errors\n-\n-    dir_tests(&test_data_dir(), &[\"lexer/ok\"], \"txt\", |text, path| {\n-        let (tokens, errors) = tokenize(text);\n-        assert_errors_are_absent(&errors, path);\n-        dump_tokens_and_errors(&tokens, &errors, text)\n-    });\n-    dir_tests(&test_data_dir(), &[\"lexer/err\"], \"txt\", |text, path| {\n-        let (tokens, errors) = tokenize(text);\n-        assert_errors_are_present(&errors, path);\n-        dump_tokens_and_errors(&tokens, &errors, text)\n-    });\n-}\n+use crate::{ast, fuzz, AstNode, SourceFile, SyntaxError};\n \n #[test]\n fn parse_smoke_test() {\n@@ -206,22 +187,6 @@ fn assert_errors_are_absent(errors: &[SyntaxError], path: &Path) {\n     );\n }\n \n-fn dump_tokens_and_errors(tokens: &[Token], errors: &[SyntaxError], text: &str) -> String {\n-    let mut acc = String::new();\n-    let mut offset: TextSize = 0.into();\n-    for token in tokens {\n-        let token_len = token.len;\n-        let token_text = &text[TextRange::at(offset, token.len)];\n-        offset += token.len;\n-        writeln!(acc, \"{:?} {:?} {:?}\", token.kind, token_len, token_text).unwrap();\n-    }\n-    for err in errors {\n-        writeln!(acc, \"> error{:?} token({:?}) msg({})\", err.range(), &text[err.range()], err)\n-            .unwrap();\n-    }\n-    acc\n-}\n-\n fn fragment_parser_dir_test<T, F>(ok_paths: &[&str], err_paths: &[&str], f: F)\n where\n     T: crate::AstNode,"}, {"sha": "135f49552be99679df79d071e12b4df181c0d042", "filename": "crates/syntax/test_data/lexer/err/0001_unclosed_char_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 1 \"'\"\n-> error0..1 token(\"'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "cc3933d9566e552d8db610da9848c54144d25624", "filename": "crates/syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 5 \"'\ud83e\udd80\"\n-> error0..5 token(\"'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "21d990e6f10f07ba2abc64515c143fd42fbbf42a", "filename": "crates/syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 5 \"'\\\\x7f\"\n-> error0..5 token(\"'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "055dba64cc679747dd24a335269ffe50cd28e9ed", "filename": "crates/syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 9 \"'\\\\u{20AA}\"\n-> error0..9 token(\"'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "9ee5e93fa431e2213c8860ecae62eb212ffaef50", "filename": "crates/syntax/test_data/lexer/err/0005_unclosed_char_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 2 \"' \"\n-> error0..2 token(\"' \") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "dc3a596f63639b5aa9c38e81f7cc992e13369a68", "filename": "crates/syntax/test_data/lexer/err/0006_unclosed_char_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 2 \"'\\\\\"\n-> error0..2 token(\"'\\\\\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "e46edea98625799bcf18fd58f42eb5bb82ab4ed7", "filename": "crates/syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 3 \"'\\\\n\"\n-> error0..3 token(\"'\\\\n\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "8ad1e913af4736dad3aaaae05ee577bf9c8ba3c0", "filename": "crates/syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-CHAR 3 \"'\\\\'\"\n-> error0..3 token(\"'\\\\'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "9d30c746699bf1a0eb3e891d0b4ad60ffe59f54d", "filename": "crates/syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 2 \"b'\"\n-> error0..2 token(\"b'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "9dbf4203e2f73c2babbe77c62e9d6af0ea88b97f", "filename": "crates/syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 6 \"b'\ud83e\udd80\"\n-> error0..6 token(\"b'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "d5d9c2ef709eb18ba3aeea309655d52a94ec9a20", "filename": "crates/syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 6 \"b'\\\\x7f\"\n-> error0..6 token(\"b'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "a99b9666a9641beda3a6834bc346150fb91138ec", "filename": "crates/syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 10 \"b'\\\\u{20AA}\"\n-> error0..10 token(\"b'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "8a344f7129631f2ba25ec430daed26fd103e898c", "filename": "crates/syntax/test_data/lexer/err/0013_unclosed_byte_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 3 \"b' \"\n-> error0..3 token(\"b' \") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "b78a43c027b85e634436d52ec9054a7402b6ec54", "filename": "crates/syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 3 \"b'\\\\\"\n-> error0..3 token(\"b'\\\\\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "5147363ba4ed90e538b06629a4836fed8333a6a7", "filename": "crates/syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 4 \"b'\\\\n\"\n-> error0..4 token(\"b'\\\\n\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "261c0894f06ca8e13d59caab5185b8952652db4d", "filename": "crates/syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE 4 \"b'\\\\'\"\n-> error0..4 token(\"b'\\\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "d11a8d880eaaac70568e15ca8b660643759ab9f0", "filename": "crates/syntax/test_data/lexer/err/0017_unclosed_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 1 \"\\\"\"\n-> error0..1 token(\"\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "167f942d12c843a3c85c8ad490d93572739e02ab", "filename": "crates/syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 5 \"\\\"\ud83e\udd80\"\n-> error0..5 token(\"\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "224c653d26dc3bcdb28b1a36d7a82e7157aa5e42", "filename": "crates/syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 5 \"\\\"\\\\x7f\"\n-> error0..5 token(\"\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "48975bbcbc47ef2102b381177a5f91e275d8e5ec", "filename": "crates/syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 9 \"\\\"\\\\u{20AA}\"\n-> error0..9 token(\"\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "a823cca7a48f1450e45aa3083c305f037832a5bc", "filename": "crates/syntax/test_data/lexer/err/0021_unclosed_string_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 2 \"\\\" \"\n-> error0..2 token(\"\\\" \") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "0914f001f5515a3eb471556d702fb7e634ed9e0a", "filename": "crates/syntax/test_data/lexer/err/0022_unclosed_string_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 2 \"\\\"\\\\\"\n-> error0..2 token(\"\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "5674b55fdfa8b57213aedd137d9edf9a1d2b2dd5", "filename": "crates/syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 3 \"\\\"\\\\n\"\n-> error0..3 token(\"\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "4c9a774e4664c114bffa9fa79554b0f5e232a43d", "filename": "crates/syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 3 \"\\\"\\\\\\\"\"\n-> error0..3 token(\"\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "04e6b0aa4f14e16523ba01df267b328125fab98a", "filename": "crates/syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 2 \"b\\\"\"\n-> error0..2 token(\"b\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "0576a0609a8bdb006072b4ea1803df7ed026722a", "filename": "crates/syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 6 \"b\\\"\ud83e\udd80\"\n-> error0..6 token(\"b\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "541a013d853a0295cd123b408e8ca959cd48332f", "filename": "crates/syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 6 \"b\\\"\\\\x7f\"\n-> error0..6 token(\"b\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "71b0fb2118ccfaf7d9a31c5f4b9b57acdba64044", "filename": "crates/syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 10 \"b\\\"\\\\u{20AA}\"\n-> error0..10 token(\"b\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "bd5058bc118b7e136d2e96afcfc393b0cb03f031", "filename": "crates/syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 3 \"b\\\" \"\n-> error0..3 token(\"b\\\" \") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "7f94f10ba150819065f67cdcc608131733b47d08", "filename": "crates/syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 3 \"b\\\"\\\\\"\n-> error0..3 token(\"b\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "9c3c089d72446ff5a684f9dffb2c628b9c11794a", "filename": "crates/syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 4 \"b\\\"\\\\n\"\n-> error0..4 token(\"b\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "884b12c8ee060898e0bb847e66c540ed60b3d4bd", "filename": "crates/syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 4 \"b\\\"\\\\\\\"\"\n-> error0..4 token(\"b\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "54e707b73674a178868d5292274516181a1eeb72", "filename": "crates/syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 4 \"r##\\\"\"\n-> error0..4 token(\"r##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "1f9889775f5e5ce73bcd642ef29a67d7d8fb3c2f", "filename": "crates/syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 8 \"r##\\\"\ud83e\udd80\"\n-> error0..8 token(\"r##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "93f6f72ae603e8c9677e2ca31423d4566ede5278", "filename": "crates/syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 8 \"r##\\\"\\\\x7f\"\n-> error0..8 token(\"r##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "1d2ebc60fdf9cdf6b7751baab387c2814aed27c7", "filename": "crates/syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 12 \"r##\\\"\\\\u{20AA}\"\n-> error0..12 token(\"r##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "c567ab7e28210306d3382f2217b708fddd0f80ed", "filename": "crates/syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 5 \"r##\\\" \"\n-> error0..5 token(\"r##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "343b20323a1785c963d0ec69046d57b50d103df3", "filename": "crates/syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 5 \"r##\\\"\\\\\"\n-> error0..5 token(\"r##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "041a42737580c6b44bfec9b77b10a09703572e89", "filename": "crates/syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 6 \"r##\\\"\\\\n\"\n-> error0..6 token(\"r##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "efaa1cafd93e4f51b210a885f7c5181ee00e367e", "filename": "crates/syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 5 \"br##\\\"\"\n-> error0..5 token(\"br##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "b6c938f94e9c3a2cc76a5cbe31caae849fa3722e", "filename": "crates/syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 9 \"br##\\\"\ud83e\udd80\"\n-> error0..9 token(\"br##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "f82efe49acc70101a1a70f84fae4ca94ff9dddf2", "filename": "crates/syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 9 \"br##\\\"\\\\x7f\"\n-> error0..9 token(\"br##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "4e4a576961a19c85b43eba7647058b1b405b71d8", "filename": "crates/syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 13 \"br##\\\"\\\\u{20AA}\"\n-> error0..13 token(\"br##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "0018c8623c2eaee4987f8a982b9484a2aafd671b", "filename": "crates/syntax/test_data/lexer/err/0044_unclosed_raw_byte_string_with_space.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 6 \"br##\\\" \"\n-> error0..6 token(\"br##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "c3ba4ae82b8a75cdb5a62df6753495f9aba8cbe2", "filename": "crates/syntax/test_data/lexer/err/0045_unclosed_raw_byte_string_with_slash.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 6 \"br##\\\"\\\\\"\n-> error0..6 token(\"br##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "7bda72276fe7679c5668a7dca65e38e5526c29c5", "filename": "crates/syntax/test_data/lexer/err/0046_unclosed_raw_byte_string_with_slash_n.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 7 \"br##\\\"\\\\n\"\n-> error0..7 token(\"br##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "ce92d2ff75b6358df3e9149c952220f4a4197c27", "filename": "crates/syntax/test_data/lexer/err/0047_unstarted_raw_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 3 \"r##\"\n-> error0..3 token(\"r##\") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)"}, {"sha": "a75d9030c4dbd5609a7bb51cb74e97f0395af84d", "filename": "crates/syntax/test_data/lexer/err/0048_unstarted_raw_byte_string_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-BYTE_STRING 4 \"br##\"\n-> error0..4 token(\"br##\") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)"}, {"sha": "516e0b78ed03f6de4e44442c1dff4c483d3576ba", "filename": "crates/syntax/test_data/lexer/err/0049_unstarted_raw_string_with_ascii.txt", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,10 +0,0 @@\n-STRING 4 \"r## \"\n-IDENT 1 \"I\"\n-WHITESPACE 1 \" \"\n-IDENT 4 \"lack\"\n-WHITESPACE 1 \" \"\n-IDENT 1 \"a\"\n-WHITESPACE 1 \" \"\n-IDENT 5 \"quote\"\n-BANG 1 \"!\"\n-> error0..4 token(\"r## \") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)"}, {"sha": "2f8a6f5f29fd7b3c481d2db2154e3a303527e128", "filename": "crates/syntax/test_data/lexer/err/0050_unstarted_raw_byte_string_with_ascii.txt", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,10 +0,0 @@\n-BYTE_STRING 5 \"br## \"\n-IDENT 1 \"I\"\n-WHITESPACE 1 \" \"\n-IDENT 4 \"lack\"\n-WHITESPACE 1 \" \"\n-IDENT 1 \"a\"\n-WHITESPACE 1 \" \"\n-IDENT 5 \"quote\"\n-BANG 1 \"!\"\n-> error0..5 token(\"br## \") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)"}, {"sha": "2a256e9dffd9091bcca3940edb5f7fbb2d745a8f", "filename": "crates/syntax/test_data/lexer/err/0051_unclosed_block_comment_at_eof.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-COMMENT 2 \"/*\"\n-> error0..2 token(\"/*\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "8e8490302a5c39711f04fe1bdd24163caa896a5f", "filename": "crates/syntax/test_data/lexer/err/0052_unclosed_block_comment_with_content.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-COMMENT 11 \"/* comment\\n\"\n-> error0..11 token(\"/* comment\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "b7d28fc05d58171b4ea9f6f1dc5eb58931bc58f0", "filename": "crates/syntax/test_data/lexer/err/0053_unclosed_nested_block_comment_entirely.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-COMMENT 9 \"/* /* /*\\n\"\n-> error0..9 token(\"/* /* /*\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "4742d2c12ca700350849351f6025f4572ef1dddf", "filename": "crates/syntax/test_data/lexer/err/0054_unclosed_nested_block_comment_partially.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-COMMENT 25 \"/** /*! /* comment */ */\\n\"\n-> error0..25 token(\"/** /*! /* comment */ */\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "bcd094b6ef7d162abed7a1d147170bfb24b4c1c5", "filename": "crates/syntax/test_data/lexer/err/0055_empty_int.txt", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,39 +0,0 @@\n-INT_NUMBER 2 \"0b\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"0o\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"0x\"\n-WHITESPACE 2 \"\\n\\n\"\n-INT_NUMBER 3 \"0b_\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 3 \"0o_\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 3 \"0x_\"\n-WHITESPACE 2 \"\\n\\n\"\n-INT_NUMBER 9 \"0bnoDigit\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 9 \"0onoDigit\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 9 \"0xnoDigit\"\n-WHITESPACE 2 \"\\n\\n\"\n-INT_NUMBER 3 \"0xG\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 3 \"0xg\"\n-WHITESPACE 2 \"\\n\\n\"\n-INT_NUMBER 4 \"0x_g\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 4 \"0x_G\"\n-WHITESPACE 1 \"\\n\"\n-> error0..2 token(\"0b\") msg(Missing digits after the integer base prefix)\n-> error3..5 token(\"0o\") msg(Missing digits after the integer base prefix)\n-> error6..8 token(\"0x\") msg(Missing digits after the integer base prefix)\n-> error10..13 token(\"0b_\") msg(Missing digits after the integer base prefix)\n-> error14..17 token(\"0o_\") msg(Missing digits after the integer base prefix)\n-> error18..21 token(\"0x_\") msg(Missing digits after the integer base prefix)\n-> error23..32 token(\"0bnoDigit\") msg(Missing digits after the integer base prefix)\n-> error33..42 token(\"0onoDigit\") msg(Missing digits after the integer base prefix)\n-> error43..52 token(\"0xnoDigit\") msg(Missing digits after the integer base prefix)\n-> error54..57 token(\"0xG\") msg(Missing digits after the integer base prefix)\n-> error58..61 token(\"0xg\") msg(Missing digits after the integer base prefix)\n-> error63..67 token(\"0x_g\") msg(Missing digits after the integer base prefix)\n-> error68..72 token(\"0x_G\") msg(Missing digits after the integer base prefix)"}, {"sha": "6a645a6a44cb0a9b5aede9dd135cbb6d1c94d8d5", "filename": "crates/syntax/test_data/lexer/err/0056_empty_exponent.txt", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,62 +0,0 @@\n-FLOAT_NUMBER 2 \"0e\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 2 \"0E\"\n-WHITESPACE 2 \"\\n\\n\"\n-FLOAT_NUMBER 4 \"42e+\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 4 \"42e-\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 4 \"42E+\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 4 \"42E-\"\n-WHITESPACE 2 \"\\n\\n\"\n-INT_NUMBER 2 \"42\"\n-DOT 1 \".\"\n-IDENT 1 \"e\"\n-PLUS 1 \"+\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"42\"\n-DOT 1 \".\"\n-IDENT 1 \"e\"\n-MINUS 1 \"-\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"42\"\n-DOT 1 \".\"\n-IDENT 1 \"E\"\n-PLUS 1 \"+\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"42\"\n-DOT 1 \".\"\n-IDENT 1 \"E\"\n-MINUS 1 \"-\"\n-WHITESPACE 2 \"\\n\\n\"\n-FLOAT_NUMBER 6 \"42.2e+\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 6 \"42.2e-\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 6 \"42.2E+\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 6 \"42.2E-\"\n-WHITESPACE 2 \"\\n\\n\"\n-FLOAT_NUMBER 9 \"42.2e+f32\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 9 \"42.2e-f32\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 9 \"42.2E+f32\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 9 \"42.2E-f32\"\n-WHITESPACE 1 \"\\n\"\n-> error0..2 token(\"0e\") msg(Missing digits after the exponent symbol)\n-> error3..5 token(\"0E\") msg(Missing digits after the exponent symbol)\n-> error7..11 token(\"42e+\") msg(Missing digits after the exponent symbol)\n-> error12..16 token(\"42e-\") msg(Missing digits after the exponent symbol)\n-> error17..21 token(\"42E+\") msg(Missing digits after the exponent symbol)\n-> error22..26 token(\"42E-\") msg(Missing digits after the exponent symbol)\n-> error53..59 token(\"42.2e+\") msg(Missing digits after the exponent symbol)\n-> error60..66 token(\"42.2e-\") msg(Missing digits after the exponent symbol)\n-> error67..73 token(\"42.2E+\") msg(Missing digits after the exponent symbol)\n-> error74..80 token(\"42.2E-\") msg(Missing digits after the exponent symbol)\n-> error82..91 token(\"42.2e+f32\") msg(Missing digits after the exponent symbol)\n-> error92..101 token(\"42.2e-f32\") msg(Missing digits after the exponent symbol)\n-> error102..111 token(\"42.2E+f32\") msg(Missing digits after the exponent symbol)\n-> error112..121 token(\"42.2E-f32\") msg(Missing digits after the exponent symbol)"}, {"sha": "b746404d226800be3cfbc18e3867350805c00218", "filename": "crates/syntax/test_data/lexer/err/0057_lifetime_starts_with_a_number.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,6 +0,0 @@\n-LIFETIME_IDENT 2 \"'1\"\n-WHITESPACE 1 \"\\n\"\n-LIFETIME_IDENT 10 \"'1lifetime\"\n-WHITESPACE 1 \"\\n\"\n-> error0..2 token(\"'1\") msg(Lifetime name cannot start with a number)\n-> error3..13 token(\"'1lifetime\") msg(Lifetime name cannot start with a number)"}, {"sha": "27a5940a9c1ca360e1e87ce4fb3c507cba120f70", "filename": "crates/syntax/test_data/lexer/ok/0001_hello.txt", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0001_hello.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0001_hello.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0001_hello.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,3 +0,0 @@\n-IDENT 5 \"hello\"\n-WHITESPACE 1 \" \"\n-IDENT 5 \"world\""}, {"sha": "01d260918ee57db94ad80f55696e70f6765e32fd", "filename": "crates/syntax/test_data/lexer/ok/0002_whitespace.txt", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0002_whitespace.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0002_whitespace.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0002_whitespace.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,12 +0,0 @@\n-IDENT 1 \"a\"\n-WHITESPACE 1 \" \"\n-IDENT 1 \"b\"\n-WHITESPACE 2 \"  \"\n-IDENT 1 \"c\"\n-WHITESPACE 1 \"\\n\"\n-IDENT 1 \"d\"\n-WHITESPACE 2 \"\\n\\n\"\n-IDENT 1 \"e\"\n-WHITESPACE 1 \"\\t\"\n-IDENT 1 \"f\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "4a0d5c0531205ef09d698894d4874629bc5b750f", "filename": "crates/syntax/test_data/lexer/ok/0003_ident.txt", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0003_ident.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0003_ident.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0003_ident.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,14 +0,0 @@\n-IDENT 3 \"foo\"\n-WHITESPACE 1 \" \"\n-IDENT 4 \"foo_\"\n-WHITESPACE 1 \" \"\n-IDENT 4 \"_foo\"\n-WHITESPACE 1 \" \"\n-UNDERSCORE 1 \"_\"\n-WHITESPACE 1 \" \"\n-IDENT 2 \"__\"\n-WHITESPACE 1 \" \"\n-IDENT 1 \"x\"\n-WHITESPACE 1 \" \"\n-IDENT 12 \"\u043f\u0440\u0438\u0432\u0435\u0442\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "e19fc5789e355026cbf945ea0c88abc89fc4fb24", "filename": "crates/syntax/test_data/lexer/ok/0004_numbers.txt", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0004_numbers.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0004_numbers.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0004_numbers.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,57 +0,0 @@\n-INT_NUMBER 1 \"0\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 2 \"00\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 2 \"0_\"\n-WHITESPACE 1 \" \"\n-FLOAT_NUMBER 2 \"0.\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 2 \"0z\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 5 \"01790\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"0b1790\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"0o1790\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 18 \"0x1790aAbBcCdDeEfF\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"001279\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"0_1279\"\n-WHITESPACE 1 \" \"\n-FLOAT_NUMBER 6 \"0.1279\"\n-WHITESPACE 1 \" \"\n-FLOAT_NUMBER 6 \"0e1279\"\n-WHITESPACE 1 \" \"\n-FLOAT_NUMBER 6 \"0E1279\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 1 \"0\"\n-DOT 1 \".\"\n-DOT 1 \".\"\n-INT_NUMBER 1 \"2\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 1 \"0\"\n-DOT 1 \".\"\n-IDENT 3 \"foo\"\n-L_PAREN 1 \"(\"\n-R_PAREN 1 \")\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 4 \"0e+1\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 1 \"0\"\n-DOT 1 \".\"\n-IDENT 1 \"e\"\n-PLUS 1 \"+\"\n-INT_NUMBER 1 \"1\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 6 \"0.0E-2\"\n-WHITESPACE 1 \"\\n\"\n-FLOAT_NUMBER 26 \"0___0.10000____0000e+111__\"\n-WHITESPACE 1 \"\\n\"\n-INT_NUMBER 4 \"1i64\"\n-WHITESPACE 1 \" \"\n-FLOAT_NUMBER 7 \"92.0f32\"\n-WHITESPACE 1 \" \"\n-INT_NUMBER 5 \"11__s\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "2049c2f1d664981fc287c4bd759401fc8d1a8176", "filename": "crates/syntax/test_data/lexer/ok/0005_symbols.txt", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0005_symbols.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0005_symbols.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0005_symbols.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,77 +0,0 @@\n-SEMICOLON 1 \";\"\n-WHITESPACE 1 \" \"\n-COMMA 1 \",\"\n-WHITESPACE 1 \" \"\n-L_PAREN 1 \"(\"\n-WHITESPACE 1 \" \"\n-R_PAREN 1 \")\"\n-WHITESPACE 1 \" \"\n-L_CURLY 1 \"{\"\n-WHITESPACE 1 \" \"\n-R_CURLY 1 \"}\"\n-WHITESPACE 1 \" \"\n-L_BRACK 1 \"[\"\n-WHITESPACE 1 \" \"\n-R_BRACK 1 \"]\"\n-WHITESPACE 1 \" \"\n-L_ANGLE 1 \"<\"\n-WHITESPACE 1 \" \"\n-R_ANGLE 1 \">\"\n-WHITESPACE 1 \" \"\n-AT 1 \"@\"\n-WHITESPACE 1 \" \"\n-POUND 1 \"#\"\n-WHITESPACE 1 \" \"\n-TILDE 1 \"~\"\n-WHITESPACE 1 \" \"\n-QUESTION 1 \"?\"\n-WHITESPACE 1 \" \"\n-DOLLAR 1 \"$\"\n-WHITESPACE 1 \" \"\n-AMP 1 \"&\"\n-WHITESPACE 1 \" \"\n-PIPE 1 \"|\"\n-WHITESPACE 1 \" \"\n-PLUS 1 \"+\"\n-WHITESPACE 1 \" \"\n-STAR 1 \"*\"\n-WHITESPACE 1 \" \"\n-SLASH 1 \"/\"\n-WHITESPACE 1 \" \"\n-CARET 1 \"^\"\n-WHITESPACE 1 \" \"\n-PERCENT 1 \"%\"\n-WHITESPACE 1 \"\\n\"\n-DOT 1 \".\"\n-WHITESPACE 1 \" \"\n-DOT 1 \".\"\n-DOT 1 \".\"\n-WHITESPACE 1 \" \"\n-DOT 1 \".\"\n-DOT 1 \".\"\n-DOT 1 \".\"\n-WHITESPACE 1 \" \"\n-DOT 1 \".\"\n-DOT 1 \".\"\n-EQ 1 \"=\"\n-WHITESPACE 1 \"\\n\"\n-COLON 1 \":\"\n-WHITESPACE 1 \" \"\n-COLON 1 \":\"\n-COLON 1 \":\"\n-WHITESPACE 1 \"\\n\"\n-EQ 1 \"=\"\n-WHITESPACE 1 \" \"\n-EQ 1 \"=\"\n-R_ANGLE 1 \">\"\n-WHITESPACE 1 \"\\n\"\n-BANG 1 \"!\"\n-WHITESPACE 1 \" \"\n-BANG 1 \"!\"\n-EQ 1 \"=\"\n-WHITESPACE 1 \"\\n\"\n-MINUS 1 \"-\"\n-WHITESPACE 1 \" \"\n-MINUS 1 \"-\"\n-R_ANGLE 1 \">\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "756477dc919e021a00e3265e7c9e18a11b8e5fd7", "filename": "crates/syntax/test_data/lexer/ok/0006_chars.txt", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,16 +0,0 @@\n-CHAR 3 \"'x'\"\n-WHITESPACE 1 \" \"\n-CHAR 3 \"' '\"\n-WHITESPACE 1 \" \"\n-CHAR 3 \"'0'\"\n-WHITESPACE 1 \" \"\n-CHAR 7 \"'hello'\"\n-WHITESPACE 1 \" \"\n-CHAR 6 \"'\\\\x7f'\"\n-WHITESPACE 1 \" \"\n-CHAR 4 \"'\\\\n'\"\n-WHITESPACE 1 \" \"\n-CHAR 4 \"'\\\\\\\\'\"\n-WHITESPACE 1 \" \"\n-CHAR 4 \"'\\\\''\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "32ed9ed506b6b435d45d5e212f1c15ab95c5133a", "filename": "crates/syntax/test_data/lexer/ok/0007_lifetimes.txt", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,8 +0,0 @@\n-LIFETIME_IDENT 2 \"'a\"\n-WHITESPACE 1 \" \"\n-LIFETIME_IDENT 4 \"'foo\"\n-WHITESPACE 1 \" \"\n-LIFETIME_IDENT 12 \"'foo_bar_baz\"\n-WHITESPACE 1 \" \"\n-LIFETIME_IDENT 2 \"'_\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "06d6bdd1f9fdb4075ecf0ac9fdd1f7136dad33fd", "filename": "crates/syntax/test_data/lexer/ok/0008_byte_strings.txt", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,22 +0,0 @@\n-BYTE 3 \"b''\"\n-WHITESPACE 1 \" \"\n-BYTE 4 \"b'x'\"\n-WHITESPACE 1 \" \"\n-BYTE_STRING 6 \"b\\\"foo\\\"\"\n-WHITESPACE 1 \" \"\n-BYTE_STRING 4 \"br\\\"\\\"\"\n-WHITESPACE 1 \"\\n\"\n-BYTE 6 \"b''suf\"\n-WHITESPACE 1 \" \"\n-BYTE_STRING 5 \"b\\\"\\\"ix\"\n-WHITESPACE 1 \" \"\n-BYTE_STRING 6 \"br\\\"\\\"br\"\n-WHITESPACE 1 \"\\n\"\n-BYTE 5 \"b'\\\\n'\"\n-WHITESPACE 1 \" \"\n-BYTE 5 \"b'\\\\\\\\'\"\n-WHITESPACE 1 \" \"\n-BYTE 5 \"b'\\\\''\"\n-WHITESPACE 1 \" \"\n-BYTE 8 \"b'hello'\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "988a8877bd7265ec691ba6fb1e000c46d46dfaf5", "filename": "crates/syntax/test_data/lexer/ok/0009_strings.txt", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0009_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0009_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0009_strings.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,8 +0,0 @@\n-STRING 7 \"\\\"hello\\\"\"\n-WHITESPACE 1 \" \"\n-STRING 8 \"r\\\"world\\\"\"\n-WHITESPACE 1 \" \"\n-STRING 17 \"\\\"\\\\n\\\\\\\"\\\\\\\\no escape\\\"\"\n-WHITESPACE 1 \" \"\n-STRING 12 \"\\\"multi\\nline\\\"\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "98a3818c06c91567ee143790fcfd01cb311472e4", "filename": "crates/syntax/test_data/lexer/ok/0010_single_line_comments.txt", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0010_single_line_comments.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0010_single_line_comments.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0010_single_line_comments.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,22 +0,0 @@\n-SHEBANG 19 \"#!/usr/bin/env bash\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 8 \"// hello\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 9 \"//! World\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 19 \"//!! Inner line doc\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 18 \"/// Outer line doc\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 19 \"//// Just a comment\"\n-WHITESPACE 2 \"\\n\\n\"\n-COMMENT 2 \"//\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 3 \"//!\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 4 \"//!!\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 3 \"///\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 4 \"////\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "22c00eefb62bd818bc9c99029b999064d33f6224", "filename": "crates/syntax/test_data/lexer/ok/0011_keywords.txt", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0011_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0011_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0011_keywords.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,64 +0,0 @@\n-ASYNC_KW 5 \"async\"\n-WHITESPACE 1 \" \"\n-FN_KW 2 \"fn\"\n-WHITESPACE 1 \" \"\n-USE_KW 3 \"use\"\n-WHITESPACE 1 \" \"\n-STRUCT_KW 6 \"struct\"\n-WHITESPACE 1 \" \"\n-TRAIT_KW 5 \"trait\"\n-WHITESPACE 1 \" \"\n-ENUM_KW 4 \"enum\"\n-WHITESPACE 1 \" \"\n-IMPL_KW 4 \"impl\"\n-WHITESPACE 1 \" \"\n-TRUE_KW 4 \"true\"\n-WHITESPACE 1 \" \"\n-FALSE_KW 5 \"false\"\n-WHITESPACE 1 \" \"\n-AS_KW 2 \"as\"\n-WHITESPACE 1 \" \"\n-EXTERN_KW 6 \"extern\"\n-WHITESPACE 1 \" \"\n-CRATE_KW 5 \"crate\"\n-WHITESPACE 1 \"\\n\"\n-MOD_KW 3 \"mod\"\n-WHITESPACE 1 \" \"\n-PUB_KW 3 \"pub\"\n-WHITESPACE 1 \" \"\n-SELF_KW 4 \"self\"\n-WHITESPACE 1 \" \"\n-SUPER_KW 5 \"super\"\n-WHITESPACE 1 \" \"\n-IN_KW 2 \"in\"\n-WHITESPACE 1 \" \"\n-WHERE_KW 5 \"where\"\n-WHITESPACE 1 \" \"\n-FOR_KW 3 \"for\"\n-WHITESPACE 1 \" \"\n-LOOP_KW 4 \"loop\"\n-WHITESPACE 1 \" \"\n-WHILE_KW 5 \"while\"\n-WHITESPACE 1 \" \"\n-IF_KW 2 \"if\"\n-WHITESPACE 1 \" \"\n-MATCH_KW 5 \"match\"\n-WHITESPACE 1 \" \"\n-CONST_KW 5 \"const\"\n-WHITESPACE 1 \"\\n\"\n-STATIC_KW 6 \"static\"\n-WHITESPACE 1 \" \"\n-MUT_KW 3 \"mut\"\n-WHITESPACE 1 \" \"\n-TYPE_KW 4 \"type\"\n-WHITESPACE 1 \" \"\n-REF_KW 3 \"ref\"\n-WHITESPACE 1 \" \"\n-LET_KW 3 \"let\"\n-WHITESPACE 1 \" \"\n-ELSE_KW 4 \"else\"\n-WHITESPACE 1 \" \"\n-MOVE_KW 4 \"move\"\n-WHITESPACE 1 \" \"\n-RETURN_KW 6 \"return\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "2618e287e637c14c6fdf26efeda77a355e4f7a2b", "filename": "crates/syntax/test_data/lexer/ok/0012_block_comment.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0012_block_comment.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0012_block_comment.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0012_block_comment.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,6 +0,0 @@\n-COMMENT 5 \"/* */\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 4 \"/**/\"\n-WHITESPACE 1 \"\\n\"\n-COMMENT 11 \"/* /* */ */\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "db0d5ffd1435fc56f2bef058bfb909cd8d6b8a24", "filename": "crates/syntax/test_data/lexer/ok/0013_raw_strings.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0013_raw_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0013_raw_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0013_raw_strings.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-STRING 36 \"r###\\\"this is a r##\\\"raw\\\"## string\\\"###\"\n-WHITESPACE 1 \"\\n\""}, {"sha": "484689693baf1250f49be3154018e1e1bb78771f", "filename": "crates/syntax/test_data/lexer/ok/0014_raw_ident.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0014_raw_ident.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f28b49759de5629a39536be0f14a55423da3e43/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0014_raw_ident.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0014_raw_ident.txt?ref=7f28b49759de5629a39536be0f14a55423da3e43", "patch": "@@ -1,2 +0,0 @@\n-IDENT 11 \"r#raw_ident\"\n-WHITESPACE 1 \"\\n\""}]}