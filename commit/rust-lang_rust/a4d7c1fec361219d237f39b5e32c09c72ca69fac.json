{"sha": "a4d7c1fec361219d237f39b5e32c09c72ca69fac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZDdjMWZlYzM2MTIxOWQyMzdmMzliNWUzMmMwOWM3MmNhNjlmYWM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-04T16:06:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-04T16:06:35Z"}, "message": "push `borrowck` into its own task", "tree": {"sha": "c44a9efe7d72fd2eaf54ec74297d858d771f31a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c44a9efe7d72fd2eaf54ec74297d858d771f31a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4d7c1fec361219d237f39b5e32c09c72ca69fac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4d7c1fec361219d237f39b5e32c09c72ca69fac", "html_url": "https://github.com/rust-lang/rust/commit/a4d7c1fec361219d237f39b5e32c09c72ca69fac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4d7c1fec361219d237f39b5e32c09c72ca69fac/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a4fad6f787869bc3ae96e02082938e0a6dbef9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a4fad6f787869bc3ae96e02082938e0a6dbef9", "html_url": "https://github.com/rust-lang/rust/commit/a2a4fad6f787869bc3ae96e02082938e0a6dbef9"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "cfafec00ae20def83507206f4855bc71b0a4cc53", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=a4d7c1fec361219d237f39b5e32c09c72ca69fac", "patch": "@@ -442,6 +442,27 @@ impl<'hir> Map<'hir> {\n         self.local_def_id(self.body_owner(id))\n     }\n \n+    /// Given a body owner's id, returns the `BodyId` associated with it.\n+    pub fn body_owned_by(&self, id: NodeId) -> BodyId {\n+        if let Some(entry) = self.find_entry(id) {\n+            if let Some(body_id) = entry.associated_body() {\n+                // For item-like things and closures, the associated\n+                // body has its own distinct id, and that is returned\n+                // by `associated_body`.\n+                body_id\n+            } else {\n+                // For some expressions, the expression is its own body.\n+                if let EntryExpr(_, expr) = entry {\n+                    BodyId { node_id: expr.id }\n+                } else {\n+                    span_bug!(self.span(id), \"id `{}` has no associated body\", id);\n+                }\n+            }\n+        } else {\n+            bug!(\"no entry for id `{}`\", id)\n+        }\n+    }\n+\n     pub fn ty_param_owner(&self, id: NodeId) -> NodeId {\n         match self.get(id) {\n             NodeItem(&Item { node: ItemTrait(..), .. }) => id,"}, {"sha": "219dbc4998e04343277bcbc6377bd45af72da3df", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=a4d7c1fec361219d237f39b5e32c09c72ca69fac", "patch": "@@ -423,6 +423,8 @@ define_maps! { <'tcx>\n \n     pub coherent_trait: coherent_trait_dep_node((CrateNum, DefId)) -> (),\n \n+    pub borrowck: BorrowCheck(DefId) -> (),\n+\n     /// Gets a complete map from all types to their inherent impls.\n     /// Not meant to be used directly outside of coherence.\n     /// (Defined only for LOCAL_CRATE)"}, {"sha": "e0b4a23010d2f7391e2484633aaed4686d5d8665", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=a4d7c1fec361219d237f39b5e32c09c72ca69fac", "patch": "@@ -22,7 +22,6 @@ pub use self::mir::elaborate_drops::ElaborateDrops;\n \n use self::InteriorKind::*;\n \n-use rustc::dep_graph::DepNode;\n use rustc::hir::map as hir_map;\n use rustc::hir::map::blocks::FnLikeNode;\n use rustc::cfg;\n@@ -37,12 +36,13 @@ use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::mem_categorization::ImmutabilityBlame;\n use rustc::middle::region;\n use rustc::ty::{self, TyCtxt};\n+use rustc::ty::maps::Providers;\n \n use std::fmt;\n use std::rc::Rc;\n use std::hash::{Hash, Hasher};\n use syntax::ast;\n-use syntax_pos::{MultiSpan, Span};\n+use syntax_pos::{DUMMY_SP, MultiSpan, Span};\n use errors::DiagnosticBuilder;\n \n use rustc::hir;\n@@ -62,16 +62,16 @@ pub struct LoanDataFlowOperator;\n pub type LoanDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, LoanDataFlowOperator>;\n \n pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n-    tcx.dep_graph.with_task(DepNode::BorrowCheckKrate, tcx, (), check_crate_task);\n-\n-    fn check_crate_task<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, (): ()) {\n-        tcx.visit_all_bodies_in_krate(|body_owner_def_id, body_id| {\n-            tcx.dep_graph.with_task(DepNode::BorrowCheck(body_owner_def_id),\n-                                    tcx,\n-                                    body_id,\n-                                    borrowck_fn);\n-        });\n-    }\n+    tcx.visit_all_bodies_in_krate(|body_owner_def_id, _body_id| {\n+        ty::queries::borrowck::get(tcx, DUMMY_SP, body_owner_def_id);\n+    });\n+}\n+\n+pub fn provide(providers: &mut Providers) {\n+    *providers = Providers {\n+        borrowck: borrowck,\n+        ..*providers\n+    };\n }\n \n /// Collection of conclusions determined via borrow checker analyses.\n@@ -81,11 +81,11 @@ pub struct AnalysisData<'a, 'tcx: 'a> {\n     pub move_data: move_data::FlowedMoveData<'a, 'tcx>,\n }\n \n-fn borrowck_fn<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, body_id: hir::BodyId) {\n-    debug!(\"borrowck_fn(body_id={:?})\", body_id);\n+fn borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, owner_def_id: DefId) {\n+    debug!(\"borrowck(body_owner_def_id={:?})\", owner_def_id);\n \n-    let owner_id = tcx.hir.body_owner(body_id);\n-    let owner_def_id = tcx.hir.local_def_id(owner_id);\n+    let owner_id = tcx.hir.as_local_node_id(owner_def_id).unwrap();\n+    let body_id = tcx.hir.body_owned_by(owner_id);\n     let attributes = tcx.get_attrs(owner_def_id);\n     let tables = tcx.item_tables(owner_def_id);\n "}, {"sha": "a1d3357faf56684931ee9e2899c59e93bb665555", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=a4d7c1fec361219d237f39b5e32c09c72ca69fac", "patch": "@@ -51,4 +51,6 @@ mod borrowck;\n \n pub mod graphviz;\n \n+pub use borrowck::provide;\n+\n __build_diagnostic_array! { librustc_borrowck, DIAGNOSTICS }"}, {"sha": "13486d898cff30cea432e667d35a5ceebe07ad44", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7c1fec361219d237f39b5e32c09c72ca69fac/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=a4d7c1fec361219d237f39b5e32c09c72ca69fac", "patch": "@@ -887,6 +887,7 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n     let mut local_providers = ty::maps::Providers::default();\n     mir::provide(&mut local_providers);\n     rustc_privacy::provide(&mut local_providers);\n+    borrowck::provide(&mut local_providers);\n     typeck::provide(&mut local_providers);\n     ty::provide(&mut local_providers);\n "}]}