{"sha": "073a1abff28c01a541d96a5c7b1bbc5c9c9d0401", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3M2ExYWJmZjI4YzAxYTU0MWQ5NmE1YzdiMWJiYzVjOWM5ZDA0MDE=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-09-13T02:10:10Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-10-03T07:39:56Z"}, "message": "Report trait/impl sig inconsistency before method/body inconsistency\n\nCloses #15657.", "tree": {"sha": "adf2e430059b36af6809c21415e83107230fc996", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf2e430059b36af6809c21415e83107230fc996"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401", "html_url": "https://github.com/rust-lang/rust/commit/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "042cdeefc7708291057770ddd5becf14288dad71", "url": "https://api.github.com/repos/rust-lang/rust/commits/042cdeefc7708291057770ddd5becf14288dad71", "html_url": "https://github.com/rust-lang/rust/commit/042cdeefc7708291057770ddd5becf14288dad71"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "ca5d711d360ab509f0689c9ce180ccec6420aef1", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/073a1abff28c01a541d96a5c7b1bbc5c9c9d0401/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=073a1abff28c01a541d96a5c7b1bbc5c9c9d0401", "patch": "@@ -693,16 +693,6 @@ pub fn check_item(ccx: &CrateCtxt, it: &ast::Item) {\n         debug!(\"ItemImpl {} with id {}\", token::get_ident(it.ident), it.id);\n \n         let impl_pty = ty::lookup_item_type(ccx.tcx, ast_util::local_def(it.id));\n-        for impl_item in impl_items.iter() {\n-            match *impl_item {\n-                ast::MethodImplItem(ref m) => {\n-                    check_method_body(ccx, &impl_pty.generics, &**m);\n-                }\n-                ast::TypeImplItem(_) => {\n-                    // Nothing to do here.\n-                }\n-            }\n-        }\n \n         match *opt_trait_ref {\n             Some(ref ast_trait_ref) => {\n@@ -717,6 +707,17 @@ pub fn check_item(ccx: &CrateCtxt, it: &ast::Item) {\n             None => { }\n         }\n \n+        for impl_item in impl_items.iter() {\n+            match *impl_item {\n+                ast::MethodImplItem(ref m) => {\n+                    check_method_body(ccx, &impl_pty.generics, &**m);\n+                }\n+                ast::TypeImplItem(_) => {\n+                    // Nothing to do here.\n+                }\n+            }\n+        }\n+\n       }\n       ast::ItemTrait(_, _, _, ref trait_methods) => {\n         let trait_def = ty::lookup_trait_def(ccx.tcx, local_def(it.id));"}]}