{"sha": "1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYzdhNjk3MzI4ZmIxMGU3MTM1Yjg3NTU3ZmYwYTVlYTcwMmRkOGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-16T16:44:05Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-16T18:13:38Z"}, "message": "std: Add an unstable method Child::id\n\nThis commits adds a method to the `std::process` module to get the process\nidentifier of the child as a `u32`. On Windows the underlying identifier is\nalready a `u32`, and on Unix the type is typically defined as `c_int` (`i32` for\nalmost all our supported platforms), but the actually pid is normally a small\npositive number.\n\nEventually we may add functions to load information about a process based on its\nidentifier or the ability to terminate a process based on its identifier, but\nfor now this function should enable this sort of functionality to exist outside\nthe standard library.", "tree": {"sha": "c781f67fddaa59b5c6778b51acdaa8c85e6c69d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c781f67fddaa59b5c6778b51acdaa8c85e6c69d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "html_url": "https://github.com/rust-lang/rust/commit/1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e535eae5c4b70879aefc050a5fe0b8137c07eac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e535eae5c4b70879aefc050a5fe0b8137c07eac", "html_url": "https://github.com/rust-lang/rust/commit/5e535eae5c4b70879aefc050a5fe0b8137c07eac"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "ae9316ddd622b1d3a6fb90a1623cefd89fc49a35", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "patch": "@@ -456,6 +456,12 @@ impl Child {\n         unsafe { self.handle.kill() }\n     }\n \n+    /// Returns the OS-assigned process identifier associated with this child.\n+    #[unstable(feature = \"process_id\", reason = \"api recently added\")]\n+    pub fn id(&self) -> u32 {\n+        self.handle.id()\n+    }\n+\n     /// Waits for the child to exit completely, returning the status that it\n     /// exited with. This function will continue to have the same return value\n     /// after it has been called at least once."}, {"sha": "f4bc597304097c85b91ca0d17a807e042da92391", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "patch": "@@ -315,6 +315,10 @@ impl Process {\n         fail(&mut output)\n     }\n \n+    pub fn id(&self) -> u32 {\n+        self.pid as u32\n+    }\n+\n     pub fn wait(&self) -> io::Result<ExitStatus> {\n         let mut status = 0 as c_int;\n         try!(cvt_r(|| unsafe { c::waitpid(self.pid, &mut status, 0) }));"}, {"sha": "e9b850856e1f86c79b4af6d139c833bb6aa2d913", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "patch": "@@ -482,6 +482,7 @@ extern \"system\" {\n                                dwMilliseconds: libc::DWORD) -> libc::DWORD;\n     pub fn SwitchToThread() -> libc::BOOL;\n     pub fn Sleep(dwMilliseconds: libc::DWORD);\n+    pub fn GetProcessId(handle: libc::HANDLE) -> libc::DWORD;\n }\n \n #[link(name = \"userenv\")]"}, {"sha": "bc4762c197e1429eb3fa60133a5ade26bdcd84ba", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec7a697328fb10e7135b87557ff0a5ea702dd8d/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=1ec7a697328fb10e7135b87557ff0a5ea702dd8d", "patch": "@@ -193,6 +193,12 @@ impl Process {\n         Ok(())\n     }\n \n+    pub fn id(&self) -> u32 {\n+        unsafe {\n+            c::GetProcessId(self.handle.raw()) as u32\n+        }\n+    }\n+\n     pub fn wait(&self) -> io::Result<ExitStatus> {\n         use libc::{STILL_ACTIVE, INFINITE, WAIT_OBJECT_0};\n         use libc::{GetExitCodeProcess, WaitForSingleObject};"}]}