{"sha": "425a99f1eb233659403329fb4f117b1d39c7362c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNWE5OWYxZWIyMzM2NTk0MDMzMjlmYjRmMTE3YjFkMzljNzM2MmM=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-05-01T07:52:42Z"}, "committer": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-05-01T11:52:43Z"}, "message": "Update try_validation_pat! doc comment.", "tree": {"sha": "dd8e5fc7f793cc7a1faedef7d2245ca904942204", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd8e5fc7f793cc7a1faedef7d2245ca904942204"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/425a99f1eb233659403329fb4f117b1d39c7362c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/425a99f1eb233659403329fb4f117b1d39c7362c", "html_url": "https://github.com/rust-lang/rust/commit/425a99f1eb233659403329fb4f117b1d39c7362c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/425a99f1eb233659403329fb4f117b1d39c7362c/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb96d41fa1961974aff9405aa323779d6b3d6849", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb96d41fa1961974aff9405aa323779d6b3d6849", "html_url": "https://github.com/rust-lang/rust/commit/cb96d41fa1961974aff9405aa323779d6b3d6849"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "c64458bd9894437852275725fede97488dbf6e08", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/425a99f1eb233659403329fb4f117b1d39c7362c/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425a99f1eb233659403329fb4f117b1d39c7362c/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=425a99f1eb233659403329fb4f117b1d39c7362c", "patch": "@@ -50,11 +50,22 @@ macro_rules! try_validation {\n /// matched. Other errors are passed back to the caller, unchanged. This lets you use the patterns\n /// as a kind of validation blacklist:\n ///\n-/// ```rust\n-/// let v = try_validation_pat!(some_fn(), Foo | Bar | Baz, \"some failure\", path);\n+/// ```\n+/// let v = try_validation_pat!(some_fn(), some_path, {\n+///     Foo | Bar | Baz => { \"some failure\" },\n+/// });\n /// // Failures that match $p are thrown up as validation errors, but other errors are passed back\n /// // unchanged.\n /// ```\n+///\n+/// An additional expected parameter can also be added to the failure message:\n+///\n+/// ```\n+/// let v = try_validation_pat!(some_fn(), some_path, {\n+///     Foo | Bar | Baz => { \"some failure\" } expected { \"something that wasn't a failure\" },\n+/// });\n+/// ```\n+///\n macro_rules! try_validation_pat {\n     ($e:expr, $where:expr, { $( $p:pat )|* => { $what:tt } $( expected { $expected:expr } )? $( , )?}) => {{\n         match $e {"}]}