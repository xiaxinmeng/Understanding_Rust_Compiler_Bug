{"sha": "bfff2a50fdcf96a3a3f26a345833c083902460f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZmYyYTUwZmRjZjk2YTNhM2YyNmEzNDU4MzNjMDgzOTAyNDYwZjE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-18T19:25:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-18T19:25:05Z"}, "message": "Fix debug build", "tree": {"sha": "8ee60872915ccaf01d7af9f3cb0d3525c5822a50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ee60872915ccaf01d7af9f3cb0d3525c5822a50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfff2a50fdcf96a3a3f26a345833c083902460f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfff2a50fdcf96a3a3f26a345833c083902460f1", "html_url": "https://github.com/rust-lang/rust/commit/bfff2a50fdcf96a3a3f26a345833c083902460f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfff2a50fdcf96a3a3f26a345833c083902460f1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "html_url": "https://github.com/rust-lang/rust/commit/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f80a5d3cb8449fbeac63401bef3a0c2857f4e2e7", "filename": "src/abi/returning.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bfff2a50fdcf96a3a3f26a345833c083902460f1/src%2Fabi%2Freturning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfff2a50fdcf96a3a3f26a345833c083902460f1/src%2Fabi%2Freturning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Freturning.rs?ref=bfff2a50fdcf96a3a3f26a345833c083902460f1", "patch": "@@ -11,7 +11,8 @@ pub fn codegen_return_param(\n     start_ebb: Ebb,\n ) {\n     let ret_layout = return_layout(fx);\n-    let ret_param = match get_pass_mode(fx.tcx, ret_layout) {\n+    let ret_pass_mode = get_pass_mode(fx.tcx, ret_layout);\n+    let ret_param = match ret_pass_mode {\n         PassMode::NoPass => {\n             fx.local_map\n                 .insert(RETURN_PLACE, CPlace::no_place(ret_layout));\n@@ -40,7 +41,7 @@ pub fn codegen_return_param(\n         RETURN_PLACE,\n         None,\n         ret_param,\n-        output_pass_mode,\n+        ret_pass_mode,\n         ret_layout.ty,\n     );\n }"}]}