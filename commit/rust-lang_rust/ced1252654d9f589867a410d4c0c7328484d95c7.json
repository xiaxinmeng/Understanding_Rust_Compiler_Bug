{"sha": "ced1252654d9f589867a410d4c0c7328484d95c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZDEyNTI2NTRkOWY1ODk4NjdhNDEwZDRjMGM3MzI4NDg0ZDk1Yzc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-26T17:59:46Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-26T18:02:32Z"}, "message": "Introduce `into_inner` method on `std::io::Take`.\n\nhttps://github.com/rust-lang/rust/issues/23755", "tree": {"sha": "60ace896c30d3521390826b9e9a5e83a21123d40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60ace896c30d3521390826b9e9a5e83a21123d40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ced1252654d9f589867a410d4c0c7328484d95c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ced1252654d9f589867a410d4c0c7328484d95c7", "html_url": "https://github.com/rust-lang/rust/commit/ced1252654d9f589867a410d4c0c7328484d95c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ced1252654d9f589867a410d4c0c7328484d95c7/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "html_url": "https://github.com/rust-lang/rust/commit/eaf71f8d1034f16140791f566cab3f3c9a0bf96a"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "06609cfad152e969130324f96b552c5852a06294", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ced1252654d9f589867a410d4c0c7328484d95c7/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced1252654d9f589867a410d4c0c7328484d95c7/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=ced1252654d9f589867a410d4c0c7328484d95c7", "patch": "@@ -1501,6 +1501,33 @@ impl<T> Take<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn limit(&self) -> u64 { self.limit }\n+\n+    /// Consumes the `Take`, returning the wrapped reader.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(io_take_into_inner)]\n+    ///\n+    /// use std::io;\n+    /// use std::io::prelude::*;\n+    /// use std::fs::File;\n+    ///\n+    /// # fn foo() -> io::Result<()> {\n+    /// let mut file = try!(File::open(\"foo.txt\"));\n+    ///\n+    /// let mut buffer = [0; 5];\n+    /// let mut handle = file.take(5);\n+    /// try!(handle.read(&mut buffer));\n+    ///\n+    /// let file = handle.into_inner();\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n+    #[unstable(feature = \"io_take_into_inner\", issue = \"0\")]\n+    pub fn into_inner(self) -> T {\n+        self.inner\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}