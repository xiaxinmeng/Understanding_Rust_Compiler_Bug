{"sha": "9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmN2I2Y2JlOTY5OTAzNDhiMjllNWVmMjdkYmFhMjVmZjNjMDc1OTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-14T17:55:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-14T17:55:45Z"}, "message": "rollup merge of #24343: achanda/global_ip\n\n- Adds two more functions for broadcast address and special\n  address classes reserved for documentation\n- Modifies the globally routable IP check to include these\n  new functions\n\nFixes #24314", "tree": {"sha": "38f515693533a8071ee109b3bb5c02ab204c19f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f515693533a8071ee109b3bb5c02ab204c19f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "html_url": "https://github.com/rust-lang/rust/commit/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8ca9a6dd016779727667d6eb335ea89f36d155c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ca9a6dd016779727667d6eb335ea89f36d155c", "html_url": "https://github.com/rust-lang/rust/commit/e8ca9a6dd016779727667d6eb335ea89f36d155c"}, {"sha": "f60f4b7d7cde90edb248159cf5e351816cce8d8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60f4b7d7cde90edb248159cf5e351816cce8d8a", "html_url": "https://github.com/rust-lang/rust/commit/f60f4b7d7cde90edb248159cf5e351816cce8d8a"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "05a3ca9194851bde5f262ef6f9dff351a201b8e5", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "patch": "@@ -615,7 +615,7 @@ mod tests {\n     fn ipv4_properties() {\n         fn check(octets: &[u8; 4], unspec: bool, loopback: bool,\n                  private: bool, link_local: bool, global: bool,\n-                 multicast: bool) {\n+                 multicast: bool, broadcast: bool, documentation: bool) {\n             let ip = Ipv4Addr::new(octets[0], octets[1], octets[2], octets[3]);\n             assert_eq!(octets, &ip.octets());\n \n@@ -625,20 +625,23 @@ mod tests {\n             assert_eq!(ip.is_link_local(), link_local);\n             assert_eq!(ip.is_global(), global);\n             assert_eq!(ip.is_multicast(), multicast);\n+            assert_eq!(ip.is_broadcast(), broadcast);\n+            assert_eq!(ip.is_documentation(), documentation);\n         }\n \n-        //    address                unspec loopbk privt  linloc global multicast\n-        check(&[0, 0, 0, 0],         true,  false, false, false, true,  false);\n-        check(&[0, 0, 0, 1],         false, false, false, false, true,  false);\n-        check(&[1, 0, 0, 0],         false, false, false, false, true,  false);\n-        check(&[10, 9, 8, 7],        false, false, true,  false, false, false);\n-        check(&[127, 1, 2, 3],       false, true,  false, false, false, false);\n-        check(&[172, 31, 254, 253],  false, false, true,  false, false,  false);\n-        check(&[169, 254, 253, 242], false, false, false, true,  false, false);\n-        check(&[192, 168, 254, 253], false, false, true,  false, false, false);\n-        check(&[224, 0, 0, 0],       false, false, false, false, true,  true);\n-        check(&[239, 255, 255, 255], false, false, false, false, true,  true);\n-        check(&[255, 255, 255, 255], false, false, false, false, true,  false);\n+        //    address                unspec loopbk privt  linloc global multicast brdcast doc\n+        check(&[0, 0, 0, 0],         true,  false, false, false, true,  false,    false,  false);\n+        check(&[0, 0, 0, 1],         false, false, false, false, true,  false,    false,  false);\n+        check(&[1, 0, 0, 0],         false, false, false, false, true,  false,    false,  false);\n+        check(&[10, 9, 8, 7],        false, false, true,  false, false, false,    false,  false);\n+        check(&[127, 1, 2, 3],       false, true,  false, false, false, false,    false,  false);\n+        check(&[172, 31, 254, 253],  false, false, true,  false, false, false,    false,  false);\n+        check(&[169, 254, 253, 242], false, false, false, true,  false, false,    false,  false);\n+        check(&[192, 168, 254, 253], false, false, true,  false, false, false,    false,  false);\n+        check(&[224, 0, 0, 0],       false, false, false, false, true,  true,     false,  false);\n+        check(&[239, 255, 255, 255], false, false, false, false, true,  true,     false,  false);\n+        check(&[255, 255, 255, 255], false, false, false, false, false, false,    true,  false);\n+        check(&[198, 51, 100, 0],    false, false, false, false, false, false,    false,  true);\n     }\n \n     #[test]"}, {"sha": "a8608378e3fd3d5d4dd013db70290bb4f605d592", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7b6cbe96990348b29e5ef27dbaa25ff3c07599/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=9f7b6cbe96990348b29e5ef27dbaa25ff3c07599", "patch": "@@ -115,9 +115,11 @@ impl Ipv4Addr {\n     ///\n     /// Non-globally-routable networks include the private networks (10.0.0.0/8,\n     /// 172.16.0.0/12 and 192.168.0.0/16), the loopback network (127.0.0.0/8),\n-    /// and the link-local network (169.254.0.0/16).\n+    /// the link-local network (169.254.0.0/16), the broadcast address (255.255.255.255/32) and\n+    /// the test networks used for documentation (192.0.2.0/24, 198.51.100.0/24 and 203.0.113.0/24)\n     pub fn is_global(&self) -> bool {\n-        !self.is_private() && !self.is_loopback() && !self.is_link_local()\n+        !self.is_private() && !self.is_loopback() && !self.is_link_local() &&\n+        !self.is_broadcast() && !self.is_documentation()\n     }\n \n     /// Returns true if this is a multicast address.\n@@ -127,6 +129,29 @@ impl Ipv4Addr {\n         self.octets()[0] >= 224 && self.octets()[0] <= 239\n     }\n \n+    /// Returns true if this is a broadcast address.\n+    ///\n+    /// A broadcast address has all octets set to 255 as defined in RFC 919\n+    pub fn is_broadcast(&self) -> bool {\n+        self.octets()[0] == 255 && self.octets()[1] == 255 &&\n+        self.octets()[2] == 255 && self.octets()[3] == 255\n+    }\n+\n+    /// Returns true if this address is in a range designated for documentation\n+    ///\n+    /// This is defined in RFC 5737\n+    /// - 192.0.2.0/24 (TEST-NET-1)\n+    /// - 198.51.100.0/24 (TEST-NET-2)\n+    /// - 203.0.113.0/24 (TEST-NET-3)\n+    pub fn is_documentation(&self) -> bool {\n+        match(self.octets()[0], self.octets()[1], self.octets()[2], self.octets()[3]) {\n+            (192, _, 2, _) => true,\n+            (198, 51, 100, _) => true,\n+            (203, _, 113, _) => true,\n+            _ => false\n+        }\n+    }\n+\n     /// Convert this address to an IPv4-compatible IPv6 address\n     ///\n     /// a.b.c.d becomes ::a.b.c.d"}]}