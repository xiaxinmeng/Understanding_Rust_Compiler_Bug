{"sha": "25f02b276f9fb290318beb364c4d0c9e7079071f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZjAyYjI3NmY5ZmIyOTAzMThiZWIzNjRjNGQwYzllNzA3OTA3MWY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-13T19:37:19Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-16T18:12:01Z"}, "message": "Test Box::new(array).into_iter()", "tree": {"sha": "6f6f990b329f9e4ffc73227b3a7c324ac96d845c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f6f990b329f9e4ffc73227b3a7c324ac96d845c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25f02b276f9fb290318beb364c4d0c9e7079071f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25f02b276f9fb290318beb364c4d0c9e7079071f", "html_url": "https://github.com/rust-lang/rust/commit/25f02b276f9fb290318beb364c4d0c9e7079071f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25f02b276f9fb290318beb364c4d0c9e7079071f/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "html_url": "https://github.com/rust-lang/rust/commit/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "75e0a58039fed964351d77f0b9194e17699ec92f", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs?ref=25f02b276f9fb290318beb364c4d0c9e7079071f", "patch": "@@ -1,17 +1,22 @@\n // check-pass\n+// edition:2018\n \n use std::array::IntoIter;\n use std::slice::Iter;\n \n fn main() {\n     let array = [0; 10];\n \n-    // Before 2021, the method dispatched to `IntoIterator for &[T]`,\n+    // Before 2021, the method dispatched to `IntoIterator for &[T; N]`,\n     // which we continue to support for compatibility.\n     let _: Iter<'_, i32> = array.into_iter();\n     //~^ WARNING this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter`\n     //~| WARNING this was previously accepted by the compiler but is being phased out\n \n+    let _: Iter<'_, i32> = Box::new(array).into_iter();\n+    //~^ WARNING this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter`\n+    //~| WARNING this was previously accepted by the compiler but is being phased out\n+\n     // But you can always use the trait method explicitly as an array.\n     let _: IntoIter<i32, 10> = IntoIterator::into_iter(array);\n }"}, {"sha": "b11941fe0e1b2d3428955dfb5e90f076681222ae", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.stderr", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr?ref=25f02b276f9fb290318beb364c4d0c9e7079071f", "patch": "@@ -1,5 +1,5 @@\n warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n-  --> $DIR/into-iter-on-arrays-2018.rs:11:34\n+  --> $DIR/into-iter-on-arrays-2018.rs:12:34\n    |\n LL |     let _: Iter<'_, i32> = array.into_iter();\n    |                                  ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n@@ -8,11 +8,20 @@ LL |     let _: Iter<'_, i32> = array.into_iter();\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n \n-warning: 1 warning emitted\n+warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n+  --> $DIR/into-iter-on-arrays-2018.rs:16:44\n+   |\n+LL |     let _: Iter<'_, i32> = Box::new(array).into_iter();\n+   |                                            ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n+\n+warning: 2 warnings emitted\n \n Future incompatibility report: Future breakage date: None, diagnostic:\n warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n-  --> $DIR/into-iter-on-arrays-2018.rs:11:34\n+  --> $DIR/into-iter-on-arrays-2018.rs:12:34\n    |\n LL |     let _: Iter<'_, i32> = array.into_iter();\n    |                                  ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n@@ -21,3 +30,13 @@ LL |     let _: Iter<'_, i32> = array.into_iter();\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n \n+Future breakage date: None, diagnostic:\n+warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n+  --> $DIR/into-iter-on-arrays-2018.rs:16:44\n+   |\n+LL |     let _: Iter<'_, i32> = Box::new(array).into_iter();\n+   |                                            ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n+"}, {"sha": "1ac31b23b59bdf70fc52fabe0767baca478491ac", "filename": "src/test/ui/iterators/into-iter-on-arrays-2021.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f02b276f9fb290318beb364c4d0c9e7079071f/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs?ref=25f02b276f9fb290318beb364c4d0c9e7079071f", "patch": "@@ -9,6 +9,7 @@ fn main() {\n \n     // In 2021, the method dispatches to `IntoIterator for [T; N]`.\n     let _: IntoIter<i32, 10> = array.into_iter();\n+    let _: IntoIter<i32, 10> = Box::new(array).into_iter();\n \n     // And you can always use the trait method explicitly as an array.\n     let _: IntoIter<i32, 10> = IntoIterator::into_iter(array);"}]}