{"sha": "4d5501037a39a3c58421a02c45aec31a1d57300e", "node_id": "C_kwDOAAsO6NoAKDRkNTUwMTAzN2EzOWEzYzU4NDIxYTAyYzQ1YWVjMzFhMWQ1NzMwMGU", "commit": {"author": {"name": "Jon Gjengset", "email": "jongje@amazon.com", "date": "2023-03-24T23:29:38Z"}, "committer": {"name": "Jon Gjengset", "email": "jongje@amazon.com", "date": "2023-03-25T00:44:32Z"}, "message": "Allow long link names in tar files\n\nWithout this, users trying to run `x.py dist` under a sufficiently long\npath run into problems when we build the resulting tarballs due to\nlength limits in the original tar spec. The error looks like:\n\n        Finished release [optimized + debuginfo] target(s) in 0.34s\n    Copying stage0 std from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-musl)\n    Building stage0 tool rust-installer (x86_64-unknown-linux-gnu)\n        Finished release [optimized] target(s) in 0.35s\n    Dist rust-std-1.67.1-x86_64-unknown-linux-musl\n    Error: failed to generate installer\n\n    Caused by:\n        0: failed to tar file '/home/AAAAAAAAAAAAAA/BBBBBB/CCCC/DDD/EEEEE/FFFFFFFFFFFF/GGGGGGGGGGGGGGGG/HHHHHHHHHH/IIIIIIIIIIIIIII/JJJJJ/KKKKKKK/src/build/tmp/tarball/rust-std/x86_64-unknown-linux-musl/rust-std-1.67.1-x86_64-unknown-linux-musl/rust-std-x86_64-unknown-linux-musl/lib/rustlib/x86_64-unknown-linux-musl/lib/self-contained/libc.a'\n        1: provided value is too long when setting link name for\n    Build completed unsuccessfully in 0:00:03\n\nThe fix is to make use of the widely-supported GNU tar extensions which\nlift this restriction. Switching to [`tar::Builder::append_link`] takes\ncare of that for us. See also alexcrichton/tar-rs#273.\n\n[`tar::Builder::append_link`]: https://docs.rs/tar/0.4.38/tar/struct.Builder.html#method.append_link", "tree": {"sha": "53815b9c1ad464047974b8d4aa2b456731c0c561", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53815b9c1ad464047974b8d4aa2b456731c0c561"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d5501037a39a3c58421a02c45aec31a1d57300e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5501037a39a3c58421a02c45aec31a1d57300e", "html_url": "https://github.com/rust-lang/rust/commit/4d5501037a39a3c58421a02c45aec31a1d57300e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d5501037a39a3c58421a02c45aec31a1d57300e/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c49d95cd7d704d2226859cfdc419c930cde9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/99c49d95cd7d704d2226859cfdc419c930cde9c6", "html_url": "https://github.com/rust-lang/rust/commit/99c49d95cd7d704d2226859cfdc419c930cde9c6"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "788e556b0c645c9bf486cd156752f5a589d1380a", "filename": "src/tools/rust-installer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d5501037a39a3c58421a02c45aec31a1d57300e/src%2Ftools%2Frust-installer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4d5501037a39a3c58421a02c45aec31a1d57300e/src%2Ftools%2Frust-installer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer%2FCargo.toml?ref=4d5501037a39a3c58421a02c45aec31a1d57300e", "patch": "@@ -13,7 +13,7 @@ path = \"src/main.rs\"\n anyhow = \"1.0.19\"\n flate2 = \"1.0.1\"\n rayon = \"1.0\"\n-tar = \"0.4.13\"\n+tar = \"0.4.38\"\n walkdir = \"2\"\n xz2 = \"0.1.4\"\n num_cpus = \"1\""}, {"sha": "7353a49fe03548e6d9d034096429a24d831b5142", "filename": "src/tools/rust-installer/src/tarballer.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4d5501037a39a3c58421a02c45aec31a1d57300e/src%2Ftools%2Frust-installer%2Fsrc%2Ftarballer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d5501037a39a3c58421a02c45aec31a1d57300e/src%2Ftools%2Frust-installer%2Fsrc%2Ftarballer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer%2Fsrc%2Ftarballer.rs?ref=4d5501037a39a3c58421a02c45aec31a1d57300e", "patch": "@@ -1,6 +1,6 @@\n use anyhow::{bail, Context, Result};\n use std::fs::{read_link, symlink_metadata};\n-use std::io::{empty, BufWriter, Write};\n+use std::io::{BufWriter, Write};\n use std::path::Path;\n use tar::{Builder, Header};\n use walkdir::WalkDir;\n@@ -93,8 +93,7 @@ fn append_path<W: Write>(builder: &mut Builder<W>, src: &Path, path: &String) ->\n     header.set_metadata(&stat);\n     if stat.file_type().is_symlink() {\n         let link = read_link(src)?;\n-        header.set_link_name(&link)?;\n-        builder.append_data(&mut header, path, &mut empty())?;\n+        builder.append_link(&mut header, path, &link)?;\n     } else {\n         if cfg!(windows) {\n             // Windows doesn't really have a mode, so `tar` never marks files executable."}]}