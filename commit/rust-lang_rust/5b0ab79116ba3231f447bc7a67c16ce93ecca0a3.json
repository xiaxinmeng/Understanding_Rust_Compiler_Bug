{"sha": "5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMGFiNzkxMTZiYTMyMzFmNDQ3YmM3YTY3YzE2Y2U5M2VjY2EwYTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-04T15:34:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-04T15:34:01Z"}, "message": "Auto merge of #83451 - GuillaumeGomez:fix-error-code-tidy-check, r=Mark-Simulacrum\n\nFix error codes check run and ensure it will not go unnoticed again\n\nFixes #83268.\n\nThe error codes explanations were not checked anymore. I fixed this issue and also added variables to ensure that this won't happen again (at least not silently).", "tree": {"sha": "74f5f055453480c7eb583e98b14edffe469e8a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74f5f055453480c7eb583e98b14edffe469e8a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "html_url": "https://github.com/rust-lang/rust/commit/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1ea2618d3fef50981c566564cf234b4b98f6328", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ea2618d3fef50981c566564cf234b4b98f6328", "html_url": "https://github.com/rust-lang/rust/commit/b1ea2618d3fef50981c566564cf234b4b98f6328"}, {"sha": "a41d41cbc66b81111704a8787bf408b78de7730d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41d41cbc66b81111704a8787bf408b78de7730d", "html_url": "https://github.com/rust-lang/rust/commit/a41d41cbc66b81111704a8787bf408b78de7730d"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "55f824b63f2ebbf99c93ff622dd98fecf271aa46", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "patch": "@@ -48,6 +48,8 @@ fn check_error_code_explanation(\n }\n \n fn check_if_error_code_is_test_in_explanation(f: &str, err_code: &str) -> bool {\n+    let mut ignore_found = false;\n+\n     for line in f.lines() {\n         let s = line.trim();\n         if s.starts_with(\"#### Note: this error code is no longer emitted by the compiler\") {\n@@ -56,13 +58,13 @@ fn check_if_error_code_is_test_in_explanation(f: &str, err_code: &str) -> bool {\n         if s.starts_with(\"```\") {\n             if s.contains(\"compile_fail\") && s.contains(err_code) {\n                 return true;\n-            } else if s.contains('(') {\n+            } else if s.contains(\"ignore\") {\n                 // It's very likely that we can't actually make it fail compilation...\n-                return true;\n+                ignore_found = true;\n             }\n         }\n     }\n-    false\n+    ignore_found\n }\n \n macro_rules! some_or_continue {\n@@ -164,18 +166,32 @@ fn extract_error_codes_from_tests(f: &str, error_codes: &mut HashMap<String, boo\n     }\n }\n \n-pub fn check(path: &Path, bad: &mut bool) {\n+pub fn check(paths: &[&Path], bad: &mut bool) {\n     let mut errors = Vec::new();\n+    let mut found_explanations = 0;\n+    let mut found_tests = 0;\n     println!(\"Checking which error codes lack tests...\");\n     let mut error_codes: HashMap<String, bool> = HashMap::new();\n-    super::walk(path, &mut |path| super::filter_dirs(path), &mut |entry, contents| {\n-        let file_name = entry.file_name();\n-        if file_name == \"error_codes.rs\" {\n-            extract_error_codes(contents, &mut error_codes, entry.path(), &mut errors);\n-        } else if entry.path().extension() == Some(OsStr::new(\"stderr\")) {\n-            extract_error_codes_from_tests(contents, &mut error_codes);\n-        }\n-    });\n+    for path in paths {\n+        super::walk(path, &mut |path| super::filter_dirs(path), &mut |entry, contents| {\n+            let file_name = entry.file_name();\n+            if file_name == \"error_codes.rs\" {\n+                extract_error_codes(contents, &mut error_codes, entry.path(), &mut errors);\n+                found_explanations += 1;\n+            } else if entry.path().extension() == Some(OsStr::new(\"stderr\")) {\n+                extract_error_codes_from_tests(contents, &mut error_codes);\n+                found_tests += 1;\n+            }\n+        });\n+    }\n+    if found_explanations == 0 {\n+        eprintln!(\"No error code explanation was tested!\");\n+        *bad = true;\n+    }\n+    if found_tests == 0 {\n+        eprintln!(\"No error code was found in compilation errors!\");\n+        *bad = true;\n+    }\n     if errors.is_empty() {\n         println!(\"Found {} error codes\", error_codes.len());\n "}, {"sha": "10356a2fdc5fc3d59fe62087380c97058728bf9f", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "patch": "@@ -65,7 +65,7 @@ fn main() {\n \n         // Checks that only make sense for the compiler.\n         check!(errors, &compiler_path);\n-        check!(error_codes_check, &src_path);\n+        check!(error_codes_check, &[&src_path, &compiler_path]);\n \n         // Checks that only make sense for the std libs.\n         check!(pal, &library_path);"}]}