{"sha": "79a3f84002b67a67ef82971445468195108a2bb7", "node_id": "C_kwDOAAsO6NoAKDc5YTNmODQwMDJiNjdhNjdlZjgyOTcxNDQ1NDY4MTk1MTA4YTJiYjc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-10T07:54:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-10T07:54:55Z"}, "message": "Auto merge of #13367 - matklad:fix-problem-matchers, r=Veykril\n\nfix: in VSCode, correctly resolve relative paths to errors\n\nVS Code problem matcher are restricted to be static \"regexes\". You can't create a problem matcher dynamically, and you can't use custom code in lieu of problem matcher.\n\nThis creates a problem for rust/cargo compiler errors. They use paths relative to the root of the Cargo workspace, but VS Code doesn't necessary know where that root is.\n\nLuckily, there's a way out: our current problem matcher is defined like this:\n\n    \"fileLocation\": [ \"autoDetect\", \"${workspaceRoot}\" ],\n\nThat means that relative pahts would be resoleved relative to workspace root. VS Code allows to specify a command inside `${}`. So we can plug custom logic there to fetch Cargo's workspace root!\n\nAnd that's exactly what this PR is doing!", "tree": {"sha": "5b423518b3d3c4c467469a3c028b1cf804bd2cc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b423518b3d3c4c467469a3c028b1cf804bd2cc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a3f84002b67a67ef82971445468195108a2bb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a3f84002b67a67ef82971445468195108a2bb7", "html_url": "https://github.com/rust-lang/rust/commit/79a3f84002b67a67ef82971445468195108a2bb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a3f84002b67a67ef82971445468195108a2bb7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05a6bc48b5f590bf99fc840e8b3742c072e10216", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a6bc48b5f590bf99fc840e8b3742c072e10216", "html_url": "https://github.com/rust-lang/rust/commit/05a6bc48b5f590bf99fc840e8b3742c072e10216"}, {"sha": "5bbfea03ccada14bbaca6df6c0ef3760ac44a9a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbfea03ccada14bbaca6df6c0ef3760ac44a9a5", "html_url": "https://github.com/rust-lang/rust/commit/5bbfea03ccada14bbaca6df6c0ef3760ac44a9a5"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "ccf62d002bb5f070f86ed50c37a4feca057f1f9a", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -1301,6 +1301,15 @@\n                     \"endsPattern\": \"^\\\\[Finished running\\\\b\"\n                 },\n                 \"pattern\": \"$rustc\"\n+            },\n+            {\n+                \"name\": \"rustc-run\",\n+                \"base\": \"$rustc\",\n+                \"fileLocation\": [\n+                    \"autoDetect\",\n+                    \"${command:rust-analyzer.cargoWorkspaceRootForCurrentRun}\"\n+                ],\n+                \"pattern\": \"$rustc-run\"\n             }\n         ],\n         \"colors\": ["}, {"sha": "6b10073aa869016b9627db33856a2bb3bf75539e", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -842,6 +842,7 @@ export function run(ctx: Ctx): Cmd {\n         item.detail = \"rerun\";\n         prevRunnable = item;\n         const task = await createTask(item.runnable, ctx.config);\n+        ctx.cargoWorkspaceRootForCurrentRun = item.cargoWorkspaceRoot;\n         return await vscode.tasks.executeTask(task);\n     };\n }\n@@ -946,3 +947,6 @@ export function linkToCommand(ctx: Ctx): Cmd {\n         }\n     };\n }\n+export function getCargoWorkspaceDir(ctx: Ctx): Cmd {\n+    return async () => ctx.cargoWorkspaceRootForCurrentRun;\n+}"}, {"sha": "b6c0eedfb16aac72560844ec2ad885be0783306c", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -17,6 +17,10 @@ export type Workspace =\n       };\n \n export class Ctx {\n+    // Helps VS Code to correctly link problems from runnables. This is used by\n+    // `rust-analyzer.cargoWorkspaceRootForCurrentRun` command of $rustc-run problem matcher.\n+    cargoWorkspaceRootForCurrentRun?: string = undefined;\n+\n     private constructor(\n         readonly config: Config,\n         private readonly extCtx: vscode.ExtensionContext,"}, {"sha": "6e6c2513dd90709d2292bcd42479fa585951fd6c", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -189,6 +189,7 @@ async function initCommonContext(context: vscode.ExtensionContext, ctx: Ctx) {\n     ctx.registerCommand(\"resolveCodeAction\", commands.resolveCodeAction);\n     ctx.registerCommand(\"applyActionGroup\", commands.applyActionGroup);\n     ctx.registerCommand(\"gotoLocation\", commands.gotoLocation);\n+    ctx.registerCommand(\"cargoWorkspaceRootForCurrentRun\", commands.getCargoWorkspaceDir);\n \n     ctx.registerCommand(\"linkToCommand\", commands.linkToCommand);\n }"}, {"sha": "100c0fe2d8c3d9715806cf7ba217031535715e72", "filename": "editors/code/src/run.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Frun.ts", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Frun.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Frun.ts?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -89,12 +89,14 @@ export async function selectRunnable(\n \n export class RunnableQuickPick implements vscode.QuickPickItem {\n     public label: string;\n+    public cargoWorkspaceRoot?: string;\n     public description?: string | undefined;\n     public detail?: string | undefined;\n     public picked?: boolean | undefined;\n \n     constructor(public runnable: ra.Runnable) {\n         this.label = runnable.label;\n+        this.cargoWorkspaceRoot = runnable.args.workspaceRoot;\n     }\n }\n "}, {"sha": "44697f95baba1d4fd28e058d52a731b5b3d2a9d7", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/79a3f84002b67a67ef82971445468195108a2bb7/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=79a3f84002b67a67ef82971445468195108a2bb7", "patch": "@@ -128,7 +128,7 @@ export async function buildCargoTask(\n         name,\n         TASK_SOURCE,\n         exec,\n-        [\"$rustc\"]\n+        [\"$rustc-run\"]\n     );\n }\n "}]}