{"sha": "5ac48ec82623433bc6dbf62ce8c101eeec12648d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYzQ4ZWM4MjYyMzQzM2JjNmRiZjYyY2U4YzEwMWVlZWMxMjY0OGQ=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-19T03:18:04Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-30T18:38:02Z"}, "message": "Run rustfmt on macro_parser.rs", "tree": {"sha": "34063e233cdd141229c9f43126d2a028602de0d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34063e233cdd141229c9f43126d2a028602de0d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ac48ec82623433bc6dbf62ce8c101eeec12648d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac48ec82623433bc6dbf62ce8c101eeec12648d", "html_url": "https://github.com/rust-lang/rust/commit/5ac48ec82623433bc6dbf62ce8c101eeec12648d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ac48ec82623433bc6dbf62ce8c101eeec12648d/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "711f71cfa909808334d6b5d9024e8745ab62b19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/711f71cfa909808334d6b5d9024e8745ab62b19d", "html_url": "https://github.com/rust-lang/rust/commit/711f71cfa909808334d6b5d9024e8745ab62b19d"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e067bbecce28f0a3ca254be449e277d307eeab2d", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ac48ec82623433bc6dbf62ce8c101eeec12648d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac48ec82623433bc6dbf62ce8c101eeec12648d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=5ac48ec82623433bc6dbf62ce8c101eeec12648d", "patch": "@@ -487,7 +487,9 @@ fn inner_parse_loop(\n                 // Need to descend into a sequence\n                 TokenTree::Sequence(sp, seq) => {\n                     // Examine the case where there are 0 matches of this sequence\n-                    if seq.op == quoted::KleeneOp::ZeroOrMore || seq.op == quoted::KleeneOp::ZeroOrOne {\n+                    if seq.op == quoted::KleeneOp::ZeroOrMore\n+                        || seq.op == quoted::KleeneOp::ZeroOrOne\n+                    {\n                         let mut new_item = item.clone();\n                         new_item.match_cur += seq.num_captures;\n                         new_item.idx += 1;\n@@ -500,9 +502,9 @@ fn inner_parse_loop(\n                     // For ZeroOrMore and OneOrMore, we want to examine the case were there is at\n                     // least one match. For ZeroOrOne, we only want the case where there is exactly\n                     // one match.\n-                    if (seq.op == quoted::KleeneOp::ZeroOrOne && seq.num_captures == 1) ||\n-                        seq.op != quoted::KleeneOp::ZeroOrOne {\n-\n+                    if (seq.op == quoted::KleeneOp::ZeroOrOne && seq.num_captures == 1)\n+                        || seq.op != quoted::KleeneOp::ZeroOrOne\n+                    {\n                         let matches = create_matches(item.matches.len());\n                         cur_items.push(Box::new(MatcherPos {\n                             stack: vec![],"}]}