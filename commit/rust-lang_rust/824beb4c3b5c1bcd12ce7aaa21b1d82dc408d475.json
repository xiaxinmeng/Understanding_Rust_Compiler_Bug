{"sha": "824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNGJlYjRjM2I1YzFiY2QxMmNlN2FhYTIxYjFkODJkYzQwOGQ0NzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T03:04:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T23:14:43Z"}, "message": "rustc: Make it not an error when the source can't be loaded for highlighting\n\nI plan to have a callback mechanism for reporting errors and it gets wierd\nwhen reporting errors while reporting an error.", "tree": {"sha": "65a77b0ee54b874f8666298e02be2445b0c5eac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65a77b0ee54b874f8666298e02be2445b0c5eac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475", "html_url": "https://github.com/rust-lang/rust/commit/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4849d5e5dd1d016e79e7d220fdbffeb2b7f887e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4849d5e5dd1d016e79e7d220fdbffeb2b7f887e", "html_url": "https://github.com/rust-lang/rust/commit/e4849d5e5dd1d016e79e7d220fdbffeb2b7f887e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2ad738f8d9603a2571d487f0fe7f37af1093147c", "filename": "src/comp/driver/diagnostic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdiagnostic.rs?ref=824beb4c3b5c1bcd12ce7aaa21b1d82dc408d475", "patch": "@@ -168,8 +168,8 @@ fn highlight_lines(cm: codemap::codemap, sp: span,\n     let file = alt io::read_whole_file_str(lines.name) {\n       result::ok(file) { file }\n       result::err(e) {\n-        emit_diagnostic(none, e, fatal);\n-        fail;\n+        // Hard to report errors while reporting an error\n+        ret;\n       }\n     };\n     let fm = codemap::get_filemap(cm, lines.name);"}]}