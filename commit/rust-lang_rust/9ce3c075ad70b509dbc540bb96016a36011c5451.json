{"sha": "9ce3c075ad70b509dbc540bb96016a36011c5451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZTNjMDc1YWQ3MGI1MDlkYmM1NDBiYjk2MDE2YTM2MDExYzU0NTE=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-07T07:36:15Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-10T15:41:53Z"}, "message": "internal: add implicit `: Sized` bound to type parameters.", "tree": {"sha": "ffbddf69994fa453bb7c19da534bf8f0767bc0f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffbddf69994fa453bb7c19da534bf8f0767bc0f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ce3c075ad70b509dbc540bb96016a36011c5451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce3c075ad70b509dbc540bb96016a36011c5451", "html_url": "https://github.com/rust-lang/rust/commit/9ce3c075ad70b509dbc540bb96016a36011c5451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ce3c075ad70b509dbc540bb96016a36011c5451/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dae94bf2b3e496adb049da589c7efef272a39b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dae94bf2b3e496adb049da589c7efef272a39b8", "html_url": "https://github.com/rust-lang/rust/commit/3dae94bf2b3e496adb049da589c7efef272a39b8"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "c4f9f6705826c5974203635211c842a3c6a587bd", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ce3c075ad70b509dbc540bb96016a36011c5451/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ce3c075ad70b509dbc540bb96016a36011c5451/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=9ce3c075ad70b509dbc540bb96016a36011c5451", "patch": "@@ -1024,7 +1024,7 @@ pub(crate) fn generic_predicates_for_param_query(\n     let ctx =\n         TyLoweringContext::new(db, &resolver).with_type_param_mode(TypeParamLoweringMode::Variable);\n     let generics = generics(db.upcast(), param_id.parent);\n-    resolver\n+    let mut predicates: Vec<_> = resolver\n         .where_predicates_in_scope()\n         // we have to filter out all other predicates *first*, before attempting to lower them\n         .filter(|pred| match pred {\n@@ -1038,7 +1038,15 @@ pub(crate) fn generic_predicates_for_param_query(\n             WherePredicate::Lifetime { .. } => false,\n         })\n         .flat_map(|pred| ctx.lower_where_predicate(pred, true).map(|p| make_binders(&generics, p)))\n-        .collect()\n+        .collect();\n+\n+    let subst = generics.bound_vars_subst(DebruijnIndex::INNERMOST);\n+    let explicitly_unsized_tys = ctx.unsized_types.into_inner();\n+    let implicitly_sized_predicates =\n+        implicitly_sized_clauses(db, param_id.parent, &explicitly_unsized_tys, &subst, &resolver)\n+            .map(|p| make_binders(&generics, crate::wrap_empty_binders(p)));\n+    predicates.extend(implicitly_sized_predicates);\n+    predicates.into()\n }\n \n pub(crate) fn generic_predicates_for_param_recover("}, {"sha": "465ad9065815c95cf1939e673ad90e7637d0d8f0", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9ce3c075ad70b509dbc540bb96016a36011c5451/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ce3c075ad70b509dbc540bb96016a36011c5451/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=9ce3c075ad70b509dbc540bb96016a36011c5451", "patch": "@@ -3520,15 +3520,15 @@ fn foo() {\n             r#\"\n //- minicore: sized\n struct Foo<T>(T);\n-trait Copy {}\n-trait Clone {}\n-impl<T: Copy + Clone> Foo<T$0> where T: Sized {}\n+trait TraitA {}\n+trait TraitB {}\n+impl<T: TraitA + TraitB> Foo<T$0> where T: Sized {}\n \"#,\n             expect![[r#\"\n                 *T*\n \n                 ```rust\n-                T: Copy + Clone\n+                T: TraitA + TraitB\n                 ```\n             \"#]],\n         );\n@@ -3562,20 +3562,35 @@ impl<T: 'static> Foo<T$0> {}\n     }\n \n     #[test]\n-    fn hover_type_param_not_sized() {\n+    fn hover_type_param_sized_bounds() {\n+        // implicit `: Sized` bound\n         check(\n             r#\"\n //- minicore: sized\n+trait Trait {}\n struct Foo<T>(T);\n-trait Copy {}\n-trait Clone {}\n-impl<T: Copy + Clone> Foo<T$0> where T: ?Sized {}\n+impl<T: Trait> Foo<T$0> {}\n+\"#,\n+            expect![[r#\"\n+                *T*\n+\n+                ```rust\n+                T: Trait\n+                ```\n+            \"#]],\n+        );\n+        check(\n+            r#\"\n+//- minicore: sized\n+trait Trait {}\n+struct Foo<T>(T);\n+impl<T: Trait + ?Sized> Foo<T$0> {}\n \"#,\n             expect![[r#\"\n                 *T*\n \n                 ```rust\n-                T: Copy + Clone + ?Sized\n+                T: Trait + ?Sized\n                 ```\n             \"#]],\n         );"}]}