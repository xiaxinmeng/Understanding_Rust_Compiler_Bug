{"sha": "6551285ccaf1562eb73ca1013730165b4d415d8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NTEyODVjY2FmMTU2MmViNzNjYTEwMTM3MzAxNjViNGQ0MTVkOGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-31T19:25:11Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-31T19:25:11Z"}, "message": "Address review comments.", "tree": {"sha": "8018078f67573fc2e48aa06be6f1bb984f97ca69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8018078f67573fc2e48aa06be6f1bb984f97ca69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6551285ccaf1562eb73ca1013730165b4d415d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6551285ccaf1562eb73ca1013730165b4d415d8e", "html_url": "https://github.com/rust-lang/rust/commit/6551285ccaf1562eb73ca1013730165b4d415d8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6551285ccaf1562eb73ca1013730165b4d415d8e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a3290ba36b66ee091f6442fe7f0a22dc57941b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a3290ba36b66ee091f6442fe7f0a22dc57941b", "html_url": "https://github.com/rust-lang/rust/commit/f3a3290ba36b66ee091f6442fe7f0a22dc57941b"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ae4925ec340832ba9672c6c4559dd6c1de996051", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6551285ccaf1562eb73ca1013730165b4d415d8e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6551285ccaf1562eb73ca1013730165b4d415d8e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6551285ccaf1562eb73ca1013730165b4d415d8e", "patch": "@@ -143,6 +143,7 @@ macro_rules! maybe_whole_expr {\n                         $p.token.span, ExprKind::Block(block, None), ThinVec::new()\n                     ));\n                 }\n+                // N.B: `NtIdent(ident)` is normalized to `Ident` in `fn bump`.\n                 _ => {},\n             };\n         }\n@@ -2781,12 +2782,7 @@ impl<'a> Parser<'a> {\n                     // can't continue an expression after an ident\n                     token::Ident(name, is_raw) => token::ident_can_begin_expr(name, t.span, is_raw),\n                     token::Literal(..) | token::Pound => true,\n-                    token::Interpolated(ref nt) => match **nt {\n-                        token::NtIdent(..) | token::NtExpr(..) |\n-                        token::NtBlock(..) | token::NtPath(..) => true,\n-                        _ => false,\n-                    },\n-                    _ => false\n+                    _ => t.is_whole_expr(),\n                 };\n                 let cannot_continue_expr = self.look_ahead(1, token_cannot_continue_expr);\n                 if cannot_continue_expr {"}, {"sha": "73adb5c947c0b64ab777780c80a0e75bb1877df8", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6551285ccaf1562eb73ca1013730165b4d415d8e/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6551285ccaf1562eb73ca1013730165b4d415d8e/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=6551285ccaf1562eb73ca1013730165b4d415d8e", "patch": "@@ -478,10 +478,10 @@ impl Token {\n \n     /// Would `maybe_whole_expr` in `parser.rs` return `Ok(..)`?\n     /// That is, is this a pre-parsed expression dropped into the token stream\n-    /// (which happens while parsing the result ofmacro expansion)?\n+    /// (which happens while parsing the result of macro expansion)?\n     crate fn is_whole_expr(&self) -> bool {\n         if let Interpolated(ref nt) = self.kind {\n-            if let NtExpr(_) | NtLiteral(_) | NtPath(_) | NtBlock(_) = **nt {\n+            if let NtExpr(_) | NtLiteral(_) | NtPath(_) | NtIdent(..) | NtBlock(_) = **nt {\n                 return true;\n             }\n         }"}]}