{"sha": "985fc7d09b9a3884a8bfa81f739aa15796efc373", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NWZjN2QwOWI5YTM4ODRhOGJmYTgxZjczOWFhMTU3OTZlZmMzNzM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T22:18:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-12T18:25:34Z"}, "message": "std: Optimize Vec::from_iter\n\nThis PR is an optimization of the `FromIterator` implementation of `Vec`\n\nBenchmark: https://gist.github.com/alexcrichton/03d666159a28a80e7c70\n\nBefore:\n    test macro_repeat1     ... bench:        57 ns/iter (+/- 1)\n    test macro_repeat2     ... bench:        56 ns/iter (+/- 1)\n    test map_clone1        ... bench:       828 ns/iter (+/- 13)\n    test map_clone2        ... bench:       828 ns/iter (+/- 8)\n    test repeat1           ... bench:      1104 ns/iter (+/- 10)\n    test repeat2           ... bench:      1106 ns/iter (+/- 11)\n\nAfter:\n    test macro_repeat1     ... bench:        75 ns/iter (+/- 21)\n    test macro_repeat2     ... bench:        59 ns/iter (+/- 31)\n    test map_clone1        ... bench:        34 ns/iter (+/- 22)\n    test map_clone2        ... bench:        52 ns/iter (+/- 21)\n    test repeat1           ... bench:        34 ns/iter (+/- 11)\n    test repeat2           ... bench:        33 ns/iter (+/- 12)\n\nThe idea behind this optimization is to avoid all bounds checks for space\nalready allocated into the vector. This may involve running the iterator twice,\nbut the first run of the iterator should be optimizable to a memcpy or memset if\npossible.\n\nThe same treatment can in theory be applied to `Vec::extend` but the benchmarks\nfor that currently get *worse* if the change is applied. This appears to be some\nLLVM optimizations going awry but it's seems prudent to land at least the\n`collect` portion beforehand.", "tree": {"sha": "630af65daf4c4ed88ccf488c06a26dea7418e852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630af65daf4c4ed88ccf488c06a26dea7418e852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/985fc7d09b9a3884a8bfa81f739aa15796efc373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/985fc7d09b9a3884a8bfa81f739aa15796efc373", "html_url": "https://github.com/rust-lang/rust/commit/985fc7d09b9a3884a8bfa81f739aa15796efc373", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/985fc7d09b9a3884a8bfa81f739aa15796efc373/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "446bc899b28e988f4252beca0d1858e7f7d866b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/446bc899b28e988f4252beca0d1858e7f7d866b1", "html_url": "https://github.com/rust-lang/rust/commit/446bc899b28e988f4252beca0d1858e7f7d866b1"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "7c7d783d129fb972a80d54da60c7028901e1e1e5", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/985fc7d09b9a3884a8bfa81f739aa15796efc373/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/985fc7d09b9a3884a8bfa81f739aa15796efc373/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=985fc7d09b9a3884a8bfa81f739aa15796efc373", "patch": "@@ -1380,7 +1380,17 @@ impl<T> FromIterator<T> for Vec<T> {\n     fn from_iter<I:Iterator<Item=T>>(iterator: I) -> Vec<T> {\n         let (lower, _) = iterator.size_hint();\n         let mut vector = Vec::with_capacity(lower);\n-        for element in iterator {\n+\n+        let mut i = iterator.fuse();\n+        for element in i.by_ref().take(vector.capacity()) {\n+            let len = vector.len();\n+            unsafe {\n+                ptr::write(vector.get_unchecked_mut(len), element);\n+                vector.set_len(len + 1);\n+            }\n+        }\n+\n+        for element in i {\n             vector.push(element)\n         }\n         vector"}]}