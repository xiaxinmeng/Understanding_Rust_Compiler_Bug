{"sha": "8423a19f66a8b98e34576186f03ce66161cd691b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MjNhMTlmNjZhOGI5OGUzNDU3NjE4NmYwM2NlNjYxNjFjZDY5MWI=", "commit": {"author": {"name": "Ashley Mannix", "email": "kodraus@hey.com", "date": "2020-12-16T05:07:39Z"}, "committer": {"name": "Jakub Duchniewicz", "email": "j.duchniewicz@gmail.com", "date": "2021-06-07T19:18:55Z"}, "message": "make both panic display formats collapse frames", "tree": {"sha": "13606bf355fd4cb87ca6c3d833fdd898d6881895", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13606bf355fd4cb87ca6c3d833fdd898d6881895"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8423a19f66a8b98e34576186f03ce66161cd691b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8423a19f66a8b98e34576186f03ce66161cd691b", "html_url": "https://github.com/rust-lang/rust/commit/8423a19f66a8b98e34576186f03ce66161cd691b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8423a19f66a8b98e34576186f03ce66161cd691b/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JDuchniewicz", "id": 18423461, "node_id": "MDQ6VXNlcjE4NDIzNDYx", "avatar_url": "https://avatars.githubusercontent.com/u/18423461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDuchniewicz", "html_url": "https://github.com/JDuchniewicz", "followers_url": "https://api.github.com/users/JDuchniewicz/followers", "following_url": "https://api.github.com/users/JDuchniewicz/following{/other_user}", "gists_url": "https://api.github.com/users/JDuchniewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDuchniewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDuchniewicz/subscriptions", "organizations_url": "https://api.github.com/users/JDuchniewicz/orgs", "repos_url": "https://api.github.com/users/JDuchniewicz/repos", "events_url": "https://api.github.com/users/JDuchniewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/JDuchniewicz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fb298664c5e8f179803ecf1502a7d4f51ba7ed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb298664c5e8f179803ecf1502a7d4f51ba7ed4", "html_url": "https://github.com/rust-lang/rust/commit/5fb298664c5e8f179803ecf1502a7d4f51ba7ed4"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "f8884523cf446a6422b2d3985285667f6958e62e", "filename": "library/std/src/backtrace.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8423a19f66a8b98e34576186f03ce66161cd691b/library%2Fstd%2Fsrc%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8423a19f66a8b98e34576186f03ce66161cd691b/library%2Fstd%2Fsrc%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fbacktrace.rs?ref=8423a19f66a8b98e34576186f03ce66161cd691b", "patch": "@@ -399,12 +399,11 @@ impl fmt::Display for Backtrace {\n         let mut f = backtrace_rs::BacktraceFmt::new(fmt, style, &mut print_path);\n         f.add_context()?;\n         for frame in frames {\n-            let mut f = f.frame();\n             if frame.symbols.is_empty() {\n-                f.print_raw(frame.frame.ip(), None, None, None)?;\n+                f.frame().print_raw(frame.frame.ip(), None, None, None)?;\n             } else {\n                 for symbol in frame.symbols.iter() {\n-                    f.print_raw_with_column(\n+                    f.frame().print_raw_with_column(\n                         frame.frame.ip(),\n                         symbol.name.as_ref().map(|b| backtrace_rs::SymbolName::new(b)),\n                         symbol.filename.as_ref().map(|b| match b {"}, {"sha": "a549770d8b37823dd30112db435af4e2985a504d", "filename": "library/std/src/sys_common/backtrace.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8423a19f66a8b98e34576186f03ce66161cd691b/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8423a19f66a8b98e34576186f03ce66161cd691b/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs?ref=8423a19f66a8b98e34576186f03ce66161cd691b", "patch": "@@ -71,7 +71,6 @@ unsafe fn _print_fmt(fmt: &mut fmt::Formatter<'_>, print_fmt: PrintFmt) -> fmt::\n \n         let mut hit = false;\n         let mut stop = false;\n-        let mut frame_fmt = bt_fmt.frame();\n         backtrace_rs::resolve_frame_unsynchronized(frame, |symbol| {\n             hit = true;\n             if print_fmt == PrintFmt::Short {\n@@ -88,15 +87,15 @@ unsafe fn _print_fmt(fmt: &mut fmt::Formatter<'_>, print_fmt: PrintFmt) -> fmt::\n             }\n \n             if start {\n-                res = frame_fmt.symbol(frame, symbol);\n+                res = bt_fmt.frame().symbol(frame, symbol);\n             }\n         });\n         if stop {\n             return false;\n         }\n         if !hit {\n             if start {\n-                res = frame_fmt.print_raw(frame.ip(), None, None, None);\n+                res = bt_fmt.frame().print_raw(frame.ip(), None, None, None);\n             }\n         }\n "}]}