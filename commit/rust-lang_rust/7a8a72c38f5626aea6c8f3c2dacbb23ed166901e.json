{"sha": "7a8a72c38f5626aea6c8f3c2dacbb23ed166901e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOGE3MmMzOGY1NjI2YWVhNmM4ZjNjMmRhY2JiMjNlZDE2NjkwMWU=", "commit": {"author": {"name": "wxb1ank", "email": "wxblank@gmail.com", "date": "2021-06-15T03:29:38Z"}, "committer": {"name": "wxb1ank", "email": "wxblank@gmail.com", "date": "2021-06-15T03:29:38Z"}, "message": "Use `Uri.toString()` for URLs", "tree": {"sha": "7ce7861ba441ed258c5d696a06769a75490942dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ce7861ba441ed258c5d696a06769a75490942dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e", "html_url": "https://github.com/rust-lang/rust/commit/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e/comments", "author": {"login": "wxb1ank", "id": 44535681, "node_id": "MDQ6VXNlcjQ0NTM1Njgx", "avatar_url": "https://avatars.githubusercontent.com/u/44535681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxb1ank", "html_url": "https://github.com/wxb1ank", "followers_url": "https://api.github.com/users/wxb1ank/followers", "following_url": "https://api.github.com/users/wxb1ank/following{/other_user}", "gists_url": "https://api.github.com/users/wxb1ank/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxb1ank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxb1ank/subscriptions", "organizations_url": "https://api.github.com/users/wxb1ank/orgs", "repos_url": "https://api.github.com/users/wxb1ank/repos", "events_url": "https://api.github.com/users/wxb1ank/events{/privacy}", "received_events_url": "https://api.github.com/users/wxb1ank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wxb1ank", "id": 44535681, "node_id": "MDQ6VXNlcjQ0NTM1Njgx", "avatar_url": "https://avatars.githubusercontent.com/u/44535681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxb1ank", "html_url": "https://github.com/wxb1ank", "followers_url": "https://api.github.com/users/wxb1ank/followers", "following_url": "https://api.github.com/users/wxb1ank/following{/other_user}", "gists_url": "https://api.github.com/users/wxb1ank/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxb1ank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxb1ank/subscriptions", "organizations_url": "https://api.github.com/users/wxb1ank/orgs", "repos_url": "https://api.github.com/users/wxb1ank/repos", "events_url": "https://api.github.com/users/wxb1ank/events{/privacy}", "received_events_url": "https://api.github.com/users/wxb1ank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "447d849c9ecb3d0f7783a56db429ccc526d0d8dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/447d849c9ecb3d0f7783a56db429ccc526d0d8dc", "html_url": "https://github.com/rust-lang/rust/commit/447d849c9ecb3d0f7783a56db429ccc526d0d8dc"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "5c48c74e8d5fe5689a5959d27e518e7e1f6ba63a", "filename": "editors/code/src/net.ts", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e/editors%2Fcode%2Fsrc%2Fnet.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7a8a72c38f5626aea6c8f3c2dacbb23ed166901e/editors%2Fcode%2Fsrc%2Fnet.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnet.ts?ref=7a8a72c38f5626aea6c8f3c2dacbb23ed166901e", "patch": "@@ -127,17 +127,19 @@ async function downloadFile(\n     httpProxy: string | null | undefined,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n+    const urlString = url.toString();\n+\n     const res = await (() => {\n         if (httpProxy) {\n-            log.debug(`Downloading ${url.path} via proxy: ${httpProxy}`);\n-            return fetch(url.path, { agent: new HttpsProxyAgent(httpProxy) });\n+            log.debug(`Downloading ${urlString} via proxy: ${httpProxy}`);\n+            return fetch(urlString, { agent: new HttpsProxyAgent(httpProxy) });\n         }\n \n-        return fetch(url.path);\n+        return fetch(urlString);\n     })();\n \n     if (!res.ok) {\n-        log.error(\"Error\", res.status, \"while downloading file from\", url.path);\n+        log.error(\"Error\", res.status, \"while downloading file from\", urlString);\n         log.error({ body: await res.text(), headers: res.headers });\n \n         throw new Error(`Got response ${res.status} when trying to download a file.`);\n@@ -146,7 +148,7 @@ async function downloadFile(\n     const totalBytes = Number(res.headers.get('content-length'));\n     assert(!Number.isNaN(totalBytes), \"Sanity check of content-length protocol\");\n \n-    log.debug(\"Downloading file of\", totalBytes, \"bytes size from\", url.path, \"to\", destFilePath.path);\n+    log.debug(\"Downloading file of\", totalBytes, \"bytes size from\", urlString, \"to\", destFilePath.path);\n \n     let readBytes = 0;\n     res.body.on(\"data\", (chunk: Buffer) => {"}]}