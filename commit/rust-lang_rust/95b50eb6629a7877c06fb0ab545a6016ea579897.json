{"sha": "95b50eb6629a7877c06fb0ab545a6016ea579897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YjUwZWI2NjI5YTc4NzdjMDZmYjBhYjU0NWE2MDE2ZWE1Nzk4OTc=", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-09-11T15:23:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-11T15:23:38Z"}, "message": "Rollup merge of #87904 - kpreid:unsize, r=jyn514\n\nReword description of automatic impls of `Unsize`.\n\nThe existing documentation felt a little unhelpfully concise, so this change tries to improve it by using longer sentences, each of which specifies which kinds of types it applies to as early as possible. In particular, the third item starts with \u201cStructs ...\u201d instead of saying \u201cFoo is a struct\u201d later.\n\nAlso, the previous list items \u201cOnly the last field has a type involving `T`\u201d and \u201c`T` is not part of the type of any other fields\u201d are, as far as I see, redundant with each other, so I removed the latter.\n\nI have no particular knowledge of `Unsize`; I have attempted to leave the meaning entirely unchanged but may have missed a nuance.\n\nMarkdown preview of the edited documentation:\n\n> All implementations of `Unsize` are provided automatically by the compiler.\n> Those implementations are:\n>\n> - Arrays `[T; N]` implement `Unsize<[T]>`.\n> - Types implementing a trait `Trait` also implement `Unsize<dyn Trait>`.\n> - Structs `Foo<..., T, ...>` implement `Unsize<Foo<..., U, ...>>` if all of these conditions\n>   are met:\n>   - `T: Unsize<U>`.\n>   - Only the last field of `Foo` has a type involving `T`.\n>   - `Bar<T>: Unsize<Bar<U>>`, where `Bar<T>` stands for the actual type of that last field.", "tree": {"sha": "0e2e2131222cb03f0ae03c5960ec5f8aaf4e6bb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e2e2131222cb03f0ae03c5960ec5f8aaf4e6bb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95b50eb6629a7877c06fb0ab545a6016ea579897", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhPMn7CRBK7hj4Ov3rIwAAoycIAAYOC4ugdzPrqAz+/llTGYEw\nF7sv5/SnK6oq9c5A7hF+SmwodEsKOHbLxGdLc8PQNstkmKYHFOoc4BHhImGMj9gE\nBxrQD83lxDWcEG0Fd8XbhoOTIVYbx+g6uGE8mXDkceXGckMlj1fa8qHl4U9Gz4VB\nbFUK/2ErHScLv0xn8U1lxeW4Mca9X9/7w+e4k2+Y8N2nMsUG/hZGz83IeWmnQtSQ\nm+QGEJ09UFa2TGZnsPZHkxFn5S9P+4tpihKmEiKT/Zi5HkOA+G4ZkxENK3d54N+U\nADtvA7imTowZYs3iyNocBN1SZlF+z3Q53jv+D5IzFLAL5JmyUMgmcmX2HDq3J4U=\n=JXE1\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e2e2131222cb03f0ae03c5960ec5f8aaf4e6bb0\nparent 641e02f388acc6b1d316a59c605a32d1711a8758\nparent 07988bb8a1ce5b6732d351c4299f0b0a4d51e192\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1631373818 -0700\ncommitter GitHub <noreply@github.com> 1631373818 -0700\n\nRollup merge of #87904 - kpreid:unsize, r=jyn514\n\nReword description of automatic impls of `Unsize`.\n\nThe existing documentation felt a little unhelpfully concise, so this change tries to improve it by using longer sentences, each of which specifies which kinds of types it applies to as early as possible. In particular, the third item starts with \u201cStructs ...\u201d instead of saying \u201cFoo is a struct\u201d later.\n\nAlso, the previous list items \u201cOnly the last field has a type involving `T`\u201d and \u201c`T` is not part of the type of any other fields\u201d are, as far as I see, redundant with each other, so I removed the latter.\n\nI have no particular knowledge of `Unsize`; I have attempted to leave the meaning entirely unchanged but may have missed a nuance.\n\nMarkdown preview of the edited documentation:\n\n> All implementations of `Unsize` are provided automatically by the compiler.\n> Those implementations are:\n>\n> - Arrays `[T; N]` implement `Unsize<[T]>`.\n> - Types implementing a trait `Trait` also implement `Unsize<dyn Trait>`.\n> - Structs `Foo<..., T, ...>` implement `Unsize<Foo<..., U, ...>>` if all of these conditions\n>   are met:\n>   - `T: Unsize<U>`.\n>   - Only the last field of `Foo` has a type involving `T`.\n>   - `Bar<T>: Unsize<Bar<U>>`, where `Bar<T>` stands for the actual type of that last field.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95b50eb6629a7877c06fb0ab545a6016ea579897", "html_url": "https://github.com/rust-lang/rust/commit/95b50eb6629a7877c06fb0ab545a6016ea579897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95b50eb6629a7877c06fb0ab545a6016ea579897/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "641e02f388acc6b1d316a59c605a32d1711a8758", "url": "https://api.github.com/repos/rust-lang/rust/commits/641e02f388acc6b1d316a59c605a32d1711a8758", "html_url": "https://github.com/rust-lang/rust/commit/641e02f388acc6b1d316a59c605a32d1711a8758"}, {"sha": "07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "url": "https://api.github.com/repos/rust-lang/rust/commits/07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "html_url": "https://github.com/rust-lang/rust/commit/07988bb8a1ce5b6732d351c4299f0b0a4d51e192"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "a7ed5bfaf8598367492120435663c08676b55a0d", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/95b50eb6629a7877c06fb0ab545a6016ea579897/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95b50eb6629a7877c06fb0ab545a6016ea579897/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=95b50eb6629a7877c06fb0ab545a6016ea579897", "patch": "@@ -99,17 +99,15 @@ pub trait Sized {\n /// `Unsize<dyn fmt::Debug>`.\n ///\n /// All implementations of `Unsize` are provided automatically by the compiler.\n-///\n-/// `Unsize` is implemented for:\n-///\n-/// - `[T; N]` is `Unsize<[T]>`\n-/// - `T` is `Unsize<dyn Trait>` when `T: Trait`\n-/// - `Foo<..., T, ...>` is `Unsize<Foo<..., U, ...>>` if:\n-///   - `T: Unsize<U>`\n-///   - Foo is a struct\n-///   - Only the last field of `Foo` has a type involving `T`\n-///   - `T` is not part of the type of any other fields\n-///   - `Bar<T>: Unsize<Bar<U>>`, if the last field of `Foo` has type `Bar<T>`\n+/// Those implementations are:\n+///\n+/// - Arrays `[T; N]` implement `Unsize<[T]>`.\n+/// - Types implementing a trait `Trait` also implement `Unsize<dyn Trait>`.\n+/// - Structs `Foo<..., T, ...>` implement `Unsize<Foo<..., U, ...>>` if all of these conditions\n+///   are met:\n+///   - `T: Unsize<U>`.\n+///   - Only the last field of `Foo` has a type involving `T`.\n+///   - `Bar<T>: Unsize<Bar<U>>`, where `Bar<T>` stands for the actual type of that last field.\n ///\n /// `Unsize` is used along with [`ops::CoerceUnsized`] to allow\n /// \"user-defined\" containers such as [`Rc`] to contain dynamically-sized"}]}