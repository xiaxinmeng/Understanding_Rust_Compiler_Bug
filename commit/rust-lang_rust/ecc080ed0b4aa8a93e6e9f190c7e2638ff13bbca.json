{"sha": "ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYzA4MGVkMGI0YWE4YTkzZTZlOWYxOTBjN2UyNjM4ZmYxM2JiY2E=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-28T12:21:13Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-28T12:21:13Z"}, "message": "Use \"\" in the native_name as an indication that no extra options have to\nbe passed to the \"linker\". Use that for libc.", "tree": {"sha": "47a496b72d9052e829b476028d2a678d7eda6908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a496b72d9052e829b476028d2a678d7eda6908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "html_url": "https://github.com/rust-lang/rust/commit/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/comments", "author": null, "committer": null, "parents": [{"sha": "663aa7663533b6b1cbeb2229c95b4bbde1a5d18e", "url": "https://api.github.com/repos/rust-lang/rust/commits/663aa7663533b6b1cbeb2229c95b4bbde1a5d18e", "html_url": "https://github.com/rust-lang/rust/commit/663aa7663533b6b1cbeb2229c95b4bbde1a5d18e"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "da710fd3389f441138ae174f7cf3cfb7a8a0738c", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -125,6 +125,9 @@ obj session(ast::crate_num cnum,\n     }\n     fn has_external_crate(int num) -> bool { ret crates.contains_key(num); }\n     fn add_used_library(&str lib) {\n+        if (lib == \"\") {\n+            ret;\n+        }\n         // A program has a small number of libraries, so a vector is probably\n         // a good data structure in here.\n         for (str l in used_libraries) {"}, {"sha": "90f8fedb6dce5d8b0f9f650c0df1c3f38aeef88b", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -1920,7 +1920,7 @@ fn parse_item_native_mod(&parser p, vec[ast::attribute] attrs) -> @ast::item {\n         expect(p, token::EQ);\n         native_name = parse_str(p);\n     } else {\n-        native_name = \"\";\n+        native_name = id;\n     }\n     expect(p, token::LBRACE);\n     auto m = parse_native_mod_items(p, native_name, abi);"}, {"sha": "14118da3c5c80a158d2be27eb80ddb9a0c58b7c7", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -203,18 +203,12 @@ fn visit_view_item(env e, &@ast::view_item i) {\n fn visit_item(env e, &@ast::item i) {\n     alt (i.node) {\n         case (ast::item_native_mod(?m)) {\n-            auto name;\n-            if (m.native_name == \"\" ) {\n-                name = i.ident;\n-            } else {\n-                name = m.native_name;\n-            }\n             alt (m.abi) {\n                 case (ast::native_abi_rust) {\n-                    e.sess.add_used_library(name);\n+                    e.sess.add_used_library(m.native_name);\n                 }\n                 case (ast::native_abi_cdecl) {\n-                    e.sess.add_used_library(name);\n+                    e.sess.add_used_library(m.native_name);\n                 }\n                 case (ast::native_abi_llvm) {\n                 }"}, {"sha": "92c2d74e496698096f37d32db55f8507da188749", "filename": "src/lib/linux_os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Flinux_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Flinux_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flinux_os.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -5,7 +5,7 @@ import vec::vbuf;\n \n // FIXME Somehow merge stuff duplicated here and macosx_os.rs. Made difficult\n // by https://github.com/graydon/rust/issues#issue/268\n-native \"cdecl\" mod libc = \"c\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn open(sbuf s, int flags, uint mode) -> int;\n     fn read(int fd, vbuf buf, uint count) -> int;\n     fn write(int fd, vbuf buf, uint count) -> int;"}, {"sha": "6ba5e24ac981105b780b7df88e3860120bb85ef6", "filename": "src/lib/macos_os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Fmacos_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Fmacos_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_os.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -2,7 +2,7 @@\n import str::sbuf;\n import vec::vbuf;\n \n-native \"cdecl\" mod libc = \"c\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn open(sbuf s, int flags, uint mode) -> int;\n     fn read(int fd, vbuf buf, uint count) -> int;\n     fn write(int fd, vbuf buf, uint count) -> int;"}, {"sha": "fdd4eea3afc1d0c5bfd7f8a330fb981d384e0b37", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -2,7 +2,7 @@\n import str::sbuf;\n import vec::vbuf;\n \n-native \"cdecl\" mod libc = \"c\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn open(sbuf s, int flags, uint mode) -> int = \"_open\";\n     fn read(int fd, vbuf buf, uint count) -> int = \"_read\";\n     fn write(int fd, vbuf buf, uint count) -> int = \"_write\";"}, {"sha": "4e3dee3ccf9207cc20765eec0f245f5604d7638c", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -112,7 +112,7 @@ fn test_fn() {\n   assert (h1 >= h2);\n }\n \n-native \"rust\" mod native_mod = \"c\" {\n+native \"rust\" mod native_mod = \"\" {\n   fn str_byte_len(str s) -> vec[u8];\n   fn str_alloc(uint n_bytes) -> str;\n }"}, {"sha": "72f44d12c1af8a9640904e9676244f091b34a9e1", "filename": "src/test/run-pass/import-glob-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -12,7 +12,7 @@ mod a1 {                    //\n }                           //   |   |   |\n                             //   |   |   |\n mod a2 {                    //   |   |   |\n-  native mod b1 = \"c\" {     //   |   |   |\n+  native mod b1 = \"\" {      //   |   |   |\n     import a1::b2::*;       //   | <-/  -/\n     export word_traveler;   //   |\n   }                         //   |"}, {"sha": "fa4a5e25e5a6c5de1c46c4d062620bed172b026a", "filename": "src/test/run-pass/native-opaque-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -1,6 +1,6 @@\n \n \n-native \"cdecl\" mod libc = \"c\" {\n+native \"cdecl\" mod libc = \"\" {\n     type file_handle;\n }\n "}, {"sha": "d03440462ce180b97ddb100d979a1b6885e5d86f", "filename": "src/test/run-pass/native2.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fnative2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca/src%2Ftest%2Frun-pass%2Fnative2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative2.rs?ref=ecc080ed0b4aa8a93e6e9f190c7e2638ff13bbca", "patch": "@@ -5,14 +5,14 @@ native \"rust\" mod rustrt {\n     fn vec_buf[T](vec[T] v, uint offset) -> vbuf;\n }\n \n-native \"rust\" mod bar = \"c\" { }\n+native \"rust\" mod bar = \"\" { }\n \n-native \"cdecl\" mod zed = \"c\" { }\n+native \"cdecl\" mod zed = \"\" { }\n \n-native \"cdecl\" mod libc = \"c\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn write(int fd, rustrt::vbuf buf, uint count) -> int;\n }\n \n-native \"cdecl\" mod baz = \"c\" { }\n+native \"cdecl\" mod baz = \"\" { }\n \n fn main(vec[str] args) { }\n\\ No newline at end of file"}]}