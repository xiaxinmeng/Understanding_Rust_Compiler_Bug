{"sha": "fc1909d311cebd2920b968b8fe161267c12c5fe1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMTkwOWQzMTFjZWJkMjkyMGI5NjhiOGZlMTYxMjY3YzEyYzVmZTE=", "commit": {"author": {"name": "cad97", "email": "cad97@cad97.com", "date": "2018-08-23T21:14:19Z"}, "committer": {"name": "cad97", "email": "cad97@cad97.com", "date": "2018-08-23T21:14:19Z"}, "message": "Reformat", "tree": {"sha": "35815432eb26fda22cb20f39d2b4c82d59c8995b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35815432eb26fda22cb20f39d2b4c82d59c8995b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc1909d311cebd2920b968b8fe161267c12c5fe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc1909d311cebd2920b968b8fe161267c12c5fe1", "html_url": "https://github.com/rust-lang/rust/commit/fc1909d311cebd2920b968b8fe161267c12c5fe1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc1909d311cebd2920b968b8fe161267c12c5fe1/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04d804c3655eaaa262d1147446290e8fe4aabc67", "url": "https://api.github.com/repos/rust-lang/rust/commits/04d804c3655eaaa262d1147446290e8fe4aabc67", "html_url": "https://github.com/rust-lang/rust/commit/04d804c3655eaaa262d1147446290e8fe4aabc67"}], "stats": {"total": 76, "additions": 41, "deletions": 35}, "files": [{"sha": "3f5ff75a722880916ed7b91a7d8841099a46b930", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -65,14 +65,14 @@\n //!            .qux\n //! ```\n \n-use source_map::SpanUtils;\n use comment::rewrite_comment;\n use config::IndentStyle;\n use expr::rewrite_call;\n use lists::{extract_post_comment, extract_pre_comment, get_comment_end};\n use macros::convert_try_mac;\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use utils::{\n     first_line_width, last_line_extendable, last_line_width, mk_sp, trimmed_last_line_width,\n     wrap_str,"}, {"sha": "f6a3d8436f29629d6dd4ccaf9714973044a4c210", "filename": "src/closures.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -9,16 +9,16 @@\n // except according to those terms.\n \n use config::lists::*;\n-use syntax::source_map::Span;\n use syntax::parse::classify;\n+use syntax::source_map::Span;\n use syntax::{ast, ptr};\n \n-use source_map::SpanUtils;\n use expr::{block_contains_comment, is_simple_block, is_unsafe_block, rewrite_cond, ToExpr};\n use items::{span_hi_for_arg, span_lo_for_arg};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use utils::{last_line_width, left_most_sub_expr, stmt_expr};\n \n // This module is pretty messy because of the rules around closures and blocks:"}, {"sha": "e6161c0c42be2cdf17931089715e33fa402ca989", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -12,13 +12,12 @@ use std::borrow::Cow;\n use std::cmp::min;\n \n use config::lists::*;\n-use syntax::source_map::{BytePos, SourceMap, Span};\n use syntax::parse::token::DelimToken;\n+use syntax::source_map::{BytePos, SourceMap, Span};\n use syntax::{ast, ptr};\n \n use chains::rewrite_chain;\n use closures;\n-use source_map::{LineRangeUtils, SpanUtils};\n use comment::{\n     combine_strs_with_missing_comments, contains_comment, recover_comment_removed, rewrite_comment,\n     rewrite_missing_comment, CharClasses, FindUncommented,\n@@ -35,6 +34,7 @@ use pairs::{rewrite_all_pairs, rewrite_pair, PairParts};\n use patterns::{can_be_overflowed_pat, is_short_pattern, TuplePatField};\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n+use source_map::{LineRangeUtils, SpanUtils};\n use spanned::Spanned;\n use string::{rewrite_string, StringFormat};\n use types::{can_be_overflowed_type, rewrite_path, PathContext};\n@@ -425,7 +425,9 @@ fn rewrite_empty_block(\n         return None;\n     }\n \n-    if block.stmts.is_empty() && !block_contains_comment(block, context.source_map) && shape.width >= 2\n+    if block.stmts.is_empty()\n+        && !block_contains_comment(block, context.source_map)\n+        && shape.width >= 2\n     {\n         return Some(format!(\"{}{}{{}}\", prefix, label_str));\n     }"}, {"sha": "3012837ba640ea83af3829f90e466467948464f2", "filename": "src/formatting.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -7,16 +7,16 @@ use std::rc::Rc;\n use std::time::{Duration, Instant};\n \n use syntax::ast;\n-use syntax::source_map::{SourceMap, FilePathMapping, Span};\n use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::errors::Handler;\n use syntax::parse::{self, ParseSess};\n+use syntax::source_map::{FilePathMapping, SourceMap, Span};\n \n use comment::{CharClasses, FullCodeCharKind};\n use config::{Config, FileName, Verbosity};\n use issues::BadIssueSeeker;\n use visitor::{FmtVisitor, SnippetProvider};\n-use {source_file, modules, ErrorKind, FormatReport, Input, Session};\n+use {modules, source_file, ErrorKind, FormatReport, Input, Session};\n \n // A map of the files of a crate, with their new content\n pub(crate) type SourceFile = Vec<FileRecord>;\n@@ -223,7 +223,11 @@ pub(crate) struct FormattingError {\n }\n \n impl FormattingError {\n-    pub(crate) fn from_span(span: &Span, source_map: &SourceMap, kind: ErrorKind) -> FormattingError {\n+    pub(crate) fn from_span(\n+        span: &Span,\n+        source_map: &SourceMap,\n+        kind: ErrorKind,\n+    ) -> FormattingError {\n         FormattingError {\n             line: source_map.lookup_char_pos(span.lo()).line,\n             is_comment: kind.is_comment(),"}, {"sha": "a2d14c129d9e799687c1e2d28b9bcd445a47ff5e", "filename": "src/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -14,12 +14,12 @@ use config::lists::*;\n use syntax::ast::{self, UseTreeKind};\n use syntax::source_map::{self, BytePos, Span, DUMMY_SP};\n \n-use source_map::SpanUtils;\n use comment::combine_strs_with_missing_comments;\n use config::IndentStyle;\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{is_same_visibility, mk_sp, rewrite_ident};\n use visitor::FmtVisitor;"}, {"sha": "ff635137e42d671e61ef323b0ab5411b440c6d29", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -20,7 +20,6 @@ use syntax::source_map::{self, BytePos, Span};\n use syntax::visit;\n use syntax::{ast, ptr, symbol};\n \n-use source_map::{LineRangeUtils, SpanUtils};\n use comment::{\n     combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n     recover_missing_comment_in_span, rewrite_missing_comment, FindUncommented,\n@@ -35,6 +34,7 @@ use macros::{rewrite_macro, MacroPosition};\n use overflow;\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n+use source_map::{LineRangeUtils, SpanUtils};\n use spanned::Spanned;\n use utils::*;\n use vertical::rewrite_with_alignment;"}, {"sha": "89dcf6f5ff38552efcf009c535c14a2b6e2031b9", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -49,7 +49,7 @@ use syntax::ast;\n \n use comment::LineClasses;\n use failure::Fail;\n-use formatting::{SourceFile, FormatErrorMap, FormattingError, ReportedErrors};\n+use formatting::{FormatErrorMap, FormattingError, ReportedErrors, SourceFile};\n use issues::Issue;\n use shape::Indent;\n \n@@ -65,11 +65,9 @@ mod attr;\n mod chains;\n pub(crate) mod checkstyle;\n mod closures;\n-pub(crate) mod source_map;\n mod comment;\n pub(crate) mod config;\n mod expr;\n-pub(crate) mod source_file;\n pub(crate) mod formatting;\n mod imports;\n mod issues;\n@@ -86,6 +84,8 @@ mod reorder;\n mod rewrite;\n pub(crate) mod rustfmt_diff;\n mod shape;\n+pub(crate) mod source_file;\n+pub(crate) mod source_map;\n mod spanned;\n mod string;\n #[cfg(test)]"}, {"sha": "e8e0f1b572e210d4d16c7c6aebd4af3db965c482", "filename": "src/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -22,17 +22,16 @@\n use std::collections::HashMap;\n \n use config::lists::*;\n-use syntax::source_map::{BytePos, Span};\n use syntax::parse::new_parser_from_tts;\n use syntax::parse::parser::Parser;\n use syntax::parse::token::{BinOpToken, DelimToken, Token};\n use syntax::print::pprust;\n+use syntax::source_map::{BytePos, Span};\n use syntax::symbol;\n use syntax::tokenstream::{Cursor, ThinTokenStream, TokenStream, TokenTree};\n use syntax::ThinVec;\n use syntax::{ast, ptr};\n \n-use source_map::SpanUtils;\n use comment::{\n     contains_comment, remove_trailing_white_spaces, CharClasses, FindUncommented, FullCodeCharKind,\n     LineClasses,\n@@ -42,6 +41,7 @@ use lists::{itemize_list, write_list, ListFormatting};\n use overflow;\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{format_visibility, mk_sp, rewrite_ident, wrap_str};\n "}, {"sha": "231112edb1e1a0600870947349cdd5fbabe4cd9b", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -16,7 +16,6 @@ use config::lists::*;\n use syntax::source_map::{BytePos, Span};\n use syntax::{ast, ptr};\n \n-use source_map::SpanUtils;\n use comment::{combine_strs_with_missing_comments, rewrite_comment};\n use config::{Config, ControlBraceStyle, IndentStyle};\n use expr::{\n@@ -26,6 +25,7 @@ use expr::{\n use lists::{itemize_list, write_list, ListFormatting};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{\n     contains_skip, extra_offset, first_line_width, inner_attributes, last_line_extendable, mk_sp,"}, {"sha": "ef047b3144ccc3ea10d42745859242436adf9293", "filename": "src/missed_spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -12,10 +12,10 @@ use std::borrow::Cow;\n \n use syntax::source_map::{BytePos, Pos, Span};\n \n-use source_map::LineRangeUtils;\n use comment::{rewrite_comment, CodeCharKind, CommentCodeSlices};\n use config::{EmitMode, FileName};\n use shape::{Indent, Shape};\n+use source_map::LineRangeUtils;\n use utils::{count_newlines, last_line_width, mk_sp};\n use visitor::FmtVisitor;\n "}, {"sha": "aa36f4103e4231268738213bb5020765b457556a", "filename": "src/modules.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -13,8 +13,8 @@ use std::io;\n use std::path::{Path, PathBuf};\n \n use syntax::ast;\n-use syntax::source_map;\n use syntax::parse::{parser, DirectoryOwnership};\n+use syntax::source_map;\n use syntax_pos::symbol::Symbol;\n \n use config::FileName;\n@@ -66,8 +66,8 @@ fn list_submodules<'a>(\n     for item in &module.items {\n         if let ast::ItemKind::Mod(ref sub_mod) = item.node {\n             if !contains_skip(&item.attrs) {\n-                let is_internal =\n-                    source_map.span_to_filename(item.span) == source_map.span_to_filename(sub_mod.inner);\n+                let is_internal = source_map.span_to_filename(item.span)\n+                    == source_map.span_to_filename(sub_mod.inner);\n                 let (dir_path, relative) = if is_internal {\n                     if let Some(path) = find_path_value(&item.attrs) {\n                         (search_dir.join(&path.as_str()), None)"}, {"sha": "1a223cf3ca636f76e0d27c493f0a218001f38611", "filename": "src/overflow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -13,15 +13,15 @@\n \n use config::lists::*;\n use syntax::ast;\n-use syntax::source_map::Span;\n use syntax::parse::token::DelimToken;\n+use syntax::source_map::Span;\n \n use closures;\n-use source_map::SpanUtils;\n use expr::{is_every_expr_simple, is_method_call, is_nested_call, maybe_get_args_offset, ToExpr};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{count_newlines, extra_offset, first_line_width, last_line_width, mk_sp};\n "}, {"sha": "13ae0d180e8f9acee649e8f1cfccd3dcc8297550", "filename": "src/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -10,10 +10,9 @@\n \n use config::lists::*;\n use syntax::ast::{self, BindingMode, FieldPat, Pat, PatKind, RangeEnd, RangeSyntax};\n-use syntax::source_map::{self, BytePos, Span};\n use syntax::ptr;\n+use syntax::source_map::{self, BytePos, Span};\n \n-use source_map::SpanUtils;\n use comment::FindUncommented;\n use expr::{can_be_overflowed_expr, rewrite_unary_prefix, wrap_struct_field};\n use lists::{\n@@ -25,6 +24,7 @@ use overflow;\n use pairs::{rewrite_pair, PairParts};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use types::{rewrite_path, PathContext};\n use utils::{format_mutability, mk_sp, rewrite_ident};"}, {"sha": "b6876738cfd6a2236bf8c3cab8a45f98979df1d1", "filename": "src/reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -20,13 +20,13 @@ use config::Config;\n use syntax::{ast, attr, source_map::Span};\n \n use attr::filter_inline_attrs;\n-use source_map::LineRangeUtils;\n use comment::combine_strs_with_missing_comments;\n use imports::{merge_use_trees, UseTree};\n use items::{is_mod_decl, rewrite_extern_crate, rewrite_mod};\n use lists::{itemize_list, write_list, ListFormatting, ListItem};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::LineRangeUtils;\n use spanned::Spanned;\n use utils::mk_sp;\n use visitor::FmtVisitor;"}, {"sha": "f463732c0e497dbccd4fa9f4482fa592518c4b46", "filename": "src/rewrite.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -10,8 +10,8 @@\n \n // A generic trait to abstract the rewriting of an element (of the AST).\n \n-use syntax::source_map::{SourceMap, Span};\n use syntax::parse::ParseSess;\n+use syntax::source_map::{SourceMap, Span};\n \n use config::{Config, IndentStyle};\n use shape::Shape;"}, {"sha": "dee5e4f760110beec27e9fe37115842ba48b12c9", "filename": "src/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsource_map.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! This module contains utilities that work with the `SourceMap` from `libsyntax` / `syntex_syntax`.\n+//! This module contains utilities that work with the `SourceMap` from `libsyntax`/`syntex_syntax`.\n //! This includes extension traits and methods for looking up spans and line ranges for AST nodes.\n \n use config::file_lines::LineRange;"}, {"sha": "8b2358f1ada3a5a025fc33b9b268cdb278b85a8e", "filename": "src/test/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -20,9 +20,9 @@ use std::path::{Path, PathBuf};\n use std::str::Chars;\n \n use config::{Color, Config, EmitMode, FileName, ReportTactic};\n-use source_file;\n-use formatting::{SourceFile, ModifiedChunk};\n+use formatting::{ModifiedChunk, SourceFile};\n use rustfmt_diff::{make_diff, print_diff, DiffLine, Mismatch, OutputWriter};\n+use source_file;\n use {FormatReport, Input, Session};\n \n const DIFF_CONTEXT_SIZE: usize = 3;"}, {"sha": "dd7f60a60b4fd671f9f7fffdee1835333613d625", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -16,7 +16,6 @@ use syntax::ast::{self, FunctionRetTy, Mutability};\n use syntax::source_map::{self, BytePos, Span};\n use syntax::symbol::keywords;\n \n-use source_map::SpanUtils;\n use config::{IndentStyle, TypeDensity};\n use expr::{rewrite_assign_rhs, rewrite_tuple, rewrite_unary_prefix, ToExpr};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n@@ -25,6 +24,7 @@ use overflow;\n use pairs::{rewrite_pair, PairParts};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{\n     colon_spaces, extra_offset, first_line_width, format_abi, format_mutability,"}, {"sha": "63b238a781761d8e73f7684b445ef9df6e3a3f7b", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -15,8 +15,8 @@ use syntax::ast::{\n     self, Attribute, CrateSugar, MetaItem, MetaItemKind, NestedMetaItem, NestedMetaItemKind, Path,\n     Visibility, VisibilityKind,\n };\n-use syntax::source_map::{BytePos, Span, NO_EXPANSION};\n use syntax::ptr;\n+use syntax::source_map::{BytePos, Span, NO_EXPANSION};\n \n use comment::filter_normal_code;\n use rewrite::RewriteContext;"}, {"sha": "e76f44ca39b05f6ebda4464817e3715975ff5796", "filename": "src/vertical.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -16,13 +16,13 @@ use config::lists::*;\n use syntax::ast;\n use syntax::source_map::{BytePos, Span};\n \n-use source_map::SpanUtils;\n use comment::{combine_strs_with_missing_comments, contains_comment};\n use expr::rewrite_field;\n use items::{rewrite_struct_field, rewrite_struct_field_prefix};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n+use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{contains_skip, is_attributes_extendable, mk_sp, rewrite_ident};\n "}, {"sha": "7f557747778dc467bc53414c7b0420bb16f19c43", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1909d311cebd2920b968b8fe161267c12c5fe1/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=fc1909d311cebd2920b968b8fe161267c12c5fe1", "patch": "@@ -9,12 +9,11 @@\n // except according to those terms.\n \n use syntax::attr::HasAttrs;\n-use syntax::source_map::{self, BytePos, SourceMap, Pos, Span};\n use syntax::parse::ParseSess;\n+use syntax::source_map::{self, BytePos, Pos, SourceMap, Span};\n use syntax::{ast, visit};\n \n use attr::*;\n-use source_map::{LineRangeUtils, SpanUtils};\n use comment::{CodeCharKind, CommentCodeSlices, FindUncommented};\n use config::{BraceStyle, Config};\n use items::{\n@@ -26,6 +25,7 @@ use items::{\n use macros::{rewrite_macro, rewrite_macro_def, MacroPosition};\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n+use source_map::{LineRangeUtils, SpanUtils};\n use spanned::Spanned;\n use utils::{\n     self, contains_skip, count_newlines, inner_attributes, mk_sp, ptr_vec_to_ref_vec,"}]}