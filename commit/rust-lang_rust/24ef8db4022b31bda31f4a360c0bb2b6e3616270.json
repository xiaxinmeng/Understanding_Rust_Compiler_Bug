{"sha": "24ef8db4022b31bda31f4a360c0bb2b6e3616270", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZWY4ZGI0MDIyYjMxYmRhMzFmNGEzNjBjMGJiMmI2ZTM2MTYyNzA=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-17T20:33:50Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-17T20:33:50Z"}, "message": "Do not mark as_ref as useless if it's followed by a method call", "tree": {"sha": "6cd87e9da9038c4f91853770529d823299c569a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cd87e9da9038c4f91853770529d823299c569a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24ef8db4022b31bda31f4a360c0bb2b6e3616270", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJcGAguAAoJENWyu1zcMzS8wSEH/Al0Io5t8pJs0Ps70dG1jTps\nI4rAowIVi8ehqCACAHwT4YVpx4V/TX+0SlTCEDwtpHftMLrkbfv4TyAUKcaM1/RK\npvX7iOKq5mhM7ARD5HmKAW1X8eT5509uINdDFRexc8YZObu9t+6hmSPP9MH/HM3d\n7rFa0AxmTlqrrOZt/ZpIc/Ts3Occ2ATMPuxIdOtxQdmKSyR8c1fT/4bhh6cTdZoC\n2mT7IorH23Bs2hVnwptcT9ZcEZiERb9IVG4S+uzj4vwKTFyoMVE0Ig/3HdjQmYLh\nUQRuACkucboRY2yj4XwHSJdD8WzmTvbE8gECQqMX4R5aIHjERAm9NwvqVB0UYeA=\n=fWiv\n-----END PGP SIGNATURE-----", "payload": "tree 6cd87e9da9038c4f91853770529d823299c569a8\nparent 091fd0360b0f457ff77ba85d7a01ff39e26677eb\nauthor Wilco Kusee <wilcokusee@gmail.com> 1545078830 +0100\ncommitter Wilco Kusee <wilcokusee@gmail.com> 1545078830 +0100\n\nDo not mark as_ref as useless if it's followed by a method call\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24ef8db4022b31bda31f4a360c0bb2b6e3616270", "html_url": "https://github.com/rust-lang/rust/commit/24ef8db4022b31bda31f4a360c0bb2b6e3616270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24ef8db4022b31bda31f4a360c0bb2b6e3616270/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "091fd0360b0f457ff77ba85d7a01ff39e26677eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/091fd0360b0f457ff77ba85d7a01ff39e26677eb", "html_url": "https://github.com/rust-lang/rust/commit/091fd0360b0f457ff77ba85d7a01ff39e26677eb"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "9763392bfdf72472aaf418b6fe709f4fee1c4ede", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/24ef8db4022b31bda31f4a360c0bb2b6e3616270/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ef8db4022b31bda31f4a360c0bb2b6e3616270/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=24ef8db4022b31bda31f4a360c0bb2b6e3616270", "patch": "@@ -19,11 +19,11 @@ use crate::syntax::symbol::LocalInternedString;\n use crate::utils::paths;\n use crate::utils::sugg;\n use crate::utils::{\n-    get_arg_name, get_trait_def_id, implements_trait, in_macro, is_copy, is_expn_of, is_self, is_self_ty,\n-    iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath, match_trait_method, match_type,\n-    match_var, method_calls, method_chain_args, remove_blocks, return_ty, same_tys, single_segment_path, snippet,\n-    snippet_with_applicability, snippet_with_macro_callsite, span_lint, span_lint_and_sugg, span_lint_and_then,\n-    span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth, SpanlessEq,\n+    get_arg_name, get_parent_expr, get_trait_def_id, implements_trait, in_macro, is_copy, is_expn_of, is_self,\n+    is_self_ty, iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath, match_trait_method,\n+    match_type, match_var, method_calls, method_chain_args, remove_blocks, return_ty, same_tys, single_segment_path,\n+    snippet, snippet_with_applicability, snippet_with_macro_callsite, span_lint, span_lint_and_sugg,\n+    span_lint_and_then, span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth, SpanlessEq,\n };\n use if_chain::if_chain;\n use matches::matches;\n@@ -859,8 +859,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             [\"nth\", \"iter_mut\"] => lint_iter_nth(cx, expr, arg_lists[1], true),\n             [\"next\", \"skip\"] => lint_iter_skip_next(cx, expr),\n             [\"collect\", \"cloned\"] => lint_iter_cloned_collect(cx, expr, arg_lists[1]),\n-            [\"as_ref\", ..] => lint_asref(cx, expr, \"as_ref\", arg_lists[0]),\n-            [\"as_mut\", ..] => lint_asref(cx, expr, \"as_mut\", arg_lists[0]),\n+            [\"as_ref\"] => lint_asref(cx, expr, \"as_ref\", arg_lists[0]),\n+            [\"as_mut\"] => lint_asref(cx, expr, \"as_mut\", arg_lists[0]),\n             [\"fold\", ..] => lint_unnecessary_fold(cx, expr, arg_lists[0]),\n             [\"filter_map\", ..] => unnecessary_filter_map::lint(cx, expr, arg_lists[0]),\n             _ => {},\n@@ -2181,6 +2181,16 @@ fn lint_asref(cx: &LateContext<'_, '_>, expr: &hir::Expr, call_name: &str, as_re\n         let (base_res_ty, res_depth) = walk_ptrs_ty_depth(res_ty);\n         let (base_rcv_ty, rcv_depth) = walk_ptrs_ty_depth(rcv_ty);\n         if base_rcv_ty == base_res_ty && rcv_depth >= res_depth {\n+            // allow the `as_ref` or `as_mut` if it is followed by another method call\n+            if_chain! {\n+                if let Some(parent) = get_parent_expr(cx, expr);\n+                if let hir::ExprKind::MethodCall(_, ref span, _) = parent.node;\n+                if span != &expr.span;\n+                then {\n+                    return;\n+                }\n+            }\n+\n             let mut applicability = Applicability::MachineApplicable;\n             span_lint_and_sugg(\n                 cx,"}, {"sha": "d7e56af25903a777c8f6008aa9c50e2864b7a2ec", "filename": "tests/ui/useful_asref.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/24ef8db4022b31bda31f4a360c0bb2b6e3616270/tests%2Fui%2Fuseful_asref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ef8db4022b31bda31f4a360c0bb2b6e3616270/tests%2Fui%2Fuseful_asref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseful_asref.rs?ref=24ef8db4022b31bda31f4a360c0bb2b6e3616270", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(clippy::useless_asref)]\n+\n+trait Trait {\n+    fn as_ptr(&self);\n+}\n+\n+impl<'a> Trait for &'a [u8] {\n+    fn as_ptr(&self) {\n+        self.as_ref().as_ptr();\n+    }\n+}\n+\n+fn main() {}"}]}