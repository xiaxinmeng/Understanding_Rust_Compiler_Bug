{"sha": "6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MjBlZDRkY2ZlOTAxMzZmYjQ5ZTg4ZmM0NGIwMzI2MDM1YWM0Yzg=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-11-20T06:30:51Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-11-23T01:39:58Z"}, "message": "Fix up mingw64 target.", "tree": {"sha": "7ee0f76dedf75e82cfc80ff87ef4abd69f75e6fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee0f76dedf75e82cfc80ff87ef4abd69f75e6fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "html_url": "https://github.com/rust-lang/rust/commit/6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9069ca734fe89fe446c16dc821e54b973506f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9069ca734fe89fe446c16dc821e54b973506f5", "html_url": "https://github.com/rust-lang/rust/commit/cd9069ca734fe89fe446c16dc821e54b973506f5"}], "stats": {"total": 174, "additions": 125, "deletions": 49}, "files": [{"sha": "549dcf054e18e01af38434f84239ffe47494815b", "filename": "mk/platform.mk", "status": "modified", "additions": 67, "deletions": 23, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -257,7 +257,7 @@ CFG_LIB_NAME_i686-apple-darwin=lib$(1).dylib\n CFG_STATIC_LIB_NAME_i686-apple-darwin=lib$(1).a\n CFG_LIB_GLOB_i686-apple-darwin=lib$(1)-*.dylib\n CFG_LIB_DSYM_GLOB_i686-apple-darwin=lib$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_i686-apple-darwin := -Wall -Werror -g -fPIC -m32 -arch i386\n+CFG_GCCISH_CFLAGS_i686-apple-darwin := -Wall -g -fPIC -m32 -arch i386\n CFG_GCCISH_CXXFLAGS_i686-apple-darwin := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_i686-apple-darwin := -dynamiclib -pthread  -framework CoreServices -m32\n CFG_GCCISH_DEF_FLAG_i686-apple-darwin := -Wl,-exported_symbols_list,\n@@ -302,10 +302,11 @@ CFG_RUN_TARG_arm-linux-androideabi=\n RUSTC_FLAGS_arm-linux-androideabi :=--android-cross-path=$(CFG_ANDROID_CROSS_PATH)\n \n # arm-unknown-linux-gnueabihf configuration\n-CC_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-gcc\n-CXX_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-g++\n-CPP_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-gcc -E\n-AR_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-ar\n+CROSS_PREFIX_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-\n+CC_arm-unknown-linux-gnueabihf=gcc\n+CXX_arm-unknown-linux-gnueabihf=g++\n+CPP_arm-unknown-linux-gnueabihf=gcc -E\n+AR_arm-unknown-linux-gnueabihf=ar\n CFG_LIB_NAME_arm-unknown-linux-gnueabihf=lib$(1).so\n CFG_STATIC_LIB_NAME_arm-unknown-linux-gnueabihf=lib$(1).a\n CFG_LIB_GLOB_arm-unknown-linux-gnueabihf=lib$(1)-*.so\n@@ -324,15 +325,17 @@ CFG_WINDOWSY_arm-unknown-linux-gnueabihf :=\n CFG_UNIXY_arm-unknown-linux-gnueabihf := 1\n CFG_PATH_MUNGE_arm-unknown-linux-gnueabihf := true\n CFG_LDPATH_arm-unknown-linux-gnueabihf :=\n-CFG_RUN_arm-unknown-linux-gnueabihf=\n-CFG_RUN_TARG_arm-unknown-linux-gnueabihf=\n-RUSTC_FLAGS_arm-unknown-linux-gnueabihf := --linker=$(CC_arm-unknown-linux-gnueabihf)\n+CFG_RUN_arm-unknown-linux-gnueabihf=$(2)\n+CFG_RUN_TARG_arm-unknown-linux-gnueabihf=$(call CFG_RUN_arm-unknown-linux-gnueabihf,,$(2))\n+RUSTC_FLAGS_arm-unknown-linux-gnueabihf :=\n+RUSTC_CROSS_FLAGS_arm-unknown-linux-gnueabihf := --linker=$(CROSS_PREFIX_arm-unknown-linux-gnueabihf)$(CC_arm-unknown-linux-gnueabihf)\n \n # arm-unknown-linux-gnueabi configuration\n-CC_arm-unknown-linux-gnueabi=arm-linux-gnueabi-gcc\n-CXX_arm-unknown-linux-gnueabi=arm-linux-gnueabi-g++\n-CPP_arm-unknown-linux-gnueabi=arm-linux-gnueabi-gcc -E\n-AR_arm-unknown-linux-gnueabi=arm-linux-gnueabi-ar\n+CROSS_PREFIX_arm-unknown-linux-gnueabi=arm-linux-gnueabi-\n+CC_arm-unknown-linux-gnueabi=gcc\n+CXX_arm-unknown-linux-gnueabi=g++\n+CPP_arm-unknown-linux-gnueabi=gcc -E\n+AR_arm-unknown-linux-gnueabi=ar\n CFG_LIB_NAME_arm-unknown-linux-gnueabi=lib$(1).so\n CFG_STATIC_LIB_NAME_arm-unknown-linux-gnueabi=lib$(1).a\n CFG_LIB_GLOB_arm-unknown-linux-gnueabi=lib$(1)-*.so\n@@ -351,9 +354,10 @@ CFG_WINDOWSY_arm-unknown-linux-gnueabi :=\n CFG_UNIXY_arm-unknown-linux-gnueabi := 1\n CFG_PATH_MUNGE_arm-unknown-linux-gnueabi := true\n CFG_LDPATH_arm-unknown-linux-gnueabi :=\n-CFG_RUN_arm-unknown-linux-gnueabi=\n-CFG_RUN_TARG_arm-unknown-linux-gnueabi=\n-RUSTC_FLAGS_arm-unknown-linux-gnueabi := --linker=$(CC_arm-unknown-linux-gnueabi)\n+CFG_RUN_arm-unknown-linux-gnueabi=$(2)\n+CFG_RUN_TARG_arm-unknown-linux-gnueabi=$(call CFG_RUN_arm-unknown-linux-gnueabi,,$(2))\n+RUSTC_FLAGS_arm-unknown-linux-gnueabi :=\n+RUSTC_CROSS_FLAGS_arm-unknown-linux-gnueabi := --linker=$(CROSS_PREFIX_arm-unknown-linux-gnueabi)$(CC_arm-unknown-linux-gnueabi)\n \n # mips-unknown-linux-gnu configuration\n CC_mips-unknown-linux-gnu=mips-linux-gnu-gcc\n@@ -399,7 +403,7 @@ CFG_GCCISH_PRE_LIB_FLAGS_i686-pc-mingw32 :=\n CFG_GCCISH_POST_LIB_FLAGS_i686-pc-mingw32 :=\n CFG_DEF_SUFFIX_i686-pc-mingw32 := .mingw32.def\n CFG_INSTALL_NAME_i686-pc-mingw32 =\n-CFG_LIBUV_LINK_FLAGS_i686-pc-mingw32 := -lWs2_32 -lpsapi -liphlpapi\n+CFG_LIBUV_LINK_FLAGS_i686-pc-mingw32 := -lws2_32 -lpsapi -liphlpapi\n CFG_LLVM_BUILD_ENV_i686-pc-mingw32 := CPATH=$(CFG_SRC_DIR)src/etc/mingw-fix-include\n CFG_EXE_SUFFIX_i686-pc-mingw32 := .exe\n CFG_WINDOWSY_i686-pc-mingw32 := 1\n@@ -437,31 +441,61 @@ CFG_LDPATH_i586-mingw32msvc :=\n CFG_RUN_i586-mingw32msvc=\n CFG_RUN_TARG_i586-mingw32msvc=\n \n+# i686-w64-mingw32 configuration\n+CROSS_PREFIX_i686-w64-mingw32=i686-w64-mingw32-\n+CC_i686-w64-mingw32=gcc\n+CXX_i686-w64-mingw32=g++\n+CPP_i686-w64-mingw32=gcc -E\n+AR_i686-w64-mingw32=ar\n+CFG_LIB_NAME_i686-w64-mingw32=$(1).dll\n+CFG_STATIC_LIB_NAME_i686-w64-mingw32=$(1).lib\n+CFG_LIB_GLOB_i686-w64-mingw32=$(1)-*.dll\n+CFG_LIB_DSYM_GLOB_i686-w64-mingw32=$(1)-*.dylib.dSYM\n+CFG_GCCISH_CFLAGS_i686-w64-mingw32 := -Wall -g -m32 -D_WIN32_WINNT=0x0600\n+CFG_GCCISH_CXXFLAGS_i686-w64-mingw32 := -fno-rtti\n+CFG_GCCISH_LINK_FLAGS_i686-w64-mingw32 := -shared -g -m32\n+CFG_GCCISH_DEF_FLAG_i686-w64-mingw32 :=\n+CFG_GCCISH_PRE_LIB_FLAGS_i686-w64-mingw32 :=\n+CFG_GCCISH_POST_LIB_FLAGS_i686-w64-mingw32 :=\n+CFG_DEF_SUFFIX_i686-w64-mingw32 := .mingw32.def\n+CFG_INSTALL_NAME_i686-w64-mingw32 =\n+CFG_LIBUV_LINK_FLAGS_i686-w64-mingw32 := -lws2_32 -lpsapi -liphlpapi\n+CFG_EXE_SUFFIX_i686-w64-mingw32 := .exe\n+CFG_WINDOWSY_i686-w64-mingw32 := 1\n+CFG_UNIXY_i686-w64-mingw32 :=\n+CFG_PATH_MUNGE_i686-w64-mingw32 :=\n+CFG_LDPATH_i686-w64-mingw32 :=$(CFG_LDPATH_i686-w64-mingw32):$(PATH)\n+CFG_RUN_i686-w64-mingw32=PATH=\"$(CFG_LDPATH_i686-w64-mingw32):$(1)\" $(2)\n+CFG_RUN_TARG_i686-w64-mingw32=$(call CFG_RUN_i686-w64-mingw32,$(HLIB$(1)_H_$(CFG_BUILD)),$(2))\n+RUSTC_CROSS_FLAGS_i686-w64-mingw32 := --linker=$(CROSS_PREFIX_i686-w64-mingw32)$(CC_i686-w64-mingw32)\n+\n # x86_64-w64-mingw32 configuration\n-CC_x86_64-w64-mingw32=$(CC)\n-CXX_x86_64-w64-mingw32=$(CXX)\n-CPP_x86_64-w64-mingw32=$(CPP)\n-AR_x86_64-w64-mingw32=$(AR)\n+CROSS_PREFIX_x86_64-w64-mingw32=x86_64-w64-mingw32-\n+CC_x86_64-w64-mingw32=gcc\n+CXX_x86_64-w64-mingw32=g++\n+CPP_x86_64-w64-mingw32=gcc -E\n+AR_x86_64-w64-mingw32=ar\n CFG_LIB_NAME_x86_64-w64-mingw32=$(1).dll\n CFG_STATIC_LIB_NAME_x86_64-w64-mingw32=$(1).lib\n CFG_LIB_GLOB_x86_64-w64-mingw32=$(1)-*.dll\n CFG_LIB_DSYM_GLOB_x86_64-w64-mingw32=$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_x86_64-w64-mingw32 := -Wall -Werror -g -m64 -D_WIN32_WINNT=0x0600\n+CFG_GCCISH_CFLAGS_x86_64-w64-mingw32 := -Wall -g -m64 -D_WIN32_WINNT=0x0600\n CFG_GCCISH_CXXFLAGS_x86_64-w64-mingw32 := -fno-rtti\n-CFG_GCCISH_LINK_FLAGS_x86_64-w64-mingw32 := -shared -fPIC -g -m64\n+CFG_GCCISH_LINK_FLAGS_x86_64-w64-mingw32 := -shared -g -m64\n CFG_GCCISH_DEF_FLAG_x86_64-w64-mingw32 :=\n CFG_GCCISH_PRE_LIB_FLAGS_x86_64-w64-mingw32 :=\n CFG_GCCISH_POST_LIB_FLAGS_x86_64-w64-mingw32 :=\n CFG_DEF_SUFFIX_x86_64-w64-mingw32 := .mingw32.def\n CFG_INSTALL_NAME_x86_64-w64-mingw32 =\n-CFG_LIBUV_LINK_FLAGS_x86_64-w64-mingw32 := -lWs2_32 -lpsapi -liphlpapi\n+CFG_LIBUV_LINK_FLAGS_x86_64-w64-mingw32 := -lws2_32 -lpsapi -liphlpapi\n CFG_EXE_SUFFIX_x86_64-w64-mingw32 := .exe\n CFG_WINDOWSY_x86_64-w64-mingw32 := 1\n CFG_UNIXY_x86_64-w64-mingw32 :=\n CFG_PATH_MUNGE_x86_64-w64-mingw32 :=\n CFG_LDPATH_x86_64-w64-mingw32 :=$(CFG_LDPATH_x86_64-w64-mingw32):$(PATH)\n CFG_RUN_x86_64-w64-mingw32=PATH=\"$(CFG_LDPATH_x86_64-w64-mingw32):$(1)\" $(2)\n CFG_RUN_TARG_x86_64-w64-mingw32=$(call CFG_RUN_x86_64-w64-mingw32,$(HLIB$(1)_H_$(CFG_BUILD)),$(2))\n+RUSTC_CROSS_FLAGS_x86_64-w64-mingw32 := --linker=$(CROSS_PREFIX_x86_64-w64-mingw32)$(CC_x86_64-w64-mingw32)\n \n # x86_64-unknown-freebsd configuration\n CC_x86_64-unknown-freebsd=$(CC)\n@@ -499,6 +533,16 @@ ifdef CFG_CCACHE_BASEDIR\n endif\n \n define CFG_MAKE_TOOLCHAIN\n+  # Prepend the tools with their prefix if cross compiling\n+  ifneq ($(CFG_BUILD),$(1))\n+\tCC_$(1)=$(CROSS_PREFIX_$(1))$(CC_$(1))\n+\tCXX_$(1)=$(CROSS_PREFIX_$(1))$(CXX_$(1))\n+\tCPP_$(1)=$(CROSS_PREFIX_$(1))$(CPP_$(1))\n+\tAR_$(1)=$(CROSS_PREFIX_$(1))$(AR_$(1))\n+\n+\tRUSTC_FLAGS_$(1)=$(RUSTC_CROSS_FLAGS_$(1))\n+  endif\n+\n   CFG_COMPILE_C_$(1) = $$(CC_$(1))  \\\n         $$(CFG_GCCISH_CFLAGS)      \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\"}, {"sha": "db1119c81e7344ad74b5714ed2001c6a0b9dcfd7", "filename": "mk/rt.mk", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -24,21 +24,37 @@\n # working under these assumptions).\n \n # Hack for passing flags into LIBUV, see below.\n-LIBUV_FLAGS_i386 = -m32 -fPIC -I$(S)src/etc/mingw-fix-include\n-LIBUV_FLAGS_x86_64 = -m64 -fPIC\n-ifeq ($(OSTYPE_$(1)), linux-androideabi)\n-LIBUV_FLAGS_arm = -fPIC -DANDROID -std=gnu99\n-else ifeq ($(OSTYPE_$(1)), apple-darwin)\n-  ifeq ($(HOST_$(1)), arm)\n-    IOS_SDK := $(shell xcrun --show-sdk-path -sdk iphoneos 2>/dev/null)\n-    LIBUV_FLAGS_arm := -fPIC -std=gnu99 -I$(IOS_SDK)/usr/include -I$(IOS_SDK)/usr/include/c++/4.2.1\n-  else\n-    LIBUV_FLAGS_arm := -fPIC -std=gnu99\n-  endif\n+define DEF_LIBUV_FLAGS\n+ifeq ($(HOST_$(1)), i386)\n+\tifneq (,$(findstring mingw32,$(OSTYPE_$(1))))\n+\t\t# Don't add -fPIC since it's ignored for this target\n+\t\t# and it will just cause the build to fail due to -Werror\n+\t\tLIBUV_FLAGS_$(1) = -m32 -I$(S)src/etc/mingw-fix-include\n+\telse\n+\t\tLIBUV_FLAGS_$(1) = -m32 -fPIC -I$(S)src/etc/mingw-fix-include\n+\tendif\n+else ifeq ($(HOST_$(1)), x86_64)\n+\tifneq (,$(findstring mingw32,$(OSTYPE_$(1))))\n+\t\t# Don't add -fPIC since it's ignored for this target\n+\t\t# and it will just cause the build to fail due to -Werror\n+\t\tLIBUV_FLAGS_$(1) = -m64\n+\telse\n+\t\tLIBUV_FLAGS_$(1) = -m64 -fPIC\n+\tendif\n+else ifeq ($(HOST_$(1)), arm)\n+\tifeq ($(OSTYPE_$(1)), apple-darwin)\n+\t\tIOS_SDK := $(shell xcrun --show-sdk-path -sdk iphoneos 2>/dev/null)\n+\t\tLIBUV_FLAGS_$(1) = -fPIC -std=gnu99 -I$(IOS_SDK)/usr/include -I$(IOS_SDK)/usr/include/c++/4.2.1\n+\telse\n+\t\tLIBUV_FLAGS_$(1) = -fPIC -std=gnu99\n+\tendif\n+else ifeq ($(HOST_$(1)), mips)\n+\tLIBUV_FLAGS_$(1) = -fPIC -mips32r2 -msoft-float -mabi=32\n else\n-LIBUV_FLAGS_arm = -fPIC -std=gnu99\n+\tLIBUV_FLAGS_$(1) = -fPIC -std=gnu99\n endif\n-LIBUV_FLAGS_mips = -fPIC -mips32r2 -msoft-float -mabi=32\n+endef\n+$(foreach t,$(CFG_TARGET),$(eval $(call DEF_LIBUV_FLAGS,$(t))))\n \n # when we're doing a snapshot build, we intentionally degrade as many\n # features in libuv and the runtime as possible, to ease portability.\n@@ -222,15 +238,15 @@ $$(LIBUV_MAKEFILE_$(1)): $$(LIBUV_DEPS)\n ifdef CFG_WINDOWSY_$(1)\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv -f Makefile.mingw \\\n-\t\tCC=\"$$(CC) $$(CFG_GCCISH_CFLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n+\t\tCC=\"$$(CC_$(1)) $$(CFG_GCCISH_CFLAGS_$(1)) $$(LIBUV_FLAGS_$(1)) $$(SNAP_DEFINES)\" \\\n \t\tAR=\"$$(AR_$(1))\" \\\n \t\tV=$$(VERBOSE)\n \t$$(Q)cp $$(S)src/libuv/libuv.a $$@\n else\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS) $$(LIBUV_MAKEFILE_$(1))\n \t$$(Q)$$(MAKE) -C $$(@D) \\\n-\t\tCFLAGS=\"$$(CFG_GCCISH_CFLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n-\t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1)))\" \\\n+\t\tCFLAGS=\"$$(CFG_GCCISH_CFLAGS_$(1)) $$(LIBUV_FLAGS_$(1)) $$(SNAP_DEFINES)\" \\\n+\t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS_$(1)) $$(LIBUV_FLAGS_$(1))\" \\\n \t\tCC=\"$$(CC_$(1))\" \\\n \t\tCXX=\"$$(CXX_$(1))\" \\\n \t\tAR=\"$$(AR_$(1))\" \\"}, {"sha": "0a2894acb665708ec49c870043f1b896cb2e760f", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -85,11 +85,16 @@ pub fn default_configuration(sess: Session) ->\n         abi::Mips =>   (@\"big\",    @\"mips\",   @\"32\")\n     };\n \n+    let fam = match sess.targ_cfg.os {\n+        abi::OsWin32 => @\"windows\",\n+        _ => @\"unix\"\n+    };\n+\n     let mk = attr::mk_name_value_item_str;\n     return ~[ // Target bindings.\n-         attr::mk_word_item(os::FAMILY.to_managed()),\n+         attr::mk_word_item(fam),\n          mk(@\"target_os\", tos),\n-         mk(@\"target_family\", os::FAMILY.to_managed()),\n+         mk(@\"target_family\", fam),\n          mk(@\"target_arch\", arch),\n          mk(@\"target_endian\", end),\n          mk(@\"target_word_size\", wordsz),"}, {"sha": "3917efe9ca823966c48b0469faa9b2e9b0ba8511", "filename": "src/librustuv/uvll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Flibrustuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Flibrustuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvll.rs?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -724,5 +724,5 @@ extern {\n extern {}\n \n #[cfg(target_os = \"win32\")]\n-#[link_args = \"-lWs2_32 -lpsapi -liphlpapi\"]\n+#[link_args = \"-lws2_32 -lpsapi -liphlpapi\"]\n extern {}"}, {"sha": "bda0898ca5ccf78d1cf8ba5463f8e0a1f01e41d1", "filename": "src/rt/rust_upcall.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Frt%2Frust_upcall.c", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Frt%2Frust_upcall.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.c?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -25,14 +25,24 @@ typedef int _Unwind_Action;\n struct _Unwind_Context;\n struct _Unwind_Exception;\n \n-#ifdef __SEH__\n-#  define PERSONALITY_FUNC __gxx_personality_seh0\n+#if __USING_SJLJ_EXCEPTIONS__\n+#   define PERSONALITY_FUNC __gxx_personality_sj0\n #else\n-#  ifdef __USING_SJLJ_EXCEPTIONS__\n-#    define PERSONALITY_FUNC __gxx_personality_sjlj\n-#  else\n-#    define PERSONALITY_FUNC __gxx_personality_v0\n-#  endif\n+#   ifdef __SEH__\n+#       define PERSONALITY_FUNC __gxx_personality_seh0\n+#   else\n+#       define PERSONALITY_FUNC __gxx_personality_v0\n+#   endif\n+#endif\n+\n+#if __USING_SJLJ_EXCEPTIONS__\n+void _Unwind_SjLj_Resume(struct _Unwind_Exception* exception_object);\n+\n+void _Unwind_Resume(struct _Unwind_Exception* exception_object) {\n+    _Unwind_SjLj_Resume(exception_object);\n+}\n+#else\n+extern void _Unnwind_Resume(struct _Unwind_Exception* exception_object);\n #endif\n \n _Unwind_Reason_Code"}, {"sha": "53ce2067421c977fbd65ad25e2842ed4f8b08fad", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/6820ed4dcfe90136fb49e88fc44b0326035ac4c8/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=6820ed4dcfe90136fb49e88fc44b0326035ac4c8", "patch": "@@ -49,3 +49,4 @@ rust_get_test_int\n rust_pthread_mutex_t_size\n rust_pthread_cond_t_size\n rust_crit_section_size\n+_Unwind_Resume"}]}