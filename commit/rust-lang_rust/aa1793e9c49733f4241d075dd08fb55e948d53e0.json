{"sha": "aa1793e9c49733f4241d075dd08fb55e948d53e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMTc5M2U5YzQ5NzMzZjQyNDFkMDc1ZGQwOGZiNTVlOTQ4ZDUzZTA=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T17:48:54Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T17:48:54Z"}, "message": "Add run-rustfix to redundant_field_names", "tree": {"sha": "2c66ebfe864079b545377f3f1f650c821d6db99f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c66ebfe864079b545377f3f1f650c821d6db99f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa1793e9c49733f4241d075dd08fb55e948d53e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1793e9c49733f4241d075dd08fb55e948d53e0", "html_url": "https://github.com/rust-lang/rust/commit/aa1793e9c49733f4241d075dd08fb55e948d53e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa1793e9c49733f4241d075dd08fb55e948d53e0/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f17635f94ebcc9e70b8355d1d26b542ec83b396", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f17635f94ebcc9e70b8355d1d26b542ec83b396", "html_url": "https://github.com/rust-lang/rust/commit/6f17635f94ebcc9e70b8355d1d26b542ec83b396"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "5b4b8eeedd4696162ea63ca250f8cd1e5b61eb0d", "filename": "tests/ui/redundant_field_names.fixed", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/aa1793e9c49733f4241d075dd08fb55e948d53e0/tests%2Fui%2Fredundant_field_names.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/aa1793e9c49733f4241d075dd08fb55e948d53e0/tests%2Fui%2Fredundant_field_names.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.fixed?ref=aa1793e9c49733f4241d075dd08fb55e948d53e0", "patch": "@@ -0,0 +1,71 @@\n+// run-rustfix\n+#![warn(clippy::redundant_field_names)]\n+#![allow(clippy::no_effect, dead_code, unused_variables)]\n+\n+#[macro_use]\n+extern crate derive_new;\n+\n+use std::ops::{Range, RangeFrom, RangeInclusive, RangeTo, RangeToInclusive};\n+\n+mod foo {\n+    pub const BAR: u8 = 0;\n+}\n+\n+struct Person {\n+    gender: u8,\n+    age: u8,\n+    name: u8,\n+    buzz: u64,\n+    foo: u8,\n+}\n+\n+#[derive(new)]\n+pub struct S {\n+    v: String,\n+}\n+\n+fn main() {\n+    let gender: u8 = 42;\n+    let age = 0;\n+    let fizz: u64 = 0;\n+    let name: u8 = 0;\n+\n+    let me = Person {\n+        gender,\n+        age,\n+\n+        name,          //should be ok\n+        buzz: fizz,    //should be ok\n+        foo: foo::BAR, //should be ok\n+    };\n+\n+    // Range expressions\n+    let (start, end) = (0, 0);\n+\n+    let _ = start..;\n+    let _ = ..end;\n+    let _ = start..end;\n+\n+    let _ = ..=end;\n+    let _ = start..=end;\n+\n+    // Issue #2799\n+    let _: Vec<_> = (start..end).collect();\n+\n+    // hand-written Range family structs are linted\n+    let _ = RangeFrom { start };\n+    let _ = RangeTo { end };\n+    let _ = Range { start, end };\n+    let _ = RangeInclusive::new(start, end);\n+    let _ = RangeToInclusive { end };\n+}\n+\n+fn issue_3476() {\n+    fn foo<T>() {}\n+\n+    struct S {\n+        foo: fn(),\n+    }\n+\n+    S { foo: foo::<i32> };\n+}"}, {"sha": "3f97b80c56828c3842c451bb9b616bb3103e1eec", "filename": "tests/ui/redundant_field_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa1793e9c49733f4241d075dd08fb55e948d53e0/tests%2Fui%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa1793e9c49733f4241d075dd08fb55e948d53e0/tests%2Fui%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.rs?ref=aa1793e9c49733f4241d075dd08fb55e948d53e0", "patch": "@@ -1,6 +1,6 @@\n+// run-rustfix\n #![warn(clippy::redundant_field_names)]\n-#![allow(unused_variables)]\n-#![feature(inclusive_range, inclusive_range_fields, inclusive_range_methods)]\n+#![allow(clippy::no_effect, dead_code, unused_variables)]\n \n #[macro_use]\n extern crate derive_new;"}]}