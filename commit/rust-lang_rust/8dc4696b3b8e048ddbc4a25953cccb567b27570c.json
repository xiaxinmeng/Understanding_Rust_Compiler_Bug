{"sha": "8dc4696b3b8e048ddbc4a25953cccb567b27570c", "node_id": "C_kwDOAAsO6NoAKDhkYzQ2OTZiM2I4ZTA0OGRkYmM0YTI1OTUzY2NjYjU2N2IyNzU3MGM", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-04-26T00:08:46Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-04-26T00:08:46Z"}, "message": "Retry deleting a directory\n\nIt's possible that a file in the directory is pending deletion. In that case we might succeed after a few attempts.", "tree": {"sha": "7c27f1d9a2284f66d4a1eaded539f25e426541c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c27f1d9a2284f66d4a1eaded539f25e426541c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc4696b3b8e048ddbc4a25953cccb567b27570c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmJnOA4ACgkQcTRy8vRW\nJ94M5BAArizHVFrPgTl/Sino78+5Z/X9l5VpYNsypzKwniuN0hbmLw+pv3WyLCRD\nuZ2BJuSvI8sFK730rjlPuxPwRz40udwgA4CHgJBYf8hSVetAEhBhCzw81jeci7sZ\n7xVbLN2H0hX6XPhhuMzO180qwdYCcZFhax9elFiajxXFmaCrtkjhf8On8JbpJdeh\nHVnSLZu8pj7M+/xyiSWTN6IWPu0FQ876XAZUcl5edtpgcLOSXxP2YV6mzK6mJEsZ\nNs75RyJNkEqX5Frcws4rxLw4lhyVu4ojYB9+WTaoz/R4IVCVWHHXVO61cUL/97h8\nvhnkT/8qp3OyUU8MPWC+02OtDerHP6ueTvD49uL9BHgH0n0engg4WXfomER9jsuU\nhrJsKGuX4tUXrUks6KfxgCqHnUfdIsE0eVXtW5PxssBlmtwifH4V+z7K9IQ+xp2Y\ngBEDumFeUiHMcocLzWliGeL0R2qHbjt2qO0kyseBdEQrMzxzdVVM2c9fnfDNoLL0\nshR/kZ3Iprb/xHe6MlGQylzsyR6zOoyupPVTeoB2youeXk6GMPf2spN5HNsWgcrw\nX7D5c+KeBfXkgpULqy8oqQSMTHpa1tsfZ79UE2GnURRImqFI/cR/DWE8/NPavDHA\nPpJpu/CjP7eR8/muZqsgHfQXUbYV+w/9kSuixXl+xb6Yje8SgVs=\n=7RUP\n-----END PGP SIGNATURE-----", "payload": "tree 7c27f1d9a2284f66d4a1eaded539f25e426541c2\nparent 8b1f85caede44808e62542cfdff04787d70f8f7f\nauthor Chris Denton <christophersdenton@gmail.com> 1650931726 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1650931726 +0100\n\nRetry deleting a directory\n\nIt's possible that a file in the directory is pending deletion. In that case we might succeed after a few attempts.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc4696b3b8e048ddbc4a25953cccb567b27570c", "html_url": "https://github.com/rust-lang/rust/commit/8dc4696b3b8e048ddbc4a25953cccb567b27570c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc4696b3b8e048ddbc4a25953cccb567b27570c/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1f85caede44808e62542cfdff04787d70f8f7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1f85caede44808e62542cfdff04787d70f8f7f", "html_url": "https://github.com/rust-lang/rust/commit/8b1f85caede44808e62542cfdff04787d70f8f7f"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "e6f0f0f302391ee76f4b9673137644fb12bc4539", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8dc4696b3b8e048ddbc4a25953cccb567b27570c/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc4696b3b8e048ddbc4a25953cccb567b27570c/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=8dc4696b3b8e048ddbc4a25953cccb567b27570c", "patch": "@@ -1018,6 +1018,10 @@ pub fn remove_dir_all(path: &Path) -> io::Result<()> {\n }\n \n fn remove_dir_all_iterative(f: &File, delete: fn(&File) -> io::Result<()>) -> io::Result<()> {\n+    // When deleting files we may loop this many times when certain error conditions occur.\n+    // This allows remove_dir_all to succeed when the error is temporary.\n+    const MAX_RETRIES: u32 = 10;\n+\n     let mut buffer = DirBuff::new();\n     let mut dirlist = vec![f.duplicate()?];\n \n@@ -1040,7 +1044,6 @@ fn remove_dir_all_iterative(f: &File, delete: fn(&File) -> io::Result<()>) -> io\n                 )?;\n                 dirlist.push(child_dir);\n             } else {\n-                const MAX_RETRIES: u32 = 10;\n                 for i in 1..=MAX_RETRIES {\n                     let result = open_link_no_reparse(&dir, name, c::SYNCHRONIZE | c::DELETE);\n                     match result {\n@@ -1062,7 +1065,17 @@ fn remove_dir_all_iterative(f: &File, delete: fn(&File) -> io::Result<()>) -> io\n         // If there were no more files then delete the directory.\n         if !more_data {\n             if let Some(dir) = dirlist.pop() {\n-                delete(&dir)?;\n+                // Retry deleting a few times in case we need to wait for a file to be deleted.\n+                for i in 1..=MAX_RETRIES {\n+                    let result = delete(&dir);\n+                    if let Err(e) = result {\n+                        if i == MAX_RETRIES || e.kind() != io::ErrorKind::DirectoryNotEmpty {\n+                            return Err(e);\n+                        }\n+                    } else {\n+                        break;\n+                    }\n+                }\n             }\n         }\n     }"}]}