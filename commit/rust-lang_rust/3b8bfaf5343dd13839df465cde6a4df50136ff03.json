{"sha": "3b8bfaf5343dd13839df465cde6a4df50136ff03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiOGJmYWY1MzQzZGQxMzgzOWRmNDY1Y2RlNmE0ZGY1MDEzNmZmMDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-06T01:11:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-06T01:11:35Z"}, "message": "rt: Use an out pointer for rust_new_stack\n\nupcall_call_shim_on_c_stack does not handle return values", "tree": {"sha": "c63fe32d90310ae873f15ba05c813fdb8c447d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c63fe32d90310ae873f15ba05c813fdb8c447d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b8bfaf5343dd13839df465cde6a4df50136ff03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b8bfaf5343dd13839df465cde6a4df50136ff03", "html_url": "https://github.com/rust-lang/rust/commit/3b8bfaf5343dd13839df465cde6a4df50136ff03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b8bfaf5343dd13839df465cde6a4df50136ff03/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98cd96ce96c8be7248e3d375053938354c82878a", "url": "https://api.github.com/repos/rust-lang/rust/commits/98cd96ce96c8be7248e3d375053938354c82878a", "html_url": "https://github.com/rust-lang/rust/commit/98cd96ce96c8be7248e3d375053938354c82878a"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "30084ec2de0c147c86d48eb66f601659cbac4417", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=3b8bfaf5343dd13839df465cde6a4df50136ff03", "patch": "@@ -75,11 +75,12 @@ MORESTACK:\n \n \t// The arguments to rust_new_stack2\n \tmovl 40(%esp),%eax  // Size of stack arguments\n-\tmovl %eax,16(%esp)\n+\tmovl %eax,20(%esp)\n \tleal 48(%esp),%eax // Address of stack arguments\n-\tmovl %eax,12(%esp)\n+\tmovl %eax,16(%esp)\n \tmovl 36(%esp),%eax // The amount of stack needed\n-\tmovl %eax,8(%esp)\n+\tmovl %eax,12(%esp)\n+\tmovl $0, 8(%esp)   // Out pointer\n \n #ifdef __APPLE__\n \tcall 1f\n@@ -97,7 +98,7 @@ MORESTACK:\n \tmovl 32(%esp),%edx          // Grab the return pointer.\n \tinc  %edx    // Skip past the ret instruction in the parent fn\n \n-\tmovl %eax,%esp          // Switch stacks.\n+\tmovl 8(%esp),%esp          // Switch stacks.\n \tcall *%edx             // Re-enter the function that called us.\n \n \t// Now the function that called us has returned, so we need to delete the"}, {"sha": "ef0edcee7209a2c0029b9f9e8aba7897430e376a", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=3b8bfaf5343dd13839df465cde6a4df50136ff03", "patch": "@@ -81,9 +81,12 @@ MORESTACK:\n \tmovq %rbp, %rcx\n \taddq $24, %rcx  // Base pointer, return address x2\n \n+\tpushq $0 // Alignment\n+\n \tpushq %r11 // Size of stack arguments\n \tpushq %rcx // Address of stack arguments\n \tpushq %r10 // The amount of stack needed\n+\tpushq $0   // Out pointer\n \n \tmovq UPCALL_NEW_STACK@GOTPCREL(%rip), %rsi\n \tmovq %rsp, %rdi\n@@ -95,7 +98,8 @@ MORESTACK:\n #endif\n \n \t// Pop the new_stack_args struct\n-\taddq $24, %rsp\n+\tpopq %rax\n+\taddq $32, %rsp\n \n \t// Pop the saved arguments\n \tpopq %r9"}, {"sha": "670dbc3a24a81300aa79f0e91142554dd9d1db5a", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3b8bfaf5343dd13839df465cde6a4df50136ff03/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=3b8bfaf5343dd13839df465cde6a4df50136ff03", "patch": "@@ -217,28 +217,40 @@ extern \"C\" void record_sp(void *limit);\n  */\n extern \"C\" CDECL void\n upcall_call_shim_on_c_stack(void *args, void *fn_ptr) {\n+    rust_task *task = rust_scheduler::get_task();\n+\n     // FIXME (1226) - The shim functions generated by rustc contain the\n     // morestack prologue, so we need to let them know they have enough\n     // stack.\n-    record_sp(0);\n-    rust_task *task = rust_scheduler::get_task();\n+    //record_sp(0);\n+\n     rust_scheduler *sched = task->sched;\n-    sched->c_context.call_shim_on_c_stack(args, fn_ptr);\n-    task->record_stack_limit();\n+    try {\n+        sched->c_context.call_shim_on_c_stack(args, fn_ptr);\n+    } catch (...) {\n+        //task = rust_scheduler::get_task();\n+        //task->record_stack_limit();\n+        throw;\n+    }\n+    //task = rust_scheduler::get_task();\n+    //task->record_stack_limit();\n }\n \n struct rust_new_stack2_args {\n-  size_t stk_sz;\n-  void *args_addr;\n-  size_t args_sz;\n+    void *new_stack;\n+    size_t stk_sz;\n+    void *args_addr;\n+    size_t args_sz;\n };\n \n // A new stack function suitable for calling through\n // upcall_call_shim_on_c_stack\n-extern \"C\" CDECL void *\n+extern \"C\" CDECL void\n upcall_new_stack(struct rust_new_stack2_args *args) {\n     rust_task *task = rust_scheduler::get_task();\n-    return task->new_stack(args->stk_sz, args->args_addr, args->args_sz);\n+    args->new_stack = task->new_stack(args->stk_sz,\n+                                      args->args_addr,\n+                                      args->args_sz);\n }\n \n extern \"C\" CDECL void"}]}