{"sha": "877b2d79d98428cdc9b971a627a7adf10533aed8", "node_id": "C_kwDOAAsO6NoAKDg3N2IyZDc5ZDk4NDI4Y2RjOWI5NzFhNjI3YTdhZGYxMDUzM2FlZDg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-20T18:57:09Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-28T20:13:36Z"}, "message": "Remove eval_always for lib_features.", "tree": {"sha": "a17c3329fd88c7e4fd7a4487b233bad353eb08a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a17c3329fd88c7e4fd7a4487b233bad353eb08a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/877b2d79d98428cdc9b971a627a7adf10533aed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/877b2d79d98428cdc9b971a627a7adf10533aed8", "html_url": "https://github.com/rust-lang/rust/commit/877b2d79d98428cdc9b971a627a7adf10533aed8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/877b2d79d98428cdc9b971a627a7adf10533aed8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d2de9483a27f846f003fc745713339a9122473", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d2de9483a27f846f003fc745713339a9122473", "html_url": "https://github.com/rust-lang/rust/commit/e6d2de9483a27f846f003fc745713339a9122473"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "79c17f55c472cddbfff674414ba16b62e5d39614", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=877b2d79d98428cdc9b971a627a7adf10533aed8", "patch": "@@ -1751,7 +1751,7 @@ impl EncodeContext<'a, 'tcx> {\n     fn encode_lib_features(&mut self) -> Lazy<[(Symbol, Option<Symbol>)]> {\n         empty_proc_macro!(self);\n         let tcx = self.tcx;\n-        let lib_features = tcx.lib_features();\n+        let lib_features = tcx.lib_features(());\n         self.lazy(lib_features.to_vec())\n     }\n "}, {"sha": "268a66b99269bd28d5657f32f1fc1d33161b3559", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=877b2d79d98428cdc9b971a627a7adf10533aed8", "patch": "@@ -1485,9 +1485,8 @@ rustc_queries! {\n         desc { |tcx| \"computing crate imported by `{}`\", tcx.def_path_str(def_id.to_def_id()) }\n     }\n \n-    query get_lib_features(_: ()) -> LibFeatures {\n+    query lib_features(_: ()) -> LibFeatures {\n         storage(ArenaCacheSelector<'tcx>)\n-        eval_always\n         desc { \"calculating the lib features map\" }\n     }\n     query defined_lib_features(_: CrateNum)"}, {"sha": "822458d312778d609d4e70f14a3eeadc27ea73e1", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=877b2d79d98428cdc9b971a627a7adf10533aed8", "patch": "@@ -5,7 +5,6 @@ use crate::dep_graph::{DepGraph, DepKind, DepKindStruct};\n use crate::hir::place::Place as HirPlace;\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n use crate::lint::{struct_lint_level, LintDiagnosticBuilder, LintLevelSource};\n-use crate::middle;\n use crate::middle::resolve_lifetime::{self, LifetimeScopeForPath, ObjectLifetimeDefault};\n use crate::middle::stability;\n use crate::mir::interpret::{self, Allocation, ConstValue, Scalar};\n@@ -1217,10 +1216,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.sess.consider_optimizing(&cname, msg)\n     }\n \n-    pub fn lib_features(self) -> &'tcx middle::lib_features::LibFeatures {\n-        self.get_lib_features(())\n-    }\n-\n     /// Obtain all lang items of this crate and all dependencies (recursively)\n     pub fn lang_items(self) -> &'tcx rustc_hir::lang_items::LanguageItems {\n         self.get_lang_items(())"}, {"sha": "10b8c3104fcad1eba4031a54fdf9becd7e2f6c40", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=877b2d79d98428cdc9b971a627a7adf10533aed8", "patch": "@@ -124,12 +124,12 @@ impl Visitor<'tcx> for LibFeatureCollector<'tcx> {\n     }\n }\n \n-fn get_lib_features(tcx: TyCtxt<'_>, (): ()) -> LibFeatures {\n+fn lib_features(tcx: TyCtxt<'_>, (): ()) -> LibFeatures {\n     let mut collector = LibFeatureCollector::new(tcx);\n     tcx.hir().walk_attributes(&mut collector);\n     collector.lib_features\n }\n \n pub fn provide(providers: &mut Providers) {\n-    providers.get_lib_features = get_lib_features;\n+    providers.lib_features = lib_features;\n }"}, {"sha": "92911c3cd2455c7789ad572b10f87b5d221b9f0e", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877b2d79d98428cdc9b971a627a7adf10533aed8/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=877b2d79d98428cdc9b971a627a7adf10533aed8", "patch": "@@ -970,7 +970,7 @@ pub fn check_unused_or_stable_features(tcx: TyCtxt<'_>) {\n \n     // We always collect the lib features declared in the current crate, even if there are\n     // no unknown features, because the collection also does feature attribute validation.\n-    let local_defined_features = tcx.lib_features().to_vec();\n+    let local_defined_features = tcx.lib_features(()).to_vec();\n     if !remaining_lib_features.is_empty() {\n         check_features(&mut remaining_lib_features, &local_defined_features);\n "}]}