{"sha": "69046fa8fdb2505367a4375be78eae5b47e15fe7", "node_id": "C_kwDOAAsO6NoAKDY5MDQ2ZmE4ZmRiMjUwNTM2N2E0Mzc1YmU3OGVhZTViNDdlMTVmZTc", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-04-03T16:42:39Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-04-03T19:29:57Z"}, "message": "Cleanup after some refactoring in rustc_target", "tree": {"sha": "1c9dbc3c0b812078a8372a57e65337c62febf66c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c9dbc3c0b812078a8372a57e65337c62febf66c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69046fa8fdb2505367a4375be78eae5b47e15fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69046fa8fdb2505367a4375be78eae5b47e15fe7", "html_url": "https://github.com/rust-lang/rust/commit/69046fa8fdb2505367a4375be78eae5b47e15fe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69046fa8fdb2505367a4375be78eae5b47e15fe7/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7665d876389d3bb0674f33859c620e516394bcf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7665d876389d3bb0674f33859c620e516394bcf8", "html_url": "https://github.com/rust-lang/rust/commit/7665d876389d3bb0674f33859c620e516394bcf8"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5e1e1c81d26ea368e61f234f4ea7dc03be3010af", "filename": "src/driver/aot.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69046fa8fdb2505367a4375be78eae5b47e15fe7/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69046fa8fdb2505367a4375be78eae5b47e15fe7/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=69046fa8fdb2505367a4375be78eae5b47e15fe7", "patch": "@@ -304,8 +304,12 @@ pub(crate) fn run_aot(\n     };\n \n     // FIXME handle `-Ctarget-cpu=native`\n-    let target_cpu =\n-        tcx.sess.opts.cg.target_cpu.as_ref().unwrap_or(&tcx.sess.target.cpu).to_owned();\n+    let target_cpu = match tcx.sess.opts.cg.target_cpu {\n+        Some(ref name) => name,\n+        None => tcx.sess.target.cpu.as_ref(),\n+    }\n+    .to_owned();\n+\n     Box::new((\n         CodegenResults {\n             modules,"}]}