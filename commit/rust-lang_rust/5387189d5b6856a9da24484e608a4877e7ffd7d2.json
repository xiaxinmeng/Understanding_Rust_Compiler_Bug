{"sha": "5387189d5b6856a9da24484e608a4877e7ffd7d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzODcxODlkNWI2ODU2YTlkYTI0NDg0ZTYwOGE0ODc3ZTdmZmQ3ZDI=", "commit": {"author": {"name": "Dave Huseby", "email": "dhuseby@mozilla.com", "date": "2015-03-23T19:48:42Z"}, "committer": {"name": "Dave Huseby", "email": "dhuseby@mozilla.com", "date": "2015-04-04T19:33:44Z"}, "message": "fixing some tests and temporarily disabling others to get Bitrig build working 100%", "tree": {"sha": "ad885e52f1340edee3e4dd9456c81c7e13ca1816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad885e52f1340edee3e4dd9456c81c7e13ca1816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5387189d5b6856a9da24484e608a4877e7ffd7d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5387189d5b6856a9da24484e608a4877e7ffd7d2", "html_url": "https://github.com/rust-lang/rust/commit/5387189d5b6856a9da24484e608a4877e7ffd7d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5387189d5b6856a9da24484e608a4877e7ffd7d2/comments", "author": null, "committer": null, "parents": [{"sha": "b3315881f53d6a708190d8dfd7305603a25d6b4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3315881f53d6a708190d8dfd7305603a25d6b4c", "html_url": "https://github.com/rust-lang/rust/commit/b3315881f53d6a708190d8dfd7305603a25d6b4c"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "d99f06bd853b71d0f6bf8e025abdf89b97906f2e", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -382,7 +382,8 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n \n             // write debugger script\n             let mut script_str = String::with_capacity(2048);\n-            script_str.push_str(\"set charset UTF-8\\n\");\n+            let charset = if cfg!(target_os = \"bitrig\") { \"auto\" } else { \"UTF-8\" };\n+            script_str.push_str(&format!(\"set charset {}\\n\", charset));\n             script_str.push_str(&format!(\"file {}\\n\", exe_file.to_str().unwrap()));\n             script_str.push_str(\"target remote :5039\\n\");\n             script_str.push_str(&format!(\"set solib-search-path \\\n@@ -516,8 +517,8 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                                                        .to_string();\n             // write debugger script\n             let mut script_str = String::with_capacity(2048);\n-\n-            script_str.push_str(\"set charset UTF-8\\n\");\n+            let charset = if cfg!(target_os = \"bitrig\") { \"auto\" } else { \"UTF-8\" };\n+            script_str.push_str(&format!(\"set charset {}\\n\", charset));\n             script_str.push_str(\"show version\\n\");\n \n             match config.gdb_version {"}, {"sha": "6121105f10b956c4cefb6ce859e9753726ee85ad", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -381,7 +381,8 @@ mod tests {\n     use prelude::v1::*;\n \n     #[cfg_attr(any(target_os = \"freebsd\",\n-                   target_os = \"openbsd\"),\n+                   target_os = \"openbsd\",\n+                   target_os = \"bitrig\"),\n                ignore)]\n     // under some system, pipe(2) will return a bidrectionnal pipe\n     #[test]"}, {"sha": "0d8b42a9f767214c19871ef683ca0e5143002a5a", "filename": "src/test/debuginfo/gdb-pretty-struct-and-enums-pre-gdb-7-7.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums-pre-gdb-7-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums-pre-gdb-7-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums-pre-gdb-7-7.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -12,6 +12,7 @@\n // older versions of GDB too. A more extensive test can be found in\n // gdb-pretty-struct-and-enums.rs\n \n+// ignore-bitrig\n // ignore-windows failing on win32 bot\n // ignore-freebsd: gdb package too new\n // ignore-tidy-linelength"}, {"sha": "5d2908b92ef3ee1d98077e346bf83554dda9fbae", "filename": "src/test/parse-fail/issue-5806.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Fparse-fail%2Fissue-5806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Fparse-fail%2Fissue-5806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-5806.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -11,6 +11,7 @@\n // ignore-windows\n // ignore-freebsd\n // ignore-openbsd\n+// ignore-bitrig\n \n #[path = \"../compile-fail\"]\n mod foo; //~ ERROR: a directory"}, {"sha": "56c09b895f1417005d324c4e326f2f8cdcec3bdc", "filename": "src/test/run-make/c-link-to-rust-staticlib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,7 +8,7 @@ endif\n ifneq ($(shell uname),FreeBSD)\n all:\n \t$(RUSTC) foo.rs\n-\t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRAFLAGS) -lstdc++\n+\t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRAFLAGS) $(EXTRACXXFLAGS)\n \t$(call RUN,bar)\n \trm $(call STATICLIB,foo*)\n \t$(call RUN,bar)"}, {"sha": "6ea3cf48ffbbd41d2d3179b81a3cb81eecbde1d2", "filename": "src/test/run-make/issue-14500/Makefile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -6,6 +6,10 @@\n # is compiled with LTO, it shouldn't strip the symbol from `foo`, and that's the\n # only way that `foo.c` will successfully compile.\n \n+ifeq ($(UNAME),Bitrig)\n+\tEXTRACFLAGS := -lc $(EXTRACFLAGS) $(EXTRACXXFLAGS)\n+endif\n+\n all:\n \t$(RUSTC) foo.rs --crate-type=rlib\n \t$(RUSTC) bar.rs --crate-type=staticlib -C lto -L. -o $(TMPDIR)/libbar.a"}, {"sha": "6165afbeb222f56ddf1c9d9f79fd429a324a441c", "filename": "src/test/run-make/lto-smoke-c/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -5,5 +5,5 @@ CC := $(CC:-g=)\n \n all:\n \t$(RUSTC) foo.rs -C lto\n-\t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRACFLAGS) -lstdc++\n+\t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRACFLAGS) $(EXTRACXXFLAGS)\n \t$(call RUN,bar)"}, {"sha": "a2e1fe5627186f3b42d4f6ec0e3389139ece0143", "filename": "src/test/run-make/no-stack-check/Makefile", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fno-stack-check%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fno-stack-check%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-stack-check%2FMakefile?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -1,7 +1,11 @@\n -include ../tools.mk\n \n+\n ifndef IS_WINDOWS\n-ifneq ($(UNAME),OpenBSD)\n+\n+SKIP_OS := 'OpenBSD Bitrig'\n+ifneq ($(UNAME),$(findstring $(UNAME),$(SKIP_OS)))\n+\n all:\n \t$(RUSTC) -O --emit asm attr.rs\n \t! grep -q morestack $(TMPDIR)/attr.s\n@@ -10,9 +14,10 @@ all:\n \t$(RUSTC) -O --emit asm -C no-stack-check flag.rs\n \t! grep -q morestack $(TMPDIR)/flag.s\n else\n-# On OpenBSD, morestack isn't used as the segmented stacks are disabled\n+# On Bitrig/OpenBSD, morestack isn't used as the segmented stacks are disabled\n all:\n endif\n+\n else\n # On Windows we use __chkstk and it only appears in functions with large allocations,\n # so this test wouldn't be reliable."}, {"sha": "223296286bd89aeb81b7717938766074bdce784f", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -55,15 +55,21 @@ endif\n ifdef IS_WINDOWS\n \tEXTRACFLAGS := -lws2_32 -luserenv\n else\n-ifeq ($(shell uname),Darwin)\n+ifeq ($(UNAME),Darwin)\n else\n-ifeq ($(shell uname),FreeBSD)\n+ifeq ($(UNAME),FreeBSD)\n \tEXTRACFLAGS := -lm -lpthread -lgcc_s\n else\n-ifeq ($(shell uname),OpenBSD)\n+ifeq ($(UNAME),Bitrig)\n+\tEXTRACFLAGS := -lm -lpthread\n+\tEXTRACXXFLAGS := -lc++ -lc++abi\n+else\n+ifeq ($(UNAME),OpenBSD)\n \tEXTRACFLAGS := -lm -lpthread\n else\n \tEXTRACFLAGS := -lm -lrt -ldl -lpthread\n+\tEXTRACXXFLAGS := -lstdc++\n+endif\n endif\n endif\n endif"}, {"sha": "c67bd3d82ef6be609be7a5f1e14fff085aca69bb", "filename": "src/test/run-make/use-extern-for-plugins/Makefile", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -1,6 +1,9 @@\n -include ../tools.mk\n \n-ifneq ($(findstring BSD,$(UNAME)),BSD)\n+SKIP_OS := 'FreeBSD OpenBSD Bitrig'\n+\n+ifneq ($(UNAME),$(findstring $(UNAME),$(SKIP_OS)))\n+\n HOST := $(shell $(RUSTC) -vV | grep 'host:' | sed 's/host: //')\n ifeq ($(findstring i686,$(HOST)),i686)\n TARGET := $(subst i686,x86_64,$(HOST))\n@@ -13,6 +16,6 @@ all:\n \t$(RUSTC) bar.rs -C extra-filename=-targ --target $(TARGET)\n \t$(RUSTC) baz.rs --extern a=$(TMPDIR)/liba-targ.rlib --target $(TARGET)\n else\n-# FreeBSD & OpenBSD support only x86_64 architecture for now\n+# FreeBSD, OpenBSD, and Bitrig support only x86_64 architecture for now\n all:\n endif"}, {"sha": "a4d74dbd55ae1d2b8824c4e11556a8ceeee580ec", "filename": "src/test/run-pass/sepcomp-cci.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n // aux-build:sepcomp_cci_lib.rs\n "}, {"sha": "3ec27466f4ced11821ba56b52a50d616e1330ae8", "filename": "src/test/run-pass/sepcomp-extern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n // aux-build:sepcomp-extern-lib.rs\n "}, {"sha": "cd101bb20642fac65e44d40f833788a834c9bc4f", "filename": "src/test/run-pass/sepcomp-fns-backwards.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n \n // Test references to items that haven't been translated yet."}, {"sha": "b76c24bfc18b55ee6633e87d5d6f34401f010a05", "filename": "src/test/run-pass/sepcomp-fns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n \n // Test basic separate compilation functionality.  The functions should be able"}, {"sha": "f10f25a58bf7ee1a9bf76df6e5a89a0df13f74b2", "filename": "src/test/run-pass/sepcomp-statics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n \n // Test references to static items across compilation units."}, {"sha": "9663679d09a7eeea28a4d2168845e71e5fdecfa1", "filename": "src/test/run-pass/sepcomp-unwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-bitrig\n // compile-flags: -C codegen-units=3\n \n // Test unwinding through multiple compilation units."}, {"sha": "f6952ad64f1f3ed0ab35dcca246fadc07650a346", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5387189d5b6856a9da24484e608a4877e7ffd7d2/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=5387189d5b6856a9da24484e608a4877e7ffd7d2", "patch": "@@ -11,6 +11,7 @@\n // ignore-linux see joyent/libuv#1189\n // ignore-android needs extra network permissions\n // ignore-openbsd system ulimit (Too many open files)\n+// ignore-bitrig system ulimit (Too many open files)\n // exec-env:RUST_LOG=debug\n \n #![feature(rustc_private, libc, old_io, io, std_misc)]"}]}