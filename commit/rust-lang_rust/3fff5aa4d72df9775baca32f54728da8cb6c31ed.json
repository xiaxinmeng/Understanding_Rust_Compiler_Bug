{"sha": "3fff5aa4d72df9775baca32f54728da8cb6c31ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmY1YWE0ZDcyZGY5Nzc1YmFjYTMyZjU0NzI4ZGE4Y2I2YzMxZWQ=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2020-09-16T16:50:24Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2020-09-16T16:58:41Z"}, "message": "Use Ty::apply instead of simple and fix method resolution.", "tree": {"sha": "cdbff6b12254ec46062a45e820353e59acd12db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdbff6b12254ec46062a45e820353e59acd12db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fff5aa4d72df9775baca32f54728da8cb6c31ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fff5aa4d72df9775baca32f54728da8cb6c31ed", "html_url": "https://github.com/rust-lang/rust/commit/3fff5aa4d72df9775baca32f54728da8cb6c31ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fff5aa4d72df9775baca32f54728da8cb6c31ed/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb969647561f46c783469469284538ed95d77076", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb969647561f46c783469469284538ed95d77076", "html_url": "https://github.com/rust-lang/rust/commit/eb969647561f46c783469469284538ed95d77076"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "708e2af0fa9cfc16a95950dbe0dec21d152fc8d7", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=3fff5aa4d72df9775baca32f54728da8cb6c31ed", "patch": "@@ -1102,13 +1102,13 @@ fn type_for_type_alias(db: &dyn HirDatabase, t: TypeAliasId) -> Binders<Ty> {\n     let ctx =\n         TyLoweringContext::new(db, &resolver).with_type_param_mode(TypeParamLoweringMode::Variable);\n     let substs = Substs::bound_vars(&generics, DebruijnIndex::INNERMOST);\n-    let inner = if db.type_alias_data(t).is_extern {\n-        Ty::simple(TypeCtor::ForeignType(t))\n+    if db.type_alias_data(t).is_extern {\n+        Binders::new(substs.len(), Ty::apply(TypeCtor::ForeignType(t), substs))\n     } else {\n         let type_ref = &db.type_alias_data(t).type_ref;\n-        Ty::from_hir(&ctx, type_ref.as_ref().unwrap_or(&TypeRef::Error))\n-    };\n-    Binders::new(substs.len(), inner)\n+        let inner = Ty::from_hir(&ctx, type_ref.as_ref().unwrap_or(&TypeRef::Error));\n+        Binders::new(substs.len(), inner)\n+    }\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]"}, {"sha": "8961df404987c9459540a1ad6c6073291b30e93d", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=3fff5aa4d72df9775baca32f54728da8cb6c31ed", "patch": "@@ -250,6 +250,14 @@ impl Ty {\n                 TypeCtor::Adt(def_id) => {\n                     return Some(std::iter::once(def_id.module(db.upcast()).krate).collect())\n                 }\n+                TypeCtor::ForeignType(type_alias_id) => {\n+                    return Some(\n+                        std::iter::once(\n+                            type_alias_id.lookup(db.upcast()).module(db.upcast()).krate,\n+                        )\n+                        .collect(),\n+                    )\n+                }\n                 TypeCtor::Bool => lang_item_crate!(\"bool\"),\n                 TypeCtor::Char => lang_item_crate!(\"char\"),\n                 TypeCtor::Float(f) => match f.bitness {"}, {"sha": "0f17ff1517b3c64429ecdd1b8853c2a0677b3587", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff5aa4d72df9775baca32f54728da8cb6c31ed/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=3fff5aa4d72df9775baca32f54728da8cb6c31ed", "patch": "@@ -1072,7 +1072,6 @@ fn method_resolution_foreign_opaque_type() {\n             s.foo();\n         }\n         \"#,\n-        // FIXME: 's.foo()' should be `bool`.\n         expect![[r#\"\n             75..79 'self': &S\n             89..109 '{     ...     }': bool\n@@ -1084,8 +1083,7 @@ fn method_resolution_foreign_opaque_type() {\n             146..147 'f': fn f() -> &S\n             146..149 'f()': &S\n             157..158 's': &S\n-            157..164 's.foo()': {unknown}\n+            157..164 's.foo()': bool\n         \"#]],\n     );\n }\n-"}]}