{"sha": "7fe41279c5b6cca8c16f94f12ef4bf8811943599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZTQxMjc5YzViNmNjYThjMTZmOTRmMTJlZjRiZjg4MTE5NDM1OTk=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-04-17T18:53:31Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-04-17T18:53:31Z"}, "message": "Make -Zprofile set codegen-units to 1", "tree": {"sha": "fd471781af80c5f1c4799e2fc7605e135ef7237e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd471781af80c5f1c4799e2fc7605e135ef7237e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fe41279c5b6cca8c16f94f12ef4bf8811943599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fe41279c5b6cca8c16f94f12ef4bf8811943599", "html_url": "https://github.com/rust-lang/rust/commit/7fe41279c5b6cca8c16f94f12ef4bf8811943599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fe41279c5b6cca8c16f94f12ef4bf8811943599/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d67f576b56e8fc98a31123e5963f8d00e40611c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d67f576b56e8fc98a31123e5963f8d00e40611c", "html_url": "https://github.com/rust-lang/rust/commit/8d67f576b56e8fc98a31123e5963f8d00e40611c"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "ba2a4d1d56f2395d6d05a87ca815d5c97ff1d483", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7fe41279c5b6cca8c16f94f12ef4bf8811943599/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fe41279c5b6cca8c16f94f12ef4bf8811943599/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=7fe41279c5b6cca8c16f94f12ef4bf8811943599", "patch": "@@ -1655,7 +1655,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n     let output_types = parse_output_types(&debugging_opts, matches, error_format);\n \n     let mut cg = build_codegen_options(matches, error_format);\n-    let (disable_thinlto, codegen_units) = should_override_cgus_and_disable_thinlto(\n+    let (disable_thinlto, mut codegen_units) = should_override_cgus_and_disable_thinlto(\n         &output_types,\n         matches,\n         error_format,\n@@ -1672,6 +1672,16 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n             \"can't instrument with gcov profiling when compiling incrementally\",\n         );\n     }\n+    if debugging_opts.profile {\n+        match codegen_units {\n+            Some(1) => {}\n+            None => codegen_units = Some(1),\n+            Some(_) => early_error(\n+                error_format,\n+                \"can't instrument with gcov profiling with multiple codegen units\",\n+            ),\n+        }\n+    }\n \n     if cg.profile_generate.enabled() && cg.profile_use.is_some() {\n         early_error("}]}