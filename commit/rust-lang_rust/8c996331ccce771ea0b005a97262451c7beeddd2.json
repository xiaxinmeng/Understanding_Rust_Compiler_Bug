{"sha": "8c996331ccce771ea0b005a97262451c7beeddd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOTk2MzMxY2NjZTc3MWVhMGIwMDVhOTcyNjI0NTFjN2JlZWRkZDI=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-10-18T23:11:28Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-10-18T23:11:28Z"}, "message": "fix a couple of clippy lint warnings\n\nsimplify a comparison with \"true\"\nfn can_be_overflowed: remove unused lifetime\nfn rewrite_pairs_one_line: pass \"list\" by reference (it is not consumed in the function)\nfn span_for_token_stream: pass \"token_stream\" by reference since it is not consumed\nuse tool lints for clippy suppressions", "tree": {"sha": "58cf094a821950a73bc7648b80c33254d7ef91f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58cf094a821950a73bc7648b80c33254d7ef91f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c996331ccce771ea0b005a97262451c7beeddd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c996331ccce771ea0b005a97262451c7beeddd2", "html_url": "https://github.com/rust-lang/rust/commit/8c996331ccce771ea0b005a97262451c7beeddd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c996331ccce771ea0b005a97262451c7beeddd2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e633f2b3f530404a6cab0fb9dd4dc351b8e6bc7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e633f2b3f530404a6cab0fb9dd4dc351b8e6bc7e", "html_url": "https://github.com/rust-lang/rust/commit/e633f2b3f530404a6cab0fb9dd4dc351b8e6bc7e"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "cd6f363e269993cd7d888fd710dbc98997d42108", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=8c996331ccce771ea0b005a97262451c7beeddd2", "patch": "@@ -752,7 +752,7 @@ where\n     }\n }\n \n-#[cfg_attr(feature = \"cargo-clippy\", allow(too_many_arguments))]\n+#[allow(clippy::too_many_arguments)]\n // Creates an iterator over a list's items with associated comments.\n pub fn itemize_list<'a, T, I, F1, F2, F3>(\n     snippet_provider: &'a SnippetProvider,"}, {"sha": "13b761029e26a32ee9b551307dc5814f8d910be1", "filename": "src/macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=8c996331ccce771ea0b005a97262451c7beeddd2", "patch": "@@ -429,7 +429,7 @@ pub fn rewrite_macro_def(\n             Some(v) => Some(v),\n             // if the rewrite returned None because a macro could not be rewritten, then return the\n             // original body\n-            None if *context.macro_rewrite_failure.borrow() == true => {\n+            None if *context.macro_rewrite_failure.borrow() => {\n                 Some(context.snippet(branch.body).trim().to_string())\n             }\n             None => None,\n@@ -981,7 +981,7 @@ fn format_macro_args(\n ) -> Option<String> {\n     if !context.config.format_macro_matchers() {\n         let token_stream: TokenStream = toks.into();\n-        let span = span_for_token_stream(token_stream);\n+        let span = span_for_token_stream(&token_stream);\n         return Some(match span {\n             Some(span) => context.snippet(span).to_owned(),\n             None => String::new(),\n@@ -991,7 +991,7 @@ fn format_macro_args(\n     wrap_macro_args(context, &parsed_args, shape)\n }\n \n-fn span_for_token_stream(token_stream: TokenStream) -> Option<Span> {\n+fn span_for_token_stream(token_stream: &TokenStream) -> Option<Span> {\n     token_stream.trees().next().map(|tt| tt.span())\n }\n "}, {"sha": "31cd1b054662ea4ad3fcd9402ae917b7fcaf44cd", "filename": "src/overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=8c996331ccce771ea0b005a97262451c7beeddd2", "patch": "@@ -690,7 +690,7 @@ fn need_block_indent(s: &str, shape: Shape) -> bool {\n     })\n }\n \n-fn can_be_overflowed<'a>(context: &RewriteContext, items: &[OverflowableItem]) -> bool {\n+fn can_be_overflowed(context: &RewriteContext, items: &[OverflowableItem]) -> bool {\n     items\n         .last()\n         .map_or(false, |x| x.can_be_overflowed(context, items.len()))"}, {"sha": "360a9964f704b31cc1037e8f6fc14d2ef05d83ac", "filename": "src/pairs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fpairs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fpairs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpairs.rs?ref=8c996331ccce771ea0b005a97262451c7beeddd2", "patch": "@@ -54,7 +54,7 @@ pub(crate) fn rewrite_all_pairs(\n     // necessarily need one line per sub-expression, but we don't do anything\n     // too funny wrt precedence.\n     expr.flatten(true)\n-        .and_then(|list| rewrite_pairs_multiline(list, shape, context))\n+        .and_then(|list| rewrite_pairs_multiline(&list, shape, context))\n }\n \n // This may return a multi-line result since we allow the last expression to go\n@@ -105,7 +105,7 @@ fn rewrite_pairs_one_line<T: Rewrite>(\n }\n \n fn rewrite_pairs_multiline<T: Rewrite>(\n-    list: PairList<T>,\n+    list: &PairList<T>,\n     shape: Shape,\n     context: &RewriteContext,\n ) -> Option<String> {"}, {"sha": "9ad6d3ccaa8a15e5514fe9d7a088b3ea17ebcf9f", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c996331ccce771ea0b005a97262451c7beeddd2/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=8c996331ccce771ea0b005a97262451c7beeddd2", "patch": "@@ -573,7 +573,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         self.buffer.push_str(s);\n     }\n \n-    #[cfg_attr(feature = \"cargo-clippy\", allow(needless_pass_by_value))]\n+    #[allow(clippy::needless_pass_by_value)]\n     fn push_rewrite_inner(&mut self, span: Span, rewrite: Option<String>) {\n         if let Some(ref s) = rewrite {\n             self.push_str(s);"}]}