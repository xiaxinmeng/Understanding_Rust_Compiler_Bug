{"sha": "1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNmVkMDI3MWU3Y2M4ODY0ZTYwMzBkOTQ1YjkyYWFhODUwZTRhZmU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-13T21:04:09Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-24T22:33:13Z"}, "message": "Update ui tests", "tree": {"sha": "6b3772f4e0cd25ceb6069f9193ace8e4ab8c2931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b3772f4e0cd25ceb6069f9193ace8e4ab8c2931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "html_url": "https://github.com/rust-lang/rust/commit/1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5047cb4944297566d236a663bbbba00f2f25cd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5047cb4944297566d236a663bbbba00f2f25cd0", "html_url": "https://github.com/rust-lang/rust/commit/c5047cb4944297566d236a663bbbba00f2f25cd0"}], "stats": {"total": 793, "additions": 73, "deletions": 720}, "files": [{"sha": "963a89ed44da6dc00d49a3d59ae2362b97cd53c7", "filename": "src/test/ui/borrowck/borrowck-anon-fields-struct.nll.stderr", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-struct.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,27 +1,3 @@\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-struct.rs:23:19\n-   |\n-LL |         Y(ref mut a, _) => a\n-   |           --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-struct.rs:38:19\n-   |\n-LL |         Y(ref mut a, _) => a\n-   |           --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n error[E0499]: cannot borrow `y.0` as mutable more than once at a time\n   --> $DIR/borrowck-anon-fields-struct.rs:39:11\n    |\n@@ -34,7 +10,6 @@ LL |         Y(ref mut b, _) => b //~ ERROR cannot borrow\n LL |     *a += 1;\n    |     ------- borrow later used here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0499, E0502.\n-For more information about an error, try `rustc --explain E0499`.\n+For more information about this error, try `rustc --explain E0499`."}, {"sha": "f06822f7bb6e4ae0bf116a0352aecc05cb02f8e3", "filename": "src/test/ui/borrowck/borrowck-anon-fields-tuple.nll.stderr", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-tuple.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-tuple.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-tuple.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,27 +1,3 @@\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-tuple.rs:21:19\n-   |\n-LL |         (ref mut a, _) => a\n-   |          --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-tuple.rs:36:19\n-   |\n-LL |         (ref mut a, _) => a\n-   |          --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n error[E0499]: cannot borrow `y.0` as mutable more than once at a time\n   --> $DIR/borrowck-anon-fields-tuple.rs:37:10\n    |\n@@ -34,7 +10,6 @@ LL |         (ref mut b, _) => b //~ ERROR cannot borrow\n LL |     *a += 1;\n    |     ------- borrow later used here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0499, E0502.\n-For more information about an error, try `rustc --explain E0499`.\n+For more information about this error, try `rustc --explain E0499`."}, {"sha": "05197205e814c0b931e2030dc242e85669ab93d3", "filename": "src/test/ui/borrowck/borrowck-anon-fields-variant.nll.stderr", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,27 +1,3 @@\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-variant.rs:26:19\n-   |\n-LL |       Foo::Y(ref mut a, _) => a,\n-   |              --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n-error[E0502]: cannot borrow `y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-anon-fields-variant.rs:43:19\n-   |\n-LL |       Foo::Y(ref mut a, _) => a,\n-   |              --------- mutable borrow occurs here\n-...\n-LL |     let b = match y {\n-   |                   ^ immutable borrow occurs here\n-...\n-LL |     *a += 1;\n-   |     ------- borrow later used here\n-\n error[E0499]: cannot borrow `y.0` as mutable more than once at a time\n   --> $DIR/borrowck-anon-fields-variant.rs:44:14\n    |\n@@ -34,7 +10,6 @@ LL |       Foo::Y(ref mut b, _) => b, //~ ERROR cannot borrow\n LL |     *a += 1;\n    |     ------- borrow later used here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0499, E0502.\n-For more information about an error, try `rustc --explain E0499`.\n+For more information about this error, try `rustc --explain E0499`."}, {"sha": "603f4d63f7f4a78505c6ef8f094a98f4ff5124ba", "filename": "src/test/ui/borrowck/borrowck-borrow-from-owned-ptr.nll.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-owned-ptr.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-owned-ptr.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-owned-ptr.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -28,17 +28,6 @@ LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n LL |     *bar1;\n    |     ----- borrow later used here\n \n-error[E0502]: cannot borrow `*foo` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-borrow-from-owned-ptr.rs:72:11\n-   |\n-LL |     let bar1 = &mut foo.bar1;\n-   |                ------------- mutable borrow occurs here\n-LL |     match *foo {\n-   |           ^^^^ immutable borrow occurs here\n-...\n-LL |     *bar1;\n-   |     ----- borrow later used here\n-\n error[E0499]: cannot borrow `foo.bar1` as mutable more than once at a time\n   --> $DIR/borrowck-borrow-from-owned-ptr.rs:73:21\n    |\n@@ -121,7 +110,7 @@ LL |     let foo = make_foo();\n LL |     let bar1 = &mut foo.bar1; //~ ERROR cannot borrow\n    |                ^^^^^^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 11 previous errors\n \n Some errors occurred: E0499, E0502, E0596.\n For more information about an error, try `rustc --explain E0499`."}, {"sha": "3a215f2336aefec6d294a0aeb1090e45056b8202", "filename": "src/test/ui/borrowck/borrowck-borrow-from-stack-variable.nll.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-stack-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-stack-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-stack-variable.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -28,17 +28,6 @@ LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n LL |     *bar1;\n    |     ----- borrow later used here\n \n-error[E0502]: cannot borrow `foo` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-borrow-from-stack-variable.rs:70:11\n-   |\n-LL |     let bar1 = &mut foo.bar1;\n-   |                ------------- mutable borrow occurs here\n-LL |     match foo {\n-   |           ^^^ immutable borrow occurs here\n-...\n-LL |     *bar1;\n-   |     ----- borrow later used here\n-\n error[E0499]: cannot borrow `foo.bar1` as mutable more than once at a time\n   --> $DIR/borrowck-borrow-from-stack-variable.rs:71:21\n    |\n@@ -121,7 +110,7 @@ LL |     let foo = make_foo();\n LL |     let bar1 = &mut foo.bar1; //~ ERROR cannot borrow\n    |                ^^^^^^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 11 previous errors\n \n Some errors occurred: E0499, E0502, E0596.\n For more information about an error, try `rustc --explain E0499`."}, {"sha": "e417dadf6df163efebbf9d4694bee5095f00a1dd", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.nll.stderr", "status": "modified", "additions": 9, "deletions": 170, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -72,23 +72,12 @@ LL |              //[mir]~^ ERROR cannot use `h.0` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:77:15\n-   |\n-LL |         let x = e.x();\n-   |                 - borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n-   |               ^ use of borrowed `e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e.0` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:78:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `e`\n ...\n@@ -139,23 +128,12 @@ LL |              //[mir]~^ ERROR cannot use `h.0` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `*e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:120:15\n-   |\n-LL |         let x = e.x();\n-   |                 - borrow of `*e` occurs here\n-LL |         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n-   |               ^^ use of borrowed `*e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e.0` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:121:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `*e` occurs here\n-LL |         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n+LL |         match *e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `*e`\n ...\n@@ -173,41 +151,18 @@ LL |              //[mir]~^ ERROR cannot use `u.a` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:139:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:140:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x, _, .., _, _] => println!(\"{}\", x),\n    |               ^ use of borrowed `v`\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:145:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:146:18\n    |\n@@ -220,18 +175,6 @@ LL |             &[_, x, .., _, _] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:151:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:152:25\n    |\n@@ -244,18 +187,6 @@ LL |             &[_, _, .., x, _] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:157:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:158:28\n    |\n@@ -268,41 +199,18 @@ LL |             &[_, _, .., _, x] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:169:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:170:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x..] => println!(\"{:?}\", x),\n    |               ^ use of borrowed `v`\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:175:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:176:18\n    |\n@@ -315,18 +223,6 @@ LL |             &[_, x..] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:181:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:182:15\n    |\n@@ -339,18 +235,6 @@ LL |             &[x.., _] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:187:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:188:18\n    |\n@@ -363,23 +247,12 @@ LL |             &[_, x.., _] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:201:15\n-   |\n-LL |         let x = &mut e;\n-   |                 ------ borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n-   |               ^ use of borrowed `e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:202:13\n    |\n LL |         let x = &mut e;\n    |                 ------ borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             E::A(ref ax) =>\n    |             ^^^^^^^^^^^^ use of borrowed `e`\n ...\n@@ -391,7 +264,7 @@ error[E0502]: cannot borrow `e.0` as immutable because it is also borrowed as mu\n    |\n LL |         let x = &mut e;\n    |                 ------ mutable borrow occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             E::A(ref ax) =>\n    |                  ^^^^^^ immutable borrow occurs here\n ...\n@@ -410,41 +283,18 @@ LL |             E::B { x: ref bx } =>\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `s` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:220:15\n-   |\n-LL |         let x = &mut s;\n-   |                 ------ borrow of `s` occurs here\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n-   |               ^ use of borrowed `s`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `s.y.0` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:221:22\n    |\n LL |         let x = &mut s;\n    |                 ------ mutable borrow occurs here\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n+LL |         match s {\n LL |             S  { y: (ref y0, _), .. } =>\n    |                      ^^^^^^ immutable borrow occurs here\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `s` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:227:15\n-   |\n-LL |         let x = &mut s;\n-   |                 ------ borrow of `s` occurs here\n-...\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n-   |               ^ use of borrowed `s`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `s.x.y` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:228:28\n    |\n@@ -479,23 +329,12 @@ LL |         v[0].y;\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:282:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `v[..].x` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:283:24\n    |\n LL |         let x = &mut v;\n    |                 ------ mutable borrow occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[_, F {x: ref xf, ..}] => println!(\"{}\", xf),\n    |                        ^^^^^^ immutable borrow occurs here\n ...\n@@ -534,7 +373,7 @@ LL |                 drop(x); //[ast]~ ERROR use of moved value: `x`\n    |\n    = note: move occurs because `x` has type `std::vec::Vec<i32>`, which does not implement the `Copy` trait\n \n-error: aborting due to 46 previous errors\n+error: aborting due to 32 previous errors\n \n Some errors occurred: E0382, E0499, E0502, E0503.\n For more information about an error, try `rustc --explain E0382`."}, {"sha": "bc6385ffd920bbe5cef005a293138b0f632ad0ee", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -27,7 +27,7 @@ error[E0503]: cannot use `e.0` because it was mutably borrowed\n    |\n LL |         let x = e.x();\n    |                 - borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `e`\n \n@@ -68,7 +68,7 @@ error[E0503]: cannot use `e.0` because it was mutably borrowed\n    |\n LL |         let x = e.x();\n    |                 - borrow of `*e` occurs here\n-LL |         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n+LL |         match *e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `*e`\n \n@@ -85,7 +85,7 @@ error[E0503]: cannot use `v[..]` because it was mutably borrowed\n    |\n LL |         let x = &mut v;\n    |                      - borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x, _, .., _, _] => println!(\"{}\", x),\n    |               ^ use of borrowed `v`\n \n@@ -121,7 +121,7 @@ error[E0503]: cannot use `v[..]` because it was mutably borrowed\n    |\n LL |         let x = &mut v;\n    |                      - borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x..] => println!(\"{:?}\", x),\n    |               ^ use of borrowed `v`\n \n@@ -157,7 +157,7 @@ error[E0502]: cannot borrow `e.0` as immutable because `e` is also borrowed as m\n    |\n LL |         let x = &mut e;\n    |                      - mutable borrow occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             E::A(ref ax) =>\n    |                  ^^^^^^ immutable borrow occurs here\n ...\n@@ -181,7 +181,7 @@ error[E0502]: cannot borrow `s.y.0` as immutable because `s` is also borrowed as\n    |\n LL |         let x = &mut s;\n    |                      - mutable borrow occurs here\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n+LL |         match s {\n LL |             S  { y: (ref y0, _), .. } =>\n    |                      ^^^^^^ immutable borrow occurs here\n ..."}, {"sha": "e417dadf6df163efebbf9d4694bee5095f00a1dd", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.mir.stderr", "status": "modified", "additions": 9, "deletions": 170, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -72,23 +72,12 @@ LL |              //[mir]~^ ERROR cannot use `h.0` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:77:15\n-   |\n-LL |         let x = e.x();\n-   |                 - borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n-   |               ^ use of borrowed `e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e.0` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:78:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `e`\n ...\n@@ -139,23 +128,12 @@ LL |              //[mir]~^ ERROR cannot use `h.0` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `*e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:120:15\n-   |\n-LL |         let x = e.x();\n-   |                 - borrow of `*e` occurs here\n-LL |         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n-   |               ^^ use of borrowed `*e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e.0` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:121:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `*e` occurs here\n-LL |         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n+LL |         match *e {\n LL |             Baz::X(value) => value\n    |                    ^^^^^ use of borrowed `*e`\n ...\n@@ -173,41 +151,18 @@ LL |              //[mir]~^ ERROR cannot use `u.a` because it was mutably borrow\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:139:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:140:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x, _, .., _, _] => println!(\"{}\", x),\n    |               ^ use of borrowed `v`\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:145:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:146:18\n    |\n@@ -220,18 +175,6 @@ LL |             &[_, x, .., _, _] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:151:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:152:25\n    |\n@@ -244,18 +187,6 @@ LL |             &[_, _, .., x, _] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:157:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:158:28\n    |\n@@ -268,41 +199,18 @@ LL |             &[_, _, .., _, x] => println!(\"{}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:169:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:170:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[x..] => println!(\"{:?}\", x),\n    |               ^ use of borrowed `v`\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:175:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:176:18\n    |\n@@ -315,18 +223,6 @@ LL |             &[_, x..] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:181:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:182:15\n    |\n@@ -339,18 +235,6 @@ LL |             &[x.., _] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:187:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-...\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:188:18\n    |\n@@ -363,23 +247,12 @@ LL |             &[_, x.., _] => println!(\"{:?}\", x),\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:201:15\n-   |\n-LL |         let x = &mut e;\n-   |                 ------ borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n-   |               ^ use of borrowed `e`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0503]: cannot use `e` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:202:13\n    |\n LL |         let x = &mut e;\n    |                 ------ borrow of `e` occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             E::A(ref ax) =>\n    |             ^^^^^^^^^^^^ use of borrowed `e`\n ...\n@@ -391,7 +264,7 @@ error[E0502]: cannot borrow `e.0` as immutable because it is also borrowed as mu\n    |\n LL |         let x = &mut e;\n    |                 ------ mutable borrow occurs here\n-LL |         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+LL |         match e {\n LL |             E::A(ref ax) =>\n    |                  ^^^^^^ immutable borrow occurs here\n ...\n@@ -410,41 +283,18 @@ LL |             E::B { x: ref bx } =>\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `s` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:220:15\n-   |\n-LL |         let x = &mut s;\n-   |                 ------ borrow of `s` occurs here\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n-   |               ^ use of borrowed `s`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `s.y.0` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:221:22\n    |\n LL |         let x = &mut s;\n    |                 ------ mutable borrow occurs here\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n+LL |         match s {\n LL |             S  { y: (ref y0, _), .. } =>\n    |                      ^^^^^^ immutable borrow occurs here\n ...\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `s` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:227:15\n-   |\n-LL |         let x = &mut s;\n-   |                 ------ borrow of `s` occurs here\n-...\n-LL |         match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n-   |               ^ use of borrowed `s`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `s.x.y` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:228:28\n    |\n@@ -479,23 +329,12 @@ LL |         v[0].y;\n LL |         drop(x);\n    |              - borrow later used here\n \n-error[E0503]: cannot use `v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:282:15\n-   |\n-LL |         let x = &mut v;\n-   |                 ------ borrow of `v` occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n-   |               ^ use of borrowed `v`\n-...\n-LL |         drop(x);\n-   |              - borrow later used here\n-\n error[E0502]: cannot borrow `v[..].x` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:283:24\n    |\n LL |         let x = &mut v;\n    |                 ------ mutable borrow occurs here\n-LL |         match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+LL |         match v {\n LL |             &[_, F {x: ref xf, ..}] => println!(\"{}\", xf),\n    |                        ^^^^^^ immutable borrow occurs here\n ...\n@@ -534,7 +373,7 @@ LL |                 drop(x); //[ast]~ ERROR use of moved value: `x`\n    |\n    = note: move occurs because `x` has type `std::vec::Vec<i32>`, which does not implement the `Copy` trait\n \n-error: aborting due to 46 previous errors\n+error: aborting due to 32 previous errors\n \n Some errors occurred: E0382, E0499, E0502, E0503.\n For more information about an error, try `rustc --explain E0382`."}, {"sha": "2ef08e75cfda3898baf185f7daad39f9ef7d5a9b", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -74,7 +74,7 @@ fn main() {\n     {\n         let mut e = Baz::X(2);\n         let x = e.x();\n-        match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+        match e {\n             Baz::X(value) => value\n             //[ast]~^ ERROR cannot use `e.0` because it was mutably borrowed\n             //[mir]~^^ ERROR cannot use `e.0` because it was mutably borrowed\n@@ -117,7 +117,7 @@ fn main() {\n     {\n         let mut e = Box::new(Baz::X(3));\n         let x = e.x();\n-        match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n+        match *e {\n             Baz::X(value) => value\n             //[ast]~^ ERROR cannot use `e.0` because it was mutably borrowed\n             //[mir]~^^ ERROR cannot use `e.0` because it was mutably borrowed\n@@ -136,25 +136,25 @@ fn main() {\n     {\n         let mut v = &[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n         let x = &mut v;\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[x, _, .., _, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n                             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, x, .., _, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n                             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, _, .., x, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n                             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, _, .., _, x] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n@@ -166,25 +166,25 @@ fn main() {\n     {\n         let mut v = &[1, 2, 3, 4, 5];\n         let x = &mut v;\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[x..] => println!(\"{:?}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, x..] => println!(\"{:?}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[x.., _] => println!(\"{:?}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n             _ => panic!(\"other case\"),\n         }\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, x.., _] => println!(\"{:?}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed\n@@ -198,7 +198,7 @@ fn main() {\n \n         let mut e = E::A(3);\n         let x = &mut e;\n-        match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n+        match e {\n             E::A(ref ax) =>\n                 //[ast]~^ ERROR cannot borrow `e.0` as immutable because `e` is also borrowed as mutable\n                 //[mir]~^^ ERROR cannot borrow `e.0` as immutable because it is also borrowed as mutable\n@@ -217,14 +217,14 @@ fn main() {\n         struct S { x: F, y: (u32, u32), };\n         let mut s = S { x: F { x: 1, y: 2}, y: (999, 998) };\n         let x = &mut s;\n-        match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n+        match s {\n             S  { y: (ref y0, _), .. } =>\n                 //[ast]~^ ERROR cannot borrow `s.y.0` as immutable because `s` is also borrowed as mutable\n                 //[mir]~^^ ERROR cannot borrow `s.y.0` as immutable because it is also borrowed as mutable\n                 println!(\"y0: {:?}\", y0),\n             _ => panic!(\"other case\"),\n         }\n-        match s { //[mir]~ ERROR cannot use `s` because it was mutably borrowed\n+        match s {\n             S  { x: F { y: ref x0, .. }, .. } =>\n                 //[ast]~^ ERROR cannot borrow `s.x.y` as immutable because `s` is also borrowed as mutable\n                 //[mir]~^^ ERROR cannot borrow `s.x.y` as immutable because it is also borrowed as mutable\n@@ -279,7 +279,7 @@ fn main() {\n         struct F {x: u32, y: u32};\n         let mut v = &[F{x: 1, y: 2}, F{x: 3, y: 4}];\n         let x = &mut v;\n-        match v { //[mir]~ ERROR cannot use `v` because it was mutably borrowed\n+        match v {\n             &[_, F {x: ref xf, ..}] => println!(\"{}\", xf),\n             //[mir]~^ ERROR cannot borrow `v[..].x` as immutable because it is also borrowed as mutable\n             // No errors in AST"}, {"sha": "0853018bae9428f5d7b5c5a64e2201d64de9daa5", "filename": "src/test/ui/borrowck/borrowck-match-already-borrowed.ast.nll.stderr", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.nll.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,20 +1,9 @@\n-error[E0503]: cannot use `foo` because it was mutably borrowed\n-  --> $DIR/borrowck-match-already-borrowed.rs:22:19\n-   |\n-LL |     let p = &mut foo;\n-   |             -------- borrow of `foo` occurs here\n-LL |     let _ = match foo { //[mir]~ ERROR [E0503]\n-   |                   ^^^ use of borrowed `foo`\n-...\n-LL |     drop(p);\n-   |          - borrow later used here\n-\n error[E0503]: cannot use `foo` because it was mutably borrowed\n   --> $DIR/borrowck-match-already-borrowed.rs:23:9\n    |\n LL |     let p = &mut foo;\n    |             -------- borrow of `foo` occurs here\n-LL |     let _ = match foo { //[mir]~ ERROR [E0503]\n+LL |     let _ = match foo {\n LL |         Foo::B => 1, //[mir]~ ERROR [E0503]\n    |         ^^^^^^ use of borrowed `foo`\n ...\n@@ -33,23 +22,12 @@ LL |         Foo::A(x) => x //[ast]~ ERROR [E0503]\n LL |     drop(p);\n    |          - borrow later used here\n \n-error[E0503]: cannot use `x` because it was mutably borrowed\n-  --> $DIR/borrowck-match-already-borrowed.rs:35:19\n-   |\n-LL |     let r = &mut x;\n-   |             ------ borrow of `x` occurs here\n-LL |     let _ = match x { //[mir]~ ERROR [E0503]\n-   |                   ^ use of borrowed `x`\n-...\n-LL |     drop(r);\n-   |          - borrow later used here\n-\n error[E0503]: cannot use `x` because it was mutably borrowed\n   --> $DIR/borrowck-match-already-borrowed.rs:36:9\n    |\n LL |     let r = &mut x;\n    |             ------ borrow of `x` occurs here\n-LL |     let _ = match x { //[mir]~ ERROR [E0503]\n+LL |     let _ = match x {\n LL |         x => x + 1, //[ast]~ ERROR [E0503]\n    |         ^ use of borrowed `x`\n ...\n@@ -68,6 +46,6 @@ LL |         y => y + 2, //[ast]~ ERROR [E0503]\n LL |     drop(r);\n    |          - borrow later used here\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0503`."}, {"sha": "5ba2f26e2203a6b52e0cb1de5418234a6ea22b82", "filename": "src/test/ui/borrowck/borrowck-match-already-borrowed.ast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.ast.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -12,7 +12,7 @@ error[E0503]: cannot use `x` because it was mutably borrowed\n    |\n LL |     let r = &mut x;\n    |                  - borrow of `x` occurs here\n-LL |     let _ = match x { //[mir]~ ERROR [E0503]\n+LL |     let _ = match x {\n LL |         x => x + 1, //[ast]~ ERROR [E0503]\n    |         ^ use of borrowed `x`\n "}, {"sha": "0853018bae9428f5d7b5c5a64e2201d64de9daa5", "filename": "src/test/ui/borrowck/borrowck-match-already-borrowed.mir.stderr", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.mir.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,20 +1,9 @@\n-error[E0503]: cannot use `foo` because it was mutably borrowed\n-  --> $DIR/borrowck-match-already-borrowed.rs:22:19\n-   |\n-LL |     let p = &mut foo;\n-   |             -------- borrow of `foo` occurs here\n-LL |     let _ = match foo { //[mir]~ ERROR [E0503]\n-   |                   ^^^ use of borrowed `foo`\n-...\n-LL |     drop(p);\n-   |          - borrow later used here\n-\n error[E0503]: cannot use `foo` because it was mutably borrowed\n   --> $DIR/borrowck-match-already-borrowed.rs:23:9\n    |\n LL |     let p = &mut foo;\n    |             -------- borrow of `foo` occurs here\n-LL |     let _ = match foo { //[mir]~ ERROR [E0503]\n+LL |     let _ = match foo {\n LL |         Foo::B => 1, //[mir]~ ERROR [E0503]\n    |         ^^^^^^ use of borrowed `foo`\n ...\n@@ -33,23 +22,12 @@ LL |         Foo::A(x) => x //[ast]~ ERROR [E0503]\n LL |     drop(p);\n    |          - borrow later used here\n \n-error[E0503]: cannot use `x` because it was mutably borrowed\n-  --> $DIR/borrowck-match-already-borrowed.rs:35:19\n-   |\n-LL |     let r = &mut x;\n-   |             ------ borrow of `x` occurs here\n-LL |     let _ = match x { //[mir]~ ERROR [E0503]\n-   |                   ^ use of borrowed `x`\n-...\n-LL |     drop(r);\n-   |          - borrow later used here\n-\n error[E0503]: cannot use `x` because it was mutably borrowed\n   --> $DIR/borrowck-match-already-borrowed.rs:36:9\n    |\n LL |     let r = &mut x;\n    |             ------ borrow of `x` occurs here\n-LL |     let _ = match x { //[mir]~ ERROR [E0503]\n+LL |     let _ = match x {\n LL |         x => x + 1, //[ast]~ ERROR [E0503]\n    |         ^ use of borrowed `x`\n ...\n@@ -68,6 +46,6 @@ LL |         y => y + 2, //[ast]~ ERROR [E0503]\n LL |     drop(r);\n    |          - borrow later used here\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0503`."}, {"sha": "cabce08429e57a5a7232f4e40c52e1ed6fa5c557", "filename": "src/test/ui/borrowck/borrowck-match-already-borrowed.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-match-already-borrowed.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -19,7 +19,7 @@ enum Foo {\n fn match_enum() {\n     let mut foo = Foo::B;\n     let p = &mut foo;\n-    let _ = match foo { //[mir]~ ERROR [E0503]\n+    let _ = match foo {\n         Foo::B => 1, //[mir]~ ERROR [E0503]\n         _ => 2,\n         Foo::A(x) => x //[ast]~ ERROR [E0503]\n@@ -32,7 +32,7 @@ fn match_enum() {\n fn main() {\n     let mut x = 1;\n     let r = &mut x;\n-    let _ = match x { //[mir]~ ERROR [E0503]\n+    let _ = match x {\n         x => x + 1, //[ast]~ ERROR [E0503]\n                     //[mir]~^ ERROR [E0503]\n         y => y + 2, //[ast]~ ERROR [E0503]"}, {"sha": "86287e1299729f14fcb5b6ae61ffc3d43cf44c12", "filename": "src/test/ui/consts/const-eval/conditional_array_execution.nll.stderr", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.nll.stderr?ref=c5047cb4944297566d236a663bbbba00f2f25cd0", "patch": "@@ -1,47 +0,0 @@\n-warning: this constant cannot be used\n-  --> $DIR/conditional_array_execution.rs:15:1\n-   |\n-LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n-   | ^^^^^^^^^^^^^^^^^^-----^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                   |\n-   |                   attempt to subtract with overflow\n-   |\n-note: lint level defined here\n-  --> $DIR/conditional_array_execution.rs:11:9\n-   |\n-LL | #![warn(const_err)]\n-   |         ^^^^^^^^^\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/conditional_array_execution.rs:19:14\n-   |\n-LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n-   |                   ----- attempt to subtract with overflow\n-...\n-LL |     println!(\"{}\", FOO);\n-   |              ^^^^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/conditional_array_execution.rs:19:14\n-   |\n-LL |     println!(\"{}\", FOO);\n-   |              ^^^^  --- referenced constant has errors\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/conditional_array_execution.rs:19:20\n-   |\n-LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n-   |                   ----- attempt to subtract with overflow\n-...\n-LL |     println!(\"{}\", FOO);\n-   |                    ^^^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/conditional_array_execution.rs:19:20\n-   |\n-LL |     println!(\"{}\", FOO);\n-   |                    ^^^ referenced constant has errors\n-\n-error: aborting due to 4 previous errors\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "732fe459834603d098f08a69efce47f1a999ac1c", "filename": "src/test/ui/consts/const-eval/issue-43197.nll.stderr", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.nll.stderr?ref=c5047cb4944297566d236a663bbbba00f2f25cd0", "patch": "@@ -1,70 +0,0 @@\n-warning: this constant cannot be used\n-  --> $DIR/issue-43197.rs:20:5\n-   |\n-LL |     const X: u32 = 0-1;\n-   |     ^^^^^^^^^^^^^^^---^\n-   |                    |\n-   |                    attempt to subtract with overflow\n-   |\n-note: lint level defined here\n-  --> $DIR/issue-43197.rs:11:9\n-   |\n-LL | #![warn(const_err)]\n-   |         ^^^^^^^^^\n-\n-warning: this constant cannot be used\n-  --> $DIR/issue-43197.rs:22:5\n-   |\n-LL |     const Y: u32 = foo(0-1);\n-   |     ^^^^^^^^^^^^^^^^^^^---^^\n-   |                        |\n-   |                        attempt to subtract with overflow\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/issue-43197.rs:24:14\n-   |\n-LL |     const X: u32 = 0-1;\n-   |                    --- attempt to subtract with overflow\n-...\n-LL |     println!(\"{} {}\", X, Y);\n-   |              ^^^^^^^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/issue-43197.rs:24:14\n-   |\n-LL |     println!(\"{} {}\", X, Y);\n-   |              ^^^^^^^  - referenced constant has errors\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/issue-43197.rs:24:26\n-   |\n-LL |     const Y: u32 = foo(0-1);\n-   |                        --- attempt to subtract with overflow\n-LL |     //~^ WARN this constant cannot be used\n-LL |     println!(\"{} {}\", X, Y);\n-   |                          ^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/issue-43197.rs:24:26\n-   |\n-LL |     println!(\"{} {}\", X, Y);\n-   |                          ^ referenced constant has errors\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/issue-43197.rs:24:23\n-   |\n-LL |     const X: u32 = 0-1;\n-   |                    --- attempt to subtract with overflow\n-...\n-LL |     println!(\"{} {}\", X, Y);\n-   |                       ^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/issue-43197.rs:24:23\n-   |\n-LL |     println!(\"{} {}\", X, Y);\n-   |                       ^ referenced constant has errors\n-\n-error: aborting due to 6 previous errors\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "da040747991a418fd619964fb25b49f3638439d0", "filename": "src/test/ui/consts/const-eval/issue-44578.nll.stderr", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-44578.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5047cb4944297566d236a663bbbba00f2f25cd0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-44578.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-44578.nll.stderr?ref=c5047cb4944297566d236a663bbbba00f2f25cd0", "patch": "@@ -1,33 +0,0 @@\n-error[E0080]: referenced constant has errors\n-  --> $DIR/issue-44578.rs:35:14\n-   |\n-LL |     const AMT: usize = [A::AMT][(A::AMT > B::AMT) as usize];\n-   |                        ------------------------------------ index out of bounds: the len is 1 but the index is 1\n-...\n-LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT);\n-   |              ^^^^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/issue-44578.rs:35:14\n-   |\n-LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT);\n-   |              ^^^^  -------------------------- referenced constant has errors\n-\n-error[E0080]: referenced constant has errors\n-  --> $DIR/issue-44578.rs:35:20\n-   |\n-LL |     const AMT: usize = [A::AMT][(A::AMT > B::AMT) as usize];\n-   |                        ------------------------------------ index out of bounds: the len is 1 but the index is 1\n-...\n-LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT);\n-   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0080]: erroneous constant used\n-  --> $DIR/issue-44578.rs:35:20\n-   |\n-LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT);\n-   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-error: aborting due to 4 previous errors\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "909c369354bc377ea2d0b8e0c6861786a1b9abc9", "filename": "src/test/ui/issues/issue-27282-move-match-input-into-guard.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -24,7 +24,6 @@ fn main() {\n     match b {\n         &mut false => {},\n         _ if { (|| { let bar = b; *bar = false; })();\n-                     //~^ ERROR cannot move out of `b` because it is borrowed [E0505]\n                      false } => { },\n         &mut true => { println!(\"You might think we should get here\"); },\n         //~^ ERROR use of moved value: `*b` [E0382]"}, {"sha": "0b783e37615ee93646a45f78e9fa7b26c52248bc", "filename": "src/test/ui/issues/issue-27282-move-match-input-into-guard.stderr", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-move-match-input-into-guard.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,29 +1,14 @@\n-error[E0505]: cannot move out of `b` because it is borrowed\n-  --> $DIR/issue-27282-move-match-input-into-guard.rs:26:17\n-   |\n-LL |     match b {\n-   |           - borrow of `b` occurs here\n-LL |         &mut false => {},\n-LL |         _ if { (|| { let bar = b; *bar = false; })();\n-   |                 ^^             - move occurs due to use in closure\n-   |                 |\n-   |                 move out of `b` occurs here\n-...\n-LL |         &mut true => { println!(\"You might think we should get here\"); },\n-   |         --------- borrow later used here\n-\n error[E0382]: use of moved value: `*b`\n-  --> $DIR/issue-27282-move-match-input-into-guard.rs:29:14\n+  --> $DIR/issue-27282-move-match-input-into-guard.rs:28:14\n    |\n LL |         _ if { (|| { let bar = b; *bar = false; })();\n    |                 --             - variable moved due to use in closure\n    |                 |\n    |                 value moved into closure here\n-...\n+LL |                      false } => { },\n LL |         &mut true => { println!(\"You might think we should get here\"); },\n    |              ^^^^ value used here after move\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0382, E0505.\n-For more information about an error, try `rustc --explain E0382`.\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "2ebfb995d8ca97e6b6523d2c8de380dd32c9e475", "filename": "src/test/ui/issues/issue-27282-mutate-before-diverging-arm-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -31,7 +31,7 @@ fn main() {\n         &mut Some(&_) if {\n             // ForceFnOnce needed to exploit #27282\n             (|| { *x = None; drop(force_fn_once); })();\n-            //~^ ERROR closure requires unique access to `x` but it is already borrowed [E0500]\n+            //~^ ERROR cannot mutably borrow `x` in match guard [E0510]\n             false\n         } => {}\n         &mut Some(&a) if { // this binds to garbage if we've corrupted discriminant"}, {"sha": "2ecbb25fd3e47a7eb8816be1d906c262f0643420", "filename": "src/test/ui/issues/issue-27282-mutate-before-diverging-arm-1.stderr", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-1.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,17 +1,14 @@\n-error[E0500]: closure requires unique access to `x` but it is already borrowed\n+error[E0510]: cannot mutably borrow `x` in match guard\n   --> $DIR/issue-27282-mutate-before-diverging-arm-1.rs:33:14\n    |\n LL |     match x {\n-   |           - borrow occurs here\n+   |           - value is immutable in match guard\n ...\n LL |             (|| { *x = None; drop(force_fn_once); })();\n-   |              ^^    - second borrow occurs due to use of `x` in closure\n+   |              ^^    - borrow occurs due to use of `x` in closure\n    |              |\n-   |              closure construction occurs here\n-...\n-LL |         &mut Some(&a) if { // this binds to garbage if we've corrupted discriminant\n-   |         ------------- borrow later used here\n+   |              cannot mutably borrow\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0500`.\n+For more information about this error, try `rustc --explain E0510`."}, {"sha": "6b50973e04d06f425809ba3101a9b1a788be91e2", "filename": "src/test/ui/issues/issue-27282-mutate-before-diverging-arm-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -36,7 +36,7 @@ fn main() {\n             if {\n                 // ForceFnOnce needed to exploit #27282\n                 (|| { *x = None; drop(force_fn_once); })();\n-                //~^ ERROR closure requires unique access to `x` but it is already borrowed [E0500]\n+                //~^ ERROR cannot mutably borrow `x` in match guard [E0510]\n                 false\n             } => {}\n "}, {"sha": "6feef95300e05f72f96ca8d33030914acaebea48", "filename": "src/test/ui/issues/issue-27282-mutate-before-diverging-arm-2.stderr", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-mutate-before-diverging-arm-2.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,17 +1,14 @@\n-error[E0500]: closure requires unique access to `x` but it is already borrowed\n+error[E0510]: cannot mutably borrow `x` in match guard\n   --> $DIR/issue-27282-mutate-before-diverging-arm-2.rs:38:18\n    |\n LL |     match x {\n-   |           - borrow occurs here\n+   |           - value is immutable in match guard\n ...\n LL |                 (|| { *x = None; drop(force_fn_once); })();\n-   |                  ^^    - second borrow occurs due to use of `x` in closure\n+   |                  ^^    - borrow occurs due to use of `x` in closure\n    |                  |\n-   |                  closure construction occurs here\n-...\n-LL |         &mut Some(&2)\n-   |         ------------- borrow later used here\n+   |                  cannot mutably borrow\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0500`.\n+For more information about this error, try `rustc --explain E0510`."}, {"sha": "8688bfa86dc6f069af46c5320f0c470c54fa78f3", "filename": "src/test/ui/nll/borrowed-match-issue-45045.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.rs?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -21,7 +21,7 @@ fn main() {\n     let mut e = Xyz::A;\n     let f = &mut e;\n     let g = f;\n-    match e { //~ cannot use `e` because it was mutably borrowed [E0503]\n+    match e {\n         Xyz::A => println!(\"a\"),\n         //~^ cannot use `e` because it was mutably borrowed [E0503]\n         Xyz::B => println!(\"b\"),"}, {"sha": "ded773165c6fe7e709c00e08476dbf48e6776f3c", "filename": "src/test/ui/nll/borrowed-match-issue-45045.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6ed0271e7cc8864e6030d945b92aaa850e4afe/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-match-issue-45045.stderr?ref=1a6ed0271e7cc8864e6030d945b92aaa850e4afe", "patch": "@@ -1,15 +1,3 @@\n-error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowed-match-issue-45045.rs:24:11\n-   |\n-LL |     let f = &mut e;\n-   |             ------ borrow of `e` occurs here\n-LL |     let g = f;\n-LL |     match e { //~ cannot use `e` because it was mutably borrowed [E0503]\n-   |           ^ use of borrowed `e`\n-...\n-LL |     *g = Xyz::B;\n-   |     ----------- borrow later used here\n-\n error[E0503]: cannot use `e` because it was mutably borrowed\n   --> $DIR/borrowed-match-issue-45045.rs:25:9\n    |\n@@ -22,6 +10,6 @@ LL |         Xyz::A => println!(\"a\"),\n LL |     *g = Xyz::B;\n    |     ----------- borrow later used here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0503`."}]}