{"sha": "0e1dd65c14743b5b58c546ccaadc209f390af7df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMWRkNjVjMTQ3NDNiNWI1OGM1NDZjY2FhZGMyMDlmMzkwYWY3ZGY=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-02T21:23:54Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-02T21:23:54Z"}, "message": "Allow casts from the result of `abs` to unsigned", "tree": {"sha": "922b807feebb17167a8a2663e69373b21f3ea368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/922b807feebb17167a8a2663e69373b21f3ea368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e1dd65c14743b5b58c546ccaadc209f390af7df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAl2VFa0UHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic6SDggAs/grAPPCjq07vN3L/KkC67Uy2Kd5\nQRPI3Zp5VxC2l86xRPXToCitWYc2he1krxRjkxqTyDM+RLMM8zz2rD7AwXIi/Dmj\noqVgmQzxKC8dtFVmq5oCUaiJ2a8gp9cO5FHnt+0LFtFrYa00WO1o2SKp3vZw9TTa\nTI0aCdN9000wl3LuwGyhr/XN3u4oP8hkH/tXSJUoDYqBNTC/YtyVl5mb0pjJJvuD\nLZjcE2T8KUsb+UlyS0SUCoZMMSQ3QVWTBjEc1QMMA/BPeGsb5sDpcdE7O4NqkLDE\nPQHehw07g1EBsI9SIlbh0nMAEWvmRjJDBGVAQu8mVWpR5JpZAkd2Bkjn/Q==\n=btFe\n-----END PGP SIGNATURE-----", "payload": "tree 922b807feebb17167a8a2663e69373b21f3ea368\nparent 83f90aaedf7e756c22e4a8712233fd0425f1ee85\nauthor HMPerson1 <hmperson1@gmail.com> 1570051434 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1570051434 -0400\n\nAllow casts from the result of `abs` to unsigned\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1dd65c14743b5b58c546ccaadc209f390af7df", "html_url": "https://github.com/rust-lang/rust/commit/0e1dd65c14743b5b58c546ccaadc209f390af7df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e1dd65c14743b5b58c546ccaadc209f390af7df/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83f90aaedf7e756c22e4a8712233fd0425f1ee85", "url": "https://api.github.com/repos/rust-lang/rust/commits/83f90aaedf7e756c22e4a8712233fd0425f1ee85", "html_url": "https://github.com/rust-lang/rust/commit/83f90aaedf7e756c22e4a8712233fd0425f1ee85"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "133001e35f77ec0a1fbdba2ea6660f790b48bca2", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e1dd65c14743b5b58c546ccaadc209f390af7df/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1dd65c14743b5b58c546ccaadc209f390af7df/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=0e1dd65c14743b5b58c546ccaadc209f390af7df", "patch": "@@ -986,6 +986,17 @@ fn check_loss_of_sign(cx: &LateContext<'_, '_>, expr: &Expr, op: &Expr, cast_fro\n         }\n     }\n \n+    // don't lint for the result of `abs`\n+    // `abs` is an inherent impl of `i{N}`, so a method call with ident `abs` will always\n+    // resolve to that spesific method\n+    if_chain! {\n+        if let ExprKind::MethodCall(ref path, _, _) = op.kind;\n+        if path.ident.name.as_str() == \"abs\";\n+        then {\n+            return\n+        }\n+    }\n+\n     span_lint(\n         cx,\n         CAST_SIGN_LOSS,"}, {"sha": "80329a52c2d0d90dd0e768cbf38351fd1b57f9af", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e1dd65c14743b5b58c546ccaadc209f390af7df/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1dd65c14743b5b58c546ccaadc209f390af7df/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=0e1dd65c14743b5b58c546ccaadc209f390af7df", "patch": "@@ -42,4 +42,9 @@ fn main() {\n     i32::max_value() as u32;\n     i64::max_value() as u64;\n     i128::max_value() as u128;\n+    (-1i8).abs() as u8;\n+    (-1i16).abs() as u16;\n+    (-1i32).abs() as u32;\n+    (-1i64).abs() as u64;\n+    (-1isize).abs() as usize;\n }"}]}