{"sha": "30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZGJjZjVmODhiMjBkYjNlYTFjNzBiYjUwY2IzN2ZhOTM2NGYxYTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-13T04:36:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-15T01:29:12Z"}, "message": "libglob: Remove all uses of `~str` from `libglob`", "tree": {"sha": "5246c3a724ad1b40d779c273b4b0e1482a65fbd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5246c3a724ad1b40d779c273b4b0e1482a65fbd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9", "html_url": "https://github.com/rust-lang/rust/commit/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a1aaac396cea58a9192cbcab3bb87522ceba907", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1aaac396cea58a9192cbcab3bb87522ceba907", "html_url": "https://github.com/rust-lang/rust/commit/8a1aaac396cea58a9192cbcab3bb87522ceba907"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7b9260c7eb9dcffe215870b54c4afa632c87ebbf", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=30dbcf5f88b20db3ea1c70bb50cb37fa9364f1a9", "patch": "@@ -310,7 +310,7 @@ impl Pattern {\n      * brackets. The resulting string will, when compiled into a `Pattern`,\n      * match the input string and nothing else.\n      */\n-    pub fn escape(s: &str) -> ~str {\n+    pub fn escape(s: &str) -> StrBuf {\n         let mut escaped = StrBuf::new();\n         for c in s.chars() {\n             match c {\n@@ -325,7 +325,7 @@ impl Pattern {\n                 }\n             }\n         }\n-        escaped.into_owned()\n+        escaped\n     }\n \n     /**\n@@ -767,8 +767,8 @@ mod test {\n     #[test]\n     fn test_pattern_escape() {\n         let s = \"_[_]_?_*_!_\";\n-        assert_eq!(Pattern::escape(s), \"_[[]_[]]_[?]_[*]_!_\".to_owned());\n-        assert!(Pattern::new(Pattern::escape(s)).matches(s));\n+        assert_eq!(Pattern::escape(s), \"_[[]_[]]_[?]_[*]_!_\".to_strbuf());\n+        assert!(Pattern::new(Pattern::escape(s).as_slice()).matches(s));\n     }\n \n     #[test]"}]}