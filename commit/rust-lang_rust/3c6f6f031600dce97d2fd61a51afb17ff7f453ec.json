{"sha": "3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNmY2ZjAzMTYwMGRjZTk3ZDJmZDYxYTUxYWZiMTdmZjdmNDUzZWM=", "commit": {"author": {"name": "Martin Finkel", "email": "martin@videolabs.io", "date": "2019-07-31T10:15:26Z"}, "committer": {"name": "Martin Finkel", "email": "martin@videolabs.io", "date": "2019-07-31T10:15:26Z"}, "message": "Fix tidy checks", "tree": {"sha": "6d53bb5348883343c0c8fea54e2ec6f9182aa10b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d53bb5348883343c0c8fea54e2ec6f9182aa10b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "html_url": "https://github.com/rust-lang/rust/commit/3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/comments", "author": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "html_url": "https://github.com/rust-lang/rust/commit/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "9309f287dc714eff1e57e3cde1816f1b5c8eec57", "filename": "src/librustc_target/spec/aarch64_uwp_windows_msvc.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs?ref=3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "patch": "@@ -9,9 +9,14 @@ pub fn target() -> TargetResult {\n     // FIXME: this shouldn't be panic=abort, it should be panic=unwind\n     base.panic_strategy = PanicStrategy::Abort;\n \n-    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    let lib_root_path = env::var(\"VCToolsInstallDir\")\n+        .expect(\"VCToolsInstallDir not found in env\");\n+\n     base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\arm64\\\\store\".to_string()));\n+        .push(format!(\"{}{}{}\",\n+            \"/LIBPATH:\".to_string(),\n+            lib_root_path,\n+            \"lib\\\\arm64\\\\store\".to_string()));\n \n     Ok(Target {\n         llvm_target: \"aarch64-pc-windows-msvc\".to_string(),"}, {"sha": "d05aee547591fd12ab435b36e5fc7fd126afbe9f", "filename": "src/librustc_target/spec/i686_uwp_windows_msvc.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs?ref=3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "patch": "@@ -7,9 +7,14 @@ pub fn target() -> TargetResult {\n     base.max_atomic_width = Some(64);\n     base.has_elf_tls = true;\n \n-    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    let lib_root_path = env::var(\"VCToolsInstallDir\")\n+        .expect(\"VCToolsInstallDir not found in env\");\n+\n     base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\x86\\\\store\".to_string()));\n+            .push(format!(\"{}{}{}\",\n+            \"/LIBPATH:\".to_string(),\n+            lib_root_path,\n+            \"lib\\\\x86\\\\store\".to_string()));\n \n     Ok(Target {\n         llvm_target: \"i686-pc-windows-msvc\".to_string(),\n@@ -24,4 +29,4 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Msvc,\n         options: base,\n     })\n-}\n\\ No newline at end of file\n+}"}, {"sha": "1121916e68f5130b675a5d3badb63b84ccdd3566", "filename": "src/librustc_target/spec/windows_uwp_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs?ref=3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "patch": "@@ -30,4 +30,4 @@ pub fn opts() -> TargetOptions {\n \n         .. Default::default()\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "174d13327eb1636364572b7f4e36606b2d3da566", "filename": "src/librustc_target/spec/x86_64_uwp_windows_msvc.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6f6f031600dce97d2fd61a51afb17ff7f453ec/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs?ref=3c6f6f031600dce97d2fd61a51afb17ff7f453ec", "patch": "@@ -7,9 +7,14 @@ pub fn target() -> TargetResult {\n     base.max_atomic_width = Some(64);\n     base.has_elf_tls = true;\n \n-    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    let lib_root_path = env::var(\"VCToolsInstallDir\")\n+        .expect(\"VCToolsInstallDir not found in env\");\n+\n     base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\x64\\\\store\".to_string()));\n+            .push(format!(\"{}{}{}\",\n+            \"/LIBPATH:\".to_string(),\n+            lib_root_path,\n+            \"lib\\\\x64\\\\store\".to_string()));\n \n     Ok(Target {\n         llvm_target: \"x86_64-pc-windows-msvc\".to_string(),\n@@ -24,4 +29,4 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Msvc,\n         options: base,\n     })\n-}\n\\ No newline at end of file\n+}"}]}