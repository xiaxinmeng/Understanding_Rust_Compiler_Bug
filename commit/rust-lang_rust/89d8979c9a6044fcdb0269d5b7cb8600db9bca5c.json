{"sha": "89d8979c9a6044fcdb0269d5b7cb8600db9bca5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZDg5NzljOWE2MDQ0ZmNkYjAyNjlkNWI3Y2I4NjAwZGI5YmNhNWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-08T07:55:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-08T07:55:24Z"}, "message": "Rollup merge of #72761 - poliorcetics:use-keyword-doc, r=Dylan-DPC\n\nAdded the documentation for the 'use' keyword\n\nThis is a partial fix of #34601.\n\nI heavily inspired myself from the Reference on the `use` keyword.\n\nI checked the links when compiling the documentation, they should be ok.\n\nI also added an example for the wildcard `*` in the case of types, because it's behaviour is not *import everything* like one might think at first.", "tree": {"sha": "27e11dea6ceff27281a767386e322224164bc93e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e11dea6ceff27281a767386e322224164bc93e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3e7tCRBK7hj4Ov3rIwAAdHIIAFnxTc0HtNbD355/dwuXI/P9\nHKTnw3H3nPsTIsuNXfMZPnGbCcBAP4IJyKunFX97qshIRWZv3nck3+zo3/x4NKk6\ncdxD9twVwG5TY78VEGJyefamvpEu79ciIIqLYpuKk25Ey0GweAdnWbU273eYXm/w\nx3bm0kdgjdtL3C7ceaCXfhnAB6LLrf43qGxGGPkQ0sm3NvxTGaeje1hT2zWlnQx0\nBcojm7u1Ge70F5Rw0kssGUBmxsiQmaMT6FiYrcgmRheIjVg2RqGcvoI2vDeX2lxU\n+ybneOBu9sigdjtPPNFkzPDdSpra7kTD9Qq1Yai0PsbeyRGW3Yi68fzemfAETng=\n=EqWM\n-----END PGP SIGNATURE-----\n", "payload": "tree 27e11dea6ceff27281a767386e322224164bc93e\nparent e8bb4c70012279392aea54e48adcb91e21681cad\nparent 4bae9e59373e2ef405ea2601822137bd72122ef6\nauthor Ralf Jung <post@ralfj.de> 1591602924 +0200\ncommitter GitHub <noreply@github.com> 1591602924 +0200\n\nRollup merge of #72761 - poliorcetics:use-keyword-doc, r=Dylan-DPC\n\nAdded the documentation for the 'use' keyword\n\nThis is a partial fix of #34601.\n\nI heavily inspired myself from the Reference on the `use` keyword.\n\nI checked the links when compiling the documentation, they should be ok.\n\nI also added an example for the wildcard `*` in the case of types, because it's behaviour is not *import everything* like one might think at first.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c", "html_url": "https://github.com/rust-lang/rust/commit/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8bb4c70012279392aea54e48adcb91e21681cad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8bb4c70012279392aea54e48adcb91e21681cad", "html_url": "https://github.com/rust-lang/rust/commit/e8bb4c70012279392aea54e48adcb91e21681cad"}, {"sha": "4bae9e59373e2ef405ea2601822137bd72122ef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bae9e59373e2ef405ea2601822137bd72122ef6", "html_url": "https://github.com/rust-lang/rust/commit/4bae9e59373e2ef405ea2601822137bd72122ef6"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "a4996d9eee810d0c2654aedda0fe3b048684522d", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d8979c9a6044fcdb0269d5b7cb8600db9bca5c/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=89d8979c9a6044fcdb0269d5b7cb8600db9bca5c", "patch": "@@ -1213,9 +1213,61 @@ mod unsafe_keyword {}\n //\n /// Import or rename items from other crates or modules.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// Usually a `use` keyword is used to shorten the path required to refer to a module item.\n+/// The keyword may appear in modules, blocks and even functions, usually at the top.\n+///\n+/// The most basic usage of the keyword is `use path::to::item;`,\n+/// though a number of convenient shortcuts are supported:\n+///\n+///   * Simultaneously binding a list of paths with a common prefix,\n+///     using the glob-like brace syntax `use a::b::{c, d, e::f, g::h::i};`\n+///   * Simultaneously binding a list of paths with a common prefix and their common parent module,\n+///     using the [`self`] keyword, such as `use a::b::{self, c, d::e};`\n+///   * Rebinding the target name as a new local name, using the syntax `use p::q::r as x;`.\n+///     This can also be used with the last two features: `use a::b::{self as ab, c as abc}`.\n+///   * Binding all paths matching a given prefix,\n+///     using the asterisk wildcard syntax `use a::b::*;`.\n+///   * Nesting groups of the previous features multiple times,\n+///     such as `use a::b::{self as ab, c, d::{*, e::f}};`\n+///   * Reexporting with visibility modifiers such as `pub use a::b;`\n+///   * Importing with `_` to only import the methods of a trait without binding it to a name\n+///     (to avoid conflict for example): `use ::std::io::Read as _;`.\n+///\n+/// Using path qualifiers like [`crate`], [`super`] or [`self`] is supported: `use crate::a::b;`.\n+///\n+/// Note that when the wildcard `*` is used on a type, it does not import its methods (though\n+/// for `enum`s it imports the variants, as shown in the example below).\n+///\n+/// ```compile_fail,edition2018\n+/// enum ExampleEnum {\n+///     VariantA,\n+///     VariantB,\n+/// }\n ///\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n+/// impl ExampleEnum {\n+///     fn new() -> Self {\n+///         Self::VariantA\n+///     }\n+/// }\n+///\n+/// use ExampleEnum::*;\n+///\n+/// // Compiles.\n+/// let _ = VariantA;\n+///\n+/// // Does not compile !\n+/// let n = new();\n+/// ```\n+///\n+/// For more information on `use` and paths in general, see the [Reference].\n+///\n+/// The differences about paths and the `use` keyword between the 2015 and 2018 editions\n+/// can also be found in the [Reference].\n+///\n+/// [`crate`]: keyword.crate.html\n+/// [`self`]: keyword.self.html\n+/// [`super`]: keyword.super.html\n+/// [Reference]: ../reference/items/use-declarations.html\n mod use_keyword {}\n \n #[doc(keyword = \"where\")]"}]}