{"sha": "5f744f33f60f1961e756adf30606a08076350182", "node_id": "C_kwDOAAsO6NoAKDVmNzQ0ZjMzZjYwZjE5NjFlNzU2YWRmMzA2MDZhMDgwNzYzNTAxODI", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-29T18:43:14Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-02T22:57:57Z"}, "message": "Explain `ResolvedPath` vs `hir::Path`\n\nCo-authored-by: Joshua Nelson <github@jyn.dev>", "tree": {"sha": "eea3a559e05f4b90de2c8a265e4970d211881181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eea3a559e05f4b90de2c8a265e4970d211881181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f744f33f60f1961e756adf30606a08076350182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f744f33f60f1961e756adf30606a08076350182", "html_url": "https://github.com/rust-lang/rust/commit/5f744f33f60f1961e756adf30606a08076350182", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f744f33f60f1961e756adf30606a08076350182/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "962e45144390d3f8b7482d5dfbc3d739881f514e", "url": "https://api.github.com/repos/rust-lang/rust/commits/962e45144390d3f8b7482d5dfbc3d739881f514e", "html_url": "https://github.com/rust-lang/rust/commit/962e45144390d3f8b7482d5dfbc3d739881f514e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "df6e030aeef71ff6a1235d633c154c8117674a62", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f744f33f60f1961e756adf30606a08076350182/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f744f33f60f1961e756adf30606a08076350182/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=5f744f33f60f1961e756adf30606a08076350182", "patch": "@@ -1376,7 +1376,7 @@ crate struct PolyTrait {\n crate enum Type {\n     /// A named type, which could be a trait.\n     ///\n-    /// This is mostly Rustdoc's version of [`hir::Path`].\n+    /// This is mostly Rustdoc's version of [`hir::Path`]. It has to be different because Rustdoc's [`PathSegment`] can contain cleaned generics.\n     ResolvedPath { path: Path, did: DefId },\n     /// A `dyn Trait` object: `dyn for<'a> Trait<'a> + Send + 'static`\n     DynTrait(Vec<PolyTrait>, Option<Lifetime>),"}]}