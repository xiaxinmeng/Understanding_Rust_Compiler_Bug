{"sha": "73558160933b2764ed9a84b1b2b647e128eac3f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNTU4MTYwOTMzYjI3NjRlZDlhODRiMWIyYjY0N2UxMjhlYWMzZjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-08T03:54:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-08T03:54:52Z"}, "message": "Auto merge of #73046 - marmeladema:save-analysis-fix-path, r=Xanewok\n\nsave_analysis: fix some ICEs\n\nFixes #73020\nFixes #73022\nFixes #73041", "tree": {"sha": "4c5ae641a5621c5c0229c2ff11a10a7635aad718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5ae641a5621c5c0229c2ff11a10a7635aad718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73558160933b2764ed9a84b1b2b647e128eac3f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73558160933b2764ed9a84b1b2b647e128eac3f8", "html_url": "https://github.com/rust-lang/rust/commit/73558160933b2764ed9a84b1b2b647e128eac3f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73558160933b2764ed9a84b1b2b647e128eac3f8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aa1d93c21cffd64f8ede374b49c94e8432506a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa1d93c21cffd64f8ede374b49c94e8432506a0", "html_url": "https://github.com/rust-lang/rust/commit/6aa1d93c21cffd64f8ede374b49c94e8432506a0"}, {"sha": "a7c18e021facddcc1e6e747f2b2a625147277cd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c18e021facddcc1e6e747f2b2a625147277cd4", "html_url": "https://github.com/rust-lang/rust/commit/a7c18e021facddcc1e6e747f2b2a625147277cd4"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "489d38b00df6f1c318ed6ba019ad87f7ae8e20ea", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=73558160933b2764ed9a84b1b2b647e128eac3f8", "patch": "@@ -210,9 +210,11 @@ impl<'l, 'tcx> DumpVisitor<'l, 'tcx> {\n     // As write_sub_paths, but does not process the last ident in the path (assuming it\n     // will be processed elsewhere). See note on write_sub_paths about global.\n     fn write_sub_paths_truncated(&mut self, path: &'tcx hir::Path<'tcx>) {\n-        for seg in &path.segments[..path.segments.len() - 1] {\n-            if let Some(data) = self.save_ctxt.get_path_segment_data(seg) {\n-                self.dumper.dump_ref(data);\n+        if let [segments @ .., _] = path.segments {\n+            for seg in segments {\n+                if let Some(data) = self.save_ctxt.get_path_segment_data(seg) {\n+                    self.dumper.dump_ref(data);\n+                }\n             }\n         }\n     }"}, {"sha": "0341b5425266134bb0a9c79030afb1f0130fd334", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=73558160933b2764ed9a84b1b2b647e128eac3f8", "patch": "@@ -534,10 +534,14 @@ impl<'l, 'tcx> SaveContext<'l, 'tcx> {\n                     }\n                 }\n             }\n-            hir::ExprKind::Struct(hir::QPath::Resolved(_, path), ..) => {\n+            hir::ExprKind::Struct(qpath, ..) => {\n+                let segment = match qpath {\n+                    hir::QPath::Resolved(_, path) => path.segments.last().unwrap(),\n+                    hir::QPath::TypeRelative(_, segment) => segment,\n+                };\n                 match self.tables.expr_ty_adjusted(&hir_node).kind {\n                     ty::Adt(def, _) if !def.is_enum() => {\n-                        let sub_span = path.segments.last().unwrap().ident.span;\n+                        let sub_span = segment.ident.span;\n                         filter!(self.span_utils, sub_span);\n                         let span = self.span_from_span(sub_span);\n                         Some(Data::RefData(Ref {\n@@ -580,7 +584,7 @@ impl<'l, 'tcx> SaveContext<'l, 'tcx> {\n             }\n             _ => {\n                 // FIXME\n-                bug!();\n+                bug!(\"invalid expression: {:?}\", expr);\n             }\n         }\n     }"}, {"sha": "87ce0933681c5d571d7a287de7959547aad76ed8", "filename": "src/test/ui/save-analysis/issue-73020.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.rs?ref=73558160933b2764ed9a84b1b2b647e128eac3f8", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags: -Zsave-analysis\n+use {self}; //~ ERROR E0431\n+\n+fn main () {\n+}"}, {"sha": "5bb3aae99975c9dadb9abb33a22b78fcd84aefa6", "filename": "src/test/ui/save-analysis/issue-73020.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73020.stderr?ref=73558160933b2764ed9a84b1b2b647e128eac3f8", "patch": "@@ -0,0 +1,9 @@\n+error[E0431]: `self` import can only appear in an import list with a non-empty prefix\n+  --> $DIR/issue-73020.rs:2:6\n+   |\n+LL | use {self};\n+   |      ^^^^ can only appear in an import list with a non-empty prefix\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0431`."}, {"sha": "9ad89a319ba3b0601c54e72819e58b5bf7f46c71", "filename": "src/test/ui/save-analysis/issue-73022.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73022.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73558160933b2764ed9a84b1b2b647e128eac3f8/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73022.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-73022.rs?ref=73558160933b2764ed9a84b1b2b647e128eac3f8", "patch": "@@ -0,0 +1,13 @@\n+// build-pass\n+// compile-flags: -Zsave-analysis\n+enum Enum2 {\n+    Variant8 { _field: bool },\n+}\n+\n+impl Enum2 {\n+    fn new_variant8() -> Enum2 {\n+        Self::Variant8 { _field: true }\n+    }\n+}\n+\n+fn main() {}"}]}