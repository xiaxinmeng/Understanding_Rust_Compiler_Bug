{"sha": "01346563c1d64f666920abc79389d0db5531989e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMzQ2NTYzYzFkNjRmNjY2OTIwYWJjNzkzODlkMGRiNTUzMTk4OWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-31T01:10:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-31T01:10:42Z"}, "message": "Rollup merge of #57920 - euclio:source-date-epoch, r=Mark-Simulacrum\n\nuse `SOURCE_DATE_EPOCH` for man page time if set\n\nFixes #57776.", "tree": {"sha": "0c506b83d4b60b591cd72244b94f94489f31fc96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c506b83d4b60b591cd72244b94f94489f31fc96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01346563c1d64f666920abc79389d0db5531989e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcUksSCRBK7hj4Ov3rIwAAdHIIAIERx3mivpQ6sOJlKcFpp9tW\nmf6BRYlecjzPXe39r1InioD43C4lTwucDIDgmBHPgjir8jzc7vJEE09qCJIcUvMG\n0g44UHbZvxOFozzj2xnm4wg/9V13P2IMavP5/GXupWz5IiurZ63y95tD7zgDnQKb\nVZh+cjIdYP+Y1DMUFmy2vEovWm5I/2hbYWMFTXytR6lzL4XsoAB/WgTqSZijaIfL\n3YknNo4MJ51l0ZLvcdNgPgR+UBn0dgdZ+n7lLXBcuT/HOQdY3k2jlxtA4EtUiJE5\n63C0YMy4RORe2XJ8tiRdGZDwTk354uUhEowcV5K/kQPsfgSre5aP8MRgPLf9hhc=\n=3eR1\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c506b83d4b60b591cd72244b94f94489f31fc96\nparent 7ebb0a8c8ec51c8baa3420ffa0f3621bcec791ca\nparent 8db66ca53e9521f5ff52541e5793652688c3c367\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548897042 +0100\ncommitter GitHub <noreply@github.com> 1548897042 +0100\n\nRollup merge of #57920 - euclio:source-date-epoch, r=Mark-Simulacrum\n\nuse `SOURCE_DATE_EPOCH` for man page time if set\n\nFixes #57776.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01346563c1d64f666920abc79389d0db5531989e", "html_url": "https://github.com/rust-lang/rust/commit/01346563c1d64f666920abc79389d0db5531989e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01346563c1d64f666920abc79389d0db5531989e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ebb0a8c8ec51c8baa3420ffa0f3621bcec791ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebb0a8c8ec51c8baa3420ffa0f3621bcec791ca", "html_url": "https://github.com/rust-lang/rust/commit/7ebb0a8c8ec51c8baa3420ffa0f3621bcec791ca"}, {"sha": "8db66ca53e9521f5ff52541e5793652688c3c367", "url": "https://api.github.com/repos/rust-lang/rust/commits/8db66ca53e9521f5ff52541e5793652688c3c367", "html_url": "https://github.com/rust-lang/rust/commit/8db66ca53e9521f5ff52541e5793652688c3c367"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "d9bf95d13ac17722ce05c6cdb09ac5f59a8d9fab", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/01346563c1d64f666920abc79389d0db5531989e/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01346563c1d64f666920abc79389d0db5531989e/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=01346563c1d64f666920abc79389d0db5531989e", "patch": "@@ -23,7 +23,7 @@ use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n use crate::compile;\n use crate::tool::{self, Tool};\n use crate::cache::{INTERNER, Interned};\n-use time;\n+use time::{self, Timespec};\n \n pub fn pkgname(builder: &Builder, component: &str) -> String {\n     if component == \"cargo\" {\n@@ -528,7 +528,19 @@ impl Step for Rustc {\n             t!(fs::create_dir_all(image.join(\"share/man/man1\")));\n             let man_src = builder.src.join(\"src/doc/man\");\n             let man_dst = image.join(\"share/man/man1\");\n-            let month_year = t!(time::strftime(\"%B %Y\", &time::now()));\n+\n+            // Reproducible builds: If SOURCE_DATE_EPOCH is set, use that as the time.\n+            let time = env::var(\"SOURCE_DATE_EPOCH\")\n+                .map(|timestamp| {\n+                    let epoch = timestamp.parse().map_err(|err| {\n+                        format!(\"could not parse SOURCE_DATE_EPOCH: {}\", err)\n+                    }).unwrap();\n+\n+                    time::at(Timespec::new(epoch, 0))\n+                })\n+                .unwrap_or_else(|_| time::now());\n+\n+            let month_year = t!(time::strftime(\"%B %Y\", &time));\n             // don't use our `bootstrap::util::{copy, cp_r}`, because those try\n             // to hardlink, and we don't want to edit the source templates\n             for file_entry in builder.read_dir(&man_src) {"}]}