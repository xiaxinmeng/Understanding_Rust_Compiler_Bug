{"sha": "12474c62ff89ab122c2e6881b00680913fdf1d35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNDc0YzYyZmY4OWFiMTIyYzJlNjg4MWIwMDY4MDkxM2ZkZjFkMzU=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-10-18T07:53:18Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Add support for methods", "tree": {"sha": "c4b9f4ad333aee59cdf4d0532753af131a5f36ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4b9f4ad333aee59cdf4d0532753af131a5f36ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12474c62ff89ab122c2e6881b00680913fdf1d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12474c62ff89ab122c2e6881b00680913fdf1d35", "html_url": "https://github.com/rust-lang/rust/commit/12474c62ff89ab122c2e6881b00680913fdf1d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12474c62ff89ab122c2e6881b00680913fdf1d35/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "html_url": "https://github.com/rust-lang/rust/commit/2f85aa736e85544803ff6d3e6b13e44c0729bbdd"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "365e9c9984e82698bada401bc7844dbb5c750ff6", "filename": "clippy_lints/src/unnecessary_wrap.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12474c62ff89ab122c2e6881b00680913fdf1d35/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12474c62ff89ab122c2e6881b00680913fdf1d35/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wrap.rs?ref=12474c62ff89ab122c2e6881b00680913fdf1d35", "patch": "@@ -64,7 +64,11 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n         hir_id: HirId,\n     ) {\n         match fn_kind {\n-            FnKind::ItemFn(.., visibility, _) if visibility.node.is_pub() => return,\n+            FnKind::ItemFn(.., visibility, _) | FnKind::Method(.., Some(visibility), _) => {\n+                if visibility.node.is_pub() {\n+                    return;\n+                }\n+            },\n             FnKind::Closure(..) => return,\n             _ => (),\n         }"}, {"sha": "0ced20b7a566d81956b858755a6b8bbfe68b0126", "filename": "tests/ui/unnecessary_wrap.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/12474c62ff89ab122c2e6881b00680913fdf1d35/tests%2Fui%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12474c62ff89ab122c2e6881b00680913fdf1d35/tests%2Fui%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wrap.rs?ref=12474c62ff89ab122c2e6881b00680913fdf1d35", "patch": "@@ -76,6 +76,20 @@ fn func9(a: bool) -> Result<i32, ()> {\n     Err(())\n }\n \n+struct A;\n+\n+impl A {\n+    // should not be linted\n+    pub fn func10() -> Option<i32> {\n+        Some(1)\n+    }\n+\n+    // should be linted\n+    fn func11() -> Option<i32> {\n+        Some(1)\n+    }\n+}\n+\n fn main() {\n     // method calls are not linted\n     func1(true, true);"}, {"sha": "dbc5748c29ec456a99bff2326c0de002b0589bcd", "filename": "tests/ui/unnecessary_wrap.stderr", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/12474c62ff89ab122c2e6881b00680913fdf1d35/tests%2Fui%2Funnecessary_wrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12474c62ff89ab122c2e6881b00680913fdf1d35/tests%2Fui%2Funnecessary_wrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wrap.stderr?ref=12474c62ff89ab122c2e6881b00680913fdf1d35", "patch": "@@ -85,5 +85,22 @@ help: ...and change the returning expressions\n LL |     1\n    |\n \n-error: aborting due to 4 previous errors\n+error: this function's return value is unnecessarily wrapped by `Option`\n+  --> $DIR/unnecessary_wrap.rs:88:5\n+   |\n+LL | /     fn func11() -> Option<i32> {\n+LL | |         Some(1)\n+LL | |     }\n+   | |_____^\n+   |\n+help: remove `Option` from the return type...\n+   |\n+LL |     fn func11() -> i32 {\n+   |                    ^^^\n+help: ...and change the returning expressions\n+   |\n+LL |         1\n+   |\n+\n+error: aborting due to 5 previous errors\n "}]}