{"sha": "2b45a0d90853deca584a28a55237d996a274a833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNDVhMGQ5MDg1M2RlY2E1ODRhMjhhNTUyMzdkOTk2YTI3NGE4MzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T08:13:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T08:13:35Z"}, "message": "Auto merge of #27618 - dotdash:drop_fixes, r=luqmana", "tree": {"sha": "ef9ebf2ca8197982da800a694cab6e164143a1d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef9ebf2ca8197982da800a694cab6e164143a1d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b45a0d90853deca584a28a55237d996a274a833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b45a0d90853deca584a28a55237d996a274a833", "html_url": "https://github.com/rust-lang/rust/commit/2b45a0d90853deca584a28a55237d996a274a833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b45a0d90853deca584a28a55237d996a274a833/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "542d56ea91f403c5d7eb9511848509e5ddb8e05e", "url": "https://api.github.com/repos/rust-lang/rust/commits/542d56ea91f403c5d7eb9511848509e5ddb8e05e", "html_url": "https://github.com/rust-lang/rust/commit/542d56ea91f403c5d7eb9511848509e5ddb8e05e"}, {"sha": "f804872502587290dcab42eda35301314173cbd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f804872502587290dcab42eda35301314173cbd7", "html_url": "https://github.com/rust-lang/rust/commit/f804872502587290dcab42eda35301314173cbd7"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "fe20ae2cf39f150d9f19eba4352e71d2d9b3837d", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b45a0d90853deca584a28a55237d996a274a833/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b45a0d90853deca584a28a55237d996a274a833/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=2b45a0d90853deca584a28a55237d996a274a833", "patch": "@@ -324,7 +324,6 @@ fn trans_struct_drop_flag<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n \n pub fn get_res_dtor<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n                               did: ast::DefId,\n-                              t: Ty<'tcx>,\n                               parent_id: ast::DefId,\n                               substs: &Substs<'tcx>)\n                               -> ValueRef {\n@@ -347,11 +346,8 @@ pub fn get_res_dtor<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         let name = csearch::get_symbol(&ccx.sess().cstore, did);\n         let class_ty = tcx.lookup_item_type(parent_id).ty.subst(tcx, substs);\n         let llty = type_of_dtor(ccx, class_ty);\n-        let dtor_ty = ccx.tcx().mk_ctor_fn(did,\n-                                           &[get_drop_glue_type(ccx, t)],\n-                                           ccx.tcx().mk_nil());\n         foreign::get_extern_fn(ccx, &mut *ccx.externs().borrow_mut(), &name[..], llvm::CCallConv,\n-                               llty, dtor_ty)\n+                               llty, ccx.tcx().mk_nil())\n     }\n }\n \n@@ -366,7 +362,7 @@ fn trans_struct_drop<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     debug!(\"trans_struct_drop t: {}\", t);\n \n     // Find and call the actual destructor\n-    let dtor_addr = get_res_dtor(bcx.ccx(), dtor_did, t, class_did, substs);\n+    let dtor_addr = get_res_dtor(bcx.ccx(), dtor_did, class_did, substs);\n \n     // Class dtors have no explicit args, so the params should\n     // just consist of the environment (self)."}, {"sha": "5991d61a1e4eed0475f83c3e66b4bb4b27bfca70", "filename": "src/librustc_trans/trans/type_of.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2b45a0d90853deca584a28a55237d996a274a833/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b45a0d90853deca584a28a55237d996a274a833/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs?ref=2b45a0d90853deca584a28a55237d996a274a833", "patch": "@@ -472,6 +472,9 @@ fn llvm_type_name<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n }\n \n pub fn type_of_dtor<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, self_ty: Ty<'tcx>) -> Type {\n-    let self_ty = type_of(ccx, self_ty).ptr_to();\n-    Type::func(&[self_ty], &Type::void(ccx))\n+    if type_is_sized(ccx.tcx(), self_ty) {\n+        Type::func(&[type_of(ccx, self_ty).ptr_to()], &Type::void(ccx))\n+    } else {\n+        Type::func(&type_of(ccx, self_ty).field_types(), &Type::void(ccx))\n+    }\n }"}, {"sha": "1f944b6ed32f04a1dc1f42a413fb108951a64a04", "filename": "src/test/auxiliary/fat_drop.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2b45a0d90853deca584a28a55237d996a274a833/src%2Ftest%2Fauxiliary%2Ffat_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b45a0d90853deca584a28a55237d996a274a833/src%2Ftest%2Fauxiliary%2Ffat_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ffat_drop.rs?ref=2b45a0d90853deca584a28a55237d996a274a833", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub static mut DROPPED: bool = false;\n+\n+pub struct S {\n+    _unsized: [u8]\n+}\n+\n+impl Drop for S {\n+    fn drop(&mut self) {\n+        unsafe {\n+            DROPPED = true;\n+        }\n+    }\n+}"}, {"sha": "f587dc7821df04923c3522ab93111d39a2a501a2", "filename": "src/test/run-pass/extern_fat_drop.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2b45a0d90853deca584a28a55237d996a274a833/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b45a0d90853deca584a28a55237d996a274a833/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs?ref=2b45a0d90853deca584a28a55237d996a274a833", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:fat_drop.rs\n+\n+#![feature(core_intrinsics)]\n+\n+extern crate fat_drop;\n+\n+fn main() {\n+    unsafe {\n+        let s: &mut fat_drop::S = std::mem::uninitialized();\n+        std::intrinsics::drop_in_place(s);\n+        assert!(fat_drop::DROPPED);\n+    }\n+}"}]}