{"sha": "1b3870e4271ca7b93de0b17ea6544e749fba3483", "node_id": "C_kwDOAAsO6NoAKDFiMzg3MGU0MjcxY2E3YjkzZGUwYjE3ZWE2NTQ0ZTc0OWZiYTM0ODM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-11T15:36:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-11T15:36:18Z"}, "message": "remove a dubious example", "tree": {"sha": "177e10d3cff5f599c8c94c53527533b88d7bb986", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/177e10d3cff5f599c8c94c53527533b88d7bb986"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b3870e4271ca7b93de0b17ea6544e749fba3483", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3870e4271ca7b93de0b17ea6544e749fba3483", "html_url": "https://github.com/rust-lang/rust/commit/1b3870e4271ca7b93de0b17ea6544e749fba3483", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b3870e4271ca7b93de0b17ea6544e749fba3483/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eed5df52f63dbf19030fb99045334252fcd5b366", "url": "https://api.github.com/repos/rust-lang/rust/commits/eed5df52f63dbf19030fb99045334252fcd5b366", "html_url": "https://github.com/rust-lang/rust/commit/eed5df52f63dbf19030fb99045334252fcd5b366"}], "stats": {"total": 32, "additions": 0, "deletions": 32}, "files": [{"sha": "a9330a869200ff835062ca3bd02ac181417e0b82", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1b3870e4271ca7b93de0b17ea6544e749fba3483/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b3870e4271ca7b93de0b17ea6544e749fba3483/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=1b3870e4271ca7b93de0b17ea6544e749fba3483", "patch": "@@ -2583,38 +2583,6 @@ pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n /// }\n /// assert_eq!(vec, [0xfefefefe, 0xfefefefe, 0, 0]);\n /// ```\n-///\n-/// Creating an invalid value:\n-///\n-/// ```\n-/// use std::ptr;\n-///\n-/// let mut v = Box::new(0i32);\n-///\n-/// unsafe {\n-///     // Leaks the previously held value by overwriting the `Box<T>` with\n-///     // a null pointer.\n-///     ptr::write_bytes(&mut v as *mut Box<i32>, 0, 1);\n-/// }\n-///\n-/// // At this point, using or dropping `v` results in undefined behavior.\n-/// // drop(v); // ERROR\n-///\n-/// // Even leaking `v` \"uses\" it, and hence is undefined behavior.\n-/// // mem::forget(v); // ERROR\n-///\n-/// // In fact, `v` is invalid according to basic type layout invariants, so *any*\n-/// // operation touching it is undefined behavior.\n-/// // let v2 = v; // ERROR\n-///\n-/// unsafe {\n-///     // Let us instead put in a valid value\n-///     ptr::write(&mut v as *mut Box<i32>, Box::new(42i32));\n-/// }\n-///\n-/// // Now the box is fine\n-/// assert_eq!(*v, 42);\n-/// ```\n #[doc(alias = \"memset\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_write\", issue = \"86302\")]"}]}