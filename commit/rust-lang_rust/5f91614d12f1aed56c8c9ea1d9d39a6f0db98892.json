{"sha": "5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "node_id": "C_kwDOAAsO6NoAKDVmOTE2MTRkMTJmMWFlZDU2YzhjOWVhMWQ5ZDM5YTZmMGRiOTg4OTI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-06-22T22:36:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-07-07T19:25:56Z"}, "message": "Fix label on uninit binding field assignment", "tree": {"sha": "c1273e1996da4aa0b190cf09862675a5bc5a92a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1273e1996da4aa0b190cf09862675a5bc5a92a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "html_url": "https://github.com/rust-lang/rust/commit/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a86fa4fa388b25c182146d29c88243325d66c130", "url": "https://api.github.com/repos/rust-lang/rust/commits/a86fa4fa388b25c182146d29c88243325d66c130", "html_url": "https://github.com/rust-lang/rust/commit/a86fa4fa388b25c182146d29c88243325d66c130"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "c5420cee05eee1493240ffcd87e34dde33e18133", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "patch": "@@ -350,36 +350,37 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let mut visitor = ConditionVisitor { spans: &spans, name: &name, errors: vec![] };\n         visitor.visit_body(&body);\n \n-        let isnt_initialized =\n-            if let InitializationRequiringAction::PartialAssignment = desired_action {\n-                // The same error is emitted for bindings that are *sometimes* initialized and the ones\n-                // that are *partially* initialized by assigning to a field of an uninitialized\n-                // binding. We differentiate between them for more accurate wording here.\n-                \"isn't fully initialized\"\n-            } else if spans\n-                .iter()\n-                .filter(|i| {\n-                    // We filter these to avoid misleading wording in cases like the following,\n-                    // where `x` has an `init`, but it is in the same place we're looking at:\n-                    // ```\n-                    // let x;\n-                    // x += 1;\n-                    // ```\n-                    !i.contains(span)\n+        let isnt_initialized = if let InitializationRequiringAction::PartialAssignment\n+        | InitializationRequiringAction::Assignment = desired_action\n+        {\n+            // The same error is emitted for bindings that are *sometimes* initialized and the ones\n+            // that are *partially* initialized by assigning to a field of an uninitialized\n+            // binding. We differentiate between them for more accurate wording here.\n+            \"isn't fully initialized\"\n+        } else if spans\n+            .iter()\n+            .filter(|i| {\n+                // We filter these to avoid misleading wording in cases like the following,\n+                // where `x` has an `init`, but it is in the same place we're looking at:\n+                // ```\n+                // let x;\n+                // x += 1;\n+                // ```\n+                !i.contains(span)\n                     // We filter these to avoid incorrect main message on `match-cfg-fake-edges.rs`\n                         && !visitor\n                             .errors\n                             .iter()\n                             .map(|(sp, _)| *sp)\n                             .any(|sp| span < sp && !sp.contains(span))\n-                })\n-                .count()\n-                == 0\n-            {\n-                \"isn't initialized\"\n-            } else {\n-                \"is possibly-uninitialized\"\n-            };\n+            })\n+            .count()\n+            == 0\n+        {\n+            \"isn't initialized\"\n+        } else {\n+            \"is possibly-uninitialized\"\n+        };\n \n         let used = desired_action.as_general_verb_in_past_tense();\n         let mut err ="}, {"sha": "7b5b64ff8cd239034d34d1f6b5c5bfde46e07c19", "filename": "src/test/ui/borrowck/borrowck-partial-reinit-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-partial-reinit-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-partial-reinit-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-partial-reinit-4.stderr?ref=5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "patch": "@@ -1,10 +1,10 @@\n-error[E0381]: assigned binding `x.0` isn't initialized\n+error[E0381]: assigned binding `x.0` isn't fully initialized\n   --> $DIR/borrowck-partial-reinit-4.rs:17:5\n    |\n LL |     let mut x : (Test2, Test2);\n    |         ----- binding declared here but left uninitialized\n LL |     (x.0).0 = Some(Test);\n-   |     ^^^^^^^ `x.0` assigned here but it isn't initialized\n+   |     ^^^^^^^ `x.0` assigned here but it isn't fully initialized\n \n error: aborting due to previous error\n "}, {"sha": "9ecfe2f754ac5e44e3c88fe594bd87ca59c2f4c8", "filename": "src/test/ui/nll/issue-21232-partial-init-and-erroneous-use.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f91614d12f1aed56c8c9ea1d9d39a6f0db98892/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr?ref=5f91614d12f1aed56c8c9ea1d9d39a6f0db98892", "patch": "@@ -1,18 +1,18 @@\n-error[E0381]: assigned binding `d` isn't initialized\n+error[E0381]: assigned binding `d` isn't fully initialized\n   --> $DIR/issue-21232-partial-init-and-erroneous-use.rs:28:5\n    |\n LL |     let d: D;\n    |         - binding declared here but left uninitialized\n LL |     d.x = 10;\n-   |     ^^^^^^^^ `d` assigned here but it isn't initialized\n+   |     ^^^^^^^^ `d` assigned here but it isn't fully initialized\n \n-error[E0381]: assigned binding `d` isn't initialized\n+error[E0381]: assigned binding `d` isn't fully initialized\n   --> $DIR/issue-21232-partial-init-and-erroneous-use.rs:33:5\n    |\n LL |     let mut d: D;\n    |         ----- binding declared here but left uninitialized\n LL |     d.x = 10;\n-   |     ^^^^^^^^ `d` assigned here but it isn't initialized\n+   |     ^^^^^^^^ `d` assigned here but it isn't fully initialized\n \n error[E0382]: assign of moved value: `d`\n   --> $DIR/issue-21232-partial-init-and-erroneous-use.rs:39:5"}]}