{"sha": "be56dc037fac13baba66a13021243a02ec75f8a5", "node_id": "C_kwDOAAsO6NoAKGJlNTZkYzAzN2ZhYzEzYmFiYTY2YTEzMDIxMjQzYTAyZWM3NWY4YTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-29T17:24:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-29T17:24:30Z"}, "message": "Rollup merge of #106190 - estebank:multiline-start-tweak, r=jackh726\n\nAccount for multiple multiline spans with empty padding\n\nInstead of\n\n```\nLL |    fn oom(\n   |  __^\n   | | _|\n   | ||\nLL | || ) {\n   | ||_-\nLL | |  }\n   | |__^\n```\n\nemit\n\n```\nLL | // fn oom(\nLL | || ) {\n   | ||_-\nLL | |  }\n   | |__^\n   ```", "tree": {"sha": "9d24dfe050d5f14557c624278a1bc5b6ca476b30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d24dfe050d5f14557c624278a1bc5b6ca476b30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be56dc037fac13baba66a13021243a02ec75f8a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjrc1OCRBK7hj4Ov3rIwAAbXsIAK4vSoJW87EegAskGEhBZA9j\nDBDSJD2R3Imtd8HMtgXlGGinSr/fR5S+fd8HEx2gBqfWh++nhUnOH/ZbClCK9SI2\n+hMR1M+Pi021xhG6UAOsy0H6X4FK7ebYhtXLvlzFgQalJJRgugiYMST/DcOdsP+6\nbPDILxDRsDBjISaAhyfSdHW0wh6ZerIgBh6S33BJ/aYfMaxRuaO8jDm6FM54AaxT\np5Mp3FdqPY+BqCXqPV9WkiJ0gQULH6ttwp+QgcwRwgkBrdcdMq3yTj+RuInmUMku\nphlhzvbgfYwLciM7AvL1GRFuUyxTrA8VciAMk42yH8PEtIY8NF3NQyGgyuZOr78=\n=7blp\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d24dfe050d5f14557c624278a1bc5b6ca476b30\nparent 10374d3807e18ff5a62699c7700a08d0cb647d1e\nparent af74ca0666814e6c448259f2ab796435ababb664\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672334670 +0100\ncommitter GitHub <noreply@github.com> 1672334670 +0100\n\nRollup merge of #106190 - estebank:multiline-start-tweak, r=jackh726\n\nAccount for multiple multiline spans with empty padding\n\nInstead of\n\n```\nLL |    fn oom(\n   |  __^\n   | | _|\n   | ||\nLL | || ) {\n   | ||_-\nLL | |  }\n   | |__^\n```\n\nemit\n\n```\nLL | // fn oom(\nLL | || ) {\n   | ||_-\nLL | |  }\n   | |__^\n   ```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be56dc037fac13baba66a13021243a02ec75f8a5", "html_url": "https://github.com/rust-lang/rust/commit/be56dc037fac13baba66a13021243a02ec75f8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be56dc037fac13baba66a13021243a02ec75f8a5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10374d3807e18ff5a62699c7700a08d0cb647d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/10374d3807e18ff5a62699c7700a08d0cb647d1e", "html_url": "https://github.com/rust-lang/rust/commit/10374d3807e18ff5a62699c7700a08d0cb647d1e"}, {"sha": "af74ca0666814e6c448259f2ab796435ababb664", "url": "https://api.github.com/repos/rust-lang/rust/commits/af74ca0666814e6c448259f2ab796435ababb664", "html_url": "https://github.com/rust-lang/rust/commit/af74ca0666814e6c448259f2ab796435ababb664"}], "stats": {"total": 77, "additions": 30, "deletions": 47}, "files": [{"sha": "0ca200abe19fb381097e2386bcf408c0863135ef", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -845,18 +845,34 @@ impl EmitterWriter {\n         // 3 | |\n         // 4 | | }\n         //   | |_^ test\n-        if let [ann] = &line.annotations[..] {\n+        let mut buffer_ops = vec![];\n+        let mut annotations = vec![];\n+        let mut short_start = true;\n+        for ann in &line.annotations {\n             if let AnnotationType::MultilineStart(depth) = ann.annotation_type {\n                 if source_string.chars().take(ann.start_col).all(|c| c.is_whitespace()) {\n                     let style = if ann.is_primary {\n                         Style::UnderlinePrimary\n                     } else {\n                         Style::UnderlineSecondary\n                     };\n-                    buffer.putc(line_offset, width_offset + depth - 1, '/', style);\n-                    return vec![(depth, style)];\n+                    annotations.push((depth, style));\n+                    buffer_ops.push((line_offset, width_offset + depth - 1, '/', style));\n+                } else {\n+                    short_start = false;\n+                    break;\n                 }\n+            } else if let AnnotationType::MultilineLine(_) = ann.annotation_type {\n+            } else {\n+                short_start = false;\n+                break;\n+            }\n+        }\n+        if short_start {\n+            for (y, x, c, s) in buffer_ops {\n+                buffer.putc(y, x, c, s);\n             }\n+            return annotations;\n         }\n \n         // We want to display like this:"}, {"sha": "59192a1ecc3f493a8a3e34f93583fe00a94680bf", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-1.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -3,10 +3,7 @@ error[E0308]: mismatched types\n    |\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n-LL |    fn oom(\n-   |  __^\n-   | | _|\n-   | ||\n+LL | // fn oom(\n LL | ||     info: &Layout,\n LL | || ) -> ()\n    | ||_______- arguments to this function are incorrect\n@@ -29,10 +26,7 @@ error[E0308]: mismatched types\n    |\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n-LL |    fn oom(\n-   |  __^\n-   | | _|\n-   | ||\n+LL | // fn oom(\n LL | ||     info: &Layout,\n LL | || ) -> ()\n    | ||_______^ expected `!`, found `()`"}, {"sha": "7d23c2fc05ac3d9d086c91fb928f15a8f8f2bd56", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-2.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -3,10 +3,7 @@ error[E0308]: mismatched types\n    |\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n-LL |    fn oom(\n-   |  __^\n-   | | _|\n-   | ||\n+LL | // fn oom(\n LL | ||     info: Layout,\n LL | || ) {\n    | ||_- arguments to this function are incorrect\n@@ -36,10 +33,7 @@ error[E0308]: mismatched types\n    |\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n-LL |    fn oom(\n-   |  __^\n-   | | _|\n-   | ||\n+LL | // fn oom(\n LL | ||     info: Layout,\n LL | || ) {\n    | ||_^ expected `!`, found `()`"}, {"sha": "f6c50c2e1fdd08e3131e435f76b603d00a1840dc", "filename": "src/test/ui/asm/aarch64/interpolated-idents.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -30,12 +30,7 @@ error: asm outputs are not allowed with the `noreturn` option\n LL |               asm!(\"\", $in(x) x, $out(x) x, $lateout(x) x, $inout(x) x, $inlateout(x) x,\n    |                                  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n ...\n-LL |       m!(in out lateout inout inlateout const sym\n-   |  _____-\n-   | |_____|\n-   | |_____|\n-   | |_____|\n-   | |\n+LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack options);\n    | |                                -"}, {"sha": "80a8c8c77cfec1c0cdaa13bcaa24e33e310e9210", "filename": "src/test/ui/asm/x86_64/interpolated-idents.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -30,12 +30,7 @@ error: asm outputs are not allowed with the `noreturn` option\n LL |               asm!(\"\", $in(x) x, $out(x) x, $lateout(x) x, $inout(x) x, $inlateout(x) x,\n    |                                  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n ...\n-LL |       m!(in out lateout inout inlateout const sym\n-   |  _____-\n-   | |_____|\n-   | |_____|\n-   | |_____|\n-   | |\n+LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack att_syntax options);\n    | |                                           -"}, {"sha": "a365e24e27e27f53e2671ed5260e6a5e67503494", "filename": "src/test/ui/issues/issue-13497-2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -1,10 +1,7 @@\n error[E0515]: cannot return value referencing local variable `rawLines`\n   --> $DIR/issue-13497-2.rs:3:5\n    |\n-LL |        rawLines\n-   |  ______^\n-   | | _____|\n-   | ||\n+LL | //     rawLines\n LL | ||         .iter().map(|l| l.trim()).collect()\n    | ||_______________-___________________________^ returns a value referencing data owned by the current function\n    |  |_______________|"}, {"sha": "a2b5597847846f662621d12157fbf293e491a1e9", "filename": "src/test/ui/suggestions/issue-99240-2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -4,10 +4,7 @@ error[E0618]: expected function, found enum variant `Alias::Unit`\n LL |        Unit,\n    |        ---- enum variant `Alias::Unit` defined here\n ...\n-LL |        Alias::\n-   |  ______^\n-   | | _____|\n-   | ||\n+LL | //     Alias::\n LL | ||     Unit();\n    | ||________^_- call expression requires function\n    |  |________|"}, {"sha": "22ce1c6f6471b541dad4a7dda9b87aadb484db7c", "filename": "src/tools/clippy/tests/ui/async_yields_async.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -3,8 +3,7 @@ error: an async construct yields a type which is itself awaitable\n    |\n LL |        let _h = async {\n    |  _____________________-\n-LL | |          async {\n-   | | _________^\n+LL | |/         async {\n LL | ||             3\n LL | ||         }\n    | ||_________^ awaitable value not awaited\n@@ -37,8 +36,7 @@ error: an async construct yields a type which is itself awaitable\n    |\n LL |        let _j = async || {\n    |  ________________________-\n-LL | |          async {\n-   | | _________^\n+LL | |/         async {\n LL | ||             3\n LL | ||         }\n    | ||_________^ awaitable value not awaited"}, {"sha": "d0e534f635682cefd2e12a4f3a390cb3ff7cc3ef", "filename": "src/tools/clippy/tests/ui/result_map_unit_fn_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be56dc037fac13baba66a13021243a02ec75f8a5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr?ref=be56dc037fac13baba66a13021243a02ec75f8a5", "patch": "@@ -19,10 +19,7 @@ LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value)\n error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`\n   --> $DIR/result_map_unit_fn_unfixable.rs:29:5\n    |\n-LL |        x.field.map(|value| {\n-   |  ______^\n-   | | _____|\n-   | ||\n+LL | //     x.field.map(|value| {\n LL | ||         do_nothing(value);\n LL | ||         do_nothing(value)\n LL | ||     });"}]}