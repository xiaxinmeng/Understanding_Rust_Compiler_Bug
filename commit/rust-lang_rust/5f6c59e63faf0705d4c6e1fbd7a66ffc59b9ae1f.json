{"sha": "5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "node_id": "C_kwDOAAsO6NoAKDVmNmM1OWU2M2ZhZjA3MDVkNGM2ZTFmYmQ3YTY2ZmZjNTliOWFlMWY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-18T17:58:37Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-18T17:58:37Z"}, "message": "Pass only the Function to write_clif_file", "tree": {"sha": "5df64a256900fc7bb13cf709b9b77ee10674ce25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5df64a256900fc7bb13cf709b9b77ee10674ce25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "html_url": "https://github.com/rust-lang/rust/commit/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3b2d37e7754458a14ac99cee970ede383eddc2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b2d37e7754458a14ac99cee970ede383eddc2f", "html_url": "https://github.com/rust-lang/rust/commit/f3b2d37e7754458a14ac99cee970ede383eddc2f"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c1c9a08dc5f6ed4922d1f24cb66226369bc97ee3", "filename": "src/base.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "patch": "@@ -105,19 +105,19 @@ pub(crate) fn codegen_fn<'tcx>(\n \n     fx.constants_cx.finalize(fx.tcx, &mut *fx.module);\n \n-    // Store function in context\n-    let context = &mut cx.cached_context;\n-    context.func = func;\n-\n     crate::pretty_clif::write_clif_file(\n         tcx,\n         \"unopt\",\n         module.isa(),\n         instance,\n-        &context,\n+        &func,\n         &clif_comments,\n     );\n \n+    // Store function in context\n+    let context = &mut cx.cached_context;\n+    context.func = func;\n+\n     // Verify function\n     verify_func(tcx, &clif_comments, &context.func);\n \n@@ -156,7 +156,7 @@ pub(crate) fn codegen_fn<'tcx>(\n         \"opt\",\n         module.isa(),\n         instance,\n-        &context,\n+        &context.func,\n         &clif_comments,\n     );\n "}, {"sha": "d1f89adb3bb916789436685d774ff220b159ed9f", "filename": "src/optimize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Foptimize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Foptimize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foptimize%2Fmod.rs?ref=5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "patch": "@@ -15,6 +15,6 @@ pub(crate) fn optimize_function<'tcx>(\n ) {\n     // FIXME classify optimizations over opt levels once we have more\n \n-    crate::pretty_clif::write_clif_file(tcx, \"preopt\", isa, instance, &ctx, &*clif_comments);\n+    crate::pretty_clif::write_clif_file(tcx, \"preopt\", isa, instance, &ctx.func, &*clif_comments);\n     crate::base::verify_func(tcx, &*clif_comments, &ctx.func);\n }"}, {"sha": "5b77f4ef0c9f17ec3668a34d02803f75ba5addd9", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=5f6c59e63faf0705d4c6e1fbd7a66ffc59b9ae1f", "patch": "@@ -234,7 +234,7 @@ pub(crate) fn write_clif_file<'tcx>(\n     postfix: &str,\n     isa: &dyn cranelift_codegen::isa::TargetIsa,\n     instance: Instance<'tcx>,\n-    context: &cranelift_codegen::Context,\n+    func: &cranelift_codegen::ir::Function,\n     mut clif_comments: &CommentWriter,\n ) {\n     write_ir_file(\n@@ -245,7 +245,7 @@ pub(crate) fn write_clif_file<'tcx>(\n             cranelift_codegen::write::decorate_function(\n                 &mut clif_comments,\n                 &mut clif,\n-                &context.func,\n+                func,\n             )\n             .unwrap();\n "}]}