{"sha": "bbe59c719725d0d6957623c1e391858bedd21779", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZTU5YzcxOTcyNWQwZDY5NTc2MjNjMWUzOTE4NThiZWRkMjE3Nzk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-20T22:40:02Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-30T10:39:14Z"}, "message": "Reload watcher configuration", "tree": {"sha": "c99275536199e46e7b0408c8e0322e48da9c8f3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c99275536199e46e7b0408c8e0322e48da9c8f3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbe59c719725d0d6957623c1e391858bedd21779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe59c719725d0d6957623c1e391858bedd21779", "html_url": "https://github.com/rust-lang/rust/commit/bbe59c719725d0d6957623c1e391858bedd21779", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbe59c719725d0d6957623c1e391858bedd21779/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a23bec2cdd008ff04cb01cdcca1f379f53156a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a23bec2cdd008ff04cb01cdcca1f379f53156a3", "html_url": "https://github.com/rust-lang/rust/commit/8a23bec2cdd008ff04cb01cdcca1f379f53156a3"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "b0c3c6a0610eac475f994f66fb84d6a1db664c50", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/bbe59c719725d0d6957623c1e391858bedd21779/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe59c719725d0d6957623c1e391858bedd21779/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=bbe59c719725d0d6957623c1e391858bedd21779", "patch": "@@ -31,6 +31,23 @@ use crate::{\n use ra_db::ExternSourceId;\n use rustc_hash::{FxHashMap, FxHashSet};\n \n+fn create_watcher(workspaces: &[ProjectWorkspace], options: &Options) -> CheckWatcher {\n+    workspaces\n+        .iter()\n+        .find_map(|w| match w {\n+            ProjectWorkspace::Cargo { cargo, .. } => Some(cargo),\n+            ProjectWorkspace::Json { .. } => None,\n+        })\n+        .map(|cargo| {\n+            let cargo_project_root = cargo.workspace_root().to_path_buf();\n+            Some(CheckWatcher::new(&options.cargo_watch, cargo_project_root))\n+        })\n+        .unwrap_or_else(|| {\n+            log::warn!(\"Cargo check watching only supported for cargo workspaces, disabling\");\n+            None\n+        })\n+}\n+\n #[derive(Debug, Clone)]\n pub struct Options {\n     pub publish_decorations: bool,\n@@ -168,20 +185,7 @@ impl WorldState {\n         change.set_crate_graph(crate_graph);\n \n         // FIXME: Figure out the multi-workspace situation\n-        let check_watcher = workspaces\n-            .iter()\n-            .find_map(|w| match w {\n-                ProjectWorkspace::Cargo { cargo, .. } => Some(cargo),\n-                ProjectWorkspace::Json { .. } => None,\n-            })\n-            .map(|cargo| {\n-                let cargo_project_root = cargo.workspace_root().to_path_buf();\n-                Some(CheckWatcher::new(&options.cargo_watch, cargo_project_root))\n-            })\n-            .unwrap_or_else(|| {\n-                log::warn!(\"Cargo check watching only supported for cargo workspaces, disabling\");\n-                None\n-            });\n+        let check_watcher = create_watcher(&workspaces, &options);\n \n         let mut analysis_host = AnalysisHost::new(lru_capacity);\n         analysis_host.apply_change(change);\n@@ -207,6 +211,7 @@ impl WorldState {\n     ) {\n         self.feature_flags = Arc::new(feature_flags);\n         self.analysis_host.update_lru_capacity(lru_capacity);\n+        self.check_watcher = create_watcher(&self.workspaces, &options);\n         self.options = options;\n     }\n "}]}