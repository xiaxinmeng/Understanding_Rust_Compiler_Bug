{"sha": "327e8e9196b638c4ed35ab2d57d550a3138a628b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyN2U4ZTkxOTZiNjM4YzRlZDM1YWIyZDU3ZDU1MGEzMTM4YTYyOGI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-11T22:34:41Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-14T01:38:07Z"}, "message": "Rust unstable book: basic desc and example for `conservative_impl_trait`.", "tree": {"sha": "d155b29b0ef6b4cdfa33abdd34ae007665acd7c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d155b29b0ef6b4cdfa33abdd34ae007665acd7c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/327e8e9196b638c4ed35ab2d57d550a3138a628b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/327e8e9196b638c4ed35ab2d57d550a3138a628b", "html_url": "https://github.com/rust-lang/rust/commit/327e8e9196b638c4ed35ab2d57d550a3138a628b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/327e8e9196b638c4ed35ab2d57d550a3138a628b/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06c51553ddc202a79f2c0b76822ad56c4a30f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06c51553ddc202a79f2c0b76822ad56c4a30f80", "html_url": "https://github.com/rust-lang/rust/commit/e06c51553ddc202a79f2c0b76822ad56c4a30f80"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "62a7f8c16a0a71d5c09b64883d6191fe42e1bf15", "filename": "src/doc/unstable-book/src/conservative-impl-trait.md", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/327e8e9196b638c4ed35ab2d57d550a3138a628b/src%2Fdoc%2Funstable-book%2Fsrc%2Fconservative-impl-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/327e8e9196b638c4ed35ab2d57d550a3138a628b/src%2Fdoc%2Funstable-book%2Fsrc%2Fconservative-impl-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fconservative-impl-trait.md?ref=327e8e9196b638c4ed35ab2d57d550a3138a628b", "patch": "@@ -6,5 +6,61 @@ The tracking issue for this feature is: [#34511]\n \n ------------------------\n \n+The `conservative_impl_trait` feature allows a conservative form of abstract\n+return types.\n \n+Abstract return types allow a function to hide a concrete return type behind a\n+trait interface similar to trait objects, while still generating the same\n+statically dispatched code as with concrete types.\n \n+## Examples\n+\n+```rust\n+#![feature(conservative_impl_trait)]\n+\n+fn even_iter() -> impl Iterator<Item=u32> {\n+    (0..).map(|n| n * 2)\n+}\n+\n+fn main() {\n+    let first_four_even_numbers = even_iter().take(4).collect::<Vec<_>>();\n+    assert_eq!(first_four_even_numbers, vec![0, 2, 4, 6]);\n+}\n+```\n+\n+## Background\n+\n+In today's Rust, you can write function signatures like:\n+\n+````rust,ignore\n+fn consume_iter_static<I: Iterator<u8>>(iter: I) { }\n+\n+fn consume_iter_dynamic(iter: Box<Iterator<u8>>) { }\n+````\n+\n+In both cases, the function does not depend on the exact type of the argument.\n+The type held is \"abstract\", and is assumed only to satisfy a trait bound.\n+\n+* In the `_static` version using generics, each use of the function is\n+  specialized to a concrete, statically-known type, giving static dispatch,\n+  inline layout, and other performance wins.\n+* In the `_dynamic` version using trait objects, the concrete argument type is\n+  only known at runtime using a vtable.\n+\n+On the other hand, while you can write:\n+\n+````rust,ignore\n+fn produce_iter_dynamic() -> Box<Iterator<u8>> { }\n+````\n+\n+...but you _cannot_ write something like:\n+\n+````rust,ignore\n+fn produce_iter_static() -> Iterator<u8> { }\n+````\n+\n+That is, in today's Rust, abstract return types can only be written using trait\n+objects, which can be a significant performance penalty. This RFC proposes\n+\"unboxed abstract types\" as a way of achieving signatures like\n+`produce_iter_static`. Like generics, unboxed abstract types guarantee static\n+dispatch and inline data layout."}]}