{"sha": "98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZmMwMmQ2ZmFlYjM5YzdhNDI2NGFmOGZmZGVkYzZhNWExNTdmODk=", "commit": {"author": {"name": "SNCPlay42", "email": "SNCPlay42@gmail.com", "date": "2020-11-26T15:32:41Z"}, "committer": {"name": "SNCPlay42", "email": "SNCPlay42@gmail.com", "date": "2020-12-04T16:37:23Z"}, "message": "check the recursion limit when finding struct tail", "tree": {"sha": "3538f67ad8c5ec4850e34782711a48aa82e69070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3538f67ad8c5ec4850e34782711a48aa82e69070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "html_url": "https://github.com/rust-lang/rust/commit/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/comments", "author": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d9651648d3b741e81ba7042e49a07b78a441517", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9651648d3b741e81ba7042e49a07b78a441517", "html_url": "https://github.com/rust-lang/rust/commit/0d9651648d3b741e81ba7042e49a07b78a441517"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "25787f005aa23b454c008ce960a55c3c6cbfe5e2", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "patch": "@@ -18,7 +18,7 @@ use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_macros::HashStable;\n-use rustc_span::Span;\n+use rustc_span::{Span, DUMMY_SP};\n use rustc_target::abi::{Integer, Size, TargetDataLayout};\n use smallvec::SmallVec;\n use std::{cmp, fmt};\n@@ -221,7 +221,13 @@ impl<'tcx> TyCtxt<'tcx> {\n         mut ty: Ty<'tcx>,\n         normalize: impl Fn(Ty<'tcx>) -> Ty<'tcx>,\n     ) -> Ty<'tcx> {\n-        loop {\n+        for iteration in 0.. {\n+            if !self.sess.recursion_limit().value_within_limit(iteration) {\n+                return self.ty_error_with_message(\n+                    DUMMY_SP,\n+                    &format!(\"reached the recursion limit finding the struct tail for {}\", ty),\n+                );\n+            }\n             match *ty.kind() {\n                 ty::Adt(def, substs) => {\n                     if !def.is_struct() {"}, {"sha": "70a203ea6e81468ba6e015f4006f4d4576e58184", "filename": "src/test/ui/infinite/infinite-struct.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.rs?ref=98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "patch": "@@ -0,0 +1,10 @@\n+struct Take(Take);\n+//~^ ERROR has infinite size\n+//~| ERROR cycle detected\n+\n+// check that we don't hang trying to find the tail of a recursive struct (#79437)\n+fn foo() -> Take {\n+    Take(loop {})\n+}\n+\n+fn main() {}"}, {"sha": "d180670e38fda7a8ba7d17384f342458ab7290e5", "filename": "src/test/ui/infinite/infinite-struct.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98fc02d6faeb39c7a4264af8ffdedc6a5a157f89/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-struct.stderr?ref=98fc02d6faeb39c7a4264af8ffdedc6a5a157f89", "patch": "@@ -0,0 +1,27 @@\n+error[E0072]: recursive type `Take` has infinite size\n+  --> $DIR/infinite-struct.rs:1:1\n+   |\n+LL | struct Take(Take);\n+   | ^^^^^^^^^^^^----^^\n+   | |           |\n+   | |           recursive without indirection\n+   | recursive type has infinite size\n+   |\n+help: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to make `Take` representable\n+   |\n+LL | struct Take(Box<Take>);\n+   |             ^^^^    ^\n+\n+error[E0391]: cycle detected when computing drop-check constraints for `Take`\n+  --> $DIR/infinite-struct.rs:1:1\n+   |\n+LL | struct Take(Take);\n+   | ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: ...which again requires computing drop-check constraints for `Take`, completing the cycle\n+   = note: cycle used when computing dropck types for `Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing }, value: Take } }`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0072, E0391.\n+For more information about an error, try `rustc --explain E0072`."}]}