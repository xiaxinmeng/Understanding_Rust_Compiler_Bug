{"sha": "1636f61a1594202c4f8adebce9a21f7e0390873e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MzZmNjFhMTU5NDIwMmM0ZjhhZGViY2U5YTIxZjdlMDM5MDg3M2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-30T08:42:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-30T08:42:13Z"}, "message": "Merge #10005\n\n10005: Extend `CargoConfig.unset_test_crates`  r=matklad a=regexident\n\nThis is to allow for efficiently disabling `#[cfg(test)]` on all crates (by passing `unset_test_crates: UnsetTestCrates::All`) without having to first load the crate graph, when using rust-analyzer as a library.\r\n\r\n(FYI: The change doesn't seem to be covered by any existing tests.)\n\nCo-authored-by: Vincent Esche <regexident@gmail.com>", "tree": {"sha": "32b712f1ca8101b8726fb06112bd66c2fec396a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32b712f1ca8101b8726fb06112bd66c2fec396a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1636f61a1594202c4f8adebce9a21f7e0390873e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLJnlCRBK7hj4Ov3rIwAAjagIAJNJ5dgx3Y1eorf2RaM0XZgN\nltLPPOZU2249LtU4vwI7cfGnPa7NOsqByWKk0Ja6apQJK6LihXqCrQAQQp+JiZvS\nSjMZclZS7UVgWN1W3rjk4R2MnNE23khYsGCqNLs2uS08FYKWdmyTgpI6oIe2i/Rm\nwmq0qDpve/ZEiA7Dd71cNmnkOagpCyrbXGGfw60wlRW3cWbLuzzU4MXxv4seuoWQ\nqjy/u9E6tT/fGucZcjC//5OiDdmcmFhNyyUvWIhpX+HQoeYaCxlsY9EIaeMkFRFc\nqM3pnSztriyRCoXTTYDFp7RdmOImJB38YBz2XmhMLQJ0/EpGKHi1MbOGeu42+Nk=\n=z6T/\n-----END PGP SIGNATURE-----\n", "payload": "tree 32b712f1ca8101b8726fb06112bd66c2fec396a3\nparent d250aa77ec0a088eab350743b8f0882650d17a0d\nparent 74880a10ae581118e26696cb28b9dcfb0d792e07\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1630312933 +0000\ncommitter GitHub <noreply@github.com> 1630312933 +0000\n\nMerge #10005\n\n10005: Extend `CargoConfig.unset_test_crates`  r=matklad a=regexident\n\nThis is to allow for efficiently disabling `#[cfg(test)]` on all crates (by passing `unset_test_crates: UnsetTestCrates::All`) without having to first load the crate graph, when using rust-analyzer as a library.\r\n\r\n(FYI: The change doesn't seem to be covered by any existing tests.)\n\nCo-authored-by: Vincent Esche <regexident@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1636f61a1594202c4f8adebce9a21f7e0390873e", "html_url": "https://github.com/rust-lang/rust/commit/1636f61a1594202c4f8adebce9a21f7e0390873e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1636f61a1594202c4f8adebce9a21f7e0390873e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d250aa77ec0a088eab350743b8f0882650d17a0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d250aa77ec0a088eab350743b8f0882650d17a0d", "html_url": "https://github.com/rust-lang/rust/commit/d250aa77ec0a088eab350743b8f0882650d17a0d"}, {"sha": "74880a10ae581118e26696cb28b9dcfb0d792e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/74880a10ae581118e26696cb28b9dcfb0d792e07", "html_url": "https://github.com/rust-lang/rust/commit/74880a10ae581118e26696cb28b9dcfb0d792e07"}], "stats": {"total": 987, "additions": 972, "deletions": 15}, "files": [{"sha": "e942b13e474051f24cdf454c4237096f9fe7169c", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=1636f61a1594202c4f8adebce9a21f7e0390873e", "patch": "@@ -57,6 +57,20 @@ pub enum RustcSource {\n     Discover,\n }\n \n+/// Crates to disable `#[cfg(test)]` on.\n+#[derive(Clone, Debug, PartialEq, Eq)]\n+pub enum UnsetTestCrates {\n+    None,\n+    Only(Vec<String>),\n+    All,\n+}\n+\n+impl Default for UnsetTestCrates {\n+    fn default() -> Self {\n+        Self::None\n+    }\n+}\n+\n #[derive(Default, Clone, Debug, PartialEq, Eq)]\n pub struct CargoConfig {\n     /// Do not activate the `default` feature.\n@@ -80,20 +94,29 @@ pub struct CargoConfig {\n     pub rustc_source: Option<RustcSource>,\n \n     /// crates to disable `#[cfg(test)]` on\n-    pub unset_test_crates: Vec<String>,\n+    pub unset_test_crates: UnsetTestCrates,\n \n     pub wrap_rustc_in_build_scripts: bool,\n }\n \n impl CargoConfig {\n     pub fn cfg_overrides(&self) -> CfgOverrides {\n-        self.unset_test_crates\n-            .iter()\n-            .cloned()\n-            .zip(iter::repeat_with(|| {\n-                cfg::CfgDiff::new(Vec::new(), vec![cfg::CfgAtom::Flag(\"test\".into())]).unwrap()\n-            }))\n-            .collect()\n+        match &self.unset_test_crates {\n+            UnsetTestCrates::None => CfgOverrides::Selective(iter::empty().collect()),\n+            UnsetTestCrates::Only(unset_test_crates) => CfgOverrides::Selective(\n+                unset_test_crates\n+                    .iter()\n+                    .map(|name| name.clone())\n+                    .zip(iter::repeat_with(|| {\n+                        cfg::CfgDiff::new(Vec::new(), vec![cfg::CfgAtom::Flag(\"test\".into())])\n+                            .unwrap()\n+                    }))\n+                    .collect(),\n+            ),\n+            UnsetTestCrates::All => CfgOverrides::Wildcard(\n+                cfg::CfgDiff::new(Vec::new(), vec![cfg::CfgAtom::Flag(\"test\".into())]).unwrap(),\n+            ),\n+        }\n     }\n }\n "}, {"sha": "e1bc5fe86bea60d0cacb9be5bc151ef8e0e9d294", "filename": "crates/project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Flib.rs?ref=1636f61a1594202c4f8adebce9a21f7e0390873e", "patch": "@@ -42,7 +42,7 @@ pub use crate::{\n     build_scripts::WorkspaceBuildScripts,\n     cargo_workspace::{\n         CargoConfig, CargoWorkspace, Package, PackageData, PackageDependency, RustcSource, Target,\n-        TargetData, TargetKind,\n+        TargetData, TargetKind, UnsetTestCrates,\n     },\n     manifest_path::ManifestPath,\n     project_json::{ProjectJson, ProjectJsonData},"}, {"sha": "840bc281fca771d8b978b6e4c39444065c873688", "filename": "crates/project_model/src/tests.rs", "status": "modified", "additions": 902, "deletions": 1, "changes": 903, "blob_url": "https://github.com/rust-lang/rust/blob/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Ftests.rs?ref=1636f61a1594202c4f8adebce9a21f7e0390873e", "patch": "@@ -4,6 +4,7 @@ use std::{\n };\n \n use base_db::{CrateGraph, FileId};\n+use cfg::{CfgAtom, CfgDiff};\n use expect_test::{expect, Expect};\n use paths::{AbsPath, AbsPathBuf};\n use serde::de::DeserializeOwned;\n@@ -14,6 +15,10 @@ use crate::{\n };\n \n fn load_cargo(file: &str) -> CrateGraph {\n+    load_cargo_with_overrides(file, CfgOverrides::default())\n+}\n+\n+fn load_cargo_with_overrides(file: &str, cfg_overrides: CfgOverrides) -> CrateGraph {\n     let meta = get_test_json_file(file);\n     let cargo_workspace = CargoWorkspace::new(meta);\n     let project_workspace = ProjectWorkspace::Cargo {\n@@ -22,7 +27,7 @@ fn load_cargo(file: &str) -> CrateGraph {\n         sysroot: None,\n         rustc: None,\n         rustc_cfg: Vec::new(),\n-        cfg_overrides: CfgOverrides::default(),\n+        cfg_overrides,\n     };\n     to_crate_graph(project_workspace)\n }\n@@ -99,6 +104,902 @@ fn check_crate_graph(crate_graph: CrateGraph, expect: Expect) {\n     expect.assert_eq(&crate_graph);\n }\n \n+#[test]\n+fn cargo_hello_world_project_model_with_wildcard_overrides() {\n+    let cfg_overrides = CfgOverrides::Wildcard(\n+        CfgDiff::new(Vec::new(), vec![CfgAtom::Flag(\"test\".into())]).unwrap(),\n+    );\n+    let crate_graph = load_cargo_with_overrides(\"hello-world-metadata.json\", cfg_overrides);\n+    check_crate_graph(\n+        crate_graph,\n+        expect![[r#\"\n+            CrateGraph {\n+                arena: {\n+                    CrateId(\n+                        0,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            1,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                canonical_name: \"hello-world\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        5,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            6,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"const_fn\",\n+                                ),\n+                                canonical_name: \"const_fn\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        2,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            3,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"an_example\",\n+                                ),\n+                                canonical_name: \"an-example\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        4,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            5,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                                canonical_name: \"libc\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        1,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            2,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                canonical_name: \"hello-world\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        6,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            7,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"build_script_build\",\n+                                ),\n+                                canonical_name: \"build-script-build\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        3,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            4,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"it\",\n+                                ),\n+                                canonical_name: \"it\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                },\n+            }\"#]],\n+    )\n+}\n+\n+#[test]\n+fn cargo_hello_world_project_model_with_selective_overrides() {\n+    let cfg_overrides = {\n+        CfgOverrides::Selective(\n+            std::iter::once((\n+                \"libc\".to_owned(),\n+                CfgDiff::new(Vec::new(), vec![CfgAtom::Flag(\"test\".into())]).unwrap(),\n+            ))\n+            .collect(),\n+        )\n+    };\n+    let crate_graph = load_cargo_with_overrides(\"hello-world-metadata.json\", cfg_overrides);\n+    check_crate_graph(\n+        crate_graph,\n+        expect![[r#\"\n+            CrateGraph {\n+                arena: {\n+                    CrateId(\n+                        0,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            1,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                canonical_name: \"hello-world\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        5,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            6,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"const_fn\",\n+                                ),\n+                                canonical_name: \"const_fn\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        2,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            3,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"an_example\",\n+                                ),\n+                                canonical_name: \"an-example\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        4,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            5,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                                canonical_name: \"libc\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        1,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            2,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                canonical_name: \"hello-world\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        6,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            7,\n+                        ),\n+                        edition: Edition2015,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"build_script_build\",\n+                                ),\n+                                canonical_name: \"build-script-build\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [],\n+                        proc_macro: [],\n+                    },\n+                    CrateId(\n+                        3,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            4,\n+                        ),\n+                        edition: Edition2018,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"it\",\n+                                ),\n+                                canonical_name: \"it\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"test\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                            },\n+                        ],\n+                        proc_macro: [],\n+                    },\n+                },\n+            }\"#]],\n+    )\n+}\n+\n #[test]\n fn cargo_hello_world_project_model() {\n     let crate_graph = load_cargo(\"hello-world-metadata.json\");"}, {"sha": "a088bf3cad03a430001b7aab0feb50688513d60f", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=1636f61a1594202c4f8adebce9a21f7e0390873e", "patch": "@@ -21,7 +21,32 @@ use crate::{\n     TargetKind, WorkspaceBuildScripts,\n };\n \n-pub type CfgOverrides = FxHashMap<String, CfgDiff>;\n+/// A set of cfg-overrides per crate.\n+///\n+/// `Wildcard(..)` is useful e.g. disabling `#[cfg(test)]` on all crates,\n+/// without having to first obtain a list of all crates.\n+#[derive(Debug, Clone, Eq, PartialEq)]\n+pub enum CfgOverrides {\n+    /// A single global set of overrides matching all crates.\n+    Wildcard(CfgDiff),\n+    /// A set of overrides matching specific crates.\n+    Selective(FxHashMap<String, CfgDiff>),\n+}\n+\n+impl Default for CfgOverrides {\n+    fn default() -> Self {\n+        Self::Selective(FxHashMap::default())\n+    }\n+}\n+\n+impl CfgOverrides {\n+    pub fn len(&self) -> usize {\n+        match self {\n+            CfgOverrides::Wildcard(_) => 1,\n+            CfgOverrides::Selective(hash_map) => hash_map.len(),\n+        }\n+    }\n+}\n \n /// `PackageRoot` describes a package root folder.\n /// Which may be an external dependency, or a member of\n@@ -501,7 +526,13 @@ fn cargo_to_crate_graph(\n     for pkg in cargo.packages() {\n         let mut cfg_options = &cfg_options;\n         let mut replaced_cfg_options;\n-        if let Some(overrides) = override_cfg.get(&cargo[pkg].name) {\n+\n+        let overrides = match override_cfg {\n+            CfgOverrides::Wildcard(cfg_diff) => Some(cfg_diff),\n+            CfgOverrides::Selective(cfg_overrides) => cfg_overrides.get(&cargo[pkg].name),\n+        };\n+\n+        if let Some(overrides) = overrides {\n             // FIXME: this is sort of a hack to deal with #![cfg(not(test))] vanishing such as seen\n             // in ed25519_dalek (#7243), and libcore (#9203) (although you only hit that one while\n             // working on rust-lang/rust as that's the only time it appears outside sysroot)."}, {"sha": "c1795d90c47512e3ee4ebcf3186370a82d28fabc", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1636f61a1594202c4f8adebce9a21f7e0390873e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=1636f61a1594202c4f8adebce9a21f7e0390873e", "patch": "@@ -19,7 +19,9 @@ use ide_db::helpers::{\n     SnippetCap,\n };\n use lsp_types::{ClientCapabilities, MarkupKind};\n-use project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest, RustcSource};\n+use project_model::{\n+    CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest, RustcSource, UnsetTestCrates,\n+};\n use rustc_hash::{FxHashMap, FxHashSet};\n use serde::{de::DeserializeOwned, Deserialize};\n use vfs::AbsPathBuf;\n@@ -668,9 +670,9 @@ impl Config {\n             all_features: self.data.cargo_allFeatures,\n             features: self.data.cargo_features.clone(),\n             target: self.data.cargo_target.clone(),\n-            rustc_source,\n             no_sysroot: self.data.cargo_noSysroot,\n-            unset_test_crates: self.data.cargo_unsetTest.clone(),\n+            rustc_source,\n+            unset_test_crates: UnsetTestCrates::Only(self.data.cargo_unsetTest.clone()),\n             wrap_rustc_in_build_scripts: self.data.cargo_useRustcWrapperForBuildScripts,\n         }\n     }"}]}