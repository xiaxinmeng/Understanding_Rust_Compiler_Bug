{"sha": "a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMmZjYTcxZWQwMzg1NDJjMWM5MmNiY2Q4YjgwYjcxZWNjNzY5MGM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-06-15T03:49:53Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-06-19T17:41:54Z"}, "message": "Update the existing compile-fail tests to reflect diagnostic changes in NLL.", "tree": {"sha": "d671591289e3061a5473d46f970676f5bad2c67c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d671591289e3061a5473d46f970676f5bad2c67c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "html_url": "https://github.com/rust-lang/rust/commit/a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35971ccc4127ca74b684dd23b8cd54aa89ef8d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/35971ccc4127ca74b684dd23b8cd54aa89ef8d96", "html_url": "https://github.com/rust-lang/rust/commit/35971ccc4127ca74b684dd23b8cd54aa89ef8d96"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "ee9dafdd49eb86c897d6ed4672ff8dd0d54e5248", "filename": "src/test/compile-fail/assign-imm-local-twice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -13,6 +13,7 @@\n \n fn test() {\n     let v: isize;\n+    //[mir]~^ NOTE consider changing this to `mut v`\n     v = 1; //[ast]~ NOTE first assignment\n            //[mir]~^ NOTE first assignment\n     println!(\"v={}\", v);"}, {"sha": "61e19ffc0d293b7db19a27131db79728eddaecb5", "filename": "src/test/compile-fail/issue-45199.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -13,6 +13,7 @@\n \n fn test_drop_replace() {\n     let b: Box<isize>;\n+    //[mir]~^ NOTE consider changing this to `mut b`\n     b = Box::new(1);    //[ast]~ NOTE first assignment\n                         //[mir]~^ NOTE first assignment\n     b = Box::new(2);    //[ast]~ ERROR cannot assign twice to immutable variable\n@@ -24,14 +25,15 @@ fn test_drop_replace() {\n fn test_call() {\n     let b = Box::new(1);    //[ast]~ NOTE first assignment\n                             //[mir]~^ NOTE first assignment\n+                            //[mir]~| NOTE consider changing this to `mut b`\n     b = Box::new(2);        //[ast]~ ERROR cannot assign twice to immutable variable\n                             //[mir]~^ ERROR cannot assign twice to immutable variable `b`\n                             //[ast]~| NOTE cannot assign twice to immutable\n                             //[mir]~| NOTE cannot assign twice to immutable\n }\n \n fn test_args(b: Box<i32>) {  //[ast]~ NOTE first assignment\n-                                //[mir]~^ NOTE argument not declared as `mut`\n+                                //[mir]~^ NOTE consider changing this to `mut b`\n     b = Box::new(2);            //[ast]~ ERROR cannot assign twice to immutable variable\n                                 //[mir]~^ ERROR cannot assign to immutable argument `b`\n                                 //[ast]~| NOTE cannot assign twice to immutable"}, {"sha": "7bc3680ca772343b51bafa75f343847445487c0d", "filename": "src/test/compile-fail/liveness-assign-imm-local-in-loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -13,6 +13,7 @@\n \n fn test() {\n     let v: isize;\n+    //[mir]~^ NOTE consider changing this to `mut v`\n     loop {\n         v = 1; //[ast]~ ERROR cannot assign twice to immutable variable\n                //[mir]~^ ERROR cannot assign twice to immutable variable `v`"}, {"sha": "7812cdd8684f6c773599909581afcb7db2c2498e", "filename": "src/test/compile-fail/liveness-assign-imm-local-in-op-eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -13,6 +13,7 @@\n \n fn test() {\n     let v: isize;\n+    //[mir]~^ NOTE consider changing this to `mut v`\n     v = 2;  //[ast]~ NOTE first assignment\n             //[mir]~^ NOTE first assignment\n     v += 1; //[ast]~ ERROR cannot assign twice to immutable variable"}, {"sha": "bb61a9037d906c9b80939e26350de5ca426c5b64", "filename": "src/test/compile-fail/liveness-assign-imm-local-with-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-drop.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -14,6 +14,7 @@\n fn test() {\n     let b = Box::new(1); //[ast]~ NOTE first assignment\n                          //[mir]~^ NOTE first assignment\n+                         //[mir]~| NOTE consider changing this to `mut b`\n     drop(b);\n     b = Box::new(2); //[ast]~ ERROR cannot assign twice to immutable variable\n                      //[mir]~^ ERROR cannot assign twice to immutable variable `b`"}, {"sha": "672e9fab83743b8bf7b668fa17029850878ace20", "filename": "src/test/compile-fail/liveness-assign-imm-local-with-init.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32fca71ed038542c1c92cbcd8b80b71ecc7690c/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs?ref=a32fca71ed038542c1c92cbcd8b80b71ecc7690c", "patch": "@@ -14,6 +14,7 @@\n fn test() {\n     let v: isize = 1; //[ast]~ NOTE first assignment\n                       //[mir]~^ NOTE first assignment\n+                      //[mir]~| NOTE consider changing this to `mut v`\n     v.clone();\n     v = 2; //[ast]~ ERROR cannot assign twice to immutable variable\n            //[mir]~^ ERROR cannot assign twice to immutable variable `v`"}]}