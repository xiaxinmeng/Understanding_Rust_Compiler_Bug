{"sha": "8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNTk4ZDNkOGE5ZDZmZTBiODMwMzI1MGM4OGMyNTJmZjk4ODgzZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T19:09:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T19:15:14Z"}, "message": "Support crate vis", "tree": {"sha": "c7957dd4465a2e69ca3dfb447e97a776ac47c3aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7957dd4465a2e69ca3dfb447e97a776ac47c3aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "html_url": "https://github.com/rust-lang/rust/commit/8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "html_url": "https://github.com/rust-lang/rust/commit/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73"}], "stats": {"total": 74, "additions": 51, "deletions": 23}, "files": [{"sha": "1e7d04ce93da17e2833b990e1961d682ab3fca15", "filename": "src/grammar/mod.rs", "status": "modified", "additions": 32, "deletions": 23, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/src%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/src%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fmod.rs?ref=8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "patch": "@@ -55,34 +55,43 @@ impl BlockLike {\n }\n \n fn visibility(p: &mut Parser) {\n-    if p.at(PUB_KW) {\n-        let vis = p.start();\n-        p.bump();\n-        if p.at(L_PAREN) {\n-            match p.nth(1) {\n-                // test crate_visibility\n-                // pub(crate) struct S;\n-                // pub(self) struct S;\n-                // pub(self) struct S;\n-                // pub(self) struct S;\n-                CRATE_KW | SELF_KW | SUPER_KW => {\n-                    p.bump();\n-                    p.bump();\n-                    p.expect(R_PAREN);\n-                }\n-                IN_KW => {\n-                    p.bump();\n-                    p.bump();\n-                    paths::use_path(p);\n-                    p.expect(R_PAREN);\n+    match p.current() {\n+        PUB_KW => {\n+            let m = p.start();\n+            p.bump();\n+            if p.at(L_PAREN) {\n+                match p.nth(1) {\n+                    // test crate_visibility\n+                    // pub(crate) struct S;\n+                    // pub(self) struct S;\n+                    // pub(self) struct S;\n+                    // pub(self) struct S;\n+                    CRATE_KW | SELF_KW | SUPER_KW => {\n+                        p.bump();\n+                        p.bump();\n+                        p.expect(R_PAREN);\n+                    }\n+                    IN_KW => {\n+                        p.bump();\n+                        p.bump();\n+                        paths::use_path(p);\n+                        p.expect(R_PAREN);\n+                    }\n+                    _ => (),\n                 }\n-                _ => (),\n             }\n+            m.complete(p, VISIBILITY);\n         }\n-        vis.complete(p, VISIBILITY);\n+        // test crate_keyword_vis\n+        // crate fn main() { }\n+        CRATE_KW => {\n+            let m = p.start();\n+            p.bump();\n+            m.complete(p, VISIBILITY);\n+        }\n+        _ => (),\n     }\n }\n-\n fn alias(p: &mut Parser) -> bool {\n     if p.at(AS_KW) {\n         let alias = p.start();"}, {"sha": "660d927cf010c2322f744373e446ba59a9b16660", "filename": "tests/data/parser/inline/0099_crate_keyword_vis.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.rs?ref=8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "patch": "@@ -0,0 +1 @@\n+crate fn main() { }"}, {"sha": "25e6d175930f419e5f18bd37351791c53964b83d", "filename": "tests/data/parser/inline/0099_crate_keyword_vis.txt", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8c598d3d8a9d6fe0b8303250c88c252ff98883fd/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0099_crate_keyword_vis.txt?ref=8c598d3d8a9d6fe0b8303250c88c252ff98883fd", "patch": "@@ -0,0 +1,18 @@\n+FILE@[0; 20)\n+  FN_ITEM@[0; 19)\n+    VISIBILITY@[0; 5)\n+      CRATE_KW@[0; 5)\n+    WHITESPACE@[5; 6)\n+    FN_KW@[6; 8)\n+    WHITESPACE@[8; 9)\n+    NAME@[9; 13)\n+      IDENT@[9; 13) \"main\"\n+    PARAM_LIST@[13; 15)\n+      L_PAREN@[13; 14)\n+      R_PAREN@[14; 15)\n+    WHITESPACE@[15; 16)\n+    BLOCK_EXPR@[16; 19)\n+      L_CURLY@[16; 17)\n+      WHITESPACE@[17; 18)\n+      R_CURLY@[18; 19)\n+  WHITESPACE@[19; 20)"}]}