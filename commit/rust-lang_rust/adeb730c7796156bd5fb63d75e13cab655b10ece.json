{"sha": "adeb730c7796156bd5fb63d75e13cab655b10ece", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZWI3MzBjNzc5NjE1NmJkNWZiNjNkNzVlMTNjYWI2NTViMTBlY2U=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-27T04:46:57Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-28T04:41:00Z"}, "message": "std: cut down on the memory usage of `SipHasher`", "tree": {"sha": "a6f6ec6dbf3da954f3e2fb634b4fb005ac5d7767", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6f6ec6dbf3da954f3e2fb634b4fb005ac5d7767"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adeb730c7796156bd5fb63d75e13cab655b10ece", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adeb730c7796156bd5fb63d75e13cab655b10ece", "html_url": "https://github.com/rust-lang/rust/commit/adeb730c7796156bd5fb63d75e13cab655b10ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adeb730c7796156bd5fb63d75e13cab655b10ece/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b5e30f6cd99f27510cb48f8882f25b31ed9d8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b5e30f6cd99f27510cb48f8882f25b31ed9d8b", "html_url": "https://github.com/rust-lang/rust/commit/72b5e30f6cd99f27510cb48f8882f25b31ed9d8b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d1d4d4c90f93e6d285f64f4cee9b76328ebacbc6", "filename": "src/libstd/hash/sip.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/adeb730c7796156bd5fb63d75e13cab655b10ece/src%2Flibstd%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adeb730c7796156bd5fb63d75e13cab655b10ece/src%2Flibstd%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhash%2Fsip.rs?ref=adeb730c7796156bd5fb63d75e13cab655b10ece", "patch": "@@ -231,31 +231,31 @@ impl Default for SipState {\n /// `SipHasher` computes the SipHash algorithm from a stream of bytes.\n #[deriving(Clone)]\n pub struct SipHasher {\n-    priv state: SipState,\n+    priv k0: u64,\n+    priv k1: u64,\n }\n \n impl SipHasher {\n     /// Create a `Sip`.\n     #[inline]\n     pub fn new() -> SipHasher {\n-        SipHasher {\n-            state: SipState::new(),\n-        }\n+        SipHasher::new_with_keys(0, 0)\n     }\n \n     /// Create a `Sip` that is keyed off the provided keys.\n     #[inline]\n     pub fn new_with_keys(key0: u64, key1: u64) -> SipHasher {\n         SipHasher {\n-            state: SipState::new_with_keys(key0, key1),\n+            k0: key0,\n+            k1: key1,\n         }\n     }\n }\n \n impl Hasher<SipState> for SipHasher {\n     #[inline]\n     fn hash<T: Hash<SipState>>(&self, value: &T) -> u64 {\n-        let mut state = self.state.clone();\n+        let mut state = SipState::new_with_keys(self.k0, self.k1);\n         value.hash(&mut state);\n         state.result()\n     }"}]}