{"sha": "8203828bb081faae4cd9d39c8abe6bc073138176", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMDM4MjhiYjA4MWZhYWU0Y2Q5ZDM5YzhhYmU2YmMwNzMxMzgxNzY=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-09T17:54:40Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T00:01:46Z"}, "message": "vscode-prerefactor: merge two files into downloads.ts", "tree": {"sha": "fb6f290c58677e3109e4ecbca424258f09d7fea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb6f290c58677e3109e4ecbca424258f09d7fea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8203828bb081faae4cd9d39c8abe6bc073138176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8203828bb081faae4cd9d39c8abe6bc073138176", "html_url": "https://github.com/rust-lang/rust/commit/8203828bb081faae4cd9d39c8abe6bc073138176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8203828bb081faae4cd9d39c8abe6bc073138176/comments", "author": null, "committer": null, "parents": [{"sha": "fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e", "html_url": "https://github.com/rust-lang/rust/commit/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e"}], "stats": {"total": 96, "additions": 46, "deletions": 50}, "files": [{"sha": "97e4d67c21d2f600a9401525e4aa706085c6214a", "filename": "editors/code/src/installation/download_artifact.ts", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts?ref=fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e", "patch": "@@ -1,50 +0,0 @@\n-import * as vscode from \"vscode\";\n-import * as path from \"path\";\n-import { promises as fs } from \"fs\";\n-\n-import { ArtifactReleaseInfo } from \"./interfaces\";\n-import { downloadFile } from \"./download_file\";\n-import { assert } from \"../util\";\n-\n-/**\n- * Downloads artifact from given `downloadUrl`.\n- * Creates `installationDir` if it is not yet created and put the artifact under\n- * `artifactFileName`.\n- * Displays info about the download progress in an info message printing the name\n- * of the artifact as `displayName`.\n- */\n-export async function downloadArtifact(\n-    { downloadUrl, releaseName }: ArtifactReleaseInfo,\n-    artifactFileName: string,\n-    installationDir: string,\n-    displayName: string,\n-) {\n-    await fs.mkdir(installationDir).catch(err => assert(\n-        err?.code === \"EEXIST\",\n-        `Couldn't create directory \"${installationDir}\" to download ` +\n-        `${artifactFileName} artifact: ${err?.message}`\n-    ));\n-\n-    const installationPath = path.join(installationDir, artifactFileName);\n-\n-    await vscode.window.withProgress(\n-        {\n-            location: vscode.ProgressLocation.Notification,\n-            cancellable: false, // FIXME: add support for canceling download?\n-            title: `Downloading ${displayName} (${releaseName})`\n-        },\n-        async (progress, _cancellationToken) => {\n-            let lastPrecentage = 0;\n-            const filePermissions = 0o755; // (rwx, r_x, r_x)\n-            await downloadFile(downloadUrl, installationPath, filePermissions, (readBytes, totalBytes) => {\n-                const newPercentage = (readBytes / totalBytes) * 100;\n-                progress.report({\n-                    message: newPercentage.toFixed(0) + \"%\",\n-                    increment: newPercentage - lastPrecentage\n-                });\n-\n-                lastPrecentage = newPercentage;\n-            });\n-        }\n-    );\n-}"}, {"sha": "7ce2e2960f233bc2fa95a1260e903eccdb0a1301", "filename": "editors/code/src/installation/downloads.ts", "status": "renamed", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8203828bb081faae4cd9d39c8abe6bc073138176/editors%2Fcode%2Fsrc%2Finstallation%2Fdownloads.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8203828bb081faae4cd9d39c8abe6bc073138176/editors%2Fcode%2Fsrc%2Finstallation%2Fdownloads.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownloads.ts?ref=8203828bb081faae4cd9d39c8abe6bc073138176", "patch": "@@ -1,8 +1,11 @@\n import fetch from \"node-fetch\";\n+import * as vscode from \"vscode\";\n+import * as path from \"path\";\n import * as fs from \"fs\";\n import * as stream from \"stream\";\n import * as util from \"util\";\n import { log, assert } from \"../util\";\n+import { ArtifactReleaseInfo } from \"./interfaces\";\n \n const pipeline = util.promisify(stream.pipeline);\n \n@@ -49,3 +52,46 @@ export async function downloadFile(\n         // Issue at nodejs repo: https://github.com/nodejs/node/issues/31776\n     });\n }\n+\n+/**\n+ * Downloads artifact from given `downloadUrl`.\n+ * Creates `installationDir` if it is not yet created and puts the artifact under\n+ * `artifactFileName`.\n+ * Displays info about the download progress in an info message printing the name\n+ * of the artifact as `displayName`.\n+ */\n+export async function downloadArtifactWithProgressUi(\n+    { downloadUrl, releaseName }: ArtifactReleaseInfo,\n+    artifactFileName: string,\n+    installationDir: string,\n+    displayName: string,\n+) {\n+    await fs.promises.mkdir(installationDir).catch(err => assert(\n+        err?.code === \"EEXIST\",\n+        `Couldn't create directory \"${installationDir}\" to download ` +\n+        `${artifactFileName} artifact: ${err?.message}`\n+    ));\n+\n+    const installationPath = path.join(installationDir, artifactFileName);\n+\n+    await vscode.window.withProgress(\n+        {\n+            location: vscode.ProgressLocation.Notification,\n+            cancellable: false, // FIXME: add support for canceling download?\n+            title: `Downloading rust-analyzer ${displayName} (${releaseName})`\n+        },\n+        async (progress, _cancellationToken) => {\n+            let lastPrecentage = 0;\n+            const filePermissions = 0o755; // (rwx, r_x, r_x)\n+            await downloadFile(downloadUrl, installationPath, filePermissions, (readBytes, totalBytes) => {\n+                const newPercentage = (readBytes / totalBytes) * 100;\n+                progress.report({\n+                    message: newPercentage.toFixed(0) + \"%\",\n+                    increment: newPercentage - lastPrecentage\n+                });\n+\n+                lastPrecentage = newPercentage;\n+            });\n+        }\n+    );\n+}", "previous_filename": "editors/code/src/installation/download_file.ts"}]}