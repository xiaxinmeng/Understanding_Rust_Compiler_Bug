{"sha": "13f85cb097725a13ae24a6564c71597243b91c3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZjg1Y2IwOTc3MjVhMTNhZTI0YTY1NjRjNzE1OTcyNDNiOTFjM2Q=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T01:00:56Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:23Z"}, "message": "librustc: De-`@mut` `CrateContext::vtables`.", "tree": {"sha": "819eb59ecbb3bdbed67a6be96e164e3a73f1ec5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/819eb59ecbb3bdbed67a6be96e164e3a73f1ec5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13f85cb097725a13ae24a6564c71597243b91c3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13f85cb097725a13ae24a6564c71597243b91c3d", "html_url": "https://github.com/rust-lang/rust/commit/13f85cb097725a13ae24a6564c71597243b91c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13f85cb097725a13ae24a6564c71597243b91c3d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dcc5165a6cabbe5dc28c6564464e655b6b43638", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcc5165a6cabbe5dc28c6564464e655b6b43638", "html_url": "https://github.com/rust-lang/rust/commit/5dcc5165a6cabbe5dc28c6564464e655b6b43638"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "c5253ab8d8d6f16bfe10c6cf60d66c654d1141d6", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13f85cb097725a13ae24a6564c71597243b91c3d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f85cb097725a13ae24a6564c71597243b91c3d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=13f85cb097725a13ae24a6564c71597243b91c3d", "patch": "@@ -69,7 +69,7 @@ pub struct CrateContext {\n      monomorphized: RefCell<HashMap<mono_id, ValueRef>>,\n      monomorphizing: RefCell<HashMap<ast::DefId, uint>>,\n      // Cache generated vtables\n-     vtables: HashMap<(ty::t, mono_id), ValueRef>,\n+     vtables: RefCell<HashMap<(ty::t, mono_id), ValueRef>>,\n      // Cache of constant strings,\n      const_cstr_cache: HashMap<@str, ValueRef>,\n \n@@ -196,7 +196,7 @@ impl CrateContext {\n                   non_inlineable_statics: HashSet::new(),\n                   monomorphized: RefCell::new(HashMap::new()),\n                   monomorphizing: RefCell::new(HashMap::new()),\n-                  vtables: HashMap::new(),\n+                  vtables: RefCell::new(HashMap::new()),\n                   const_cstr_cache: HashMap::new(),\n                   const_globals: HashMap::new(),\n                   const_values: HashMap::new(),"}, {"sha": "a430c0b1a0b26739833ae659f7f4924097322340", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/13f85cb097725a13ae24a6564c71597243b91c3d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f85cb097725a13ae24a6564c71597243b91c3d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=13f85cb097725a13ae24a6564c71597243b91c3d", "patch": "@@ -539,9 +539,12 @@ pub fn get_vtable(bcx: @Block,\n \n     // Check the cache.\n     let hash_id = (self_ty, vtable_id(ccx, &origins[0]));\n-    match ccx.vtables.find(&hash_id) {\n-        Some(&val) => { return val }\n-        None => { }\n+    {\n+        let vtables = ccx.vtables.borrow();\n+        match vtables.get().find(&hash_id) {\n+            Some(&val) => { return val }\n+            None => { }\n+        }\n     }\n \n     // Not in the cache. Actually build it.\n@@ -559,7 +562,9 @@ pub fn get_vtable(bcx: @Block,\n     glue::lazily_emit_all_tydesc_glue(ccx, tydesc);\n \n     let vtable = make_vtable(ccx, tydesc, methods);\n-    ccx.vtables.insert(hash_id, vtable);\n+\n+    let mut vtables = ccx.vtables.borrow_mut();\n+    vtables.get().insert(hash_id, vtable);\n     return vtable;\n }\n "}]}