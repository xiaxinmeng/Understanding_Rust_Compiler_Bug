{"sha": "2efde8c79505b4d53490befe2247d0f974cfe2a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZmRlOGM3OTUwNWI0ZDUzNDkwYmVmZTIyNDdkMGY5NzRjZmUyYTA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-14T15:54:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-14T15:54:51Z"}, "message": "Rollup merge of #81965 - osa1:issue81200, r=oli-obk\n\nFix MIR pretty printer for non-local DefIds\n\nTries to fix #81200 -- the reproducer in the issue is not fixed yet.\nSubmitting PR to get feedback.\n\nr? oli-obk", "tree": {"sha": "a6f1d50fede38b53a52d45a2f8867bb2a0674052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6f1d50fede38b53a52d45a2f8867bb2a0674052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2efde8c79505b4d53490befe2247d0f974cfe2a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgKUfMCRBK7hj4Ov3rIwAAdHIIAAuVbfSR1vmmpDEY/V0nTng9\n6OLTZaJtLBcTDaGCdpq2dBlP4z4fA9V3/gOUH/Xisanc5q2TQARtUTr6bPlsD07Y\nxdFkHRuahwcRaM+fOtIY0JdQL51hUoapZn1RJ2xS+LLOo3mLG5y/D59BXcW7EZFO\n6yO59wy63nP03Fj1pI8YrmO4ZRxyBwauSxZU3lZWLc12/rv3Vtj++w1yfC0dKHat\nkBd4pvu3smyzgMZG8t0T3RWzuajhGmCEWrATaAn0s6Xun0EWi6mMEL11BS97zkyf\npcISPmbxq3O+5JsIaAJNRcUu+oupedpJ8YzzCUiZsGj9WAY2i+nOicanhBH5jnQ=\n=zH5l\n-----END PGP SIGNATURE-----\n", "payload": "tree a6f1d50fede38b53a52d45a2f8867bb2a0674052\nparent 91889fc5554970aa0752e18ff5cf0ce52d964aac\nparent fe82365630a5bb8a785cc1601248cc996c82c37a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1613318091 +0100\ncommitter GitHub <noreply@github.com> 1613318091 +0100\n\nRollup merge of #81965 - osa1:issue81200, r=oli-obk\n\nFix MIR pretty printer for non-local DefIds\n\nTries to fix #81200 -- the reproducer in the issue is not fixed yet.\nSubmitting PR to get feedback.\n\nr? oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2efde8c79505b4d53490befe2247d0f974cfe2a0", "html_url": "https://github.com/rust-lang/rust/commit/2efde8c79505b4d53490befe2247d0f974cfe2a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2efde8c79505b4d53490befe2247d0f974cfe2a0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91889fc5554970aa0752e18ff5cf0ce52d964aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/91889fc5554970aa0752e18ff5cf0ce52d964aac", "html_url": "https://github.com/rust-lang/rust/commit/91889fc5554970aa0752e18ff5cf0ce52d964aac"}, {"sha": "fe82365630a5bb8a785cc1601248cc996c82c37a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe82365630a5bb8a785cc1601248cc996c82c37a", "html_url": "https://github.com/rust-lang/rust/commit/fe82365630a5bb8a785cc1601248cc996c82c37a"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "f46e94eea96c75828f2d5032b24c91df0ffcc6ed", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2efde8c79505b4d53490befe2247d0f974cfe2a0/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efde8c79505b4d53490befe2247d0f974cfe2a0/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=2efde8c79505b4d53490befe2247d0f974cfe2a0", "patch": "@@ -289,19 +289,19 @@ pub fn write_mir_pretty<'tcx>(\n             }\n             Ok(())\n         };\n-        match tcx.hir().body_const_context(def_id.expect_local()) {\n-            None => render_body(w, tcx.optimized_mir(def_id))?,\n-            // For `const fn` we want to render the optimized MIR. If you want the mir used in\n-            // ctfe, you can dump the MIR after the `Deaggregator` optimization pass.\n-            Some(rustc_hir::ConstContext::ConstFn) => {\n-                render_body(w, tcx.optimized_mir(def_id))?;\n-                writeln!(w)?;\n-                writeln!(w, \"// MIR FOR CTFE\")?;\n-                // Do not use `render_body`, as that would render the promoteds again, but these\n-                // are shared between mir_for_ctfe and optimized_mir\n-                write_mir_fn(tcx, tcx.mir_for_ctfe(def_id), &mut |_, _| Ok(()), w)?;\n-            }\n-            Some(_) => render_body(w, tcx.mir_for_ctfe(def_id))?,\n+\n+        // For `const fn` we want to render both the optimized MIR and the MIR for ctfe.\n+        if tcx.is_const_fn_raw(def_id) {\n+            render_body(w, tcx.optimized_mir(def_id))?;\n+            writeln!(w)?;\n+            writeln!(w, \"// MIR FOR CTFE\")?;\n+            // Do not use `render_body`, as that would render the promoteds again, but these\n+            // are shared between mir_for_ctfe and optimized_mir\n+            write_mir_fn(tcx, tcx.mir_for_ctfe(def_id), &mut |_, _| Ok(()), w)?;\n+        } else {\n+            let instance_mir =\n+                tcx.instance_mir(ty::InstanceDef::Item(ty::WithOptConstParam::unknown(def_id)));\n+            render_body(w, instance_mir)?;\n         }\n     }\n     Ok(())"}]}