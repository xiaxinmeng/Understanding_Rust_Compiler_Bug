{"sha": "4c6b680955cf18a7395e65b91641e2bba81a8a9e", "node_id": "C_kwDOAAsO6NoAKDRjNmI2ODA5NTVjZjE4YTczOTVlNjViOTE2NDFlMmJiYTgxYThhOWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-14T16:40:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-14T16:40:06Z"}, "message": "Rollup merge of #109105 - compiler-errors:late-ct-in-anon-ct, r=oli-obk\n\nDon't ICE for late-bound consts across `AnonConstBoundary`\n\nFixes #108194", "tree": {"sha": "2e27948f7db8ad78f500e49a5aa1188f494295ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e27948f7db8ad78f500e49a5aa1188f494295ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c6b680955cf18a7395e65b91641e2bba81a8a9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkEKNmCRBK7hj4Ov3rIwAASU4IAENqc9oSEte78NzhEM/1bYes\nmDW2qbzTQ9spD7eHONTHB/GhXOolnbGbKvkRD14yPYLPRBtBsdN43KR+EPAx/+pX\nxqbKM0YODmOGHxiJfpAzPZ4yD3EsYQ1+nNlEzhJk0s7ZckLayykw4huDj4Ec4dK4\nEUr+SxZKrOPGKiomFlP45qMvl9uZ+JQbJinF1IH30Rws92XUEqr1IT4CV8OVgIbS\nozY7g3S6rd6poTWSOUbd+6oovvkY1EdI4GYUNcCly18rE2TLUrcdT1ZeY8DPUeNg\ndUl8/4eHdURlrzKlFWsk1ceJjWAPsqIpRShxgobCXYnlin9oPOK0b7s8NGwAoEs=\n=03y4\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e27948f7db8ad78f500e49a5aa1188f494295ab\nparent 1f159b4894fe25d7d180dc32fa57a4d71a2b9a57\nparent 8a535700087b3f09b60173ea462f6e872baa7486\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678812006 +0100\ncommitter GitHub <noreply@github.com> 1678812006 +0100\n\nRollup merge of #109105 - compiler-errors:late-ct-in-anon-ct, r=oli-obk\n\nDon't ICE for late-bound consts across `AnonConstBoundary`\n\nFixes #108194\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c6b680955cf18a7395e65b91641e2bba81a8a9e", "html_url": "https://github.com/rust-lang/rust/commit/4c6b680955cf18a7395e65b91641e2bba81a8a9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c6b680955cf18a7395e65b91641e2bba81a8a9e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f159b4894fe25d7d180dc32fa57a4d71a2b9a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f159b4894fe25d7d180dc32fa57a4d71a2b9a57", "html_url": "https://github.com/rust-lang/rust/commit/1f159b4894fe25d7d180dc32fa57a4d71a2b9a57"}, {"sha": "8a535700087b3f09b60173ea462f6e872baa7486", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a535700087b3f09b60173ea462f6e872baa7486", "html_url": "https://github.com/rust-lang/rust/commit/8a535700087b3f09b60173ea462f6e872baa7486"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "465ae047de3735babcfabc9788853200bba2e741", "filename": "compiler/rustc_hir_analysis/src/collect/resolve_bound_vars.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c6b680955cf18a7395e65b91641e2bba81a8a9e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c6b680955cf18a7395e65b91641e2bba81a8a9e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs?ref=4c6b680955cf18a7395e65b91641e2bba81a8a9e", "patch": "@@ -1427,25 +1427,25 @@ impl<'a, 'tcx> BoundVarContext<'a, 'tcx> {\n             if let ResolvedArg::LateBound(..) = def && crossed_anon_const {\n                 let use_span = self.tcx.hir().span(hir_id);\n                 let def_span = self.tcx.def_span(param_def_id);\n-                match self.tcx.def_kind(param_def_id) {\n+                let guar = match self.tcx.def_kind(param_def_id) {\n                     DefKind::ConstParam => {\n                         self.tcx.sess.emit_err(errors::CannotCaptureLateBoundInAnonConst::Const {\n                             use_span,\n                             def_span,\n-                        });\n+                        })\n                     }\n                     DefKind::TyParam => {\n                         self.tcx.sess.emit_err(errors::CannotCaptureLateBoundInAnonConst::Type {\n                             use_span,\n                             def_span,\n-                        });\n+                        })\n                     }\n                     _ => unreachable!(),\n-                }\n-                return;\n+                };\n+                self.map.defs.insert(hir_id, ResolvedArg::Error(guar));\n+            } else {\n+                self.map.defs.insert(hir_id, def);\n             }\n-\n-            self.map.defs.insert(hir_id, def);\n             return;\n         }\n "}, {"sha": "91c6dfb8e0a923ff64d8f3db00c5a26c624de63a", "filename": "tests/ui/traits/non_lifetime_binders/capture-late-ct-in-anon.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c6b680955cf18a7395e65b91641e2bba81a8a9e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c6b680955cf18a7395e65b91641e2bba81a8a9e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.rs?ref=4c6b680955cf18a7395e65b91641e2bba81a8a9e", "patch": "@@ -0,0 +1,11 @@\n+#![feature(non_lifetime_binders)]\n+//~^ WARN the feature `non_lifetime_binders` is incomplete\n+\n+fn b()\n+where\n+    for<const C: usize> [(); C]: Copy,\n+    //~^ ERROR cannot capture late-bound const parameter in a constant\n+{\n+}\n+\n+fn main() {}"}, {"sha": "69bb605bf41ca02c0a6d75bf5c47bbe0043c67f5", "filename": "tests/ui/traits/non_lifetime_binders/capture-late-ct-in-anon.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4c6b680955cf18a7395e65b91641e2bba81a8a9e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c6b680955cf18a7395e65b91641e2bba81a8a9e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fcapture-late-ct-in-anon.stderr?ref=4c6b680955cf18a7395e65b91641e2bba81a8a9e", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `non_lifetime_binders` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/capture-late-ct-in-anon.rs:1:12\n+   |\n+LL | #![feature(non_lifetime_binders)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #108185 <https://github.com/rust-lang/rust/issues/108185> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: cannot capture late-bound const parameter in a constant\n+  --> $DIR/capture-late-ct-in-anon.rs:6:30\n+   |\n+LL |     for<const C: usize> [(); C]: Copy,\n+   |         --------------       ^\n+   |         |\n+   |         parameter defined here\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}]}