{"sha": "60a1497ebb3e0208ca1c5291934666815d66e029", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYTE0OTdlYmIzZTAyMDhjYTFjNTI5MTkzNDY2NjgxNWQ2NmUwMjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-22T02:25:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-22T02:26:31Z"}, "message": "rustc: Make x-ray resolution work with non-legacy-exports\n\nCode generated for the test runner needs to break visibility rules", "tree": {"sha": "231d8ec5c76d5ea22d0a79c0d20bb9a5bd2b2a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/231d8ec5c76d5ea22d0a79c0d20bb9a5bd2b2a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60a1497ebb3e0208ca1c5291934666815d66e029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60a1497ebb3e0208ca1c5291934666815d66e029", "html_url": "https://github.com/rust-lang/rust/commit/60a1497ebb3e0208ca1c5291934666815d66e029", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60a1497ebb3e0208ca1c5291934666815d66e029/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d59ac3a1989c2d233b04cc8adc9b058690c2544", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d59ac3a1989c2d233b04cc8adc9b058690c2544", "html_url": "https://github.com/rust-lang/rust/commit/3d59ac3a1989c2d233b04cc8adc9b058690c2544"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "293c23d84d1c067aac1cf529b969a3cf08c5feb1", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60a1497ebb3e0208ca1c5291934666815d66e029/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60a1497ebb3e0208ca1c5291934666815d66e029/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=60a1497ebb3e0208ca1c5291934666815d66e029", "patch": "@@ -4204,7 +4204,7 @@ impl Resolver {\n         match containing_module.children.find(name) {\n             Some(child_name_bindings) => {\n                 match (*child_name_bindings).def_for_namespace(namespace) {\n-                    Some(def) if def.privacy == Public => {\n+                    Some(def) if def.privacy == Public || xray == Xray => {\n                         // Found it. Stop the search here.\n                         return ChildNameDefinition(def.def);\n                     }"}]}