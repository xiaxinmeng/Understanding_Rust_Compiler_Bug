{"sha": "c82f1325cfb5f3fd5028225f692cb134517016f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MmYxMzI1Y2ZiNWYzZmQ1MDI4MjI1ZjY5MmNiMTM0NTE3MDE2ZjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-29T21:08:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-29T21:08:17Z"}, "message": "Auto merge of #40911 - frewsxcv:rollup, r=frewsxcv\n\nRollup of 6 pull requests\n\n- Successful merges: #40780, #40814, #40816, #40832, #40901, #40907\n- Failed merges:", "tree": {"sha": "29333641ebb0b616b94eb7a3ede8be279b8dc487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29333641ebb0b616b94eb7a3ede8be279b8dc487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c82f1325cfb5f3fd5028225f692cb134517016f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c82f1325cfb5f3fd5028225f692cb134517016f1", "html_url": "https://github.com/rust-lang/rust/commit/c82f1325cfb5f3fd5028225f692cb134517016f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c82f1325cfb5f3fd5028225f692cb134517016f1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1cec5d4bf626f151a779323e16d62fe60117086", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cec5d4bf626f151a779323e16d62fe60117086", "html_url": "https://github.com/rust-lang/rust/commit/e1cec5d4bf626f151a779323e16d62fe60117086"}, {"sha": "fb6ced426e0f39c159c3ecae6244b8453b349e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6ced426e0f39c159c3ecae6244b8453b349e4c", "html_url": "https://github.com/rust-lang/rust/commit/fb6ced426e0f39c159c3ecae6244b8453b349e4c"}], "stats": {"total": 416, "additions": 371, "deletions": 45}, "files": [{"sha": "83e837e2d7690afd4e6458442b4d1545a6b937d4", "filename": ".travis.yml", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -133,13 +133,14 @@ before_script:\n script:\n   - >\n       if [ \"$ALLOW_PR\" = \"\" ] && [ \"$TRAVIS_BRANCH\" != \"auto\" ]; then\n-          echo skipping, not a full build;\n-      elif [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n-          travis_retry stamp sh -c 'git submodule deinit -f . && git submodule update --init' &&\n-          stamp src/ci/run.sh;\n+          echo skipping, not a full build\n       else\n-          travis_retry stamp sh -c 'git submodule deinit -f . && git submodule update --init' &&\n-          stamp src/ci/docker/run.sh $IMAGE;\n+          stamp src/ci/init_repo.sh . \"$HOME/rustsrc\" &&\n+          if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n+              stamp src/ci/run.sh;\n+          else\n+              stamp src/ci/docker/run.sh $IMAGE;\n+          fi\n       fi\n \n after_success:\n@@ -169,20 +170,29 @@ after_failure:\n   - dmesg | grep -i kill\n \n # Save tagged docker images we created and load them if they're available\n+# Travis saves caches whether the build failed or not, nuke rustsrc if\n+# the failure was while updating it (as it may be in an bad state)\n+# https://github.com/travis-ci/travis-ci/issues/4472\n before_cache:\n   - docker history -q rust-ci |\n     grep -v missing |\n     xargs docker save |\n     gzip > $HOME/docker/rust-ci.tar.gz\n+  - if [ ! -f $HOME/rustsrc/cache_valid1 ]; then\n+        echo \"WARNING rustsrc cache was invalid when saving\";\n+        rm -rf $HOME/rustsrc && mkdir $HOME/rustsrc;\n+    fi\n before_install:\n   - zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n+  - mkdir -p $HOME/rustsrc\n \n notifications:\n   email: false\n \n cache:\n   directories:\n     - $HOME/docker\n+    - $HOME/rustsrc\n \n before_deploy:\n   - mkdir -p deploy/$TRAVIS_COMMIT"}, {"sha": "fa599a00c4de349144f9acb15252afd477fdb533", "filename": "appveyor.yml", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -141,7 +141,8 @@ install:\n   - set SCCACHE_ERROR_LOG=%CD%/sccache.log\n \n test_script:\n-  - appveyor-retry sh -c 'git submodule deinit -f . && git submodule update --init'\n+  - mkdir C:\\cache\\rustsrc\n+  - sh src/ci/init_repo.sh . /c/cache/rustsrc\n   - set SRC=.\n   - set NO_CCACHE=1\n   - sh src/ci/run.sh\n@@ -150,6 +151,7 @@ on_failure:\n   - cat %CD%/sccache.log\n \n cache:\n+  - C:\\cache\\rustsrc\n   - \"build/i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n   - \"build/x86_64-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n   - \"i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\""}, {"sha": "71a4bfae3caf9424b930bf81aeba9a26b15e1a7e", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -57,6 +57,7 @@ exec docker \\\n   --env DEPLOY_ALT=$DEPLOY_ALT \\\n   --env LOCAL_USER_ID=`id -u` \\\n   --volume \"$HOME/.cargo:/cargo\" \\\n+  --volume \"$HOME/rustsrc:$HOME/rustsrc\" \\\n   --privileged \\\n   --rm \\\n   rust-ci \\"}, {"sha": "4e22907d9794c733251fa1ad0a79679b47b14f57", "filename": "src/ci/init_repo.sh", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,71 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -o errexit\n+set -o pipefail\n+set -o nounset\n+\n+set -o xtrace\n+\n+ci_dir=$(cd $(dirname $0) && pwd)\n+. \"$ci_dir/shared.sh\"\n+\n+REPO_DIR=\"$1\"\n+CACHE_DIR=\"$2\"\n+\n+cache_src_dir=\"$CACHE_DIR/src\"\n+# If the layout of the cache directory changes, bump the number here\n+# (and anywhere else this file is referenced) so the cache is wiped\n+cache_valid_file=\"$CACHE_DIR/cache_valid1\"\n+\n+if [ ! -d \"$REPO_DIR\" -o ! -d \"$REPO_DIR/.git\" ]; then\n+    echo \"Error: $REPO_DIR does not exist or is not a git repo\"\n+    exit 1\n+fi\n+cd $REPO_DIR\n+if [ ! -d \"$CACHE_DIR\" ]; then\n+    echo \"Error: $CACHE_DIR does not exist or is not an absolute path\"\n+    exit 1\n+fi\n+\n+# Wipe the cache if it's not valid, or mark it as invalid while we update it\n+if [ ! -f \"$cache_valid_file\" ]; then\n+    rm -rf \"$CACHE_DIR\" && mkdir \"$CACHE_DIR\"\n+else\n+    rm \"$cache_valid_file\"\n+fi\n+\n+# Update the cache (a pristine copy of the rust source master)\n+if [ ! -d \"$cache_src_dir/.git\" ]; then\n+    retry sh -c \"rm -rf $cache_src_dir && mkdir -p $cache_src_dir && \\\n+        git clone https://github.com/rust-lang/rust.git $cache_src_dir\"\n+fi\n+retry sh -c \"cd $cache_src_dir && git reset --hard && git pull\"\n+retry sh -c \"cd $cache_src_dir && \\\n+    git submodule deinit -f . && git submodule sync && git submodule update --init\"\n+\n+# Cache was updated without errors, mark it as valid\n+touch \"$cache_valid_file\"\n+\n+# Update the submodules of the repo we're in, using the pristine repo as\n+# a cache for any object files\n+# No, `git submodule foreach` won't work:\n+# http://stackoverflow.com/questions/12641469/list-submodules-in-a-git-repository\n+modules=\"$(git config --file .gitmodules --get-regexp '\\.path$' | cut -d' ' -f2)\"\n+for module in $modules; do\n+    if [ ! -d \"$cache_src_dir/$module\" ]; then\n+        echo \"WARNING: $module not found in pristine repo\"\n+        retry sh -c \"git submodule deinit -f $module && git submodule update --init $module\"\n+        continue\n+    fi\n+    retry sh -c \"git submodule deinit -f $module && \\\n+        git submodule update --init --reference $cache_src_dir/$module $module\"\n+done"}, {"sha": "f2e13fc73ae4778930fcd635a8c85f21a9e91d7a", "filename": "src/ci/shared.sh", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fci%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fshared.sh?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/bin/false\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -9,13 +9,16 @@\n # option. This file may not be copied, modified, or distributed\n # except according to those terms.\n \n+# This file is intended to be sourced with `. shared.sh` or\n+# `source shared.sh`, hence the invalid shebang and not being\n+# marked as an executable file in git.\n+\n # See http://unix.stackexchange.com/questions/82598\n function retry {\n+  echo \"Attempting with retry:\" \"$@\"\n   local n=1\n   local max=5\n-  local delay=15\n   while true; do\n-    echo \"Attempting:\" \"$@\"\n     \"$@\" && break || {\n       if [[ $n -lt $max ]]; then\n         ((n++))"}, {"sha": "5008b228c5c85fe04df289f4180a83fd4f5ce7b9", "filename": "src/doc/rust.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -1,3 +1,3 @@\n % The Rust Reference Manual\n \n-The manual has moved, and is now called [the reference](reference.html).\n+The manual has moved, and is now called [the reference](reference/index.html)."}, {"sha": "7065fdb79fc4040a6ca225634408141e1871a830", "filename": "src/libcore/slice/sort.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibcore%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibcore%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fsort.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -527,7 +527,9 @@ fn break_patterns<T>(v: &mut [T]) {\n             // we first take it modulo a power of two, and then decrease by `len` until it fits\n             // into the range `[0, len - 1]`.\n             let mut other = gen_usize() & (modulus - 1);\n-            while other >= len {\n+\n+            // `other` is guaranteed to be less than `2 * len`.\n+            if other >= len {\n                 other -= len;\n             }\n "}, {"sha": "857eeb26af078eabde6ee86263f68a631d0868f4", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -327,7 +327,9 @@ unsafe fn from_raw_parts_mut<'a>(p: *mut u8, len: usize) -> &'a mut str {\n ///\n /// This function is unsafe because it does not check that the bytes passed to\n /// it are valid UTF-8. If this constraint is violated, undefined behavior\n-/// results, as the rest of Rust assumes that `&str`s are valid UTF-8.\n+/// results, as the rest of Rust assumes that [`&str`]s are valid UTF-8.\n+///\n+/// [`&str`]: ../../std/primitive.str.html\n ///\n /// # Examples\n ///"}, {"sha": "67ee7ef58653057542de300eb054dff68864141b", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -197,18 +197,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                     let field_ty = field.ty(tcx, substs);\n \n                                     if self.is_fn_ty(&field_ty, span) {\n-                                        err.span_note(span,\n-                                                      &format!(\"use `({0}.{1})(...)` if you \\\n-                                                                meant to call the function \\\n-                                                                stored in the `{1}` field\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"use `({0}.{1})(...)` if you \\\n+                                                           meant to call the function \\\n+                                                           stored in the `{1}` field\",\n+                                                          expr_string,\n+                                                          item_name));\n                                     } else {\n-                                        err.span_note(span,\n-                                                      &format!(\"did you mean to write `{0}.{1}`?\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"did you mean to write `{0}.{1}` \\\n+                                                           instead of `{0}.{1}(...)`?\",\n+                                                          expr_string,\n+                                                          item_name));\n                                     }\n+                                    err.span_label(span, &\"field, not a method\");\n                                     break;\n                                 }\n                             }"}, {"sha": "c89ec5bbe15bd36a0b14a8fcfc13139c69c2937f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -21,7 +21,7 @@ use syntax_pos::Span;\n \n use rustc::hir::map as hir_map;\n use rustc::hir::def::Def;\n-use rustc::hir::def_id::LOCAL_CRATE;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::middle::cstore::LoadedMacro;\n use rustc::middle::privacy::AccessLevel;\n use rustc::util::nodemap::FxHashSet;\n@@ -48,6 +48,7 @@ pub struct RustdocVisitor<'a, 'tcx: 'a> {\n     inlining: bool,\n     /// Is the current module and all of its parents public?\n     inside_public_path: bool,\n+    reexported_macros: FxHashSet<DefId>,\n }\n \n impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n@@ -62,6 +63,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             view_item_stack: stack,\n             inlining: false,\n             inside_public_path: true,\n+            reexported_macros: FxHashSet(),\n         }\n     }\n \n@@ -201,9 +203,10 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         if let Some(exports) = self.cx.tcx.export_map.get(&id) {\n             for export in exports {\n                 if let Def::Macro(def_id, ..) = export.def {\n-                    if def_id.krate == LOCAL_CRATE {\n+                    if def_id.krate == LOCAL_CRATE || self.reexported_macros.contains(&def_id) {\n                         continue // These are `krate.exported_macros`, handled in `self.visit()`.\n                     }\n+\n                     let imported_from = self.cx.sess().cstore.original_crate_name(def_id.krate);\n                     let def = match self.cx.sess().cstore.load_macro(def_id, self.cx.sess()) {\n                         LoadedMacro::MacroDef(macro_def) => macro_def,\n@@ -217,6 +220,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                     } else {\n                         unreachable!()\n                     };\n+\n                     om.macros.push(Macro {\n                         def_id: def_id,\n                         attrs: def.attrs.clone().into(),\n@@ -263,6 +267,8 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             false\n         }\n \n+        debug!(\"maybe_inline_local def: {:?}\", def);\n+\n         let tcx = self.cx.tcx;\n         if def == Def::Err {\n             return false;\n@@ -274,6 +280,17 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         let is_no_inline = use_attrs.lists(\"doc\").has_word(\"no_inline\") ||\n                            use_attrs.lists(\"doc\").has_word(\"hidden\");\n \n+        // Memoize the non-inlined `pub use`'d macros so we don't push an extra\n+        // declaration in `visit_mod_contents()`\n+        if !def_did.is_local() {\n+            if let Def::Macro(did, _) = def {\n+                if please_inline { return true }\n+                debug!(\"memoizing non-inlined macro export: {:?}\", def);\n+                self.reexported_macros.insert(did);\n+                return false;\n+            }\n+        }\n+\n         // For cross-crate impl inlining we need to know whether items are\n         // reachable in documentation - a previously nonreachable item can be\n         // made reachable by cross-crate inlining which we're checking here.\n@@ -294,6 +311,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 },\n                 _ => {},\n             }\n+\n             return false\n         }\n "}, {"sha": "70d174a149daab1386d8ffdcc7bef503b8dfa425", "filename": "src/test/rustdoc/auxiliary/pub-use-extern-macros.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-use-extern-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-use-extern-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fpub-use-extern-macros.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![crate_name=\"macros\"]\n+\n+#[macro_export]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+#[macro_export]\n+macro_rules! bar {\n+    () => {};\n+}\n+\n+#[macro_export]\n+macro_rules! baz {\n+    () => {};\n+}\n+\n+#[macro_export]\n+macro_rules! quux {\n+    () => {};\n+}"}, {"sha": "3f8f6f9544e80d8a4cdba16f6457b3671f8d6900", "filename": "src/test/rustdoc/pub-use-extern-macros.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:pub-use-extern-macros.rs\n+\n+#![feature(use_extern_macros, macro_reexport)]\n+\n+// @has pub_use_extern_macros/macro.foo.html\n+// @!has pub_use_extern_macros/index.html 'pub use macros::foo;'\n+#[macro_reexport(foo)] extern crate macros;\n+\n+// @has pub_use_extern_macros/index.html 'pub use macros::bar;'\n+// @!has pub_use_extern_macros/macro.bar.html\n+pub use macros::bar;\n+\n+// @has pub_use_extern_macros/macro.baz.html\n+// @!has pub_use_extern_macros/index.html 'pub use macros::baz;'\n+#[doc(inline)]\n+pub use macros::baz;\n+\n+// @!has pub_use_extern_macros/macro.quux.html\n+// @!has pub_use_extern_macros/index.html 'pub use macros::quux;'\n+#[doc(hidden)]\n+pub use macros::quux;"}, {"sha": "fc3c58e5223a3921ff2c97034b06e1807dd150bd", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -14,6 +14,8 @@ struct Obj<F> where F: FnMut() -> u32 {\n \n fn main() {\n     let o = Obj { closure: || 42 };\n-    o.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    o.closure();\n+    //~^ ERROR no method named `closure` found\n+    //~| HELP use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE field, not a method\n }", "previous_filename": "src/test/compile-fail/issue-18343.rs"}, {"sha": "9e5e4adb180d5fdb1aef2b9177e42baf4f80db8f", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,10 @@\n+error: no method named `closure` found for type `Obj<[closure@$DIR/issue-18343.rs:16:28: 16:33]>` in the current scope\n+  --> $DIR/issue-18343.rs:17:7\n+   |\n+17 |     o.closure();\n+   |       ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: aborting due to previous error\n+"}, {"sha": "f84f35ce84bf9e8f04446b7f07a7e0f03890af2f", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.rs", "status": "renamed", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -48,45 +48,58 @@ fn main() {\n \n     let o_closure = Obj { closure: || 42, not_closure: 42 };\n     o_closure.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n-    o_closure.not_closure(); //~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `o_closure.not_closure`?\n+    o_closure.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE field, not a method\n+    //~| HELP did you mean to write `o_closure.not_closure` instead of `o_closure.not_closure(...)`?\n \n     let o_func = Obj { closure: func, not_closure: 5 };\n     o_func.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     let boxed_fn = BoxedObj { boxed_closure: Box::new(func) };\n     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     let boxed_closure = BoxedObj { boxed_closure: Box::new(|| 42_u32) as Box<FnBox() -> u32> };\n     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     // test expression writing in the notes\n \n     let w = Wrapper { wrap: o_func };\n     w.wrap.closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n-    w.wrap.not_closure();//~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `w.wrap.not_closure`?\n+    w.wrap.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE field, not a method\n+    //~| HELP did you mean to write `w.wrap.not_closure` instead of `w.wrap.not_closure(...)`?\n \n     check_expression().closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n }\n \n impl FuncContainerOuter {\n     fn run(&self) {\n         unsafe {\n             (*self.container).f1(1); //~ ERROR no method named `f1` found\n-            //~^ NOTE use `((*self.container).f1)(...)`\n+            //~^ HELP use `((*self.container).f1)(...)`\n+            //~| NOTE field, not a method\n             (*self.container).f2(1); //~ ERROR no method named `f2` found\n-            //~^ NOTE use `((*self.container).f2)(...)`\n+            //~^ HELP use `((*self.container).f2)(...)`\n+            //~| NOTE field, not a method\n             (*self.container).f3(1); //~ ERROR no method named `f3` found\n-            //~^ NOTE use `((*self.container).f3)(...)`\n+            //~^ HELP use `((*self.container).f3)(...)`\n+            //~| NOTE field, not a method\n         }\n     }\n }", "previous_filename": "src/test/compile-fail/issue-2392.rs"}, {"sha": "56e1060bdb95ae2645cd4556e248a690ac1fa804", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.stderr", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,90 @@\n+error: no method named `closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n+  --> $DIR/issue-2392.rs:50:15\n+   |\n+50 |     o_closure.closure(); //~ ERROR no method named `closure` found\n+   |               ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o_closure.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `not_closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n+  --> $DIR/issue-2392.rs:54:15\n+   |\n+54 |     o_closure.not_closure();\n+   |               ^^^^^^^^^^^ field, not a method\n+   |\n+   = help: did you mean to write `o_closure.not_closure` instead of `o_closure.not_closure(...)`?\n+\n+error: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:60:12\n+   |\n+60 |     o_func.closure(); //~ ERROR no method named `closure` found\n+   |            ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o_func.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n+  --> $DIR/issue-2392.rs:65:14\n+   |\n+65 |     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n+   |              ^^^^^^^^^^^^^ field, not a method\n+   |\n+   = help: use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+\n+error: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n+  --> $DIR/issue-2392.rs:70:19\n+   |\n+70 |     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n+   |                   ^^^^^^^^^^^^^ field, not a method\n+   |\n+   = help: use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+\n+error: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:77:12\n+   |\n+77 |     w.wrap.closure();//~ ERROR no method named `closure` found\n+   |            ^^^^^^^ field, not a method\n+   |\n+   = help: use `(w.wrap.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `not_closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:81:12\n+   |\n+81 |     w.wrap.not_closure();\n+   |            ^^^^^^^^^^^ field, not a method\n+   |\n+   = help: did you mean to write `w.wrap.not_closure` instead of `w.wrap.not_closure(...)`?\n+\n+error: no method named `closure` found for type `Obj<std::boxed::Box<std::boxed::FnBox<(), Output=u32> + 'static>>` in the current scope\n+  --> $DIR/issue-2392.rs:86:24\n+   |\n+86 |     check_expression().closure();//~ ERROR no method named `closure` found\n+   |                        ^^^^^^^ field, not a method\n+   |\n+   = help: use `(check_expression().closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `f1` found for type `FuncContainer` in the current scope\n+  --> $DIR/issue-2392.rs:94:31\n+   |\n+94 |             (*self.container).f1(1); //~ ERROR no method named `f1` found\n+   |                               ^^ field, not a method\n+   |\n+   = help: use `((*self.container).f1)(...)` if you meant to call the function stored in the `f1` field\n+\n+error: no method named `f2` found for type `FuncContainer` in the current scope\n+  --> $DIR/issue-2392.rs:97:31\n+   |\n+97 |             (*self.container).f2(1); //~ ERROR no method named `f2` found\n+   |                               ^^ field, not a method\n+   |\n+   = help: use `((*self.container).f2)(...)` if you meant to call the function stored in the `f2` field\n+\n+error: no method named `f3` found for type `FuncContainer` in the current scope\n+   --> $DIR/issue-2392.rs:100:31\n+    |\n+100 |             (*self.container).f3(1); //~ ERROR no method named `f3` found\n+    |                               ^^ field, not a method\n+    |\n+    = help: use `((*self.container).f3)(...)` if you meant to call the function stored in the `f3` field\n+\n+error: aborting due to 11 previous errors\n+"}, {"sha": "2fd7dc246c206aa0dc45f653a5c52de95e95b8dc", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -19,7 +19,9 @@ fn main() {\n         })\n     };\n \n-    demo.example(1);    //~ ERROR no method named `example`\n-                        //~^ NOTE use `(demo.example)(...)`\n+    demo.example(1);\n+    //~^ ERROR no method named `example`\n+    //~| HELP use `(demo.example)(...)`\n+    //~| NOTE field, not a method\n     // (demo.example)(1);\n }", "previous_filename": "src/test/compile-fail/issue-32128.rs"}, {"sha": "0d2a895bad16d31fea4529f0c6c1f52a4166df79", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,10 @@\n+error: no method named `example` found for type `Example` in the current scope\n+  --> $DIR/issue-32128.rs:22:10\n+   |\n+22 |     demo.example(1);\n+   |          ^^^^^^^ field, not a method\n+   |\n+   = help: use `(demo.example)(...)` if you meant to call the function stored in the `example` field\n+\n+error: aborting due to previous error\n+"}, {"sha": "03c84fc57befee8ee745e39e22dc7c42af87fff1", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.rs", "status": "renamed", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -35,12 +35,15 @@ fn main() {\n     let o = Obj { fn_ptr: empty, closure: || 42 };\n     let p = &o;\n     p.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ HELP use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE `closure` is a field storing a function, not a method\n     let q = &p;\n     q.fn_ptr(); //~ ERROR no method named `fn_ptr` found\n-    //~^ NOTE use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~^ HELP use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~| NOTE `fn_ptr` is a field storing a function, not a method\n     let r = D(C { c_fn_ptr: empty });\n     let s = &r;\n     s.c_fn_ptr(); //~ ERROR no method named `c_fn_ptr` found\n-    //~^ NOTE use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~^ HELP use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~| NOTE `c_fn_ptr` is a field storing a function, not a method\n }", "previous_filename": "src/test/compile-fail/issue-33784.rs"}, {"sha": "70d64e3ffa3319d05ec92a62513988d303d8d6be", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c82f1325cfb5f3fd5028225f692cb134517016f1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr?ref=c82f1325cfb5f3fd5028225f692cb134517016f1", "patch": "@@ -0,0 +1,26 @@\n+error: no method named `closure` found for type `&Obj<[closure@$DIR/issue-33784.rs:35:43: 35:48]>` in the current scope\n+  --> $DIR/issue-33784.rs:37:7\n+   |\n+37 |     p.closure(); //~ ERROR no method named `closure` found\n+   |       ^^^^^^^ field, not a method\n+   |\n+   = help: use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `fn_ptr` found for type `&&Obj<[closure@$DIR/issue-33784.rs:35:43: 35:48]>` in the current scope\n+  --> $DIR/issue-33784.rs:41:7\n+   |\n+41 |     q.fn_ptr(); //~ ERROR no method named `fn_ptr` found\n+   |       ^^^^^^ field, not a method\n+   |\n+   = help: use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+\n+error: no method named `c_fn_ptr` found for type `&D` in the current scope\n+  --> $DIR/issue-33784.rs:46:7\n+   |\n+46 |     s.c_fn_ptr(); //~ ERROR no method named `c_fn_ptr` found\n+   |       ^^^^^^^^ field, not a method\n+   |\n+   = help: use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr` field\n+\n+error: aborting due to 3 previous errors\n+"}]}