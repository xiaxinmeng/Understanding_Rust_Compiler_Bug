{"sha": "ece709f172d180471d59a17bb92aa0c3f3ca25d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZTcwOWYxNzJkMTgwNDcxZDU5YTE3YmI5MmFhMGMzZjNjYTI1ZDc=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-08-22T04:22:53Z"}, "committer": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-08-22T23:31:58Z"}, "message": "std: more seek tests", "tree": {"sha": "009640f6fec3ec41873dfef79e25cac7ba9e9ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/009640f6fec3ec41873dfef79e25cac7ba9e9ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ece709f172d180471d59a17bb92aa0c3f3ca25d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ece709f172d180471d59a17bb92aa0c3f3ca25d7", "html_url": "https://github.com/rust-lang/rust/commit/ece709f172d180471d59a17bb92aa0c3f3ca25d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ece709f172d180471d59a17bb92aa0c3f3ca25d7/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "320ccbeb53b711282be6a11623df45c789925059", "url": "https://api.github.com/repos/rust-lang/rust/commits/320ccbeb53b711282be6a11623df45c789925059", "html_url": "https://github.com/rust-lang/rust/commit/320ccbeb53b711282be6a11623df45c789925059"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "b7a923d94c744224142afe5f6587a4b69e30e69f", "filename": "src/libstd/rt/io/file.rs", "status": "modified", "additions": 71, "deletions": 1, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/ece709f172d180471d59a17bb92aa0c3f3ca25d7/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ece709f172d180471d59a17bb92aa0c3f3ca25d7/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Ffile.rs?ref=ece709f172d180471d59a17bb92aa0c3f3ca25d7", "patch": "@@ -11,7 +11,7 @@\n use prelude::*;\n use super::support::PathLike;\n use super::{Reader, Writer, Seek};\n-use super::{SeekSet, SeekStyle};\n+use super::{SeekSet, SeekCur, SeekEnd, SeekStyle};\n use rt::rtio::{RtioFileStream, IoFactory, IoFactoryObject};\n use rt::io::{io_error, read_error, EndOfFile};\n use rt::local::Local;\n@@ -314,3 +314,73 @@ fn file_test_io_seeking_impl() {\n fn file_test_io_seek_and_tell_smoke_test() {\n     file_test_io_seeking_impl();\n }\n+\n+fn file_test_io_seek_and_write_impl() {\n+    use io;\n+    do run_in_newsched_task {\n+        use str;\n+        let initial_msg =   \"food-is-yummy\";\n+        let overwrite_msg =    \"-the-bar!!\";\n+        let final_msg =     \"foo-the-bar!!\";\n+        let seek_idx = 3;\n+        let mut read_mem = [0, .. 13];\n+        let filename = &Path(\"./rt_io_file_test_seek_and_write.txt\");\n+        {\n+            let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n+            rw_stream.write(initial_msg.as_bytes());\n+            rw_stream.seek(seek_idx as i64, SeekSet);\n+            rw_stream.write(overwrite_msg.as_bytes());\n+        }\n+        {\n+            let mut read_stream = FileStream::open(filename, Open, Read).unwrap();\n+            read_stream.read(read_mem);\n+        }\n+        FileStream::unlink(filename);\n+        let read_str = str::from_bytes(read_mem);\n+        io::println(fmt!(\"read_str: '%?' final_msg: '%?'\", read_str, final_msg));\n+        assert!(read_str == final_msg.to_owned());\n+    }\n+}\n+#[test]\n+fn file_test_io_seek_and_write() {\n+    file_test_io_seek_and_write_impl();\n+}\n+\n+fn file_test_io_seek_shakedown_impl() {\n+    do run_in_newsched_task {\n+        use str;          // 01234567890123\n+        let initial_msg =   \"qwer-asdf-zxcv\";\n+        let chunk_one = \"qwer\";\n+        let chunk_two = \"asdf\";\n+        let chunk_three = \"zxcv\";\n+        let mut read_mem = [0, .. 4];\n+        let filename = &Path(\"./rt_io_file_test_seek_shakedown.txt\");\n+        {\n+            let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n+            rw_stream.write(initial_msg.as_bytes());\n+        }\n+        {\n+            let mut read_stream = FileStream::open(filename, Open, Read).unwrap();\n+\n+            read_stream.seek(-4, SeekEnd);\n+            read_stream.read(read_mem);\n+            let read_str = str::from_bytes(read_mem);\n+            assert!(read_str == chunk_three.to_owned());\n+\n+            read_stream.seek(-9, SeekCur);\n+            read_stream.read(read_mem);\n+            let read_str = str::from_bytes(read_mem);\n+            assert!(read_str == chunk_two.to_owned());\n+\n+            read_stream.seek(0, SeekSet);\n+            read_stream.read(read_mem);\n+            let read_str = str::from_bytes(read_mem);\n+            assert!(read_str == chunk_one.to_owned());\n+        }\n+        FileStream::unlink(filename);\n+    }\n+}\n+#[test]\n+fn file_test_io_seek_shakedown() {\n+    file_test_io_seek_shakedown_impl();\n+}"}]}