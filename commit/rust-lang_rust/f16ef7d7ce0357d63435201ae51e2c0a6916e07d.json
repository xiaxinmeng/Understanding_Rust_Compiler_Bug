{"sha": "f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNmVmN2Q3Y2UwMzU3ZDYzNDM1MjAxYWU1MWUyYzBhNjkxNmUwN2Q=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-30T13:33:46Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-31T18:06:09Z"}, "message": "Add edition 2021.", "tree": {"sha": "839d540878c1df626d8095dc63681c1ef35dfb34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/839d540878c1df626d8095dc63681c1ef35dfb34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "html_url": "https://github.com/rust-lang/rust/commit/f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e", "html_url": "https://github.com/rust-lang/rust/commit/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e"}], "stats": {"total": 85, "additions": 57, "deletions": 28}, "files": [{"sha": "40210f747ffb84d766e8ea2356ec428cc78cf5a2", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -15,6 +15,7 @@ use rustc_ast::{AnonConst, BinOp, BinOpKind, FnDecl, FnRetTy, MacCall, Param, Ty\n use rustc_ast::{Arm, Async, BlockCheckMode, Expr, ExprKind, Label, Movability, RangeLimits};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{Applicability, DiagnosticBuilder, PResult};\n+use rustc_span::edition::LATEST_STABLE_EDITION;\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, Pos};\n@@ -2108,8 +2109,8 @@ impl<'a> Parser<'a> {\n \n         let mut async_block_err = |e: &mut DiagnosticBuilder<'_>, span: Span| {\n             recover_async = true;\n-            e.span_label(span, \"`async` blocks are only allowed in the 2018 edition\");\n-            e.help(\"set `edition = \\\"2018\\\"` in `Cargo.toml`\");\n+            e.span_label(span, \"`async` blocks are only allowed in edition 2018 or later\");\n+            e.help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION));\n             e.note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\");\n         };\n "}, {"sha": "6d79a6ac09cbb17b781c3be312fb3364bddc4a67", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -16,7 +16,7 @@ use rustc_ast::{FnHeader, ForeignItem, Path, PathSegment, Visibility, Visibility\n use rustc_ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n-use rustc_span::edition::Edition;\n+use rustc_span::edition::{Edition, LATEST_STABLE_EDITION};\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n \n@@ -1668,8 +1668,8 @@ impl<'a> Parser<'a> {\n         if span.rust_2015() {\n             let diag = self.diagnostic();\n             struct_span_err!(diag, span, E0670, \"`async fn` is not permitted in the 2015 edition\")\n-                .span_label(span, \"to use `async fn`, switch to Rust 2018\")\n-                .help(\"set `edition = \\\"2018\\\"` in `Cargo.toml`\")\n+                .span_label(span, \"to use `async fn`, switch to Rust 2018 or later\")\n+                .help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION))\n                 .note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\")\n                 .emit();\n         }"}, {"sha": "3a420f5f9def7a8412abecac921150060b3f7efd", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -1076,6 +1076,11 @@ impl Session {\n         self.opts.edition >= Edition::Edition2018\n     }\n \n+    /// Are we allowed to use features from the Rust 2021 edition?\n+    pub fn rust_2021(&self) -> bool {\n+        self.opts.edition >= Edition::Edition2021\n+    }\n+\n     pub fn edition(&self) -> Edition {\n         self.opts.edition\n     }"}, {"sha": "a9200dd7dfd6e196e417d6def64c5e39d6ea20af", "filename": "compiler/rustc_span/src/edition.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fedition.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -20,20 +20,26 @@ pub enum Edition {\n     Edition2015,\n     /// The 2018 edition\n     Edition2018,\n+    /// The 2021 ediiton\n+    Edition2021,\n }\n \n // Must be in order from oldest to newest.\n-pub const ALL_EDITIONS: &[Edition] = &[Edition::Edition2015, Edition::Edition2018];\n+pub const ALL_EDITIONS: &[Edition] =\n+    &[Edition::Edition2015, Edition::Edition2018, Edition::Edition2021];\n \n-pub const EDITION_NAME_LIST: &str = \"2015|2018\";\n+pub const EDITION_NAME_LIST: &str = \"2015|2018|2021\";\n \n pub const DEFAULT_EDITION: Edition = Edition::Edition2015;\n \n+pub const LATEST_STABLE_EDITION: Edition = Edition::Edition2018;\n+\n impl fmt::Display for Edition {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let s = match *self {\n             Edition::Edition2015 => \"2015\",\n             Edition::Edition2018 => \"2018\",\n+            Edition::Edition2021 => \"2021\",\n         };\n         write!(f, \"{}\", s)\n     }\n@@ -44,20 +50,23 @@ impl Edition {\n         match *self {\n             Edition::Edition2015 => \"rust_2015_compatibility\",\n             Edition::Edition2018 => \"rust_2018_compatibility\",\n+            Edition::Edition2021 => \"rust_2021_compatibility\",\n         }\n     }\n \n     pub fn feature_name(&self) -> Symbol {\n         match *self {\n             Edition::Edition2015 => sym::rust_2015_preview,\n             Edition::Edition2018 => sym::rust_2018_preview,\n+            Edition::Edition2021 => sym::rust_2021_preview,\n         }\n     }\n \n     pub fn is_stable(&self) -> bool {\n         match *self {\n             Edition::Edition2015 => true,\n             Edition::Edition2018 => true,\n+            Edition::Edition2021 => false,\n         }\n     }\n }\n@@ -68,6 +77,7 @@ impl FromStr for Edition {\n         match s {\n             \"2015\" => Ok(Edition::Edition2015),\n             \"2018\" => Ok(Edition::Edition2018),\n+            \"2021\" => Ok(Edition::Edition2021),\n             _ => Err(()),\n         }\n     }"}, {"sha": "99f01062545a76906b764679388405d5aa702412", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -481,6 +481,11 @@ impl Span {\n         self.edition() >= edition::Edition::Edition2018\n     }\n \n+    #[inline]\n+    pub fn rust_2021(&self) -> bool {\n+        self.edition() >= edition::Edition::Edition2021\n+    }\n+\n     /// Returns the source callee.\n     ///\n     /// Returns `None` if the supplied span has no expansion trace,"}, {"sha": "b040a70437d9ea300cc64dcbf8b3759dc37e508a", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -923,6 +923,7 @@ symbols! {\n         rust,\n         rust_2015_preview,\n         rust_2018_preview,\n+        rust_2021_preview,\n         rust_begin_unwind,\n         rust_eh_catch_typeinfo,\n         rust_eh_personality,"}, {"sha": "8197d02ec594b2332fd81bd4aa5b812062235baf", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -38,6 +38,7 @@ use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase};\n use rustc_middle::ty::Ty;\n use rustc_middle::ty::TypeFoldable;\n use rustc_middle::ty::{AdtKind, Visibility};\n+use rustc_span::edition::LATEST_STABLE_EDITION;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::source_map::Span;\n@@ -1637,8 +1638,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         if field.name == kw::Await {\n             // We know by construction that `<expr>.await` is either on Rust 2015\n             // or results in `ExprKind::Await`. Suggest switching the edition to 2018.\n-            err.note(\"to `.await` a `Future`, switch to Rust 2018\");\n-            err.help(\"set `edition = \\\"2018\\\"` in `Cargo.toml`\");\n+            err.note(\"to `.await` a `Future`, switch to Rust 2018 or later\");\n+            err.help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION));\n             err.note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\");\n         }\n "}, {"sha": "39bc8e7be8f9fbaf6d727d6ef0c824c10a1401f7", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -2,7 +2,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:3:1\n    |\n LL | async fn foo() {}\n-   | ^^^^^ to use `async fn`, switch to Rust 2018\n+   | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -11,7 +11,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:5:12\n    |\n LL | fn baz() { async fn foo() {} }\n-   |            ^^^^^ to use `async fn`, switch to Rust 2018\n+   |            ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -20,7 +20,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:7:1\n    |\n LL | async fn async_baz() {\n-   | ^^^^^ to use `async fn`, switch to Rust 2018\n+   | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -29,7 +29,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:8:5\n    |\n LL |     async fn bar() {}\n-   |     ^^^^^ to use `async fn`, switch to Rust 2018\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -38,7 +38,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:14:5\n    |\n LL |     async fn foo() {}\n-   |     ^^^^^ to use `async fn`, switch to Rust 2018\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -47,7 +47,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:18:5\n    |\n LL |     async fn foo() {}\n-   |     ^^^^^ to use `async fn`, switch to Rust 2018\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -56,7 +56,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:36:9\n    |\n LL |         async fn bar() {}\n-   |         ^^^^^ to use `async fn`, switch to Rust 2018\n+   |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -65,7 +65,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:26:9\n    |\n LL |         async fn foo() {}\n-   |         ^^^^^ to use `async fn`, switch to Rust 2018\n+   |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -74,7 +74,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/edition-deny-async-fns-2015.rs:31:13\n    |\n LL |             async fn bar() {}\n-   |             ^^^^^ to use `async fn`, switch to Rust 2018\n+   |             ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide"}, {"sha": "9ac2bc5cc89648f34f1d58d2b0a5694baf8640a5", "filename": "src/test/ui/async-await/suggest-switching-edition-on-await.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -4,7 +4,7 @@ error[E0609]: no field `await` on type `await_on_struct_missing::S`\n LL |     x.await;\n    |       ^^^^^ unknown field\n    |\n-   = note: to `.await` a `Future`, switch to Rust 2018\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n@@ -14,7 +14,7 @@ error[E0609]: no field `await` on type `await_on_struct_similar::S`\n LL |     x.await;\n    |       ^^^^^ help: a field with a similar name exists: `awai`\n    |\n-   = note: to `.await` a `Future`, switch to Rust 2018\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n@@ -24,7 +24,7 @@ error[E0609]: no field `await` on type `Pin<&mut dyn Future<Output = ()>>`\n LL |     x.await;\n    |       ^^^^^ unknown field\n    |\n-   = note: to `.await` a `Future`, switch to Rust 2018\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n@@ -34,7 +34,7 @@ error[E0609]: no field `await` on type `impl Future<Output = ()>`\n LL |     x.await;\n    |       ^^^^^\n    |\n-   = note: to `.await` a `Future`, switch to Rust 2018\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n "}, {"sha": "b35cc1564b3d992bf95c0c6c460ee6056aac0dec", "filename": "src/test/ui/editions/async-block-2015.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -1,21 +1,21 @@\n async fn foo() {\n //~^ ERROR `async fn` is not permitted in the 2015 edition\n-//~| NOTE to use `async fn`, switch to Rust 2018\n+//~| NOTE to use `async fn`, switch to Rust 2018 or later\n //~| HELP set `edition = \"2018\"` in `Cargo.toml`\n //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n \n     let x = async {};\n     //~^ ERROR cannot find struct, variant or union type `async` in this scope\n     //~| NOTE `async` blocks are only allowed in the 2018 edition\n-    let y = async { //~ NOTE `async` blocks are only allowed in the 2018 edition\n+    let y = async { //~ NOTE `async` blocks are only allowed in edition 2018 or later\n         let x = 42;\n         //~^ ERROR expected identifier, found keyword `let`\n         //~| NOTE expected identifier, found keyword\n         //~| HELP set `edition = \"2018\"` in `Cargo.toml`\n         //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n         42\n     };\n-    let z = async { //~ NOTE `async` blocks are only allowed in the 2018 edition\n+    let z = async { //~ NOTE `async` blocks are only allowed in edition 2018 or later\n         42\n         //~^ ERROR expected identifier, found `42`\n         //~| NOTE expected identifier"}, {"sha": "d65761d79ff2bdd15d5f0ff447ca962563e0bebf", "filename": "src/test/ui/editions/async-block-2015.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -2,7 +2,7 @@ error[E0670]: `async fn` is not permitted in the 2015 edition\n   --> $DIR/async-block-2015.rs:1:1\n    |\n LL | async fn foo() {\n-   | ^^^^^ to use `async fn`, switch to Rust 2018\n+   | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n@@ -11,7 +11,7 @@ error: expected identifier, found keyword `let`\n   --> $DIR/async-block-2015.rs:11:9\n    |\n LL |     let y = async {\n-   |             ----- `async` blocks are only allowed in the 2018 edition\n+   |             ----- `async` blocks are only allowed in edition 2018 or later\n LL |         let x = 42;\n    |         ^^^ expected identifier, found keyword\n    |\n@@ -22,7 +22,7 @@ error: expected identifier, found `42`\n   --> $DIR/async-block-2015.rs:19:9\n    |\n LL |     let z = async {\n-   |             ----- `async` blocks are only allowed in the 2018 edition\n+   |             ----- `async` blocks are only allowed in edition 2018 or later\n LL |         42\n    |         ^^ expected identifier\n    |"}, {"sha": "134d8af5bfb8aba42320695460111a4b87ca45cf", "filename": "src/test/ui/hello2021.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fhello2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16ef7d7ce0357d63435201ae51e2c0a6916e07d/src%2Ftest%2Fui%2Fhello2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhello2021.rs?ref=f16ef7d7ce0357d63435201ae51e2c0a6916e07d", "patch": "@@ -0,0 +1,6 @@\n+// run-pass\n+// edition:2021\n+\n+fn main() {\n+    println!(\"hello, 2021\");\n+}"}]}