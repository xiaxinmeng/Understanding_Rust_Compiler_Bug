{"sha": "9f7e62ea209811fd1ca864498761e733f1c99298", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmN2U2MmVhMjA5ODExZmQxY2E4NjQ0OTg3NjFlNzMzZjFjOTkyOTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-28T02:49:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-28T03:11:59Z"}, "message": "rustc: Fix a missing application of the operator in fold_ty", "tree": {"sha": "90fc057e5f1138271a92b491b3f0e18dda26da5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90fc057e5f1138271a92b491b3f0e18dda26da5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f7e62ea209811fd1ca864498761e733f1c99298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e62ea209811fd1ca864498761e733f1c99298", "html_url": "https://github.com/rust-lang/rust/commit/9f7e62ea209811fd1ca864498761e733f1c99298", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e62ea209811fd1ca864498761e733f1c99298/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa3aa64b91e49a6ce2101cd109b6d433ce325f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3aa64b91e49a6ce2101cd109b6d433ce325f1c", "html_url": "https://github.com/rust-lang/rust/commit/fa3aa64b91e49a6ce2101cd109b6d433ce325f1c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "f3f4c0a53de7df9b7b94628780fa37c47540b0f9", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f7e62ea209811fd1ca864498761e733f1c99298/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7e62ea209811fd1ca864498761e733f1c99298/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=9f7e62ea209811fd1ca864498761e733f1c99298", "patch": "@@ -863,7 +863,7 @@ fn fold_sty(sty: sty, fldop: fn(t) -> t) -> sty {\n \n // Folds types from the bottom up.\n fn fold_ty(cx: ctxt, t0: t, fldop: fn(t) -> t) -> t {\n-    let sty = fold_sty(get(t0).struct) {|t| fold_ty(cx, t, fldop) };\n+    let sty = fold_sty(get(t0).struct) {|t| fold_ty(cx, fldop(t), fldop) };\n     fldop(mk_t(cx, sty))\n }\n "}, {"sha": "e41eb1325252b8e957904062aad307c04063fd73", "filename": "src/test/run-pass/boxed-class-type-substitution.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9f7e62ea209811fd1ca864498761e733f1c99298/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7e62ea209811fd1ca864498761e733f1c99298/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs?ref=9f7e62ea209811fd1ca864498761e733f1c99298", "patch": "@@ -0,0 +1,22 @@\n+// Regression test that rustc doesn't recurse infinitely substituting\n+// the boxed type parameter\n+\n+type Tree<T> = {\n+    mut parent: option<T>,\n+};\n+\n+fn empty<T>() -> Tree<T> { fail }\n+\n+class Box {\n+    let tree: Tree<@Box>;\n+\n+    new() {\n+        self.tree = empty();\n+    }\n+}\n+\n+enum layout_data = {\n+    mut box: option<@Box>\n+};\n+\n+fn main() { }\n\\ No newline at end of file"}]}