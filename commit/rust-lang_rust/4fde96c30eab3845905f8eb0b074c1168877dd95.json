{"sha": "4fde96c30eab3845905f8eb0b074c1168877dd95", "node_id": "C_kwDOAAsO6NoAKDRmZGU5NmMzMGVhYjM4NDU5MDVmOGViMGIwNzRjMTE2ODg3N2RkOTU", "commit": {"author": {"name": "Tyler Weaver", "email": "maybe@tylerjw.dev", "date": "2023-01-30T23:04:19Z"}, "committer": {"name": "Tyler Weaver", "email": "maybe@tylerjw.dev", "date": "2023-01-30T23:16:53Z"}, "message": "Test needless_lifetimes within external macro\n\nSigned-off-by: Tyler Weaver <maybe@tylerjw.dev>", "tree": {"sha": "13e61612bfe059d2d842b058be265fc9be1b0774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13e61612bfe059d2d842b058be265fc9be1b0774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fde96c30eab3845905f8eb0b074c1168877dd95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg7SOvb1XvVqyndOg/aB6xzqcLku\ncJTkLKCfEUxpSDkY0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQD8JLwir0/aE8Tr6U5aBvFFIxW3JPbOnjpAUMhBFhmWJ3rzA2sXSH7sIqEr11m2mYT\n80h4yV3fE25PNVZzeLsgg=\n-----END SSH SIGNATURE-----", "payload": "tree 13e61612bfe059d2d842b058be265fc9be1b0774\nparent c959813bfd376322491f0a7b89d7dce79d5af942\nauthor Tyler Weaver <maybe@tylerjw.dev> 1675119859 -0700\ncommitter Tyler Weaver <maybe@tylerjw.dev> 1675120613 -0700\n\nTest needless_lifetimes within external macro\n\nSigned-off-by: Tyler Weaver <maybe@tylerjw.dev>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fde96c30eab3845905f8eb0b074c1168877dd95", "html_url": "https://github.com/rust-lang/rust/commit/4fde96c30eab3845905f8eb0b074c1168877dd95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fde96c30eab3845905f8eb0b074c1168877dd95/comments", "author": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c959813bfd376322491f0a7b89d7dce79d5af942", "url": "https://api.github.com/repos/rust-lang/rust/commits/c959813bfd376322491f0a7b89d7dce79d5af942", "html_url": "https://github.com/rust-lang/rust/commit/c959813bfd376322491f0a7b89d7dce79d5af942"}], "stats": {"total": 150, "additions": 89, "deletions": 61}, "files": [{"sha": "ef9ac96ace5c7dda458e992ad64b868542cad86f", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4fde96c30eab3845905f8eb0b074c1168877dd95/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fde96c30eab3845905f8eb0b074c1168877dd95/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=4fde96c30eab3845905f8eb0b074c1168877dd95", "patch": "@@ -13,8 +13,9 @@ use rustc_hir::{\n     ImplItemKind, Item, ItemKind, Lifetime, LifetimeName, LifetimeParamKind, PolyTraitRef, PredicateOrigin, TraitFn,\n     TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n };\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::hir::nested_filter as middle_nested_filter;\n+use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::def_id::LocalDefId;\n@@ -144,7 +145,7 @@ fn check_fn_inner<'tcx>(\n     span: Span,\n     report_extra_lifetimes: bool,\n ) {\n-    if span.from_expansion() || has_where_lifetimes(cx, generics) {\n+    if in_external_macro(cx.sess(), span) || has_where_lifetimes(cx, generics) {\n         return;\n     }\n "}, {"sha": "a13af5652038939fa32c398796dd377eef7babe4", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=4fde96c30eab3845905f8eb0b074c1168877dd95", "patch": "@@ -159,3 +159,12 @@ macro_rules! unsafe_macro {\n         }\n     };\n }\n+\n+#[macro_export]\n+macro_rules! needless_lifetime {\n+    () => {\n+        fn needless_lifetime<'a>(x: &'a u8) -> &'a u8 {\n+            unimplemented!()\n+        }\n+    };\n+}"}, {"sha": "78493c6d067266a107a4ba52ea97369ed529ba50", "filename": "tests/ui/needless_lifetimes.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fneedless_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fneedless_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_lifetimes.rs?ref=4fde96c30eab3845905f8eb0b074c1168877dd95", "patch": "@@ -1,3 +1,4 @@\n+// aux-build:macro_rules.rs\n #![warn(clippy::needless_lifetimes)]\n #![allow(\n     dead_code,\n@@ -8,6 +9,9 @@\n     clippy::get_first\n )]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n \n fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n@@ -495,17 +499,20 @@ mod pr_9743_output_lifetime_checks {\n     }\n }\n \n-mod skip_inside_macros {\n-    macro_rules! print_with_one_input {\n-        ($a:expr) => {\n-            fn print_with_one_input<'a>(x: &'a u8) -> &'a u8 {\n-                println!(\"{}\", $a);\n+mod in_macro {\n+    macro_rules! local_one_input_macro {\n+        () => {\n+            fn one_input<'a>(x: &'a u8) -> &'a u8 {\n                 unimplemented!()\n             }\n         };\n     }\n \n-    print_with_one_input!(\"this is a dandy little string literal\");\n+    // lint local macro expands to function with needless lifetimes\n+    local_one_input_macro!();\n+\n+    // no lint on external macro\n+    macro_rules::needless_lifetime!();\n }\n \n fn main() {}"}, {"sha": "9d02626956e0fb9305467e1e3d5af878a6927a22", "filename": "tests/ui/needless_lifetimes.stderr", "status": "modified", "additions": 64, "deletions": 53, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fneedless_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fde96c30eab3845905f8eb0b074c1168877dd95/tests%2Fui%2Fneedless_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_lifetimes.stderr?ref=4fde96c30eab3845905f8eb0b074c1168877dd95", "patch": "@@ -1,316 +1,327 @@\n error: the following explicit lifetimes could be elided: 'a, 'b\n-  --> $DIR/needless_lifetimes.rs:11:1\n+  --> $DIR/needless_lifetimes.rs:15:1\n    |\n LL | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: the following explicit lifetimes could be elided: 'a, 'b\n-  --> $DIR/needless_lifetimes.rs:13:1\n+  --> $DIR/needless_lifetimes.rs:17:1\n    |\n LL | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:23:1\n+  --> $DIR/needless_lifetimes.rs:27:1\n    |\n LL | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'b\n-  --> $DIR/needless_lifetimes.rs:35:1\n+  --> $DIR/needless_lifetimes.rs:39:1\n    |\n LL | fn multiple_in_and_out_2a<'a, 'b>(x: &'a u8, _y: &'b u8) -> &'a u8 {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:42:1\n+  --> $DIR/needless_lifetimes.rs:46:1\n    |\n LL | fn multiple_in_and_out_2b<'a, 'b>(_x: &'a u8, y: &'b u8) -> &'b u8 {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'b\n-  --> $DIR/needless_lifetimes.rs:59:1\n+  --> $DIR/needless_lifetimes.rs:63:1\n    |\n LL | fn deep_reference_1a<'a, 'b>(x: &'a u8, _y: &'b u8) -> Result<&'a u8, ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:66:1\n+  --> $DIR/needless_lifetimes.rs:70:1\n    |\n LL | fn deep_reference_1b<'a, 'b>(_x: &'a u8, y: &'b u8) -> Result<&'b u8, ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:75:1\n+  --> $DIR/needless_lifetimes.rs:79:1\n    |\n LL | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:80:1\n+  --> $DIR/needless_lifetimes.rs:84:1\n    |\n LL | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a, 'b\n-  --> $DIR/needless_lifetimes.rs:92:1\n+  --> $DIR/needless_lifetimes.rs:96:1\n    |\n LL | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:92:37\n+  --> $DIR/needless_lifetimes.rs:96:37\n    |\n LL | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n    |                                     ^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:116:1\n+  --> $DIR/needless_lifetimes.rs:120:1\n    |\n LL | fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:116:32\n+  --> $DIR/needless_lifetimes.rs:120:32\n    |\n LL | fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n    |                                ^^\n \n error: the following explicit lifetimes could be elided: 's\n-  --> $DIR/needless_lifetimes.rs:146:5\n+  --> $DIR/needless_lifetimes.rs:150:5\n    |\n LL |     fn self_and_out<'s>(&'s self) -> &'s u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 't\n-  --> $DIR/needless_lifetimes.rs:153:5\n+  --> $DIR/needless_lifetimes.rs:157:5\n    |\n LL |     fn self_and_in_out_1<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 's\n-  --> $DIR/needless_lifetimes.rs:160:5\n+  --> $DIR/needless_lifetimes.rs:164:5\n    |\n LL |     fn self_and_in_out_2<'s, 't>(&'s self, x: &'t u8) -> &'t u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 's, 't\n-  --> $DIR/needless_lifetimes.rs:164:5\n+  --> $DIR/needless_lifetimes.rs:168:5\n    |\n LL |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:183:1\n+  --> $DIR/needless_lifetimes.rs:187:1\n    |\n LL | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:183:33\n+  --> $DIR/needless_lifetimes.rs:187:33\n    |\n LL | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n    |                                 ^^\n \n error: the following explicit lifetimes could be elided: 'b\n-  --> $DIR/needless_lifetimes.rs:201:1\n+  --> $DIR/needless_lifetimes.rs:205:1\n    |\n LL | fn struct_with_lt4a<'a, 'b>(_foo: &'a Foo<'b>) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:201:43\n+  --> $DIR/needless_lifetimes.rs:205:43\n    |\n LL | fn struct_with_lt4a<'a, 'b>(_foo: &'a Foo<'b>) -> &'a str {\n    |                                           ^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:209:1\n+  --> $DIR/needless_lifetimes.rs:213:1\n    |\n LL | fn struct_with_lt4b<'a, 'b>(_foo: &'a Foo<'b>) -> &'b str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:224:1\n+  --> $DIR/needless_lifetimes.rs:228:1\n    |\n LL | fn trait_obj_elided2<'a>(_arg: &'a dyn Drop) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:230:1\n+  --> $DIR/needless_lifetimes.rs:234:1\n    |\n LL | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:230:37\n+  --> $DIR/needless_lifetimes.rs:234:37\n    |\n LL | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n    |                                     ^^\n \n error: the following explicit lifetimes could be elided: 'b\n-  --> $DIR/needless_lifetimes.rs:248:1\n+  --> $DIR/needless_lifetimes.rs:252:1\n    |\n LL | fn alias_with_lt4a<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:248:47\n+  --> $DIR/needless_lifetimes.rs:252:47\n    |\n LL | fn alias_with_lt4a<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'a str {\n    |                                               ^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:256:1\n+  --> $DIR/needless_lifetimes.rs:260:1\n    |\n LL | fn alias_with_lt4b<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'b str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:260:1\n+  --> $DIR/needless_lifetimes.rs:264:1\n    |\n LL | fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:268:1\n+  --> $DIR/needless_lifetimes.rs:272:1\n    |\n LL | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:304:1\n+  --> $DIR/needless_lifetimes.rs:308:1\n    |\n LL | fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: replace with `'_` in generic arguments such as here\n-  --> $DIR/needless_lifetimes.rs:304:47\n+  --> $DIR/needless_lifetimes.rs:308:47\n    |\n LL | fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n    |                                               ^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:311:9\n+  --> $DIR/needless_lifetimes.rs:315:9\n    |\n LL |         fn needless_lt<'a>(x: &'a u8) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:315:9\n+  --> $DIR/needless_lifetimes.rs:319:9\n    |\n LL |         fn needless_lt<'a>(_x: &'a u8) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:328:9\n+  --> $DIR/needless_lifetimes.rs:332:9\n    |\n LL |         fn baz<'a>(&'a self) -> impl Foo + 'a {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:360:5\n+  --> $DIR/needless_lifetimes.rs:364:5\n    |\n LL |     fn impl_trait_elidable_nested_anonymous_lifetimes<'a>(i: &'a i32, f: impl Fn(&i32) -> &i32) -> &'a i32 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:369:5\n+  --> $DIR/needless_lifetimes.rs:373:5\n    |\n LL |     fn generics_elidable<'a, T: Fn(&i32) -> &i32>(i: &'a i32, f: T) -> &'a i32 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:381:5\n+  --> $DIR/needless_lifetimes.rs:385:5\n    |\n LL |     fn where_clause_elidadable<'a, T>(i: &'a i32, f: T) -> &'a i32\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:396:5\n+  --> $DIR/needless_lifetimes.rs:400:5\n    |\n LL |     fn pointer_fn_elidable<'a>(i: &'a i32, f: fn(&i32) -> &i32) -> &'a i32 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:409:5\n+  --> $DIR/needless_lifetimes.rs:413:5\n    |\n LL |     fn nested_fn_pointer_3<'a>(_: &'a i32) -> fn(fn(&i32) -> &i32) -> i32 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:412:5\n+  --> $DIR/needless_lifetimes.rs:416:5\n    |\n LL |     fn nested_fn_pointer_4<'a>(_: &'a i32) -> impl Fn(fn(&i32)) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:434:9\n+  --> $DIR/needless_lifetimes.rs:438:9\n    |\n LL |         fn implicit<'a>(&'a self) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:437:9\n+  --> $DIR/needless_lifetimes.rs:441:9\n    |\n LL |         fn implicit_mut<'a>(&'a mut self) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:448:9\n+  --> $DIR/needless_lifetimes.rs:452:9\n    |\n LL |         fn lifetime_elsewhere<'a>(self: Box<Self>, here: &'a ()) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:454:9\n+  --> $DIR/needless_lifetimes.rs:458:9\n    |\n LL |         fn implicit<'a>(&'a self) -> &'a ();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:455:9\n+  --> $DIR/needless_lifetimes.rs:459:9\n    |\n LL |         fn implicit_provided<'a>(&'a self) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:464:9\n+  --> $DIR/needless_lifetimes.rs:468:9\n    |\n LL |         fn lifetime_elsewhere<'a>(self: Box<Self>, here: &'a ()) -> &'a ();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:465:9\n+  --> $DIR/needless_lifetimes.rs:469:9\n    |\n LL |         fn lifetime_elsewhere_provided<'a>(self: Box<Self>, here: &'a ()) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:474:5\n+  --> $DIR/needless_lifetimes.rs:478:5\n    |\n LL |     fn foo<'a>(x: &'a u8, y: &'_ u8) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:476:5\n+  --> $DIR/needless_lifetimes.rs:480:5\n    |\n LL |     fn bar<'a>(x: &'a u8, y: &'_ u8, z: &'_ u8) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:483:5\n+  --> $DIR/needless_lifetimes.rs:487:5\n    |\n LL |     fn one_input<'a>(x: &'a u8) -> &'a u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the following explicit lifetimes could be elided: 'a\n-  --> $DIR/needless_lifetimes.rs:488:5\n+  --> $DIR/needless_lifetimes.rs:492:5\n    |\n LL |     fn multiple_inputs_output_not_elided<'a, 'b>(x: &'a u8, y: &'b u8, z: &'b u8) -> &'b u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 45 previous errors\n+error: the following explicit lifetimes could be elided: 'a\n+  --> $DIR/needless_lifetimes.rs:505:13\n+   |\n+LL |             fn one_input<'a>(x: &'a u8) -> &'a u8 {\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     local_one_input_macro!();\n+   |     ------------------------ in this macro invocation\n+   |\n+   = note: this error originates in the macro `local_one_input_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 46 previous errors\n "}]}