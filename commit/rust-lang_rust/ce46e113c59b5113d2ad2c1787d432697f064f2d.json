{"sha": "ce46e113c59b5113d2ad2c1787d432697f064f2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNDZlMTEzYzU5YjUxMTNkMmFkMmMxNzg3ZDQzMjY5N2YwNjRmMmQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-07-20T02:01:22Z"}, "committer": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-07-20T02:01:22Z"}, "message": "Merge pull request #2910 from gwillen/bug-2360\n\nBetter error when rustc fails to write output.", "tree": {"sha": "a379cffbf5cbea455f12607620c83372975ce7ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a379cffbf5cbea455f12607620c83372975ce7ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce46e113c59b5113d2ad2c1787d432697f064f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce46e113c59b5113d2ad2c1787d432697f064f2d", "html_url": "https://github.com/rust-lang/rust/commit/ce46e113c59b5113d2ad2c1787d432697f064f2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce46e113c59b5113d2ad2c1787d432697f064f2d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac9cf98564cc394672cd9a96a02093569951027c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac9cf98564cc394672cd9a96a02093569951027c", "html_url": "https://github.com/rust-lang/rust/commit/ac9cf98564cc394672cd9a96a02093569951027c"}, {"sha": "28c1f21433a927bf9e3b399ec293cd7f7b688af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c1f21433a927bf9e3b399ec293cd7f7b688af6", "html_url": "https://github.com/rust-lang/rust/commit/28c1f21433a927bf9e3b399ec293cd7f7b688af6"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "36c30f40825bea9a9a4ba2f895aaac67346f161e", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=ce46e113c59b5113d2ad2c1787d432697f064f2d", "patch": "@@ -1,4 +1,4 @@\n-import libc::{c_int, c_uint};\n+import libc::{c_int, c_uint, c_char};\n import driver::session;\n import session::session;\n import lib::llvm::llvm;\n@@ -32,6 +32,21 @@ fn llvm_err(sess: session, msg: ~str) -> ! unsafe {\n     } else { sess.fatal(msg + ~\": \" + str::unsafe::from_c_str(cstr)); }\n }\n \n+fn WriteOutputFile(sess:session,\n+        PM: lib::llvm::PassManagerRef, M: ModuleRef,\n+        Triple: *c_char,\n+        // FIXME: When #2334 is fixed, change\n+        // c_uint to FileType\n+        Output: *c_char, FileType: c_uint,\n+        OptLevel: c_int,\n+        EnableSegmentedStacks: bool) {\n+    let result = llvm::LLVMRustWriteOutputFile(\n+            PM, M, Triple, Output, FileType, OptLevel, EnableSegmentedStacks);\n+    if (!result) {\n+        llvm_err(sess, \"Could not write output\");\n+    }\n+}\n+\n mod write {\n     fn is_object_or_assembly_or_exe(ot: output_type) -> bool {\n         if ot == output_type_assembly || ot == output_type_object ||\n@@ -161,7 +176,8 @@ mod write {\n                         sess.targ_cfg.target_strs.target_triple,\n                         |buf_t| {\n                             str::as_c_str(output, |buf_o| {\n-                                llvm::LLVMRustWriteOutputFile(\n+                                WriteOutputFile(\n+                                    sess,\n                                     pm.llpm,\n                                     llmod,\n                                     buf_t,\n@@ -182,7 +198,8 @@ mod write {\n                         sess.targ_cfg.target_strs.target_triple,\n                         |buf_t| {\n                             str::as_c_str(output, |buf_o| {\n-                                llvm::LLVMRustWriteOutputFile(\n+                                WriteOutputFile(\n+                                    sess,\n                                     pm.llpm,\n                                     llmod,\n                                     buf_t,\n@@ -201,7 +218,8 @@ mod write {\n                     sess.targ_cfg.target_strs.target_triple,\n                     |buf_t| {\n                         str::as_c_str(output, |buf_o| {\n-                            llvm::LLVMRustWriteOutputFile(\n+                            WriteOutputFile(\n+                                sess,\n                                 pm.llpm,\n                                 llmod,\n                                 buf_t,"}, {"sha": "641a4f5460c154536e31b05ae6890274177ef922", "filename": "src/rustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Flib%2Fllvm.rs?ref=ce46e113c59b5113d2ad2c1787d432697f064f2d", "patch": "@@ -941,7 +941,7 @@ extern mod llvm {\n                                // c_uint to FileType\n                                Output: *c_char, FileType: c_uint,\n                                OptLevel: c_int,\n-                               EnableSegmentedStacks: bool);\n+                               EnableSegmentedStacks: bool) -> bool;\n \n     /** Returns a string describing the last error caused by an LLVMRust*\n         call. */"}, {"sha": "6c19a2997575072d6ebf66b9eef5bf35185458c5", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ce46e113c59b5113d2ad2c1787d432697f064f2d/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=ce46e113c59b5113d2ad2c1787d432697f064f2d", "patch": "@@ -75,7 +75,7 @@ extern \"C\" bool LLVMLinkModules(LLVMModuleRef Dest, LLVMModuleRef Src) {\n   return true;\n }\n \n-extern \"C\" void\n+extern \"C\" bool\n LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n                         LLVMModuleRef M,\n                         const char *triple,\n@@ -107,13 +107,18 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n   std::string ErrorInfo;\n   raw_fd_ostream OS(path, ErrorInfo,\n                     raw_fd_ostream::F_Binary);\n+  if (ErrorInfo != \"\") {\n+    LLVMRustError = ErrorInfo.c_str();\n+    return false;\n+  }\n   formatted_raw_ostream FOS(OS);\n \n   bool foo = Target->addPassesToEmitFile(*PM, FOS, FileType, NoVerify);\n   assert(!foo);\n   (void)foo;\n   PM->run(*unwrap(M));\n   delete Target;\n+  return true;\n }\n \n extern \"C\" LLVMModuleRef LLVMRustParseAssemblyFile(const char *Filename) {"}]}