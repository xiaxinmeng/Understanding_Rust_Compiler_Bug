{"sha": "1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZWU1Y2Q5NTM4MzdkNzdiZjNiY2FhZjlkY2I0Yjg2OWFlMzkwOTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-18T07:51:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-18T07:51:34Z"}, "message": "auto merge of #11018 : sfackler/rust/variant-strip, r=alexcrichton\n\nPreviously, if every variant was private, it would display as a\r\nvariantless enum instead of having the \"some variants stripped\" comment.", "tree": {"sha": "7b3c24776a164ffa9e7300818f8758b071db2d16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b3c24776a164ffa9e7300818f8758b071db2d16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "html_url": "https://github.com/rust-lang/rust/commit/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09b8406638abca96fa6794b0263c1e7459234ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/09b8406638abca96fa6794b0263c1e7459234ecc", "html_url": "https://github.com/rust-lang/rust/commit/09b8406638abca96fa6794b0263c1e7459234ecc"}, {"sha": "758f6e6e6898ec2b908a1d26759793c5c0fd2a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/758f6e6e6898ec2b908a1d26759793c5c0fd2a3f", "html_url": "https://github.com/rust-lang/rust/commit/758f6e6e6898ec2b908a1d26759793c5c0fd2a3f"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "696ea6ec9b8eca0b25629727a1f0f9d718ce94d8", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "patch": "@@ -24,8 +24,7 @@ pub trait DocFolder {\n         let inner = inner;\n         let c = |x| self.fold_item(x);\n         let inner = match inner {\n-            StructItem(i) => {\n-                let mut i = i;\n+            StructItem(mut i) => {\n                 let mut foo = ~[]; swap(&mut foo, &mut i.fields);\n                 let num_fields = foo.len();\n                 i.fields.extend(&mut foo.move_iter().filter_map(|x| self.fold_item(x)));\n@@ -35,15 +34,14 @@ pub trait DocFolder {\n             ModuleItem(i) => {\n                 ModuleItem(self.fold_mod(i))\n             },\n-            EnumItem(i) => {\n-                let mut i = i;\n+            EnumItem(mut i) => {\n                 let mut foo = ~[]; swap(&mut foo, &mut i.variants);\n                 let num_variants = foo.len();\n                 i.variants.extend(&mut foo.move_iter().filter_map(|x| self.fold_item(x)));\n                 i.variants_stripped |= num_variants != i.variants.len();\n                 EnumItem(i)\n             },\n-            TraitItem(i) => {\n+            TraitItem(mut i) => {\n                 fn vtrm<T: DocFolder>(this: &mut T, trm: TraitMethod) -> Option<TraitMethod> {\n                     match trm {\n                         Required(it) => {\n@@ -60,22 +58,19 @@ pub trait DocFolder {\n                         },\n                     }\n                 }\n-                let mut i = i;\n                 let mut foo = ~[]; swap(&mut foo, &mut i.methods);\n                 i.methods.extend(&mut foo.move_iter().filter_map(|x| vtrm(self, x)));\n                 TraitItem(i)\n             },\n-            ImplItem(i) => {\n-                let mut i = i;\n+            ImplItem(mut i) => {\n                 let mut foo = ~[]; swap(&mut foo, &mut i.methods);\n                 i.methods.extend(&mut foo.move_iter().filter_map(|x| self.fold_item(x)));\n                 ImplItem(i)\n             },\n             VariantItem(i) => {\n                 let i2 = i.clone(); // this clone is small\n                 match i.kind {\n-                    StructVariant(j) => {\n-                        let mut j = j;\n+                    StructVariant(mut j) => {\n                         let mut foo = ~[]; swap(&mut foo, &mut j.fields);\n                         let num_fields = foo.len();\n                         j.fields.extend(&mut foo.move_iter().filter_map(c));"}, {"sha": "3d2e03785ed9126a037f833bfd50b96ebb03656b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fee5cd953837d77bf3bcaaf9dcb4b869ae39090/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1fee5cd953837d77bf3bcaaf9dcb4b869ae39090", "patch": "@@ -1202,7 +1202,7 @@ fn item_enum(w: &mut Writer, it: &clean::Item, e: &clean::Enum) {\n            VisSpace(it.visibility),\n            it.name.get_ref().as_slice(),\n            e.generics);\n-    if e.variants.len() == 0 {\n+    if e.variants.len() == 0 && !e.variants_stripped {\n         write!(w, \" \\\\{\\\\}\");\n     } else {\n         write!(w, \" \\\\{\\n\");"}]}