{"sha": "2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzE3MWY5NGNjYTM0N2ZmM2IxZWY0YzNlMTNmMzU2NmIwODdlNzM=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-09-26T23:34:09Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2021-04-23T18:07:15Z"}, "message": "try enabling typeof for fun error messages", "tree": {"sha": "648b1d447730429b09c84ab7c7b1e6482dc0aab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/648b1d447730429b09c84ab7c7b1e6482dc0aab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "html_url": "https://github.com/rust-lang/rust/commit/2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac171f94cca347ff3b1ef4c3e13f3566b087e73/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a352326112e4fd993e339cbd4eabae06d4979b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a352326112e4fd993e339cbd4eabae06d4979b9", "html_url": "https://github.com/rust-lang/rust/commit/9a352326112e4fd993e339cbd4eabae06d4979b9"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "34e06e2d5a01e27c26e374f0745df3ced675020c", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ac171f94cca347ff3b1ef4c3e13f3566b087e73/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac171f94cca347ff3b1ef4c3e13f3566b087e73/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "patch": "@@ -2277,9 +2277,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 let array_ty = tcx.mk_ty(ty::Array(self.ast_ty_to_ty(&ty), length));\n                 self.normalize_ty(ast_ty.span, array_ty)\n             }\n-            hir::TyKind::Typeof(ref _e) => {\n+            hir::TyKind::Typeof(ref e) => {\n                 tcx.sess.emit_err(TypeofReservedKeywordUsed { span: ast_ty.span });\n-                tcx.ty_error()\n+                tcx.type_of(e.hir_id.owner)\n             }\n             hir::TyKind::Infer => {\n                 // Infer also appears as the type of arguments or return"}, {"sha": "74135c49d582a68b0a938d8d1879921cd746f35e", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ac171f94cca347ff3b1ef4c3e13f3566b087e73/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac171f94cca347ff3b1ef4c3e13f3566b087e73/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=2ac171f94cca347ff3b1ef4c3e13f3566b087e73", "patch": "@@ -417,12 +417,16 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n             let parent_node = tcx.hir().get(tcx.hir().get_parent_node(hir_id));\n             match parent_node {\n                 Node::Ty(&Ty { kind: TyKind::Array(_, ref constant), .. })\n-                | Node::Ty(&Ty { kind: TyKind::Typeof(ref constant), .. })\n                 | Node::Expr(&Expr { kind: ExprKind::Repeat(_, ref constant), .. })\n                     if constant.hir_id == hir_id =>\n                 {\n                     tcx.types.usize\n                 }\n+                Node::Ty(&Ty { kind: TyKind::Typeof(ref constant), .. })\n+                    if constant.hir_id == hir_id =>\n+                {\n+                    tcx.typeck(def_id).node_type(constant.hir_id)\n+                }\n \n                 Node::Expr(&Expr { kind: ExprKind::ConstBlock(ref anon_const), .. })\n                     if anon_const.hir_id == hir_id =>"}]}