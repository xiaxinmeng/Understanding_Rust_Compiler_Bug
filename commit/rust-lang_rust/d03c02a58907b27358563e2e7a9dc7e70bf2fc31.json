{"sha": "d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwM2MwMmE1ODkwN2IyNzM1ODU2M2UyZTdhOWRjN2U3MGJmMmZjMzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T05:45:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-25T05:45:27Z"}, "message": "Rollup merge of #70331 - jeremystucki:privacy, r=estebank\n\nIncrease verbosity when using update syntax with private fields\n\nResolves #70323", "tree": {"sha": "142dade52781f6f5e2454fc82590151712962f66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/142dade52781f6f5e2454fc82590151712962f66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeeu/3CRBK7hj4Ov3rIwAAdHIIADkrRzSHFv3QQE1HnwmYOIuL\nRHgX5TPW4jGtciK8cMHjf5/67ycLFjyv+iJWulITt7omeh0NWZByHey3cu//jmLr\nJ9s7nO5Flgx+z3YFk9a5ZptdP92We51+6ojndtCYvJnDAlEXBxZMdANvRKzzeRaX\n3fka43PhHGMyPhoVYP8g3eIdZ1Q+rvrx2Yk3kivbg8w9P4CxaIUAdJ2nDf+e1U7Z\ngMkcIeANYjfQuY/y+Zhnd4kYbPro4zE0ZSNQeBx4hCZOKQRqcJZDWuGdCLNovqGT\nC7KpzZCUrTvD8YXuGhTPqVWZa9+OcuweH+Aee+8HhAcVN+N+lXPITOsFZLzJxmo=\n=ZjiV\n-----END PGP SIGNATURE-----\n", "payload": "tree 142dade52781f6f5e2454fc82590151712962f66\nparent 02046a5d402c789c006d0da7662f800fe3c45faf\nparent 17b97eeb8a7cfd6e83b5ce9b28fc25d55ca86278\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585115127 +0100\ncommitter GitHub <noreply@github.com> 1585115127 +0100\n\nRollup merge of #70331 - jeremystucki:privacy, r=estebank\n\nIncrease verbosity when using update syntax with private fields\n\nResolves #70323\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "html_url": "https://github.com/rust-lang/rust/commit/d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d03c02a58907b27358563e2e7a9dc7e70bf2fc31/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02046a5d402c789c006d0da7662f800fe3c45faf", "url": "https://api.github.com/repos/rust-lang/rust/commits/02046a5d402c789c006d0da7662f800fe3c45faf", "html_url": "https://github.com/rust-lang/rust/commit/02046a5d402c789c006d0da7662f800fe3c45faf"}, {"sha": "17b97eeb8a7cfd6e83b5ce9b28fc25d55ca86278", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b97eeb8a7cfd6e83b5ce9b28fc25d55ca86278", "html_url": "https://github.com/rust-lang/rust/commit/17b97eeb8a7cfd6e83b5ce9b28fc25d55ca86278"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "8734cee366abf0f609d7ad3507be9ce75ead0edf", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d03c02a58907b27358563e2e7a9dc7e70bf2fc31/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03c02a58907b27358563e2e7a9dc7e70bf2fc31/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "patch": "@@ -1023,12 +1023,19 @@ impl<'a, 'tcx> NamePrivacyVisitor<'a, 'tcx> {\n         span: Span,            // span of the field pattern, e.g., `x: 0`\n         def: &'tcx ty::AdtDef, // definition of the struct or enum\n         field: &'tcx ty::FieldDef,\n+        in_update_syntax: bool,\n     ) {\n         // definition of the field\n         let ident = Ident::new(kw::Invalid, use_ctxt);\n         let current_hir = self.current_item;\n         let def_id = self.tcx.adjust_ident_and_get_scope(ident, def.did, current_hir).1;\n         if !def.is_enum() && !field.vis.is_accessible_from(def_id, self.tcx) {\n+            let label = if in_update_syntax {\n+                format!(\"field `{}` is private\", field.ident)\n+            } else {\n+                \"private field\".to_string()\n+            };\n+\n             struct_span_err!(\n                 self.tcx.sess,\n                 span,\n@@ -1038,7 +1045,7 @@ impl<'a, 'tcx> NamePrivacyVisitor<'a, 'tcx> {\n                 def.variant_descr(),\n                 self.tcx.def_path_str(def.did)\n             )\n-            .span_label(span, \"private field\")\n+            .span_label(span, label)\n             .emit();\n         }\n     }\n@@ -1106,13 +1113,13 @@ impl<'a, 'tcx> Visitor<'tcx> for NamePrivacyVisitor<'a, 'tcx> {\n                             Some(field) => (field.ident.span, field.span),\n                             None => (base.span, base.span),\n                         };\n-                        self.check_field(use_ctxt, span, adt, variant_field);\n+                        self.check_field(use_ctxt, span, adt, variant_field, true);\n                     }\n                 } else {\n                     for field in fields {\n                         let use_ctxt = field.ident.span;\n                         let index = self.tcx.field_index(field.hir_id, self.tables);\n-                        self.check_field(use_ctxt, field.span, adt, &variant.fields[index]);\n+                        self.check_field(use_ctxt, field.span, adt, &variant.fields[index], false);\n                     }\n                 }\n             }\n@@ -1131,7 +1138,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NamePrivacyVisitor<'a, 'tcx> {\n                 for field in fields {\n                     let use_ctxt = field.ident.span;\n                     let index = self.tcx.field_index(field.hir_id, self.tables);\n-                    self.check_field(use_ctxt, field.span, adt, &variant.fields[index]);\n+                    self.check_field(use_ctxt, field.span, adt, &variant.fields[index], false);\n                 }\n             }\n             _ => {}"}, {"sha": "2aeffc3e5e4575ac809ac5c15ff4417f59c4fd36", "filename": "src/test/ui/functional-struct-update/functional-struct-update-respects-privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d03c02a58907b27358563e2e7a9dc7e70bf2fc31/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d03c02a58907b27358563e2e7a9dc7e70bf2fc31/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr?ref=d03c02a58907b27358563e2e7a9dc7e70bf2fc31", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `secret_uid` of struct `foo::S` is private\n   --> $DIR/functional-struct-update-respects-privacy.rs:28:49\n    |\n LL |     let s_2 = foo::S { b: format!(\"ess two\"), ..s_1 }; // FRU ...\n-   |                                                 ^^^ private field\n+   |                                                 ^^^ field `secret_uid` is private\n \n error: aborting due to previous error\n "}]}