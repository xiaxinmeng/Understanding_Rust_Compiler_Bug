{"sha": "abf2e00e38ad404d563f03acbcf06b08813fd086", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZjJlMDBlMzhhZDQwNGQ1NjNmMDNhY2JjZjA2YjA4ODEzZmQwODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-04T06:20:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-04T06:20:09Z"}, "message": "Auto merge of #67853 - Centril:rollup-sx5zi9n, r=Centril\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #66913 (Suggest calling method when first argument is `self`)\n - #67531 (no longer promote non-pattern const functions)\n - #67773 (Add a test for #37333)\n - #67786 (Nix reexports from `rustc_span` in `syntax`)\n - #67789 (Cleanup linkchecker whitelist)\n - #67810 (Implement uncommon_codepoints lint.)\n - #67835 (tweak wording of mismatched delimiter errors)\n - #67845 (Also remove const-hack for abs)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "d736ed8757b6dc4704a8ae35214e56f928710be1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d736ed8757b6dc4704a8ae35214e56f928710be1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abf2e00e38ad404d563f03acbcf06b08813fd086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abf2e00e38ad404d563f03acbcf06b08813fd086", "html_url": "https://github.com/rust-lang/rust/commit/abf2e00e38ad404d563f03acbcf06b08813fd086", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abf2e00e38ad404d563f03acbcf06b08813fd086/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e845e691c988303ea54cb9de9639a8577b5a9d6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e845e691c988303ea54cb9de9639a8577b5a9d6b", "html_url": "https://github.com/rust-lang/rust/commit/e845e691c988303ea54cb9de9639a8577b5a9d6b"}, {"sha": "745f771484e4564acf3f77fc56836db4f0b83264", "url": "https://api.github.com/repos/rust-lang/rust/commits/745f771484e4564acf3f77fc56836db4f0b83264", "html_url": "https://github.com/rust-lang/rust/commit/745f771484e4564acf3f77fc56836db4f0b83264"}], "stats": {"total": 1295, "additions": 758, "deletions": 537}, "files": [{"sha": "45a1a169be446528c4d1e2dbdd11bdf6ac0fa6ad", "filename": "Cargo.lock", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3642,6 +3642,7 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"syntax\",\n+ \"unicode-security\",\n ]\n \n [[package]]\n@@ -4940,6 +4941,21 @@ dependencies = [\n  \"smallvec 1.0.0\",\n ]\n \n+[[package]]\n+name = \"unicode-script\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5b2c5c29e805da6817f5af6a627d65adb045cebf05cccd5a3493d6109454391c\"\n+\n+[[package]]\n+name = \"unicode-security\"\n+version = \"0.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c49d35967fa037b881acc34ef717c38c4b5560eba10e3685271b3f530bb19634\"\n+dependencies = [\n+ \"unicode-script\",\n+]\n+\n [[package]]\n name = \"unicode-segmentation\"\n version = \"1.6.0\""}, {"sha": "605ab98219f91473330cf5f29545a9264761166b", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1997,27 +1997,15 @@ $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n+            #[allow_internal_unstable(const_if_match)]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n             pub const fn abs(self) -> Self {\n-                // Note that the #[inline] above means that the overflow\n-                // semantics of the subtraction depend on the crate we're being\n-                // inlined into.\n-\n-                // sign is -1 (all ones) for negative numbers, 0 otherwise.\n-                let sign = self >> ($BITS - 1);\n-                // For positive self, sign == 0 so the expression is simply\n-                // (self ^ 0) - 0 == self == abs(self).\n-                //\n-                // For negative self, self ^ sign == self ^ all_ones.\n-                // But all_ones ^ self == all_ones - self == -1 - self.\n-                // So for negative numbers, (self ^ sign) - sign is\n-                // (-1 - self) - -1 == -self == abs(self).\n-                //\n-                // The subtraction overflows when self is min_value(), because\n-                // (-1 - min_value()) - -1 is max_value() - -1 which overflows.\n-                // This is exactly when we want self.abs() to overflow.\n-                (self ^ sign) - sign\n+                if self.is_negative() {\n+                    -self\n+                } else {\n+                    self\n+                }\n             }\n         }\n "}, {"sha": "2ece2150e6bedceac1d934f59d9d199ed8185dbe", "filename": "src/libcore/time.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -172,7 +172,6 @@ impl Duration {\n     /// ```\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n     #[inline]\n-    #[rustc_promotable]\n     #[rustc_const_stable(feature = \"duration_consts\", since = \"1.32.0\")]\n     pub const fn from_millis(millis: u64) -> Duration {\n         Duration {\n@@ -195,7 +194,6 @@ impl Duration {\n     /// ```\n     #[stable(feature = \"duration_from_micros\", since = \"1.27.0\")]\n     #[inline]\n-    #[rustc_promotable]\n     #[rustc_const_stable(feature = \"duration_consts\", since = \"1.32.0\")]\n     pub const fn from_micros(micros: u64) -> Duration {\n         Duration {\n@@ -218,7 +216,6 @@ impl Duration {\n     /// ```\n     #[stable(feature = \"duration_extras\", since = \"1.27.0\")]\n     #[inline]\n-    #[rustc_promotable]\n     #[rustc_const_stable(feature = \"duration_consts\", since = \"1.32.0\")]\n     pub const fn from_nanos(nanos: u64) -> Duration {\n         Duration {"}, {"sha": "c576c5af31e6abcaf7315eced705cf87519406ec", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -94,7 +94,7 @@ macro_rules! arena_types {\n                     >\n                 >,\n             [few] diagnostic_items: rustc_data_structures::fx::FxHashMap<\n-                syntax::symbol::Symbol,\n+                rustc_span::symbol::Symbol,\n                 rustc::hir::def_id::DefId,\n             >,\n             [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n@@ -105,7 +105,7 @@ macro_rules! arena_types {\n             [few] privacy_access_levels: rustc::middle::privacy::AccessLevels,\n             [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n                 String,\n-                Option<syntax::symbol::Symbol>\n+                Option<rustc_span::symbol::Symbol>\n             >,\n             [few] wasm_import_module_map: rustc_data_structures::fx::FxHashMap<\n                 rustc::hir::def_id::DefId,"}, {"sha": "a7d7dddf580da94b3628c49a10c399672f80fbbf", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,11 +12,12 @@ use crate::lint::builtin::UNUSED_ATTRIBUTES;\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n \n+use rustc_error_codes::*;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use std::fmt::{self, Display};\n-use syntax::{attr, symbol::sym};\n+use syntax::attr;\n \n-use rustc_error_codes::*;\n+use std::fmt::{self, Display};\n \n #[derive(Copy, Clone, PartialEq)]\n pub(crate) enum MethodKind {"}, {"sha": "00026d6969bb5ba928fa09b95693e33d389c9a7a", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,10 +11,10 @@ use crate::session::Session;\n use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::Span;\n use std::iter::repeat;\n use syntax::ast::NodeId;\n-use syntax::source_map::SourceMap;\n \n use crate::ich::StableHashingContext;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "9ea10d0c515917456fcb5380a2cac974b8640292", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,10 +17,10 @@ use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::Spanned;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, Name, NodeId};\n-use syntax::source_map::Spanned;\n \n pub mod blocks;\n mod collector;"}, {"sha": "c457fc657a15bc2a510d163bc2effad3439560a4", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,12 +1,12 @@\n+use rustc_span::source_map::{SourceMap, Spanned};\n+use rustc_span::symbol::kw;\n use rustc_span::{self, BytePos, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::print::pp::Breaks::{Consistent, Inconsistent};\n use syntax::print::pp::{self, Breaks};\n use syntax::print::pprust::{self, Comments, PrintState};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{SourceMap, Spanned};\n-use syntax::symbol::kw;\n use syntax::util::parser::{self, AssocOp, Fixity};\n \n use crate::hir;"}, {"sha": "44230fa0a44dc9b66181dbef47ddecd1bcd2dc25", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,10 +9,10 @@ use crate::ty::{fast_reject, TyCtxt};\n \n use std::cmp::Ord;\n \n+use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, SourceFile};\n use syntax::ast;\n-use syntax::source_map::SourceMap;\n-use syntax::symbol::Symbol;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};"}, {"sha": "2c4618dcd42cfbdf98fac87c345cfddbdbc848c4", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,8 +4,8 @@ pub use self::hcx::{\n     hash_stable_trait_impls, NodeIdHashingMode, StableHashingContext, StableHashingContextProvider,\n };\n crate use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_span::symbol::{sym, Symbol};\n pub use rustc_span::CachingSourceMapView;\n-use syntax::symbol::{sym, Symbol};\n \n mod hcx;\n "}, {"sha": "a588d3d028a2cfe848a6a39b7f6572fde20510f1", "filename": "src/librustc/infer/canonical/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -30,9 +30,9 @@ use crate::ty::{self, BoundVar, List, Region, TyCtxt};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use rustc_serialize::UseSpecializedDecodable;\n+use rustc_span::source_map::Span;\n use smallvec::SmallVec;\n use std::ops::Index;\n-use syntax::source_map::Span;\n \n mod canonicalizer;\n "}, {"sha": "889b7b4db3305aee00b543acda71857acf0b63be", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,10 +6,10 @@ use crate::infer::InferCtxt;\n use crate::ty::print::Print;\n use crate::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use errors::{Applicability, DiagnosticBuilder};\n+use rustc_span::source_map::DesugaringKind;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use std::borrow::Cow;\n-use syntax::source_map::DesugaringKind;\n-use syntax::symbol::kw;\n \n use rustc_error_codes::*;\n "}, {"sha": "5da65a3019395f297455536c1b14335498a9d4be", "filename": "src/librustc/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,7 +4,7 @@ use crate::infer::InferCtxt;\n use crate::ty::{self, TyCtxt};\n use crate::util::common::ErrorReported;\n use errors::DiagnosticBuilder;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n mod different_lifetimes;\n mod find_anon_type;"}, {"sha": "27bcb63fe15fea0368b7cbdca969cd7074fbc339", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use crate::hir::def_id::DefId;\n use crate::ty::{self, Ty, TyVid};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n-use syntax::symbol::Symbol;\n \n use rustc_data_structures::snapshot_vec as sv;\n use rustc_data_structures::unify as ut;"}, {"sha": "c5ec0ba73e49db186af857602c4f53af88c0f99d", "filename": "src/librustc/infer/unify_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Funify_key.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use crate::ty::{self, FloatVarValue, InferConst, IntVarValue, Ty, TyCtxt};\n use rustc_data_structures::unify::InPlace;\n use rustc_data_structures::unify::{EqUnifyValue, NoError, UnificationTable, UnifyKey, UnifyValue};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n-use syntax::symbol::Symbol;\n \n use std::cell::RefMut;\n use std::cmp;"}, {"sha": "847c61033daf4196b2bf03dadd1719fba5f2000c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,11 +9,11 @@ use crate::middle::stability;\n use crate::session::Session;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc_session::declare_lint;\n+use rustc_span::edition::Edition;\n+use rustc_span::source_map::Span;\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n use syntax::early_buffered_lints::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n-use syntax::edition::Edition;\n-use syntax::source_map::Span;\n-use syntax::symbol::Symbol;\n \n declare_lint! {\n     pub EXCEEDING_BITSHIFTS,"}, {"sha": "f7dfbab92e613cbab16d894b7187b78840b7ead0", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,8 +8,8 @@ use crate::lint::{\n use errors::Applicability;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{Ident, Item, ItemKind};\n-use syntax::symbol::{sym, Symbol};\n \n declare_tool_lint! {\n     pub rustc::DEFAULT_HASH_TYPES,"}, {"sha": "87847cdf8c78d9782f6a537e5d2758e667477b78", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,12 +9,12 @@ use crate::session::Session;\n use crate::util::nodemap::FxHashMap;\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_span::source_map::MultiSpan;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate;\n use syntax::print::pprust;\n-use syntax::source_map::MultiSpan;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "9769835a67439e05d72929151124875b02140ab9", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -33,10 +33,10 @@ use crate::ty::TyCtxt;\n use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n-use syntax::symbol::Symbol;\n \n pub use crate::lint::context::{\n     check_ast_crate, check_crate, late_lint_mod, BufferedEarlyLint, CheckLintNameResult,"}, {"sha": "be7603f258a192a8194c0faf75cb5c457dd9cc5c", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,13 +12,13 @@ use rustc_data_structures::svh::Svh;\n \n use rustc_data_structures::sync::{self, MetadataRef};\n use rustc_macros::HashStable;\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use rustc_target::spec::Target;\n use std::any::Any;\n use std::path::{Path, PathBuf};\n use syntax::ast;\n use syntax::expand::allocator::AllocatorKind;\n-use syntax::symbol::Symbol;\n \n pub use self::NativeLibraryKind::*;\n pub use rustc_session::utils::NativeLibraryKind;"}, {"sha": "98e48ca0e4d94e7957fc8dd6b6c94364544f8c25", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -19,9 +19,9 @@ use crate::util::nodemap::FxHashMap;\n use crate::hir;\n use crate::hir::itemlikevisit::ItemLikeVisitor;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "96b14eae8ea0e74220aa5b2dd08d23b7deabfc1f", "filename": "src/librustc/middle/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,7 +5,7 @@ pub mod free_region;\n pub mod lang_items;\n pub mod lib_features {\n     use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-    use syntax::symbol::Symbol;\n+    use rustc_span::symbol::Symbol;\n \n     #[derive(HashStable)]\n     pub struct LibFeatures {"}, {"sha": "b33cde8e2af20fabc2339c6f3ef64d634e688007", "filename": "src/librustc/middle/recursion_limit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,8 +6,8 @@\n // just peeks and looks for that attribute.\n \n use crate::session::Session;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_data_structures::sync::Once;\n "}, {"sha": "a6a49864a95641cf168e0fb0513802343858804e", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -13,12 +13,12 @@ use crate::ty::{self, TyCtxt};\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n use errors::DiagnosticBuilder;\n use rustc_feature::GateIssue;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr::{self, ConstStability, Deprecation, RustcDeprecation, Stability};\n use syntax::errors::Applicability;\n use syntax::feature_gate::feature_err_issue;\n-use syntax::symbol::{sym, Symbol};\n \n use std::num::NonZeroU32;\n "}, {"sha": "bdf34e8d765404e928206ab03ce1f21b3a5e0b1c", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,10 +9,10 @@ use crate::hir::intravisit;\n use crate::hir::intravisit::{NestedVisitorMap, Visitor};\n use crate::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::PanicStrategy;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "dddc3cf9f5b707c4b0e6c87980eb0d3e57d2b93d", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,10 +11,10 @@ use backtrace::Backtrace;\n use errors::DiagnosticBuilder;\n use hir::GeneratorKind;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Pos, Span};\n use rustc_target::spec::abi::Abi;\n use std::{any::Any, env, fmt};\n-use syntax::symbol::Symbol;\n \n use rustc_error_codes::*;\n "}, {"sha": "a293fd128bdb08bbe13dfa93f02e52373962e6b4", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -27,6 +27,7 @@ use rustc_index::bit_set::BitMatrix;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n use rustc_serialize::{Decodable, Encodable};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use smallvec::SmallVec;\n use std::borrow::Cow;\n@@ -36,7 +37,6 @@ use std::slice;\n use std::{iter, mem, option, u32};\n pub use syntax::ast::Mutability;\n use syntax::ast::Name;\n-use syntax::symbol::Symbol;\n \n pub use crate::mir::cache::{BodyAndCache, ReadOnlyBodyAndCache};\n pub use crate::mir::interpret::AssertMessage;"}, {"sha": "bec98221e5af3a2a6412dc2c2ae5296b39f4feca", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,11 +8,11 @@ use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt\n use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::base_n;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_span::source_map::Span;\n+use rustc_span::symbol::Symbol;\n use std::fmt;\n use std::hash::Hash;\n use syntax::attr::InlineAttr;\n-use syntax::source_map::Span;\n-use syntax::symbol::Symbol;\n \n /// Describes how a monomorphization will be instantiated in object files.\n #[derive(PartialEq)]"}, {"sha": "16bf69f9ad04c2944f9c80c6580560a8113e82e0", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,8 +12,8 @@ use crate::traits::{self, Normalized, Obligation, ObligationCause, SelectionCont\n use crate::ty::fold::TypeFoldable;\n use crate::ty::subst::Subst;\n use crate::ty::{self, Ty, TyCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n-use syntax::symbol::sym;\n \n /// Whether we do the orphan check relative to this crate or\n /// to some remote crate."}, {"sha": "dbc872a51bfbe6e57ae192ee89864316c0751778", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -26,10 +26,10 @@ use crate::util::nodemap::{FxHashMap, FxHashSet};\n use errors::{pluralize, Applicability, DiagnosticBuilder, Style};\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{ExpnKind, MultiSpan, Span, DUMMY_SP};\n use std::fmt;\n use syntax::ast;\n-use syntax::symbol::{kw, sym};\n \n use rustc_error_codes::*;\n "}, {"sha": "30ffdc23d989326c8f3189103e07e6f7d5eb4b77", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -16,11 +16,11 @@ use crate::lint;\n use crate::traits::{self, Obligation, ObligationCause};\n use crate::ty::subst::{InternalSubsts, Subst};\n use crate::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use std::borrow::Cow;\n use std::iter::{self};\n use syntax::ast::{self};\n-use syntax::symbol::Symbol;\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n pub enum ObjectSafetyViolation {"}, {"sha": "9097cbf0c221a54946ae0a8873c643690d81465b", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,10 +5,10 @@ use crate::ty::{self, GenericParamDefKind, TyCtxt};\n use crate::util::common::ErrorReported;\n use crate::util::nodemap::FxHashMap;\n \n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{MetaItem, NestedMetaItem};\n use syntax::attr;\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "a0a5ca04a8e258639769913f374ccf8c223d64a7", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -21,9 +21,9 @@ use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt};\n use crate::util::common::FN_OUTPUT_NAME;\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n use rustc_macros::HashStable;\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n use syntax::ast::Ident;\n-use syntax::symbol::sym;\n \n /// Depending on the stage of compilation, we want projection to be\n /// more or less conservative."}, {"sha": "87f7f674dab100c0178d542b9a1dce12daef68d5", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,8 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferOk;\n use crate::ty::subst::GenericArg;\n use crate::ty::{self, Ty, TyCtxt};\n+use rustc_span::source_map::Span;\n use std::iter::FromIterator;\n-use syntax::source_map::Span;\n \n use rustc_error_codes::*;\n "}, {"sha": "6a0bc167c078e38f73d1073d5be027c662d2cd32", "filename": "src/librustc/traits/query/outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,7 +4,7 @@ use crate::infer::InferCtxt;\n use crate::traits::query::NoSolution;\n use crate::traits::{FulfillmentContext, ObligationCause, TraitEngine, TraitEngineExt};\n use crate::ty::{self, Ty};\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::ich::StableHashingContext;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "c1c9030b8880532b1213d512f8e0a4a408b3e4dc", "filename": "src/librustc/traits/query/type_op/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,8 +5,8 @@ use std::fmt;\n use crate::infer::canonical::query_response;\n use crate::infer::canonical::QueryRegionConstraints;\n use crate::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc_span::source_map::DUMMY_SP;\n use std::rc::Rc;\n-use syntax::source_map::DUMMY_SP;\n \n pub struct CustomTypeOp<F, G> {\n     closure: F,"}, {"sha": "7e412eb03038ad5b861dede954d5aab53d60c672", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -42,14 +42,14 @@ use crate::hir;\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lock;\n use rustc_index::bit_set::GrowableBitSet;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n use std::cell::{Cell, RefCell};\n use std::cmp;\n use std::fmt::{self, Display};\n use std::iter;\n use std::rc::Rc;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n pub struct SelectionContext<'cx, 'tcx> {\n     infcx: &'cx InferCtxt<'cx, 'tcx>,"}, {"sha": "58204a460d7df02fc32a254abb561c1222a7a044", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,8 @@ use crate::traits::project::Normalized;\n use crate::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use crate::ty::{self, Lift, Ty, TyCtxt};\n use chalk_engine;\n+use rustc_span::symbol::Symbol;\n use smallvec::SmallVec;\n-use syntax::symbol::Symbol;\n \n use std::collections::{BTreeMap, BTreeSet};\n use std::fmt;"}, {"sha": "c26d68de181b69c4555e7155dbcbed8ee1e07edb", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -59,6 +59,8 @@ use rustc_data_structures::stable_hasher::{\n use rustc_data_structures::sync::{Lock, Lrc, WorkerLocal};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n+use rustc_span::source_map::MultiSpan;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n@@ -75,8 +77,6 @@ use std::sync::Arc;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n-use syntax::source_map::MultiSpan;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub struct AllArenas {\n     pub interner: SyncDroplessArena,"}, {"sha": "8dafe407ed9c23860a6db599f04cdd7b04de7ddc", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,10 +11,10 @@ use crate::ty::{self, DefIdTree, ParamConst, Ty, TyCtxt, TypeFoldable};\n \n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr::{SignedInt, UnsignedInt};\n-use syntax::symbol::{kw, Symbol};\n \n use std::cell::Cell;\n use std::collections::BTreeMap;"}, {"sha": "1907e6c82c62a936e97033ac3228afaea49c5d25", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -47,14 +47,14 @@ use rustc_data_structures::sync::Lrc;\n use rustc_index::vec::IndexVec;\n use rustc_target::spec::PanicStrategy;\n \n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use std::any::type_name;\n use std::borrow::Cow;\n use std::ops::Deref;\n use std::sync::Arc;\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n \n #[macro_use]\n mod plumbing;"}, {"sha": "c29c68d2148af38c2f0333314304e96eb2496383", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -21,10 +21,10 @@ use rustc_serialize::{\n     UseSpecializedDecodable, UseSpecializedEncodable,\n };\n use rustc_span::hygiene::{ExpnId, SyntaxContext};\n+use rustc_span::source_map::{SourceMap, StableSourceFileId};\n use rustc_span::{BytePos, SourceFile, Span, DUMMY_SP};\n use std::mem;\n use syntax::ast::{Ident, NodeId};\n-use syntax::source_map::{SourceMap, StableSourceFileId};\n \n const TAG_FILE_FOOTER: u128 = 0xC0FFEE_C0FFEE_C0FFEE_C0FFEE_C0FFEE;\n "}, {"sha": "e56955b0e44417ad31f59b5fd4bbf6426c9548f6", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -20,12 +20,12 @@ use rustc_data_structures::fx::{FxHashMap, FxHasher};\n use rustc_data_structures::sharded::Sharded;\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::Span;\n use std::collections::hash_map::Entry;\n use std::hash::{Hash, Hasher};\n use std::mem;\n use std::ptr;\n-use syntax::source_map::DUMMY_SP;\n \n use rustc_error_codes::*;\n "}, {"sha": "900a91fe5cf5975c242db513765542f78ef4001d", "filename": "src/librustc/ty/query/values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use crate::ty::util::NeedsDrop;\n use crate::ty::{self, AdtSizedConstraint, Ty, TyCtxt};\n \n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n pub(super) trait Value<'tcx>: Sized {\n     fn from_cycle_error(tcx: TyCtxt<'tcx>) -> Self;"}, {"sha": "346622530bd5a661653d3939f68845447e836d0e", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -20,14 +20,14 @@ use crate::util::captures::Captures;\n use polonius_engine::Atom;\n use rustc_index::vec::Idx;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n use std::borrow::Cow;\n use std::cmp::Ordering;\n use std::marker::PhantomData;\n use std::ops::Range;\n use syntax::ast::{self, Ident};\n-use syntax::symbol::{kw, Symbol};\n \n #[derive(\n     Clone,"}, {"sha": "4969e7211cecde280a8e50b614523c4c3b83ce5a", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,9 +5,9 @@ use crate::middle::lang_items;\n use crate::traits::{self, AssocTypeBoundData};\n use crate::ty::subst::SubstsRef;\n use crate::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::{kw, Ident};\n use rustc_span::Span;\n use std::iter::once;\n-use syntax::symbol::{kw, Ident};\n \n /// Returns the set of obligations needed to make `ty` well-formed.\n /// If `ty` contains unresolved inference variables, this may include"}, {"sha": "011b70c04d51b033519cfc3b5a2d3722cb81cade", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -7,7 +7,7 @@ use std::fmt::Debug;\n use std::time::{Duration, Instant};\n \n use crate::session::Session;\n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n #[cfg(test)]\n mod tests;"}, {"sha": "a136a07a40cbef371a97322c077afe28455d9866", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,10 +5,10 @@ use State::*;\n use errors::{DiagnosticBuilder, PResult};\n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, AsmDialect};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{self, TokenStream};\n use syntax::{span_err, struct_span_err};"}, {"sha": "9043db4742bf7c842954275bf46d3753f8e7813f", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,11 +2,11 @@ use errors::{Applicability, DiagnosticBuilder};\n \n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, *};\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token::{self, TokenKind};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};\n "}, {"sha": "ed65611da61e1397042991fef4c5e1d5bdae6a1b", "filename": "src/librustc_builtin_macros/concat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n use rustc_expand::base::{self, DummyResult};\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n-use syntax::symbol::Symbol;\n use syntax::tokenstream::TokenStream;\n \n use std::string::String;"}, {"sha": "0df5ef3c9d8822526c38711d08bfe6e50de8b4f1", "filename": "src/librustc_builtin_macros/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub fn expand_deriving_clone(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "cb8933c14756f8ac289bcdeb6669605caa71a253", "filename": "src/librustc_builtin_macros/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, Ident, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn expand_deriving_eq(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "fa4309838067166e83586c9e81ef59483ae132ec", "filename": "src/librustc_builtin_macros/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_ord(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "dc2912895a8e1a2896b4971ca8f74ff60dd0f082", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_partial_eq(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "a54d8c56f758d5965ceca8c2f0a92c0c051600ae", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,10 +5,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std, pathvec_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn expand_deriving_partial_ord(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "f68fddee71be52c8745e3f614b818f847366f2f9", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,11 +3,11 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident};\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_debug(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "3b20ebbbab45b5191d17d536a6dc1fc5993b4cbd", "filename": "src/librustc_builtin_macros/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,11 +5,11 @@ use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast;\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n \n pub fn expand_deriving_rustc_decodable(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "f40d6d7e424d6b5e38493e59bd266c0f5e290386", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,11 +3,11 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, DummyResult, ExtCtxt};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::span_err;\n-use syntax::symbol::{kw, sym};\n \n use rustc_error_codes::*;\n "}, {"sha": "b330f00939fcadb5555ef26a84eed1d8001f8185", "filename": "src/librustc_builtin_macros/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -90,10 +90,10 @@ use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast::{Expr, ExprKind, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n \n pub fn expand_deriving_rustc_encodable(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "7092483843f70df40c8b7d517ac5649e7d392f56", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -182,14 +182,14 @@ use std::iter;\n use std::vec;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::source_map::respan;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{GenericArg, GenericParamKind, VariantData};\n use syntax::attr;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::map_in_place::MapInPlace;\n \n use ty::{LifetimeBounds, Path, Ptr, PtrTy, Self_, Ty};"}, {"sha": "d2df64cac4869cdc82304d7c8ea3af4d5de0707e", "filename": "src/librustc_builtin_macros/deriving/generic/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,11 +5,11 @@ pub use PtrTy::*;\n pub use Ty::*;\n \n use rustc_expand::base::ExtCtxt;\n+use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, GenericParamKind, Generics, Ident, SelfKind};\n use syntax::ptr::P;\n-use syntax::source_map::{respan, DUMMY_SP};\n \n /// The types of pointers\n #[derive(Clone)]"}, {"sha": "e620711aa2bd4b201ed3efd3497059169c84f0ba", "filename": "src/librustc_builtin_macros/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{self, path_std, pathvec_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_hash(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "4d83a6635ab17ce4f71f104dddfac76e613345db", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n //! The compiler code necessary to implement the `#[derive]` extensions.\n \n use rustc_expand::base::{Annotatable, ExtCtxt, MultiItemModifier};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, ItemKind, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n macro path_local($x:ident) {\n     generic::ty::Path::new_local(stringify!($x))"}, {"sha": "896bb8ca05392a74178a9d20b421cfddffed128e", "filename": "src/librustc_builtin_macros/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fenv.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,9 +4,9 @@\n //\n \n use rustc_expand::base::{self, *};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, GenericArg, Ident};\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::TokenStream;\n \n use std::env;"}, {"sha": "e2662faab6cb5a31dac8468b6ca990f3bad863f7", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,10 +8,10 @@ use errors::Applicability;\n use errors::DiagnosticBuilder;\n \n use rustc_expand::base::{self, *};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast;\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "957d34b7d89836edf48fbbb1d56cbd7f704545b8", "filename": "src/librustc_builtin_macros/global_allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,12 +1,12 @@\n use crate::util::check_builtin_macro_attribute;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Attribute, Expr, FnHeader, FnSig, Generics, Ident, Param};\n use syntax::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafety};\n use syntax::expand::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub fn expand(\n     ecx: &mut ExtCtxt<'_>,"}, {"sha": "2bcd76e669971f5b4369759b4de1f6ecb3cc0968", "filename": "src/librustc_builtin_macros/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,11 +10,11 @@\n use errors::DiagnosticBuilder;\n \n use rustc_expand::base::{self, *};\n+use rustc_span::source_map::respan;\n use rustc_span::Span;\n use smallvec::smallvec;\n use syntax::ast;\n use syntax::ptr::P;\n-use syntax::source_map::respan;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "c735ba0df3b313d3c7993d4fd96a73b72f125277", "filename": "src/librustc_builtin_macros/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,9 +15,9 @@ use crate::deriving::*;\n \n use rustc_expand::base::{MacroExpanderFn, Resolver, SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::BangProcMacro;\n+use rustc_span::edition::Edition;\n+use rustc_span::symbol::sym;\n use syntax::ast::Ident;\n-use syntax::edition::Edition;\n-use syntax::symbol::sym;\n \n mod asm;\n mod assert;"}, {"sha": "44968d6df96934654513d20f3d6b48f52781fe94", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,6 +3,7 @@ use std::mem;\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_span::hygiene::AstPass;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use smallvec::smallvec;\n use syntax::ast::{self, Ident};\n@@ -11,7 +12,6 @@ use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n \n struct ProcMacroDerive {"}, {"sha": "19a766de1f47f59b0e12d089bfefbcff5aa94294", "filename": "src/librustc_builtin_macros/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fsource_util.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n use rustc_expand::base::{self, *};\n use rustc_expand::panictry;\n use rustc_parse::{self, new_sub_parser_from_file, parser::Parser, DirectoryOwnership};\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n use syntax::early_buffered_lints::INCOMPLETE_INCLUDE;\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "0c982b21eee2c9076a14308a54871d81d4286dc1", "filename": "src/librustc_builtin_macros/standard_library_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::ExpansionConfig;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::AstPass;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n-use syntax::edition::Edition;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::{ast, attr};\n \n pub fn inject("}, {"sha": "0eee212108e8521f48beaea494e845f21fb52c68", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,12 +3,12 @@\n use crate::util::check_builtin_macro_attribute;\n \n use rustc_expand::base::*;\n+use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::source_map::respan;\n-use syntax::symbol::{sym, Symbol};\n \n use std::iter;\n "}, {"sha": "eddf492720336db2eee9662833a34512a4fb73aa", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,6 +5,8 @@ use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_feature::Features;\n use rustc_span::hygiene::{AstPass, SyntaxContext, Transparency};\n+use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::PanicStrategy;\n use smallvec::{smallvec, SmallVec};\n@@ -14,8 +16,6 @@ use syntax::entry::{self, EntryPointType};\n use syntax::mut_visit::{ExpectOne, *};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n-use syntax::symbol::{sym, Symbol};\n \n use std::{iter, mem};\n "}, {"sha": "c0b373f1370c15f77fd4e4bd0a4338bb6d2ea251", "filename": "src/librustc_builtin_macros/trace_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n use rustc_expand::base::{self, ExtCtxt};\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n-use syntax::symbol::kw;\n use syntax::tokenstream::{TokenStream, TokenTree};\n \n pub fn expand_trace_macros("}, {"sha": "455b7086212baf862022695184d64bf824cfc1d9", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,7 +12,7 @@ use crate::llvm::{self, ArchiveKind};\n use rustc::session::Session;\n use rustc_codegen_ssa::back::archive::{find_library, ArchiveBuilder};\n use rustc_codegen_ssa::{looks_like_rust_object_file, METADATA_FILENAME, RLIB_BYTECODE_EXTENSION};\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n struct ArchiveConfig<'a> {\n     pub sess: &'a Session,"}, {"sha": "76f6eeb3f79070c8bf5d386a4280670d5b5dd598", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -18,8 +18,8 @@ use rustc_codegen_ssa::mir::place::PlaceRef;\n \n use libc::{c_char, c_uint};\n \n+use rustc_span::symbol::Symbol;\n use syntax::ast::Mutability;\n-use syntax::symbol::Symbol;\n \n pub use crate::context::CodegenCx;\n "}, {"sha": "318037b5bd81da1faf96876f724052df0a5bb5cc", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,9 +14,9 @@ use rustc::mir::mono::MonoItem;\n use rustc::ty::{self, Instance, Ty};\n use rustc::{bug, span_bug};\n use rustc_codegen_ssa::traits::*;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::abi::HasDataLayout;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc::ty::layout::{self, Align, LayoutOf, Size};\n "}, {"sha": "c0a5e0089a95584e160362904b6a79d55cb15f72", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -27,13 +27,13 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_target::spec::{HasTargetSpec, Target};\n \n use crate::abi::Abi;\n+use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_span::symbol::Symbol;\n use std::cell::{Cell, RefCell};\n use std::ffi::CStr;\n use std::iter;\n use std::str;\n use std::sync::Arc;\n-use syntax::source_map::{Span, DUMMY_SP};\n-use syntax::symbol::Symbol;\n \n /// There is one `CodegenCx` per compilation unit. Each one has its own LLVM\n /// `llvm::Context` so that several compilation units may be optimized in parallel."}, {"sha": "eae461a575f7f9a61c9abb8e2e5e2086a48be8be", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,8 +9,8 @@ use rustc::bug;\n use rustc::session::config::DebugInfo;\n use rustc_codegen_ssa::traits::*;\n \n+use rustc_span::symbol::sym;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n /// Inserts a side-effect free instruction sequence that makes sure that the\n /// .debug_gdb_scripts global is referenced, so it isn't removed by the linker."}, {"sha": "61ccd7820109a4a1c916eec5f81e5c9f46f1a7a1", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -42,10 +42,10 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_fs_util::path_to_c_string;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::symbol::{Interner, Symbol};\n use rustc_span::{self, FileName, Span};\n use rustc_target::abi::HasDataLayout;\n use syntax::ast;\n-use syntax::symbol::{Interner, Symbol};\n \n use libc::{c_longlong, c_uint};\n use std::collections::hash_map::Entry;"}, {"sha": "16ae3c95030525c87f9522202dbb72f88813b87f", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -37,10 +37,10 @@ use std::ffi::CString;\n \n use rustc::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_codegen_ssa::traits::*;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{self, BytePos, Pos, Span};\n use smallvec::SmallVec;\n use syntax::ast;\n-use syntax::symbol::Symbol;\n \n mod create_scope_map;\n pub mod gdb;"}, {"sha": "b3c58b2402065fdf3ef6afaf1d28d22afe8306a4", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,10 +6,10 @@ use rustc::session::config::PrintRequest;\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::symbol::sym;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::{MergeFunctions, PanicStrategy};\n use std::ffi::CString;\n-use syntax::symbol::sym;\n \n use std::slice;\n use std::str;"}, {"sha": "a357c350287fbc1ae19b4e72247e75b4f6c805d9", "filename": "src/librustc_codegen_ssa/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,5 +1,5 @@\n use rustc::session::Session;\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n use std::io;\n use std::path::{Path, PathBuf};"}, {"sha": "30b055b3131499961da4db1de4f3a797ebb3e514", "filename": "src/librustc_codegen_ssa/back/command.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -7,8 +7,8 @@ use std::io;\n use std::mem;\n use std::process::{self, Output};\n \n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::LldFlavor;\n-use syntax::symbol::Symbol;\n \n #[derive(Clone)]\n pub struct Command {"}, {"sha": "8cdda5630ea5e6435208601b05b0b43be40e0c1f", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,8 +11,8 @@ use rustc::session::{filesearch, Session};\n use rustc::util::common::{time, time_ext};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::{LinkerFlavor, PanicStrategy, RelroLevel};\n-use syntax::symbol::Symbol;\n \n use super::archive::ArchiveBuilder;\n use super::command::Command;"}, {"sha": "fb9ba2a1558f3a15a825200d507f16655640e791", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,8 +15,8 @@ use rustc::session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, O\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_serialize::{json, Encoder};\n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::{LinkerFlavor, LldFlavor};\n-use syntax::symbol::Symbol;\n \n /// For all the linkers we support, and information they might\n /// need out of the shared crate context before we get rid of it."}, {"sha": "a1d4c0c820bc6dd389c1c38015d3a4676d79de28", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,27 +1,26 @@\n+use super::operand::OperandRef;\n+use super::operand::OperandValue::{Immediate, Pair, Ref};\n+use super::place::PlaceRef;\n+use super::{FunctionCx, LocalRef};\n+\n use crate::base;\n use crate::common::{self, IntPredicate};\n use crate::meth;\n+use crate::traits::*;\n use crate::MemFlags;\n+\n use rustc::middle::lang_items;\n use rustc::mir::interpret::PanicInfo;\n use rustc::mir::{self, PlaceBase, Static, StaticKind};\n use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n use rustc::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_index::vec::Idx;\n+use rustc_span::{source_map::Span, symbol::Symbol};\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};\n use rustc_target::spec::abi::Abi;\n \n-use crate::traits::*;\n-\n use std::borrow::Cow;\n \n-use syntax::{source_map::Span, symbol::Symbol};\n-\n-use super::operand::OperandRef;\n-use super::operand::OperandValue::{Immediate, Pair, Ref};\n-use super::place::PlaceRef;\n-use super::{FunctionCx, LocalRef};\n-\n /// Used by `FunctionCx::codegen_terminator` for emitting common patterns\n /// e.g., creating a basic block, calling a function, etc.\n struct TerminatorCodegenHelper<'tcx> {"}, {"sha": "f508ed90de42df1ad2bc216fb1ffd3a4529b5590", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::interpret::ErrorHandled;\n use rustc::ty::layout::{self, HasTyCtxt};\n use rustc::ty::{self, Ty};\n use rustc_index::vec::Idx;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use super::FunctionCx;\n "}, {"sha": "4b4a2f4b26d424d3afc23c1bdc4b9730b802a62f", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,8 +6,8 @@ use rustc::ty::layout::{LayoutOf, Size};\n use rustc::ty::TyCtxt;\n use rustc_index::vec::IndexVec;\n \n+use rustc_span::symbol::kw;\n use rustc_span::{BytePos, Span};\n-use syntax::symbol::kw;\n \n use super::OperandValue;\n use super::{FunctionCx, LocalRef};"}, {"sha": "39cb501b7aa98dd861fc55cd0663c55136cca98d", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -13,8 +13,8 @@ use rustc::ty::cast::{CastTy, IntTy};\n use rustc::ty::layout::{self, HasTyCtxt, LayoutOf};\n use rustc::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_apfloat::{ieee, Float, Round, Status};\n-use syntax::source_map::{Span, DUMMY_SP};\n-use syntax::symbol::sym;\n+use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_span::symbol::sym;\n \n use std::{i128, u128};\n "}, {"sha": "fecb3986e7e0899b26b7a18fed784a354aa96d44", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,7 +15,7 @@ use rustc::session::Session;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc::util::common::ErrorReported;\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n pub use rustc_data_structures::sync::MetadataRef;\n "}, {"sha": "399db7aafc76f677f5cff6a43451a8ce85a11f1a", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -18,7 +18,7 @@ extern crate rustc;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub mod codegen_backend;\n pub mod link;"}, {"sha": "4dab4545b422fa16f9ec58a7bc96f1baf259e422", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use rustc::session::config::{self, Input, OutputFilenames, OutputType};\n use rustc::session::Session;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::path::{Path, PathBuf};\n-use syntax::symbol::sym;\n use syntax::{ast, attr};\n \n pub fn out_filename("}, {"sha": "0a76093a9a9fdb68e9b1263eef18ecaaabe399b5", "filename": "src/librustc_codegen_utils/symbol_names_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,7 +6,7 @@\n \n use rustc::hir;\n use rustc::ty::{Instance, TyCtxt};\n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n const SYMBOL_NAME: Symbol = sym::rustc_symbol_name;\n const DEF_PATH: Symbol = sym::rustc_def_path;"}, {"sha": "fe08c85249a2ed0cea8fd3d0651e3ed9bc312199", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,14 +1,14 @@\n use crate::expand::{self, AstFragment, Invocation};\n \n use rustc_parse::{self, parser, DirectoryOwnership, MACRO_ARGUMENTS};\n+use rustc_span::edition::Edition;\n+use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use syntax::ast::{self, Attribute, Name, NodeId, PatKind};\n use syntax::attr::{self, Deprecation, HasAttrs, Stability};\n-use syntax::edition::Edition;\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::SourceMap;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n use syntax::visit::Visitor;"}, {"sha": "799781a89631d609e1d10e51ba94a42d40ec7140", "filename": "src/librustc_expand/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbuild.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n use crate::base::ExtCtxt;\n \n+use rustc_span::source_map::{respan, Spanned};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{self, AttrVec, BlockCheckMode, Expr, Ident, PatKind, UnOp};\n use syntax::attr;\n use syntax::ptr::P;\n-use syntax::source_map::{respan, Spanned};\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc_span::{Pos, Span};\n "}, {"sha": "6eead11ccb7bad63bf698d7b844aab107e73f3ff", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,6 +10,9 @@ use rustc_parse::configure;\n use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n use rustc_parse::DirectoryOwnership;\n+use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n+use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use syntax::attr::{self, is_builtin_attr, HasAttrs};\n@@ -18,15 +21,12 @@ use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::util::map_in_place::MapInPlace;\n use syntax::visit::{self, Visitor};\n \n use errors::{Applicability, FatalError, PResult};\n-use rustc_span::{FileName, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n \n use rustc_data_structures::sync::Lrc;"}, {"sha": "992764ab6a41d9daa9c1c6b1610d2e67510421e0", "filename": "src/librustc_expand/mbe/macro_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -106,10 +106,10 @@\n //! bound.\n use crate::mbe::{KleeneToken, TokenTree};\n \n+use rustc_span::symbol::{kw, sym};\n use syntax::ast::NodeId;\n use syntax::early_buffered_lints::META_VARIABLE_MISUSE;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{DelimToken, Token, TokenKind};\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "c0e34a30c54e99d3195cd0eeee225aa3f5124206", "filename": "src/librustc_expand/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -78,10 +78,10 @@ use crate::mbe::{self, TokenTree};\n \n use rustc_parse::parser::{FollowedByType, Parser, PathStyle};\n use rustc_parse::Directory;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{Ident, Name};\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, DocComment, Nonterminal, Token};\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "6e965346d30e9bf7948bbebd0314317059f3568e", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,14 +11,14 @@ use crate::mbe::transcribe::transcribe;\n use rustc_feature::Features;\n use rustc_parse::parser::Parser;\n use rustc_parse::Directory;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::Transparency;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr::{self, TransparencyError};\n-use syntax::edition::Edition;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, NtTT, Token, TokenKind::*};\n use syntax::tokenstream::{DelimSpan, TokenStream};\n "}, {"sha": "4a33c51d57396175efa65e0b139ca379d15c06ca", "filename": "src/librustc_expand/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n use crate::mbe::macro_parser;\n use crate::mbe::{Delimited, KleeneOp, KleeneToken, SequenceRepetition, TokenTree};\n \n+use rustc_span::symbol::kw;\n use syntax::ast;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::kw;\n use syntax::token::{self, Token};\n use syntax::tokenstream;\n "}, {"sha": "835f0b0108ead65a52d83799f7b8b268b5ae6feb", "filename": "src/librustc_expand/parse/lexer/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,9 +1,9 @@\n use rustc_data_structures::sync::Lrc;\n use rustc_parse::lexer::StringReader;\n+use rustc_span::source_map::{FilePathMapping, SourceMap};\n use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, Span};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FilePathMapping, SourceMap};\n use syntax::token::{self, Token, TokenKind};\n use syntax::util::comments::is_doc_comment;\n use syntax::with_default_globals;"}, {"sha": "25cd5dabe57ec3e45adb304a2e0baa0952cde513", "filename": "src/librustc_expand/parse/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,13 +2,13 @@ use crate::tests::{matches_codepattern, string_to_stream, with_error_checking_pa\n \n use errors::PResult;\n use rustc_parse::new_parser_from_source_str;\n+use rustc_span::source_map::FilePathMapping;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, FileName, Pos, Span};\n use syntax::ast::{self, Name, PatKind};\n use syntax::print::pprust::item_to_string;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::FilePathMapping;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};\n use syntax::visit;"}, {"sha": "8b18a5dc4bbbb1204615e1ba6ad02fc8496a1ddd", "filename": "src/librustc_expand/placeholders.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fplaceholders.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n use crate::base::ExtCtxt;\n use crate::expand::{AstFragment, AstFragmentKind};\n \n+use rustc_span::source_map::{dummy_spanned, DUMMY_SP};\n use syntax::ast;\n use syntax::mut_visit::*;\n use syntax::ptr::P;\n-use syntax::source_map::{dummy_spanned, DUMMY_SP};\n \n use smallvec::{smallvec, SmallVec};\n "}, {"sha": "25e2bbb34678e344ae26297e0a397b531fd50c75", "filename": "src/librustc_expand/proc_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,9 +1,9 @@\n use crate::base::{self, *};\n use crate::proc_macro_server;\n \n+use rustc_span::symbol::sym;\n use syntax::ast::{self, ItemKind, MetaItemKind, NestedMetaItem};\n use syntax::errors::{Applicability, FatalError};\n-use syntax::symbol::sym;\n use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n "}, {"sha": "18dc605c9e754003e5564d7eeefa39cff919a473", "filename": "src/librustc_expand/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_expand%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use rustc_parse::{new_parser_from_source_str, parser::Parser, source_file_to_stream};\n+use rustc_span::source_map::{FilePathMapping, SourceMap};\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast;\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FilePathMapping, SourceMap};\n use syntax::tokenstream::TokenStream;\n use syntax::with_default_globals;\n "}, {"sha": "738dfa712311a4d080a66ea78b1133dac02a2d75", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -42,11 +42,13 @@ use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n+use syntax::ast;\n+\n use std::env;\n use std::fs::{self, File};\n use std::io::Write;\n-use syntax::{ast, symbol::sym};\n \n pub fn assert_dep_graph(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.with_ignore(|| {"}, {"sha": "b6ce12cf90886e9d198bcc3183850ca704417b44", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -25,9 +25,9 @@ use rustc::hir::def_id::LOCAL_CRATE;\n use rustc::mir::mono::CodegenUnitNameBuilder;\n use rustc::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::*;\n+use rustc_span::symbol::{sym, Symbol};\n use std::collections::BTreeSet;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.with_ignore(|| {"}, {"sha": "4d08ccebd696fdc43a6ed80a483808823574f3d3", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -23,11 +23,11 @@ use rustc::hir::{ImplItemKind, ItemKind as HirItem, TraitItemKind};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::iter::FromIterator;\n use std::vec::Vec;\n use syntax::ast::{self, Attribute, NestedMetaItem};\n-use syntax::symbol::{sym, Symbol};\n \n const EXCEPT: Symbol = sym::except;\n const LABEL: Symbol = sym::label;"}, {"sha": "c4449945dd19d784b6ac2b21fac0c92fd278cbdc", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,12 +14,12 @@ use rustc_data_structures::OnDrop;\n use rustc_errors::registry::Registry;\n use rustc_parse::new_parser_from_source_str;\n use rustc_span::edition;\n+use rustc_span::source_map::{FileLoader, FileName, SourceMap};\n use std::path::PathBuf;\n use std::result;\n use std::sync::{Arc, Mutex};\n use syntax::ast::{self, MetaItemKind};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FileLoader, FileName, SourceMap};\n use syntax::token;\n \n pub type Result<T> = result::Result<T, ErrorReported>;"}, {"sha": "dcf1763f857b4289a86611523bff33063c5b76a8", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -33,12 +33,12 @@ use rustc_passes::{self, ast_validation, hir_stats, layout_test};\n use rustc_plugin_impl as plugin;\n use rustc_privacy;\n use rustc_resolve::{Resolver, ResolverArenas};\n+use rustc_span::symbol::Symbol;\n use rustc_span::FileName;\n use rustc_traits;\n use rustc_typeck as typeck;\n use syntax::early_buffered_lints::BufferedEarlyLint;\n use syntax::mut_visit::MutVisitor;\n-use syntax::symbol::Symbol;\n use syntax::util::node_count::NodeCounter;\n use syntax::{self, ast, visit};\n "}, {"sha": "beb479046a5370c62236a698dcc909b6c5e0375e", "filename": "src/librustc_interface/proc_macro_decls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fproc_macro_decls.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,8 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n pub fn find(tcx: TyCtxt<'_>) -> Option<DefId> {\n     tcx.proc_macro_decls_static(LOCAL_CRATE)"}, {"sha": "25ab7650b0ec2e28fd21e04efbc406e19bd68ad6", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,13 +12,13 @@ use rustc::session::search_paths::SearchPath;\n use rustc::session::{build_session, Session};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n+use rustc_span::symbol::sym;\n use rustc_target::spec::{MergeFunctions, PanicStrategy, RelroLevel};\n use std::collections::{BTreeMap, BTreeSet};\n use std::iter::FromIterator;\n use std::path::PathBuf;\n use syntax;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n-use syntax::symbol::sym;\n \n type CfgSpecs = FxHashSet<(String, Option<String>)>;\n "}, {"sha": "c15dc2fe704b9aa21d98c603c997610946cbd421", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,6 +15,8 @@ use rustc_errors::registry::Registry;\n use rustc_metadata::dynamic_lib::DynamicLibrary;\n use rustc_resolve::{self, Resolver};\n use rustc_span::edition::Edition;\n+use rustc_span::source_map::{FileLoader, RealFileLoader, SourceMap};\n+use rustc_span::symbol::{sym, Symbol};\n use smallvec::SmallVec;\n use std::env;\n use std::io::{self, Write};\n@@ -27,8 +29,6 @@ use std::{panic, thread};\n use syntax::ast::{AttrVec, BlockCheckMode};\n use syntax::mut_visit::{visit_clobber, MutVisitor, *};\n use syntax::ptr::P;\n-use syntax::source_map::{FileLoader, RealFileLoader, SourceMap};\n-use syntax::symbol::{sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{self, ast, attr};\n "}, {"sha": "a40c5d1697c43394a3ad3087dfe2f0768dbf54db", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n \n [dependencies]\n log = \"0.4\"\n+unicode-security = \"0.0.2\"\n rustc = { path = \"../librustc\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "6beedb08db5ecbbdf877f5e5c4a5f986ecdb0c37", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -7,7 +7,8 @@ use rustc::{\n         adjustment::{Adjust, Adjustment},\n     },\n };\n-use syntax::{errors::Applicability, symbol::sym};\n+use rustc_span::symbol::sym;\n+use syntax::errors::Applicability;\n \n declare_lint! {\n     pub ARRAY_INTO_ITER,"}, {"sha": "055b1f8b366d82ce56ee421db3fd82541d5afe24", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -37,15 +37,15 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n \n+use rustc_span::edition::Edition;\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};\n use syntax::ast::{self, Expr};\n use syntax::attr::{self, HasAttrs};\n-use syntax::edition::Edition;\n use syntax::errors::{Applicability, DiagnosticBuilder};\n use syntax::print::pprust::{self, expr_to_string};\n use syntax::ptr::P;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::FnKind;\n "}, {"sha": "f30d0bcbdd53fe0eb9c308cb6c34a4b0ccbaac05", "filename": "src/librustc_lint/non_ascii_idents.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fnon_ascii_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fnon_ascii_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnon_ascii_idents.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -7,15 +7,32 @@ declare_lint! {\n     \"detects non-ASCII identifiers\"\n }\n \n-declare_lint_pass!(NonAsciiIdents => [NON_ASCII_IDENTS]);\n+declare_lint! {\n+    pub UNCOMMON_CODEPOINTS,\n+    Warn,\n+    \"detects uncommon Unicode codepoints in identifiers\"\n+}\n+\n+declare_lint_pass!(NonAsciiIdents => [NON_ASCII_IDENTS, UNCOMMON_CODEPOINTS]);\n \n impl EarlyLintPass for NonAsciiIdents {\n     fn check_ident(&mut self, cx: &EarlyContext<'_>, ident: ast::Ident) {\n-        if !ident.name.as_str().is_ascii() {\n+        use unicode_security::GeneralSecurityProfile;\n+        let name_str = ident.name.as_str();\n+        if name_str.is_ascii() {\n+            return;\n+        }\n+        cx.struct_span_lint(\n+            NON_ASCII_IDENTS,\n+            ident.span,\n+            \"identifier contains non-ASCII characters\",\n+        )\n+        .emit();\n+        if !name_str.chars().all(GeneralSecurityProfile::identifier_allowed) {\n             cx.struct_span_lint(\n-                NON_ASCII_IDENTS,\n+                UNCOMMON_CODEPOINTS,\n                 ident.span,\n-                \"identifier contains non-ASCII characters\",\n+                \"identifier contains uncommon Unicode codepoints\",\n             )\n             .emit();\n         }"}, {"sha": "a97061c50ae452db916bdae87228b70e44175d82", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,12 +5,12 @@ use rustc::hir::intravisit::FnKind;\n use rustc::hir::{self, GenericParamKind, PatKind};\n use rustc::lint;\n use rustc::ty;\n+use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::errors::Applicability;\n-use syntax::symbol::sym;\n \n #[derive(PartialEq)]\n pub enum MethodLateContext {"}, {"sha": "67eccda5eb7e8b88010c44870fa6c946ba6ce623", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,28 +3,24 @@\n use crate::hir::def_id::DefId;\n use lint::{LateContext, LintArray, LintContext};\n use lint::{LateLintPass, LintPass};\n+use rustc::hir;\n use rustc::hir::{is_range_literal, ExprKind, Node};\n+use rustc::mir::interpret::{sign_extend, truncate};\n use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::{lint, util};\n+use rustc::{lint, util::nodemap::FxHashSet};\n use rustc_index::vec::Idx;\n-use util::nodemap::FxHashSet;\n-\n-use std::cmp;\n-use std::{f32, f64, i16, i32, i64, i8, u16, u32, u64, u8};\n-\n+use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::errors::Applicability;\n-use syntax::{ast, attr, source_map};\n-\n-use rustc::hir;\n-\n-use rustc::mir::interpret::{sign_extend, truncate};\n+use syntax::{ast, attr};\n \n use log::debug;\n+use std::cmp;\n+use std::{f32, f64, i16, i32, i64, i8, u16, u32, u64, u8};\n \n declare_lint! {\n     UNUSED_COMPARISONS,"}, {"sha": "db2598d321acae5a43a6e62c7cd47eb2d6238f6e", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,13 +10,13 @@ use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_feature::{AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n \n+use rustc_span::symbol::Symbol;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, Span};\n use syntax::ast;\n use syntax::attr;\n use syntax::errors::{pluralize, Applicability};\n use syntax::print::pprust;\n-use syntax::symbol::Symbol;\n-use syntax::symbol::{kw, sym};\n use syntax::util::parser;\n \n use log::debug;"}, {"sha": "f95801d6fb15a6e4a316da9b37db98c5dd7b80b0", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -23,13 +23,13 @@ use std::{cmp, fs};\n use log::{debug, info, log_enabled};\n use proc_macro::bridge::client::ProcMacro;\n use rustc_expand::base::SyntaxExtension;\n+use rustc_span::edition::Edition;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;\n use syntax::attr;\n-use syntax::edition::Edition;\n use syntax::expand::allocator::{global_allocator_spans, AllocatorKind};\n use syntax::span_fatal;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "6649cf09a0735d253c587601a4899fd9d0478209", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n-use syntax::symbol::sym;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<String> {\n     let mut collector = Collector { args: Vec::new() };"}, {"sha": "a9adb6291c74d668f2775621cf9035bfff948535", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -225,10 +225,10 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n \n use errors::DiagnosticBuilder;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::{Target, TargetTriple};\n use syntax::struct_span_err;\n-use syntax::symbol::{sym, Symbol};\n use syntax::{span_err, span_fatal};\n \n use std::cmp;"}, {"sha": "3228c9f2ff435820c70dcbc2357dbba4a6081d1d", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,11 +4,11 @@ use rustc::middle::cstore::{self, NativeLibrary};\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n+use rustc_span::source_map::Span;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::source_map::Span;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::{span_err, struct_span_err};\n \n use rustc_error_codes::*;"}, {"sha": "2e133bdbf8898582a669c0b8d81399e13789a295", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -36,11 +36,11 @@ use proc_macro::bridge::client::ProcMacro;\n use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n+use rustc_span::source_map::{self, respan, Spanned};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{self, hygiene::MacroKind, BytePos, Pos, Span, DUMMY_SP};\n use syntax::ast::{self, Ident};\n use syntax::attr;\n-use syntax::source_map::{self, respan, Spanned};\n \n pub use cstore_impl::{provide, provide_extern};\n "}, {"sha": "00d5b4321cb7ec830fda989cb3c60522f8e46b1b", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -26,14 +26,14 @@ use smallvec::SmallVec;\n use std::any::Any;\n use std::sync::Arc;\n \n+use rustc_span::source_map;\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{FileName, Span};\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n use syntax::ptr::P;\n-use syntax::source_map;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::Symbol;\n use syntax::tokenstream::DelimSpan;\n \n macro_rules! provide {"}, {"sha": "6d84bd6f26369492c0d0766184103301e5e30789", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -25,6 +25,8 @@ use rustc_data_structures::sync::Lrc;\n use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};\n \n use log::{debug, trace};\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{self, FileName, SourceFile, Span};\n use std::hash::Hash;\n use std::num::NonZeroUsize;\n@@ -33,8 +35,6 @@ use std::u32;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n \n use rustc::hir::intravisit;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};"}, {"sha": "40b0ec74a4a33e12df2d6dc931c204d23ad8f42c", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,10 +15,10 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_index::vec::IndexVec;\n use rustc_serialize::opaque::Encoder;\n+use rustc_span::edition::Edition;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{self, Span};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n-use syntax::edition::Edition;\n-use syntax::symbol::Symbol;\n use syntax::{ast, attr};\n \n use std::marker::PhantomData;"}, {"sha": "61d69f8bd9d7d58999e56a81146ca6eb5edc273f", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,8 +11,8 @@ use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_index::vec::Idx;\n+use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n-use syntax::source_map::DesugaringKind;\n \n use crate::dataflow::drop_flag_effects;\n use crate::dataflow::indexes::{MoveOutIndex, MovePathIndex};"}, {"sha": "8d534b6ec8e8ea0506a9a7b872fd0134b52108d2", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,10 +9,10 @@ use rustc::mir::{Body, ConstraintCategory, Location};\n use rustc::ty::{self, RegionVid, Ty};\n use rustc_errors::DiagnosticBuilder;\n use rustc_index::vec::IndexVec;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use std::collections::VecDeque;\n use syntax::errors::Applicability;\n-use syntax::symbol::kw;\n \n use crate::util::borrowck_errors;\n "}, {"sha": "d66c38e753ac1d3ffa99ca9a97757a229f309f74", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -7,8 +7,8 @@ use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n+use rustc_span::symbol::kw;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n-use syntax::symbol::kw;\n \n use crate::borrow_check::{\n     nll::ToRegionVid, region_infer::RegionInferenceContext, universal_regions::DefiningTy,"}, {"sha": "9e3d2a7d5f63c214e6326b4900d6cf67cc5e8b76", "filename": "src/librustc_mir/borrow_check/diagnostics/var_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,8 @@ use crate::borrow_check::{nll::ToRegionVid, region_infer::RegionInferenceContext\n use rustc::mir::{Body, Local};\n use rustc::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n-use syntax::source_map::Span;\n \n impl<'tcx> RegionInferenceContext<'tcx> {\n     crate fn get_var_name_and_span_for_region("}, {"sha": "6f223785601fcfba362f6cf98c365314a42d31a7", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,13 +9,13 @@ use rustc::mir::{\n use rustc::ty::{self, RegionKind, RegionVid};\n use rustc_errors::Diagnostic;\n use rustc_index::vec::IndexVec;\n+use rustc_span::symbol::sym;\n use std::env;\n use std::fmt::Debug;\n use std::io;\n use std::path::PathBuf;\n use std::rc::Rc;\n use std::str::FromStr;\n-use syntax::symbol::sym;\n \n use self::mir_util::PassWhere;\n use polonius_engine::{Algorithm, Output};"}, {"sha": "b265ab6b7becb268f2f42b7ba31de64fc7192794", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,12 +14,12 @@ use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::HirIdMap;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use rustc_target::spec::PanicStrategy;\n use std::u32;\n use syntax::attr::{self, UnwindAttr};\n-use syntax::symbol::kw;\n \n use super::lints;\n "}, {"sha": "ac04ae285884b39887bcff556075536f111928d6", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,7 @@\n use rustc::mir;\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::{self, TyCtxt};\n-\n-use syntax::{source_map::DUMMY_SP, symbol::Symbol};\n+use rustc_span::{source_map::DUMMY_SP, symbol::Symbol};\n \n use crate::interpret::{intern_const_alloc_recursive, ConstValue, InterpCx};\n "}, {"sha": "d55620f657ba9a6b9d8372cf90569027a2c437b0", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,8 +10,8 @@ use rustc::mir;\n use rustc::mir::interpret::{ConstEvalErr, ErrorHandled};\n use rustc::traits::Reveal;\n use rustc::ty::{self, layout, layout::LayoutOf, subst::Subst, TyCtxt};\n+use rustc_span::source_map::Span;\n use std::convert::TryInto;\n-use syntax::source_map::Span;\n \n pub fn note_on_undefined_behavior_error() -> &'static str {\n     \"The rules on what exactly is undefined behavior aren't clear, \\"}, {"sha": "d4556919652ecd34701234e4150dcef34b20dac0", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,7 +8,7 @@ use std::hash::Hash;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::interpret::{\n     self, snapshot, AllocId, Allocation, AssertMessage, GlobalId, ImmTy, InterpCx, InterpResult,"}, {"sha": "da2739fd0d6cde49d6a135f3dc3cc30443132b8f", "filename": "src/librustc_mir/dataflow/generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -28,7 +28,7 @@ use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use crate::dataflow::BottomValue;\n "}, {"sha": "e94f263348d8aafa4a049d4a49d2623a307bf2d4", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{self, MetaItem};\n use syntax::print::pprust;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::{BitSet, HybridBitSet};"}, {"sha": "e81dc9ba16d8359d893d61383f0a6e4430718f5a", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -16,9 +16,9 @@ use rustc::ty::subst::Subst;\n use rustc::ty::subst::{GenericArg, InternalSubsts};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_index::vec::Idx;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::{sym, Symbol};\n \n #[derive(Clone)]\n pub struct Cx<'a, 'tcx> {"}, {"sha": "9461a066902128b1801409e54c30e4cafee495cb", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use rustc::ty::adjustment::PointerCast;\n use rustc::ty::layout::{self, Size, TyLayout};\n use rustc::ty::{self, Ty, TypeAndMut, TypeFoldable};\n+use rustc_span::symbol::sym;\n use syntax::ast::FloatTy;\n-use syntax::symbol::sym;\n \n use rustc::mir::interpret::{InterpResult, PointerArithmetic, Scalar};\n use rustc::mir::CastKind;"}, {"sha": "5c5159749a3c527ab56e27929d2c867f1e0c02b5", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,7 +17,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n-use syntax::source_map::{self, Span, DUMMY_SP};\n+use rustc_span::source_map::{self, Span, DUMMY_SP};\n \n use super::{\n     Immediate, MPlaceTy, Machine, MemPlace, Memory, OpTy, Operand, Place, PlaceTy,"}, {"sha": "6790baf31ccb2cab12f85a14647ca65538f5c46f", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -19,8 +19,8 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n+use rustc_span::source_map::Span;\n use syntax::ast::Mutability;\n-use syntax::source_map::Span;\n \n use super::eval_context::{LocalState, StackPopCleanup};\n use super::{Frame, Immediate, LocalValue, MemPlace, Memory, Operand, Place, ScalarMaybeUndef};"}, {"sha": "e4af30370552fbdf3870f389af65b2ec3817568e", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,8 +3,8 @@ use std::borrow::Cow;\n use rustc::ty::layout::{self, LayoutOf, TyLayout};\n use rustc::ty::Instance;\n use rustc::{mir, ty};\n+use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n-use syntax::source_map::Span;\n \n use super::{\n     FnVal, ImmTy, InterpCx, InterpResult, MPlaceTy, Machine, OpTy, PlaceTy, StackPopCleanup,"}, {"sha": "8011de19e78ed6986234bdf8bea3f736362ac918", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -107,7 +107,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc::util::common::time;\n use rustc::util::nodemap::{DefIdSet, FxHashMap, FxHashSet};\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n use crate::monomorphize::collector::InliningMap;\n use crate::monomorphize::collector::{self, MonoItemCollectionMode};"}, {"sha": "605281326f65a98e074186675f91668263f87edc", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,9 +3,9 @@\n use rustc::hir::def_id::DefId;\n use rustc::session::config::nightly_options;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, Symbol};\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::sym;\n \n use super::{ConstKind, Item};\n "}, {"sha": "94b3b51f0b37912824bd4a675fd545eb15ca84ba", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,8 +9,8 @@ use rustc::ty::cast::CastTy;\n use rustc::ty::{self, TyCtxt};\n use rustc_error_codes::*;\n use rustc_index::bit_set::BitSet;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n use std::borrow::Cow;\n use std::ops::Deref;"}, {"sha": "c637557344178b9fc9308dee04515aba57d50b8b", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,7 +10,7 @@ use rustc::ty::cast::CastTy;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt};\n \n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n use std::ops::Bound;\n "}, {"sha": "819ed9a51e7bf1d4286eb3ed2a5faed15349e40c", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -19,9 +19,9 @@ use rustc::mir::*;\n use rustc::ty::cast::CastTy;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, List, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::LitKind;\n-use syntax::symbol::sym;\n \n use rustc_index::vec::{Idx, IndexVec};\n use rustc_target::spec::abi::Abi;"}, {"sha": "3741ca17a1115be35ee6c15fce38a3489eb77b46", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,10 +2,10 @@ use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::mir::*;\n use rustc::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::borrow::Cow;\n use syntax::attr;\n-use syntax::symbol::{sym, Symbol};\n \n type McfResult = Result<(), (Span, Cow<'static, str>)>;\n "}, {"sha": "394924f5d6a31b248b72c2916f439ea7548f1f2d", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use crate::transform::{MirPass, MirSource};\n use rustc::hir::def_id::DefId;"}, {"sha": "f2ffd9470ed7601908ae67a145307a6e31329e40", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,12 +11,12 @@\n use crate::{parse_in, validate_attr};\n use rustc_errors::Applicability;\n use rustc_feature::Features;\n+use rustc_span::edition::Edition;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{self, AttrItem, Attribute, MetaItem};\n use syntax::attr;\n use syntax::attr::HasAttrs;\n-use syntax::edition::Edition;\n use syntax::feature_gate::{feature_err, get_features};\n use syntax::mut_visit::*;\n use syntax::ptr::P;"}, {"sha": "a28bff3babfbf53909ab982746a2e6b6beb216bb", "filename": "src/librustc_parse/lexer/tokentrees.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -78,11 +78,11 @@ impl<'a> TokenTreesReader<'a> {\n         let sm = self.string_reader.sess.source_map();\n         match self.token.kind {\n             token::Eof => {\n-                let msg = \"this file contains an un-closed delimiter\";\n+                let msg = \"this file contains an unclosed delimiter\";\n                 let mut err =\n                     self.string_reader.sess.span_diagnostic.struct_span_err(self.token.span, msg);\n                 for &(_, sp) in &self.open_braces {\n-                    err.span_label(sp, \"un-closed delimiter\");\n+                    err.span_label(sp, \"unclosed delimiter\");\n                     self.unmatched_braces.push(UnmatchedBrace {\n                         expected_delim: token::DelimToken::Brace,\n                         found_delim: None,\n@@ -155,7 +155,7 @@ impl<'a> TokenTreesReader<'a> {\n                                 close_brace_span,\n                             ));\n                         }\n-                        // Parse the close delimiter.\n+                        // Parse the closing delimiter.\n                         self.real_token();\n                     }\n                     // Incorrect delimiter.\n@@ -218,7 +218,7 @@ impl<'a> TokenTreesReader<'a> {\n                 // An unexpected closing delimiter (i.e., there is no\n                 // matching opening delimiter).\n                 let token_str = token_to_string(&self.token);\n-                let msg = format!(\"unexpected close delimiter: `{}`\", token_str);\n+                let msg = format!(\"unexpected closing delimiter: `{}`\", token_str);\n                 let mut err =\n                     self.string_reader.sess.span_diagnostic.struct_span_err(self.token.span, &msg);\n \n@@ -228,7 +228,7 @@ impl<'a> TokenTreesReader<'a> {\n                         \"this block is empty, you might have not meant to close it\",\n                     );\n                 }\n-                err.span_label(self.token.span, \"unexpected close delimiter\");\n+                err.span_label(self.token.span, \"unexpected closing delimiter\");\n                 Err(err)\n             }\n             _ => {"}, {"sha": "1b816e2b90da964cf83a580e8c744e195a292544", "filename": "src/librustc_parse/parser/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,9 +1,9 @@\n use super::Parser;\n \n use rustc_errors::PResult;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::{kw, sym};\n use syntax::ast::{self, Attribute, GenericBounds, GenericParam, GenericParamKind, WhereClause};\n-use syntax::source_map::DUMMY_SP;\n use syntax::token;\n \n impl<'a> Parser<'a> {"}, {"sha": "a2fa335cf72e2f30ed3c0d7f535fb79cfbfe2cd3", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1354,16 +1354,16 @@ crate fn make_unclosed_delims_error(\n     let mut err = sess.span_diagnostic.struct_span_err(\n         unmatched.found_span,\n         &format!(\n-            \"incorrect close delimiter: `{}`\",\n+            \"mismatched closing delimiter: `{}`\",\n             pprust::token_kind_to_string(&token::CloseDelim(found_delim)),\n         ),\n     );\n-    err.span_label(unmatched.found_span, \"incorrect close delimiter\");\n+    err.span_label(unmatched.found_span, \"mismatched closing delimiter\");\n     if let Some(sp) = unmatched.candidate_span {\n-        err.span_label(sp, \"close delimiter possibly meant for this\");\n+        err.span_label(sp, \"closing delimiter possibly meant for this\");\n     }\n     if let Some(sp) = unmatched.unclosed_span {\n-        err.span_label(sp, \"un-closed delimiter\");\n+        err.span_label(sp, \"unclosed delimiter\");\n     }\n     Some(err)\n }"}, {"sha": "038c4284f252bf14dac87f24a9fdfc69ae257fa1", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,14 +11,14 @@ use rustc::lint;\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_parse::validate_attr;\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use std::mem;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{span_err, struct_span_err, walk_list};\n "}, {"sha": "22f3533b1e4bc611077590c4078a294eecef2785", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -18,7 +18,7 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_data_structures::fx::FxHashMap;\n \n use rustc_span;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n use syntax::{ast, attr};\n \n // Any local node that may call something in its body block should be"}, {"sha": "4e8b5c5f6b6531424ce4d2f5b7c80d8ebf8da4a8", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -16,8 +16,8 @@ use rustc::util::nodemap::FxHashMap;\n \n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n struct DiagnosticItemCollector<'tcx> {\n     // items from this crate"}, {"sha": "3a7d1780d470df24d5e207617bac86ab440c49ca", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,10 +6,10 @@ use rustc::session::config::EntryFnType;\n use rustc::session::{config, Session};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::attr;\n use syntax::entry::EntryPointType;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "02eecc2998bb7c8a3dac69e29503c1e2ae361e19", "filename": "src/librustc_passes/layout_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flayout_test.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,8 +11,8 @@ use rustc::ty::layout::TyLayout;\n use rustc::ty::ParamEnv;\n use rustc::ty::Ty;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use syntax::ast::Attribute;\n-use syntax::symbol::sym;\n \n pub fn test_layout(tcx: TyCtxt<'_>) {\n     if tcx.features().rustc_attrs {"}, {"sha": "0d39ea85b50aaa2af595a3f70f2c24356a5ab501", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,9 +9,9 @@ use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::middle::lib_features::LibFeatures;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{sym, Span};\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n-use syntax::symbol::Symbol;\n \n use rustc_error_codes::*;\n "}, {"sha": "49664be9c7758332ae810930a8bb1a524a5dabb8", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -109,14 +109,14 @@ use rustc::util::nodemap::{HirIdMap, HirIdSet};\n \n use errors::Applicability;\n use rustc_data_structures::fx::FxIndexMap;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::collections::VecDeque;\n use std::io;\n use std::io::prelude::*;\n use std::rc::Rc;\n use std::{fmt, u32};\n use syntax::ast;\n-use syntax::symbol::sym;\n \n #[derive(Copy, Clone, PartialEq)]\n struct Variable(u32);"}, {"sha": "685e48e0f3558c640c239de52985337ee8019e37", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,8 +17,8 @@ use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n \n use rustc_index::vec::Idx;\n+use rustc_span::source_map;\n use rustc_span::Span;\n-use syntax::source_map;\n \n use std::mem;\n "}, {"sha": "686ed6c1345bcc02dd064f3b119b4a9d383316a8", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,11 +12,11 @@ use rustc::session::Session;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::Attribute;\n use syntax::attr::{self, Stability};\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::{sym, Symbol};\n \n use std::cmp::Ordering;\n use std::mem::replace;"}, {"sha": "2424ee5a9df006e55e0d170309258fba5428a952", "filename": "src/librustc_plugin_impl/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_plugin_impl%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_plugin_impl%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fbuild.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,9 +5,9 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n struct RegistrarFinder {\n     registrars: Vec<(hir::HirId, Span)>,"}, {"sha": "2215e49ec977a9834fdb2545f7936e109f712969", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,14 +5,14 @@ use rustc::middle::cstore::MetadataLoader;\n use rustc::session::Session;\n use rustc_metadata::locator;\n \n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::borrow::ToOwned;\n use std::env;\n use std::mem;\n use std::path::PathBuf;\n use syntax::ast::{Crate, Ident};\n use syntax::struct_span_err;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "c4b113d7a935caea3d7c93bf61ebb58e58fb3b7c", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -21,10 +21,10 @@ use rustc::ty::{self, GenericParamDefKind, TraitRef, Ty, TyCtxt, TypeFoldable};\n use rustc::util::nodemap::HirIdSet;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_span::hygiene::Transparency;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::Ident;\n use syntax::attr;\n-use syntax::symbol::{kw, sym};\n \n use std::marker::PhantomData;\n use std::{cmp, fmt, mem};"}, {"sha": "5304aced69fbfc2afa2413d2331534d1800c717b", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -32,14 +32,14 @@ use errors::Applicability;\n use rustc_expand::base::SyntaxExtension;\n use rustc_expand::expand::AstFragment;\n use rustc_span::hygiene::{ExpnId, MacroKind};\n+use rustc_span::source_map::{respan, Spanned};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use syntax::ast::{Ident, Name};\n use syntax::attr;\n-use syntax::source_map::{respan, Spanned};\n use syntax::span_err;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit::{self, Visitor};\n "}, {"sha": "5aea813c6b86d15a8569f7c09dceb84d3a0298fe", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,9 +3,9 @@ use rustc::hir::def_id::DefIndex;\n use rustc::hir::map::definitions::*;\n use rustc_expand::expand::AstFragment;\n use rustc_span::hygiene::ExpnId;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::*;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit;\n "}, {"sha": "c4538ddc2422627f98d538d5cb373f1622f3a875", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,12 +11,12 @@ use rustc::ty::{self, DefIdTree};\n use rustc::util::nodemap::FxHashSet;\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast::{self, Ident, Path};\n use syntax::print::pprust;\n-use syntax::source_map::SourceMap;\n use syntax::struct_span_err;\n-use syntax::symbol::{kw, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use crate::imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};"}, {"sha": "eb2c4f79feff53257597f707b8f9dc1d03ecfc6c", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -24,9 +24,9 @@ use rustc::{bug, span_bug};\n use rustc_data_structures::ptr_key::PtrKey;\n \n use rustc_span::hygiene::ExpnId;\n+use rustc_span::symbol::kw;\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::{Ident, Name, NodeId};\n-use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{struct_span_err, unwrap_or};\n "}, {"sha": "cc9e617f430cd759380370761422c2f8a3ae0d04", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -18,11 +18,11 @@ use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::hir::TraitCandidate;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc::{bug, lint, span_bug};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use smallvec::{smallvec, SmallVec};\n use syntax::ast::*;\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::visit::{self, FnKind, Visitor};\n use syntax::{unwrap_or, walk_list};\n@@ -345,7 +345,7 @@ struct DiagnosticMetadata {\n     /// The current self item if inside an ADT (used for better errors).\n     current_self_item: Option<NodeId>,\n \n-    /// The current enclosing funciton (used for better errors).\n+    /// The current enclosing function (used for better errors).\n     current_function: Option<Span>,\n \n     /// A list of labels as of yet unused. Labels will be removed from this map when"}, {"sha": "4a65b097e73bf398b4b565ee9bce98d457bc1e8a", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -13,9 +13,9 @@ use rustc::hir::PrimTy;\n use rustc::session::config::nightly_options;\n use rustc::util::nodemap::FxHashSet;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, ExprKind, Ident, NodeId, Path, Ty, TyKind};\n-use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use rustc_error_codes::*;\n@@ -259,6 +259,24 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                 }\n                 return (err, candidates);\n             }\n+\n+            // If the first argument in call is `self` suggest calling a method.\n+            if let Some((call_span, args_span)) = self.call_has_self_arg(source) {\n+                let mut args_snippet = String::new();\n+                if let Some(args_span) = args_span {\n+                    if let Ok(snippet) = self.r.session.source_map().span_to_snippet(args_span) {\n+                        args_snippet = snippet;\n+                    }\n+                }\n+\n+                err.span_suggestion(\n+                    call_span,\n+                    &format!(\"try calling `{}` as a method\", ident),\n+                    format!(\"self.{}({})\", path_str, args_snippet),\n+                    Applicability::MachineApplicable,\n+                );\n+                return (err, candidates);\n+            }\n         }\n \n         // Try Levenshtein algorithm.\n@@ -298,6 +316,43 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n         (err, candidates)\n     }\n \n+    /// Check if the source is call expression and the first argument is `self`. If true,\n+    /// return the span of whole call and the span for all arguments expect the first one (`self`).\n+    fn call_has_self_arg(&self, source: PathSource<'_>) -> Option<(Span, Option<Span>)> {\n+        let mut has_self_arg = None;\n+        if let PathSource::Expr(parent) = source {\n+            match &parent?.kind {\n+                ExprKind::Call(_, args) if args.len() > 0 => {\n+                    let mut expr_kind = &args[0].kind;\n+                    loop {\n+                        match expr_kind {\n+                            ExprKind::Path(_, arg_name) if arg_name.segments.len() == 1 => {\n+                                if arg_name.segments[0].ident.name == kw::SelfLower {\n+                                    let call_span = parent.unwrap().span;\n+                                    let tail_args_span = if args.len() > 1 {\n+                                        Some(Span::new(\n+                                            args[1].span.lo(),\n+                                            args.last().unwrap().span.hi(),\n+                                            call_span.ctxt(),\n+                                        ))\n+                                    } else {\n+                                        None\n+                                    };\n+                                    has_self_arg = Some((call_span, tail_args_span));\n+                                }\n+                                break;\n+                            }\n+                            ExprKind::AddrOf(_, _, expr) => expr_kind = &expr.kind,\n+                            _ => break,\n+                        }\n+                    }\n+                }\n+                _ => (),\n+            }\n+        };\n+        return has_self_arg;\n+    }\n+\n     fn followed_by_brace(&self, span: Span) -> (bool, Option<(Span, String)>) {\n         // HACK(estebank): find a better way to figure out that this was a\n         // parser issue where a struct literal is being used on an expression"}, {"sha": "420e3d5c6de7a6b45c8e95ef30a46d599ac21c31", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -39,14 +39,14 @@ use rustc_metadata::creader::{CStore, CrateLoader};\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_expand::base::SyntaxExtension;\n use rustc_span::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, FloatTy, Ident, IntTy, Name, NodeId, UintTy};\n use syntax::ast::{Crate, CRATE_NODE_ID};\n use syntax::ast::{ItemKind, Path};\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{struct_span_err, unwrap_or};\n "}, {"sha": "e7d6cd2709d73a954d740eae433a45e424cb6626", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,13 +15,13 @@ use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::lint;\n use rustc::session::Session;\n use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, HirIdMap, HirIdSet};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::{replace, take};\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::{kw, sym};\n \n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::{self, GenericParamKind, LifetimeParamKind};"}, {"sha": "4c95607410bd7ab0289267d498b9f778bad41c03", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,12 +17,12 @@ use rustc_expand::base::{self, Indeterminate, InvocationRes};\n use rustc_expand::compile_declarative_macro;\n use rustc_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n use rustc_feature::is_builtin_attr_name;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::{self, ExpnData, ExpnId, ExpnKind};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident, NodeId};\n use syntax::attr::{self, StabilityLevel};\n-use syntax::edition::Edition;\n use syntax::feature_gate::feature_err;\n use syntax::print::pprust;\n "}, {"sha": "a61030afa19db25205fa1324cfe489599bee3ce2", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -23,11 +23,11 @@ use rustc_data_structures::fx::FxHashSet;\n use std::env;\n use std::path::Path;\n \n+use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::*;\n use syntax::ast::{self, Attribute, NodeId, PatKind};\n use syntax::print::pprust::{bounds_to_string, generic_params_to_string, ty_to_string};\n use syntax::ptr::P;\n-use syntax::source_map::{respan, DUMMY_SP};\n use syntax::token;\n use syntax::visit::{self, Visitor};\n use syntax::walk_list;"}, {"sha": "1f72d1dd847b9f6734b99c6a64252c596c87ffd5", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -26,11 +26,11 @@ use std::fs::File;\n use std::io::BufWriter;\n use std::path::{Path, PathBuf};\n \n+use rustc_span::source_map::Spanned;\n use rustc_span::*;\n use syntax::ast::{self, Attribute, NodeId, PatKind, DUMMY_NODE_ID};\n use syntax::print::pprust;\n use syntax::print::pprust::{param_to_string, ty_to_string};\n-use syntax::source_map::Spanned;\n use syntax::util::comments::strip_doc_comment_decoration;\n use syntax::visit::{self, Visitor};\n "}, {"sha": "46021f8b3991b6895346e278021078d170bc8b53", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,7 +8,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::source_map::{Span, DUMMY_SP};\n+use rustc_span::source_map::{Span, DUMMY_SP};\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { dropck_outlives, adt_dtorck_constraint, ..*p };"}, {"sha": "3ad1b223a84339b0632a257a7dca4442da05df43", "filename": "src/librustc_traits/evaluate_obligation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fevaluate_obligation.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,7 +4,7 @@ use rustc::traits::{\n };\n use rustc::ty::query::Providers;\n use rustc::ty::{ParamEnvAnd, TyCtxt};\n-use syntax::source_map::DUMMY_SP;\n+use rustc_span::source_map::DUMMY_SP;\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { evaluate_obligation, ..*p };"}, {"sha": "a58ec5bab5e981a70bcae1c29646816eb808883c", "filename": "src/librustc_traits/implied_outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,8 +12,8 @@ use rustc::ty::outlives::Component;\n use rustc::ty::query::Providers;\n use rustc::ty::wf;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::source_map::DUMMY_SP;\n use smallvec::{smallvec, SmallVec};\n-use syntax::source_map::DUMMY_SP;\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { implied_outlives_bounds, ..*p };"}, {"sha": "d23c7013b5f87d8a890755797df8c7e19af356f9", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,8 +12,8 @@ use rustc::traits::{\n use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, List, TyCtxt};\n+use rustc_span::symbol::sym;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use std::iter;\n "}, {"sha": "609ce70057d0d4503e92b7036febf8ce7aa15e3a", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -22,13 +22,13 @@ use rustc::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n use rustc::ty::wf::object_region_bounds;\n use rustc::ty::{self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::{GenericParamDef, GenericParamDefKind};\n+use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n use syntax::ast;\n use syntax::errors::pluralize;\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::sym;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use std::collections::BTreeSet;"}, {"sha": "8bff95cd49740fae36a896fe0d20f5f22ecfb991", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,10 +14,10 @@ use rustc::traits::Obligation;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, GenericParamDefKind, Ty};\n+use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use std::cmp;\n use std::iter;\n-use syntax::source_map::Span;\n \n /// What signature do we *expect* the closure to have from context?\n #[derive(Debug)]"}, {"sha": "f9cc86b85095cffc5e838a1d26bd6980dc1afe7e", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -66,11 +66,11 @@ use rustc::ty::relate::RelateResult;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TypeAndMut};\n use rustc_span;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n use smallvec::{smallvec, SmallVec};\n use std::ops::Deref;\n use syntax::feature_gate;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "773c9a26659921b5139b05143f3493bf0200af7c", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -32,9 +32,9 @@ use rustc::ty::Ty;\n use rustc::ty::TypeFoldable;\n use rustc::ty::{AdtKind, Visibility};\n use rustc_span::hygiene::DesugaringKind;\n+use rustc_span::source_map::Span;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast;\n-use syntax::source_map::Span;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use rustc_error_codes::*;"}, {"sha": "ce8edd70eb6849b88a4a69f7e039d03ea6f0db2a", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,8 +6,8 @@ use rustc::traits::{ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n \n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n-use syntax::symbol::Symbol;\n \n use rustc::hir;\n "}, {"sha": "40ea27df4ffe28e1c563b825324bee87f606eedf", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,9 +14,9 @@ use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::traits::Obligation;\n use rustc::ty::print::with_crate_prefix;\n use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n-use rustc_span::{FileName, Span};\n+use rustc_span::{source_map, FileName, Span};\n+use syntax::ast;\n use syntax::util::lev_distance;\n-use syntax::{ast, source_map};\n \n use rustc_error_codes::*;\n "}, {"sha": "43e0134ceda400bd83e9d5ba2eceed8444c8d755", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -119,13 +119,13 @@ use rustc::ty::{\n };\n use rustc_index::vec::Idx;\n use rustc_span::hygiene::DesugaringKind;\n+use rustc_span::source_map::{original_sp, DUMMY_SP};\n+use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::source_map::{original_sp, DUMMY_SP};\n-use syntax::symbol::{kw, sym, Ident};\n use syntax::util::parser::ExprPrecedence;\n \n use rustc_error_codes::*;"}, {"sha": "e0ce95aa46b8b66c642aa55045340adc3a734f18", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -10,10 +10,10 @@ use rustc::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n \n use errors::DiagnosticBuilder;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n use syntax::feature_gate;\n-use syntax::symbol::sym;\n \n use rustc::hir;\n use rustc::hir::itemlikevisit::ParItemLikeVisitor;"}, {"sha": "ecf5aa576f54df0efe6ea3ff1197e6c70b0ed548", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,8 +14,8 @@ use rustc::ty::fold::{TypeFoldable, TypeFolder};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::DefIdSet;\n use rustc_data_structures::sync::Lrc;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n use std::mem;\n "}, {"sha": "d13ddb28bf937c601508db43666a0bc010083391", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -32,12 +32,12 @@ use rustc::util::captures::Captures;\n use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::abi;\n \n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;\n use syntax::ast::{Ident, MetaItemKind};\n use syntax::attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n use syntax::feature_gate;\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};"}, {"sha": "706174041deacf7ee489a060bfd883cbcecb777d", "filename": "src/librustc_typeck/constrained_generic_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]\n pub struct Parameter(pub u32);"}, {"sha": "992781e3bcbeb05906206c22781cb39282158d5b", "filename": "src/librustc_typeck/outlives/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,8 +4,8 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::ty::query::Providers;\n use rustc::ty::subst::GenericArgKind;\n use rustc::ty::{self, CratePredicatesMap, TyCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n mod explicit;\n mod implicit_infer;"}, {"sha": "f29d2d8f42448c1206716e2d9bc5f054dead4830", "filename": "src/librustc_typeck/outlives/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "69e05772906e0d5632ddba93352917f86edea512", "filename": "src/librustc_typeck/variance/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "13df1892a5f1776305a98e2970613410be8bdc07", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,9 +8,9 @@ use std::mem;\n use std::ops;\n \n use rustc_feature::Features;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n use syntax::sess::ParseSess;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_span::Span;\n "}, {"sha": "309f72040615d162d5616050a1e9e1a859df6a41", "filename": "src/librustdoc/clean/cfg/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,9 +1,9 @@\n use super::*;\n \n+use rustc_span::symbol::Symbol;\n use rustc_span::DUMMY_SP;\n use syntax::ast::*;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n use syntax::with_default_globals;\n \n fn word_cfg(s: &str) -> Cfg {"}, {"sha": "57ec985285d593e1181f3690822883520dae4149", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,9 +3,9 @@\n use std::iter::once;\n \n use rustc_span::hygiene::MacroKind;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::DefId;"}, {"sha": "6dd89dbd7f1cea639e83b8ffec60caed5df5d8dc", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,12 +17,12 @@ use rustc::ty::layout::VariantIdx;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{self, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, AttrStyle, Ident};\n use syntax::attr;\n-use syntax::source_map::DUMMY_SP;\n use syntax::util::comments::strip_doc_comment_decoration;\n \n use crate::clean::cfg::Cfg;"}, {"sha": "4a65a9f431a44b3920113ab543c9a376bf4fe85a", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -15,8 +15,8 @@ use rustc::session::config::{parse_crate_types_from_list, parse_externs, CrateTy\n use rustc::session::config::{CodegenOptions, DebuggingOptions, ErrorOutputType, Externs};\n use rustc::session::search_paths::SearchPath;\n use rustc_driver;\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n use rustc_target::spec::TargetTriple;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n \n use crate::core::new_handler;\n use crate::externalfiles::ExternalHtml;"}, {"sha": "cb22039327e070a8e263252b05347e501f4006e2", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -17,11 +17,11 @@ use rustc_resolve as resolve;\n \n use errors::emitter::{Emitter, EmitterWriter};\n use errors::json::JsonEmitter;\n+use rustc_span::source_map;\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr;\n-use syntax::source_map;\n-use syntax::symbol::sym;\n \n use rustc_data_structures::sync::{self, Lrc};\n use std::cell::RefCell;"}, {"sha": "e0ed02c11c71a5aba491f6161ac0496e975b4f01", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,5 +1,5 @@\n use crate::html::markdown::{ErrorCodes, IdMap, Markdown, Playground};\n-use crate::syntax::edition::Edition;\n+use crate::rustc_span::edition::Edition;\n use errors;\n use rustc_feature::UnstableFeatures;\n use std::fs;"}, {"sha": "fb6bdcdc9f48bc3b1c0121b5ef13f65e55629c9d", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,10 +12,10 @@ use std::io;\n use std::io::prelude::*;\n \n use rustc_parse::lexer;\n+use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{FileName, Span};\n use syntax::sess::ParseSess;\n-use syntax::source_map::SourceMap;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n \n /// Highlights `src`, returning the HTML output."}, {"sha": "c5f88f9f7f421d5ed93aaf62fe82a57e68ab6084", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,9 +5,9 @@\n //! ```\n //! #![feature(rustc_private)]\n //!\n-//! extern crate syntax;\n+//! extern crate rustc_span;\n //!\n-//! use syntax::edition::Edition;\n+//! use rustc_span::edition::Edition;\n //! use rustdoc::html::markdown::{IdMap, Markdown, ErrorCodes};\n //!\n //! let s = \"My *markdown* _text_\";\n@@ -20,14 +20,14 @@\n #![allow(non_camel_case_types)]\n \n use rustc_data_structures::fx::FxHashMap;\n+use rustc_span::edition::Edition;\n use std::borrow::Cow;\n use std::cell::RefCell;\n use std::collections::VecDeque;\n use std::default::Default;\n use std::fmt::Write;\n use std::ops::Range;\n use std::str;\n-use syntax::edition::Edition;\n \n use crate::html::highlight;\n use crate::html::toc::TocBuilder;"}, {"sha": "48231ce7b73ef9b28694f463b36c1e5fa044a4b6", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,7 +1,7 @@\n use super::plain_summary_line;\n use super::{ErrorCodes, IdMap, Ignore, LangString, Markdown, MarkdownHtml};\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n use std::cell::RefCell;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n \n #[test]\n fn test_unique_id() {"}, {"sha": "ad059463aa43a07792fb4b9f602e103683c230ca", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -50,14 +50,14 @@ use rustc::middle::stability;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::FileName;\n+use rustc_span::symbol::{sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n use syntax::ast;\n-use syntax::edition::Edition;\n use syntax::print::pprust;\n-use syntax::source_map::FileName;\n-use syntax::symbol::{sym, Symbol};\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};\n use crate::config::RenderOptions;"}, {"sha": "6de56ec5127eda03936e6a6192781c4a5d9eb698", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,11 +3,11 @@ use crate::fold::DocFolder;\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::AccessLevels;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_span::source_map::FileName;\n+use rustc_span::symbol::sym;\n use std::collections::BTreeMap;\n use std::mem;\n use std::path::{Path, PathBuf};\n-use syntax::source_map::FileName;\n-use syntax::symbol::sym;\n \n use serde::Serialize;\n "}, {"sha": "79e7d3d783b807e422d19bab59008e9ebc7ac19a", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,10 +5,10 @@ use crate::html::format::Buffer;\n use crate::html::highlight;\n use crate::html::layout;\n use crate::html::render::{Error, SharedContext, BASIC_KEYWORDS};\n+use rustc_span::source_map::FileName;\n use std::ffi::OsStr;\n use std::fs;\n use std::path::{Component, Path, PathBuf};\n-use syntax::source_map::FileName;\n \n crate fn render(\n     dst: &Path,"}, {"sha": "69aa248aa8e987f6cfc7486afc7334391d6b21a2", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,8 +4,8 @@ use std::path::PathBuf;\n \n use errors;\n use rustc_feature::UnstableFeatures;\n-use syntax::edition::Edition;\n-use syntax::source_map::DUMMY_SP;\n+use rustc_span::edition::Edition;\n+use rustc_span::source_map::DUMMY_SP;\n use testing;\n \n use crate::config::{Options, RenderOptions};"}, {"sha": "803bcc2cfdf862ac6b9f5d8a024c0dba3d93573d", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,9 +3,9 @@ use crate::core::DocContext;\n use crate::fold::{self, DocFolder};\n use crate::passes::Pass;\n \n+use rustc_span::symbol::sym;\n use rustc_span::FileName;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n use std::collections::BTreeMap;\n use std::ops;"}, {"sha": "b568d034d89343d7769fb47c80a8203f898b3af6", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n use errors::Applicability;\n use rustc_parse::lexer::StringReader as Lexer;\n+use rustc_span::source_map::FilePathMapping;\n use rustc_span::{FileName, InnerSpan};\n use syntax::sess::ParseSess;\n-use syntax::source_map::FilePathMapping;\n use syntax::token;\n \n use crate::clean;"}, {"sha": "a8bb40a06b9893ed6650cc67451e2f129c61a6f9", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,10 +11,10 @@ use rustc::ty;\n use rustc_expand::base::SyntaxExtensionKind;\n use rustc_feature::UnstableFeatures;\n use rustc_resolve::ParentScope;\n+use rustc_span::symbol::Symbol;\n use rustc_span::DUMMY_SP;\n use syntax;\n use syntax::ast::{self, Ident};\n-use syntax::symbol::Symbol;\n \n use std::ops::Range;\n "}, {"sha": "63ad9a66a482d362567eed33cb26f9ae32f9bd09", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,7 +5,7 @@ use crate::fold::DocFolder;\n \n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub const COLLECT_TRAIT_IMPLS: Pass = Pass {\n     name: \"collect-trait-impls\","}, {"sha": "9698ad1d2312d8a21d78a35cb7f0c7c219e24fcc", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n use rustc::util::nodemap::DefIdSet;\n+use rustc_span::symbol::sym;\n use std::mem;\n-use syntax::symbol::sym;\n \n use crate::clean::Item;\n use crate::clean::{self, AttributesExt, NestedAttributesExt};"}, {"sha": "d7285b9d0bb074585b75d765463ef89775b109ea", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,6 +5,9 @@ use rustc::util::common::ErrorReported;\n use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;\n+use rustc_span::edition::Edition;\n+use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::sym;\n use rustc_span::{BytePos, FileName, Pos, Span, DUMMY_SP};\n use rustc_target::spec::TargetTriple;\n use std::env;\n@@ -14,9 +17,6 @@ use std::path::PathBuf;\n use std::process::{self, Command, Stdio};\n use std::str;\n use syntax::ast;\n-use syntax::edition::Edition;\n-use syntax::source_map::SourceMap;\n-use syntax::symbol::sym;\n use syntax::with_globals;\n use tempfile::Builder as TempFileBuilder;\n use testing;\n@@ -402,10 +402,11 @@ pub fn make_test(\n     // Uses libsyntax to parse the doctest and find if there's a main fn and the extern\n     // crate already is included.\n     let (already_has_main, already_has_extern_crate, found_macro) = with_globals(edition, || {\n-        use crate::syntax::{sess::ParseSess, source_map::FilePathMapping};\n         use errors::emitter::EmitterWriter;\n         use errors::Handler;\n         use rustc_parse::maybe_new_parser_from_source_str;\n+        use rustc_span::source_map::FilePathMapping;\n+        use syntax::sess::ParseSess;\n \n         let filename = FileName::anon_source_code(s);\n         let source = crates + &everything_else;"}, {"sha": "a96186a95e16b904cb84dfd4ef9228bab5cefeeb", "filename": "src/librustdoc/test/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Ftest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Ftest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,5 +1,5 @@\n use super::{make_test, TestOptions};\n-use syntax::edition::DEFAULT_EDITION;\n+use rustc_span::edition::DEFAULT_EDITION;\n \n #[test]\n fn make_test_basic() {"}, {"sha": "959f61644d60d711be5a22d3c7f55cca2a6583ee", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,10 +8,10 @@ use rustc::middle::privacy::AccessLevel;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::sym;\n use rustc_span::{self, Span};\n use syntax::ast;\n-use syntax::source_map::Spanned;\n-use syntax::symbol::sym;\n \n use std::mem;\n "}, {"sha": "f8f82e17e8f4c4102d3a7a21b747a0e44ec88ad6", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n use rustc::ty::{TyCtxt, Visibility};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use crate::clean::{AttributesExt, NestedAttributesExt};\n "}, {"sha": "47070261385a2d3aecd12e0313a4be10583d0281", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -25,19 +25,18 @@ pub use UnsafeSource::*;\n pub use rustc_span::symbol::{Ident, Symbol as Name};\n \n use crate::ptr::P;\n-use crate::source_map::{dummy_spanned, respan, Spanned};\n use crate::token::{self, DelimToken};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree};\n \n-use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_span::{Span, DUMMY_SP};\n-\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_index::vec::Idx;\n use rustc_macros::HashStable_Generic;\n use rustc_serialize::{self, Decoder, Encoder};\n+use rustc_span::source_map::{dummy_spanned, respan, Spanned};\n+use rustc_span::symbol::{kw, sym, Symbol};\n+use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt;\n use std::iter;"}, {"sha": "8449b61f7b0bbb61afb1e1bf34f8cd68cea85e66", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -14,15 +14,15 @@ use crate::ast::{Expr, GenericParam, Item, Lit, LitKind, Local, Stmt, StmtKind};\n use crate::ast::{MacArgs, MacDelimiter, MetaItem, MetaItemKind, NestedMetaItem};\n use crate::mut_visit::visit_clobber;\n use crate::ptr::P;\n-use crate::source_map::{BytePos, Spanned};\n-use crate::symbol::{sym, Symbol};\n use crate::token::{self, Token};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n use crate::GLOBALS;\n \n-use log::debug;\n+use rustc_span::source_map::{BytePos, Spanned};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n \n+use log::debug;\n use std::iter;\n use std::ops::DerefMut;\n "}, {"sha": "0a72019bfe986af738da8b1932e2629818da9e52", "filename": "src/libsyntax/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fentry.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n use crate::ast::{Item, ItemKind};\n use crate::attr;\n-use crate::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub enum EntryPointType {\n     None,"}, {"sha": "50712058874c44744a2262658e3c67b8004138c8", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,25 +1,24 @@\n-use rustc_feature::{find_feature_issue, GateIssue};\n-use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n-use rustc_feature::{Feature, Features, State as FeatureState, UnstableFeatures};\n-use rustc_feature::{\n-    ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n-};\n-\n use crate::ast::{self, AssocTyConstraint, AssocTyConstraintKind, NodeId};\n use crate::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n use crate::attr;\n-use crate::edition::{Edition, ALL_EDITIONS};\n use crate::sess::ParseSess;\n-use crate::source_map::Spanned;\n-use crate::symbol::{sym, Symbol};\n use crate::visit::{self, FnKind, Visitor};\n \n use errors::{Applicability, DiagnosticBuilder, Handler};\n-use log::debug;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_error_codes::*;\n+use rustc_feature::{find_feature_issue, GateIssue};\n+use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n+use rustc_feature::{Feature, Features, State as FeatureState, UnstableFeatures};\n+use rustc_feature::{\n+    ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n+};\n+use rustc_span::edition::{Edition, ALL_EDITIONS};\n+use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n \n-use rustc_error_codes::*;\n+use log::debug;\n \n macro_rules! gate_feature_fn {\n     ($cx: expr, $has_feature: expr, $span: expr, $name: expr, $explain: expr, $level: expr) => {{"}, {"sha": "0b0a19517ec1aef1f7fd1b67f4ca8c3c43c6ae25", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -21,7 +21,7 @@ use ast::AttrId;\n pub use errors;\n use rustc_data_structures::sync::Lock;\n use rustc_index::bit_set::GrowableBitSet;\n-use rustc_span::edition::Edition;\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n \n #[macro_export]\n macro_rules! unwrap_or {\n@@ -51,19 +51,13 @@ impl Globals {\n     }\n }\n \n-pub fn with_globals<F, R>(edition: Edition, f: F) -> R\n-where\n-    F: FnOnce() -> R,\n-{\n+pub fn with_globals<R>(edition: Edition, f: impl FnOnce() -> R) -> R {\n     let globals = Globals::new(edition);\n     GLOBALS.set(&globals, || rustc_span::GLOBALS.set(&globals.rustc_span_globals, f))\n }\n \n-pub fn with_default_globals<F, R>(f: F) -> R\n-where\n-    F: FnOnce() -> R,\n-{\n-    with_globals(edition::DEFAULT_EDITION, f)\n+pub fn with_default_globals<R>(f: impl FnOnce() -> R) -> R {\n+    with_globals(DEFAULT_EDITION, f)\n }\n \n scoped_tls::scoped_thread_local!(pub static GLOBALS: Globals);\n@@ -86,9 +80,8 @@ pub mod util {\n \n pub mod ast;\n pub mod attr;\n-pub mod expand;\n-pub use rustc_span::source_map;\n pub mod entry;\n+pub mod expand;\n pub mod feature_gate {\n     mod check;\n     pub use check::{check_attribute, check_crate, feature_err, feature_err_issue, get_features};\n@@ -97,8 +90,6 @@ pub mod mut_visit;\n pub mod ptr;\n pub mod show_span;\n pub use rustc_session::parse as sess;\n-pub use rustc_span::edition;\n-pub use rustc_span::symbol;\n pub mod token;\n pub mod tokenstream;\n pub mod visit;"}, {"sha": "1413f1566d0438f5ebe3d028e9183c3b9aa1770b", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,15 +9,15 @@\n \n use crate::ast::*;\n use crate::ptr::P;\n-use crate::source_map::{respan, Spanned};\n use crate::token::{self, Token};\n use crate::tokenstream::*;\n use crate::util::map_in_place::MapInPlace;\n \n+use rustc_data_structures::sync::Lrc;\n+use rustc_span::source_map::{respan, Spanned};\n use rustc_span::Span;\n-use smallvec::{smallvec, Array, SmallVec};\n \n-use rustc_data_structures::sync::Lrc;\n+use smallvec::{smallvec, Array, SmallVec};\n use std::ops::DerefMut;\n use std::{panic, process, ptr};\n "}, {"sha": "dd9976510dccfff68bb85ea7520dab2fb276d830", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,16 +6,15 @@ use crate::print::pp::Breaks::{Consistent, Inconsistent};\n use crate::print::pp::{self, Breaks};\n use crate::ptr::P;\n use crate::sess::ParseSess;\n-use crate::source_map::{self, SourceMap, Spanned};\n-use crate::symbol::{kw, sym};\n use crate::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n use crate::tokenstream::{self, TokenStream, TokenTree};\n use crate::util::classify;\n use crate::util::comments;\n use crate::util::parser::{self, AssocOp, Fixity};\n \n-use rustc_span::{self, BytePos};\n-use rustc_span::{FileName, Span};\n+use rustc_span::source_map::{dummy_spanned, SourceMap, Spanned};\n+use rustc_span::symbol::{kw, sym};\n+use rustc_span::{BytePos, FileName, Span};\n \n use std::borrow::Cow;\n \n@@ -2709,7 +2708,7 @@ impl<'a> State<'a> {\n             ast::FnHeader { unsafety, ext, ..ast::FnHeader::default() },\n             name,\n             &generics,\n-            &source_map::dummy_spanned(ast::VisibilityKind::Inherited),\n+            &dummy_spanned(ast::VisibilityKind::Inherited),\n         );\n         self.end();\n     }"}, {"sha": "3091e3155805bd975659e3013602b02231de57fc", "filename": "src/libsyntax/print/pprust/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,9 +1,9 @@\n use super::*;\n \n use crate::ast;\n-use crate::source_map;\n use crate::with_default_globals;\n use rustc_span;\n+use rustc_span::source_map::{dummy_spanned, respan};\n \n fn fun_to_string(\n     decl: &ast::FnDecl,\n@@ -18,7 +18,7 @@ fn fun_to_string(\n             header,\n             Some(name),\n             generics,\n-            &source_map::dummy_spanned(ast::VisibilityKind::Inherited),\n+            &dummy_spanned(ast::VisibilityKind::Inherited),\n         );\n         s.end(); // Close the head box.\n         s.end(); // Close the outer box.\n@@ -53,7 +53,7 @@ fn test_variant_to_string() {\n \n         let var = ast::Variant {\n             ident,\n-            vis: source_map::respan(rustc_span::DUMMY_SP, ast::VisibilityKind::Inherited),\n+            vis: respan(rustc_span::DUMMY_SP, ast::VisibilityKind::Inherited),\n             attrs: Vec::new(),\n             id: ast::DUMMY_NODE_ID,\n             data: ast::VariantData::Unit(ast::DUMMY_NODE_ID),"}, {"sha": "14279561cbb8de0fcb41ee095cf7374bb7c50fbd", "filename": "src/libsyntax/token.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,15 +6,14 @@ pub use TokenKind::*;\n \n use crate::ast;\n use crate::ptr::P;\n-use crate::symbol::kw;\n use crate::tokenstream::TokenTree;\n \n-use rustc_span::symbol::Symbol;\n-use rustc_span::{self, Span, DUMMY_SP};\n-\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_macros::HashStable_Generic;\n+use rustc_span::symbol::kw;\n+use rustc_span::symbol::Symbol;\n+use rustc_span::{self, Span, DUMMY_SP};\n use std::fmt;\n use std::mem;\n "}, {"sha": "c385b498ced72ab5e389e560b3f366c65b36a9b7", "filename": "src/libsyntax/util/comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fcomments.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,8 +2,8 @@ pub use CommentStyle::*;\n \n use crate::ast;\n use crate::sess::ParseSess;\n-use crate::source_map::SourceMap;\n \n+use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, CharPos, FileName, Pos};\n \n use std::usize;"}, {"sha": "fc697026fe4f8352a81d0fc0441e46a30abfa3b5", "filename": "src/libsyntax/util/lev_distance.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Flev_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Flev_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Flev_distance.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,4 +1,6 @@\n-use crate::symbol::Symbol;\n+// FIXME(Centril): Move to rustc_span?\n+\n+use rustc_span::symbol::Symbol;\n use std::cmp;\n \n #[cfg(test)]"}, {"sha": "dd06c25b4de0f61533be3267661e164eab96bcb4", "filename": "src/libsyntax/util/literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fliteral.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,17 +1,17 @@\n //! Code related to parsing literals.\n \n use crate::ast::{self, Lit, LitKind};\n-use crate::symbol::{kw, sym, Symbol};\n use crate::token::{self, Token};\n use crate::tokenstream::TokenTree;\n \n-use log::debug;\n use rustc_data_structures::sync::Lrc;\n use rustc_lexer::unescape::{unescape_byte, unescape_char};\n use rustc_lexer::unescape::{unescape_byte_str, unescape_str};\n use rustc_lexer::unescape::{unescape_raw_byte_str, unescape_raw_str};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n \n+use log::debug;\n use std::ascii;\n \n pub enum LitError {"}, {"sha": "a237a6e6162c05d401d27498db902734037f32f9", "filename": "src/libsyntax/util/map_in_place.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fmap_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fmap_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fmap_in_place.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,3 +1,5 @@\n+// FIXME(Centril): Move to rustc_data_structures.\n+\n use smallvec::{Array, SmallVec};\n use std::ptr;\n "}, {"sha": "a0ed89a9caef17f04e0181bca05b176774b0e65e", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,6 +1,6 @@\n use crate::ast::{self, BinOpKind};\n-use crate::symbol::kw;\n use crate::token::{self, BinOpToken, Token};\n+use rustc_span::symbol::kw;\n \n /// Associative operator with precedence.\n ///"}, {"sha": "7320a97b9979a3b90ab89f82fe1526064af868d0", "filename": "src/test/incremental/change_implementation_cross_crate/auxiliary/a.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fauxiliary%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fauxiliary%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fauxiliary%2Fa.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,31 @@\n+#![allow(warnings)]\n+#![crate_name = \"a\"]\n+#![crate_type = \"rlib\"]\n+\n+#[cfg(rpass1)]\n+#[inline(never)]\n+pub fn foo(b: u8) -> u32 {\n+    b as u32\n+}\n+\n+#[cfg(rpass2)]\n+#[inline(never)]\n+pub fn foo(b: u8) -> u32 {\n+    (b + 42) as u32\n+}\n+\n+pub fn bar(b: u8) -> u32 {\n+    bar_impl(b) as u32\n+}\n+\n+#[cfg(rpass1)]\n+#[inline(never)]\n+fn bar_impl(b: u8) -> u16 {\n+    b as u16\n+}\n+\n+#[cfg(rpass2)]\n+#[inline(never)]\n+fn bar_impl(b: u8) -> u32 {\n+    (b + 42) as u32\n+}"}, {"sha": "dee9ebd74a89f1850d950dad87a1f11d4fa35466", "filename": "src/test/incremental/change_implementation_cross_crate/main.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_implementation_cross_crate%2Fmain.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,20 @@\n+// Test that we are able to reuse `main` despite the changes in the implementation of `foo` and\n+// `bar`.\n+\n+// revisions: rpass1 rpass2\n+// aux-build: a.rs\n+// compile-flags: -Zquery-dep-graph\n+\n+#![feature(rustc_attrs)]\n+#![crate_type = \"bin\"]\n+#![rustc_partition_reused(module = \"main\", cfg = \"rpass2\")]\n+\n+extern crate a;\n+\n+pub fn main() {\n+    let vec: Vec<u8> = vec![0, 1, 2, 3];\n+    for b in vec {\n+        println!(\"{}\", a::foo(b));\n+        println!(\"{}\", a::bar(b));\n+    }\n+}"}, {"sha": "84b8c7c6e43c75c9d3fb8e8bf4509a8e024662a7", "filename": "src/test/run-make-fulldeps/hotplug_codegen_backend/the_backend.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,17 +1,17 @@\n #![feature(rustc_private)]\n \n-extern crate syntax;\n extern crate rustc;\n extern crate rustc_codegen_utils;\n #[macro_use]\n extern crate rustc_data_structures;\n extern crate rustc_target;\n extern crate rustc_driver;\n+extern crate rustc_span;\n \n use std::any::Any;\n use std::sync::Arc;\n use std::path::Path;\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n use rustc::session::Session;\n use rustc::session::config::OutputFilenames;\n use rustc::ty::TyCtxt;"}, {"sha": "12da64fc88f189cfc291d1705db2b75b52f847c8", "filename": "src/test/run-make-fulldeps/issue-19371/foo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,13 +3,13 @@\n extern crate rustc;\n extern crate rustc_interface;\n extern crate rustc_driver;\n-extern crate syntax;\n+extern crate rustc_span;\n \n use rustc::session::DiagnosticOutput;\n use rustc::session::config::{Input, Options,\n                              OutputType, OutputTypes};\n use rustc_interface::interface;\n-use syntax::source_map::FileName;\n+use rustc_span::source_map::FileName;\n \n use std::path::PathBuf;\n "}, {"sha": "6163f270fe313c4e5aa8da81bdeb21838607e540", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,13 +4,14 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_span;\n extern crate syntax;\n \n-use rustc_driver::plugin::Registry;\n use rustc::hir::{self, intravisit, Node};\n use rustc::lint::{LateContext, LintPass, LintArray, LateLintPass, LintContext};\n+use rustc_driver::plugin::Registry;\n+use rustc_span::source_map;\n use syntax::print::pprust;\n-use syntax::source_map;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {"}, {"sha": "47751f4711f4d2abd441871a8e2d7187d2a04ded", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate-rpass.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,13 +5,14 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_span;\n extern crate syntax;\n \n+use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass};\n use rustc_driver::plugin::Registry;\n-use rustc::hir;\n+use rustc_span::symbol::Symbol;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n \n macro_rules! fake_lint_pass {\n     ($struct:ident, $($attr:expr),*) => {"}, {"sha": "4821c9b02fe191aedd373bac0c8fc043396a7c4e", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,13 +6,14 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_span;\n extern crate syntax;\n \n+use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LintArray};\n use rustc_driver::plugin::Registry;\n-use rustc::hir;\n+use rustc_span::symbol::Symbol;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n \n declare_lint! {\n     CRATE_NOT_OKAY,"}, {"sha": "2b4a9fb21e4c7aaa1f4e72d74e61dcd2e4f7c6c1", "filename": "src/test/ui-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -6,11 +6,12 @@\n \n extern crate syntax;\n extern crate rustc_parse;\n+extern crate rustc_span;\n \n use rustc_parse::new_parser_from_file;\n+use rustc_span::source_map::FilePathMapping;\n use std::path::Path;\n use syntax::sess::ParseSess;\n-use syntax::source_map::FilePathMapping;\n \n #[path = \"mod_dir_simple/test.rs\"]\n mod gravy;"}, {"sha": "04d1054e2877f9347d0965c9dd2ed2e726b947d9", "filename": "src/test/ui-fulldeps/pprust-expr-roundtrip.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -22,13 +22,14 @@\n extern crate rustc_data_structures;\n extern crate syntax;\n extern crate rustc_parse;\n+extern crate rustc_span;\n \n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_parse::new_parser_from_source_str;\n+use rustc_span::source_map::{Spanned, DUMMY_SP, FileName};\n+use rustc_span::source_map::FilePathMapping;\n use syntax::ast::*;\n use syntax::sess::ParseSess;\n-use syntax::source_map::{Spanned, DUMMY_SP, FileName};\n-use syntax::source_map::FilePathMapping;\n use syntax::mut_visit::{self, MutVisitor, visit_clobber};\n use syntax::print::pprust;\n use syntax::ptr::P;"}, {"sha": "87965c204ada7e9f131c0d848a6345cc2b07d90b", "filename": "src/test/ui/issues/issue-48508.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-48508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-48508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48508.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,6 +11,7 @@\n // ignore-asmjs wasm2js does not support source maps yet\n \n #![feature(non_ascii_idents)]\n+#[allow(uncommon_codepoints)]\n \n #[path = \"issue-48508-aux.rs\"]\n mod other_file;"}, {"sha": "20e84ec364b65bbcbb75f9bdf0e0f1fde3b3403e", "filename": "src/test/ui/issues/issue-62554.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,4 +2,4 @@ fn main() {}\n \n fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n //~^ ERROR expected `{`, found `macro_rules`\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "692bfe02275a8114c5dadf0d860f651545049d29", "filename": "src/test/ui/issues/issue-62554.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,15 +1,15 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/issue-62554.rs:5:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-62554.rs:5:52\n    |\n LL | fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n-   |               -                       -         -                  -                  - un-closed delimiter\n+   |               -                       -         -                  -                  - unclosed delimiter\n    |               |                       |         |                  |\n-   |               |                       |         |                  un-closed delimiter\n-   |               |                       |         un-closed delimiter\n-   |               un-closed delimiter     un-closed delimiter\n+   |               |                       |         |                  unclosed delimiter\n+   |               |                       |         unclosed delimiter\n+   |               unclosed delimiter      unclosed delimiter\n LL |\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: expected `{`, found `macro_rules`\n   --> $DIR/issue-62554.rs:3:23"}, {"sha": "7ac0d035d5bf1eb146367728ef84c92103f91bdc", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-uncommon-codepoints.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,11 @@\n+#![feature(non_ascii_idents)]\n+#![deny(uncommon_codepoints)]\n+\n+const \u00b5: f64 = 0.000001; //~ ERROR identifier contains uncommon Unicode codepoints\n+\n+fn d\u0133kstra() {} //~ ERROR identifier contains uncommon Unicode codepoints\n+\n+fn main() {\n+    let \u31fb\u31f2\u31f3 = \"rust\"; //~ ERROR identifier contains uncommon Unicode codepoints\n+    println!(\"{}\", \u31fb\u31f2\u31f3); //~ ERROR identifier contains uncommon Unicode codepoints\n+}"}, {"sha": "4580d25665ef9d33f7df47529571a3470e86a632", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-uncommon-codepoints.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,32 @@\n+error: identifier contains uncommon Unicode codepoints\n+  --> $DIR/lint-uncommon-codepoints.rs:4:7\n+   |\n+LL | const \u00b5: f64 = 0.000001;\n+   |       ^\n+   |\n+note: lint level defined here\n+  --> $DIR/lint-uncommon-codepoints.rs:2:9\n+   |\n+LL | #![deny(uncommon_codepoints)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: identifier contains uncommon Unicode codepoints\n+  --> $DIR/lint-uncommon-codepoints.rs:6:4\n+   |\n+LL | fn d\u0133kstra() {}\n+   |    ^^^^^^^\n+\n+error: identifier contains uncommon Unicode codepoints\n+  --> $DIR/lint-uncommon-codepoints.rs:9:9\n+   |\n+LL |     let \u31fb\u31f2\u31f3 = \"rust\";\n+   |         ^^^^^^\n+\n+error: identifier contains uncommon Unicode codepoints\n+  --> $DIR/lint-uncommon-codepoints.rs:10:20\n+   |\n+LL |     println!(\"{}\", \u31fb\u31f2\u31f3);\n+   |                    ^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "dcc0dc00a72eaf933716475228339d10aceb7de4", "filename": "src/test/ui/parser-recovery-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -12,4 +12,4 @@ fn main() {\n     let x = y.;\n     //~^ ERROR unexpected token\n     //~| ERROR cannot find value `y` in this scope\n-} //~ ERROR this file contains an un-closed delimiter\n+} //~ ERROR this file contains an unclosed delimiter"}, {"sha": "4d881918c40ccc79aa634313f99d0facd50e195d", "filename": "src/test/ui/parser-recovery-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,16 +1,16 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/parser-recovery-1.rs:15:55\n+error: this file contains an unclosed delimiter\n+  --> $DIR/parser-recovery-1.rs:15:54\n    |\n LL | trait Foo {\n-   |           - un-closed delimiter\n+   |           - unclosed delimiter\n LL |     fn bar() {\n    |              - this delimiter might not be properly closed...\n ...\n LL | }\n    | - ...as it matches this but it has different indentation\n ...\n LL | }\n-   |                                                       ^\n+   |                                                      ^\n \n error: unexpected token: `;`\n   --> $DIR/parser-recovery-1.rs:12:15"}, {"sha": "dc5be96cc6405fb152074cfac7aa4332af4b6131", "filename": "src/test/ui/parser-recovery-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-2.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,7 +5,7 @@\n trait Foo {\n     fn bar() {\n         let x = foo(); //~ ERROR cannot find function `foo` in this scope\n-    ) //~ ERROR incorrect close delimiter: `)`\n+    ) //~ ERROR mismatched closing delimiter: `)`\n }\n \n fn main() {"}, {"sha": "c48211d4064793e7948342dc45641725cf50c0a1", "filename": "src/test/ui/parser-recovery-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-2.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,14 +4,14 @@ error: unexpected token: `;`\n LL |     let x = y.;\n    |               ^\n \n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/parser-recovery-2.rs:8:5\n    |\n LL |     fn bar() {\n-   |              - un-closed delimiter\n+   |              - unclosed delimiter\n LL |         let x = foo();\n LL |     )\n-   |     ^ incorrect close delimiter\n+   |     ^ mismatched closing delimiter\n \n error[E0425]: cannot find function `foo` in this scope\n   --> $DIR/parser-recovery-2.rs:7:17"}, {"sha": "77c6072d6fc0a66352451219853b3e986dc3c3ed", "filename": "src/test/ui/parser/issue-10636-1.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n struct Obj {\n-    //~^ NOTE: un-closed delimiter\n+    //~^ NOTE: unclosed delimiter\n     member: usize\n )\n-//~^ ERROR incorrect close delimiter\n-//~| NOTE incorrect close delimiter\n+//~^ ERROR mismatched closing delimiter\n+//~| NOTE mismatched closing delimiter\n \n fn main() {}"}, {"sha": "ff90cb97096f71cce38cf5f103fc755918a03ca9", "filename": "src/test/ui/parser/issue-10636-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/issue-10636-1.rs:4:1\n    |\n LL | struct Obj {\n-   |            - un-closed delimiter\n+   |            - unclosed delimiter\n ...\n LL | )\n-   | ^ incorrect close delimiter\n+   | ^ mismatched closing delimiter\n \n error: aborting due to previous error\n "}, {"sha": "996cf1bcbf920269e750d4222ad194ce9f46ec6b", "filename": "src/test/ui/parser/issue-2354-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1 +1 @@\n-static foo: isize = 2; } //~ ERROR unexpected close delimiter:\n+static foo: isize = 2; } //~ ERROR unexpected closing delimiter:"}, {"sha": "7ea0f2a982855037d8236ef5136538ebba305f46", "filename": "src/test/ui/parser/issue-2354-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n-error: unexpected close delimiter: `}`\n+error: unexpected closing delimiter: `}`\n   --> $DIR/issue-2354-1.rs:1:24\n    |\n LL | static foo: isize = 2; }\n-   |                        ^ unexpected close delimiter\n+   |                        ^ unexpected closing delimiter\n \n error: aborting due to previous error\n "}, {"sha": "c422040cbe3003eb787ccf79fd7976ba08ebe943", "filename": "src/test/ui/parser/issue-2354.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,4 +1,4 @@\n-fn foo() { //~ NOTE un-closed delimiter\n+fn foo() { //~ NOTE unclosed delimiter\n   match Some(10) {\n   //~^ NOTE this delimiter might not be properly closed...\n       Some(y) => { panic!(); }\n@@ -12,4 +12,4 @@ fn bar() {\n }\n \n fn main() {}\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "b89ed3958357df5bdeef5954510caecb9caf1edf", "filename": "src/test/ui/parser/issue-2354.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,16 +1,16 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/issue-2354.rs:15:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-2354.rs:15:52\n    |\n LL | fn foo() {\n-   |          - un-closed delimiter\n+   |          - unclosed delimiter\n LL |   match Some(10) {\n    |                  - this delimiter might not be properly closed...\n ...\n LL | }\n    | - ...as it matches this but it has different indentation\n ...\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: aborting due to previous error\n "}, {"sha": "00f6652b311da4e6f9544c7fd8b3bd1cbd2f163e", "filename": "src/test/ui/parser/issue-58094-missing-right-square-bracket.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/issue-58094-missing-right-square-bracket.rs:4:4\n    |\n LL | #[\u0405\n    |  - ^\n    |  |\n-   |  un-closed delimiter\n+   |  unclosed delimiter\n \n error: expected item after attributes\n   --> $DIR/issue-58094-missing-right-square-bracket.rs:4:4"}, {"sha": "3482435cd1d03cb392999eb755421fb7ab5ce8e4", "filename": "src/test/ui/parser/issue-62524.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62524.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62524.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62524.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/issue-62524.rs:4:3\n    |\n LL | y![\n-   |   - un-closed delimiter\n+   |   - unclosed delimiter\n LL | \u03e4,\n    |   ^\n "}, {"sha": "f06b6505859cf0917149634556ac82000a01c6a4", "filename": "src/test/ui/parser/issue-62546.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62546.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,3 +1,3 @@\n pub t(#\n //~^ ERROR missing `fn` or `struct` for function or struct definition\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "32c61391e16821ffe34da7d4f8509ed3270eee81", "filename": "src/test/ui/parser/issue-62546.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62546.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/issue-62546.rs:3:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-62546.rs:3:52\n    |\n LL | pub t(#\n-   |      - un-closed delimiter\n+   |      - unclosed delimiter\n LL |\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: missing `fn` or `struct` for function or struct definition\n   --> $DIR/issue-62546.rs:1:4"}, {"sha": "b9204595fb97180d9f4cacf45fd3f7f50280a38a", "filename": "src/test/ui/parser/issue-62881.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,4 +3,4 @@ fn main() {}\n fn f() -> isize { fn f() -> isize {} pub f<\n //~^ ERROR missing `fn` or `struct` for function or struct definition\n //~| ERROR mismatched types\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "87be69baadda57a9b9686c9f15471126c2e3af33", "filename": "src/test/ui/parser/issue-62881.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/issue-62881.rs:6:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-62881.rs:6:52\n    |\n LL | fn f() -> isize { fn f() -> isize {} pub f<\n-   |                 - un-closed delimiter\n+   |                 - unclosed delimiter\n ...\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: missing `fn` or `struct` for function or struct definition\n   --> $DIR/issue-62881.rs:3:41"}, {"sha": "e95e629957c26b0fc20ac2bab4e479cfb8c07137", "filename": "src/test/ui/parser/issue-62973.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/issue-62973.rs:8:2\n    |\n LL | fn p() { match s { v, E { [) {) }\n-   |        -         - un-closed delimiter\n+   |        -         - unclosed delimiter\n    |        |\n-   |        un-closed delimiter\n+   |        unclosed delimiter\n LL | \n LL | \n    |  ^\n@@ -44,21 +44,21 @@ LL |\n LL | \n    |  ^ expected one of `.`, `?`, `{`, or an operator\n \n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/issue-62973.rs:6:28\n    |\n LL | fn p() { match s { v, E { [) {) }\n-   |                           -^ incorrect close delimiter\n+   |                           -^ mismatched closing delimiter\n    |                           |\n-   |                           un-closed delimiter\n+   |                           unclosed delimiter\n \n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/issue-62973.rs:6:31\n    |\n LL | fn p() { match s { v, E { [) {) }\n-   |                              -^ incorrect close delimiter\n+   |                              -^ mismatched closing delimiter\n    |                              |\n-   |                              un-closed delimiter\n+   |                              unclosed delimiter\n \n error: aborting due to 6 previous errors\n "}, {"sha": "2beb73d83d261c877639c3ebdf00eb4f801d27ac", "filename": "src/test/ui/parser/issue-63116.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/issue-63116.rs:3:18\n    |\n LL | impl W <s(f;Y(;]\n    |          -       ^\n    |          |\n-   |          un-closed delimiter\n+   |          unclosed delimiter\n \n error: expected one of `!`, `(`, `)`, `+`, `,`, `::`, or `<`, found `;`\n   --> $DIR/issue-63116.rs:3:12"}, {"sha": "a6fb037b299f535f9755d29f2e27c6a2f234dd84", "filename": "src/test/ui/parser/issue-63135.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/issue-63135.rs:3:16\n    |\n LL | fn i(n{...,f #\n    |     - -        ^\n    |     | |\n-   |     | un-closed delimiter\n-   |     un-closed delimiter\n+   |     | unclosed delimiter\n+   |     unclosed delimiter\n \n error: expected field pattern, found `...`\n   --> $DIR/issue-63135.rs:3:8"}, {"sha": "404aa7b806a51c16aed0be7712dff4b3d84a4906", "filename": "src/test/ui/parser/macro-mismatched-delim-brace-paren.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,5 +3,5 @@ macro_rules! foo { ($($tt:tt)*) => () }\n fn main() {\n     foo! {\n         bar, \"baz\", 1, 2.0\n-    ) //~ ERROR incorrect close delimiter\n+    ) //~ ERROR mismatched closing delimiter\n }"}, {"sha": "93c5ab383d48804bf44999e82ca67cda69ea0f69", "filename": "src/test/ui/parser/macro-mismatched-delim-brace-paren.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-brace-paren.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/macro-mismatched-delim-brace-paren.rs:6:5\n    |\n LL |     foo! {\n-   |          - un-closed delimiter\n+   |          - unclosed delimiter\n LL |         bar, \"baz\", 1, 2.0\n LL |     )\n-   |     ^ incorrect close delimiter\n+   |     ^ mismatched closing delimiter\n \n error: aborting due to previous error\n "}, {"sha": "1a1b9edfbcb66fa9bdf51c88f0b07318f56fbb83", "filename": "src/test/ui/parser/macro-mismatched-delim-paren-brace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     foo! (\n         bar, \"baz\", 1, 2.0\n-    } //~ ERROR incorrect close delimiter\n-} //~ ERROR unexpected close delimiter: `}`\n+    } //~ ERROR mismatched closing delimiter\n+} //~ ERROR unexpected closing delimiter: `}`"}, {"sha": "042142ac35033fdd4393ad769779710edc7ccfc4", "filename": "src/test/ui/parser/macro-mismatched-delim-paren-brace.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro-mismatched-delim-paren-brace.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,17 +1,17 @@\n-error: unexpected close delimiter: `}`\n+error: unexpected closing delimiter: `}`\n   --> $DIR/macro-mismatched-delim-paren-brace.rs:5:1\n    |\n LL | }\n-   | ^ unexpected close delimiter\n+   | ^ unexpected closing delimiter\n \n-error: incorrect close delimiter: `}`\n+error: mismatched closing delimiter: `}`\n   --> $DIR/macro-mismatched-delim-paren-brace.rs:4:5\n    |\n LL |     foo! (\n-   |          - un-closed delimiter\n+   |          - unclosed delimiter\n LL |         bar, \"baz\", 1, 2.0\n LL |     }\n-   |     ^ incorrect close delimiter\n+   |     ^ mismatched closing delimiter\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c5b3cc275ce9ac463c9a3f8da636d35f01ebef9a", "filename": "src/test/ui/parser/mbe_missing_right_paren.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmbe_missing_right_paren.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmbe_missing_right_paren.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmbe_missing_right_paren.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/mbe_missing_right_paren.rs:3:19\n    |\n LL | macro_rules! abc(\u063c\n    |                 - ^\n    |                 |\n-   |                 un-closed delimiter\n+   |                 unclosed delimiter\n \n error: macros that expand to items must be delimited with braces or followed by a semicolon\n   --> $DIR/mbe_missing_right_paren.rs:3:17"}, {"sha": "9f02a7a997bf200a8fd62e9bf2fd4ba39ad1be4b", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-impl-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,4 +9,4 @@ trait T { //~ ERROR expected one of\n pub(crate) struct Bar<T>();\n \n fn main() {}\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "a23cfeac58f8476fcd7503246fa086451ff04ad3", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-impl-trait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/missing-close-brace-in-impl-trait.rs:12:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/missing-close-brace-in-impl-trait.rs:12:52\n    |\n LL | impl T for () {\n-   |               - un-closed delimiter\n+   |               - unclosed delimiter\n ...\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: expected one of `async`, `const`, `crate`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found keyword `trait`\n   --> $DIR/missing-close-brace-in-impl-trait.rs:5:1"}, {"sha": "0d53315839cebbd7b0d61383aba31c58163a8a39", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,4 +11,4 @@ impl T for Bar<usize> {\n fn foo(&self) {}\n }\n \n-fn main() {} //~ ERROR this file contains an un-closed delimiter\n+fn main() {} //~ ERROR this file contains an unclosed delimiter"}, {"sha": "ac8dd48a588791f6f50019366a3bda2556c389c3", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/missing-close-brace-in-struct.rs:14:66\n+error: this file contains an unclosed delimiter\n+  --> $DIR/missing-close-brace-in-struct.rs:14:65\n    |\n LL | pub(crate) struct Bar<T> {\n-   |                          - un-closed delimiter\n+   |                          - unclosed delimiter\n ...\n LL | fn main() {}\n-   |                                                                  ^\n+   |                                                                 ^\n \n error: expected identifier, found keyword `trait`\n   --> $DIR/missing-close-brace-in-struct.rs:4:1"}, {"sha": "5ec5d45bbe7b2cddfb69bd7af8ae5f1ecb9041e6", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -9,4 +9,4 @@ impl T for Bar<usize> {\n fn foo(&self) {}\n }\n \n-fn main() {} //~ ERROR this file contains an un-closed delimiter\n+fn main() {} //~ ERROR this file contains an unclosed delimiter"}, {"sha": "213640127829cc473aed86607be31dd338e665f1", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-trait.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/missing-close-brace-in-trait.rs:12:66\n+error: this file contains an unclosed delimiter\n+  --> $DIR/missing-close-brace-in-trait.rs:12:65\n    |\n LL | trait T {\n-   |         - un-closed delimiter\n+   |         - unclosed delimiter\n ...\n LL | fn main() {}\n-   |                                                                  ^\n+   |                                                                 ^\n \n error: expected one of `async`, `const`, `default`, `extern`, `fn`, `type`, or `unsafe`, found keyword `struct`\n   --> $DIR/missing-close-brace-in-trait.rs:5:12\n@@ -23,7 +23,7 @@ LL | |\n ...  |\n LL | |\n LL | | fn main() {}\n-   | |_________________________________________________________________^ consider adding a `main` function to `$DIR/missing-close-brace-in-trait.rs`\n+   | |________________________________________________________________^ consider adding a `main` function to `$DIR/missing-close-brace-in-trait.rs`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "61d7a9af2235923933854b7199b5366c0bcc9702", "filename": "src/test/ui/parser/mismatched-delim-brace-empty-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,4 +2,4 @@ fn main() {\n \n }\n     let _ = ();\n-} //~ ERROR unexpected close delimiter\n+} //~ ERROR unexpected closing delimiter"}, {"sha": "311f1768d829c7ff6273c7185280a12033d870ed", "filename": "src/test/ui/parser/mismatched-delim-brace-empty-block.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,4 +1,4 @@\n-error: unexpected close delimiter: `}`\n+error: unexpected closing delimiter: `}`\n   --> $DIR/mismatched-delim-brace-empty-block.rs:5:1\n    |\n LL |   fn main() {\n@@ -8,7 +8,7 @@ LL | | }\n    | |_- this block is empty, you might have not meant to close it\n LL |       let _ = ();\n LL |   }\n-   |   ^ unexpected close delimiter\n+   |   ^ unexpected closing delimiter\n \n error: aborting due to previous error\n "}, {"sha": "c98b6bb6991c7af135430c2e761a7ac7d9556e0f", "filename": "src/test/ui/parser/missing_right_paren.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: this file contains an un-closed delimiter\n+error: this file contains an unclosed delimiter\n   --> $DIR/missing_right_paren.rs:3:11\n    |\n LL | fn main((\u063c\n    |        -- ^\n    |        ||\n-   |        |un-closed delimiter\n-   |        un-closed delimiter\n+   |        |unclosed delimiter\n+   |        unclosed delimiter\n \n error: expected one of `:` or `|`, found `)`\n   --> $DIR/missing_right_paren.rs:3:11"}, {"sha": "ed94fff3864380230ad7ffb1cc2ff3575f8b3801", "filename": "src/test/ui/parser/unclosed-braces.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -11,12 +11,12 @@ fn foo() {\n }\n \n fn main() {\n-//~^ NOTE un-closed delimiter\n+//~^ NOTE unclosed delimiter\n     {\n         {\n         //~^ NOTE this delimiter might not be properly closed...\n             foo();\n     }\n     //~^ NOTE ...as it matches this but it has different indentation\n }\n-//~ ERROR this file contains an un-closed delimiter\n+//~ ERROR this file contains an unclosed delimiter"}, {"sha": "cbc5f8de4c3a711127466f62688d7d6f7bf2338c", "filename": "src/test/ui/parser/unclosed-braces.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/unclosed-braces.rs:22:53\n+error: this file contains an unclosed delimiter\n+  --> $DIR/unclosed-braces.rs:22:52\n    |\n LL | fn main() {\n-   |           - un-closed delimiter\n+   |           - unclosed delimiter\n ...\n LL |         {\n    |         - this delimiter might not be properly closed...\n@@ -11,7 +11,7 @@ LL |     }\n    |     - ...as it matches this but it has different indentation\n ...\n LL |\n-   |                                                     ^\n+   |                                                    ^\n \n error: aborting due to previous error\n "}, {"sha": "a32a27bf987cd9bc9fc47420ec93e8c96e8486c7", "filename": "src/test/ui/parser/unclosed-delimiter-in-dep.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-delimiter-in-dep.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed-delimiter-in-dep.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed-delimiter-in-dep.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,13 +1,13 @@\n-error: incorrect close delimiter: `}`\n+error: mismatched closing delimiter: `}`\n   --> $DIR/unclosed_delim_mod.rs:7:1\n    |\n LL | pub fn new() -> Result<Value, ()> {\n-   |                                   - close delimiter possibly meant for this\n+   |                                   - closing delimiter possibly meant for this\n LL |     Ok(Value {\n-   |       - un-closed delimiter\n+   |       - unclosed delimiter\n LL |     }\n LL | }\n-   | ^ incorrect close delimiter\n+   | ^ mismatched closing delimiter\n \n error[E0308]: mismatched types\n   --> $DIR/unclosed-delimiter-in-dep.rs:4:20"}, {"sha": "d977d2c03de7ee6c476d57a20c7db7addec74ebf", "filename": "src/test/ui/parser/unclosed_delim_mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -5,4 +5,4 @@ pub fn new() -> Result<Value, ()> {\n     Ok(Value {\n     }\n }\n-//~^ ERROR incorrect close delimiter\n+//~^ ERROR mismatched closing delimiter"}, {"sha": "9c1670721236752b227372cf9bc782a104a5066d", "filename": "src/test/ui/parser/unclosed_delim_mod.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed_delim_mod.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,13 +1,13 @@\n-error: incorrect close delimiter: `}`\n+error: mismatched closing delimiter: `}`\n   --> $DIR/unclosed_delim_mod.rs:7:1\n    |\n LL | pub fn new() -> Result<Value, ()> {\n-   |                                   - close delimiter possibly meant for this\n+   |                                   - closing delimiter possibly meant for this\n LL |     Ok(Value {\n-   |       - un-closed delimiter\n+   |       - unclosed delimiter\n LL |     }\n LL | }\n-   | ^ incorrect close delimiter\n+   | ^ mismatched closing delimiter\n \n error: aborting due to previous error\n "}, {"sha": "f56013266ce524eefff7f886b3ef3bc37fd276ee", "filename": "src/test/ui/parser/unmatched-delimiter-at-end-of-file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -8,4 +8,4 @@ fn main() {\n         y: 5 };\n }\n \n-fn foo() { //~ ERROR this file contains an un-closed delimiter\n+fn foo() { //~ ERROR this file contains an unclosed delimiter"}, {"sha": "430a13e6e07138988c6d1e02f276fc3737619dad", "filename": "src/test/ui/parser/unmatched-delimiter-at-end-of-file.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funmatched-delimiter-at-end-of-file.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,8 +1,8 @@\n-error: this file contains an un-closed delimiter\n-  --> $DIR/unmatched-delimiter-at-end-of-file.rs:11:64\n+error: this file contains an unclosed delimiter\n+  --> $DIR/unmatched-delimiter-at-end-of-file.rs:11:63\n    |\n LL | fn foo() {\n-   |          - un-closed delimiter                                 ^\n+   |          - unclosed delimiter                                 ^\n \n error: aborting due to previous error\n "}, {"sha": "e50f24deae343d1beb77dd618afffad5626a8065", "filename": "src/test/ui/proc-macro/invalid-punct-ident-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,4 +4,4 @@\n extern crate invalid_punct_ident;\n \n lexer_failure!(); //~ ERROR proc macro panicked\n-                  //~| ERROR unexpected close delimiter: `)`\n+                  //~| ERROR unexpected closing delimiter: `)`"}, {"sha": "e7764004e8de71044ae45006fdb7593a5e40f38c", "filename": "src/test/ui/proc-macro/invalid-punct-ident-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,10 +1,10 @@\n-error: unexpected close delimiter: `)`\n+error: unexpected closing delimiter: `)`\n   --> $DIR/invalid-punct-ident-4.rs:6:1\n    |\n LL | lexer_failure!();\n    | ^^^^^^^^^^^^^^^^^\n    | |\n-   | unexpected close delimiter\n+   | unexpected closing delimiter\n    | in this macro invocation\n \n error: proc macro panicked"}, {"sha": "f7c7d908c784f1cc8321f081c6ccb27c8e856885", "filename": "src/test/ui/resolve/token-error-correct-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -3,5 +3,5 @@\n fn main() {\n     if foo {\n     //~^ ERROR: cannot find value `foo`\n-    ) //~ ERROR: incorrect close delimiter: `)`\n+    ) //~ ERROR: mismatched closing delimiter: `)`\n }"}, {"sha": "4014af2f41b61a1956294f13b6ca3d4dc10025b7", "filename": "src/test/ui/resolve/token-error-correct-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,11 +1,11 @@\n-error: incorrect close delimiter: `)`\n+error: mismatched closing delimiter: `)`\n   --> $DIR/token-error-correct-2.rs:6:5\n    |\n LL |     if foo {\n-   |            - un-closed delimiter\n+   |            - unclosed delimiter\n LL |\n LL |     )\n-   |     ^ incorrect close delimiter\n+   |     ^ mismatched closing delimiter\n \n error[E0425]: cannot find value `foo` in this scope\n   --> $DIR/token-error-correct-2.rs:4:8"}, {"sha": "4f74df0bf1f392e4d4d2e7bfad92f68cba3f00c7", "filename": "src/test/ui/resolve/token-error-correct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -4,6 +4,6 @@ fn main() {\n     foo(bar(;\n     //~^ ERROR cannot find function `bar` in this scope\n }\n-//~^ ERROR: incorrect close delimiter: `}`\n+//~^ ERROR: mismatched closing delimiter: `}`\n \n fn foo(_: usize) {}"}, {"sha": "bf300ecd781733b4020b65baae83f698ecf345c3", "filename": "src/test/ui/resolve/token-error-correct.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -1,13 +1,13 @@\n-error: incorrect close delimiter: `}`\n+error: mismatched closing delimiter: `}`\n   --> $DIR/token-error-correct.rs:6:1\n    |\n LL | fn main() {\n-   |           - close delimiter possibly meant for this\n+   |           - closing delimiter possibly meant for this\n LL |     foo(bar(;\n-   |            - un-closed delimiter\n+   |            - unclosed delimiter\n LL |\n LL | }\n-   | ^ incorrect close delimiter\n+   | ^ mismatched closing delimiter\n \n error[E0425]: cannot find function `bar` in this scope\n   --> $DIR/token-error-correct.rs:4:9"}, {"sha": "d6bf543352701befc89fd10daca01e6bf4eb9281", "filename": "src/test/ui/self/suggest-self-2.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,25 @@\n+struct Foo {}\n+\n+impl Foo {\n+    fn foo(&self) {\n+        bar(self);\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling `bar` as a method\n+\n+        bar(&&self, 102);\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling `bar` as a method\n+\n+        bar(&mut self, 102, &\"str\");\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling `bar` as a method\n+\n+        bar();\n+        //~^ ERROR cannot find function `bar` in this scope\n+\n+        self.bar();\n+        //~^ ERROR no method named `bar` found for type\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "452c31275153a88a4fe6a62bc0a0c4f005fb0ea7", "filename": "src/test/ui/self/suggest-self-2.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -0,0 +1,40 @@\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:5:9\n+   |\n+LL |         bar(self);\n+   |         ^^^------\n+   |         |\n+   |         help: try calling `bar` as a method: `self.bar()`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:9:9\n+   |\n+LL |         bar(&&self, 102);\n+   |         ^^^-------------\n+   |         |\n+   |         help: try calling `bar` as a method: `self.bar(102)`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:13:9\n+   |\n+LL |         bar(&mut self, 102, &\"str\");\n+   |         ^^^------------------------\n+   |         |\n+   |         help: try calling `bar` as a method: `self.bar(102, &\"str\")`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:17:9\n+   |\n+LL |         bar();\n+   |         ^^^ not found in this scope\n+\n+error[E0599]: no method named `bar` found for type `&Foo` in the current scope\n+  --> $DIR/suggest-self-2.rs:20:14\n+   |\n+LL |         self.bar();\n+   |              ^^^ method not found in `&Foo`\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0425, E0599.\n+For more information about an error, try `rustc --explain E0425`."}, {"sha": "313a303edb2bfb5a48db26355ff3921c7de70c5a", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -2,6 +2,7 @@\n #![deny(warnings)]\n \n extern crate env_logger;\n+extern crate rustc_span;\n extern crate syntax;\n \n use std::cell::RefCell;\n@@ -13,7 +14,7 @@ use std::io::Write;\n use std::path::Path;\n use std::path::PathBuf;\n \n-use syntax::edition::DEFAULT_EDITION;\n+use rustc_span::edition::DEFAULT_EDITION;\n \n use rustdoc::html::markdown::{ErrorCodes, IdMap, Markdown, Playground};\n "}, {"sha": "fb4611ed1ca4bec3b88763e8fc5b21c8e941c3cc", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -122,33 +122,22 @@ fn check(cache: &mut Cache, root: &Path, file: &Path, errors: &mut bool) -> Opti\n     // Unfortunately we're not 100% full of valid links today to we need a few\n     // whitelists to get this past `make check` today.\n     // FIXME(#32129)\n-    if file.ends_with(\"std/string/struct.String.html\")\n-        || file.ends_with(\"interpret/struct.ImmTy.html\")\n-        || file.ends_with(\"ast/struct.ThinVec.html\")\n-        || file.ends_with(\"util/struct.ThinVec.html\")\n-        || file.ends_with(\"layout/struct.TyLayout.html\")\n-        || file.ends_with(\"humantime/struct.Timestamp.html\")\n-        || file.ends_with(\"log/index.html\")\n-        || file.ends_with(\"ty/struct.Slice.html\")\n-        || file.ends_with(\"ty/enum.Attributes.html\")\n-        || file.ends_with(\"ty/struct.SymbolName.html\")\n-        || file.ends_with(\"io/struct.IoSlice.html\")\n-        || file.ends_with(\"io/struct.IoSliceMut.html\")\n+    if file.ends_with(\"std/io/struct.IoSlice.html\")\n+        || file.ends_with(\"std/string/struct.String.html\")\n     {\n         return None;\n     }\n     // FIXME(#32553)\n-    if file.ends_with(\"string/struct.String.html\") {\n+    if file.ends_with(\"alloc/string/struct.String.html\") {\n         return None;\n     }\n     // FIXME(#32130)\n-    if file.ends_with(\"btree_set/struct.BTreeSet.html\")\n-        || file.ends_with(\"struct.BTreeSet.html\")\n-        || file.ends_with(\"btree_map/struct.BTreeMap.html\")\n-        || file.ends_with(\"hash_map/struct.HashMap.html\")\n-        || file.ends_with(\"hash_set/struct.HashSet.html\")\n-        || file.ends_with(\"sync/struct.Lrc.html\")\n-        || file.ends_with(\"sync/struct.RwLock.html\")\n+    if file.ends_with(\"alloc/collections/btree_map/struct.BTreeMap.html\")\n+        || file.ends_with(\"alloc/collections/btree_set/struct.BTreeSet.html\")\n+        || file.ends_with(\"std/collections/btree_map/struct.BTreeMap.html\")\n+        || file.ends_with(\"std/collections/btree_set/struct.BTreeSet.html\")\n+        || file.ends_with(\"std/collections/hash_map/struct.HashMap.html\")\n+        || file.ends_with(\"std/collections/hash_set/struct.HashSet.html\")\n     {\n         return None;\n     }"}, {"sha": "352c00dbe41bd99c6ef7dcb79e74e1d0fd36351a", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf2e00e38ad404d563f03acbcf06b08813fd086/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=abf2e00e38ad404d563f03acbcf06b08813fd086", "patch": "@@ -171,6 +171,8 @@ const WHITELIST: &[Crate<'_>] = &[\n     Crate(\"thread_local\"),\n     Crate(\"ucd-util\"),\n     Crate(\"unicode-normalization\"),\n+    Crate(\"unicode-script\"),\n+    Crate(\"unicode-security\"),\n     Crate(\"unicode-width\"),\n     Crate(\"unicode-xid\"),\n     Crate(\"unreachable\"),"}]}