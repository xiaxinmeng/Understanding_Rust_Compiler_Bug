{"sha": "c145d933955b4c690768d5c526db671ab4d4d4b6", "node_id": "C_kwDOAAsO6NoAKGMxNDVkOTMzOTU1YjRjNjkwNzY4ZDVjNTI2ZGI2NzFhYjRkNGQ0YjY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-05-08T10:41:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-08T10:41:49Z"}, "message": "Rollup merge of #111211 - compiler-errors:negative-bounds-super, r=TaKO8Ki\n\nDon't compute trait super bounds unless they're positive\n\nFixes #111207\n\nThe comment is modified to explain the rationale for why we even have this recursive call to supertraits in the first place, which doesn't apply to negative bounds since they don't elaborate at all.", "tree": {"sha": "f47c50cd41681feb9803ec193a9aaafc95ed4f12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f47c50cd41681feb9803ec193a9aaafc95ed4f12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c145d933955b4c690768d5c526db671ab4d4d4b6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkWNHtCRBK7hj4Ov3rIwAAQU4IAJZI19AzQ5N77uuAQqa0hQRU\nrIQ/YkB6XNByZO6FRZZRfn5YPGcBUm+nr2JlfRc84tx25xknQhrazpinum4LYXXt\nMDZ7hJKuDDv4HZu1La6hT6XrR9uWUjdqrekou0e3Prcpv5TPOyty/wFAchoYPLjW\n5y19fvjYsdpir+eRr/NXaPLNtxmRjRFgv58XmaUqoVOuK7ClibRriykbuR+PTPcO\nwXUcNKqHez9VtvWFQOqUA2Ogcladpg9rDxlfVcdDwv//8Jk+t6G9Q40u4eHe4IE9\nA4+Ajfuu+ZzhletO2YEmsPNeQ98fw2yyeX8x4p/NSZXDsAQ0wa6Bi/jsr3lVECY=\n=cpjz\n-----END PGP SIGNATURE-----\n", "payload": "tree f47c50cd41681feb9803ec193a9aaafc95ed4f12\nparent 4df84a1e4e841045d4ff8a328d1054e4f02101c1\nparent 930eece9d34b67533cf3d27c06253e806a5add0f\nauthor Yuki Okushi <jtitor@2k36.org> 1683542509 +0900\ncommitter GitHub <noreply@github.com> 1683542509 +0900\n\nRollup merge of #111211 - compiler-errors:negative-bounds-super, r=TaKO8Ki\n\nDon't compute trait super bounds unless they're positive\n\nFixes #111207\n\nThe comment is modified to explain the rationale for why we even have this recursive call to supertraits in the first place, which doesn't apply to negative bounds since they don't elaborate at all.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c145d933955b4c690768d5c526db671ab4d4d4b6", "html_url": "https://github.com/rust-lang/rust/commit/c145d933955b4c690768d5c526db671ab4d4d4b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c145d933955b4c690768d5c526db671ab4d4d4b6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4df84a1e4e841045d4ff8a328d1054e4f02101c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4df84a1e4e841045d4ff8a328d1054e4f02101c1", "html_url": "https://github.com/rust-lang/rust/commit/4df84a1e4e841045d4ff8a328d1054e4f02101c1"}, {"sha": "930eece9d34b67533cf3d27c06253e806a5add0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/930eece9d34b67533cf3d27c06253e806a5add0f", "html_url": "https://github.com/rust-lang/rust/commit/930eece9d34b67533cf3d27c06253e806a5add0f"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "e04658c8e774e578d076f9a861a187a00832bd64", "filename": "compiler/rustc_hir_analysis/src/collect/predicates_of.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c145d933955b4c690768d5c526db671ab4d4d4b6/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c145d933955b4c690768d5c526db671ab4d4d4b6/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs?ref=c145d933955b4c690768d5c526db671ab4d4d4b6", "patch": "@@ -657,14 +657,15 @@ pub(super) fn implied_predicates_with_filter(\n         &*tcx.arena.alloc_from_iter(superbounds.predicates().chain(where_bounds_that_match));\n     debug!(?implied_bounds);\n \n-    // Now require that immediate supertraits are converted,\n-    // which will, in turn, reach indirect supertraits.\n+    // Now require that immediate supertraits are converted, which will, in\n+    // turn, reach indirect supertraits, so we detect cycles now instead of\n+    // overflowing during elaboration.\n     if matches!(filter, PredicateFilter::SelfOnly) {\n-        // Now require that immediate supertraits are converted,\n-        // which will, in turn, reach indirect supertraits.\n         for &(pred, span) in implied_bounds {\n             debug!(\"superbound: {:?}\", pred);\n-            if let ty::PredicateKind::Clause(ty::Clause::Trait(bound)) = pred.kind().skip_binder() {\n+            if let ty::PredicateKind::Clause(ty::Clause::Trait(bound)) = pred.kind().skip_binder()\n+                && bound.polarity == ty::ImplPolarity::Positive\n+            {\n                 tcx.at(span).super_predicates_of(bound.def_id());\n             }\n         }"}, {"sha": "df0884b8b9f1601eb4fcfafe1a0c231c315f64d7", "filename": "tests/ui/traits/negative-bounds/supertrait.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c145d933955b4c690768d5c526db671ab4d4d4b6/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c145d933955b4c690768d5c526db671ab4d4d4b6/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.rs?ref=c145d933955b4c690768d5c526db671ab4d4d4b6", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+#![feature(negative_bounds)]\n+//~^ WARN the feature `negative_bounds` is incomplete\n+\n+trait A: !B {}\n+trait B: !A {}\n+\n+fn main() {}"}, {"sha": "f44753b624e3fd082df0a09fc434755c0607c938", "filename": "tests/ui/traits/negative-bounds/supertrait.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c145d933955b4c690768d5c526db671ab4d4d4b6/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c145d933955b4c690768d5c526db671ab4d4d4b6/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fsupertrait.stderr?ref=c145d933955b4c690768d5c526db671ab4d4d4b6", "patch": "@@ -0,0 +1,10 @@\n+warning: the feature `negative_bounds` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/supertrait.rs:3:12\n+   |\n+LL | #![feature(negative_bounds)]\n+   |            ^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}