{"sha": "7f4b583c477850c937b5ad3012cc3f5216c2baeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNGI1ODNjNDc3ODUwYzkzN2I1YWQzMDEyY2MzZjUyMTZjMmJhZWI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T12:14:30Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T12:14:30Z"}, "message": "Add multiline case for test against map(f).unwrap_or(None)", "tree": {"sha": "07879f695990760587f6d318a16d90683d90df5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07879f695990760587f6d318a16d90683d90df5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f4b583c477850c937b5ad3012cc3f5216c2baeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f4b583c477850c937b5ad3012cc3f5216c2baeb", "html_url": "https://github.com/rust-lang/rust/commit/7f4b583c477850c937b5ad3012cc3f5216c2baeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f4b583c477850c937b5ad3012cc3f5216c2baeb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63d6df210105cc28e431f7c218fda441cce785e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/63d6df210105cc28e431f7c218fda441cce785e4", "html_url": "https://github.com/rust-lang/rust/commit/63d6df210105cc28e431f7c218fda441cce785e4"}], "stats": {"total": 491, "additions": 260, "deletions": 231}, "files": [{"sha": "3395280ba0570b2a0a59cb5039c717d41a0134fc", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f4b583c477850c937b5ad3012cc3f5216c2baeb/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f4b583c477850c937b5ad3012cc3f5216c2baeb/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=7f4b583c477850c937b5ad3012cc3f5216c2baeb", "patch": "@@ -108,8 +108,16 @@ fn option_methods() {\n                .unwrap_or({\n                     0\n                 });\n-    // map(f).unwrap_or(None) case\n+    // single line `map(f).unwrap_or(None)` case\n     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n+    // multiline `map(f).unwrap_or(None)` cases\n+    let _ = opt.map(|x| {\n+        Some(x + 1)\n+    }\n+    ).unwrap_or(None);\n+    let _ = opt\n+        .map(|x| Some(x + 1))\n+        .unwrap_or(None);\n     // macro case\n     let _ = opt_map!(opt, |x| x + 1).unwrap_or(0); // should not lint\n "}, {"sha": "a1bc219eaf87e9db4c063887de3dee0ba851cb1e", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 251, "deletions": 230, "changes": 481, "blob_url": "https://github.com/rust-lang/rust/blob/7f4b583c477850c937b5ad3012cc3f5216c2baeb/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f4b583c477850c937b5ad3012cc3f5216c2baeb/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=7f4b583c477850c937b5ad3012cc3f5216c2baeb", "patch": "@@ -142,705 +142,726 @@ error: called `map(f).unwrap_or(None)` on an Option value. This can be done more\n     |\n     = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n-error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n+error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n+   --> $DIR/methods.rs:114:13\n+    |\n+114 |       let _ = opt.map(|x| {\n+    |  _____________^\n+115 | |         Some(x + 1)\n+116 | |     }\n+117 | |     ).unwrap_or(None);\n+    | |_____________________^\n+\n+error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n    --> $DIR/methods.rs:118:13\n     |\n-118 |       let _ = opt.map(|x| x + 1)\n+118 |       let _ = opt\n+    |  _____________^\n+119 | |         .map(|x| Some(x + 1))\n+120 | |         .unwrap_or(None);\n+    | |________________________^\n+    |\n+    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n+\n+error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n+   --> $DIR/methods.rs:126:13\n+    |\n+126 |       let _ = opt.map(|x| x + 1)\n     |  _____________^\n-119 | |\n-120 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n+127 | |\n+128 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n     | |____________________________________^\n     |\n     = note: `-D option-map-unwrap-or-else` implied by `-D warnings`\n     = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:122:13\n+   --> $DIR/methods.rs:130:13\n     |\n-122 |       let _ = opt.map(|x| {\n+130 |       let _ = opt.map(|x| {\n     |  _____________^\n-123 | |                         x + 1\n-124 | |                     }\n-125 | |               ).unwrap_or_else(|| 0);\n+131 | |                         x + 1\n+132 | |                     }\n+133 | |               ).unwrap_or_else(|| 0);\n     | |____________________________________^\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:126:13\n+   --> $DIR/methods.rs:134:13\n     |\n-126 |       let _ = opt.map(|x| x + 1)\n+134 |       let _ = opt.map(|x| x + 1)\n     |  _____________^\n-127 | |                .unwrap_or_else(||\n-128 | |                     0\n-129 | |                 );\n+135 | |                .unwrap_or_else(||\n+136 | |                     0\n+137 | |                 );\n     | |_________________^\n \n error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:155:24\n+   --> $DIR/methods.rs:163:24\n     |\n-155 |     fn filter(self) -> IteratorFalsePositives {\n+163 |     fn filter(self) -> IteratorFalsePositives {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:159:22\n+   --> $DIR/methods.rs:167:22\n     |\n-159 |     fn next(self) -> IteratorFalsePositives {\n+167 |     fn next(self) -> IteratorFalsePositives {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:179:32\n+   --> $DIR/methods.rs:187:32\n     |\n-179 |     fn skip(self, _: usize) -> IteratorFalsePositives {\n+187 |     fn skip(self, _: usize) -> IteratorFalsePositives {\n     |                                ^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:198:13\n+   --> $DIR/methods.rs:206:13\n     |\n-198 |     let _ = v.iter().filter(|&x| *x < 0).next();\n+206 |     let _ = v.iter().filter(|&x| *x < 0).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D filter-next` implied by `-D warnings`\n     = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:201:13\n+   --> $DIR/methods.rs:209:13\n     |\n-201 |       let _ = v.iter().filter(|&x| {\n+209 |       let _ = v.iter().filter(|&x| {\n     |  _____________^\n-202 | |                                 *x < 0\n-203 | |                             }\n-204 | |                    ).next();\n+210 | |                                 *x < 0\n+211 | |                             }\n+212 | |                    ).next();\n     | |___________________________^\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:216:13\n+   --> $DIR/methods.rs:224:13\n     |\n-216 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n+224 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D search-is-some` implied by `-D warnings`\n     = note: replace `find(|&x| *x < 0).is_some()` with `any(|&x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:219:13\n+   --> $DIR/methods.rs:227:13\n     |\n-219 |       let _ = v.iter().find(|&x| {\n+227 |       let _ = v.iter().find(|&x| {\n     |  _____________^\n-220 | |                               *x < 0\n-221 | |                           }\n-222 | |                    ).is_some();\n+228 | |                               *x < 0\n+229 | |                           }\n+230 | |                    ).is_some();\n     | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:225:13\n+   --> $DIR/methods.rs:233:13\n     |\n-225 |     let _ = v.iter().position(|&x| x < 0).is_some();\n+233 |     let _ = v.iter().position(|&x| x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:228:13\n+   --> $DIR/methods.rs:236:13\n     |\n-228 |       let _ = v.iter().position(|&x| {\n+236 |       let _ = v.iter().position(|&x| {\n     |  _____________^\n-229 | |                                   x < 0\n-230 | |                               }\n-231 | |                    ).is_some();\n+237 | |                                   x < 0\n+238 | |                               }\n+239 | |                    ).is_some();\n     | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:234:13\n+   --> $DIR/methods.rs:242:13\n     |\n-234 |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n+242 |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:237:13\n+   --> $DIR/methods.rs:245:13\n     |\n-237 |       let _ = v.iter().rposition(|&x| {\n+245 |       let _ = v.iter().rposition(|&x| {\n     |  _____________^\n-238 | |                                    x < 0\n-239 | |                                }\n-240 | |                    ).is_some();\n+246 | |                                    x < 0\n+247 | |                                }\n+248 | |                    ).is_some();\n     | |______________________________^\n \n error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:254:21\n+   --> $DIR/methods.rs:262:21\n     |\n-254 |         fn new() -> Foo { Foo }\n+262 |         fn new() -> Foo { Foo }\n     |                     ^^^ help: use the applicable keyword: `Self`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:272:5\n+   --> $DIR/methods.rs:280:5\n     |\n-272 |     with_constructor.unwrap_or(make());\n+280 |     with_constructor.unwrap_or(make());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_constructor.unwrap_or_else(make)`\n     |\n     = note: `-D or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n-   --> $DIR/methods.rs:275:5\n+   --> $DIR/methods.rs:283:5\n     |\n-275 |     with_new.unwrap_or(Vec::new());\n+283 |     with_new.unwrap_or(Vec::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_new.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:278:5\n+   --> $DIR/methods.rs:286:5\n     |\n-278 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n+286 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:281:5\n+   --> $DIR/methods.rs:289:5\n     |\n-281 |     with_err.unwrap_or(make());\n+289 |     with_err.unwrap_or(make());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err.unwrap_or_else(|_| make())`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:284:5\n+   --> $DIR/methods.rs:292:5\n     |\n-284 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n+292 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:287:5\n+   --> $DIR/methods.rs:295:5\n     |\n-287 |     with_default_trait.unwrap_or(Default::default());\n+295 |     with_default_trait.unwrap_or(Default::default());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_trait.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:290:5\n+   --> $DIR/methods.rs:298:5\n     |\n-290 |     with_default_type.unwrap_or(u64::default());\n+298 |     with_default_type.unwrap_or(u64::default());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_type.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:293:5\n+   --> $DIR/methods.rs:301:5\n     |\n-293 |     with_vec.unwrap_or(vec![]);\n+301 |     with_vec.unwrap_or(vec![]);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:298:5\n+   --> $DIR/methods.rs:306:5\n     |\n-298 |     without_default.unwrap_or(Foo::new());\n+306 |     without_default.unwrap_or(Foo::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `without_default.unwrap_or_else(Foo::new)`\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:301:5\n+   --> $DIR/methods.rs:309:5\n     |\n-301 |     map.entry(42).or_insert(String::new());\n+309 |     map.entry(42).or_insert(String::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `map.entry(42).or_insert_with(String::new)`\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:304:5\n+   --> $DIR/methods.rs:312:5\n     |\n-304 |     btree.entry(42).or_insert(String::new());\n+312 |     btree.entry(42).or_insert(String::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `btree.entry(42).or_insert_with(String::new)`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:307:13\n+   --> $DIR/methods.rs:315:13\n     |\n-307 |     let _ = stringy.unwrap_or(\"\".to_owned());\n+315 |     let _ = stringy.unwrap_or(\"\".to_owned());\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `stringy.unwrap_or_else(|| \"\".to_owned())`\n \n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:318:23\n+   --> $DIR/methods.rs:326:23\n     |\n-318 |         let bad_vec = some_vec.iter().nth(3);\n+326 |         let bad_vec = some_vec.iter().nth(3);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D iter-nth` implied by `-D warnings`\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:319:26\n+   --> $DIR/methods.rs:327:26\n     |\n-319 |         let bad_slice = &some_vec[..].iter().nth(3);\n+327 |         let bad_slice = &some_vec[..].iter().nth(3);\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:320:31\n+   --> $DIR/methods.rs:328:31\n     |\n-320 |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n+328 |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter().nth()` on a VecDeque. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:321:29\n+   --> $DIR/methods.rs:329:29\n     |\n-321 |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n+329 |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a Vec. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:326:23\n+   --> $DIR/methods.rs:334:23\n     |\n-326 |         let bad_vec = some_vec.iter_mut().nth(3);\n+334 |         let bad_vec = some_vec.iter_mut().nth(3);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a slice. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:329:26\n+   --> $DIR/methods.rs:337:26\n     |\n-329 |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n+337 |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a VecDeque. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:332:29\n+   --> $DIR/methods.rs:340:29\n     |\n-332 |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n+340 |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:344:13\n+   --> $DIR/methods.rs:352:13\n     |\n-344 |     let _ = some_vec.iter().skip(42).next();\n+352 |     let _ = some_vec.iter().skip(42).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D iter-skip-next` implied by `-D warnings`\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:345:13\n+   --> $DIR/methods.rs:353:13\n     |\n-345 |     let _ = some_vec.iter().cycle().skip(42).next();\n+353 |     let _ = some_vec.iter().cycle().skip(42).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:346:13\n+   --> $DIR/methods.rs:354:13\n     |\n-346 |     let _ = (1..10).skip(10).next();\n+354 |     let _ = (1..10).skip(10).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:347:14\n+   --> $DIR/methods.rs:355:14\n     |\n-347 |     let _ = &some_vec[..].iter().skip(3).next();\n+355 |     let _ = &some_vec[..].iter().skip(3).next();\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:373:17\n+   --> $DIR/methods.rs:381:17\n     |\n-373 |         let _ = boxed_slice.get(1).unwrap();\n+381 |         let _ = boxed_slice.get(1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n     |\n     = note: `-D get-unwrap` implied by `-D warnings`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:374:17\n+   --> $DIR/methods.rs:382:17\n     |\n-374 |         let _ = some_slice.get(0).unwrap();\n+382 |         let _ = some_slice.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_slice[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:375:17\n+   --> $DIR/methods.rs:383:17\n     |\n-375 |         let _ = some_vec.get(0).unwrap();\n+383 |         let _ = some_vec.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vec[0]`\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:376:17\n+   --> $DIR/methods.rs:384:17\n     |\n-376 |         let _ = some_vecdeque.get(0).unwrap();\n+384 |         let _ = some_vecdeque.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:377:17\n+   --> $DIR/methods.rs:385:17\n     |\n-377 |         let _ = some_hashmap.get(&1).unwrap();\n+385 |         let _ = some_hashmap.get(&1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_hashmap[&1]`\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:378:17\n+   --> $DIR/methods.rs:386:17\n     |\n-378 |         let _ = some_btreemap.get(&1).unwrap();\n+386 |         let _ = some_btreemap.get(&1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_btreemap[&1]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:383:10\n+   --> $DIR/methods.rs:391:10\n     |\n-383 |         *boxed_slice.get_mut(0).unwrap() = 1;\n+391 |         *boxed_slice.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut boxed_slice[0]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:384:10\n+   --> $DIR/methods.rs:392:10\n     |\n-384 |         *some_slice.get_mut(0).unwrap() = 1;\n+392 |         *some_slice.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_slice[0]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:385:10\n+   --> $DIR/methods.rs:393:10\n     |\n-385 |         *some_vec.get_mut(0).unwrap() = 1;\n+393 |         *some_vec.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vec[0]`\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:386:10\n+   --> $DIR/methods.rs:394:10\n     |\n-386 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n+394 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vecdeque[0]`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:400:13\n+   --> $DIR/methods.rs:408:13\n     |\n-400 |     let _ = opt.unwrap();\n+408 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: `-D option-unwrap-used` implied by `-D warnings`\n \n error: used unwrap() on a Result value. If you don't want to handle the Err case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:403:13\n+   --> $DIR/methods.rs:411:13\n     |\n-403 |     let _ = res.unwrap();\n+411 |     let _ = res.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: `-D result-unwrap-used` implied by `-D warnings`\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:405:5\n+   --> $DIR/methods.rs:413:5\n     |\n-405 |     res.ok().expect(\"disaster!\");\n+413 |     res.ok().expect(\"disaster!\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D ok-expect` implied by `-D warnings`\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:411:5\n+   --> $DIR/methods.rs:419:5\n     |\n-411 |     res3.ok().expect(\"whoof\");\n+419 |     res3.ok().expect(\"whoof\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:413:5\n+   --> $DIR/methods.rs:421:5\n     |\n-413 |     res4.ok().expect(\"argh\");\n+421 |     res4.ok().expect(\"argh\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:415:5\n+   --> $DIR/methods.rs:423:5\n     |\n-415 |     res5.ok().expect(\"oops\");\n+423 |     res5.ok().expect(\"oops\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:417:5\n+   --> $DIR/methods.rs:425:5\n     |\n-417 |     res6.ok().expect(\"meh\");\n+425 |     res6.ok().expect(\"meh\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:429:5\n+   --> $DIR/methods.rs:437:5\n     |\n-429 |     \"\".chars().next() == Some(' ');\n+437 |     \"\".chars().next() == Some(' ');\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".starts_with(' ')`\n     |\n     = note: `-D chars-next-cmp` implied by `-D warnings`\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:430:5\n+   --> $DIR/methods.rs:438:5\n     |\n-430 |     Some(' ') != \"\".chars().next();\n+438 |     Some(' ') != \"\".chars().next();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:439:5\n+   --> $DIR/methods.rs:447:5\n     |\n-439 |     s.extend(abc.chars());\n+447 |     s.extend(abc.chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(abc)`\n     |\n     = note: `-D string-extend-chars` implied by `-D warnings`\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:442:5\n+   --> $DIR/methods.rs:450:5\n     |\n-442 |     s.extend(\"abc\".chars());\n+450 |     s.extend(\"abc\".chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(\"abc\")`\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:445:5\n+   --> $DIR/methods.rs:453:5\n     |\n-445 |     s.extend(def.chars());\n+453 |     s.extend(def.chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(&def)`\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:456:5\n+   --> $DIR/methods.rs:464:5\n     |\n-456 |     42.clone();\n+464 |     42.clone();\n     |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n     |\n     = note: `-D clone-on-copy` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:460:5\n+   --> $DIR/methods.rs:468:5\n     |\n-460 |     (&42).clone();\n+468 |     (&42).clone();\n     |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n error: using '.clone()' on a ref-counted pointer\n-   --> $DIR/methods.rs:470:5\n+   --> $DIR/methods.rs:478:5\n     |\n-470 |     rc.clone();\n+478 |     rc.clone();\n     |     ^^^^^^^^^^ help: try this: `Rc::clone(&rc)`\n     |\n     = note: `-D clone-on-ref-ptr` implied by `-D warnings`\n \n error: using '.clone()' on a ref-counted pointer\n-   --> $DIR/methods.rs:473:5\n+   --> $DIR/methods.rs:481:5\n     |\n-473 |     arc.clone();\n+481 |     arc.clone();\n     |     ^^^^^^^^^^^ help: try this: `Arc::clone(&arc)`\n \n error: using '.clone()' on a ref-counted pointer\n-   --> $DIR/methods.rs:476:5\n+   --> $DIR/methods.rs:484:5\n     |\n-476 |     rcweak.clone();\n+484 |     rcweak.clone();\n     |     ^^^^^^^^^^^^^^ help: try this: `Weak::clone(&rcweak)`\n \n error: using '.clone()' on a ref-counted pointer\n-   --> $DIR/methods.rs:479:5\n+   --> $DIR/methods.rs:487:5\n     |\n-479 |     arc_weak.clone();\n+487 |     arc_weak.clone();\n     |     ^^^^^^^^^^^^^^^^ help: try this: `Weak::clone(&arc_weak)`\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:486:5\n+   --> $DIR/methods.rs:494:5\n     |\n-486 |     t.clone();\n+494 |     t.clone();\n     |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:488:5\n+   --> $DIR/methods.rs:496:5\n     |\n-488 |     Some(t).clone();\n+496 |     Some(t).clone();\n     |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n-   --> $DIR/methods.rs:494:22\n+   --> $DIR/methods.rs:502:22\n     |\n-494 |     let z: &Vec<_> = y.clone();\n+502 |     let z: &Vec<_> = y.clone();\n     |                      ^^^^^^^^^ help: try dereferencing it: `(*y).clone()`\n     |\n     = note: `-D clone-double-ref` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:501:13\n+   --> $DIR/methods.rs:509:13\n     |\n-501 |     x.split(\"x\");\n+509 |     x.split(\"x\");\n     |     --------^^^- help: try using a char instead: `x.split('x')`\n     |\n     = note: `-D single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:518:16\n+   --> $DIR/methods.rs:526:16\n     |\n-518 |     x.contains(\"x\");\n+526 |     x.contains(\"x\");\n     |     -----------^^^- help: try using a char instead: `x.contains('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:519:19\n+   --> $DIR/methods.rs:527:19\n     |\n-519 |     x.starts_with(\"x\");\n+527 |     x.starts_with(\"x\");\n     |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:520:17\n+   --> $DIR/methods.rs:528:17\n     |\n-520 |     x.ends_with(\"x\");\n+528 |     x.ends_with(\"x\");\n     |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:521:12\n+   --> $DIR/methods.rs:529:12\n     |\n-521 |     x.find(\"x\");\n+529 |     x.find(\"x\");\n     |     -------^^^- help: try using a char instead: `x.find('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:522:13\n+   --> $DIR/methods.rs:530:13\n     |\n-522 |     x.rfind(\"x\");\n+530 |     x.rfind(\"x\");\n     |     --------^^^- help: try using a char instead: `x.rfind('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:523:14\n+   --> $DIR/methods.rs:531:14\n     |\n-523 |     x.rsplit(\"x\");\n+531 |     x.rsplit(\"x\");\n     |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:524:24\n+   --> $DIR/methods.rs:532:24\n     |\n-524 |     x.split_terminator(\"x\");\n+532 |     x.split_terminator(\"x\");\n     |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:525:25\n+   --> $DIR/methods.rs:533:25\n     |\n-525 |     x.rsplit_terminator(\"x\");\n+533 |     x.rsplit_terminator(\"x\");\n     |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:526:17\n+   --> $DIR/methods.rs:534:17\n     |\n-526 |     x.splitn(0, \"x\");\n+534 |     x.splitn(0, \"x\");\n     |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:527:18\n+   --> $DIR/methods.rs:535:18\n     |\n-527 |     x.rsplitn(0, \"x\");\n+535 |     x.rsplitn(0, \"x\");\n     |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:528:15\n+   --> $DIR/methods.rs:536:15\n     |\n-528 |     x.matches(\"x\");\n+536 |     x.matches(\"x\");\n     |     ----------^^^- help: try using a char instead: `x.matches('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:529:16\n+   --> $DIR/methods.rs:537:16\n     |\n-529 |     x.rmatches(\"x\");\n+537 |     x.rmatches(\"x\");\n     |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:530:21\n+   --> $DIR/methods.rs:538:21\n     |\n-530 |     x.match_indices(\"x\");\n+538 |     x.match_indices(\"x\");\n     |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:531:22\n+   --> $DIR/methods.rs:539:22\n     |\n-531 |     x.rmatch_indices(\"x\");\n+539 |     x.rmatch_indices(\"x\");\n     |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:532:25\n+   --> $DIR/methods.rs:540:25\n     |\n-532 |     x.trim_left_matches(\"x\");\n+540 |     x.trim_left_matches(\"x\");\n     |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:533:26\n+   --> $DIR/methods.rs:541:26\n     |\n-533 |     x.trim_right_matches(\"x\");\n+541 |     x.trim_right_matches(\"x\");\n     |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n \n error: you are getting the inner pointer of a temporary `CString`\n-   --> $DIR/methods.rs:543:5\n+   --> $DIR/methods.rs:551:5\n     |\n-543 |     CString::new(\"foo\").unwrap().as_ptr();\n+551 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D temporary-cstring-as-ptr` implied by `-D warnings`\n     = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n-   --> $DIR/methods.rs:543:5\n+   --> $DIR/methods.rs:551:5\n     |\n-543 |     CString::new(\"foo\").unwrap().as_ptr();\n+551 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n-   --> $DIR/methods.rs:548:27\n+   --> $DIR/methods.rs:556:27\n     |\n-548 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n+556 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D iter-cloned-collect` implied by `-D warnings`\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:555:8\n+   --> $DIR/methods.rs:563:8\n     |\n-555 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n+563 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.starts_with('f')`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:555:8\n+   --> $DIR/methods.rs:563:8\n     |\n-555 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n+563 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:558:8\n+   --> $DIR/methods.rs:566:8\n     |\n-558 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n+566 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n     |\n     = note: `-D chars-last-cmp` implied by `-D warnings`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:558:8\n+   --> $DIR/methods.rs:566:8\n     |\n-558 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n+566 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:561:8\n+   --> $DIR/methods.rs:569:8\n     |\n-561 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n+569 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:561:8\n+   --> $DIR/methods.rs:569:8\n     |\n-561 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n+569 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:564:8\n+   --> $DIR/methods.rs:572:8\n     |\n-564 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n+572 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.starts_with('f')`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:564:8\n+   --> $DIR/methods.rs:572:8\n     |\n-564 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n+572 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:567:8\n+   --> $DIR/methods.rs:575:8\n     |\n-567 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n+575 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:567:8\n+   --> $DIR/methods.rs:575:8\n     |\n-567 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n+575 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:570:8\n+   --> $DIR/methods.rs:578:8\n     |\n-570 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n+578 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:570:8\n+   --> $DIR/methods.rs:578:8\n     |\n-570 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n+578 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:577:5\n+   --> $DIR/methods.rs:585:5\n     |\n-577 |     \"\".chars().last() == Some(' ');\n+585 |     \"\".chars().last() == Some(' ');\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:578:5\n+   --> $DIR/methods.rs:586:5\n     |\n-578 |     Some(' ') != \"\".chars().last();\n+586 |     Some(' ') != \"\".chars().last();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:579:5\n+   --> $DIR/methods.rs:587:5\n     |\n-579 |     \"\".chars().next_back() == Some(' ');\n+587 |     \"\".chars().next_back() == Some(' ');\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-   --> $DIR/methods.rs:580:5\n+   --> $DIR/methods.rs:588:5\n     |\n-580 |     Some(' ') != \"\".chars().next_back();\n+588 |     Some(' ') != \"\".chars().next_back();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n "}]}