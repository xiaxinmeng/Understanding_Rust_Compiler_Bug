{"sha": "9a4bdbff9e52fe2bb2977ea6edddb13064726a25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNGJkYmZmOWU1MmZlMmJiMjk3N2VhNmVkZGRiMTMwNjQ3MjZhMjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T13:07:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T13:07:16Z"}, "message": "more checks for SwitchInt", "tree": {"sha": "c479025b4ca42bf44b15199c4e209ebb6581aaf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c479025b4ca42bf44b15199c4e209ebb6581aaf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a4bdbff9e52fe2bb2977ea6edddb13064726a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a4bdbff9e52fe2bb2977ea6edddb13064726a25", "html_url": "https://github.com/rust-lang/rust/commit/9a4bdbff9e52fe2bb2977ea6edddb13064726a25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a4bdbff9e52fe2bb2977ea6edddb13064726a25/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07e42433f9f8e2845d4941c59dc64918d467228", "url": "https://api.github.com/repos/rust-lang/rust/commits/e07e42433f9f8e2845d4941c59dc64918d467228", "html_url": "https://github.com/rust-lang/rust/commit/e07e42433f9f8e2845d4941c59dc64918d467228"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "4039d1b50e8f577ddc6b0c7245c11e528a091173", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a4bdbff9e52fe2bb2977ea6edddb13064726a25/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4bdbff9e52fe2bb2977ea6edddb13064726a25/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=9a4bdbff9e52fe2bb2977ea6edddb13064726a25", "patch": "@@ -90,11 +90,15 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n             TerminatorKind::Goto { target } => {\n                 self.check_bb(terminator.source_info.span, *target);\n             }\n-            TerminatorKind::SwitchInt { targets, .. } => {\n-                if targets.is_empty() {\n+            TerminatorKind::SwitchInt { targets, values, .. } => {\n+                if targets.len() != values.len() + 1 {\n                     self.fail(\n                         terminator.source_info.span,\n-                        \"encountered `SwitchInt` terminator with no target to jump to\",\n+                        format!(\n+                            \"encountered `SwitchInt` terminator with {} values, but {} targets (should be values+1)\",\n+                            values.len(),\n+                            targets.len(),\n+                        ),\n                     );\n                 }\n                 for target in targets {"}]}