{"sha": "0a454e5398d017a0b442d56c75ac470e996ae52a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNDU0ZTUzOThkMDE3YTBiNDQyZDU2Yzc1YWM0NzBlOTk2YWU1MmE=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-06-22T22:37:05Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-06-22T23:17:15Z"}, "message": "Add UI test for issue 73592", "tree": {"sha": "251a6de5cf7a13f148c2d76e25756b806e5f4556", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/251a6de5cf7a13f148c2d76e25756b806e5f4556"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a454e5398d017a0b442d56c75ac470e996ae52a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a454e5398d017a0b442d56c75ac470e996ae52a", "html_url": "https://github.com/rust-lang/rust/commit/0a454e5398d017a0b442d56c75ac470e996ae52a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a454e5398d017a0b442d56c75ac470e996ae52a/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3", "html_url": "https://github.com/rust-lang/rust/commit/1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "0cf77da559470a0aab29fb00ec2119dea1dd46b2", "filename": "src/test/ui/typeck/issue-73592-borrow_mut-through-deref.rs", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/0a454e5398d017a0b442d56c75ac470e996ae52a/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a454e5398d017a0b442d56c75ac470e996ae52a/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.rs?ref=0a454e5398d017a0b442d56c75ac470e996ae52a", "patch": "@@ -0,0 +1,58 @@\n+// check-pass\n+//\n+// rust-lang/rust#73592: borrow_mut through Deref should work.\n+//\n+// Before #72280, when we see something like `&mut *rcvr.method()`, we\n+// incorrectly requires `rcvr` to be type-checked as a mut place. While this\n+// requirement is usually correct for smart pointers, it is overly restrictive\n+// for types like `Mutex` or `RefCell` which can produce a guard that\n+// implements `DerefMut` from `&self`.\n+//\n+// Making it more confusing, because we use Deref as the fallback when DerefMut\n+// is implemented, we won't see an issue when the smart pointer does not\n+// implement `DerefMut`. It only causes an issue when `rcvr` is obtained via a\n+// type that implements both `Deref` or `DerefMut`.\n+//\n+// This bug is only discovered in #73592 after it is already fixed as a side-effect\n+// of a refactoring made in #72280.\n+\n+#![warn(unused_mut)]\n+\n+use std::pin::Pin;\n+use std::cell::RefCell;\n+\n+struct S(RefCell<()>);\n+\n+fn test_pin(s: Pin<&S>) {\n+    // This works before #72280.\n+    let _ = &mut *s.0.borrow_mut();\n+}\n+\n+fn test_pin_mut(s: Pin<&mut S>) {\n+    // This should compile but didn't before #72280.\n+    let _ = &mut *s.0.borrow_mut();\n+}\n+\n+fn test_vec(s: &Vec<RefCell<()>>) {\n+    // This should compile but didn't before #72280.\n+    let _ = &mut *s[0].borrow_mut();\n+}\n+\n+fn test_mut_pin(mut s: Pin<&S>) {\n+    //~^ WARN variable does not need to be mutable\n+    let _ = &mut *s.0.borrow_mut();\n+}\n+\n+fn test_mut_pin_mut(mut s: Pin<&mut S>) {\n+    //~^ WARN variable does not need to be mutable\n+    let _ = &mut *s.0.borrow_mut();\n+}\n+\n+fn main() {\n+    let mut s = S(RefCell::new(()));\n+    test_pin(Pin::new(&s));\n+    test_pin_mut(Pin::new(&mut s));\n+    test_mut_pin(Pin::new(&s));\n+    test_mut_pin_mut(Pin::new(&mut s));\n+    test_vec(&vec![s.0]);\n+}"}, {"sha": "51303adc9e53387e47cde762d6699870e1d9b6d5", "filename": "src/test/ui/typeck/issue-73592-borrow_mut-through-deref.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0a454e5398d017a0b442d56c75ac470e996ae52a/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a454e5398d017a0b442d56c75ac470e996ae52a/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-73592-borrow_mut-through-deref.stderr?ref=0a454e5398d017a0b442d56c75ac470e996ae52a", "patch": "@@ -0,0 +1,24 @@\n+warning: variable does not need to be mutable\n+  --> $DIR/issue-73592-borrow_mut-through-deref.rs:41:17\n+   |\n+LL | fn test_mut_pin(mut s: Pin<&S>) {\n+   |                 ----^\n+   |                 |\n+   |                 help: remove this `mut`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-73592-borrow_mut-through-deref.rs:19:9\n+   |\n+LL | #![warn(unused_mut)]\n+   |         ^^^^^^^^^^\n+\n+warning: variable does not need to be mutable\n+  --> $DIR/issue-73592-borrow_mut-through-deref.rs:46:21\n+   |\n+LL | fn test_mut_pin_mut(mut s: Pin<&mut S>) {\n+   |                     ----^\n+   |                     |\n+   |                     help: remove this `mut`\n+\n+warning: 2 warnings emitted\n+"}]}