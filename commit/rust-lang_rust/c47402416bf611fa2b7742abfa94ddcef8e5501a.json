{"sha": "c47402416bf611fa2b7742abfa94ddcef8e5501a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzQwMjQxNmJmNjExZmEyYjc3NDJhYmZhOTRkZGNlZjhlNTUwMWE=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-17T13:11:36Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-17T13:11:36Z"}, "message": "Added bit operations to const folding", "tree": {"sha": "1865890e5d3854d598b330e02f567772fa61c129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1865890e5d3854d598b330e02f567772fa61c129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47402416bf611fa2b7742abfa94ddcef8e5501a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47402416bf611fa2b7742abfa94ddcef8e5501a", "html_url": "https://github.com/rust-lang/rust/commit/c47402416bf611fa2b7742abfa94ddcef8e5501a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47402416bf611fa2b7742abfa94ddcef8e5501a/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7ec53b52f1549571904a7b1bce71a4e24e42db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ec53b52f1549571904a7b1bce71a4e24e42db6", "html_url": "https://github.com/rust-lang/rust/commit/d7ec53b52f1549571904a7b1bce71a4e24e42db6"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "01fb3520f2c9728a9867b40d46be2ae02719b417", "filename": "src/consts.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c47402416bf611fa2b7742abfa94ddcef8e5501a/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47402416bf611fa2b7742abfa94ddcef8e5501a/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=c47402416bf611fa2b7742abfa94ddcef8e5501a", "patch": "@@ -402,11 +402,11 @@ fn constant_binop(cx: &Context, op: BinOp, left: &Expr, right: &Expr)\n         //BiRem,\n         BiAnd => constant_short_circuit(cx, left, right, false),\n         BiOr => constant_short_circuit(cx, left, right, true),\n-        //BiBitXor,\n-        //BiBitAnd,\n-        //BiBitOr,\n-        //BiShl,\n-        //BiShr,\n+        BiBitXor => constant_bitop(cx, left, right, |x, y| x ^ y),\n+        BiBitAnd => constant_bitop(cx, left, right, |x, y| x & y),\n+        BiBitOr => constant_bitop(cx, left, right, |x, y| (x | y)),\n+        BiShl => constant_bitop(cx, left, right, |x, y| x << y),\n+        BiShr => constant_bitop(cx, left, right, |x, y| x >> y),\n         BiEq => constant_binop_apply(cx, left, right,\n             |l, r| Some(ConstantBool(l == r))),\n         BiNe => constant_binop_apply(cx, left, right,\n@@ -415,10 +415,23 @@ fn constant_binop(cx: &Context, op: BinOp, left: &Expr, right: &Expr)\n         BiLe => constant_cmp(cx, left, right, Greater, false),\n         BiGe => constant_cmp(cx, left, right, Less, false),\n         BiGt => constant_cmp(cx, left, right, Greater, true),\n-        _ => None,\n+        _ => None\n     }\n }\n \n+fn constant_bitop<F>(cx: &Context, left: &Expr, right: &Expr, f: F)\n+        -> Option<Constant> where F: Fn(u64, u64) -> u64 {\n+    constant_binop_apply(cx, left, right, |l, r| match (l, r) {\n+        (ConstantBool(l), ConstantBool(r)) =>\n+            Some(ConstantBool(f(l as u64, r as u64) != 0)),\n+        (ConstantByte(l8), ConstantByte(r8)) =>\n+            Some(ConstantByte(f(l8 as u64, r8 as u64) as u8)),\n+        (ConstantInt(l, lty), ConstantInt(r, rty)) =>\n+            unify_int_type(lty, rty, Plus).map(|ty| ConstantInt(f(l, r), ty)),\n+        _ => None\n+    })\n+}\n+\n fn constant_cmp(cx: &Context, left: &Expr, right: &Expr, ordering: Ordering,\n         b: bool) -> Option<Constant> {\n     constant_binop_apply(cx, left, right, |l, r| l.partial_cmp(&r).map(|o|"}]}