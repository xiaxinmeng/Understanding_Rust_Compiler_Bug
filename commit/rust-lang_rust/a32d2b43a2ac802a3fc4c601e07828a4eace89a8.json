{"sha": "a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMmQyYjQzYTJhYzgwMmEzZmM0YzYwMWUwNzgyOGE0ZWFjZTg5YTg=", "commit": {"author": {"name": "marcusdunn", "email": "marcus.s.dunn@gmail.com", "date": "2021-05-15T01:18:43Z"}, "committer": {"name": "marcusdunn", "email": "marcus.s.dunn@gmail.com", "date": "2021-06-04T16:41:55Z"}, "message": "removed uses of feature gate", "tree": {"sha": "cddda80245efdb33f7f50954fb888aaf5985302b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cddda80245efdb33f7f50954fb888aaf5985302b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "html_url": "https://github.com/rust-lang/rust/commit/a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/comments", "author": {"login": "MarcusDunn", "id": 51931484, "node_id": "MDQ6VXNlcjUxOTMxNDg0", "avatar_url": "https://avatars.githubusercontent.com/u/51931484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcusDunn", "html_url": "https://github.com/MarcusDunn", "followers_url": "https://api.github.com/users/MarcusDunn/followers", "following_url": "https://api.github.com/users/MarcusDunn/following{/other_user}", "gists_url": "https://api.github.com/users/MarcusDunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcusDunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcusDunn/subscriptions", "organizations_url": "https://api.github.com/users/MarcusDunn/orgs", "repos_url": "https://api.github.com/users/MarcusDunn/repos", "events_url": "https://api.github.com/users/MarcusDunn/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcusDunn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MarcusDunn", "id": 51931484, "node_id": "MDQ6VXNlcjUxOTMxNDg0", "avatar_url": "https://avatars.githubusercontent.com/u/51931484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcusDunn", "html_url": "https://github.com/MarcusDunn", "followers_url": "https://api.github.com/users/MarcusDunn/followers", "following_url": "https://api.github.com/users/MarcusDunn/following{/other_user}", "gists_url": "https://api.github.com/users/MarcusDunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcusDunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcusDunn/subscriptions", "organizations_url": "https://api.github.com/users/MarcusDunn/orgs", "repos_url": "https://api.github.com/users/MarcusDunn/repos", "events_url": "https://api.github.com/users/MarcusDunn/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcusDunn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b908905b3defa075d08661dc5916219a870b4856", "url": "https://api.github.com/repos/rust-lang/rust/commits/b908905b3defa075d08661dc5916219a870b4856", "html_url": "https://github.com/rust-lang/rust/commit/b908905b3defa075d08661dc5916219a870b4856"}], "stats": {"total": 40, "additions": 0, "deletions": 40}, "files": [{"sha": "2b349f0ed5f997e8ee9d7dc0f3ca6417cc5a3138", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-copy.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-copy.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,8 +2,6 @@\n \n // Test copy\n \n-#![feature(bindings_after_at)]\n-\n struct A { a: i32, b: i32 }\n struct B { a: i32, b: C }\n struct D { a: i32, d: C }"}, {"sha": "9d1f08d6eea39fdf899d1c07f326d24bdf346e00", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-move-neither-can-live-while-the-other-survives-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,8 +2,6 @@\n // It checks that you cannot use an AND-pattern (`binding @ pat`)\n // where one side is by-ref and the other is by-move.\n \n-#![feature(bindings_after_at)]\n-\n struct X {\n     x: (),\n }"}, {"sha": "1816a74a0ba3d02a15b3ea3ec4c95399db256070", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-move-no-subbindings-fun-param.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-no-subbindings-fun-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-no-subbindings-fun-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-no-subbindings-fun-param.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // See issue #12534.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {}\n \n struct A(Box<u8>);"}, {"sha": "a61d682152407cd3d7463963c6f16da5e5cfe282", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-move-and-move.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-move-and-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-move-and-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-move-and-move.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // Test that moving on both sides of an `@` pattern is not allowed.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U; // Not copy!\n "}, {"sha": "fbdefd9d36c90b0b4e4cf3b9ebf613cdfcd42817", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-at-and-box-pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // Test `@` patterns combined with `box` patterns.\n \n-#![feature(bindings_after_at)]\n #![feature(box_patterns)]\n \n #[derive(Copy, Clone)]"}, {"sha": "45aa65e67a9fa7449d2edda861567caf5a75eff0", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-at-and-box.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,6 +1,5 @@\n // Test `@` patterns combined with `box` patterns.\n \n-#![feature(bindings_after_at)]\n #![feature(box_patterns)]\n \n #[derive(Copy, Clone)]"}, {"sha": "0108861cfce3ca09fb1e90a7dc031e226370f1b6", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-by-copy-bindings-in-at.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-copy-bindings-in-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-copy-bindings-in-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-copy-bindings-in-at.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,8 +2,6 @@\n \n // Test `Copy` bindings in the rhs of `@` patterns.\n \n-#![feature(bindings_after_at)]\n-\n #[derive(Copy, Clone)]\n struct C;\n "}, {"sha": "82f16fca65fee6ec25381978db786161f0c941e4", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-by-move-and-ref-inverse-promotion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse-promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse-promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse-promotion.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,8 +1,6 @@\n // Test that `by_move_binding @ pat_with_by_ref_bindings` is prevented even with promotion.\n // Currently this logic exists in THIR match checking as opposed to borrowck.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U;\n     let a @ ref b = U; //~ ERROR borrow of moved value"}, {"sha": "06dc6e1c4da1f2e04324aae7e87c09a75be56036", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-by-move-and-ref-inverse.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref-inverse.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // Test that `by_move_binding @ pat_with_by_ref_bindings` is prevented.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U;\n "}, {"sha": "0b0a7801049fe588917fc5f8549f5ef0a4c6ec90", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-by-move-and-ref.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // Test that `ref mut? @ pat_with_by_move_bindings` is prevented.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U;\n "}, {"sha": "df213f688c2825c7cb7fbf4a09a07ee657f3626a", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-ref-both-sides.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-both-sides.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-both-sides.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-both-sides.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -3,8 +3,6 @@\n // Test that `ref` patterns may be used on both sides\n // of an `@` pattern according to NLL borrowck.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U; // Not copy!\n "}, {"sha": "6bc0d346c111a5e2905b836a1f079c2b40ea0fde", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-ref-mut-and-ref.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,5 +1,3 @@\n-#![feature(bindings_after_at)]\n-\n enum Option<T> {\n     None,\n     Some(T),"}, {"sha": "99739c7bce0412091437e44209c35053875ca428", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-ref-mut-twice.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-twice.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // Test that `ref mut x @ ref mut y` and varieties of that are not allowed.\n \n-#![feature(bindings_after_at)]\n-\n fn main() {\n     struct U;\n "}, {"sha": "9db37253c5368f862d56853178d697c99fb98835", "filename": "src/test/ui/pattern/bindings-after-at/box-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbox-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbox-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbox-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // run-pass\n \n-#![feature(bindings_after_at)]\n #![feature(box_patterns)]\n \n #[derive(Debug, PartialEq)]"}, {"sha": "1e2c2968c4b7aef54066556d366c265d76492365", "filename": "src/test/ui/pattern/bindings-after-at/copy-and-move-mixed.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fcopy-and-move-mixed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fcopy-and-move-mixed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fcopy-and-move-mixed.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,5 @@\n // Test that mixing `Copy` and non-`Copy` types in `@` patterns is forbidden.\n \n-#![feature(bindings_after_at)]\n-\n #[derive(Copy, Clone)]\n struct C;\n "}, {"sha": "dfd4d02854dac2b3ee0de1affbb5124055cd896e", "filename": "src/test/ui/pattern/bindings-after-at/default-binding-modes-both-sides-independent.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -7,7 +7,6 @@\n // If `binding` is allowed to influence `subpat`,\n // this would create problems for the generalization aforementioned.\n \n-#![feature(bindings_after_at)]\n \n fn main() {\n     struct NotCopy;"}, {"sha": "fe7d1eba1d9f26577a2532a5c56aedd7adb6a04a", "filename": "src/test/ui/pattern/bindings-after-at/nested-binding-mode-lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-mode-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-mode-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-mode-lint.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(bindings_after_at)]\n #![deny(unused_mut)]\n \n fn main() {"}, {"sha": "e7d99534d6ab05c129f36ddc4d44cbb17dd454fa", "filename": "src/test/ui/pattern/bindings-after-at/nested-binding-modes-mut.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-mut.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,5 +1,3 @@\n-#![feature(bindings_after_at)]\n-\n fn main() {\n     let mut is_mut @ not_mut = 42;\n     &mut is_mut;"}, {"sha": "adfb0387f46a24720cfebaf34300edad063b427d", "filename": "src/test/ui/pattern/bindings-after-at/nested-binding-modes-ref.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-binding-modes-ref.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,5 +1,3 @@\n-#![feature(bindings_after_at)]\n-\n fn main() {\n     let ref is_ref @ is_val = 42;\n     *is_ref;"}, {"sha": "f06563d56cb06df497dd1279cb43b8272d70fb8f", "filename": "src/test/ui/pattern/bindings-after-at/nested-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n \n-#![feature(bindings_after_at)]\n \n struct A { a: u8, b: u8 }\n "}, {"sha": "5c7769ce604cf6606e67192893f074dd1857b45f", "filename": "src/test/ui/pattern/bindings-after-at/nested-type-ascription-syntactically-invalid.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-type-ascription-syntactically-invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-type-ascription-syntactically-invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fnested-type-ascription-syntactically-invalid.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,6 @@\n // Here we check that type ascription is syntactically invalid when\n // not in the top position of a ascribing a let binding or function parameter.\n \n-#![feature(bindings_after_at)]\n \n // This has no effect.\n // We include it to demonstrate that this is the case:"}, {"sha": "383e377a5ebbb45b8c0cfb8885d2fab99d1f5a9b", "filename": "src/test/ui/pattern/bindings-after-at/or-patterns-box-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-box-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-box-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-box-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // run-pass\n \n-#![feature(bindings_after_at)]\n #![feature(box_patterns)]\n \n #[derive(Debug, PartialEq)]"}, {"sha": "d315f7ee3b68a60b0cd84b5ec192f7d27eea55f1", "filename": "src/test/ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-slice-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-slice-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns-slice-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // run-pass\n \n-#![feature(bindings_after_at)]\n \n #[derive(Debug, PartialEq)]\n enum MatchArm {"}, {"sha": "fcc361489994fb29aad4a36bc08e69fe8de4f27b", "filename": "src/test/ui/pattern/bindings-after-at/or-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2For-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // run-pass\n \n-#![feature(bindings_after_at)]\n \n #[derive(Debug, PartialEq)]\n enum MatchArm {"}, {"sha": "f167a3952ee9c3885e50d7a7c0178bf56c4a2319", "filename": "src/test/ui/pattern/bindings-after-at/pat-at-same-name-both.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -1,7 +1,6 @@\n // Test that `binding @ subpat` acts as a product context with respect to duplicate binding names.\n // The code that is tested here lives in resolve (see `resolve_pattern_inner`).\n \n-#![feature(bindings_after_at)]\n \n fn main() {\n     fn f(a @ a @ a: ()) {}"}, {"sha": "4f4c96e450b644b7e2a3a6ec5c969b9287b550ae", "filename": "src/test/ui/pattern/bindings-after-at/slice-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fslice-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32d2b43a2ac802a3fc4c601e07828a4eace89a8/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fslice-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fslice-patterns.rs?ref=a32d2b43a2ac802a3fc4c601e07828a4eace89a8", "patch": "@@ -2,7 +2,6 @@\n \n // run-pass\n \n-#![feature(bindings_after_at)]\n \n #[derive(Debug, PartialEq)]\n enum MatchArm {"}]}