{"sha": "6ed6a844e19138fe78a6ed07a71e105792539f4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZDZhODQ0ZTE5MTM4ZmU3OGE2ZWQwN2E3MWUxMDU3OTI1MzlmNGY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-23T20:10:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-23T20:10:19Z"}, "message": "Rollup merge of #73665 - alexcrichton:update-wasm-atomics-feature, r=davidtwco\n\nrustc: Modernize wasm checks for atomics\n\nThis commit modernizes how rustc checks for whether the `atomics`\nfeature is enabled for the wasm target. The `sess.target_features` set\nis consulted instead of fiddling around with dealing with various\naspects of LLVM and that syntax.", "tree": {"sha": "c83c51315ca355e097d0a972034bd0af08ef2ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c83c51315ca355e097d0a972034bd0af08ef2ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ed6a844e19138fe78a6ed07a71e105792539f4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8mGrCRBK7hj4Ov3rIwAAdHIIAKJRZr/EVpUfj7ICeddf4Hyh\nUpOKaGEdlCMu6p3zQsmNTfHPLDOUmw3HWWzLCsZ67UQhoHl1yJGvKztbWbDBcwqu\n8JEQMFXTz5biJ3tl/CJJc3EzGomrDLSnAEDYmqoLV/EMubkHy8d6Loj7pDEI6Zpa\nCDcQSD36zHnPvTkTCoJnnw+2zG1pV+Hoqgq8CrQTr8HAlOSIqXbBaEPrJEyV61Fh\nIK7sP5s+qlyI3LuZZHpkAKV848hPzv+imapuWuKJXY39cWPkSYH6OURb65EYb3GE\nWy/5ZqlfQaVwB+cGkw5HIy2x/xG7IwcZ5R3zXIyyrxar/7Ls881yp7sXpiTXxhE=\n=w4Ln\n-----END PGP SIGNATURE-----\n", "payload": "tree c83c51315ca355e097d0a972034bd0af08ef2ee6\nparent 4f2e540520e66287f6fe17fa1b55bb3984c4ccb4\nparent 0c2b02536c857b78cd9560e447fa669d4ca2ba3e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592943019 -0700\ncommitter GitHub <noreply@github.com> 1592943019 -0700\n\nRollup merge of #73665 - alexcrichton:update-wasm-atomics-feature, r=davidtwco\n\nrustc: Modernize wasm checks for atomics\n\nThis commit modernizes how rustc checks for whether the `atomics`\nfeature is enabled for the wasm target. The `sess.target_features` set\nis consulted instead of fiddling around with dealing with various\naspects of LLVM and that syntax.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed6a844e19138fe78a6ed07a71e105792539f4f", "html_url": "https://github.com/rust-lang/rust/commit/6ed6a844e19138fe78a6ed07a71e105792539f4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ed6a844e19138fe78a6ed07a71e105792539f4f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f2e540520e66287f6fe17fa1b55bb3984c4ccb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e540520e66287f6fe17fa1b55bb3984c4ccb4", "html_url": "https://github.com/rust-lang/rust/commit/4f2e540520e66287f6fe17fa1b55bb3984c4ccb4"}, {"sha": "0c2b02536c857b78cd9560e447fa669d4ca2ba3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c2b02536c857b78cd9560e447fa669d4ca2ba3e", "html_url": "https://github.com/rust-lang/rust/commit/0c2b02536c857b78cd9560e447fa669d4ca2ba3e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "54271d3dd04919e61a9fad93c31e8d1007ba2c59", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=6ed6a844e19138fe78a6ed07a71e105792539f4f", "patch": "@@ -23,6 +23,7 @@ use rustc_middle::bug;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{self, Lto, OutputType, Passes, SanitizerSet, SwitchWithOptPath};\n use rustc_session::Session;\n+use rustc_span::symbol::sym;\n use rustc_span::InnerSpan;\n use rustc_target::spec::{CodeModel, RelocModel};\n \n@@ -140,7 +141,7 @@ pub fn target_machine_factory(\n     // lower atomic operations to single-threaded operations.\n     if singlethread\n         && sess.target.target.llvm_target.contains(\"wasm32\")\n-        && features.iter().any(|s| *s == \"+atomics\")\n+        && sess.target_features.contains(&sym::atomics)\n     {\n         singlethread = false;\n     }"}, {"sha": "d6ef94bfd1727352d154943afa1ef06bbf1510dd", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=6ed6a844e19138fe78a6ed07a71e105792539f4f", "patch": "@@ -1,6 +1,7 @@\n use super::archive;\n use super::command::Command;\n use super::symbol_export;\n+use rustc_span::symbol::sym;\n \n use std::ffi::{OsStr, OsString};\n use std::fs::{self, File};\n@@ -1036,9 +1037,7 @@ impl<'a> WasmLd<'a> {\n         //\n         // * `--export=*tls*` - when `#[thread_local]` symbols are used these\n         //   symbols are how the TLS segments are initialized and configured.\n-        let atomics = sess.opts.cg.target_feature.contains(\"+atomics\")\n-            || sess.target.target.options.features.contains(\"+atomics\");\n-        if atomics {\n+        if sess.target_features.contains(&sym::atomics) {\n             cmd.arg(\"--shared-memory\");\n             cmd.arg(\"--max-memory=1073741824\");\n             cmd.arg(\"--import-memory\");"}, {"sha": "fa1368b104c7e02e45eb217dfe7f9024693babd6", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed6a844e19138fe78a6ed07a71e105792539f4f/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=6ed6a844e19138fe78a6ed07a71e105792539f4f", "patch": "@@ -159,6 +159,7 @@ symbols! {\n         assume_init,\n         async_await,\n         async_closure,\n+        atomics,\n         attr,\n         attributes,\n         attr_literals,"}]}