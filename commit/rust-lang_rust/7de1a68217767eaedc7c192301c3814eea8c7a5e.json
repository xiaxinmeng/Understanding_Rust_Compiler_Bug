{"sha": "7de1a68217767eaedc7c192301c3814eea8c7a5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZTFhNjgyMTc3NjdlYWVkYzdjMTkyMzAxYzM4MTRlZWE4YzdhNWU=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-05-19T21:06:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T05:29:17Z"}, "message": "std: add try_parse_addr and change an alt w/ ip_addr::ipv6 to avoid warning", "tree": {"sha": "28f1ea00b1cc078c5ba80b023ee489ec9878c37c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f1ea00b1cc078c5ba80b023ee489ec9878c37c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7de1a68217767eaedc7c192301c3814eea8c7a5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7de1a68217767eaedc7c192301c3814eea8c7a5e", "html_url": "https://github.com/rust-lang/rust/commit/7de1a68217767eaedc7c192301c3814eea8c7a5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7de1a68217767eaedc7c192301c3814eea8c7a5e/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb88f772a457d09616d790fed0f548d63863e5ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb88f772a457d09616d790fed0f548d63863e5ee", "html_url": "https://github.com/rust-lang/rust/commit/bb88f772a457d09616d790fed0f548d63863e5ee"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "024a4367eb8d4ec7e9df9a6319b5b59929adec84", "filename": "src/libstd/net_ip.rs", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7de1a68217767eaedc7c192301c3814eea8c7a5e/src%2Flibstd%2Fnet_ip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de1a68217767eaedc7c192301c3814eea8c7a5e/src%2Flibstd%2Fnet_ip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_ip.rs?ref=7de1a68217767eaedc7c192301c3814eea8c7a5e", "patch": "@@ -5,10 +5,9 @@ Types/fns concerning Internet Protocol (IP), versions 4 & 6\n import vec;\n import uint;\n \n-export ip_addr;\n+export ip_addr, parse_addr_err;\n export format_addr;\n export v4;\n-//format_addr, parse_addr;\n \n #[doc = \"An IP address\"]\n enum ip_addr {\n@@ -17,6 +16,13 @@ enum ip_addr {\n     ipv6(u16,u16,u16,u16,u16,u16,u16,u16)\n }\n \n+#[doc=\"\n+Human-friendly feedback on why a parse_addr attempt failed\n+\"]\n+type parse_addr_err = {\n+    err_msg: str\n+};\n+\n #[doc=\"\n Convert a `ip_addr` to a str\n \n@@ -29,7 +35,7 @@ fn format_addr(ip: ip_addr) -> str {\n       ipv4(a, b, c, d) {\n         #fmt[\"%u.%u.%u.%u\", a as uint, b as uint, c as uint, d as uint]\n       }\n-      ipv6(a,b,c,d,e,f,g,h) {\n+      ipv6(_, _, _, _, _, _, _, _) {\n         fail \"FIXME impl parsing of ipv6 addr\";\n       }\n     }\n@@ -52,14 +58,32 @@ j    Fails if the string is not a valid IPv4 address\n     * an `ip_addr` of the `ipv4` variant\n     \"]\n     fn parse_addr(ip: str) -> ip_addr {\n+        alt try_parse_addr(ip) {\n+          result::ok(addr) { addr }\n+          result::err(err_data) {\n+            fail err_data.err_msg\n+          }\n+        }\n+    }\n+    fn try_parse_addr(ip: str) -> result::result<ip_addr,parse_addr_err> {\n         let parts = vec::map(str::split_char(ip, '.'), {|s|\n             alt uint::from_str(s) {\n               some(n) if n <= 255u { n }\n-              _ { fail \"Invalid IP Address part.\" }\n+              _ { 256u }\n             }\n         });\n-        if vec::len(parts) != 4u { fail \"Too many dots in IP address\"; }\n-        ipv4(parts[0] as u8, parts[1] as u8, parts[2] as u8, parts[3] as u8)\n+        if vec::len(parts) != 4u {\n+            result::err({err_msg: #fmt(\"'%s' doesn't have 4 parts\",\n+                        ip)})\n+        }\n+        else if vec::contains(parts, 256u) {\n+            result::err({err_msg: #fmt(\"invalid octal in provided addr '%s'\",\n+                        ip)})\n+        }\n+        else {\n+            result::ok(ipv4(parts[0] as u8, parts[1] as u8,\n+                 parts[2] as u8, parts[3] as u8))\n+        }\n     }\n }\n "}]}