{"sha": "0f2ff4b2700a37c70f59717ee665567946ac1cad", "node_id": "C_kwDOAAsO6NoAKDBmMmZmNGIyNzAwYTM3YzcwZjU5NzE3ZWU2NjU1Njc5NDZhYzFjYWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-23T19:13:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-23T19:13:03Z"}, "message": "Rollup merge of #93213 - c410-f3r:let-chains-feature, r=matthewjasper\n\nFix `let_chains` and `if_let_guard` feature flags\n\nFixes https://github.com/rust-lang/rust/issues/93150\n\ncc #53667", "tree": {"sha": "72548fa83b2f4313dbda486d8cb05e0b1287c397", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72548fa83b2f4313dbda486d8cb05e0b1287c397"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f2ff4b2700a37c70f59717ee665567946ac1cad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh7ai/CRBK7hj4Ov3rIwAA1UQIADyaKxZFncTrktp4QOdOKQ/J\n3KcJodjzGokUA6JKtq0Ty6WnFdOxoecKKtXixf5iB4zXIAu3wHKZGR7xXGeb0aFn\n0vIssBWwd+1tUGCPTf78My8m1ukc5fhVtIanHgU81Rcnsk07SbUHvFoGUT83xEFn\n9EK0SwUD3SzeS7ToCw+aD90JecGSSlteqtI5yOOc9zs7o79RgQmdqQMDBp7qsl0k\nXGqp3PMv3HiA8AMy0PNAWLAjJbTYL3tZiAnBs7C5o5xDuDMx4aRPTnwfxAhIhpFV\n4VdVpFEio5KjTesx9jYdi315ChTMJV+FAKCXpJo3KgnHxdwjSUcGAYHuqeneoE4=\n=b25U\n-----END PGP SIGNATURE-----\n", "payload": "tree 72548fa83b2f4313dbda486d8cb05e0b1287c397\nparent bb260e8950293b84d1da4724cc72027328b74a74\nparent cbb0fffe59ff17e322b0b29d73381975abe039c1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642965183 +0100\ncommitter GitHub <noreply@github.com> 1642965183 +0100\n\nRollup merge of #93213 - c410-f3r:let-chains-feature, r=matthewjasper\n\nFix `let_chains` and `if_let_guard` feature flags\n\nFixes https://github.com/rust-lang/rust/issues/93150\n\ncc #53667\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f2ff4b2700a37c70f59717ee665567946ac1cad", "html_url": "https://github.com/rust-lang/rust/commit/0f2ff4b2700a37c70f59717ee665567946ac1cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f2ff4b2700a37c70f59717ee665567946ac1cad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb260e8950293b84d1da4724cc72027328b74a74", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb260e8950293b84d1da4724cc72027328b74a74", "html_url": "https://github.com/rust-lang/rust/commit/bb260e8950293b84d1da4724cc72027328b74a74"}, {"sha": "cbb0fffe59ff17e322b0b29d73381975abe039c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbb0fffe59ff17e322b0b29d73381975abe039c1", "html_url": "https://github.com/rust-lang/rust/commit/cbb0fffe59ff17e322b0b29d73381975abe039c1"}], "stats": {"total": 135, "additions": 112, "deletions": 23}, "files": [{"sha": "26284728ff2c62cc5616e08648b0d4af5fbca233", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0f2ff4b2700a37c70f59717ee665567946ac1cad/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2ff4b2700a37c70f59717ee665567946ac1cad/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=0f2ff4b2700a37c70f59717ee665567946ac1cad", "patch": "@@ -2383,16 +2383,30 @@ impl<'a> Parser<'a> {\n     }\n \n     pub(super) fn parse_arm(&mut self) -> PResult<'a, Arm> {\n+        fn check_let_expr(expr: &Expr) -> (bool, bool) {\n+            match expr.kind {\n+                ExprKind::Binary(_, ref lhs, ref rhs) => {\n+                    let lhs_rslt = check_let_expr(lhs);\n+                    let rhs_rslt = check_let_expr(rhs);\n+                    (lhs_rslt.0 || rhs_rslt.0, false)\n+                }\n+                ExprKind::Let(..) => (true, true),\n+                _ => (false, true),\n+            }\n+        }\n         let attrs = self.parse_outer_attributes()?;\n         self.collect_tokens_trailing_token(attrs, ForceCollect::No, |this, attrs| {\n             let lo = this.token.span;\n             let pat = this.parse_pat_allow_top_alt(None, RecoverComma::Yes, RecoverColon::Yes)?;\n             let guard = if this.eat_keyword(kw::If) {\n                 let if_span = this.prev_token.span;\n                 let cond = this.parse_expr()?;\n-                if let ExprKind::Let(..) = cond.kind {\n-                    // Remove the last feature gating of a `let` expression since it's stable.\n-                    this.sess.gated_spans.ungate_last(sym::let_chains, cond.span);\n+                let (has_let_expr, does_not_have_bin_op) = check_let_expr(&cond);\n+                if has_let_expr {\n+                    if does_not_have_bin_op {\n+                        // Remove the last feature gating of a `let` expression since it's stable.\n+                        this.sess.gated_spans.ungate_last(sym::let_chains, cond.span);\n+                    }\n                     let span = if_span.to(cond.span);\n                     this.sess.gated_spans.gate(sym::if_let_guard, span);\n                 }"}, {"sha": "4a36515b9912820fd9a60c7d875071d15b7500ce", "filename": "src/test/ui/rfc-2294-if-let-guard/feature-gate.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs?ref=0f2ff4b2700a37c70f59717ee665567946ac1cad", "patch": "@@ -14,10 +14,12 @@ fn _if_let_guard() {\n         //~^ ERROR `let` expressions in this position are unstable\n \n         () if true && let 0 = 1 => {}\n-        //~^ ERROR `let` expressions in this position are unstable\n+        //~^ ERROR `if let` guards are experimental\n+        //~| ERROR `let` expressions in this position are unstable\n \n         () if let 0 = 1 && true => {}\n-        //~^ ERROR `let` expressions in this position are unstable\n+        //~^ ERROR `if let` guards are experimental\n+        //~| ERROR `let` expressions in this position are unstable\n \n         () if (let 0 = 1) && true => {}\n         //~^ ERROR `let` expressions in this position are unstable\n@@ -30,14 +32,17 @@ fn _if_let_guard() {\n         //~| ERROR `let` expressions in this position are unstable\n \n         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n-        //~^ ERROR `let` expressions in this position are unstable\n+        //~^ ERROR `if let` guards are experimental\n+        //~| ERROR `let` expressions in this position are unstable\n         //~| ERROR `let` expressions in this position are unstable\n         //~| ERROR `let` expressions in this position are unstable\n         //~| ERROR `let` expressions in this position are unstable\n         //~| ERROR `let` expressions in this position are unstable\n \n         () if let Range { start: _, end: _ } = (true..true) && false => {}\n-        //~^ ERROR `let` expressions in this position are unstable\n+        //~^ ERROR `if let` guards are experimental\n+        //~| ERROR `let` expressions in this position are unstable\n+\n         _ => {}\n     }\n }"}, {"sha": "8d93fb87f7ad19ba6c3b7a60e9310d2cbc3b2a91", "filename": "src/test/ui/rfc-2294-if-let-guard/feature-gate.stderr", "status": "modified", "additions": 56, "deletions": 16, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr?ref=0f2ff4b2700a37c70f59717ee665567946ac1cad", "patch": "@@ -1,5 +1,5 @@\n error: no rules expected the token `let`\n-  --> $DIR/feature-gate.rs:64:15\n+  --> $DIR/feature-gate.rs:69:15\n    |\n LL |     macro_rules! use_expr {\n    |     --------------------- when calling this macro\n@@ -18,7 +18,47 @@ LL |         () if let 0 = 1 => {}\n    = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n \n error[E0658]: `if let` guards are experimental\n-  --> $DIR/feature-gate.rs:60:12\n+  --> $DIR/feature-gate.rs:16:12\n+   |\n+LL |         () if true && let 0 = 1 => {}\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n+   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n+   = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n+\n+error[E0658]: `if let` guards are experimental\n+  --> $DIR/feature-gate.rs:20:12\n+   |\n+LL |         () if let 0 = 1 && true => {}\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n+   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n+   = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n+\n+error[E0658]: `if let` guards are experimental\n+  --> $DIR/feature-gate.rs:34:12\n+   |\n+LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n+   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n+   = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n+\n+error[E0658]: `if let` guards are experimental\n+  --> $DIR/feature-gate.rs:42:12\n+   |\n+LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n+   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n+   = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n+\n+error[E0658]: `if let` guards are experimental\n+  --> $DIR/feature-gate.rs:65:12\n    |\n LL |         () if let 0 = 1 => {}\n    |            ^^^^^^^^^^^^\n@@ -55,7 +95,7 @@ LL |         () if true && let 0 = 1 => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:19:15\n+  --> $DIR/feature-gate.rs:20:15\n    |\n LL |         () if let 0 = 1 && true => {}\n    |               ^^^^^^^^^\n@@ -64,7 +104,7 @@ LL |         () if let 0 = 1 && true => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:22:16\n+  --> $DIR/feature-gate.rs:24:16\n    |\n LL |         () if (let 0 = 1) && true => {}\n    |                ^^^^^^^^^\n@@ -73,7 +113,7 @@ LL |         () if (let 0 = 1) && true => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:25:24\n+  --> $DIR/feature-gate.rs:27:24\n    |\n LL |         () if true && (let 0 = 1) => {}\n    |                        ^^^^^^^^^\n@@ -82,7 +122,7 @@ LL |         () if true && (let 0 = 1) => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:28:16\n+  --> $DIR/feature-gate.rs:30:16\n    |\n LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    |                ^^^^^^^^^\n@@ -91,7 +131,7 @@ LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:28:31\n+  --> $DIR/feature-gate.rs:30:31\n    |\n LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    |                               ^^^^^^^^^\n@@ -100,7 +140,7 @@ LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:32:15\n+  --> $DIR/feature-gate.rs:34:15\n    |\n LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n    |               ^^^^^^^^^\n@@ -109,7 +149,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:32:28\n+  --> $DIR/feature-gate.rs:34:28\n    |\n LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n    |                            ^^^^^^^^^\n@@ -118,7 +158,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:32:42\n+  --> $DIR/feature-gate.rs:34:42\n    |\n LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n    |                                          ^^^^^^^^^\n@@ -127,7 +167,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:32:55\n+  --> $DIR/feature-gate.rs:34:55\n    |\n LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n    |                                                       ^^^^^^^^^\n@@ -136,7 +176,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:32:68\n+  --> $DIR/feature-gate.rs:34:68\n    |\n LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}\n    |                                                                    ^^^^^^^^^\n@@ -145,7 +185,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:39:15\n+  --> $DIR/feature-gate.rs:42:15\n    |\n LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -154,7 +194,7 @@ LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:54:16\n+  --> $DIR/feature-gate.rs:59:16\n    |\n LL |     use_expr!((let 0 = 1 && 0 == 0));\n    |                ^^^^^^^^^\n@@ -163,14 +203,14 @@ LL |     use_expr!((let 0 = 1 && 0 == 0));\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are unstable\n-  --> $DIR/feature-gate.rs:56:16\n+  --> $DIR/feature-gate.rs:61:16\n    |\n LL |     use_expr!((let 0 = 1));\n    |                ^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 23 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "f90b9ab0d40f03c9823583dc785d1e78f56749c8", "filename": "src/test/ui/rfc-2497-if-let-chains/issue-93150.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.rs?ref=0f2ff4b2700a37c70f59717ee665567946ac1cad", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    match true {\n+        _ if let true = true && true => {}\n+        //~^ ERROR `if let` guards are\n+        //~| ERROR `let` expressions in this\n+        _ => {}\n+    }\n+}"}, {"sha": "b25f299a2190f939eb8bddcef3fa4e15d9eedd24", "filename": "src/test/ui/rfc-2497-if-let-chains/issue-93150.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f2ff4b2700a37c70f59717ee665567946ac1cad/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-93150.stderr?ref=0f2ff4b2700a37c70f59717ee665567946ac1cad", "patch": "@@ -0,0 +1,22 @@\n+error[E0658]: `if let` guards are experimental\n+  --> $DIR/issue-93150.rs:3:11\n+   |\n+LL |         _ if let true = true && true => {}\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n+   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n+   = help: you can write `if matches!(<expr>, <pattern>)` instead of `if let <pattern> = <expr>`\n+\n+error[E0658]: `let` expressions in this position are unstable\n+  --> $DIR/issue-93150.rs:3:14\n+   |\n+LL |         _ if let true = true && true => {}\n+   |              ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}