{"sha": "75cb441fba111bed153f519f1f2906843360cfc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Y2I0NDFmYmExMTFiZWQxNTNmNTE5ZjFmMjkwNjg0MzM2MGNmYzc=", "commit": {"author": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-13T13:32:37Z"}, "committer": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-13T13:32:37Z"}, "message": "Simplify call site and deref completion test", "tree": {"sha": "f3916171b982e32d61431f1d15ca5688044466bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3916171b982e32d61431f1d15ca5688044466bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75cb441fba111bed153f519f1f2906843360cfc7", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEcPkYW+t8+2SKgl5T2MS9WuTZzE0FAmBMvvUACgkQ2MS9WuTZ\nzE1xywgAmaIzQLQHWUvYAklChfBfUk2CaMe2dF9Wa2x01jRcCW5LMiq+2u3ze8Yo\nBG8uOMC8b4iWq5+3mgzGsxtYfAJwpG5RGZIGskMmwOrz94G1qj/YTzdwj1x2ZRvY\nKy2Ke4s5i3sbPYRmKgjqToi/fwVBcBNXUxK00llYtgRBSz5n96reomnfF+UukD/D\nnLlohVHOWtq444eh4EioVE+ptelth/HKWiS62pHK+8w+iyNyMwxKfR/jnIH44wn2\n0jjPs5M7m4Kpx3c+JNhG/isCzTYyKtLZjVs5l/IZVShV3pN4qEF2SlfKkH46eado\nsRsCSDwNjBDzVMu/6jQibfTEVV32Hw==\n=7xwB\n-----END PGP SIGNATURE-----", "payload": "tree f3916171b982e32d61431f1d15ca5688044466bb\nparent d064ed5f63b746277895ae2aad37b5fd1516cce7\nauthor ivan770 <leshenko.ivan770@gmail.com> 1615642357 +0200\ncommitter ivan770 <leshenko.ivan770@gmail.com> 1615642357 +0200\n\nSimplify call site and deref completion test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75cb441fba111bed153f519f1f2906843360cfc7", "html_url": "https://github.com/rust-lang/rust/commit/75cb441fba111bed153f519f1f2906843360cfc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75cb441fba111bed153f519f1f2906843360cfc7/comments", "author": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d064ed5f63b746277895ae2aad37b5fd1516cce7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d064ed5f63b746277895ae2aad37b5fd1516cce7", "html_url": "https://github.com/rust-lang/rust/commit/d064ed5f63b746277895ae2aad37b5fd1516cce7"}], "stats": {"total": 101, "additions": 16, "deletions": 85}, "files": [{"sha": "e72f54ef47998c9700ba737a1e0eae703ee1aa63", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 16, "deletions": 85, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/75cb441fba111bed153f519f1f2906843360cfc7/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75cb441fba111bed153f519f1f2906843360cfc7/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=75cb441fba111bed153f519f1f2906843360cfc7", "patch": "@@ -327,18 +327,18 @@ impl<'a> Render<'a> {\n fn compute_relevance(ctx: &RenderContext, ty: &Type, name: &str) -> Option<CompletionRelevance> {\n     let (expected_name, expected_type) = ctx.expected_name_and_type()?;\n     let mut res = CompletionRelevance::default();\n-    res.exact_type_match = ty == &expected_type\n-        || autoderef_relevance(\n-            ctx.db().upcast(),\n-            ty,\n-            expected_type.remove_ref().as_ref().unwrap_or(&expected_type),\n-        );\n+    res.exact_type_match = relevance_type_match(ctx.db().upcast(), ty, expected_type);\n     res.exact_name_match = name == &expected_name;\n     Some(res)\n }\n \n-fn autoderef_relevance(db: &dyn HirDatabase, ty: &Type, expected_type: &Type) -> bool {\n-    ty.autoderef(db).any(|deref_ty| &deref_ty == expected_type)\n+fn relevance_type_match(db: &dyn HirDatabase, ty: &Type, expected_type: Type) -> bool {\n+    if ty == &expected_type {\n+        return true;\n+    }\n+\n+    let ty_without_ref = expected_type.remove_ref().unwrap_or(expected_type);\n+    ty.autoderef(db).any(|deref_ty| deref_ty == ty_without_ref)\n }\n \n #[cfg(test)]\n@@ -1001,7 +1001,7 @@ fn main() {\n \n     #[test]\n     fn suggest_deref() {\n-        check(\n+        check_relevance(\n             r#\"\n #[lang = \"deref\"]\n trait Deref {\n@@ -1030,82 +1030,13 @@ fn main() {\n }\n             \"#,\n             expect![[r#\"\n-                [\n-                    CompletionItem {\n-                        label: \"Deref\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"Deref\",\n-                        kind: SymbolKind(\n-                            Trait,\n-                        ),\n-                    },\n-                    CompletionItem {\n-                        label: \"S\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"S\",\n-                        kind: SymbolKind(\n-                            Struct,\n-                        ),\n-                    },\n-                    CompletionItem {\n-                        label: \"T\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"T\",\n-                        kind: SymbolKind(\n-                            Struct,\n-                        ),\n-                    },\n-                    CompletionItem {\n-                        label: \"foo(\u2026)\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"foo(${1:s})$0\",\n-                        kind: SymbolKind(\n-                            Function,\n-                        ),\n-                        lookup: \"foo\",\n-                        detail: \"-> ()\",\n-                        trigger_call_info: true,\n-                    },\n-                    CompletionItem {\n-                        label: \"m\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"m\",\n-                        kind: SymbolKind(\n-                            Local,\n-                        ),\n-                        detail: \"i32\",\n-                    },\n-                    CompletionItem {\n-                        label: \"main()\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"main()$0\",\n-                        kind: SymbolKind(\n-                            Function,\n-                        ),\n-                        lookup: \"main\",\n-                        detail: \"-> ()\",\n-                    },\n-                    CompletionItem {\n-                        label: \"t\",\n-                        source_range: 293..293,\n-                        delete: 293..293,\n-                        insert: \"t\",\n-                        kind: SymbolKind(\n-                            Local,\n-                        ),\n-                        detail: \"T\",\n-                        relevance: CompletionRelevance {\n-                            exact_name_match: false,\n-                            exact_type_match: true,\n-                        },\n-                    },\n-                ]\n+                lc t [type]\n+                tt Deref []\n+                st S []\n+                st T []\n+                fn foo(\u2026) []\n+                lc m []\n+                fn main() []\n             \"#]],\n         )\n     }"}]}