{"sha": "d80f93d507406375e302d9583e02bf19d1565cfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MGY5M2Q1MDc0MDYzNzVlMzAyZDk1ODNlMDJiZjE5ZDE1NjVjZmU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-17T23:13:25Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-17T23:13:25Z"}, "message": "Use smaller example for issue-71659", "tree": {"sha": "a83e71bc0689dafb995f124ce050833d03404cab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83e71bc0689dafb995f124ce050833d03404cab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d80f93d507406375e302d9583e02bf19d1565cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d80f93d507406375e302d9583e02bf19d1565cfe", "html_url": "https://github.com/rust-lang/rust/commit/d80f93d507406375e302d9583e02bf19d1565cfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d80f93d507406375e302d9583e02bf19d1565cfe/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59cc9de039ca251599b007cdf32b721bdd3f4578", "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc9de039ca251599b007cdf32b721bdd3f4578", "html_url": "https://github.com/rust-lang/rust/commit/59cc9de039ca251599b007cdf32b721bdd3f4578"}], "stats": {"total": 92, "additions": 15, "deletions": 77}, "files": [{"sha": "3524ca02bbf87289d229a766244f71d3d5c30e89", "filename": "src/test/ui/unsized/issue-71659.rs", "status": "modified", "additions": 11, "deletions": 73, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/d80f93d507406375e302d9583e02bf19d1565cfe/src%2Ftest%2Fui%2Funsized%2Fissue-71659.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d80f93d507406375e302d9583e02bf19d1565cfe/src%2Ftest%2Fui%2Funsized%2Fissue-71659.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Fissue-71659.rs?ref=d80f93d507406375e302d9583e02bf19d1565cfe", "patch": "@@ -1,94 +1,32 @@\n #![feature(unsize)]\n \n use std::marker::Unsize;\n-use std::rc::Rc;\n-use std::sync::Arc;\n \n pub trait CastTo<T: ?Sized>: Unsize<T> {\n     fn cast_to(&self) -> &T;\n-    fn cast_mut_to(&mut self) -> &mut T;\n-    fn into_cast_to(self: Box<Self>) -> Box<T>;\n-    fn cast_rc_to(self: Rc<Self>) -> Rc<T>;\n-    fn cast_arc_to(self: Arc<Self>) -> Arc<T>;\n }\n \n-impl<T: ?Sized> Cast for T {}\n-pub trait Cast {\n-    fn cast<T: ?Sized>(&self) -> &T\n-    where\n-        Self: CastTo<T>,\n-    {\n+impl<T: ?Sized, U: ?Sized + Unsize<T>> CastTo<T> for U {\n+    fn cast_to(&self) -> &T {\n         self\n     }\n+}\n \n-    fn cast_mut<T>(&mut self) -> &mut T\n-    where\n-        Self: CastTo<T>,\n-    {\n-        self.cast_mut_to()\n-    }\n-\n-    fn into_cast<T>(self: Box<Self>) -> Box<T>\n-    where\n-        Self: CastTo<T>,\n-    {\n-        self.into_cast_to()\n-    }\n-\n-    fn cast_rc<T>(self: Rc<Self>) -> Rc<T>\n-    where\n-        Self: CastTo<T>,\n-    {\n-        self.cast_rc_to()\n-    }\n-\n-    fn cast_arc<T>(self: Arc<Self>) -> Arc<T>\n+impl<T: ?Sized> Cast for T {}\n+pub trait Cast {\n+    fn cast<T: ?Sized>(&self) -> &T\n     where\n         Self: CastTo<T>,\n     {\n-        self.cast_arc_to()\n-    }\n-}\n-impl<T: ?Sized, U: ?Sized + Unsize<T>> CastTo<T> for U {\n-    fn cast_to(&self) -> &T {\n-        self\n-    }\n-\n-    fn cast_mut_to(&mut self) -> &mut T {\n-        self\n-    }\n-\n-    fn into_cast_to(self: Box<Self>) -> Box<T> {\n         self\n     }\n-\n-    fn cast_rc_to(self: Rc<Self>) -> Rc<T> {\n-        self\n-    }\n-\n-    fn cast_arc_to(self: Arc<Self>) -> Arc<T> {\n-        self\n-    }\n-}\n-\n-pub trait Foo {\n-    fn foo(&self) {\n-        println!(\"Foo({})\", core::any::type_name::<Self>());\n-    }\n-}\n-\n-pub trait Bar: CastTo<dyn Foo> + CastTo<dyn core::fmt::Debug> + CastTo<[i32]> {\n-    fn bar(&self) {\n-        println!(\"Bar({})\", core::any::type_name::<Self>());\n-    }\n }\n \n-impl Foo for [i32; 10] {}\n-impl Bar for [i32; 10] {}\n+pub trait Foo: CastTo<[i32]> {}\n+impl Foo for [i32; 0] {}\n \n fn main() {\n-    let x = [0; 10];\n-    let x: Box<dyn Bar> = Box::new(x);\n-    let x = (*x).cast::<[i32]>();\n-    //~^ ERROR: the trait bound `dyn Bar: CastTo<[i32]>` is not satisfied\n+    let x: &dyn Foo = &[];\n+    let x = x.cast::<[i32]>();\n+    //~^ ERROR: the trait bound `dyn Foo: CastTo<[i32]>` is not satisfied\n }"}, {"sha": "be2df8c85e1afba96520b64d76497120fd4d0b83", "filename": "src/test/ui/unsized/issue-71659.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d80f93d507406375e302d9583e02bf19d1565cfe/src%2Ftest%2Fui%2Funsized%2Fissue-71659.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d80f93d507406375e302d9583e02bf19d1565cfe/src%2Ftest%2Fui%2Funsized%2Fissue-71659.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Fissue-71659.stderr?ref=d80f93d507406375e302d9583e02bf19d1565cfe", "patch": "@@ -1,8 +1,8 @@\n-error[E0277]: the trait bound `dyn Bar: CastTo<[i32]>` is not satisfied\n-  --> $DIR/issue-71659.rs:92:18\n+error[E0277]: the trait bound `dyn Foo: CastTo<[i32]>` is not satisfied\n+  --> $DIR/issue-71659.rs:30:15\n    |\n-LL |     let x = (*x).cast::<[i32]>();\n-   |                  ^^^^ the trait `CastTo<[i32]>` is not implemented for `dyn Bar`\n+LL |     let x = x.cast::<[i32]>();\n+   |               ^^^^ the trait `CastTo<[i32]>` is not implemented for `dyn Foo`\n \n error: aborting due to previous error\n "}]}