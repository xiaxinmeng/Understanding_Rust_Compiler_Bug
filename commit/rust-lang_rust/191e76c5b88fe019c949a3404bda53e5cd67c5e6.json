{"sha": "191e76c5b88fe019c949a3404bda53e5cd67c5e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MWU3NmM1Yjg4ZmUwMTljOTQ5YTM0MDRiZGE1M2U1Y2Q2N2M1ZTY=", "commit": {"author": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-07-07T21:11:20Z"}, "committer": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-07-07T21:13:21Z"}, "message": "fix perf issue in macro parser\n\nFor a fuller description of the performance issue fixed by this:\n\nhttps://github.com/rust-lang/rust/issues/51754#issuecomment-403242159", "tree": {"sha": "d01b9162164eb46cc24250aa901a9f761e64fdba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d01b9162164eb46cc24250aa901a9f761e64fdba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/191e76c5b88fe019c949a3404bda53e5cd67c5e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/191e76c5b88fe019c949a3404bda53e5cd67c5e6", "html_url": "https://github.com/rust-lang/rust/commit/191e76c5b88fe019c949a3404bda53e5cd67c5e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/191e76c5b88fe019c949a3404bda53e5cd67c5e6/comments", "author": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fd3d7899a444fe110ae9277542b306844ecf0c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd3d7899a444fe110ae9277542b306844ecf0c4", "html_url": "https://github.com/rust-lang/rust/commit/9fd3d7899a444fe110ae9277542b306844ecf0c4"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "ba61b2307d9c847a13f0f9b147cb712a8c4c5333", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/191e76c5b88fe019c949a3404bda53e5cd67c5e6/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191e76c5b88fe019c949a3404bda53e5cd67c5e6/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=191e76c5b88fe019c949a3404bda53e5cd67c5e6", "patch": "@@ -696,10 +696,17 @@ pub fn parse(\n             } else {\n                 return Failure(parser.span, token::Eof);\n             }\n+        } else {\n+            // Performance hack: eof_items may share matchers via Rc with other things that we want\n+            // to modify. Dropping eof_items now may drop these refcounts to 1, preventing an\n+            // unnecessary implicit clone later in Rc::make_mut.\n+            drop(eof_items);\n         }\n+\n         // Another possibility is that we need to call out to parse some rust nonterminal\n         // (black-box) parser. However, if there is not EXACTLY ONE of these, something is wrong.\n-        else if (!bb_items.is_empty() && !next_items.is_empty()) || bb_items.len() > 1 {\n+        assert!(!token_name_eq(&parser.token, &token::Eof));\n+        if (!bb_items.is_empty() && !next_items.is_empty()) || bb_items.len() > 1 {\n             let nts = bb_items\n                 .iter()\n                 .map(|item| match item.top_elts.get_tt(item.idx) {"}]}