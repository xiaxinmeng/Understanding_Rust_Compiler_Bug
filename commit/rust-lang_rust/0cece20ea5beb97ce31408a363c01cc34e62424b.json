{"sha": "0cece20ea5beb97ce31408a363c01cc34e62424b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZWNlMjBlYTViZWI5N2NlMzE0MDhhMzYzYzAxY2MzNGU2MjQyNGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-26T01:19:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-26T01:19:54Z"}, "message": "Fix some unused variable warnings", "tree": {"sha": "4eda21f5af674dd39832f13f54341a67b913e87f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eda21f5af674dd39832f13f54341a67b913e87f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cece20ea5beb97ce31408a363c01cc34e62424b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cece20ea5beb97ce31408a363c01cc34e62424b", "html_url": "https://github.com/rust-lang/rust/commit/0cece20ea5beb97ce31408a363c01cc34e62424b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cece20ea5beb97ce31408a363c01cc34e62424b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fb5f41bacade4999b84c61bbc5e392048fc8c42", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb5f41bacade4999b84c61bbc5e392048fc8c42", "html_url": "https://github.com/rust-lang/rust/commit/7fb5f41bacade4999b84c61bbc5e392048fc8c42"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "0e56b161c7b4f1092309a7ccfe87b803f27acf91", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/0cece20ea5beb97ce31408a363c01cc34e62424b/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cece20ea5beb97ce31408a363c01cc34e62424b/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=0cece20ea5beb97ce31408a363c01cc34e62424b", "patch": "@@ -193,7 +193,7 @@ fn is_archive_url(u: ~str) -> bool {\n     // url parsing, we wouldn't need it\n \n     match str::find_str(u, ~\"://\") {\n-        option::some(i) => has_archive_extension(u),\n+        option::some(_) => has_archive_extension(u),\n         _ => false\n     }\n }\n@@ -251,7 +251,7 @@ fn load_crate(filename: &Path) -> option<crate> {\n \n     for c.node.attrs.each |a| {\n         match a.node.value.node {\n-            ast::meta_name_value(v, {node: ast::lit_str(s), span: _}) => {\n+            ast::meta_name_value(v, {node: ast::lit_str(_), span: _}) => {\n                 match v {\n                     ~\"desc\" => desc = some(v),\n                     ~\"sigs\" => sigs = some(v),\n@@ -281,7 +281,7 @@ fn load_crate(filename: &Path) -> option<crate> {\n     fn goto_view_item(ps: syntax::parse::parse_sess, e: env,\n                       i: @ast::view_item) {\n         match i.node {\n-            ast::view_item_use(ident, metas, id) => {\n+            ast::view_item_use(ident, metas, _) => {\n                 let name_items =\n                     attr::find_meta_items_by_name(metas, ~\"name\");\n                 let m = if name_items.is_empty() {\n@@ -1646,21 +1646,18 @@ fn cmd_sources(c: cargo) {\n                 return;\n             }\n \n-            match c.sources.find(name) {\n-                some(source) => {\n-                    error(fmt!(\"source already exists: %s\", name));\n-                }\n-                none => {\n-                    c.sources.insert(name, @{\n-                        name: name,\n-                        mut url: url,\n-                        mut method: assume_source_method(url),\n-                        mut key: none,\n-                        mut keyfp: none,\n-                        mut packages: ~[mut]\n-                    });\n-                    info(fmt!(\"added source: %s\", name));\n-                }\n+            if c.sources.contains_key(name) {\n+                error(fmt!(\"source already exists: %s\", name));\n+            } else {\n+                c.sources.insert(name, @{\n+                    name: name,\n+                    mut url: url,\n+                    mut method: assume_source_method(url),\n+                    mut key: none,\n+                    mut keyfp: none,\n+                    mut packages: ~[mut]\n+                });\n+                info(fmt!(\"added source: %s\", name));\n             }\n         }\n         ~\"remove\" => {\n@@ -1676,14 +1673,11 @@ fn cmd_sources(c: cargo) {\n                 return;\n             }\n \n-            match c.sources.find(name) {\n-                some(source) => {\n-                    c.sources.remove(name);\n-                    info(fmt!(\"removed source: %s\", name));\n-                }\n-                none => {\n-                    error(fmt!(\"no such source: %s\", name));\n-                }\n+            if c.sources.contains_key(name) {\n+                c.sources.remove(name);\n+                info(fmt!(\"removed source: %s\", name));\n+            } else {\n+                error(fmt!(\"no such source: %s\", name));\n             }\n         }\n         ~\"set-url\" => {"}, {"sha": "f009241c59e771fb76fa2ad3ddbda5a889d11920", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cece20ea5beb97ce31408a363c01cc34e62424b/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cece20ea5beb97ce31408a363c01cc34e62424b/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=0cece20ea5beb97ce31408a363c01cc34e62424b", "patch": "@@ -204,7 +204,7 @@ fn header_kind(doc: doc::itemtag) -> ~str {\n       doc::traittag(_) => {\n         ~\"Interface\"\n       }\n-      doc::impltag(doc) => {\n+      doc::impltag(_) => {\n         ~\"Implementation\"\n       }\n       doc::tytag(_) => {"}]}