{"sha": "85a18289431d245437d80b3006ec499c23e62400", "node_id": "C_kwDOAAsO6NoAKDg1YTE4Mjg5NDMxZDI0NTQzN2Q4MGIzMDA2ZWM0OTljMjNlNjI0MDA", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-19T09:19:31Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-21T12:09:03Z"}, "message": "Rename `forget_copy` lint to `forgetting_copy_types`", "tree": {"sha": "d864fe93eead4a4d09be8af5c95bce4cefa1a4ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d864fe93eead4a4d09be8af5c95bce4cefa1a4ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85a18289431d245437d80b3006ec499c23e62400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85a18289431d245437d80b3006ec499c23e62400", "html_url": "https://github.com/rust-lang/rust/commit/85a18289431d245437d80b3006ec499c23e62400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85a18289431d245437d80b3006ec499c23e62400/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c7ab18c08109753b795bff83dd838ac8e4cdb70", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c7ab18c08109753b795bff83dd838ac8e4cdb70", "html_url": "https://github.com/rust-lang/rust/commit/1c7ab18c08109753b795bff83dd838ac8e4cdb70"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "f60d48e102499a99196dc1a32947af0cb43e0993", "filename": "compiler/rustc_lint/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fmessages.ftl?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -533,6 +533,6 @@ lint_forget_ref = calls to `std::mem::forget` with a reference instead of an own\n     .label = argument has type `{$arg_ty}`\n     .note = use `let _ = ...` to ignore the expression or result\n \n-lint_forget_copy = calls to `std::mem::forget` with a value that implements `Copy` does nothing\n+lint_forgetting_copy_types = calls to `std::mem::forget` with a value that implements `Copy` does nothing\n     .label = argument has type `{$arg_ty}`\n     .note = use `let _ = ...` to ignore the expression or result"}, {"sha": "8f3f4914ddea963743f88fbb2ffa385b70daed28", "filename": "compiler/rustc_lint/src/drop_forget_useless.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -82,7 +82,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `forget_copy` lint checks for calls to `std::mem::forget` with a value\n+    /// The `forgetting_copy_types` lint checks for calls to `std::mem::forget` with a value\n     /// that derives the Copy trait.\n     ///\n     /// ### Example\n@@ -104,12 +104,12 @@ declare_lint! {\n     /// An alternative, but also valid, explanation is that Copy types do not\n     /// implement the Drop trait, which means they have no destructors. Without a\n     /// destructor, there is nothing for `std::mem::forget` to ignore.\n-    pub FORGET_COPY,\n+    pub FORGETTING_COPY_TYPES,\n     Warn,\n     \"calls to `std::mem::forget` with a value that implements Copy\"\n }\n \n-declare_lint_pass!(DropForgetUseless => [DROP_REF, FORGET_REF, DROPPING_COPY_TYPES, FORGET_COPY]);\n+declare_lint_pass!(DropForgetUseless => [DROP_REF, FORGET_REF, DROPPING_COPY_TYPES, FORGETTING_COPY_TYPES]);\n \n impl<'tcx> LateLintPass<'tcx> for DropForgetUseless {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n@@ -132,7 +132,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetUseless {\n                     cx.emit_spanned_lint(DROPPING_COPY_TYPES, expr.span, DropCopyDiag { arg_ty, label: arg.span });\n                 }\n                 sym::mem_forget if is_copy => {\n-                    cx.emit_spanned_lint(FORGET_COPY, expr.span, ForgetCopyDiag { arg_ty, label: arg.span });\n+                    cx.emit_spanned_lint(FORGETTING_COPY_TYPES, expr.span, ForgetCopyDiag { arg_ty, label: arg.span });\n                 }\n                 _ => return,\n             };"}, {"sha": "16c81273ef230aee1d226824ddbede009d24877a", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -691,7 +691,7 @@ pub struct ForgetRefDiag<'a> {\n }\n \n #[derive(LintDiagnostic)]\n-#[diag(lint_forget_copy)]\n+#[diag(lint_forgetting_copy_types)]\n #[note]\n pub struct ForgetCopyDiag<'a> {\n     pub arg_ty: Ty<'a>,"}, {"sha": "db1b8494890ec139e7f78e2f5bab08a0d3e2d1bd", "filename": "src/tools/clippy/clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -98,7 +98,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n             let is_copy = is_copy(cx, arg_ty);\n             let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             let (lint, msg) = match fn_name {\n-                // early return for uplifted lints: drop_ref, dropping_copy_types, forget_ref, forget_copy\n+                // early return for uplifted lints: drop_ref, dropping_copy_types, forget_ref, forgetting_copy_types\n                 sym::mem_drop if arg_ty.is_ref() && !drop_is_single_call_in_arm => return,\n                 sym::mem_forget if arg_ty.is_ref() => return,\n                 sym::mem_drop if is_copy && !drop_is_single_call_in_arm => return,"}, {"sha": "a81dbb9b259925fd4ee4bb49abd985bdb34a7e79", "filename": "src/tools/clippy/clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -38,7 +38,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::for_loop_over_option\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loop_over_result\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loops_over_fallibles\", \"for_loops_over_fallibles\"),\n-    (\"clippy::forget_copy\", \"forget_copy\"),\n+    (\"clippy::forget_copy\", \"forgetting_copy_types\"),\n     (\"clippy::forget_ref\", \"forget_ref\"),\n     (\"clippy::into_iter_on_array\", \"array_into_iter\"),\n     (\"clippy::invalid_atomic_ordering\", \"invalid_atomic_ordering\"),"}, {"sha": "edb9d87d032ec9e7bb6958e08983bb30adff5891", "filename": "src/tools/clippy/tests/ui/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmem_forget.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -5,7 +5,7 @@ use std::mem as memstuff;\n use std::mem::forget as forgetSomething;\n \n #[warn(clippy::mem_forget)]\n-#[allow(forget_copy)]\n+#[allow(forgetting_copy_types)]\n fn main() {\n     let five: i32 = 5;\n     forgetSomething(five);"}, {"sha": "8df63fd9b2335a3c336fb858cea23dd13adbbe9d", "filename": "src/tools/clippy/tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -33,7 +33,7 @@\n #![allow(dropping_copy_types)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n-#![allow(forget_copy)]\n+#![allow(forgetting_copy_types)]\n #![allow(forget_ref)]\n #![allow(array_into_iter)]\n #![allow(invalid_atomic_ordering)]\n@@ -82,7 +82,7 @@\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]\n-#![warn(forget_copy)]\n+#![warn(forgetting_copy_types)]\n #![warn(forget_ref)]\n #![warn(array_into_iter)]\n #![warn(invalid_atomic_ordering)]"}, {"sha": "7206e19f1e021fb78c4f5e73b578d9af8ce2f830", "filename": "src/tools/clippy/tests/ui/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -33,7 +33,7 @@\n #![allow(dropping_copy_types)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n-#![allow(forget_copy)]\n+#![allow(forgetting_copy_types)]\n #![allow(forget_ref)]\n #![allow(array_into_iter)]\n #![allow(invalid_atomic_ordering)]"}, {"sha": "c2a7c0dd7eb133afd08065addb56313cea52c09f", "filename": "src/tools/clippy/tests/ui/rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -216,11 +216,11 @@ error: lint `clippy::for_loops_over_fallibles` has been renamed to `for_loops_ov\n LL | #![warn(clippy::for_loops_over_fallibles)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n-error: lint `clippy::forget_copy` has been renamed to `forget_copy`\n+error: lint `clippy::forget_copy` has been renamed to `forgetting_copy_types`\n   --> $DIR/rename.rs:85:9\n    |\n LL | #![warn(clippy::forget_copy)]\n-   |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `forget_copy`\n+   |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `forgetting_copy_types`\n \n error: lint `clippy::forget_ref` has been renamed to `forget_ref`\n   --> $DIR/rename.rs:86:9"}, {"sha": "f06149f2cb9947799d461e291980ef96ed2fd496", "filename": "tests/ui/consts/const_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Fconsts%2Fconst_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Fconsts%2Fconst_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fconst_forget.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![allow(forget_copy)]\n+#![allow(forgetting_copy_types)]\n \n use std::mem::forget;\n "}, {"sha": "7b375dc05667532ab354dc7e3646c59d6f85db7f", "filename": "tests/ui/consts/issue-104155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Fconsts%2Fissue-104155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Fconsts%2Fissue-104155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fissue-104155.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![allow(forget_copy)]\n+#![allow(forgetting_copy_types)]\n \n const _: () = core::mem::forget(Box::<u32>::default);\n const _: () = core::mem::forget(|| Box::<u32>::default());"}, {"sha": "224c7bcd5f63e765a0eee74ff3e18e6ab0677096", "filename": "tests/ui/lint/forgetting_copy_types.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Flint%2Fforgetting_copy_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Flint%2Fforgetting_copy_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fforgetting_copy_types.rs?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![warn(forget_copy)]\n+#![warn(forgetting_copy_types)]\n \n use std::mem::forget;\n use std::vec::Vec;", "previous_filename": "tests/ui/lint/forget_copy.rs"}, {"sha": "cf4e1845f5681fe8d19798edf85ffbefcf153fd1", "filename": "tests/ui/lint/forgetting_copy_types.stderr", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Flint%2Fforgetting_copy_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85a18289431d245437d80b3006ec499c23e62400/tests%2Fui%2Flint%2Fforgetting_copy_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fforgetting_copy_types.stderr?ref=85a18289431d245437d80b3006ec499c23e62400", "patch": "@@ -1,5 +1,5 @@\n warning: calls to `std::mem::forget` with a value that implements `Copy` does nothing\n-  --> $DIR/forget_copy.rs:34:5\n+  --> $DIR/forgetting_copy_types.rs:34:5\n    |\n LL |     forget(s1);\n    |     ^^^^^^^--^\n@@ -8,13 +8,13 @@ LL |     forget(s1);\n    |\n    = note: use `let _ = ...` to ignore the expression or result\n note: the lint level is defined here\n-  --> $DIR/forget_copy.rs:3:9\n+  --> $DIR/forgetting_copy_types.rs:3:9\n    |\n-LL | #![warn(forget_copy)]\n-   |         ^^^^^^^^^^^\n+LL | #![warn(forgetting_copy_types)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n \n warning: calls to `std::mem::forget` with a value that implements `Copy` does nothing\n-  --> $DIR/forget_copy.rs:35:5\n+  --> $DIR/forgetting_copy_types.rs:35:5\n    |\n LL |     forget(s2);\n    |     ^^^^^^^--^\n@@ -24,7 +24,7 @@ LL |     forget(s2);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing\n-  --> $DIR/forget_copy.rs:36:5\n+  --> $DIR/forgetting_copy_types.rs:36:5\n    |\n LL |     forget(s3);\n    |     ^^^^^^^--^\n@@ -35,7 +35,7 @@ LL |     forget(s3);\n    = note: `#[warn(forget_ref)]` on by default\n \n warning: calls to `std::mem::forget` with a value that implements `Copy` does nothing\n-  --> $DIR/forget_copy.rs:37:5\n+  --> $DIR/forgetting_copy_types.rs:37:5\n    |\n LL |     forget(s4);\n    |     ^^^^^^^--^\n@@ -45,7 +45,7 @@ LL |     forget(s4);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing\n-  --> $DIR/forget_copy.rs:38:5\n+  --> $DIR/forgetting_copy_types.rs:38:5\n    |\n LL |     forget(s5);\n    |     ^^^^^^^--^\n@@ -55,7 +55,7 @@ LL |     forget(s5);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing\n-  --> $DIR/forget_copy.rs:50:5\n+  --> $DIR/forgetting_copy_types.rs:50:5\n    |\n LL |     forget(a2);\n    |     ^^^^^^^--^\n@@ -65,7 +65,7 @@ LL |     forget(a2);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing\n-  --> $DIR/forget_copy.rs:52:5\n+  --> $DIR/forgetting_copy_types.rs:52:5\n    |\n LL |     forget(a3);\n    |     ^^^^^^^--^\n@@ -75,7 +75,7 @@ LL |     forget(a3);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing\n-  --> $DIR/forget_copy.rs:53:5\n+  --> $DIR/forgetting_copy_types.rs:53:5\n    |\n LL |     forget(a4);\n    |     ^^^^^^^--^", "previous_filename": "tests/ui/lint/forget_copy.stderr"}]}