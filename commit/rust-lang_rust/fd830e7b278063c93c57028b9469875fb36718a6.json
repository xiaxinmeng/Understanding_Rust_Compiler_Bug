{"sha": "fd830e7b278063c93c57028b9469875fb36718a6", "node_id": "C_kwDOAAsO6NoAKGZkODMwZTdiMjc4MDYzYzkzYzU3MDI4Yjk0Njk4NzVmYjM2NzE4YTY", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-12-07T17:25:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-07T17:25:28Z"}, "message": "Code comment changes from code review\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "5e8342c35376782fe49d0150f9e127db78e4da7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e8342c35376782fe49d0150f9e127db78e4da7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd830e7b278063c93c57028b9469875fb36718a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhr5kICRBK7hj4Ov3rIwAAE60IAEAxR0k6cnSfAj4U86Qog85Q\nCmMSxmpKvlF0GgOx5CdKJDRDniTYSj6CeLus97tH8dfHA5+G74eVLwueckSC3gfy\n5u2URRwKqNCiYFBX0rlzH5K92nVIThFYr+wCASHjeMWkhN4ijIjzaHGVCyDsVoDB\nFgtAga169/fAkJQSi3v1K8LVtYliGcX9K9C/Lr0CcEB7/crBcjFazhesWojVkukf\nB9y1xS4hn36m6siaCRpBJd6qDc1zTF2/PD6p+53opg74lai1/ll6jebaossxkCzV\nbzYuYyTMlqst//jKP3HDoXz6y8PZA7bel3uMcOtRz0TmxgsY5EfxLdBR0Kmz4o0=\n=odiy\n-----END PGP SIGNATURE-----\n", "payload": "tree 5e8342c35376782fe49d0150f9e127db78e4da7f\nparent 250d450593633dcb40b5ba515b492afbe6d01c99\nauthor 5225225 <5225225@mailbox.org> 1638897928 +0000\ncommitter GitHub <noreply@github.com> 1638897928 +0000\n\nCode comment changes from code review\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd830e7b278063c93c57028b9469875fb36718a6", "html_url": "https://github.com/rust-lang/rust/commit/fd830e7b278063c93c57028b9469875fb36718a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd830e7b278063c93c57028b9469875fb36718a6/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "250d450593633dcb40b5ba515b492afbe6d01c99", "url": "https://api.github.com/repos/rust-lang/rust/commits/250d450593633dcb40b5ba515b492afbe6d01c99", "html_url": "https://github.com/rust-lang/rust/commit/250d450593633dcb40b5ba515b492afbe6d01c99"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ea940df1c6e8909bd6471c27dcaef7403266e9b5", "filename": "src/shims/posix/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd830e7b278063c93c57028b9469875fb36718a6/src%2Fshims%2Fposix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd830e7b278063c93c57028b9469875fb36718a6/src%2Fshims%2Fposix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fsync.rs?ref=fd830e7b278063c93c57028b9469875fb36718a6", "patch": "@@ -367,6 +367,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // Destroying an uninit pthread_mutexattr is UB, so check to make sure it's not uninit.\n         mutexattr_get_kind(this, attr_op)?.check_init()?;\n \n+        // To catch double-destroys, we de-initialize the mutexattr.\n         // This is technically not right and might lead to false positives. For example, the below\n         // code is *likely* sound, even assuming uninit numbers are UB, but miri with\n         // -Zmiri-check-number-validity complains\n@@ -376,6 +377,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // libc::pthread_mutexattr_destroy(x.as_mut_ptr());\n         // x.assume_init();\n         //\n+        // However, the way libstd uses the pthread APIs works in our favor here, so we can get away with this.\n         // This can always be revisited to have some external state to catch double-destroys\n         // but not complain about the above code. See https://github.com/rust-lang/miri/pull/1933\n "}]}