{"sha": "b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5Yjk3YmJiOWQzNTAzMzgxZGU0YjFiZWI1ZmNiZjY5ZThlNGM2OGQ=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-09T16:54:02Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-09T16:54:02Z"}, "message": "Reject too-long IPs quicker\n\nNow that there can't be a bunch of leading zeros, parsing can be\noptimized a bit.", "tree": {"sha": "48c0a85795639eb034a63a774fb6d4f6b5e3ccc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48c0a85795639eb034a63a774fb6d4f6b5e3ccc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "html_url": "https://github.com/rust-lang/rust/commit/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69de693af96790a2414a6d37148b524fde457f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/69de693af96790a2414a6d37148b524fde457f53", "html_url": "https://github.com/rust-lang/rust/commit/69de693af96790a2414a6d37148b524fde457f53"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "df6bbdeab89946a7e61d2a29315ee882a4924b42", "filename": "library/std/src/net/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs?ref=b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "patch": "@@ -289,7 +289,12 @@ impl FromStr for IpAddr {\n impl FromStr for Ipv4Addr {\n     type Err = AddrParseError;\n     fn from_str(s: &str) -> Result<Ipv4Addr, AddrParseError> {\n-        Parser::new(s).parse_with(|p| p.read_ipv4_addr())\n+        // don't try to parse if too long\n+        if s.len() > 15 {\n+            Err(AddrParseError(()))\n+        } else {\n+            Parser::new(s).parse_with(|p| p.read_ipv4_addr())\n+        }\n     }\n }\n "}]}