{"sha": "9494f22f06f29ed1c47314b10ed62cfc1d4aff80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OTRmMjJmMDZmMjllZDFjNDczMTRiMTBlZDYyY2ZjMWQ0YWZmODA=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-08T08:44:22Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-08T08:44:22Z"}, "message": "cargo fmt", "tree": {"sha": "7fd1eab9ee2b0ba1cf5373ee6944f12fe6cdf62c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fd1eab9ee2b0ba1cf5373ee6944f12fe6cdf62c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9494f22f06f29ed1c47314b10ed62cfc1d4aff80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlyCK2kACgkQtvoGpuDi\nZluWDQ//f2sTFTy1vkmjm/M0Z9UGHGSa9VcE+4D8KbjvFjpeji5T5liZKWyDpE7a\nsphmVx5wB2ciGhhUKOFimt9mvcDquk7wpUCgRlXCwecgaYF5Tgf++4NzM9JnWEPw\n30LENAHyppaIS2+AP0H5Xj9IHliFUSJVS1+O/iN4eOzs6meU/k7qso0FeFEKOJ3/\n75Xy0bx4LUl+BOZYvp+koh8JlJDYnG96isCE2kJN1rAKVO9IZ6uSSlDuh7upddBc\nqhCKjw7Kam/kkxuXxmyC7kfEEJrbrU8KTryfCOawirEAJa1CQpCmZ04FyhMH0eV1\nM/fPTWziRvVO/YpX1TYQ8zrnKIYKzT3Yp0crjCHzTPi9DCGfLTMaRwhnWz3LmmJv\npaEWtXHznEoBKZQhAhhIBsKHMgD0GAMSnAuobbMBlq5HNYX17axRCXcrO/PJtd0g\nY7CWavF6zYtP5nkhU6hszXq40hOKmM+t/irTVE/JMuPGPDvS0LMmRL3NAK3ZCbL8\nWzDfwDqDEIRKGC/MKfaChrttS1yexvWU3ZYP0PVGqX7UG0OFGxg6x1IpveHP1lrk\n+81OoqhkMJLK27otA8D0I/c9evVUEKrhc+wQvUxuoJZsz6bvvFouXad0DMPWcDNc\nP3mC4NqfK7CXwOCx0+zdfq88t1GiDbOyfvC43Jjtu9T81kdufjc=\n=ttfR\n-----END PGP SIGNATURE-----", "payload": "tree 7fd1eab9ee2b0ba1cf5373ee6944f12fe6cdf62c\nparent 5c9221f880cc3b2b73ec742317cb02d008e51818\nauthor Philipp Hansch <dev@phansch.net> 1552034662 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1552034662 +0100\n\ncargo fmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9494f22f06f29ed1c47314b10ed62cfc1d4aff80", "html_url": "https://github.com/rust-lang/rust/commit/9494f22f06f29ed1c47314b10ed62cfc1d4aff80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9494f22f06f29ed1c47314b10ed62cfc1d4aff80/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c9221f880cc3b2b73ec742317cb02d008e51818", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9221f880cc3b2b73ec742317cb02d008e51818", "html_url": "https://github.com/rust-lang/rust/commit/5c9221f880cc3b2b73ec742317cb02d008e51818"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "83bfd53017f28731e653f34839f7dc3f3a8251a5", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9494f22f06f29ed1c47314b10ed62cfc1d4aff80/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9494f22f06f29ed1c47314b10ed62cfc1d4aff80/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=9494f22f06f29ed1c47314b10ed62cfc1d4aff80", "patch": "@@ -68,7 +68,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n         match &expr.node {\n             hir::ExprKind::AssignOp(op, lhs, rhs) => {\n                 if let hir::ExprKind::Binary(binop, l, r) = &rhs.node {\n-                    if op.node != binop.node { return; }\n+                    if op.node != binop.node {\n+                        return;\n+                    }\n                     // lhs op= l op r\n                     if SpanlessEq::new(cx).ignore_fn().eq_expr(lhs, l) {\n                         lint_misrefactored_assign_op(cx, expr, *op, rhs, lhs, r);\n@@ -196,20 +198,24 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n     }\n }\n \n-fn lint_misrefactored_assign_op(cx: &LateContext<'_, '_>, expr: &hir::Expr, op: hir::BinOp, rhs: &hir::Expr, assignee: &hir::Expr, rhs_other: &hir::Expr) {\n+fn lint_misrefactored_assign_op(\n+    cx: &LateContext<'_, '_>,\n+    expr: &hir::Expr,\n+    op: hir::BinOp,\n+    rhs: &hir::Expr,\n+    assignee: &hir::Expr,\n+    rhs_other: &hir::Expr,\n+) {\n     span_lint_and_then(\n         cx,\n         MISREFACTORED_ASSIGN_OP,\n         expr.span,\n         \"variable appears on both sides of an assignment operation\",\n         |db| {\n-            if let (Some(snip_a), Some(snip_r)) =\n-                (snippet_opt(cx, assignee.span), snippet_opt(cx, rhs_other.span))\n-            {\n+            if let (Some(snip_a), Some(snip_r)) = (snippet_opt(cx, assignee.span), snippet_opt(cx, rhs_other.span)) {\n                 let a = &sugg::Sugg::hir(cx, assignee, \"..\");\n                 let r = &sugg::Sugg::hir(cx, rhs, \"..\");\n-                let long =\n-                    format!(\"{} = {}\", snip_a, sugg::make_binop(higher::binop(op.node), a, r));\n+                let long = format!(\"{} = {}\", snip_a, sugg::make_binop(higher::binop(op.node), a, r));\n                 db.span_suggestion(\n                     expr.span,\n                     &format!("}]}