{"sha": "890803d3722b5cf8810ae1f49b4d9f062a87c927", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDgwM2QzNzIyYjVjZjg4MTBhZTFmNDliNGQ5ZjA2MmE4N2M5Mjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-11T22:39:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-11T22:39:48Z"}, "message": "Auto merge of #85199 - JohnTitor:rollup-gz5m06c, r=JohnTitor\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #83501 (rustdoc: Add unstable CLI option to show basic type layout information)\n - #85018 (shrinking the deprecated method span)\n - #85124 (rustdoc: remove explicit boolean comparisons.)\n - #85136 (Change param name (k to key and v to value) in std::env module)\n - #85162 (Fix typo in variable name)\n - #85187 (Use .name_str() to format primitive types in error messages)\n - #85191 (Improve rustdoc gui tester)\n - #85196 (Revert \"Auto merge of #84797 - richkadel:cover-unreachable-statements\u2026)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "38f14fe43cc6b4dc5e27a1f5372b1d57bebe573f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f14fe43cc6b4dc5e27a1f5372b1d57bebe573f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890803d3722b5cf8810ae1f49b4d9f062a87c927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890803d3722b5cf8810ae1f49b4d9f062a87c927", "html_url": "https://github.com/rust-lang/rust/commit/890803d3722b5cf8810ae1f49b4d9f062a87c927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890803d3722b5cf8810ae1f49b4d9f062a87c927/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c029265465301fe9cb3960ce2a5da6c99b8dcf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c029265465301fe9cb3960ce2a5da6c99b8dcf2", "html_url": "https://github.com/rust-lang/rust/commit/5c029265465301fe9cb3960ce2a5da6c99b8dcf2"}, {"sha": "e27f20a9a234fa50a56a39e07dfe111f06d75170", "url": "https://api.github.com/repos/rust-lang/rust/commits/e27f20a9a234fa50a56a39e07dfe111f06d75170", "html_url": "https://github.com/rust-lang/rust/commit/e27f20a9a234fa50a56a39e07dfe111f06d75170"}], "stats": {"total": 866, "additions": 552, "deletions": 314}, "files": [{"sha": "aa0f18846d1540c981015f2de000021c19b37d34", "filename": "compiler/rustc_middle/src/middle/stability.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -281,7 +281,13 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// If `id` is `Some(_)`, this function will also check if the item at `def_id` has been\n     /// deprecated. If the item is indeed deprecated, we will emit a deprecation lint attached to\n     /// `id`.\n-    pub fn eval_stability(self, def_id: DefId, id: Option<HirId>, span: Span) -> EvalResult {\n+    pub fn eval_stability(\n+        self,\n+        def_id: DefId,\n+        id: Option<HirId>,\n+        span: Span,\n+        method_span: Option<Span>,\n+    ) -> EvalResult {\n         // Deprecated attributes apply in-crate and cross-crate.\n         if let Some(id) = id {\n             if let Some(depr_entry) = self.lookup_deprecation_entry(def_id) {\n@@ -300,6 +306,7 @@ impl<'tcx> TyCtxt<'tcx> {\n                     let path = &with_no_trimmed_paths(|| self.def_path_str(def_id));\n                     let kind = self.def_kind(def_id).descr(def_id);\n                     let (message, lint) = deprecation_message(&depr_entry.attr, kind, path);\n+                    let span = method_span.unwrap_or(span);\n                     late_report_deprecation(\n                         self,\n                         &message,\n@@ -382,8 +389,14 @@ impl<'tcx> TyCtxt<'tcx> {\n     ///\n     /// This function will also check if the item is deprecated.\n     /// If so, and `id` is not `None`, a deprecated lint attached to `id` will be emitted.\n-    pub fn check_stability(self, def_id: DefId, id: Option<HirId>, span: Span) {\n-        self.check_optional_stability(def_id, id, span, |span, def_id| {\n+    pub fn check_stability(\n+        self,\n+        def_id: DefId,\n+        id: Option<HirId>,\n+        span: Span,\n+        method_span: Option<Span>,\n+    ) {\n+        self.check_optional_stability(def_id, id, span, method_span, |span, def_id| {\n             // The API could be uncallable for other reasons, for example when a private module\n             // was referenced.\n             self.sess.delay_span_bug(span, &format!(\"encountered unmarked API: {:?}\", def_id));\n@@ -399,14 +412,15 @@ impl<'tcx> TyCtxt<'tcx> {\n         def_id: DefId,\n         id: Option<HirId>,\n         span: Span,\n+        method_span: Option<Span>,\n         unmarked: impl FnOnce(Span, DefId),\n     ) {\n         let soft_handler = |lint, span, msg: &_| {\n             self.struct_span_lint_hir(lint, id.unwrap_or(hir::CRATE_HIR_ID), span, |lint| {\n                 lint.build(msg).emit()\n             })\n         };\n-        match self.eval_stability(def_id, id, span) {\n+        match self.eval_stability(def_id, id, span, method_span) {\n             EvalResult::Allow => {}\n             EvalResult::Deny { feature, reason, issue, is_soft } => {\n                 report_unstable(self.sess, feature, reason, issue, is_soft, span, soft_handler)"}, {"sha": "96aae3bd70cd21710ac81b3f93b30b01ee674cc0", "filename": "compiler/rustc_middle/src/ty/error.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -159,10 +159,23 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                 )\n             }),\n             IntMismatch(ref values) => {\n-                write!(f, \"expected `{:?}`, found `{:?}`\", values.expected, values.found)\n+                let expected = match values.expected {\n+                    ty::IntVarValue::IntType(ty) => ty.name_str(),\n+                    ty::IntVarValue::UintType(ty) => ty.name_str(),\n+                };\n+                let found = match values.found {\n+                    ty::IntVarValue::IntType(ty) => ty.name_str(),\n+                    ty::IntVarValue::UintType(ty) => ty.name_str(),\n+                };\n+                write!(f, \"expected `{}`, found `{}`\", expected, found)\n             }\n             FloatMismatch(ref values) => {\n-                write!(f, \"expected `{:?}`, found `{:?}`\", values.expected, values.found)\n+                write!(\n+                    f,\n+                    \"expected `{}`, found `{}`\",\n+                    values.expected.name_str(),\n+                    values.found.name_str()\n+                )\n             }\n             VariadicMismatch(ref values) => write!(\n                 f,"}, {"sha": "b5c8b4bebc360496349001822c0dc24c1bece0f2", "filename": "compiler/rustc_mir/src/transform/const_goto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -47,7 +47,7 @@ impl<'tcx> MirPass<'tcx> for ConstGoto {\n         // if we applied optimizations, we potentially have some cfg to cleanup to\n         // make it easier for further passes\n         if should_simplify {\n-            simplify_cfg(tcx, body);\n+            simplify_cfg(body);\n             simplify_locals(body, tcx);\n         }\n     }"}, {"sha": "c41e71e09a4efc7d64186850460538b2b254d0cb", "filename": "compiler/rustc_mir/src/transform/deduplicate_blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -26,7 +26,7 @@ impl<'tcx> MirPass<'tcx> for DeduplicateBlocks {\n         if has_opts_to_apply {\n             let mut opt_applier = OptApplier { tcx, duplicates };\n             opt_applier.visit_body(body);\n-            simplify_cfg(tcx, body);\n+            simplify_cfg(body);\n         }\n     }\n }"}, {"sha": "f7ea9faec47283cf2903062fedd031d0f9c4a440", "filename": "compiler/rustc_mir/src/transform/early_otherwise_branch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -164,7 +164,7 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n         // Since this optimization adds new basic blocks and invalidates others,\n         // clean up the cfg to make it nicer for other passes\n         if should_cleanup {\n-            simplify_cfg(tcx, body);\n+            simplify_cfg(body);\n         }\n     }\n }"}, {"sha": "003003a8abbeae90f8f736d89e8a3a504e271de8", "filename": "compiler/rustc_mir/src/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -964,7 +964,7 @@ fn create_generator_drop_shim<'tcx>(\n \n     // Make sure we remove dead blocks to remove\n     // unrelated code from the resume part of the function\n-    simplify::remove_dead_blocks(tcx, &mut body);\n+    simplify::remove_dead_blocks(&mut body);\n \n     dump_mir(tcx, None, \"generator_drop\", &0, &body, |_, _| Ok(()));\n \n@@ -1137,7 +1137,7 @@ fn create_generator_resume_function<'tcx>(\n \n     // Make sure we remove dead blocks to remove\n     // unrelated code from the drop part of the function\n-    simplify::remove_dead_blocks(tcx, body);\n+    simplify::remove_dead_blocks(body);\n \n     dump_mir(tcx, None, \"generator_resume\", &0, body, |_, _| Ok(()));\n }"}, {"sha": "b6f80763bc8c4c2b94b445b999a0d1bb85c2f3bb", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -57,7 +57,7 @@ impl<'tcx> MirPass<'tcx> for Inline {\n         if inline(tcx, body) {\n             debug!(\"running simplify cfg on {:?}\", body.source);\n             CfgSimplifier::new(body).simplify();\n-            remove_dead_blocks(tcx, body);\n+            remove_dead_blocks(body);\n         }\n     }\n }"}, {"sha": "f7a9835353e5cff77c14c762641f2bf99103e088", "filename": "compiler/rustc_mir/src/transform/match_branches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -167,7 +167,7 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n         }\n \n         if should_cleanup {\n-            simplify_cfg(tcx, body);\n+            simplify_cfg(body);\n         }\n     }\n }"}, {"sha": "4aaa0baa9f46a26fb640f59b73e5f322eb84c6db", "filename": "compiler/rustc_mir/src/transform/multiple_return_terminators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -38,6 +38,6 @@ impl<'tcx> MirPass<'tcx> for MultipleReturnTerminators {\n             }\n         }\n \n-        simplify::remove_dead_blocks(tcx, body)\n+        simplify::remove_dead_blocks(body)\n     }\n }"}, {"sha": "5144d48750de70d7febebd7a0c6dcc013c157781", "filename": "compiler/rustc_mir/src/transform/remove_unneeded_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -36,7 +36,7 @@ impl<'tcx> MirPass<'tcx> for RemoveUnneededDrops {\n         // if we applied optimizations, we potentially have some cfg to cleanup to\n         // make it easier for further passes\n         if should_simplify {\n-            simplify_cfg(tcx, body);\n+            simplify_cfg(body);\n         }\n     }\n }"}, {"sha": "65e2d096b209462dd496320f589244ea13d12241", "filename": "compiler/rustc_mir/src/transform/simplify.rs", "status": "modified", "additions": 5, "deletions": 37, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -29,7 +29,6 @@\n \n use crate::transform::MirPass;\n use rustc_index::vec::{Idx, IndexVec};\n-use rustc_middle::mir::coverage::*;\n use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n@@ -47,9 +46,9 @@ impl SimplifyCfg {\n     }\n }\n \n-pub fn simplify_cfg(tcx: TyCtxt<'tcx>, body: &mut Body<'_>) {\n+pub fn simplify_cfg(body: &mut Body<'_>) {\n     CfgSimplifier::new(body).simplify();\n-    remove_dead_blocks(tcx, body);\n+    remove_dead_blocks(body);\n \n     // FIXME: Should probably be moved into some kind of pass manager\n     body.basic_blocks_mut().raw.shrink_to_fit();\n@@ -60,9 +59,9 @@ impl<'tcx> MirPass<'tcx> for SimplifyCfg {\n         Cow::Borrowed(&self.label)\n     }\n \n-    fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+    fn run_pass(&self, _tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         debug!(\"SimplifyCfg({:?}) - simplifying {:?}\", self.label, body.source);\n-        simplify_cfg(tcx, body);\n+        simplify_cfg(body);\n     }\n }\n \n@@ -287,7 +286,7 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n     }\n }\n \n-pub fn remove_dead_blocks(tcx: TyCtxt<'tcx>, body: &mut Body<'_>) {\n+pub fn remove_dead_blocks(body: &mut Body<'_>) {\n     let reachable = traversal::reachable_as_bitset(body);\n     let num_blocks = body.basic_blocks().len();\n     if num_blocks == reachable.count() {\n@@ -307,11 +306,6 @@ pub fn remove_dead_blocks(tcx: TyCtxt<'tcx>, body: &mut Body<'_>) {\n         }\n         used_blocks += 1;\n     }\n-\n-    if tcx.sess.instrument_coverage() {\n-        save_unreachable_coverage(basic_blocks, used_blocks);\n-    }\n-\n     basic_blocks.raw.truncate(used_blocks);\n \n     for block in basic_blocks {\n@@ -321,32 +315,6 @@ pub fn remove_dead_blocks(tcx: TyCtxt<'tcx>, body: &mut Body<'_>) {\n     }\n }\n \n-fn save_unreachable_coverage(\n-    basic_blocks: &mut IndexVec<BasicBlock, BasicBlockData<'_>>,\n-    first_dead_block: usize,\n-) {\n-    // retain coverage info for dead blocks, so coverage reports will still\n-    // report `0` executions for the uncovered code regions.\n-    let mut dropped_coverage = Vec::new();\n-    for dead_block in first_dead_block..basic_blocks.len() {\n-        for statement in basic_blocks[BasicBlock::new(dead_block)].statements.iter() {\n-            if let StatementKind::Coverage(coverage) = &statement.kind {\n-                if let Some(code_region) = &coverage.code_region {\n-                    dropped_coverage.push((statement.source_info, code_region.clone()));\n-                }\n-            }\n-        }\n-    }\n-    for (source_info, code_region) in dropped_coverage {\n-        basic_blocks[START_BLOCK].statements.push(Statement {\n-            source_info,\n-            kind: StatementKind::Coverage(box Coverage {\n-                kind: CoverageKind::Unreachable,\n-                code_region: Some(code_region),\n-            }),\n-        })\n-    }\n-}\n pub struct SimplifyLocals;\n \n impl<'tcx> MirPass<'tcx> for SimplifyLocals {"}, {"sha": "b42543c04eb3dd4d0dec4d2f1af86b94f14e5132", "filename": "compiler/rustc_mir/src/transform/simplify_try.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -558,7 +558,7 @@ impl<'tcx> MirPass<'tcx> for SimplifyBranchSame {\n \n         if did_remove_blocks {\n             // We have dead blocks now, so remove those.\n-            simplify::remove_dead_blocks(tcx, body);\n+            simplify::remove_dead_blocks(body);\n         }\n     }\n }"}, {"sha": "658c6b6e9db20086855c89e94b73799352195b87", "filename": "compiler/rustc_mir/src/transform/unreachable_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -60,7 +60,7 @@ impl MirPass<'_> for UnreachablePropagation {\n         }\n \n         if replaced {\n-            simplify::remove_dead_blocks(tcx, body);\n+            simplify::remove_dead_blocks(body);\n         }\n     }\n }"}, {"sha": "6b1813fba7600db946f8a9710605de147162a399", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -739,7 +739,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n                     None => return,\n                 };\n                 let def_id = DefId { krate: cnum, index: CRATE_DEF_INDEX };\n-                self.tcx.check_stability(def_id, Some(item.hir_id()), item.span);\n+                self.tcx.check_stability(def_id, Some(item.hir_id()), item.span, None);\n             }\n \n             // For implementations of traits, check the stability of each item\n@@ -783,7 +783,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n                             .map(|item| item.def_id);\n                         if let Some(def_id) = trait_item_def_id {\n                             // Pass `None` to skip deprecation warnings.\n-                            self.tcx.check_stability(def_id, None, impl_item.span);\n+                            self.tcx.check_stability(def_id, None, impl_item.span, None);\n                         }\n                     }\n                 }\n@@ -832,7 +832,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n \n     fn visit_path(&mut self, path: &'tcx hir::Path<'tcx>, id: hir::HirId) {\n         if let Some(def_id) = path.res.opt_def_id() {\n-            self.tcx.check_stability(def_id, Some(id), path.span)\n+            self.tcx.check_stability(def_id, Some(id), path.span, None)\n         }\n         intravisit::walk_path(self, path)\n     }"}, {"sha": "ca8bb3af2ba69c4f789ffe9228aa0fd0d74d0a32", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -621,9 +621,9 @@ mod parse {\n         true\n     }\n \n-    crate fn parse_linker_flavor(slote: &mut Option<LinkerFlavor>, v: Option<&str>) -> bool {\n+    crate fn parse_linker_flavor(slot: &mut Option<LinkerFlavor>, v: Option<&str>) -> bool {\n         match v.and_then(LinkerFlavor::from_str) {\n-            Some(lf) => *slote = Some(lf),\n+            Some(lf) => *slot = Some(lf),\n             _ => return false,\n         }\n         true"}, {"sha": "5285c1c85987093c20414bf0a2882313ffc3852f", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -432,6 +432,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                                 param.def_id,\n                                 Some(arg.id()),\n                                 arg.span(),\n+                                None,\n                                 |_, _| {\n                                     // Default generic parameters may not be marked\n                                     // with stability attributes, i.e. when the\n@@ -1059,7 +1060,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 .span_label(binding.span, \"private associated type\")\n                 .emit();\n         }\n-        tcx.check_stability(assoc_ty.def_id, Some(hir_ref_id), binding.span);\n+        tcx.check_stability(assoc_ty.def_id, Some(hir_ref_id), binding.span, None);\n \n         if !speculative {\n             dup_bindings\n@@ -1666,7 +1667,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     .find(|vd| tcx.hygienic_eq(assoc_ident, vd.ident, adt_def.did));\n                 if let Some(variant_def) = variant_def {\n                     if permit_variants {\n-                        tcx.check_stability(variant_def.def_id, Some(hir_ref_id), span);\n+                        tcx.check_stability(variant_def.def_id, Some(hir_ref_id), span, None);\n                         self.prohibit_generics(slice::from_ref(assoc_segment));\n                         return Ok((qself_ty, DefKind::Variant, variant_def.def_id));\n                     } else {\n@@ -1786,7 +1787,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 .span_label(span, &format!(\"private {}\", kind))\n                 .emit();\n         }\n-        tcx.check_stability(item.def_id, Some(hir_ref_id), span);\n+        tcx.check_stability(item.def_id, Some(hir_ref_id), span, None);\n \n         if let Some(variant_def_id) = variant_resolution {\n             tcx.struct_span_lint_hir(AMBIGUOUS_ASSOCIATED_ITEMS, hir_ref_id, span, |lint| {"}, {"sha": "d0cbb58fb10eb8d5cecf377d5bd4c9e652426508", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1230,7 +1230,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // struct-like enums (yet...), but it's definitely not\n                 // a bug to have constructed one.\n                 if adt_kind != AdtKind::Enum {\n-                    tcx.check_stability(v_field.did, Some(expr_id), field.span);\n+                    tcx.check_stability(v_field.did, Some(expr_id), field.span, None);\n                 }\n \n                 self.field_ty(field.span, v_field, substs)\n@@ -1571,7 +1571,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             self.apply_adjustments(base, adjustments);\n                             self.register_predicates(autoderef.into_obligations());\n \n-                            self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span);\n+                            self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span, None);\n                             return field_ty;\n                         }\n                         private_candidate = Some((base_def.did, field_ty));"}, {"sha": "0b1129a6312498a975f1c3f79c98d6ef2656d3e9", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -205,7 +205,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 .insert(*import_id);\n         }\n \n-        self.tcx.check_stability(pick.item.def_id, Some(call_expr.hir_id), span);\n+        self.tcx.check_stability(pick.item.def_id, Some(call_expr.hir_id), span, None);\n \n         let result =\n             self.confirm_method(span, self_expr, call_expr, self_ty, pick.clone(), segment);\n@@ -445,7 +445,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // them as well. It's ok to use the variant's id as a ctor id since an\n                     // error will be reported on any use of such resolution anyway.\n                     let ctor_def_id = variant_def.ctor_def_id.unwrap_or(variant_def.def_id);\n-                    tcx.check_stability(ctor_def_id, Some(expr_id), span);\n+                    tcx.check_stability(ctor_def_id, Some(expr_id), span, Some(method_name.span));\n                     return Ok((\n                         DefKind::Ctor(CtorOf::Variant, variant_def.ctor_kind),\n                         ctor_def_id,\n@@ -475,7 +475,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let def_kind = pick.item.kind.as_def_kind();\n         debug!(\"resolve_ufcs: def_kind={:?}, def_id={:?}\", def_kind, pick.item.def_id);\n-        tcx.check_stability(pick.item.def_id, Some(expr_id), span);\n+        tcx.check_stability(pick.item.def_id, Some(expr_id), span, Some(method_name.span));\n         Ok((def_kind, pick.item.def_id))\n     }\n "}, {"sha": "440e0f4e1a2acfbbaf27c96a01fe94cf766a7db6", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1286,7 +1286,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         if let Some(uc) = unstable_candidates {\n             applicable_candidates.retain(|&(p, _)| {\n                 if let stability::EvalResult::Deny { feature, .. } =\n-                    self.tcx.eval_stability(p.item.def_id, None, self.span)\n+                    self.tcx.eval_stability(p.item.def_id, None, self.span, None)\n                 {\n                     uc.push((p, feature));\n                     return false;"}, {"sha": "3ac760e23634e33f0d57142d4148e99602b84724", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -958,7 +958,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let field_ty = self.field_ty(subpat.span, &variant.fields[i], substs);\n                 self.check_pat(&subpat, field_ty, def_bm, TopInfo { parent_pat: Some(&pat), ..ti });\n \n-                self.tcx.check_stability(variant.fields[i].did, Some(pat.hir_id), subpat.span);\n+                self.tcx.check_stability(\n+                    variant.fields[i].did,\n+                    Some(pat.hir_id),\n+                    subpat.span,\n+                    None,\n+                );\n             }\n         } else {\n             // Pattern has wrong number of fields.\n@@ -1192,7 +1197,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         .get(&ident)\n                         .map(|(i, f)| {\n                             self.write_field_index(field.hir_id, *i);\n-                            self.tcx.check_stability(f.did, Some(pat.hir_id), span);\n+                            self.tcx.check_stability(f.did, Some(pat.hir_id), span, None);\n                             self.field_ty(span, f, substs)\n                         })\n                         .unwrap_or_else(|| {"}, {"sha": "4403280efc11b9f6f0d93f96800c8ee8acd4cc70", "filename": "library/std/src/env.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -324,13 +324,13 @@ impl Error for VarError {\n /// assert_eq!(env::var(key), Ok(\"VALUE\".to_string()));\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n-pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(k: K, v: V) {\n-    _set_var(k.as_ref(), v.as_ref())\n+pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(key: K, value: V) {\n+    _set_var(key.as_ref(), value.as_ref())\n }\n \n-fn _set_var(k: &OsStr, v: &OsStr) {\n-    os_imp::setenv(k, v).unwrap_or_else(|e| {\n-        panic!(\"failed to set environment variable `{:?}` to `{:?}`: {}\", k, v, e)\n+fn _set_var(key: &OsStr, value: &OsStr) {\n+    os_imp::setenv(key, value).unwrap_or_else(|e| {\n+        panic!(\"failed to set environment variable `{:?}` to `{:?}`: {}\", key, value, e)\n     })\n }\n \n@@ -366,13 +366,13 @@ fn _set_var(k: &OsStr, v: &OsStr) {\n /// assert!(env::var(key).is_err());\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n-pub fn remove_var<K: AsRef<OsStr>>(k: K) {\n-    _remove_var(k.as_ref())\n+pub fn remove_var<K: AsRef<OsStr>>(key: K) {\n+    _remove_var(key.as_ref())\n }\n \n-fn _remove_var(k: &OsStr) {\n-    os_imp::unsetenv(k)\n-        .unwrap_or_else(|e| panic!(\"failed to remove environment variable `{:?}`: {}\", k, e))\n+fn _remove_var(key: &OsStr) {\n+    os_imp::unsetenv(key)\n+        .unwrap_or_else(|e| panic!(\"failed to remove environment variable `{:?}`: {}\", key, e))\n }\n \n /// An iterator that splits an environment variable into paths according to"}, {"sha": "326a6fdaa80ff75ce70bb8a864e6d0ba1d2cfd6c", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -549,6 +549,7 @@ impl Step for Rustc {\n         cargo.rustdocflag(\"--enable-index-page\");\n         cargo.rustdocflag(\"-Zunstable-options\");\n         cargo.rustdocflag(\"-Znormalize-docs\");\n+        cargo.rustdocflag(\"--show-type-layout\");\n         compile::rustc_cargo(builder, &mut cargo, target);\n \n         // Only include compiler crates, no dependencies of those, such as `libc`.\n@@ -648,6 +649,7 @@ impl Step for Rustdoc {\n \n         cargo.rustdocflag(\"--document-private-items\");\n         cargo.rustdocflag(\"--enable-index-page\");\n+        cargo.rustdocflag(\"--show-type-layout\");\n         cargo.rustdocflag(\"-Zunstable-options\");\n         builder.run(&mut cargo.into());\n     }"}, {"sha": "0e9c561c68994820348a175bd5d71b961e2994bb", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -827,17 +827,30 @@ impl Step for RustdocGUI {\n             }\n \n             let out_dir = builder.test_out(self.target).join(\"rustdoc-gui\");\n-            let mut command = builder.rustdoc_cmd(self.compiler);\n-            command.arg(\"src/test/rustdoc-gui/lib.rs\").arg(\"-o\").arg(&out_dir);\n-            builder.run(&mut command);\n \n+            // We remove existing folder to be sure there won't be artifacts remaining.\n+            let _ = fs::remove_dir_all(&out_dir);\n+\n+            // We generate docs for the libraries present in the rustdoc-gui's src folder.\n+            let libs_dir = builder.build.src.join(\"src/test/rustdoc-gui/src\");\n+            for entry in libs_dir.read_dir().expect(\"read_dir call failed\") {\n+                let entry = entry.expect(\"invalid entry\");\n+                let path = entry.path();\n+                if path.extension().map(|e| e == \"rs\").unwrap_or(false) {\n+                    let mut command = builder.rustdoc_cmd(self.compiler);\n+                    command.arg(path).arg(\"-o\").arg(&out_dir);\n+                    builder.run(&mut command);\n+                }\n+            }\n+\n+            // We now run GUI tests.\n             let mut command = Command::new(&nodejs);\n             command\n-                .arg(\"src/tools/rustdoc-gui/tester.js\")\n+                .arg(builder.build.src.join(\"src/tools/rustdoc-gui/tester.js\"))\n                 .arg(\"--doc-folder\")\n-                .arg(out_dir.join(\"test_docs\"))\n+                .arg(out_dir)\n                 .arg(\"--tests-folder\")\n-                .arg(\"src/test/rustdoc-gui\");\n+                .arg(builder.build.src.join(\"src/test/rustdoc-gui\"));\n             builder.run(&mut command);\n         } else {\n             builder.info(\"No nodejs found, skipping \\\"src/test/rustdoc-gui\\\" tests\");"}, {"sha": "b75e98ae16c16f2718d49d7313bc48865ecff5b3", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -267,6 +267,8 @@ crate struct RenderOptions {\n     crate document_hidden: bool,\n     /// If `true`, generate a JSON file in the crate folder instead of HTML redirection files.\n     crate generate_redirect_map: bool,\n+    /// Show the memory layout of types in the docs.\n+    crate show_type_layout: bool,\n     crate unstable_features: rustc_feature::UnstableFeatures,\n     crate emit: Vec<EmitType>,\n }\n@@ -636,6 +638,7 @@ impl Options {\n         let document_hidden = matches.opt_present(\"document-hidden-items\");\n         let run_check = matches.opt_present(\"check\");\n         let generate_redirect_map = matches.opt_present(\"generate-redirect-map\");\n+        let show_type_layout = matches.opt_present(\"show-type-layout\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -695,6 +698,7 @@ impl Options {\n                 document_private,\n                 document_hidden,\n                 generate_redirect_map,\n+                show_type_layout,\n                 unstable_features: rustc_feature::UnstableFeatures::from_environment(\n                     crate_name.as_deref(),\n                 ),"}, {"sha": "666d9dfc3e9e4d27e9acd0e5731d9fe25a6093ff", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -91,6 +91,8 @@ crate struct SharedContext<'tcx> {\n     crate include_sources: bool,\n     /// The local file sources we've emitted and their respective url-paths.\n     crate local_sources: FxHashMap<PathBuf, String>,\n+    /// Show the memory layout of types in the docs.\n+    pub(super) show_type_layout: bool,\n     /// Whether the collapsed pass ran\n     collapsed: bool,\n     /// The base-URL of the issue tracker for when an item has been tagged with\n@@ -373,6 +375,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             generate_search_filter,\n             unstable_features,\n             generate_redirect_map,\n+            show_type_layout,\n             ..\n         } = options;\n \n@@ -446,6 +449,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             all: RefCell::new(AllTypes::new()),\n             errors: receiver,\n             redirections: if generate_redirect_map { Some(Default::default()) } else { None },\n+            show_type_layout,\n         };\n \n         // Add the default themes to the `Vec` of stylepaths"}, {"sha": "f0ca24b8f0221d2c0c2c87f03d55003aaf554c6d", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 74, "deletions": 4, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -7,6 +7,7 @@ use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::DefId;\n use rustc_middle::middle::stability;\n+use rustc_middle::ty::layout::LayoutError;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -830,11 +831,12 @@ fn item_typedef(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::T\n \n     document(w, cx, it, None);\n \n+    let def_id = it.def_id.expect_real();\n     // Render any items associated directly to this alias, as otherwise they\n     // won't be visible anywhere in the docs. It would be nice to also show\n     // associated items from the aliased type (see discussion in #32077), but\n     // we need #14072 to make sense of the generics.\n-    render_assoc_items(w, cx, it, it.def_id.expect_real(), AssocItemRender::All)\n+    render_assoc_items(w, cx, it, def_id, AssocItemRender::All);\n }\n \n fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Union) {\n@@ -846,6 +848,7 @@ fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Uni\n     });\n \n     document(w, cx, it, None);\n+\n     let mut fields = s\n         .fields\n         .iter()\n@@ -880,7 +883,9 @@ fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Uni\n             document(w, cx, field, Some(it));\n         }\n     }\n-    render_assoc_items(w, cx, it, it.def_id.expect_real(), AssocItemRender::All)\n+    let def_id = it.def_id.expect_real();\n+    render_assoc_items(w, cx, it, def_id, AssocItemRender::All);\n+    document_type_layout(w, cx, def_id);\n }\n \n fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum) {\n@@ -940,6 +945,7 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n     });\n \n     document(w, cx, it, None);\n+\n     if !e.variants.is_empty() {\n         write!(\n             w,\n@@ -1014,7 +1020,9 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n             render_stability_since(w, variant, it, cx.tcx());\n         }\n     }\n-    render_assoc_items(w, cx, it, it.def_id.expect_real(), AssocItemRender::All)\n+    let def_id = it.def_id.expect_real();\n+    render_assoc_items(w, cx, it, def_id, AssocItemRender::All);\n+    document_type_layout(w, cx, def_id);\n }\n \n fn item_macro(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Macro) {\n@@ -1114,6 +1122,7 @@ fn item_struct(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::St\n     });\n \n     document(w, cx, it, None);\n+\n     let mut fields = s\n         .fields\n         .iter()\n@@ -1152,7 +1161,9 @@ fn item_struct(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::St\n             }\n         }\n     }\n-    render_assoc_items(w, cx, it, it.def_id.expect_real(), AssocItemRender::All)\n+    let def_id = it.def_id.expect_real();\n+    render_assoc_items(w, cx, it, def_id, AssocItemRender::All);\n+    document_type_layout(w, cx, def_id);\n }\n \n fn item_static(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Static) {\n@@ -1522,3 +1533,62 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n         w.write_str(\"</div></details>\");\n     }\n }\n+\n+fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n+    if !cx.shared.show_type_layout {\n+        return;\n+    }\n+\n+    writeln!(w, \"<h2 class=\\\"small-section-header\\\">Layout</h2>\");\n+    writeln!(w, \"<div class=\\\"docblock\\\">\");\n+\n+    let tcx = cx.tcx();\n+    let param_env = tcx.param_env(ty_def_id);\n+    let ty = tcx.type_of(ty_def_id);\n+    match tcx.layout_of(param_env.and(ty)) {\n+        Ok(ty_layout) => {\n+            writeln!(\n+                w,\n+                \"<div class=\\\"warning\\\"><p><strong>Note:</strong> Most layout information is \\\n+                 completely unstable and may be different between compiler versions and platforms. \\\n+                 The only exception is types with certain <code>repr(...)</code> attributes. \\\n+                 Please see the Rust Reference\u2019s \\\n+                 <a href=\\\"https://doc.rust-lang.org/reference/type-layout.html\\\">\u201cType Layout\u201d</a> \\\n+                 chapter for details on type layout guarantees.</p></div>\"\n+            );\n+            if ty_layout.layout.abi.is_unsized() {\n+                writeln!(w, \"<p><strong>Size:</strong> (unsized)</p>\");\n+            } else {\n+                let bytes = ty_layout.layout.size.bytes();\n+                writeln!(\n+                    w,\n+                    \"<p><strong>Size:</strong> {size} byte{pl}</p>\",\n+                    size = bytes,\n+                    pl = if bytes == 1 { \"\" } else { \"s\" },\n+                );\n+            }\n+        }\n+        // This kind of layout error can occur with valid code, e.g. if you try to\n+        // get the layout of a generic type such as `Vec<T>`.\n+        Err(LayoutError::Unknown(_)) => {\n+            writeln!(\n+                w,\n+                \"<p><strong>Note:</strong> Unable to compute type layout, \\\n+                 possibly due to this type having generic parameters. \\\n+                 Layout can only be computed for concrete, fully-instantiated types.</p>\"\n+            );\n+        }\n+        // This kind of error probably can't happen with valid code, but we don't\n+        // want to panic and prevent the docs from building, so we just let the\n+        // user know that we couldn't compute the layout.\n+        Err(LayoutError::SizeOverflow(_)) => {\n+            writeln!(\n+                w,\n+                \"<p><strong>Note:</strong> Encountered an error during type layout; \\\n+                 the type was too big.</p>\"\n+            );\n+        }\n+    }\n+\n+    writeln!(w, \"</div>\");\n+}"}, {"sha": "04dc25341f4d3c8d1b7b1517d6239d2c79a2c053", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -448,14 +448,14 @@ function hideThemeButtonState() {\n     }\n \n     function getHelpElement(build) {\n-        if (build !== false) {\n+        if (build) {\n             buildHelperPopup();\n         }\n         return document.getElementById(\"help\");\n     }\n \n     function displayHelp(display, ev, help) {\n-        if (display === true) {\n+        if (display) {\n             help = help ? help : getHelpElement(true);\n             if (hasClass(help, \"hidden\")) {\n                 ev.preventDefault();\n@@ -466,7 +466,7 @@ function hideThemeButtonState() {\n             // No need to build the help popup if we want to hide it in case it hasn't been\n             // built yet...\n             help = help ? help : getHelpElement(false);\n-            if (help && hasClass(help, \"hidden\") === false) {\n+            if (help && !hasClass(help, \"hidden\")) {\n                 ev.preventDefault();\n                 addClass(help, \"hidden\");\n                 removeClass(document.body, \"blur\");\n@@ -477,9 +477,9 @@ function hideThemeButtonState() {\n     function handleEscape(ev) {\n         var help = getHelpElement(false);\n         var search = searchState.outputElement();\n-        if (hasClass(help, \"hidden\") === false) {\n+        if (!hasClass(help, \"hidden\")) {\n             displayHelp(false, ev, help);\n-        } else if (hasClass(search, \"hidden\") === false) {\n+        } else if (!hasClass(search, \"hidden\")) {\n             searchState.clearInputTimeout();\n             ev.preventDefault();\n             searchState.hideResults(search);\n@@ -491,7 +491,7 @@ function hideThemeButtonState() {\n     var disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n     function handleShortcut(ev) {\n         // Don't interfere with browser shortcuts\n-        if (ev.ctrlKey || ev.altKey || ev.metaKey || disableShortcuts === true) {\n+        if (ev.ctrlKey || ev.altKey || ev.metaKey || disableShortcuts) {\n             return;\n         }\n \n@@ -908,11 +908,11 @@ function hideThemeButtonState() {\n         function implHider(addOrRemove, fullHide) {\n             return function(n) {\n                 var shouldHide =\n-                    fullHide === true ||\n-                    hasClass(n, \"method\") === true ||\n-                    hasClass(n, \"associatedconstant\") === true;\n-                if (shouldHide === true || hasClass(n, \"type\") === true) {\n-                    if (shouldHide === true) {\n+                    fullHide ||\n+                    hasClass(n, \"method\") ||\n+                    hasClass(n, \"associatedconstant\");\n+                if (shouldHide || hasClass(n, \"type\")) {\n+                    if (shouldHide) {\n                         if (addOrRemove) {\n                             addClass(n, \"hidden-by-impl-hider\");\n                         } else {\n@@ -934,7 +934,7 @@ function hideThemeButtonState() {\n \n         var relatedDoc;\n         var action = mode;\n-        if (hasClass(toggle.parentNode, \"impl\") === false) {\n+        if (!hasClass(toggle.parentNode, \"impl\")) {\n             relatedDoc = toggle.parentNode.nextElementSibling;\n             if (hasClass(relatedDoc, \"item-info\")) {\n                 relatedDoc = relatedDoc.nextElementSibling;\n@@ -964,11 +964,11 @@ function hideThemeButtonState() {\n             relatedDoc = parentElem;\n             var docblock = relatedDoc.nextElementSibling;\n \n-            while (hasClass(relatedDoc, \"impl-items\") === false) {\n+            while (!hasClass(relatedDoc, \"impl-items\")) {\n                 relatedDoc = relatedDoc.nextElementSibling;\n             }\n \n-            if (!relatedDoc && hasClass(docblock, \"docblock\") === false) {\n+            if (!relatedDoc && !hasClass(docblock, \"docblock\")) {\n                 return;\n             }\n \n@@ -987,7 +987,7 @@ function hideThemeButtonState() {\n             if (action === \"show\") {\n                 removeClass(relatedDoc, \"fns-now-collapsed\");\n                 // Stability/deprecation/portability information is never hidden.\n-                if (hasClass(docblock, \"item-info\") === false) {\n+                if (!hasClass(docblock, \"item-info\")) {\n                     removeClass(docblock, \"hidden-by-usual-hider\");\n                 }\n                 onEachLazy(toggle.childNodes, adjustToggle(false, dontApplyBlockRule));\n@@ -996,7 +996,7 @@ function hideThemeButtonState() {\n                 addClass(relatedDoc, \"fns-now-collapsed\");\n                 // Stability/deprecation/portability information should be shown even when detailed\n                 // info is hidden.\n-                if (hasClass(docblock, \"item-info\") === false) {\n+                if (!hasClass(docblock, \"item-info\")) {\n                     addClass(docblock, \"hidden-by-usual-hider\");\n                 }\n                 onEachLazy(toggle.childNodes, adjustToggle(true, dontApplyBlockRule));\n@@ -1045,7 +1045,7 @@ function hideThemeButtonState() {\n             });\n         }\n \n-        if (hideMethodDocs === true) {\n+        if (hideMethodDocs) {\n             onEachLazy(document.getElementsByClassName(\"method\"), function(e) {\n                 var toggle = e.parentNode;\n                 if (toggle) {\n@@ -1132,7 +1132,7 @@ function hideThemeButtonState() {\n     if (sidebar_menu) {\n         sidebar_menu.onclick = function() {\n             var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n-            if (hasClass(sidebar, \"mobile\") === true) {\n+            if (hasClass(sidebar, \"mobile\")) {\n                 hideSidebar();\n             } else {\n                 showSidebar();"}, {"sha": "b4f9d7b374052d5ff1c2cdffa78d0d97e8d3bf0a", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 35, "deletions": 39, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -146,23 +146,21 @@ window.initSearch = function(rawSearchIndex) {\n \n         removeEmptyStringsFromArray(split);\n \n-        function transformResults(results, isType) {\n+        function transformResults(results) {\n             var out = [];\n             for (var i = 0, len = results.length; i < len; ++i) {\n                 if (results[i].id > -1) {\n                     var obj = searchIndex[results[i].id];\n                     obj.lev = results[i].lev;\n-                    if (isType !== true || obj.type) {\n-                        var res = buildHrefAndPath(obj);\n-                        obj.displayPath = pathSplitter(res[0]);\n-                        obj.fullPath = obj.displayPath + obj.name;\n-                        // To be sure than it some items aren't considered as duplicate.\n-                        obj.fullPath += \"|\" + obj.ty;\n-                        obj.href = res[1];\n-                        out.push(obj);\n-                        if (out.length >= MAX_RESULTS) {\n-                            break;\n-                        }\n+                    var res = buildHrefAndPath(obj);\n+                    obj.displayPath = pathSplitter(res[0]);\n+                    obj.fullPath = obj.displayPath + obj.name;\n+                    // To be sure than it some items aren't considered as duplicate.\n+                    obj.fullPath += \"|\" + obj.ty;\n+                    obj.href = res[1];\n+                    out.push(obj);\n+                    if (out.length >= MAX_RESULTS) {\n+                        break;\n                     }\n                 }\n             }\n@@ -266,9 +264,7 @@ window.initSearch = function(rawSearchIndex) {\n                     path = result.item.path.toLowerCase(),\n                     parent = result.item.parent;\n \n-                if (isType !== true &&\n-                    validateResult(name, path, split, parent) === false)\n-                {\n+                if (!isType && !validateResult(name, path, split, parent)) {\n                     result.id = -1;\n                 }\n             }\n@@ -352,7 +348,7 @@ window.initSearch = function(rawSearchIndex) {\n             var lev_distance = MAX_LEV_DISTANCE + 1;\n             var len, x, firstGeneric;\n             if (obj[NAME] === val.name) {\n-                if (literalSearch === true) {\n+                if (literalSearch) {\n                     if (val.generics && val.generics.length !== 0) {\n                         if (obj.length > GENERICS_DATA &&\n                               obj[GENERICS_DATA].length >= val.generics.length) {\n@@ -373,7 +369,7 @@ window.initSearch = function(rawSearchIndex) {\n                                     break;\n                                 }\n                             }\n-                            if (allFound === true) {\n+                            if (allFound) {\n                                 return true;\n                             }\n                         } else {\n@@ -394,7 +390,7 @@ window.initSearch = function(rawSearchIndex) {\n                 }\n             }\n             // Names didn't match so let's check if one of the generic types could.\n-            if (literalSearch === true) {\n+            if (literalSearch) {\n                  if (obj.length > GENERICS_DATA && obj[GENERICS_DATA].length > 0) {\n                     return obj[GENERICS_DATA].some(\n                         function(name) {\n@@ -429,12 +425,12 @@ window.initSearch = function(rawSearchIndex) {\n                 var length = obj.type[INPUTS_DATA].length;\n                 for (var i = 0; i < length; i++) {\n                     var tmp = obj.type[INPUTS_DATA][i];\n-                    if (typePassesFilter(typeFilter, tmp[1]) === false) {\n+                    if (!typePassesFilter(typeFilter, tmp[1])) {\n                         continue;\n                     }\n                     tmp = checkType(tmp, val, literalSearch);\n-                    if (literalSearch === true) {\n-                        if (tmp === true) {\n+                    if (literalSearch) {\n+                        if (tmp) {\n                             return true;\n                         }\n                         continue;\n@@ -445,7 +441,7 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                 }\n             }\n-            return literalSearch === true ? false : lev_distance;\n+            return literalSearch ? false : lev_distance;\n         }\n \n         function checkReturned(obj, val, literalSearch, typeFilter) {\n@@ -458,12 +454,12 @@ window.initSearch = function(rawSearchIndex) {\n                 }\n                 for (var x = 0, len = ret.length; x < len; ++x) {\n                     var tmp = ret[x];\n-                    if (typePassesFilter(typeFilter, tmp[1]) === false) {\n+                    if (!typePassesFilter(typeFilter, tmp[1])) {\n                         continue;\n                     }\n                     tmp = checkType(tmp, val, literalSearch);\n-                    if (literalSearch === true) {\n-                        if (tmp === true) {\n+                    if (literalSearch) {\n+                        if (tmp) {\n                             return true;\n                         }\n                         continue;\n@@ -474,7 +470,7 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                 }\n             }\n-            return literalSearch === true ? false : lev_distance;\n+            return literalSearch ? false : lev_distance;\n         }\n \n         function checkPath(contains, lastElem, ty) {\n@@ -507,7 +503,7 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                     lev_total += lev;\n                 }\n-                if (aborted === false) {\n+                if (!aborted) {\n                     ret_lev = Math.min(ret_lev, Math.round(lev_total / clength));\n                 }\n             }\n@@ -634,14 +630,14 @@ window.initSearch = function(rawSearchIndex) {\n                         dontValidate: true,\n                     };\n                 }\n-                if (in_args === true && results_in_args[fullId] === undefined) {\n+                if (in_args && results_in_args[fullId] === undefined) {\n                     results_in_args[fullId] = {\n                         id: i,\n                         index: -1,\n                         dontValidate: true,\n                     };\n                 }\n-                if (returned === true && results_returned[fullId] === undefined) {\n+                if (returned && results_returned[fullId] === undefined) {\n                     results_returned[fullId] = {\n                         id: i,\n                         index: -1,\n@@ -676,34 +672,34 @@ window.initSearch = function(rawSearchIndex) {\n                 fullId = ty.id;\n \n                 returned = checkReturned(ty, output, true, NO_TYPE_FILTER);\n-                if (output.name === \"*\" || returned === true) {\n+                if (output.name === \"*\" || returned) {\n                     in_args = false;\n                     var is_module = false;\n \n                     if (input === \"*\") {\n                         is_module = true;\n                     } else {\n                         var allFound = true;\n-                        for (it = 0, len = inputs.length; allFound === true && it < len; it++) {\n+                        for (it = 0, len = inputs.length; allFound && it < len; it++) {\n                             allFound = checkType(type, inputs[it], true);\n                         }\n                         in_args = allFound;\n                     }\n-                    if (in_args === true) {\n+                    if (in_args) {\n                         results_in_args[fullId] = {\n                             id: i,\n                             index: -1,\n                             dontValidate: true,\n                         };\n                     }\n-                    if (returned === true) {\n+                    if (returned) {\n                         results_returned[fullId] = {\n                             id: i,\n                             index: -1,\n                             dontValidate: true,\n                         };\n                     }\n-                    if (is_module === true) {\n+                    if (is_module) {\n                         results[fullId] = {\n                             id: i,\n                             index: -1,\n@@ -763,10 +759,10 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                 }\n                 if ((lev = levenshtein(searchWords[j], val)) <= MAX_LEV_DISTANCE) {\n-                    if (typePassesFilter(typeFilter, ty.ty) === false) {\n-                        lev = MAX_LEV_DISTANCE + 1;\n-                    } else {\n+                    if (typePassesFilter(typeFilter, ty.ty)) {\n                         lev += 1;\n+                    } else {\n+                        lev = MAX_LEV_DISTANCE + 1;\n                     }\n                 }\n                 in_args = findArg(ty, valGenerics, false, typeFilter);\n@@ -821,7 +817,7 @@ window.initSearch = function(rawSearchIndex) {\n         var ret = {\n             \"in_args\": sortResults(results_in_args, true),\n             \"returned\": sortResults(results_returned, true),\n-            \"others\": sortResults(results),\n+            \"others\": sortResults(results, false),\n         };\n         handleAliases(ret, query, filterCrates);\n         return ret;\n@@ -1263,7 +1259,7 @@ window.initSearch = function(rawSearchIndex) {\n         if (query.query.length === 0) {\n             return;\n         }\n-        if (forced !== true && query.id === currentResults) {\n+        if (!forced && query.id === currentResults) {\n             if (query.query.length > 0) {\n                 searchState.putBackSearch(searchState.input);\n             }"}, {"sha": "81df54118968171893448707f4a50b50c01e6c2c", "filename": "src/librustdoc/html/static/source-script.js", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -44,7 +44,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     if (elem.dirs) {\n         for (i = 0, len = elem.dirs.length; i < len; ++i) {\n             if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n-                               hasFoundFile) === true) {\n+                               hasFoundFile)) {\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n             }\n@@ -59,8 +59,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n             var file = document.createElement(\"a\");\n             file.innerText = elem.files[i];\n             file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n-            if (hasFoundFile === false &&\n-                    currentFile === fullPath + elem.files[i]) {\n+            if (!hasFoundFile && currentFile === fullPath + elem.files[i]) {\n                 file.className = \"selected\";\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n@@ -72,7 +71,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     children.appendChild(files);\n     parent.appendChild(name);\n     parent.appendChild(children);\n-    return hasFoundFile === true && currentFile.startsWith(fullPath);\n+    return hasFoundFile && currentFile.startsWith(fullPath);\n }\n \n function toggleSidebar() {\n@@ -116,7 +115,7 @@ function createSidebarToggle() {\n // This function is called from \"source-files.js\", generated in `html/render/mod.rs`.\n // eslint-disable-next-line no-unused-vars\n function createSourceSidebar() {\n-    if (window.rootPath.endsWith(\"/\") === false) {\n+    if (!window.rootPath.endsWith(\"/\")) {\n         window.rootPath += \"/\";\n     }\n     var main = document.getElementById(\"main\");"}, {"sha": "208afd2e732dd7366a577bda9321f9adab1e8050", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -59,15 +59,15 @@ function onEach(arr, func, reversed) {\n     if (arr && arr.length > 0 && func) {\n         var length = arr.length;\n         var i;\n-        if (reversed !== true) {\n-            for (i = 0; i < length; ++i) {\n-                if (func(arr[i]) === true) {\n+        if (reversed) {\n+            for (i = length - 1; i >= 0; --i) {\n+                if (func(arr[i])) {\n                     return true;\n                 }\n             }\n         } else {\n-            for (i = length - 1; i >= 0; --i) {\n-                if (func(arr[i]) === true) {\n+            for (i = 0; i < length; ++i) {\n+                if (func(arr[i])) {\n                     return true;\n                 }\n             }\n@@ -111,7 +111,7 @@ function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n \n     // If this new value comes from a system setting or from the previously\n     // saved theme, no need to save it.\n-    if (saveTheme === true) {\n+    if (saveTheme) {\n         updateLocalStorage(\"rustdoc-theme\", newTheme);\n     }\n \n@@ -131,7 +131,7 @@ function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n             return true;\n         }\n     });\n-    if (found === true) {\n+    if (found) {\n         styleElem.href = newHref;\n     }\n }"}, {"sha": "5ede3780e87ae8cbe50dec1bab5eaa14786d98e6", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -594,6 +594,9 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         unstable(\"no-run\", |o| o.optflag(\"\", \"no-run\", \"Compile doctests without running them\")),\n+        unstable(\"show-type-layout\", |o| {\n+            o.optflag(\"\", \"show-type-layout\", \"Include the memory layout of types in the docs\")\n+        }),\n     ]\n }\n "}, {"sha": "322f5681b3fd9278243359047748a891ca46fe21", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.async2.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async2.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async2.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async2.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -12,7 +12,6 @@\n    12|      1|    if b {\n    13|      1|        println!(\"non_async_func println in block\");\n    14|      1|    }\n-                   ^0\n    15|      1|}\n    16|       |\n    17|       |"}, {"sha": "656a26597759d337bac841ad5a4bfa956cac3a9b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.conditions.txt", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -5,7 +5,6 @@\n     5|      1|    if true {\n     6|      1|        countdown = 10;\n     7|      1|    }\n-                   ^0\n     8|       |\n     9|       |    const B: u32 = 100;\n    10|      1|    let x = if countdown > 7 {\n@@ -25,7 +24,6 @@\n    24|      1|    if true {\n    25|      1|        countdown = 10;\n    26|      1|    }\n-                   ^0\n    27|       |\n    28|      1|    if countdown > 7 {\n    29|      1|        countdown -= 4;\n@@ -44,7 +42,6 @@\n    41|      1|        if true {\n    42|      1|            countdown = 10;\n    43|      1|        }\n-                       ^0\n    44|       |\n    45|      1|        if countdown > 7 {\n    46|      1|            countdown -= 4;\n@@ -57,14 +54,13 @@\n    53|       |        } else {\n    54|      0|            return;\n    55|       |        }\n-   56|      0|    }\n-   57|       |\n+   56|       |    } // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal\n+   57|       |      // `true` was const-evaluated. The compiler knows the `if` block will be executed.\n    58|       |\n    59|      1|    let mut countdown = 0;\n    60|      1|    if true {\n    61|      1|        countdown = 1;\n    62|      1|    }\n-                   ^0\n    63|       |\n    64|      1|    let z = if countdown > 7 {\n                       ^0"}, {"sha": "1b6bb9ff8891de6c5ad657868580e8d31afe28ff", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.doctest.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.doctest.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.doctest.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.doctest.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -9,7 +9,7 @@\n     8|      1|//!     assert_eq!(1, 1);\n     9|       |//! } else {\n    10|       |//!     // this is not!\n-   11|      0|//!     assert_eq!(1, 2);\n+   11|       |//!     assert_eq!(1, 2);\n    12|       |//! }\n    13|      1|//! ```\n    14|       |//!\n@@ -84,7 +84,7 @@\n    74|      1|    if true {\n    75|      1|        assert_eq!(1, 1);\n    76|       |    } else {\n-   77|      0|        assert_eq!(1, 2);\n+   77|       |        assert_eq!(1, 2);\n    78|       |    }\n    79|      1|}\n    80|       |"}, {"sha": "fab5be41901c9b544ba12e3379b30cb96d331177", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.drop_trait.txt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -19,11 +19,11 @@\n    19|      1|    if true {\n    20|      1|        println!(\"Exiting with error...\");\n    21|      1|        return Err(1);\n-   22|      0|    }\n-   23|      0|\n-   24|      0|    let _ = Firework { strength: 1000 };\n-   25|      0|\n-   26|      0|    Ok(())\n+   22|       |    }\n+   23|       |\n+   24|       |    let _ = Firework { strength: 1000 };\n+   25|       |\n+   26|       |    Ok(())\n    27|      1|}\n    28|       |\n    29|       |// Expected program output:"}, {"sha": "7b38ffb87cba89b257125b6585d09100014763df", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.generics.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -52,15 +52,15 @@\n    30|      1|    if true {\n    31|      1|        println!(\"Exiting with error...\");\n    32|      1|        return Err(1);\n-   33|      0|    }\n-   34|      0|\n-   35|      0|\n-   36|      0|\n-   37|      0|\n-   38|      0|\n-   39|      0|    let _ = Firework { strength: 1000 };\n-   40|      0|\n-   41|      0|    Ok(())\n+   33|       |    } // The remaining lines below have no coverage because `if true` (with the constant literal\n+   34|       |      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.\n+   35|       |      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown\n+   36|       |      // in other tests, the lines below would have coverage (which would show they had `0`\n+   37|       |      // executions, assuming the condition still evaluated to `true`).\n+   38|       |\n+   39|       |    let _ = Firework { strength: 1000 };\n+   40|       |\n+   41|       |    Ok(())\n    42|      1|}\n    43|       |\n    44|       |// Expected program output:"}, {"sha": "81d5c7d90346d08a397e577d120352dbe465f124", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.loops_branches.txt", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -9,23 +9,23 @@\n     9|      1|    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n    10|      1|        if true {\n    11|      1|            if false {\n-   12|      0|                while true {\n-   13|      0|                }\n+   12|       |                while true {\n+   13|       |                }\n    14|      1|            }\n-   15|      1|            write!(f, \"cool\")?;\n-                                           ^0\n-   16|      0|        } else {\n-   17|      0|        }\n+   15|      1|            write!(f, \"error\")?;\n+                                            ^0\n+   16|       |        } else {\n+   17|       |        }\n    18|       |\n    19|     10|        for i in 0..10 {\n    20|     10|            if true {\n    21|     10|                if false {\n-   22|      0|                    while true {}\n+   22|       |                    while true {}\n    23|     10|                }\n-   24|     10|                write!(f, \"cool\")?;\n-                                               ^0\n-   25|      0|            } else {\n-   26|      0|            }\n+   24|     10|                write!(f, \"error\")?;\n+                                                ^0\n+   25|       |            } else {\n+   26|       |            }\n    27|       |        }\n    28|      1|        Ok(())\n    29|      1|    }\n@@ -36,21 +36,21 @@\n    34|       |impl std::fmt::Display for DisplayTest {\n    35|      1|    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n    36|      1|        if false {\n-   37|      0|        } else {\n+   37|       |        } else {\n    38|      1|            if false {\n-   39|      0|                while true {}\n+   39|       |                while true {}\n    40|      1|            }\n-   41|      1|            write!(f, \"cool\")?;\n-                                           ^0\n+   41|      1|            write!(f, \"error\")?;\n+                                            ^0\n    42|       |        }\n    43|     10|        for i in 0..10 {\n    44|     10|            if false {\n-   45|      0|            } else {\n+   45|       |            } else {\n    46|     10|                if false {\n-   47|      0|                    while true {}\n+   47|       |                    while true {}\n    48|     10|                }\n-   49|     10|                write!(f, \"cool\")?;\n-                                               ^0\n+   49|     10|                write!(f, \"error\")?;\n+                                                ^0\n    50|       |            }\n    51|       |        }\n    52|      1|        Ok(())"}, {"sha": "5adeef7d0850b462b369da348651e695db38307b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.tight_inf_loop.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,6 +1,6 @@\n     1|      1|fn main() {\n     2|      1|    if false {\n-    3|      0|        loop {}\n+    3|       |        loop {}\n     4|      1|    }\n     5|      1|}\n "}, {"sha": "8a2a0b53e5862f3031364e1e340834aedfbefda8", "filename": "src/test/run-make-fulldeps/coverage/conditions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -53,8 +53,8 @@ fn main() {\n         } else {\n             return;\n         }\n-    }\n-\n+    } // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal\n+      // `true` was const-evaluated. The compiler knows the `if` block will be executed.\n \n     let mut countdown = 0;\n     if true {"}, {"sha": "cbeda35d3b8cfe8a5b226f769282d568f9689012", "filename": "src/test/run-make-fulldeps/coverage/generics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fgenerics.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -30,11 +30,11 @@ fn main() -> Result<(),u8> {\n     if true {\n         println!(\"Exiting with error...\");\n         return Err(1);\n-    }\n-\n-\n-\n-\n+    } // The remaining lines below have no coverage because `if true` (with the constant literal\n+      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.\n+      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown\n+      // in other tests, the lines below would have coverage (which would show they had `0`\n+      // executions, assuming the condition still evaluated to `true`).\n \n     let _ = Firework { strength: 1000 };\n "}, {"sha": "4d9bbad3367f6ef50c9d072327ab996ec5d62cb9", "filename": "src/test/run-make-fulldeps/coverage/loops_branches.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_branches.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -12,7 +12,7 @@ impl std::fmt::Debug for DebugTest {\n                 while true {\n                 }\n             }\n-            write!(f, \"cool\")?;\n+            write!(f, \"error\")?;\n         } else {\n         }\n \n@@ -21,7 +21,7 @@ impl std::fmt::Debug for DebugTest {\n                 if false {\n                     while true {}\n                 }\n-                write!(f, \"cool\")?;\n+                write!(f, \"error\")?;\n             } else {\n             }\n         }\n@@ -38,15 +38,15 @@ impl std::fmt::Display for DisplayTest {\n             if false {\n                 while true {}\n             }\n-            write!(f, \"cool\")?;\n+            write!(f, \"error\")?;\n         }\n         for i in 0..10 {\n             if false {\n             } else {\n                 if false {\n                     while true {}\n                 }\n-                write!(f, \"cool\")?;\n+                write!(f, \"error\")?;\n             }\n         }\n         Ok(())"}, {"sha": "d014ed60eb039e737b36b93ed819e25b0b235425", "filename": "src/test/rustdoc-gui/basic-code.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,3 +1,3 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n click: \".srclink\"\n assert: (\".line-numbers\", 1)"}, {"sha": "44fcec3393744dedd21752a821bda94875581b04", "filename": "src/test/rustdoc-gui/basic.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fbasic.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fbasic.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fbasic.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,4 +1,4 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n assert: (\"#functions\")\n goto: ./struct.Foo.html\n assert: (\"div.type-decl\")"}, {"sha": "d64ee0261370c9bc327c8c315c8e5df25858f7fb", "filename": "src/test/rustdoc-gui/check_info_sign_position.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,4 +1,4 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n goto: ./fn.check_list_code_block.html\n // If the codeblock is the first element of the docblock, the information tooltip must have\n // have some top margin to avoid going over the toggle (the \"[+]\")."}, {"sha": "7e7003d4340a3ef281913cdea9563417219b54ca", "filename": "src/test/rustdoc-gui/code-sidebar-toggle.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fcode-sidebar-toggle.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fcode-sidebar-toggle.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcode-sidebar-toggle.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,4 +1,4 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n click: \".srclink\"\n click: \"#sidebar-toggle\"\n wait-for: 500"}, {"sha": "1248d11200e6c5f27b51e7a17342f08da84613ad", "filename": "src/test/rustdoc-gui/hash-item-expansion.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the element corresponding to the hash is displayed.\n-goto: file://|DOC_PATH|/struct.Foo.html#method.borrow\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#method.borrow\n // In the blanket implementations list, \"Borrow\" is the second one, hence the \":nth(2)\".\n assert: (\"#blanket-implementations-list > details:nth-child(2)\", \"open\", \"\")\n // Please note the \"\\\" below is needed because otherwise \".borrow\" would be interpreted as"}, {"sha": "3f1e7ec4a789c17db69cd05b2a84b6cfa6f5e6da", "filename": "src/test/rustdoc-gui/impl-default-expansion.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fimpl-default-expansion.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fimpl-default-expansion.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fimpl-default-expansion.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,3 +1,3 @@\n // This test ensures that the impl blocks are open by default.\n-goto: file://|DOC_PATH|/struct.Foo.html\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html\n assert: (\"#main > details.implementors-toggle\", \"open\", \"\")"}, {"sha": "7d3490e9d9410b4ab9eae0bdbd49c4a357010b34", "filename": "src/test/rustdoc-gui/list_code_block.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Flist_code_block.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Flist_code_block.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Flist_code_block.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,3 +1,3 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n goto: ./fn.check_list_code_block.html\n assert: (\"pre.rust.fn\")"}, {"sha": "5c95db70aecdd46a25f2926967a0d9a5e58dbf10", "filename": "src/test/rustdoc-gui/search-input-mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsearch-input-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsearch-input-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-input-mobile.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,6 +1,6 @@\n // Test to ensure that you can click on the search input, whatever the width.\n // The PR which fixed it is: https://github.com/rust-lang/rust/pull/81592\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n size: (463, 700)\n // We first check that the search input isn't already focused.\n assert-false: (\"input.search-input:focus\")"}, {"sha": "c828c72e910d592e104e7a1c4b408dbde90f4114", "filename": "src/test/rustdoc-gui/search-tab-selection-if-current-is-empty.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,19 +1,19 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n write: (\".search-input\", \"Foo\")\n // Waiting for the search results to appear...\n wait-for: \"#titles\"\n assert: (\"#titles > button:nth-of-type(1)\", \"class\", \"selected\")\n \n // To go back to the original \"state\"\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n write: (\".search-input\", \"-> String\")\n // Waiting for the search results to appear...\n wait-for: \"#titles\"\n // With this search, only the last tab shouldn't be empty so it should be selected.\n assert: (\"#titles > button:nth-of-type(3)\", \"class\", \"selected\")\n \n // To go back to the original \"state\"\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n write: (\".search-input\", \"-> Something\")\n // Waiting for the search results to appear...\n wait-for: \"#titles\""}, {"sha": "884c38d85fbdba6bf6a6f829332d2cfbd039d386", "filename": "src/test/rustdoc-gui/shortcuts.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,5 +1,5 @@\n // Check that the various shortcuts are working.\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n // We first check that the search input isn't already focused.\n assert-false: \"input.search-input:focus\"\n press-key: \"s\""}, {"sha": "ff33a541a1801642dd1164f84d2623e58c16a611", "filename": "src/test/rustdoc-gui/source-code-page.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,11 +1,11 @@\n-goto: file://|DOC_PATH|/../src/test_docs/lib.rs.html\n+goto: file://|DOC_PATH|/src/test_docs/lib.rs.html\n // Check that we can click on the line number.\n click: (40, 224) // This is the position of the span for line 4.\n // Unfortunately, \"#4\" isn't a valid query selector, so we have to go around that limitation\n // by instead getting the nth span.\n assert: (\".line-numbers > span:nth-child(4)\", \"class\", \"line-highlighted\")\n // We now check that the good spans are highlighted\n-goto: file://|DOC_PATH|/../src/test_docs/lib.rs.html#4-6\n+goto: file://|DOC_PATH|/src/test_docs/lib.rs.html#4-6\n assert-false: (\".line-numbers > span:nth-child(3)\", \"class\", \"line-highlighted\")\n assert: (\".line-numbers > span:nth-child(4)\", \"class\", \"line-highlighted\")\n assert: (\".line-numbers > span:nth-child(5)\", \"class\", \"line-highlighted\")"}, {"sha": "eeba3e3f9070df5b75ea8ff101f5fd106c64c4be", "filename": "src/test/rustdoc-gui/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "previous_filename": "src/test/rustdoc-gui/lib.rs"}, {"sha": "bc9063edd1e7a460b3d0d6d615395e0627457b41", "filename": "src/test/rustdoc-gui/theme-change.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,4 +1,4 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n click: \"#theme-picker\"\n click: \"#theme-choices > button:first-child\"\n wait-for: 500"}, {"sha": "062bc7d51e54263993f9cda0068d24c200b93f38", "filename": "src/test/rustdoc-gui/toggle-docs.goml", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,7 +1,10 @@\n-goto: file://|DOC_PATH|/index.html\n+goto: file://|DOC_PATH|/test_docs/index.html\n+assert: (\"#main > details.top-doc\", \"open\", \"\")\n click: \"#toggle-all-docs\"\n-wait-for: 5000\n-assert: (\"#main > div.docblock.hidden-by-usual-hider\")\n+wait-for: 1000\n+// This is now collapsed so there shouldn't be the \"open\" attribute on details.\n+assert-false: (\"#main > details.top-doc\", \"open\", \"\")\n click: \"#toggle-all-docs\"\n-wait-for: 5000\n-assert: (\"#main > div.docblock.hidden-by-usual-hider\", 0)\n+wait-for: 1000\n+// Not collapsed anymore so the \"open\" attribute should be back.\n+assert: (\"#main > details.top-doc\", \"open\", \"\")"}, {"sha": "2e9f85336ecd8f4960a3098501d74318db23f2c6", "filename": "src/test/rustdoc-gui/trait-sidebar-item-order.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -1,4 +1,4 @@\n-goto: file://|DOC_PATH|/trait.AnotherOne.html\n+goto: file://|DOC_PATH|/test_docs/trait.AnotherOne.html\n assert: (\".sidebar-links a:nth-of-type(1)\", \"another\")\n assert: (\".sidebar-links a:nth-of-type(2)\", \"func1\")\n assert: (\".sidebar-links a:nth-of-type(3)\", \"func2\")"}, {"sha": "a01fbd229508b1331627fb9f896f20e6ae9437b0", "filename": "src/test/rustdoc/type-layout-flag-required.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,4 @@\n+// Tests that `--show-type-layout` is required in order to show layout info.\n+\n+// @!has type_layout_flag_required/struct.Foo.html 'Size: '\n+pub struct Foo(usize);"}, {"sha": "272911de6815b663ec443b8ae67543c7734c4731", "filename": "src/test/rustdoc/type-layout.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,54 @@\n+// compile-flags: --show-type-layout -Z unstable-options\n+\n+// @has type_layout/struct.Foo.html 'Size: '\n+// @has - ' bytes'\n+pub struct Foo {\n+    pub a: usize,\n+    b: Vec<String>,\n+}\n+\n+// @has type_layout/enum.Bar.html 'Size: '\n+// @has - ' bytes'\n+pub enum Bar<'a> {\n+    A(String),\n+    B(&'a str, (std::collections::HashMap<String, usize>, Foo)),\n+}\n+\n+// @has type_layout/union.Baz.html 'Size: '\n+// @has - ' bytes'\n+pub union Baz {\n+    a: &'static str,\n+    b: usize,\n+    c: &'static [u8],\n+}\n+\n+// @has type_layout/struct.X.html 'Size: '\n+// @has - ' bytes'\n+pub struct X(usize);\n+\n+// @has type_layout/struct.Y.html 'Size: '\n+// @has - '1 byte'\n+// @!has - ' bytes'\n+pub struct Y(u8);\n+\n+// @has type_layout/struct.Z.html 'Size: '\n+// @has - '0 bytes'\n+pub struct Z;\n+\n+// We can't compute layout for generic types.\n+// @has type_layout/struct.Generic.html 'Unable to compute type layout, possibly due to this type having generic parameters'\n+// @!has - 'Size: '\n+pub struct Generic<T>(T);\n+\n+// We *can*, however, compute layout for types that are only generic over lifetimes,\n+// because lifetimes are a type-system construct.\n+// @has type_layout/struct.GenericLifetimes.html 'Size: '\n+// @has - ' bytes'\n+pub struct GenericLifetimes<'a>(&'a str);\n+\n+// @has type_layout/struct.Unsized.html 'Size: '\n+// @has - '(unsized)'\n+pub struct Unsized([u8]);\n+\n+// @!has type_layout/trait.MyTrait.html 'Size: '\n+pub trait MyTrait {}"}, {"sha": "3699a939e27882e21e5a0a5363b9461f21cff183", "filename": "src/test/ui/deprecation/deprecation-lint.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -359,16 +359,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:18:9\n+  --> $DIR/deprecation-lint.rs:18:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:19:9\n+  --> $DIR/deprecation-lint.rs:19:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:20:13\n@@ -377,10 +377,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:22:9\n+  --> $DIR/deprecation-lint.rs:22:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:26:13\n@@ -389,16 +389,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:27:9\n+  --> $DIR/deprecation-lint.rs:27:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:28:9\n+  --> $DIR/deprecation-lint.rs:28:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:29:13\n@@ -407,10 +407,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:31:9\n+  --> $DIR/deprecation-lint.rs:31:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::DeprecatedStruct::i`: text\n   --> $DIR/deprecation-lint.rs:35:13\n@@ -431,10 +431,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:66:9\n+  --> $DIR/deprecation-lint.rs:66:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:68:13\n@@ -443,10 +443,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:70:9\n+  --> $DIR/deprecation-lint.rs:70:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:75:13\n@@ -551,16 +551,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:247:9\n+  --> $DIR/deprecation-lint.rs:247:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:248:9\n+  --> $DIR/deprecation-lint.rs:248:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:249:13\n@@ -569,10 +569,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:251:9\n+  --> $DIR/deprecation-lint.rs:251:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:255:13\n@@ -581,16 +581,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:256:9\n+  --> $DIR/deprecation-lint.rs:256:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:257:9\n+  --> $DIR/deprecation-lint.rs:257:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:258:13\n@@ -599,10 +599,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:260:9\n+  --> $DIR/deprecation-lint.rs:260:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n   --> $DIR/deprecation-lint.rs:269:13\n@@ -623,10 +623,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:293:9\n+  --> $DIR/deprecation-lint.rs:293:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:295:13\n@@ -635,10 +635,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:297:9\n+  --> $DIR/deprecation-lint.rs:297:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:302:13"}, {"sha": "99a2b09614fd99495f8b71da07d66a67b6c26ebd", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.fixed", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![deny(deprecated)]\n+\n+fn main() {\n+    let _foo = str::trim_start(\"   aoeu\"); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+\n+    let _bar = \"   aoeu\".trim_start(); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+}"}, {"sha": "62bf84aa3ea28ed7287d1b5c877aa66f5de620a5", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![deny(deprecated)]\n+\n+fn main() {\n+    let _foo = str::trim_left(\"   aoeu\"); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+\n+    let _bar = \"   aoeu\".trim_left(); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+}"}, {"sha": "e65d21bb09bbe7a154332a55bc258c487eefc25d", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,20 @@\n+error: use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start`\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:6:21\n+   |\n+LL |     let _foo = str::trim_left(\"   aoeu\");\n+   |                     ^^^^^^^^^ help: replace the use of the deprecated associated function: `trim_start`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:3:9\n+   |\n+LL | #![deny(deprecated)]\n+   |         ^^^^^^^^^^\n+\n+error: use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start`\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:8:26\n+   |\n+LL |     let _bar = \"   aoeu\".trim_left();\n+   |                          ^^^^^^^^^ help: replace the use of the deprecated associated function: `trim_start`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "94fc1a7b46dbaf85e1234f8e109091572ad66541", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -335,16 +335,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:26:9\n+  --> $DIR/lint-stability-deprecated.rs:26:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:27:9\n+  --> $DIR/lint-stability-deprecated.rs:27:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:28:13\n@@ -353,10 +353,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:30:9\n+  --> $DIR/lint-stability-deprecated.rs:30:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:34:13\n@@ -365,16 +365,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:35:9\n+  --> $DIR/lint-stability-deprecated.rs:35:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:36:9\n+  --> $DIR/lint-stability-deprecated.rs:36:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:37:13\n@@ -383,10 +383,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:39:9\n+  --> $DIR/lint-stability-deprecated.rs:39:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:43:13\n@@ -395,16 +395,16 @@ LL | ...   foo.method_deprecated_unstable();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:44:9\n+  --> $DIR/lint-stability-deprecated.rs:44:14\n    |\n LL | ...   Foo::method_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:45:9\n+  --> $DIR/lint-stability-deprecated.rs:45:16\n    |\n LL | ...   <Foo>::method_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:46:13\n@@ -413,10 +413,10 @@ LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:48:9\n+  --> $DIR/lint-stability-deprecated.rs:48:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:52:13\n@@ -425,16 +425,16 @@ LL | ...   foo.method_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:53:9\n+  --> $DIR/lint-stability-deprecated.rs:53:14\n    |\n LL | ...   Foo::method_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:54:9\n+  --> $DIR/lint-stability-deprecated.rs:54:16\n    |\n LL | ...   <Foo>::method_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:55:13\n@@ -443,10 +443,10 @@ LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:57:9\n+  --> $DIR/lint-stability-deprecated.rs:57:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `lint_stability::DeprecatedStruct::i`: text\n   --> $DIR/lint-stability-deprecated.rs:109:13\n@@ -467,10 +467,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:146:9\n+  --> $DIR/lint-stability-deprecated.rs:146:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:148:13\n@@ -479,10 +479,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:150:9\n+  --> $DIR/lint-stability-deprecated.rs:150:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:152:13\n@@ -491,10 +491,10 @@ LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:154:9\n+  --> $DIR/lint-stability-deprecated.rs:154:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:156:13\n@@ -503,10 +503,10 @@ LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:158:9\n+  --> $DIR/lint-stability-deprecated.rs:158:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:175:13\n@@ -539,16 +539,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:332:9\n+  --> $DIR/lint-stability-deprecated.rs:332:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:333:9\n+  --> $DIR/lint-stability-deprecated.rs:333:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:334:13\n@@ -557,10 +557,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:336:9\n+  --> $DIR/lint-stability-deprecated.rs:336:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:340:13\n@@ -569,16 +569,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:341:9\n+  --> $DIR/lint-stability-deprecated.rs:341:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:342:9\n+  --> $DIR/lint-stability-deprecated.rs:342:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:343:13\n@@ -587,10 +587,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:345:9\n+  --> $DIR/lint-stability-deprecated.rs:345:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n   --> $DIR/lint-stability-deprecated.rs:386:13\n@@ -605,10 +605,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:407:9\n+  --> $DIR/lint-stability-deprecated.rs:407:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:409:13\n@@ -617,10 +617,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:411:9\n+  --> $DIR/lint-stability-deprecated.rs:411:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:428:13"}, {"sha": "db6fe0b45dcd3c625f37e08570bdc435248b67a2", "filename": "src/test/ui/mismatched_types/issue-84976.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.rs?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,25 @@\n+/* Checks whether primitive type names are formatted correctly in the\n+ * error messages about mismatched types (#84976).\n+ */\n+\n+fn foo(length: &u32) -> i32 {\n+    0\n+}\n+\n+fn bar(length: &f32) -> f64 {\n+    0.0\n+}\n+\n+fn main() {\n+    let mut length = 0;\n+    length = { foo(&length) };\n+    //~^ ERROR mismatched types [E0308]\n+    length = foo(&length);\n+    //~^ ERROR mismatched types [E0308]\n+\n+    let mut float_length = 0.0;\n+    float_length = { bar(&float_length) };\n+    //~^ ERROR mismatched types [E0308]\n+    float_length = bar(&float_length);\n+    //~^ ERROR mismatched types [E0308]\n+}"}, {"sha": "0c27e17294131d334fa28053e54ca0dc221e6d0f", "filename": "src/test/ui/mismatched_types/issue-84976.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890803d3722b5cf8810ae1f49b4d9f062a87c927/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-84976.stderr?ref=890803d3722b5cf8810ae1f49b4d9f062a87c927", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-84976.rs:15:16\n+   |\n+LL |     length = { foo(&length) };\n+   |                ^^^^^^^^^^^^ expected `u32`, found `i32`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-84976.rs:17:14\n+   |\n+LL |     length = foo(&length);\n+   |              ^^^^^^^^^^^^ expected `u32`, found `i32`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-84976.rs:21:22\n+   |\n+LL |     float_length = { bar(&float_length) };\n+   |                      ^^^^^^^^^^^^^^^^^^ expected `f32`, found `f64`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-84976.rs:23:20\n+   |\n+LL |     float_length = bar(&float_length);\n+   |                    ^^^^^^^^^^^^^^^^^^ expected `f32`, found `f64`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}