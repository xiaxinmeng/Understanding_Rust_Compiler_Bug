{"sha": "290db47ad67ee2ef0a43fb4b9b6561d00c4a078e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MGRiNDdhZDY3ZWUyZWYwYTQzZmI0YjliNjU2MWQwMGM0YTA3OGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-16T06:37:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-18T10:08:22Z"}, "message": "comment on keeping validity in sync", "tree": {"sha": "5a8a2d46ed24bffe0cef6cce2352b0db57f19b0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a8a2d46ed24bffe0cef6cce2352b0db57f19b0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e", "html_url": "https://github.com/rust-lang/rust/commit/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af204b1f3e83d77427f5fe78285537378be103ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/af204b1f3e83d77427f5fe78285537378be103ec", "html_url": "https://github.com/rust-lang/rust/commit/af204b1f3e83d77427f5fe78285537378be103ec"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "83b9705c1fe8e9fdafd1c1f0981d87e538c0b074", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290db47ad67ee2ef0a43fb4b9b6561d00c4a078e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=290db47ad67ee2ef0a43fb4b9b6561d00c4a078e", "patch": "@@ -163,6 +163,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                     scalar_format(value), path, \"a valid unicode codepoint\");\n             },\n             ty::Float(_) | ty::Int(_) | ty::Uint(_) => {\n+                // NOTE: Keep this in sync with the array optimization for int/float\n+                // types below!\n                 let size = value.layout.size;\n                 let value = value.to_scalar_or_undef();\n                 if const_mode {\n@@ -511,6 +513,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                         // This is the size in bytes of the whole array.\n                         let size = Size::from_bytes(ty_size * len);\n \n+                        // NOTE: Keep this in sync with the handling of integer and float\n+                        // types above, in `validate_primitive_type`.\n                         // In run-time mode, we accept pointers in here.  This is actually more\n                         // permissive than a per-element check would be, e.g. we accept\n                         // an &[u8] that contains a pointer even though bytewise checking would"}]}