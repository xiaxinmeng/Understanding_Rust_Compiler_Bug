{"sha": "512f7781fe86cde003132969e7fed5aea649bf13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMmY3NzgxZmU4NmNkZTAwMzEzMjk2OWU3ZmVkNWFlYTY0OWJmMTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-25T02:06:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-25T02:06:01Z"}, "message": "auto merge of #9335 : alexcrichton/rust/issue-7945, r=thestinger\n\nAs documented in issue #7945, these literal identifiers are all accepted by rust\r\ntoday, but they should probably be disallowed (especially `'''`). This changes\r\nall escapable sequences to being *required* to be escaped.\r\n\r\nCloses #7945\r\n\r\nI wanted to write the tests with more exact spans, but I think #9308 will be fixing that?", "tree": {"sha": "60a15740ec3bd011889a493fe803ac065f85ee36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a15740ec3bd011889a493fe803ac065f85ee36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/512f7781fe86cde003132969e7fed5aea649bf13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/512f7781fe86cde003132969e7fed5aea649bf13", "html_url": "https://github.com/rust-lang/rust/commit/512f7781fe86cde003132969e7fed5aea649bf13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/512f7781fe86cde003132969e7fed5aea649bf13/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "893ba18cd16ca5922f827e38291de809915fca57", "url": "https://api.github.com/repos/rust-lang/rust/commits/893ba18cd16ca5922f827e38291de809915fca57", "html_url": "https://github.com/rust-lang/rust/commit/893ba18cd16ca5922f827e38291de809915fca57"}, {"sha": "2661b633c50f6c43b95aca1381f25fc314544331", "url": "https://api.github.com/repos/rust-lang/rust/commits/2661b633c50f6c43b95aca1381f25fc314544331", "html_url": "https://github.com/rust-lang/rust/commit/2661b633c50f6c43b95aca1381f25fc314544331"}], "stats": {"total": 110, "additions": 89, "deletions": 21}, "files": [{"sha": "c848f52b3eacac52a8bf756ee1c787110fb6946d", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/512f7781fe86cde003132969e7fed5aea649bf13/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512f7781fe86cde003132969e7fed5aea649bf13/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=512f7781fe86cde003132969e7fed5aea649bf13", "patch": "@@ -747,27 +747,34 @@ fn next_token_inner(rdr: @mut StringReader) -> token::Token {\n         }\n \n         // Otherwise it is a character constant:\n-        if c2 == '\\\\' {\n-            // '\\X' for some X must be a character constant:\n-            let escaped = rdr.curr;\n-            let escaped_pos = rdr.last_pos;\n-            bump(rdr);\n-            match escaped {\n-              'n' => { c2 = '\\n'; }\n-              'r' => { c2 = '\\r'; }\n-              't' => { c2 = '\\t'; }\n-              '\\\\' => { c2 = '\\\\'; }\n-              '\\'' => { c2 = '\\''; }\n-              '\"' => { c2 = '\"'; }\n-              '0' => { c2 = '\\x00'; }\n-              'x' => { c2 = scan_numeric_escape(rdr, 2u); }\n-              'u' => { c2 = scan_numeric_escape(rdr, 4u); }\n-              'U' => { c2 = scan_numeric_escape(rdr, 8u); }\n-              c2 => {\n-                fatal_span_char(rdr, escaped_pos, rdr.last_pos,\n-                                ~\"unknown character escape\", c2);\n-              }\n+        match c2 {\n+            '\\\\' => {\n+                // '\\X' for some X must be a character constant:\n+                let escaped = rdr.curr;\n+                let escaped_pos = rdr.last_pos;\n+                bump(rdr);\n+                match escaped {\n+                    'n' => { c2 = '\\n'; }\n+                    'r' => { c2 = '\\r'; }\n+                    't' => { c2 = '\\t'; }\n+                    '\\\\' => { c2 = '\\\\'; }\n+                    '\\'' => { c2 = '\\''; }\n+                    '\"' => { c2 = '\"'; }\n+                    '0' => { c2 = '\\x00'; }\n+                    'x' => { c2 = scan_numeric_escape(rdr, 2u); }\n+                    'u' => { c2 = scan_numeric_escape(rdr, 4u); }\n+                    'U' => { c2 = scan_numeric_escape(rdr, 8u); }\n+                    c2 => {\n+                        fatal_span_char(rdr, escaped_pos, rdr.last_pos,\n+                                        ~\"unknown character escape\", c2);\n+                    }\n+                }\n+            }\n+            '\\t' | '\\n' | '\\r' | '\\'' => {\n+                fatal_span_char(rdr, start, rdr.last_pos,\n+                                ~\"character constant must be escaped\", c2);\n             }\n+            _ => {}\n         }\n         if rdr.curr != '\\'' {\n             fatal_span_verbose(rdr,\n@@ -973,7 +980,7 @@ mod test {\n     }\n \n     #[test] fn character_escaped() {\n-        let env = setup(@\"'\\n'\");\n+        let env = setup(@\"'\\\\n'\");\n         let TokenAndSpan {tok, sp: _} =\n             env.string_reader.next_token();\n         assert_eq!(tok, token::LIT_CHAR('\\n' as u32));"}, {"sha": "53723c87a521b5fa0a9f8a35f9cb13477c871205", "filename": "src/test/compile-fail/bad-char-literals.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals.rs?ref=512f7781fe86cde003132969e7fed5aea649bf13", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // these literals are just silly.\n+    ''';\n+    //~^ ERROR: character constant must be escaped\n+}"}, {"sha": "c5226cfec457bcb461d97e4ef599e8e9a6f758e1", "filename": "src/test/compile-fail/bad-char-literals2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals2.rs?ref=512f7781fe86cde003132969e7fed5aea649bf13", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // note that this is a literal \"\\n\" byte\n+    '\n+';\n+    //~^^ ERROR: character constant must be escaped\n+}"}, {"sha": "9bbe5c75b17234bcb5f1b08e475ff411c3960d41", "filename": "src/test/compile-fail/bad-char-literals3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs?ref=512f7781fe86cde003132969e7fed5aea649bf13", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // note that this is a literal \"\\r\" byte\n+    '\r';\n+    //~^ ERROR: character constant must be escaped\n+}"}, {"sha": "675ff742d5cca321f97d0889dae92e95f81f376b", "filename": "src/test/compile-fail/bad-char-literals4.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512f7781fe86cde003132969e7fed5aea649bf13/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs?ref=512f7781fe86cde003132969e7fed5aea649bf13", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // note that this is a literal tab character here\n+    '\t';\n+    //~^ ERROR: character constant must be escaped\n+}"}]}