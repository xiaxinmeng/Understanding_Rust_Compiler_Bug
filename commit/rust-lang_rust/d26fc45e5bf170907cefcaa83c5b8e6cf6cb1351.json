{"sha": "d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "node_id": "C_kwDOAAsO6NoAKGQyNmZjNDVlNWJmMTcwOTA3Y2VmY2FhODNjNWI4ZTZjZjZjYjEzNTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-08T22:18:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-08T22:18:04Z"}, "message": "Rollup merge of #91337 - FabianWolff:issue-91227-misspelled-macro, r=nagisa\n\nAdd a suggestion if `macro_rules` is misspelled\n\nFixes #91227.", "tree": {"sha": "b6e9397a511ae314276d528c0113cbb311622847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6e9397a511ae314276d528c0113cbb311622847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhsS8cCRBK7hj4Ov3rIwAAf30IAFaB5EnBmQ+FFmfAKrHhXgRs\nwD+euIpBBW8rTEsrXSOQ1XP0eGUc5Jftb6zpjOO/URe/7VeKq1lxep8Y6QOJgcJu\nkT98yCU9ShrVl2aXPjStP/YeCcwuqGx0rqFww1YMiBA0pf6xDoOZRpXQet5eTwya\n+fJEY1kR2gwi+jxRXqNbaLrzMdFeDtK6ZxS+FL3zrFPLQlk5jjchHIfS+2Ej4TfO\nbfZgNnJbtFLfQp+DGilkS1w1v1FEfya9d7QIjKwmHr1LZJ1j5s2juq6H5Y/hjwOU\naiRFd8cZpgJyOpHxBVcAX3q/dfIXk6kMeLEX4R0oV0Xtmmb4sqpEXIEV9r2so5U=\n=P5Ry\n-----END PGP SIGNATURE-----\n", "payload": "tree b6e9397a511ae314276d528c0113cbb311622847\nparent 2411cd7c7abd3a4d4aba657961ca1f940e1657bd\nparent b9b4f549a45ccd6d5b5806153154c86e71e34bde\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639001884 +0100\ncommitter GitHub <noreply@github.com> 1639001884 +0100\n\nRollup merge of #91337 - FabianWolff:issue-91227-misspelled-macro, r=nagisa\n\nAdd a suggestion if `macro_rules` is misspelled\n\nFixes #91227.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "html_url": "https://github.com/rust-lang/rust/commit/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2411cd7c7abd3a4d4aba657961ca1f940e1657bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2411cd7c7abd3a4d4aba657961ca1f940e1657bd", "html_url": "https://github.com/rust-lang/rust/commit/2411cd7c7abd3a4d4aba657961ca1f940e1657bd"}, {"sha": "b9b4f549a45ccd6d5b5806153154c86e71e34bde", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b4f549a45ccd6d5b5806153154c86e71e34bde", "html_url": "https://github.com/rust-lang/rust/commit/b9b4f549a45ccd6d5b5806153154c86e71e34bde"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "516e301ec3ae458b6f44b92e95795d17c68bb1e6", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "patch": "@@ -15,6 +15,7 @@ use rustc_ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n use rustc_span::edition::{Edition, LATEST_STABLE_EDITION};\n+use rustc_span::lev_distance::lev_distance;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n \n@@ -410,10 +411,30 @@ impl<'a> Parser<'a> {\n     fn parse_item_macro(&mut self, vis: &Visibility) -> PResult<'a, MacCall> {\n         let path = self.parse_path(PathStyle::Mod)?; // `foo::bar`\n         self.expect(&token::Not)?; // `!`\n-        let args = self.parse_mac_args()?; // `( .. )` or `[ .. ]` (followed by `;`), or `{ .. }`.\n-        self.eat_semi_for_macro_if_needed(&args);\n-        self.complain_if_pub_macro(vis, false);\n-        Ok(MacCall { path, args, prior_type_ascription: self.last_type_ascription })\n+        match self.parse_mac_args() {\n+            // `( .. )` or `[ .. ]` (followed by `;`), or `{ .. }`.\n+            Ok(args) => {\n+                self.eat_semi_for_macro_if_needed(&args);\n+                self.complain_if_pub_macro(vis, false);\n+                Ok(MacCall { path, args, prior_type_ascription: self.last_type_ascription })\n+            }\n+\n+            Err(mut err) => {\n+                // Maybe the user misspelled `macro_rules` (issue #91227)\n+                if self.token.is_ident()\n+                    && path.segments.len() == 1\n+                    && lev_distance(\"macro_rules\", &path.segments[0].ident.to_string()) <= 3\n+                {\n+                    err.span_suggestion(\n+                        path.span,\n+                        \"perhaps you meant to define a macro\",\n+                        \"macro_rules\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+                Err(err)\n+            }\n+        }\n     }\n \n     /// Recover if we parsed attributes and expected an item but there was none."}, {"sha": "62be913d85f05ade39c94663b3288d058d67acac", "filename": "src/test/ui/parser/misspelled-macro-rules.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed?ref=d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #91227.\n+\n+// run-rustfix\n+\n+#![allow(unused_macros)]\n+\n+macro_rules! thing {\n+//~^ ERROR: expected one of\n+//~| HELP: perhaps you meant to define a macro\n+    () => {}\n+}\n+\n+fn main() {}"}, {"sha": "4290e6e5e4cb912be2b815fdf0f5043411df3033", "filename": "src/test/ui/parser/misspelled-macro-rules.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs?ref=d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #91227.\n+\n+// run-rustfix\n+\n+#![allow(unused_macros)]\n+\n+marco_rules! thing {\n+//~^ ERROR: expected one of\n+//~| HELP: perhaps you meant to define a macro\n+    () => {}\n+}\n+\n+fn main() {}"}, {"sha": "56df712381920741c48021d05f6c6948a0adfc8e", "filename": "src/test/ui/parser/misspelled-macro-rules.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr?ref=d26fc45e5bf170907cefcaa83c5b8e6cf6cb1351", "patch": "@@ -0,0 +1,10 @@\n+error: expected one of `(`, `[`, or `{`, found `thing`\n+  --> $DIR/misspelled-macro-rules.rs:7:14\n+   |\n+LL | marco_rules! thing {\n+   | -----------  ^^^^^ expected one of `(`, `[`, or `{`\n+   | |\n+   | help: perhaps you meant to define a macro: `macro_rules`\n+\n+error: aborting due to previous error\n+"}]}