{"sha": "cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjN2NmYzVkM2Q3Nzc3NTI0YTllOGE5NGRhM2Y1ZjJkZDQ1NWZjMGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-08T21:08:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-08T21:08:58Z"}, "message": "Merge #9186\n\n9186: fix: Prefer attr macros in \"expand macro recursively\" r=jonas-schievink a=jonas-schievink\n\nThis allows expanding attribute macros on fn-like macro invocations\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "371a9118ee00132a090d87b438a31fa813526735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/371a9118ee00132a090d87b438a31fa813526735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgv9xqCRBK7hj4Ov3rIwAAh8gIAIrs+vMNz2c6u/oxgfBvP3MW\neRI0TaPU9CAYX8HZ8Ln7N0FA6olDd3WV80Y+QITqQ3ugSjur4VCe3+3UFUr1E4gH\nSQ7Gmi9wPWnwRO3zoEON/t7navzf4P/yndDEF4p3Y1WgQSJsCsO5U1izsT+7Y6po\nFAOGWiqJgXKrGwhpT628FNVYAxXbuXioykzo49dO267flxmrExjw2Qm756z1qjag\n4MSB5Gz5EiORsbCj5Q02N7O/RcxxEF+3Zc8Pn1+8yQ+C+1eWHGj7IzBv+lL2mND6\n7mv6V2ccvF1mMnvyEp+Jc4WgUow6w8b0la0yMKrq2qKntnnQncIJxPJZ1YfSeLA=\n=/lIy\n-----END PGP SIGNATURE-----\n", "payload": "tree 371a9118ee00132a090d87b438a31fa813526735\nparent a60978d172c6985c071dd0d9f28caa5fa5364a3e\nparent fcf22d68d45f1668dfca95d20d609dceb32eded5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623186538 +0000\ncommitter GitHub <noreply@github.com> 1623186538 +0000\n\nMerge #9186\n\n9186: fix: Prefer attr macros in \"expand macro recursively\" r=jonas-schievink a=jonas-schievink\n\nThis allows expanding attribute macros on fn-like macro invocations\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "html_url": "https://github.com/rust-lang/rust/commit/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a60978d172c6985c071dd0d9f28caa5fa5364a3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a60978d172c6985c071dd0d9f28caa5fa5364a3e", "html_url": "https://github.com/rust-lang/rust/commit/a60978d172c6985c071dd0d9f28caa5fa5364a3e"}, {"sha": "fcf22d68d45f1668dfca95d20d609dceb32eded5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf22d68d45f1668dfca95d20d609dceb32eded5", "html_url": "https://github.com/rust-lang/rust/commit/fcf22d68d45f1668dfca95d20d609dceb32eded5"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "cc43c57720c662f0f1b8c4f034c137d14c5a3406", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "patch": "@@ -2,9 +2,7 @@ use std::iter;\n \n use hir::Semantics;\n use ide_db::RootDatabase;\n-use syntax::{\n-    ast, match_ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*, SyntaxNode, WalkEvent, T,\n-};\n+use syntax::{ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*, SyntaxNode, WalkEvent, T};\n \n use crate::FilePosition;\n \n@@ -32,25 +30,21 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n     let mut expanded = None;\n     let mut name = None;\n     for node in tok.ancestors() {\n-        match_ast! {\n-            match node {\n-                ast::MacroCall(mac) => {\n-                    name = Some(mac.path()?.segment()?.name_ref()?.to_string());\n-                    expanded = expand_macro_recur(&sema, &mac);\n-                    break;\n-                },\n-                ast::Item(item) => {\n-                    // FIXME: add the macro name\n-                    // FIXME: make this recursive too\n-                    name = Some(\"?\".to_string());\n-                    expanded = sema.expand_attr_macro(&item);\n-                    if expanded.is_some() {\n-                        break;\n-                    }\n-                },\n-                _ => {}\n+        if let Some(item) = ast::Item::cast(node.clone()) {\n+            expanded = sema.expand_attr_macro(&item);\n+            if expanded.is_some() {\n+                // FIXME: add the macro name\n+                // FIXME: make this recursive too\n+                name = Some(\"?\".to_string());\n+                break;\n             }\n         }\n+\n+        if let Some(mac) = ast::MacroCall::cast(node) {\n+            name = Some(mac.path()?.segment()?.name_ref()?.to_string());\n+            expanded = expand_macro_recur(&sema, &mac);\n+            break;\n+        }\n     }\n \n     // FIXME:"}]}