{"sha": "a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZGU3MTNlMjZjYjBmOGU4YWU0YTdlY2IwYmY4YTQxM2I1Mzk5MjY=", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-09T11:25:18Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-09T12:19:09Z"}, "message": "Improve rendering of crate features via doc(cfg)", "tree": {"sha": "b8b494fcf6bd9e21cdc88791ed9688f8843589c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8b494fcf6bd9e21cdc88791ed9688f8843589c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "html_url": "https://github.com/rust-lang/rust/commit/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f50f1c8e17a34ccaa0263c637e9686492b79477f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f50f1c8e17a34ccaa0263c637e9686492b79477f", "html_url": "https://github.com/rust-lang/rust/commit/f50f1c8e17a34ccaa0263c637e9686492b79477f"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "20da28d1c5b98017ae757493faeb7ca3b5265c3f", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "patch": "@@ -413,6 +413,13 @@ impl<'a> fmt::Display for Html<'a> {\n                             return write!(fmt, \"target feature <code>{}</code>\", feat);\n                         }\n                     }\n+                    (sym::feature, Some(feat)) => {\n+                        if self.1 {\n+                            return write!(fmt, \"<code>{}</code>\", feat);\n+                        } else {\n+                            return write!(fmt, \"crate feature <code>{}</code>\", feat);\n+                        }\n+                    }\n                     _ => \"\",\n                 };\n                 if !human_readable.is_empty() {"}, {"sha": "f6d4e9968a301bbef5ae017d8c3685008f6157c9", "filename": "src/test/rustdoc/duplicate-cfg.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs?ref=a8de713e26cb0f8e8ae4a7ecb0bf8a413b539926", "patch": "@@ -4,37 +4,37 @@\n #![feature(doc_cfg)]\n \n // @has 'foo/struct.Foo.html'\n-// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on feature=\"sync\" only.'\n+// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on crate feature sync only.'\n #[doc(cfg(feature = \"sync\"))]\n #[doc(cfg(feature = \"sync\"))]\n pub struct Foo;\n \n // @has 'foo/bar/struct.Bar.html'\n-// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on feature=\"sync\" only.'\n+// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on crate feature sync only.'\n #[doc(cfg(feature = \"sync\"))]\n pub mod bar {\n     #[doc(cfg(feature = \"sync\"))]\n     pub struct Bar;\n }\n \n // @has 'foo/baz/struct.Baz.html'\n-// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on feature=\"sync\" and feature=\"send\" only.'\n+// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on crate feature sync and crate feature send only.'\n #[doc(cfg(all(feature = \"sync\", feature = \"send\")))]\n pub mod baz {\n     #[doc(cfg(feature = \"sync\"))]\n     pub struct Baz;\n }\n \n // @has 'foo/qux/struct.Qux.html'\n-// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on feature=\"sync\" and feature=\"send\" only.'\n+// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on crate feature sync and crate feature send only.'\n #[doc(cfg(feature = \"sync\"))]\n pub mod qux {\n     #[doc(cfg(all(feature = \"sync\", feature = \"send\")))]\n     pub struct Qux;\n }\n \n // @has 'foo/quux/struct.Quux.html'\n-// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on feature=\"sync\" and feature=\"send\" and foo and bar only.'\n+// @has '-' '//*[@class=\"stab portability\"]' 'This is supported on crate feature sync and crate feature send and foo and bar only.'\n #[doc(cfg(all(feature = \"sync\", feature = \"send\", foo)))]\n pub mod quux {\n     #[doc(cfg(all(feature = \"send\", feature = \"sync\", bar)))]"}]}