{"sha": "de9b660a40728d4c4213f2ec7a1c99a9bc352023", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOWI2NjBhNDA3MjhkNGM0MjEzZjJlYzdhMWM5OWE5YmMzNTIwMjM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-10-25T13:21:00Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-10-25T13:46:42Z"}, "message": "Explain why pointer::add in slice::as_ptr_range is safe.", "tree": {"sha": "a55ac9efc2f8c6c9b486455828d434c54d8bc261", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a55ac9efc2f8c6c9b486455828d434c54d8bc261"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9b660a40728d4c4213f2ec7a1c99a9bc352023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9b660a40728d4c4213f2ec7a1c99a9bc352023", "html_url": "https://github.com/rust-lang/rust/commit/de9b660a40728d4c4213f2ec7a1c99a9bc352023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9b660a40728d4c4213f2ec7a1c99a9bc352023/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b69b0a871a5d78504c0dc197e0ebb477de653c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b69b0a871a5d78504c0dc197e0ebb477de653c", "html_url": "https://github.com/rust-lang/rust/commit/f1b69b0a871a5d78504c0dc197e0ebb477de653c"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "185913a47f1a2bbb16da8929dad66d21f9a3b398", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/de9b660a40728d4c4213f2ec7a1c99a9bc352023/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9b660a40728d4c4213f2ec7a1c99a9bc352023/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=de9b660a40728d4c4213f2ec7a1c99a9bc352023", "patch": "@@ -437,6 +437,23 @@ impl<T> [T] {\n     #[unstable(feature = \"slice_ptr_range\", issue = \"65807\")]\n     #[inline]\n     pub fn as_ptr_range(&self) -> Range<*const T> {\n+        // The `add` here is safe, because:\n+        //\n+        //   - Both pointers are part of the same object, as pointing directly\n+        //     past the object also counts.\n+        //\n+        //   - The size of the slice is never larger than isize::MAX bytes, as\n+        //     noted here:\n+        //       - https://github.com/rust-lang/unsafe-code-guidelines/issues/102#issuecomment-473340447\n+        //       - https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n+        //       - https://doc.rust-lang.org/core/slice/fn.from_raw_parts.html#safety\n+        //     (This doesn't seem normative yet, but the very same assumption is\n+        //     made in many places, including the Index implementation of slices.)\n+        //\n+        //   - There is no wrapping around involved, as slices do not wrap past\n+        //     the end of the address space.\n+        //\n+        // See the documentation of pointer::add.\n         let start = self.as_ptr();\n         let end = unsafe { start.add(self.len()) };\n         start..end\n@@ -461,6 +478,7 @@ impl<T> [T] {\n     #[unstable(feature = \"slice_ptr_range\", issue = \"65807\")]\n     #[inline]\n     pub fn as_mut_ptr_range(&mut self) -> Range<*mut T> {\n+        // See as_ptr_range() above for why `add` here is safe.\n         let start = self.as_mut_ptr();\n         let end = unsafe { start.add(self.len()) };\n         start..end"}]}