{"sha": "8e59c5d34a19e7ce58fec377f3033296476c5e92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNTljNWQzNGExOWU3Y2U1OGZlYzM3N2YzMDMzMjk2NDc2YzVlOTI=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-11-16T02:44:52Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-11-16T02:44:52Z"}, "message": "Don't make tags for our dependencies and tests.\n\nLargely, this is just being more specific about where tags get searched\nfor to remove external dependencies like src/llvm, which reduces the\nnumber of tags *enormously* and significantly increases the usefulness\nof the tags file as it is then focusing on 240K lines of Rust code\nand 4.5K of C++ rather than just shy of 1M lines of C++ code (mostly\nfrom LLVM) and another 100K lines of Rust tests and a diverse collection\nof other languages.\n\nsrc/rustllvm/RustWrapper.cpp and src/rustllvm/PassWrapper.cpp are\ngetting tags made, but I'm not sure if that's desirable or not. At\nworst, it's not a significant wrong.\n\nA future, desirable step is producing tags for just libstd and libextra\nfor the use of people using Rust-the-language rather than working on\nRust itself.", "tree": {"sha": "e84a0cf523f70ef718020ff8d1c81f5aa1567e6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e84a0cf523f70ef718020ff8d1c81f5aa1567e6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e59c5d34a19e7ce58fec377f3033296476c5e92", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e59c5d34a19e7ce58fec377f3033296476c5e92", "html_url": "https://github.com/rust-lang/rust/commit/8e59c5d34a19e7ce58fec377f3033296476c5e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e59c5d34a19e7ce58fec377f3033296476c5e92/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90754ae9c95c18841c0200d77da917af5ecde5ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/90754ae9c95c18841c0200d77da917af5ecde5ee", "html_url": "https://github.com/rust-lang/rust/commit/90754ae9c95c18841c0200d77da917af5ecde5ee"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "6fb9681a15782e566e0ba08458e29df3d3f32c14", "filename": "mk/ctags.mk", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e59c5d34a19e7ce58fec377f3033296476c5e92/mk%2Fctags.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8e59c5d34a19e7ce58fec377f3033296476c5e92/mk%2Fctags.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fctags.mk?ref=8e59c5d34a19e7ce58fec377f3033296476c5e92", "patch": "@@ -15,7 +15,27 @@\n \n .PHONY: TAGS.emacs TAGS.vi\n \n-CTAGS_OPTS=--options=${CFG_SRC_DIR}/src/etc/ctags.rust -R ${CFG_SRC_DIR}/src\n+# This is using a blacklist approach, probably more durable than a whitelist.\n+# We exclude: external dependencies (llvm, libuv, gyp, rt/{msvc,sundown,vg}),\n+# tests (compiletest, test) and a couple of other things (rt/arch, etc)\n+CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/llvm,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/libuv,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/compiletest,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/test,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/gyp,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/etc,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/arch,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/msvc,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/sundown,,\\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/vg,,\\\n+\t\t\t\t$(wildcard ${CFG_SRC_DIR}src/*) $(wildcard ${CFG_SRC_DIR}src/rt/*)\\\n+\t\t\t\t)))))))))))\n+CTAGS_OPTS=--options=\"${CFG_SRC_DIR}src/etc/ctags.rust\" --languages=-javascript --recurse ${CTAGS_LOCATIONS}\n+# We could use `--languages=Rust`, but there is value in producing tags for the\n+# C++ parts of the code base too (at the time of writing, those are .h and .cpp\n+# files in src/rt, src/rt/sync and src/rustllvm); we mainly just want to\n+# exclude the external dependencies.\n \n TAGS.emacs:\n \tctags -e -f $@ ${CTAGS_OPTS}"}]}