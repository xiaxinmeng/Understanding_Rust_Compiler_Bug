{"sha": "a569a19ef44025e9b5c034eb665279e7729165c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NjlhMTllZjQ0MDI1ZTliNWMwMzRlYjY2NTI3OWU3NzI5MTY1YzQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-06T13:01:58Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-06T13:01:58Z"}, "message": "Use log info in trait_solve_query", "tree": {"sha": "edc694960ee0c69be9af0303693769245ca05247", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edc694960ee0c69be9af0303693769245ca05247"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a569a19ef44025e9b5c034eb665279e7729165c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a569a19ef44025e9b5c034eb665279e7729165c4", "html_url": "https://github.com/rust-lang/rust/commit/a569a19ef44025e9b5c034eb665279e7729165c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a569a19ef44025e9b5c034eb665279e7729165c4/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec3fb1cdb4f1808a11fb6057550ed721c2aa36a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3fb1cdb4f1808a11fb6057550ed721c2aa36a9", "html_url": "https://github.com/rust-lang/rust/commit/ec3fb1cdb4f1808a11fb6057550ed721c2aa36a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5a1e12ce923278bb7b57667a8e2fedd4656be636", "filename": "crates/ra_hir_ty/src/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a569a19ef44025e9b5c034eb665279e7729165c4/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a569a19ef44025e9b5c034eb665279e7729165c4/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs?ref=a569a19ef44025e9b5c034eb665279e7729165c4", "patch": "@@ -148,7 +148,7 @@ pub(crate) fn trait_solve_query(\n         Obligation::Trait(it) => db.trait_data(it.trait_).name.to_string(),\n         Obligation::Projection(_) => \"projection\".to_string(),\n     });\n-    eprintln!(\"trait_solve_query({})\", goal.value.value.display(db));\n+    log::info!(\"trait_solve_query({})\", goal.value.value.display(db));\n \n     if let Obligation::Projection(pred) = &goal.value.value {\n         if let Ty::Bound(_) = &pred.projection_ty.parameters[0] {"}]}