{"sha": "1f87a4198956fd3a8b57d01c2bce19481fe2c610", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmODdhNDE5ODk1NmZkM2E4YjU3ZDAxYzJiY2UxOTQ4MWZlMmM2MTA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-21T11:51:05Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-21T11:51:05Z"}, "message": "Add attribute highlight modifier to all tokens inside attributes", "tree": {"sha": "b437647703fc681a77d6aa5d5ff3fe65a7cc5d24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b437647703fc681a77d6aa5d5ff3fe65a7cc5d24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f87a4198956fd3a8b57d01c2bce19481fe2c610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f87a4198956fd3a8b57d01c2bce19481fe2c610", "html_url": "https://github.com/rust-lang/rust/commit/1f87a4198956fd3a8b57d01c2bce19481fe2c610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f87a4198956fd3a8b57d01c2bce19481fe2c610/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66db0d3cadd4fefd70543aba8eae57e8db99935a", "url": "https://api.github.com/repos/rust-lang/rust/commits/66db0d3cadd4fefd70543aba8eae57e8db99935a", "html_url": "https://github.com/rust-lang/rust/commit/66db0d3cadd4fefd70543aba8eae57e8db99935a"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "5150a970c1a31502681a175491ebd66d7e7855ed", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=1f87a4198956fd3a8b57d01c2bce19481fe2c610", "patch": "@@ -76,6 +76,7 @@ pub(crate) fn highlight(\n     let mut current_macro_call: Option<ast::MacroCall> = None;\n     let mut format_string_highlighter = FormatStringHighlighter::default();\n     let mut macro_rules_highlighter = MacroRulesHighlighter::default();\n+    let mut inside_attribute = false;\n \n     // Walk all nodes, keeping track of whether we are inside a macro or not.\n     // If in macro, expand it first and highlight the expanded code.\n@@ -132,9 +133,12 @@ pub(crate) fn highlight(\n             _ => (),\n         }\n \n-        // Check for Rust code in documentation\n         match &event {\n+            // Check for Rust code in documentation\n             WalkEvent::Leave(NodeOrToken::Node(node)) => {\n+                if ast::Attr::can_cast(node.kind()) {\n+                    inside_attribute = false\n+                }\n                 if let Some((doctest, range_mapping, new_comments)) =\n                     injection::extract_doc_comments(node)\n                 {\n@@ -146,6 +150,9 @@ pub(crate) fn highlight(\n                     );\n                 }\n             }\n+            WalkEvent::Enter(NodeOrToken::Node(node)) if ast::Attr::can_cast(node.kind()) => {\n+                inside_attribute = true\n+            }\n             _ => (),\n         }\n \n@@ -188,12 +195,16 @@ pub(crate) fn highlight(\n             }\n         }\n \n-        if let Some((highlight, binding_hash)) = highlight_element(\n+        if let Some((mut highlight, binding_hash)) = highlight_element(\n             &sema,\n             &mut bindings_shadow_count,\n             syntactic_name_ref_highlighting,\n             element_to_highlight.clone(),\n         ) {\n+            if inside_attribute {\n+                highlight = highlight | HighlightModifier::Attribute;\n+            }\n+\n             if macro_rules_highlighter.highlight(element_to_highlight.clone()).is_none() {\n                 stack.add(HighlightedRange { range, highlight, binding_hash });\n             }\n@@ -474,7 +485,9 @@ fn highlight_element(\n \n         // Highlight references like the definitions they resolve to\n         NAME_REF if element.ancestors().any(|it| it.kind() == ATTR) => {\n-            Highlight::from(HighlightTag::Function) | HighlightModifier::Attribute\n+            // even though we track whether we are in an attribute or not we still need this special case\n+            // as otherwise we would emit unresolved references for name refs inside attributes\n+            Highlight::from(HighlightTag::Function)\n         }\n         NAME_REF => {\n             let name_ref = element.into_node().and_then(ast::NameRef::cast).unwrap();"}, {"sha": "d79fa6dca86fd4ccbe6c99cc96c5e9b3529a7997", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=1f87a4198956fd3a8b57d01c2bce19481fe2c610", "patch": "@@ -50,7 +50,7 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"attribute injected\">#</span><span class=\"attribute injected\">!</span><span class=\"attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation injected\">(</span><span class=\"attribute injected\">unused_mut</span><span class=\"punctuation injected\">)</span><span class=\"attribute injected\">]</span>\n+    <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation attribute injected\">(</span><span class=\"attribute attribute injected\">unused_mut</span><span class=\"punctuation attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"punctuation injected\">:</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span>    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>"}, {"sha": "1d05b771310b0fa006c0f19564d85ea25b05cb4d", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=1f87a4198956fd3a8b57d01c2bce19481fe2c610", "patch": "@@ -54,7 +54,7 @@\n \n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">global_mut</span><span class=\"punctuation\">:</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"operator\">=</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"punctuation\">{</span> <span class=\"field\">a</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n \n-<span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">repr</span><span class=\"punctuation\">(</span><span class=\"attribute\">packed</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">repr</span><span class=\"punctuation attribute\">(</span><span class=\"attribute attribute\">packed</span><span class=\"punctuation attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Packed</span> <span class=\"punctuation\">{</span>\n     <span class=\"field declaration\">a</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">u16</span><span class=\"punctuation\">,</span>\n <span class=\"punctuation\">}</span>"}, {"sha": "15fbf2ce3914f57f4dd8b1856e94b010d1361f50", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/1f87a4198956fd3a8b57d01c2bce19481fe2c610/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=1f87a4198956fd3a8b57d01c2bce19481fe2c610", "patch": "@@ -40,18 +40,18 @@\n \n <span class=\"comment\">// Needed for function consuming vs normal</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">marker</span> <span class=\"punctuation\">{</span>\n-    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"copy\"</span><span class=\"attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"copy\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Copy</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">ops</span> <span class=\"punctuation\">{</span>\n-    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_once\"</span><span class=\"attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n-    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_mut\"</span><span class=\"attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n-    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn\"</span><span class=\"attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Fn</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n@@ -85,7 +85,7 @@\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n-<span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Copy</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation attribute\">(</span><span class=\"attribute attribute\">Copy</span><span class=\"punctuation attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"punctuation\">{</span>\n     <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">u32</span><span class=\"punctuation\">,</span>\n <span class=\"punctuation\">}</span>"}]}