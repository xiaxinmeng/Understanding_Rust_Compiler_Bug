{"sha": "b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OWUxNWQzMmM0Y2QxNGI0NDI4ZDFiMDVhMTZhN2QyMjM0NDkwY2M=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-05T21:20:47Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-06T20:35:57Z"}, "message": "Update E0191 to the new error format", "tree": {"sha": "7f3d03f69bba8081edcdc199477a98e4c0d52c8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3d03f69bba8081edcdc199477a98e4c0d52c8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXpko/AAoJEKvW6Q9Rv3S1o0MH/RCvia1J8LYPXIR42kM7JPik\nykBKNjnuyjPFVBFWgdyEdtQtRYWVswHwbkFNMwwv7hJDa/UTUX1TyHSpy5mlUPXI\nQG+0/SSQ8Sct7DzXvVKEuXzI9mnlvuT+DYvoemVpeHRMjIWOwtTrbk9aXHAGZ5ln\nfMIjhbWv6l5UCrxBTrf0ZIWkfd4Wc5ZhPY58DlfpSSa9DnHXVh5qUJPH633ZLnLm\nGNKaenV8R9C23b8jr4sReIN8CDVqAMC0VnWseeYUKrACKFZ0n799OI3JYIy4xcBr\nTLMJP1nrn1eEl2LX+dbRCctAe0U7EZXLqv0BUS0OyPIdDz18BdbHvNESmSWIJUs=\n=4ih2\n-----END PGP SIGNATURE-----", "payload": "tree 7f3d03f69bba8081edcdc199477a98e4c0d52c8d\nparent 4c02363852e6ce41cf2da1b43a32cb7780a9b067\nauthor Panashe M. Fundira <fundirap@gmail.com> 1470432047 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1470515757 -0400\n\nUpdate E0191 to the new error format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "html_url": "https://github.com/rust-lang/rust/commit/b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c02363852e6ce41cf2da1b43a32cb7780a9b067", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c02363852e6ce41cf2da1b43a32cb7780a9b067", "html_url": "https://github.com/rust-lang/rust/commit/4c02363852e6ce41cf2da1b43a32cb7780a9b067"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "388f2fb53e651dcd7c806002cc5d54d5ef74d2a1", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "patch": "@@ -1194,10 +1194,13 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n         }\n \n         for (trait_def_id, name) in associated_types {\n-            span_err!(tcx.sess, span, E0191,\n+            struct_span_err!(tcx.sess, span, E0191,\n                 \"the value of the associated type `{}` (from the trait `{}`) must be specified\",\n                         name,\n-                        tcx.item_path_str(trait_def_id));\n+                        tcx.item_path_str(trait_def_id))\n+                        .span_label(span, &format!(\n+                            \"missing associated type `{}` value\", name))\n+                        .emit();\n         }\n \n         tcx.mk_trait(object.principal, object.bounds)"}, {"sha": "dcfe441ab0d00ca0287fde3100f1a3ea3cd4b19c", "filename": "src/test/compile-fail/E0191.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Ftest%2Fcompile-fail%2FE0191.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Ftest%2Fcompile-fail%2FE0191.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0191.rs?ref=b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "patch": "@@ -13,6 +13,7 @@ trait Trait {\n }\n \n type Foo = Trait; //~ ERROR E0191\n+                  //~| NOTE missing associated type `Bar` value\n \n fn main() {\n }"}, {"sha": "007f1d3a2947d300e540494a195f1428acd5fdc7", "filename": "src/test/compile-fail/associated-type-projection-from-multiple-supertraits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Ftest%2Fcompile-fail%2Fassociated-type-projection-from-multiple-supertraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79e15d32c4cd14b4428d1b05a16a7d2234490cc/src%2Ftest%2Fcompile-fail%2Fassociated-type-projection-from-multiple-supertraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-type-projection-from-multiple-supertraits.rs?ref=b79e15d32c4cd14b4428d1b05a16a7d2234490cc", "patch": "@@ -37,6 +37,7 @@ fn dent_object<COLOR>(c: BoxCar<Color=COLOR>) {\n     //~| ERROR the value of the associated type `Color` (from the trait `Vehicle`) must be specified\n     //~| NOTE could derive from `Vehicle`\n     //~| NOTE could derive from `Box`\n+    //~| NOTE missing associated type `Color` value\n }\n \n fn paint<C:BoxCar>(c: C, d: C::Color) {"}]}