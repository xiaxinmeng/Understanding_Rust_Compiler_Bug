{"sha": "ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMGU3YzhlN2ZjMGJmZjc2YzI0NWZlZjUzNTI3ZjNkZjc5YTNhOTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T15:49:23Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "map_unit_fn: fix applicability", "tree": {"sha": "50df051bfbad638ac6db35c91de759fae0bd8299", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50df051bfbad638ac6db35c91de759fae0bd8299"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "html_url": "https://github.com/rust-lang/rust/commit/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24c283ea1271143ad32f6fefe90936808c53d5a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/24c283ea1271143ad32f6fefe90936808c53d5a2", "html_url": "https://github.com/rust-lang/rust/commit/24c283ea1271143ad32f6fefe90936808c53d5a2"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "a888834551c960a57b9247e66a8e703fa36c8e20", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "patch": "@@ -217,15 +217,15 @@ fn lint_map_unit_fn(cx: &LateContext<'_, '_>, stmt: &hir::Stmt, expr: &hir::Expr\n     if is_unit_function(cx, fn_arg) {\n         let msg = suggestion_msg(\"function\", map_type);\n         let suggestion = format!(\n-            \"if let {0}({1}) = {2} {{ {3}(...) }}\",\n+            \"if let {0}({binding}) = {1} {{ {2}({binding}) }}\",\n             variant,\n-            let_binding_name(cx, var_arg),\n             snippet(cx, var_arg.span, \"_\"),\n-            snippet(cx, fn_arg.span, \"_\")\n+            snippet(cx, fn_arg.span, \"_\"),\n+            binding = let_binding_name(cx, var_arg)\n         );\n \n         span_lint_and_then(cx, lint, expr.span, &msg, |db| {\n-            db.span_suggestion(stmt.span, \"try this\", suggestion, Applicability::Unspecified);\n+            db.span_suggestion(stmt.span, \"try this\", suggestion, Applicability::MachineApplicable);\n         });\n     } else if let Some((binding, closure_expr)) = unit_closure(cx, fn_arg) {\n         let msg = suggestion_msg(\"closure\", map_type);\n@@ -250,9 +250,9 @@ fn lint_map_unit_fn(cx: &LateContext<'_, '_>, stmt: &hir::Stmt, expr: &hir::Expr\n                     \"if let {0}({1}) = {2} {{ ... }}\",\n                     variant,\n                     snippet(cx, binding.pat.span, \"_\"),\n-                    snippet(cx, var_arg.span, \"_\")\n+                    snippet(cx, var_arg.span, \"_\"),\n                 );\n-                db.span_suggestion(stmt.span, \"try this\", suggestion, Applicability::Unspecified);\n+                db.span_suggestion(stmt.span, \"try this\", suggestion, Applicability::HasPlaceholders);\n             }\n         });\n     }"}, {"sha": "a15be882525c21a8ad29eba925d9faee763183d3", "filename": "tests/ui/option_map_unit_fn_fixable.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.stderr?ref=ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "patch": "@@ -4,7 +4,7 @@ error: called `map(f)` on an Option value where `f` is a unit function\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n+   |     help: try this: `if let Some(x_field) = x.field { do_nothing(x_field) }`\n    |\n    = note: `-D clippy::option-map-unit-fn` implied by `-D warnings`\n \n@@ -14,15 +14,15 @@ error: called `map(f)` on an Option value where `f` is a unit function\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n+   |     help: try this: `if let Some(x_field) = x.field { do_nothing(x_field) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n   --> $DIR/option_map_unit_fn_fixable.rs:36:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n+   |     help: try this: `if let Some(x_field) = x.field { diverge(x_field) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn_fixable.rs:42:5"}, {"sha": "94ed079762b54ced84d55d6536205e00deffe87d", "filename": "tests/ui/result_map_unit_fn_fixable.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad0e7c8e7fc0bff76c245fef53527f3df79a3a96/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr?ref=ad0e7c8e7fc0bff76c245fef53527f3df79a3a96", "patch": "@@ -4,7 +4,7 @@ error: called `map(f)` on an Result value where `f` is a unit function\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n+   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(x_field) }`\n    |\n    = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n@@ -14,15 +14,15 @@ error: called `map(f)` on an Result value where `f` is a unit function\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n+   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(x_field) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n   --> $DIR/result_map_unit_fn_fixable.rs:38:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`\n+   |     help: try this: `if let Ok(x_field) = x.field { diverge(x_field) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn_fixable.rs:44:5"}]}