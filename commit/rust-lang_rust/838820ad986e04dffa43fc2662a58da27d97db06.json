{"sha": "838820ad986e04dffa43fc2662a58da27d97db06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzODgyMGFkOTg2ZTA0ZGZmYTQzZmMyNjYyYTU4ZGEyN2Q5N2RiMDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T10:21:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T10:21:43Z"}, "message": "fix assertione error on block parsing", "tree": {"sha": "4bd77e98865c781d73a2beec795e42acbcd8ba0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd77e98865c781d73a2beec795e42acbcd8ba0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838820ad986e04dffa43fc2662a58da27d97db06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838820ad986e04dffa43fc2662a58da27d97db06", "html_url": "https://github.com/rust-lang/rust/commit/838820ad986e04dffa43fc2662a58da27d97db06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838820ad986e04dffa43fc2662a58da27d97db06/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fed5727ea2669712e5d85502767b5c150203ecfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fed5727ea2669712e5d85502767b5c150203ecfc", "html_url": "https://github.com/rust-lang/rust/commit/fed5727ea2669712e5d85502767b5c150203ecfc"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "d9c3f998af2b1031bbed64e20b647c828c56bea2", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=838820ad986e04dffa43fc2662a58da27d97db06", "patch": "@@ -148,11 +148,7 @@ fn lambda_expr(p: &mut Parser) -> CompletedMarker {\n     p.eat(MOVE_KW);\n     params::param_list_opt_types(p);\n     if opt_fn_ret_type(p) {\n-        if p.at(L_CURLY) {\n-            block(p);\n-        } else {\n-            p.error(\"expected a block\");\n-        }\n+        block(p);\n     } else {\n         expr(p);\n     }"}, {"sha": "922d9f8710b53ae1b055529272bba0e8a36579cd", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=838820ad986e04dffa43fc2662a58da27d97db06", "patch": "@@ -26,7 +26,10 @@ fn expr_no_struct(p: &mut Parser) {\n // fn c() { 1; 2; }\n // fn d() { 1; 2 }\n pub(crate) fn block(p: &mut Parser) {\n-    assert!(p.at(L_CURLY));\n+    if !p.at(L_CURLY) {\n+        p.error(\"expected a block\");\n+        return;\n+    }\n     let m = p.start();\n     p.bump();\n     while !p.at(EOF) && !p.at(R_CURLY) {"}, {"sha": "32d0778c48f101aabb6fcdd39c629517422711d3", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=838820ad986e04dffa43fc2662a58da27d97db06", "patch": "@@ -252,10 +252,10 @@ fn function(p: &mut Parser, flavor: ItemFlavor) {\n \n     // test fn_decl\n     // trait T { fn foo(); }\n-    if p.at(L_CURLY) {\n-        expressions::block(p);\n+    if p.at(SEMI) {\n+        p.bump();\n     } else {\n-        p.expect(SEMI);\n+        expressions::block(p)\n     }\n }\n "}, {"sha": "dbc19abea560dc0242ff5f7cc849f141a4cb2f05", "filename": "crates/libsyntax2/tests/data/parser/err/0015_curly_in_params.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0015_curly_in_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/838820ad986e04dffa43fc2662a58da27d97db06/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0015_curly_in_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0015_curly_in_params.txt?ref=838820ad986e04dffa43fc2662a58da27d97db06", "patch": "@@ -8,7 +8,7 @@ ROOT@[0; 14)\n       L_PAREN@[6; 7)\n       err: `expected value parameter`\n       err: `expected R_PAREN`\n-      err: `expected SEMI`\n+      err: `expected a block`\n       err: `expected an item`\n   ERROR@[7; 8)\n     R_CURLY@[7; 8)"}]}