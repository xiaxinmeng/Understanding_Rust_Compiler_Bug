{"sha": "90686df18cddb600ddfca6fa209cb046d8c4293d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNjg2ZGYxOGNkZGI2MDBkZGZjYTZmYTIwOWNiMDQ2ZDhjNDI5M2Q=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-03T08:42:18Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-03T11:31:15Z"}, "message": "Rollup merge of #22960 - huonw:static-assert, r=huonw\n\n The API this exposes is a little strange (being attached to `static`s),\nso it makes sense to conservatively feature gate it. If it is highly\npopular, it is possible to reverse this gating.", "tree": {"sha": "57221674d3c90451b19645b265d3dfd820433d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57221674d3c90451b19645b265d3dfd820433d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90686df18cddb600ddfca6fa209cb046d8c4293d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90686df18cddb600ddfca6fa209cb046d8c4293d", "html_url": "https://github.com/rust-lang/rust/commit/90686df18cddb600ddfca6fa209cb046d8c4293d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90686df18cddb600ddfca6fa209cb046d8c4293d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b30b74692cfee533b45e0380591d237975ec215", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b30b74692cfee533b45e0380591d237975ec215", "html_url": "https://github.com/rust-lang/rust/commit/3b30b74692cfee533b45e0380591d237975ec215"}, {"sha": "c195783c05d253c8e32fb781cce1ae978f8bd6bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c195783c05d253c8e32fb781cce1ae978f8bd6bd", "html_url": "https://github.com/rust-lang/rust/commit/c195783c05d253c8e32fb781cce1ae978f8bd6bd"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "333d6fddbbdf2f7a6fc27626962be24977b53d8e", "filename": "src/doc/reference.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -2495,6 +2495,12 @@ The currently implemented features of the reference compiler are:\n \n * `staged_api` - Allows usage of stability markers and `#![staged_api]` in a crate\n \n+* `static_assert` - The `#[static_assert]` functionality is experimental and\n+                    unstable. The attribute can be attached to a `static` of\n+                    type `bool` and the compiler will error if the `bool` is\n+                    `false` at compile time. This version of this functionality\n+                    is unintuitive and suboptimal.\n+\n * `start` - Allows use of the `#[start]` attribute, which changes the entry point\n             into a Rust program. This capabiilty, especially the signature for the\n             annotated function, is subject to change."}, {"sha": "64746a40c8f3a9ff79e6703ae3148d5b2c1979f3", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -139,6 +139,9 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // Allows the use of rustc_* attributes; RFC 572\n     (\"rustc_attrs\", \"1.0.0\", Active),\n+\n+    // Allows the use of `static_assert`\n+    (\"static_assert\", \"1.0.0\", Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -242,7 +245,8 @@ pub static KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType)] = &[\n     (\"no_split_stack\", Whitelisted),\n     (\"no_stack_check\", Whitelisted),\n     (\"packed\", Whitelisted),\n-    (\"static_assert\", Whitelisted),\n+    (\"static_assert\", Gated(\"static_assert\",\n+                            \"`#[static_assert]` is an experimental feature, and has a poor API\")),\n     (\"no_debug\", Whitelisted),\n     (\"omit_gdb_pretty_printer_section\", Whitelisted),\n     (\"unsafe_no_drop_flag\", Gated(\"unsafe_no_drop_flag\",\n@@ -770,4 +774,3 @@ pub fn check_crate(cm: &CodeMap, span_handler: &SpanHandler, krate: &ast::Crate)\n                       |ctx, krate| visit::walk_crate(&mut PostExpansionVisitor { context: ctx },\n                                                      krate))\n }\n-"}, {"sha": "43a0ad6b5f6bf71ea08efb88f8439b31972a0d64", "filename": "src/test/compile-fail/asm-misplaced-option.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -10,13 +10,14 @@\n \n // ignore-android\n \n-#![feature(asm)]\n+#![feature(asm, rustc_attrs)]\n \n #![allow(dead_code, non_upper_case_globals)]\n \n #[cfg(any(target_arch = \"x86\",\n           target_arch = \"x86_64\"))]\n-pub fn main() {\n+#[rustc_error]\n+pub fn main() { //~ ERROR compilation successful\n     // assignment not dead\n     let mut x: isize = 0;\n     unsafe {\n@@ -33,7 +34,3 @@ pub fn main() {\n     }\n     assert_eq!(x, 13);\n }\n-\n-// At least one error is needed so that compilation fails\n-#[static_assert]\n-static b: bool = false; //~ ERROR static assertion failed"}, {"sha": "25740397d7a1e318cfbe47e9ccc980f31db5b0bb", "filename": "src/test/compile-fail/feature-gate-static-assert.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[static_assert] //~ ERROR `#[static_assert]` is an experimental feature\n+static X: bool = true;\n+\n+fn main() {}"}, {"sha": "08c5cae9f5f79b1ece1168829e748fa7ac4a551c", "filename": "src/test/compile-fail/issue-6804.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -8,13 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(rustc_attrs)]\n #![allow(dead_code)]\n \n // Matching against NaN should result in a warning\n \n use std::f64::NAN;\n \n-fn main() {\n+#[rustc_error]\n+fn main() { //~ ERROR compilation successful\n     let x = NAN;\n     match x {\n         NAN => {},\n@@ -27,7 +29,3 @@ fn main() {\n     };\n     //~^^^ WARNING unmatchable NaN in pattern, use the is_nan method in a guard instead\n }\n-\n-// At least one error is needed so that compilation fails\n-#[static_assert]\n-static B: bool = false; //~ ERROR static assertion failed"}, {"sha": "7a7912b06f88715ac012be4a7536dffef15bd6e6", "filename": "src/test/compile-fail/nonbool_static_assert.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(static_assert)]\n #![allow(dead_code)]\n \n #[static_assert]"}, {"sha": "d0cfbfbbcccc21adaea08611ed774546c0eba768", "filename": "src/test/compile-fail/static-assert.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(static_assert)]\n #![allow(dead_code)]\n \n #[static_assert]"}, {"sha": "35f840dab0c0cb6a0d7aa7446def00b272269145", "filename": "src/test/compile-fail/static-assert2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(static_assert)]\n #![allow(dead_code)]\n \n #[static_assert]"}, {"sha": "f650e56bb6b772ccf34ea72cff50b1ce21dbec86", "filename": "src/test/run-pass/static-assert.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Frun-pass%2Fstatic-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90686df18cddb600ddfca6fa209cb046d8c4293d/src%2Ftest%2Frun-pass%2Fstatic-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-assert.rs?ref=90686df18cddb600ddfca6fa209cb046d8c4293d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(static_assert)]\n+\n #[static_assert]\n static b: bool = true;\n "}]}