{"sha": "08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YWE4ZTFkZTcxNzQyNWViZjQ5Nzk2ZGYxNTE1ZDlmYmQ4YjJlM2U=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-24T12:53:12Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-24T12:53:12Z"}, "message": "Further refactoring under review comments", "tree": {"sha": "9099a7a64aa6225fd893c18708bb41731db15730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9099a7a64aa6225fd893c18708bb41731db15730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "html_url": "https://github.com/rust-lang/rust/commit/08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08aa8e1de717425ebf49796df1515d9fbd8b2e3e/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2974ba8f7d862eac084ada2fdf327bbde803bed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2974ba8f7d862eac084ada2fdf327bbde803bed", "html_url": "https://github.com/rust-lang/rust/commit/e2974ba8f7d862eac084ada2fdf327bbde803bed"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "a36587633b1687201005d4496bd67aee81eb6fe5", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/08aa8e1de717425ebf49796df1515d9fbd8b2e3e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08aa8e1de717425ebf49796df1515d9fbd8b2e3e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "patch": "@@ -6,7 +6,6 @@ use ra_syntax::{\n     ast::{self, AstNode, NameOwner},\n     SourceFile, SyntaxNode, TextRange, TextSize,\n };\n-use stdx::format_to;\n \n use crate::{\n     assist_context::{AssistBuilder, AssistDirector},\n@@ -58,7 +57,7 @@ pub(crate) fn extract_struct_from_enum(acc: &mut Assists, ctx: &AssistContext) -\n             let definition = Definition::ModuleDef(ModuleDef::EnumVariant(variant_hir));\n             let res = definition.find_usages(&ctx.db, None);\n             let start_offset = variant.parent_enum().syntax().text_range().start();\n-            let mut visited_modules_set: FxHashSet<Module> = FxHashSet::default();\n+            let mut visited_modules_set = FxHashSet::default();\n             visited_modules_set.insert(current_module);\n             for reference in res {\n                 let source_file = ctx.sema.parse(reference.file_range.file_id);\n@@ -132,10 +131,7 @@ fn extract_struct_def(\n     } else {\n         \"\".to_string()\n     };\n-    let mut buf = String::new();\n-\n-    format_to!(\n-        buf,\n+    let struct_def = format!(\n         r#\"{}struct {}{};\n \n {}\"#,\n@@ -145,7 +141,7 @@ fn extract_struct_def(\n         indent\n     );\n     edit.perform(file_id, |builder| {\n-        builder.insert(start_offset, buf);\n+        builder.insert(start_offset, struct_def);\n     });\n     Some(())\n }"}]}