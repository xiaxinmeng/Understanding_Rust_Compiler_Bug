{"sha": "ed297777599081d11c4a337cf19c9b1a1112136b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMjk3Nzc3NTk5MDgxZDExYzRhMzM3Y2YxOWM5YjFhMTExMjEzNmI=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-11T14:28:37Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-12T20:53:22Z"}, "message": "Remove conversions for allocated pointers\n\nOne was now unused, and `NonNull::new(\u2026).ok_or(AllocErr)` feels short enough\nfor the few cases that need the other conversion.", "tree": {"sha": "3b0c4fd9a0e9f5e72cc8daf121d1b99b6db23154", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0c4fd9a0e9f5e72cc8daf121d1b99b6db23154"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed297777599081d11c4a337cf19c9b1a1112136b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed297777599081d11c4a337cf19c9b1a1112136b", "html_url": "https://github.com/rust-lang/rust/commit/ed297777599081d11c4a337cf19c9b1a1112136b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed297777599081d11c4a337cf19c9b1a1112136b/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fddf51ee0b9765484fc316dbf3d4feb8ceea715d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fddf51ee0b9765484fc316dbf3d4feb8ceea715d", "html_url": "https://github.com/rust-lang/rust/commit/fddf51ee0b9765484fc316dbf3d4feb8ceea715d"}], "stats": {"total": 39, "additions": 11, "deletions": 28}, "files": [{"sha": "031babe5f6d1a983bd03c09890e14c85a29d6e04", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=ed297777599081d11c4a337cf19c9b1a1112136b", "patch": "@@ -122,7 +122,7 @@ unsafe impl GlobalAlloc for Global {\n unsafe impl Alloc for Global {\n     #[inline]\n     unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc(self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc(self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]\n@@ -137,12 +137,12 @@ unsafe impl Alloc for Global {\n                       new_size: usize)\n                       -> Result<NonNull<Void>, AllocErr>\n     {\n-        GlobalAlloc::realloc(self, ptr.as_ptr(), layout, new_size).into()\n+        NonNull::new(GlobalAlloc::realloc(self, ptr.as_ptr(), layout, new_size)).ok_or(AllocErr)\n     }\n \n     #[inline]\n     unsafe fn alloc_zeroed(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc_zeroed(self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc_zeroed(self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]"}, {"sha": "7fea6061169c6dc3586bc582a43abc40af44d72a", "filename": "src/liballoc_system/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Fliballoc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Fliballoc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_system%2Flib.rs?ref=ed297777599081d11c4a337cf19c9b1a1112136b", "patch": "@@ -51,12 +51,12 @@ pub struct System;\n unsafe impl Alloc for System {\n     #[inline]\n     unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc(self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc(self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]\n     unsafe fn alloc_zeroed(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc_zeroed(self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc_zeroed(self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]\n@@ -67,9 +67,9 @@ unsafe impl Alloc for System {\n     #[inline]\n     unsafe fn realloc(&mut self,\n                       ptr: NonNull<Void>,\n-                      old_layout: Layout,\n+                      layout: Layout,\n                       new_size: usize) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::realloc(self, ptr.as_ptr(), old_layout, new_size).into()\n+        NonNull::new(GlobalAlloc::realloc(self, ptr.as_ptr(), layout, new_size)).ok_or(AllocErr)\n     }\n \n     #[inline]\n@@ -83,12 +83,12 @@ unsafe impl Alloc for System {\n unsafe impl<'a> Alloc for &'a System {\n     #[inline]\n     unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc(*self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc(*self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]\n     unsafe fn alloc_zeroed(&mut self, layout: Layout) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::alloc_zeroed(*self, layout).into()\n+        NonNull::new(GlobalAlloc::alloc_zeroed(*self, layout)).ok_or(AllocErr)\n     }\n \n     #[inline]\n@@ -99,9 +99,9 @@ unsafe impl<'a> Alloc for &'a System {\n     #[inline]\n     unsafe fn realloc(&mut self,\n                       ptr: NonNull<Void>,\n-                      old_layout: Layout,\n+                      layout: Layout,\n                       new_size: usize) -> Result<NonNull<Void>, AllocErr> {\n-        GlobalAlloc::realloc(*self, ptr.as_ptr(), old_layout, new_size).into()\n+        NonNull::new(GlobalAlloc::realloc(*self, ptr.as_ptr(), layout, new_size)).ok_or(AllocErr)\n     }\n \n     #[inline]"}, {"sha": "97a49703bafd950e2be9a5585baddc67638b28a8", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed297777599081d11c4a337cf19c9b1a1112136b/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=ed297777599081d11c4a337cf19c9b1a1112136b", "patch": "@@ -41,23 +41,6 @@ impl Void {\n     }\n }\n \n-/// Convert from a return value of GlobalAlloc::alloc to that of Alloc::alloc\n-impl From<*mut Void> for Result<NonNull<Void>, AllocErr> {\n-    fn from(ptr: *mut Void) -> Self {\n-        NonNull::new(ptr).ok_or(AllocErr)\n-    }\n-}\n-\n-/// Convert from a return value of Alloc::alloc to that of GlobalAlloc::alloc\n-impl From<Result<NonNull<Void>, AllocErr>> for *mut Void {\n-    fn from(result: Result<NonNull<Void>, AllocErr>) -> Self {\n-        match result {\n-            Ok(ptr) => ptr.as_ptr(),\n-            Err(_) => Void::null_mut(),\n-        }\n-    }\n-}\n-\n /// Represents the combination of a starting address and\n /// a total capacity of the returned block.\n #[derive(Debug)]"}]}