{"sha": "66af12721a3200f872adf38e0015e22db88cd86e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YWYxMjcyMWEzMjAwZjg3MmFkZjM4ZTAwMTVlMjJkYjg4Y2Q4NmU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-05T14:23:51Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-06T10:37:10Z"}, "message": "to_lowercase/to_uppercase: also map chars not in Lu/Ll categories.\n\nThis adds 120 mappings:\n\n\u01c5 \u01c6\n\u01c5 \u01c4\n\u01c8 \u01c9\n\u01c8 \u01c7\n\u01cb \u01cc\n\u01cb \u01ca\n\u01f2 \u01f3\n\u01f2 \u01f1\n \u0399\n\u1f88 \u1f80\n\u1f89 \u1f81\n\u1f8a \u1f82\n\u1f8b \u1f83\n\u1f8c \u1f84\n\u1f8d \u1f85\n\u1f8e \u1f86\n\u1f8f \u1f87\n\u1f98 \u1f90\n\u1f99 \u1f91\n\u1f9a \u1f92\n\u1f9b \u1f93\n\u1f9c \u1f94\n\u1f9d \u1f95\n\u1f9e \u1f96\n\u1f9f \u1f97\n\u1fa8 \u1fa0\n\u1fa9 \u1fa1\n\u1faa \u1fa2\n\u1fab \u1fa3\n\u1fac \u1fa4\n\u1fad \u1fa5\n\u1fae \u1fa6\n\u1faf \u1fa7\n\u1fbc \u1fb3\n\u1fcc \u1fc3\n\u1ffc \u1ff3\n\u2160 \u2170\n\u2161 \u2171\n\u2162 \u2172\n\u2163 \u2173\n\u2164 \u2174\n\u2165 \u2175\n\u2166 \u2176\n\u2167 \u2177\n\u2168 \u2178\n\u2169 \u2179\n\u216a \u217a\n\u216b \u217b\n\u216c \u217c\n\u216d \u217d\n\u216e \u217e\n\u216f \u217f\n\u2170 \u2160\n\u2171 \u2161\n\u2172 \u2162\n\u2173 \u2163\n\u2174 \u2164\n\u2175 \u2165\n\u2176 \u2166\n\u2177 \u2167\n\u2178 \u2168\n\u2179 \u2169\n\u217a \u216a\n\u217b \u216b\n\u217c \u216c\n\u217d \u216d\n\u217e \u216e\n\u217f \u216f\n\u24b6 \u24d0\n\u24b7 \u24d1\n\u24b8 \u24d2\n\u24b9 \u24d3\n\u24ba \u24d4\n\u24bb \u24d5\n\u24bc \u24d6\n\u24bd \u24d7\n\u24be \u24d8\n\u24bf \u24d9\n\u24c0 \u24da\n\u24c1 \u24db\n\u24c2 \u24dc\n\u24c3 \u24dd\n\u24c4 \u24de\n\u24c5 \u24df\n\u24c6 \u24e0\n\u24c7 \u24e1\n\u24c8 \u24e2\n\u24c9 \u24e3\n\u24ca \u24e4\n\u24cb \u24e5\n\u24cc \u24e6\n\u24cd \u24e7\n\u24ce \u24e8\n\u24cf \u24e9\n\u24d0 \u24b6\n\u24d1 \u24b7\n\u24d2 \u24b8\n\u24d3 \u24b9\n\u24d4 \u24ba\n\u24d5 \u24bb\n\u24d6 \u24bc\n\u24d7 \u24bd\n\u24d8 \u24be\n\u24d9 \u24bf\n\u24da \u24c0\n\u24db \u24c1\n\u24dc \u24c2\n\u24dd \u24c3\n\u24de \u24c4\n\u24df \u24c5\n\u24e0 \u24c6\n\u24e1 \u24c7\n\u24e2 \u24c8\n\u24e3 \u24c9\n\u24e4 \u24ca\n\u24e5 \u24cb\n\u24e6 \u24cc\n\u24e7 \u24cd\n\u24e8 \u24ce\n\u24e9 \u24cf", "tree": {"sha": "0d7017de2aa423629317ac17394fc9ea8061d76c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d7017de2aa423629317ac17394fc9ea8061d76c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66af12721a3200f872adf38e0015e22db88cd86e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66af12721a3200f872adf38e0015e22db88cd86e", "html_url": "https://github.com/rust-lang/rust/commit/66af12721a3200f872adf38e0015e22db88cd86e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66af12721a3200f872adf38e0015e22db88cd86e/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "html_url": "https://github.com/rust-lang/rust/commit/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb"}], "stats": {"total": 1102, "additions": 568, "deletions": 534}, "files": [{"sha": "8ddea82fc6c8b1c63ba455858bb1c96316f079f8", "filename": "src/etc/unicode.py", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/66af12721a3200f872adf38e0015e22db88cd86e/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/66af12721a3200f872adf38e0015e22db88cd86e/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=66af12721a3200f872adf38e0015e22db88cd86e", "patch": "@@ -72,8 +72,8 @@ def is_surrogate(n):\n def load_unicode_data(f):\n     fetch(f)\n     gencats = {}\n-    upperlower = {}\n-    lowerupper = {}\n+    to_lower = {}\n+    to_upper = {}\n     combines = {}\n     canon_decomp = {}\n     compat_decomp = {}\n@@ -103,12 +103,12 @@ def load_unicode_data(f):\n \n         # generate char to char direct common and simple conversions\n         # uppercase to lowercase\n-        if gencat == \"Lu\" and lowcase != \"\" and code_org != lowcase:\n-            upperlower[code] = int(lowcase, 16)\n+        if lowcase != \"\" and code_org != lowcase:\n+            to_lower[code] = int(lowcase, 16)\n \n         # lowercase to uppercase\n-        if gencat == \"Ll\" and upcase != \"\" and code_org != upcase:\n-            lowerupper[code] = int(upcase, 16)\n+        if upcase != \"\" and code_org != upcase:\n+            to_upper[code] = int(upcase, 16)\n \n         # store decomposition, if given\n         if decomp != \"\":\n@@ -144,7 +144,7 @@ def load_unicode_data(f):\n     gencats = group_cats(gencats)\n     combines = to_combines(group_cats(combines))\n \n-    return (canon_decomp, compat_decomp, gencats, combines, lowerupper, upperlower)\n+    return (canon_decomp, compat_decomp, gencats, combines, to_upper, to_lower)\n \n def group_cats(cats):\n     cats_out = {}\n@@ -319,7 +319,7 @@ def emit_property_module(f, mod, tbl, emit):\n         f.write(\"    }\\n\\n\")\n     f.write(\"}\\n\\n\")\n \n-def emit_conversions_module(f, lowerupper, upperlower):\n+def emit_conversions_module(f, to_upper, to_lower):\n     f.write(\"pub mod conversions {\")\n     f.write(\"\"\"\n     use core::cmp::Ordering::{Equal, Less, Greater};\n@@ -329,16 +329,16 @@ def emit_conversions_module(f, lowerupper, upperlower):\n     use core::result::Result::{Ok, Err};\n \n     pub fn to_lower(c: char) -> char {\n-        match bsearch_case_table(c, LuLl_table) {\n+        match bsearch_case_table(c, to_lowercase_table) {\n           None        => c,\n-          Some(index) => LuLl_table[index].1\n+          Some(index) => to_lowercase_table[index].1\n         }\n     }\n \n     pub fn to_upper(c: char) -> char {\n-        match bsearch_case_table(c, LlLu_table) {\n+        match bsearch_case_table(c, to_uppercase_table) {\n             None        => c,\n-            Some(index) => LlLu_table[index].1\n+            Some(index) => to_uppercase_table[index].1\n         }\n     }\n \n@@ -354,10 +354,10 @@ def emit_conversions_module(f, lowerupper, upperlower):\n     }\n \n \"\"\")\n-    emit_table(f, \"LuLl_table\",\n-        sorted(upperlower.iteritems(), key=operator.itemgetter(0)), is_pub=False)\n-    emit_table(f, \"LlLu_table\",\n-        sorted(lowerupper.iteritems(), key=operator.itemgetter(0)), is_pub=False)\n+    emit_table(f, \"to_lowercase_table\",\n+        sorted(to_lower.iteritems(), key=operator.itemgetter(0)), is_pub=False)\n+    emit_table(f, \"to_uppercase_table\",\n+        sorted(to_upper.iteritems(), key=operator.itemgetter(0)), is_pub=False)\n     f.write(\"}\\n\\n\")\n \n def emit_grapheme_module(f, grapheme_table, grapheme_cats):\n@@ -591,7 +591,7 @@ def optimize_width_table(wtable):\n pub const UNICODE_VERSION: (u64, u64, u64) = (%s, %s, %s);\n \"\"\" % unicode_version)\n         (canon_decomp, compat_decomp, gencats, combines,\n-                lowerupper, upperlower) = load_unicode_data(\"UnicodeData.txt\")\n+                to_upper, to_lower) = load_unicode_data(\"UnicodeData.txt\")\n         want_derived = [\"XID_Start\", \"XID_Continue\", \"Alphabetic\", \"Lowercase\", \"Uppercase\"]\n         derived = load_properties(\"DerivedCoreProperties.txt\", want_derived)\n         scripts = load_properties(\"Scripts.txt\", [])\n@@ -611,7 +611,7 @@ def optimize_width_table(wtable):\n \n         # normalizations and conversions module\n         emit_norm_module(rf, canon_decomp, compat_decomp, combines, norm_props)\n-        emit_conversions_module(rf, lowerupper, upperlower)\n+        emit_conversions_module(rf, to_upper, to_lower)\n \n         ### character width module\n         width_table = []"}, {"sha": "659361357c9d6553b66ee46931eedd7b2063b005", "filename": "src/librustc_unicode/tables.rs", "status": "modified", "additions": 550, "deletions": 516, "changes": 1066, "blob_url": "https://github.com/rust-lang/rust/blob/66af12721a3200f872adf38e0015e22db88cd86e/src%2Flibrustc_unicode%2Ftables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66af12721a3200f872adf38e0015e22db88cd86e/src%2Flibrustc_unicode%2Ftables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Ftables.rs?ref=66af12721a3200f872adf38e0015e22db88cd86e"}]}