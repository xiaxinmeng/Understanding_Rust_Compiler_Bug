{"sha": "bf04edee2fac9a364c6683921ece8c6c0678e1ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMDRlZGVlMmZhYzlhMzY0YzY2ODM5MjFlY2U4YzZjMDY3OGUxZWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-17T01:02:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-17T01:02:56Z"}, "message": "Rollup merge of #63545 - Centril:gate-yield-preexp, r=oli-obk\n\nFeature gate 'yield $expr?' pre-expansion\n\nAlso improve the overall ergonomics of pre-expansion gating in general.\n\nr? @Zoxc", "tree": {"sha": "e9081bb86551c7d9606fd7e114adbc26b2ff595d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9081bb86551c7d9606fd7e114adbc26b2ff595d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf04edee2fac9a364c6683921ece8c6c0678e1ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdV1JACRBK7hj4Ov3rIwAAdHIIAH0qH7X7dN6bQTyUj2Lb7KjK\n5zgm4GT6RAhUOh9xQxjaj0HcuwFI+3dWyR70IAAcDORhTT7CNq9UnvukhcaQLDq7\n5CudDqJjl9FFPiMvkKqza3VHIZOcuSbpHBVSZsFwgn3VfhbnVwL1zWz9G7T+WxZo\ngCede8OAwmol0F9zf3sFwIy52ogeHhxIvW/XePsrKamSG/hM4uc8+e42Bz1gMDf5\nCckKPOBlbcv0N7oVYBN++emdLD3uI+9PswtP5IGKXb4TRdCqY6iAhRVnGfYllzFo\ne3j12ZDdp0VPyy3bXy6gIkg3q6O7joKAlaK8fvc/ea8Fyw8oiIMB24amm5jdf4o=\n=iKad\n-----END PGP SIGNATURE-----\n", "payload": "tree e9081bb86551c7d9606fd7e114adbc26b2ff595d\nparent 7f3c67d4e0c4d8237899c6aa99a174547ff85b09\nparent 20661f18df695058224427fb84d21a0eeec8c657\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1566003776 +0200\ncommitter GitHub <noreply@github.com> 1566003776 +0200\n\nRollup merge of #63545 - Centril:gate-yield-preexp, r=oli-obk\n\nFeature gate 'yield $expr?' pre-expansion\n\nAlso improve the overall ergonomics of pre-expansion gating in general.\n\nr? @Zoxc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf04edee2fac9a364c6683921ece8c6c0678e1ec", "html_url": "https://github.com/rust-lang/rust/commit/bf04edee2fac9a364c6683921ece8c6c0678e1ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf04edee2fac9a364c6683921ece8c6c0678e1ec/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f3c67d4e0c4d8237899c6aa99a174547ff85b09", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3c67d4e0c4d8237899c6aa99a174547ff85b09", "html_url": "https://github.com/rust-lang/rust/commit/7f3c67d4e0c4d8237899c6aa99a174547ff85b09"}, {"sha": "20661f18df695058224427fb84d21a0eeec8c657", "url": "https://api.github.com/repos/rust-lang/rust/commits/20661f18df695058224427fb84d21a0eeec8c657", "html_url": "https://github.com/rust-lang/rust/commit/20661f18df695058224427fb84d21a0eeec8c657"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "1a87a903156d2482c93db88f7d85ec9232b83932", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 30, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=bf04edee2fac9a364c6683921ece8c6c0678e1ec", "patch": "@@ -30,7 +30,6 @@ use crate::tokenstream::TokenTree;\n \n use errors::{Applicability, DiagnosticBuilder, Handler};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::sync::Lock;\n use rustc_target::spec::abi::Abi;\n use syntax_pos::{Span, DUMMY_SP, MultiSpan};\n use log::debug;\n@@ -2088,11 +2087,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                        \"type ascription is experimental\");\n                 }\n             }\n-            ast::ExprKind::Yield(..) => {\n-                gate_feature_post!(&self, generators,\n-                                  e.span,\n-                                  \"yield syntax is experimental\");\n-            }\n             ast::ExprKind::TryBlock(_) => {\n                 gate_feature_post!(&self, try_blocks, e.span, \"`try` expression is experimental\");\n             }\n@@ -2427,10 +2421,6 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n     features\n }\n \n-fn for_each_in_lock<T>(vec: &Lock<Vec<T>>, f: impl Fn(&T)) {\n-    vec.borrow().iter().for_each(f);\n-}\n-\n pub fn check_crate(krate: &ast::Crate,\n                    sess: &ParseSess,\n                    features: &Features,\n@@ -2443,26 +2433,16 @@ pub fn check_crate(krate: &ast::Crate,\n         plugin_attributes,\n     };\n \n-    for_each_in_lock(&sess.param_attr_spans, |span| gate_feature!(\n-        &ctx,\n-        param_attrs,\n-        *span,\n-        \"attributes on function parameters are unstable\"\n-    ));\n-\n-    for_each_in_lock(&sess.let_chains_spans, |span| gate_feature!(\n-        &ctx,\n-        let_chains,\n-        *span,\n-        \"`let` expressions in this position are experimental\"\n-    ));\n-\n-    for_each_in_lock(&sess.async_closure_spans, |span| gate_feature!(\n-        &ctx,\n-        async_closure,\n-        *span,\n-        \"async closures are unstable\"\n-    ));\n+    macro_rules! gate_all {\n+        ($spans:ident, $gate:ident, $msg:literal) => {\n+            for span in &*sess.$spans.borrow() { gate_feature!(&ctx, $gate, *span, $msg); }\n+        }\n+    }\n+\n+    gate_all!(param_attr_spans, param_attrs, \"attributes on function parameters are unstable\");\n+    gate_all!(let_chains_spans, let_chains, \"`let` expressions in this position are experimental\");\n+    gate_all!(async_closure_spans, async_closure, \"async closures are unstable\");\n+    gate_all!(yield_spans, generators, \"yield syntax is experimental\");\n \n     let visitor = &mut PostExpansionVisitor {\n         context: &ctx,"}, {"sha": "9088f929372c999737844fbc147189a6dc34c9ef", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=bf04edee2fac9a364c6683921ece8c6c0678e1ec", "patch": "@@ -63,6 +63,8 @@ pub struct ParseSess {\n     pub let_chains_spans: Lock<Vec<Span>>,\n     // Places where `async || ..` exprs were used and should be feature gated.\n     pub async_closure_spans: Lock<Vec<Span>>,\n+    // Places where `yield e?` exprs were used and should be feature gated.\n+    pub yield_spans: Lock<Vec<Span>>,\n     pub injected_crate_name: Once<Symbol>,\n }\n \n@@ -92,6 +94,7 @@ impl ParseSess {\n             param_attr_spans: Lock::new(Vec::new()),\n             let_chains_spans: Lock::new(Vec::new()),\n             async_closure_spans: Lock::new(Vec::new()),\n+            yield_spans: Lock::new(Vec::new()),\n             injected_crate_name: Once::new(),\n         }\n     }"}, {"sha": "ccc6bd1506709155920216bfc0c00842d3ce522a", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=bf04edee2fac9a364c6683921ece8c6c0678e1ec", "patch": "@@ -997,6 +997,9 @@ impl<'a> Parser<'a> {\n                     } else {\n                         ex = ExprKind::Yield(None);\n                     }\n+\n+                    let span = lo.to(hi);\n+                    self.sess.yield_spans.borrow_mut().push(span);\n                 } else if self.eat_keyword(kw::Let) {\n                     return self.parse_let_expr(attrs);\n                 } else if is_span_rust_2018 && self.eat_keyword(kw::Await) {"}, {"sha": "382d891feed8437b8a65397d8a83b8da7a516785", "filename": "src/test/ui/feature-gates/feature-gate-generators.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs?ref=bf04edee2fac9a364c6683921ece8c6c0678e1ec", "patch": "@@ -2,3 +2,9 @@ fn main() {\n     yield true; //~ ERROR yield syntax is experimental\n                 //~^ ERROR yield statement outside of generator literal\n }\n+\n+#[cfg(FALSE)]\n+fn foo() {\n+    yield; //~ ERROR yield syntax is experimental\n+    yield 0; //~ ERROR yield syntax is experimental\n+}"}, {"sha": "24b814b410c9d5582d41b76ffa40e8dfa51d769a", "filename": "src/test/ui/feature-gates/feature-gate-generators.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf04edee2fac9a364c6683921ece8c6c0678e1ec/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr?ref=bf04edee2fac9a364c6683921ece8c6c0678e1ec", "patch": "@@ -7,12 +7,30 @@ LL |     yield true;\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n    = help: add `#![feature(generators)]` to the crate attributes to enable\n \n+error[E0658]: yield syntax is experimental\n+  --> $DIR/feature-gate-generators.rs:8:5\n+   |\n+LL |     yield;\n+   |     ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n+   = help: add `#![feature(generators)]` to the crate attributes to enable\n+\n+error[E0658]: yield syntax is experimental\n+  --> $DIR/feature-gate-generators.rs:9:5\n+   |\n+LL |     yield 0;\n+   |     ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n+   = help: add `#![feature(generators)]` to the crate attributes to enable\n+\n error[E0627]: yield statement outside of generator literal\n   --> $DIR/feature-gate-generators.rs:2:5\n    |\n LL |     yield true;\n    |     ^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}