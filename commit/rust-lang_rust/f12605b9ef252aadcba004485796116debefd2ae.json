{"sha": "f12605b9ef252aadcba004485796116debefd2ae", "node_id": "C_kwDOAAsO6NoAKGYxMjYwNWI5ZWYyNTJhYWRjYmEwMDQ0ODU3OTYxMTZkZWJlZmQyYWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-07T15:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-07T15:25:44Z"}, "message": "Rollup merge of #97821 - Nilstrieb:mutex-docs, r=Dylan-DPC\n\nRemove confusing sentence from `Mutex` docs\n\nThe docs were saying something about \"statically initializing\" the\nmutex, and it's not clear what this means. Remove that part to avoid\nconfusion.", "tree": {"sha": "592a8a484705f80bd559bebca3c15963891bd119", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/592a8a484705f80bd559bebca3c15963891bd119"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12605b9ef252aadcba004485796116debefd2ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJin235CRBK7hj4Ov3rIwAAXyIIAECT5NnWN3IOwV/ldJ/k6Ouk\n+iSjnwBzkPoIFOD6A4m0JzqyLjKC6EoyrM2gJd1rNW0BYok6KY4Tog3R26+j25rT\n0fcjFiKVyttenaJy8wBd+iiL4Y05cCfNiAZ4e22WsOmdDUByEK3197qiJ+VNzRrI\nvHprMISQ9/q+DRbYQ3JyFXos68lJgPo8xjV8HWCn+SVR5n0qhJbe3YfWjaICmpOz\n14ff6ThSwaitailpR/taTZfHVN5aPyvVR+ZQxnoQAJzC3QUUDlzZoTeVyl7gS5W3\nyDGNK54sJSyZXQIWr2/dbCWUUCaxVxSLlhFR99F9Uq6JADcZMkudKNKc4vV3s94=\n=RE2h\n-----END PGP SIGNATURE-----\n", "payload": "tree 592a8a484705f80bd559bebca3c15963891bd119\nparent 32d945d9bd4aa4c0c381a5112d5acf39dccf6a33\nparent e224185409bd20b91c5eb0652748283658d7c4dd\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654615544 +0200\ncommitter GitHub <noreply@github.com> 1654615544 +0200\n\nRollup merge of #97821 - Nilstrieb:mutex-docs, r=Dylan-DPC\n\nRemove confusing sentence from `Mutex` docs\n\nThe docs were saying something about \"statically initializing\" the\nmutex, and it's not clear what this means. Remove that part to avoid\nconfusion.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12605b9ef252aadcba004485796116debefd2ae", "html_url": "https://github.com/rust-lang/rust/commit/f12605b9ef252aadcba004485796116debefd2ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12605b9ef252aadcba004485796116debefd2ae/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32d945d9bd4aa4c0c381a5112d5acf39dccf6a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/32d945d9bd4aa4c0c381a5112d5acf39dccf6a33", "html_url": "https://github.com/rust-lang/rust/commit/32d945d9bd4aa4c0c381a5112d5acf39dccf6a33"}, {"sha": "e224185409bd20b91c5eb0652748283658d7c4dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e224185409bd20b91c5eb0652748283658d7c4dd", "html_url": "https://github.com/rust-lang/rust/commit/e224185409bd20b91c5eb0652748283658d7c4dd"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "b2fbb77204aa0bf1fea7bcd7f756c6a715a66be4", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f12605b9ef252aadcba004485796116debefd2ae/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12605b9ef252aadcba004485796116debefd2ae/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=f12605b9ef252aadcba004485796116debefd2ae", "patch": "@@ -10,11 +10,10 @@ use crate::sys_common::mutex as sys;\n /// A mutual exclusion primitive useful for protecting shared data\n ///\n /// This mutex will block threads waiting for the lock to become available. The\n-/// mutex can also be statically initialized or created via a [`new`]\n-/// constructor. Each mutex has a type parameter which represents the data that\n-/// it is protecting. The data can only be accessed through the RAII guards\n-/// returned from [`lock`] and [`try_lock`], which guarantees that the data is only\n-/// ever accessed when the mutex is locked.\n+/// mutex can be created via a [`new`] constructor. Each mutex has a type parameter\n+/// which represents the data that it is protecting. The data can only be accessed\n+/// through the RAII guards returned from [`lock`] and [`try_lock`], which\n+/// guarantees that the data is only ever accessed when the mutex is locked.\n ///\n /// # Poisoning\n ///"}]}