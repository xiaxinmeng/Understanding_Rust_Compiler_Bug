{"sha": "3c142b0ffef3d423ee1e176b30892702d3eb29ac", "node_id": "C_kwDOAAsO6NoAKDNjMTQyYjBmZmVmM2Q0MjNlZTFlMTc2YjMwODkyNzAyZDNlYjI5YWM", "commit": {"author": {"name": "SaltyKitkat", "email": "954537646@qq.com", "date": "2022-02-13T07:26:14Z"}, "committer": {"name": "SaltyKitkat", "email": "954537646@qq.com", "date": "2022-02-13T07:26:14Z"}, "message": "stabilize const_ptr_offset", "tree": {"sha": "c69f3112d4642f7657d8218706d048a61f94de60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c69f3112d4642f7657d8218706d048a61f94de60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c142b0ffef3d423ee1e176b30892702d3eb29ac", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmI/5MQACgkQ+boUO5X/\nbYKZjxAAu/GeSPkRMD+VKlZWKAGeB5meCdpqVs2pUTb++sVZwR/LDD+wNYu+rynz\n7NO4JBZRLS5R0UvL1PnYKzLI13flnwStelJbG3munmXke9GR44zIQ/6XwnSQTpSK\n9LK5Sycf9nF3e1NUebuI5Qk9ClbRm/ebIGK5OYSfyMKcN5rsSIWr6g1ECN/b4voG\nE4VtOdUjJKBUbAz+0eHaIDrjKcZPrhQozC0tnoRHLB7SuiTlEVvIEeZtybUdoIC7\nhbpN7Rv5rR+RTNHryJHH8h8KEJe3/pa2LuiA/vLisPVf9j78p19DQZv4CrQn5FDU\nXlLc4y8Ss8abm8/lu9TpB46tg2c2Pz7MBrjpVIgM/utr4D+2w2fUeImELumfwa9m\nUbkJJNKvObpFbN4qIYmzr+0QDiu2Z+fTRki0IFKo3uQylraUYlPEYPh0zf+8MO0W\nBtueDrG+hQO+baXxLhN+KpHE5reV6Or86aUgBqdNzAlSWTlIxprJCfCVEcBLlBt0\nU9eYKpWXM2JHy5lOUP+PmbS3wLJzXPcm4FC6p55HPfZvoT6SV/rw6UZDvyp0MvNG\ne1qT5eDC+hGO0YXHSIEwGugoti+8vAS49wh6TmO06sRqQvpXXdIcnVZeiZlyXQkc\no7ujM9YzHTWlT8I8HU5OMQT+N3Y9MbRA++QAdX+FBJEC4FWz6AY=\n=m5bL\n-----END PGP SIGNATURE-----", "payload": "tree c69f3112d4642f7657d8218706d048a61f94de60\nparent 1d9c262eea411ec5230f8a4c9ba50b3647064da4\nauthor SaltyKitkat <954537646@qq.com> 1644737174 +0800\ncommitter SaltyKitkat <954537646@qq.com> 1644737174 +0800\n\nstabilize const_ptr_offset\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c142b0ffef3d423ee1e176b30892702d3eb29ac", "html_url": "https://github.com/rust-lang/rust/commit/3c142b0ffef3d423ee1e176b30892702d3eb29ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c142b0ffef3d423ee1e176b30892702d3eb29ac/comments", "author": {"login": "SaltyKitkat", "id": 56984513, "node_id": "MDQ6VXNlcjU2OTg0NTEz", "avatar_url": "https://avatars.githubusercontent.com/u/56984513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaltyKitkat", "html_url": "https://github.com/SaltyKitkat", "followers_url": "https://api.github.com/users/SaltyKitkat/followers", "following_url": "https://api.github.com/users/SaltyKitkat/following{/other_user}", "gists_url": "https://api.github.com/users/SaltyKitkat/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaltyKitkat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaltyKitkat/subscriptions", "organizations_url": "https://api.github.com/users/SaltyKitkat/orgs", "repos_url": "https://api.github.com/users/SaltyKitkat/repos", "events_url": "https://api.github.com/users/SaltyKitkat/events{/privacy}", "received_events_url": "https://api.github.com/users/SaltyKitkat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SaltyKitkat", "id": 56984513, "node_id": "MDQ6VXNlcjU2OTg0NTEz", "avatar_url": "https://avatars.githubusercontent.com/u/56984513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaltyKitkat", "html_url": "https://github.com/SaltyKitkat", "followers_url": "https://api.github.com/users/SaltyKitkat/followers", "following_url": "https://api.github.com/users/SaltyKitkat/following{/other_user}", "gists_url": "https://api.github.com/users/SaltyKitkat/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaltyKitkat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaltyKitkat/subscriptions", "organizations_url": "https://api.github.com/users/SaltyKitkat/orgs", "repos_url": "https://api.github.com/users/SaltyKitkat/repos", "events_url": "https://api.github.com/users/SaltyKitkat/events{/privacy}", "received_events_url": "https://api.github.com/users/SaltyKitkat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d9c262eea411ec5230f8a4c9ba50b3647064da4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d9c262eea411ec5230f8a4c9ba50b3647064da4", "html_url": "https://github.com/rust-lang/rust/commit/1d9c262eea411ec5230f8a4c9ba50b3647064da4"}], "stats": {"total": 47, "additions": 19, "deletions": 28}, "files": [{"sha": "abce47e5afe1abe6f149ccf6b803e6c0af05bf44", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -10,7 +10,6 @@\n #![feature(const_intrinsic_copy)]\n #![feature(const_mut_refs)]\n #![feature(const_nonnull_slice_from_raw_parts)]\n-#![feature(const_ptr_offset)]\n #![feature(const_ptr_write)]\n #![feature(const_try)]\n #![feature(core_intrinsics)]"}, {"sha": "2aa6cbd2d3c32e6cd1502e314d47c404f4d772f2", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1168,7 +1168,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is [`pointer::offset`].\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Calculates the offset from a pointer, potentially wrapping.\n@@ -1185,7 +1185,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is [`pointer::wrapping_offset`].\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     pub fn arith_offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with"}, {"sha": "5c16346cbd1d94e5f259fab570539ea849618dce", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -126,7 +126,6 @@\n #![feature(const_pin)]\n #![feature(const_replace)]\n #![feature(const_ptr_is_null)]\n-#![feature(const_ptr_offset)]\n #![feature(const_ptr_offset_from)]\n #![feature(const_ptr_read)]\n #![feature(const_ptr_write)]"}, {"sha": "aaccc203cb0c389d6789b8c24788f6cf2ae6944e", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -285,7 +285,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const unsafe fn offset(self, count: isize) -> *const T\n     where\n@@ -347,7 +347,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const fn wrapping_offset(self, count: isize) -> *const T\n     where\n@@ -566,7 +566,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const unsafe fn add(self, count: usize) -> Self\n     where\n@@ -630,7 +630,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     pub const unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -693,7 +693,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -755,7 +755,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     pub const fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "275c057bd9ce4bdb456d25e556c29a88015eedd3", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -295,7 +295,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const unsafe fn offset(self, count: isize) -> *mut T\n     where\n@@ -358,7 +358,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const fn wrapping_offset(self, count: isize) -> *mut T\n     where\n@@ -680,7 +680,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const unsafe fn add(self, count: usize) -> Self\n     where\n@@ -744,7 +744,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     pub const unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -807,7 +807,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline(always)]\n     pub const fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -869,7 +869,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     pub const fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "3435b11351b665a3ec3ce842daeb2ceafba133b1", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -499,7 +499,7 @@ impl<T> [T] {\n     /// assert_eq!(x, &[3, 4, 6]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     #[must_use]\n     pub const fn as_mut_ptr(&mut self) -> *mut T {\n@@ -535,7 +535,7 @@ impl<T> [T] {\n     ///\n     /// [`as_ptr`]: slice::as_ptr\n     #[stable(feature = \"slice_ptr_range\", since = \"1.48.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     #[must_use]\n     pub const fn as_ptr_range(&self) -> Range<*const T> {\n@@ -578,7 +578,7 @@ impl<T> [T] {\n     ///\n     /// [`as_mut_ptr`]: slice::as_mut_ptr\n     #[stable(feature = \"slice_ptr_range\", since = \"1.48.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n     #[inline]\n     #[must_use]\n     pub const fn as_mut_ptr_range(&mut self) -> Range<*mut T> {"}, {"sha": "5f90a76ab74ee22090486d668e44a029ab4fc785", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -20,7 +20,6 @@\n #![feature(const_ptr_as_ref)]\n #![feature(const_ptr_read)]\n #![feature(const_ptr_write)]\n-#![feature(const_ptr_offset)]\n #![feature(const_trait_impl)]\n #![feature(const_likely)]\n #![feature(core_ffi_c)]"}, {"sha": "9dd669180da0a46692bb0d1a0182a6efd70ee53e", "filename": "src/test/ui/const-ptr/out_of_bounds_read.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1,7 +1,6 @@\n // error-pattern: evaluation of constant value failed\n \n #![feature(const_ptr_read)]\n-#![feature(const_ptr_offset)]\n \n fn main() {\n     use std::ptr;"}, {"sha": "5ab90324b8f866167a7fa6722f54e7ae2dc72c43", "filename": "src/test/ui/consts/copy-intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-tidy-linelength\n #![feature(intrinsics, staged_api)]\n-#![feature(const_mut_refs, const_intrinsic_copy, const_ptr_offset)]\n+#![feature(const_mut_refs, const_intrinsic_copy)]\n use std::mem;\n \n extern \"rust-intrinsic\" {"}, {"sha": "f3f1af89b2c41b97dff98149404ab6a649fe3016", "filename": "src/test/ui/consts/invalid-union.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -9,7 +9,6 @@\n // build-fail\n // stderr-per-bitwidth\n #![feature(const_mut_refs)]\n-#![feature(const_ptr_offset)]\n #![feature(untagged_unions)]\n use std::cell::Cell;\n "}, {"sha": "2b23626e3d709087e3e14002e6be9612de053c6e", "filename": "src/test/ui/consts/issue-miri-1910.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fissue-miri-1910.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fissue-miri-1910.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-miri-1910.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1,6 +1,5 @@\n // error-pattern unable to turn pointer into raw bytes\n #![feature(const_ptr_read)]\n-#![feature(const_ptr_offset)]\n \n const C: () = unsafe {\n     let foo = Some(&42 as *const i32);"}, {"sha": "f9ddda554fcf0a5e9391f207712ed5fee5825d85", "filename": "src/test/ui/consts/offset.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1,5 +1,4 @@\n // run-pass\n-#![feature(const_ptr_offset)]\n #![feature(const_ptr_offset_from)]\n use std::ptr;\n "}, {"sha": "939c1e31f9a5265bcffc248b08133444f9aee297", "filename": "src/test/ui/consts/offset_from_ub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1,4 +1,4 @@\n-#![feature(const_ptr_offset_from, const_ptr_offset)]\n+#![feature(const_ptr_offset_from)]\n #![feature(core_intrinsics)]\n \n use std::intrinsics::ptr_offset_from;"}, {"sha": "1b01e4fd14731037a4fe3f8b3a0d26da447a9715", "filename": "src/test/ui/consts/offset_ub.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -1,4 +1,3 @@\n-#![feature(const_ptr_offset)]\n use std::ptr;\n \n // normalize-stderr-test \"alloc\\d+\" -> \"allocN\""}, {"sha": "20233db09c90b8af70991fdd0e623f5339a2559a", "filename": "src/test/ui/consts/ptr_comparisons.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c142b0ffef3d423ee1e176b30892702d3eb29ac/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.rs?ref=3c142b0ffef3d423ee1e176b30892702d3eb29ac", "patch": "@@ -7,7 +7,6 @@\n #![feature(\n     core_intrinsics,\n     const_raw_ptr_comparison,\n-    const_ptr_offset,\n )]\n \n const FOO: &usize = &42;"}]}