{"sha": "3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZTVmZWQwNGM5NGJlMmY4NTkxYzdmNGFiNzZmNzhlYzg4MmNkMzI=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-04-06T19:34:29Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-04-06T21:10:15Z"}, "message": "Fix a couple resolve bugs from binder refactor", "tree": {"sha": "4178a2ca3453857236e46e4a9d4690ffa18f22d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4178a2ca3453857236e46e4a9d4690ffa18f22d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "html_url": "https://github.com/rust-lang/rust/commit/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c897d430dcbec6b10a9925f7de054dbc0ad3c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c897d430dcbec6b10a9925f7de054dbc0ad3c52", "html_url": "https://github.com/rust-lang/rust/commit/5c897d430dcbec6b10a9925f7de054dbc0ad3c52"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "70ddfcc9004f10a1f97d6df7e6c0d7796f233e93", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "patch": "@@ -2659,6 +2659,13 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 Some(next) => next,\n                 None => break None,\n             };\n+            // See issue #83753. If someone writes an associated type on a non-trait, just treat it as\n+            // there being no supertrait HRTBs.\n+            match tcx.def_kind(def_id) {\n+                DefKind::Trait | DefKind::TraitAlias | DefKind::Impl => {}\n+                _ => break None,\n+            }\n+\n             if trait_defines_associated_type_named(def_id) {\n                 break Some(bound_vars.into_iter().collect());\n             }\n@@ -2703,7 +2710,14 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 | Scope::Supertrait { ref s, .. } => {\n                     scope = *s;\n                 }\n-                Scope::Root => bug!(\"In fn_like_elision without appropriate scope above\"),\n+                Scope::Root => {\n+                    // See issue #83907. Just bail out from looking inside.\n+                    self.tcx.sess.delay_span_bug(\n+                        rustc_span::DUMMY_SP,\n+                        \"In fn_like_elision without appropriate scope above\",\n+                    );\n+                    return;\n+                }\n             }\n         };\n         // While not strictly necessary, we gather anon lifetimes *before* actually"}, {"sha": "7f0ea730dd37bc53bb1307cb9cc34b5bf5289860", "filename": "src/test/ui/lifetimes/issue-83753-invalid-associated-type-supertrait-hrtb.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.rs?ref=3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "patch": "@@ -0,0 +1,8 @@\n+// check-fail\n+\n+struct Foo {}\n+impl Foo {\n+    fn bar(foo: Foo<Target = usize>) {}\n+    //~^ associated type bindings are not allowed here\n+}\n+fn main() {}"}, {"sha": "f7bdee6336e2d3eb527ac66de3adf46d7b7329a8", "filename": "src/test/ui/lifetimes/issue-83753-invalid-associated-type-supertrait-hrtb.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-83753-invalid-associated-type-supertrait-hrtb.stderr?ref=3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "patch": "@@ -0,0 +1,9 @@\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-83753-invalid-associated-type-supertrait-hrtb.rs:5:21\n+   |\n+LL |     fn bar(foo: Foo<Target = usize>) {}\n+   |                     ^^^^^^^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0229`."}, {"sha": "604687ce71126ed6fd748004f0e46672f3915b94", "filename": "src/test/ui/lifetimes/issue-83907-invalid-fn-like-path.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.rs?ref=3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "patch": "@@ -0,0 +1,7 @@\n+// check-fail\n+\n+static STATIC_VAR_FIVE: &One();\n+//~^ cannot find type\n+//~| free static item without body\n+\n+fn main() {}"}, {"sha": "e57933da558fd9e8dd287d7e2249811e7aa50668", "filename": "src/test/ui/lifetimes/issue-83907-invalid-fn-like-path.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ae5fed04c94be2f8591c7f4ab76f78ec882cd32/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-83907-invalid-fn-like-path.stderr?ref=3ae5fed04c94be2f8591c7f4ab76f78ec882cd32", "patch": "@@ -0,0 +1,17 @@\n+error: free static item without body\n+  --> $DIR/issue-83907-invalid-fn-like-path.rs:3:1\n+   |\n+LL | static STATIC_VAR_FIVE: &One();\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |                               |\n+   |                               help: provide a definition for the static: `= <expr>;`\n+\n+error[E0412]: cannot find type `One` in this scope\n+  --> $DIR/issue-83907-invalid-fn-like-path.rs:3:26\n+   |\n+LL | static STATIC_VAR_FIVE: &One();\n+   |                          ^^^ not found in this scope\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0412`."}]}