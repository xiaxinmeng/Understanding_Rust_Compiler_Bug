{"sha": "49b3cd700ee6bd4b68346144129886478246311c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjNjZDcwMGVlNmJkNGI2ODM0NjE0NDEyOTg4NjQ3ODI0NjMxMWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-03T01:16:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-03T01:18:06Z"}, "message": "rustc: Remove the premature optimization for nullary tag constructors, since it'll be no longer necessary once LLVM gets a unit type", "tree": {"sha": "0f39502f627226884001cd3b1ca517d4d175cd41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f39502f627226884001cd3b1ca517d4d175cd41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b3cd700ee6bd4b68346144129886478246311c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b3cd700ee6bd4b68346144129886478246311c", "html_url": "https://github.com/rust-lang/rust/commit/49b3cd700ee6bd4b68346144129886478246311c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b3cd700ee6bd4b68346144129886478246311c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a439f6ec682edffcfdb269a1cc3ba950f3c0fb25", "url": "https://api.github.com/repos/rust-lang/rust/commits/a439f6ec682edffcfdb269a1cc3ba950f3c0fb25", "html_url": "https://github.com/rust-lang/rust/commit/a439f6ec682edffcfdb269a1cc3ba950f3c0fb25"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "f73366f0e70b23f16e39da532abca21f6f1b679d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49b3cd700ee6bd4b68346144129886478246311c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b3cd700ee6bd4b68346144129886478246311c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=49b3cd700ee6bd4b68346144129886478246311c", "patch": "@@ -44,7 +44,7 @@ type glue_fns = rec(ValueRef activate_glue,\n                     ValueRef exit_task_glue,\n                     vec[ValueRef] upcall_glues);\n \n-tag arity { nullary; n_ary(uint); }\n+tag arity { nullary; n_ary; }\n type tag_info = rec(type_handle th,\n                     mutable vec[tup(ast.def_id,arity)] variants);\n \n@@ -1141,7 +1141,7 @@ fn trans_name(@block_ctxt cx, &ast.name n, &option.t[ast.def] dopt)\n                                     auto elems = vec(C_int(i));\n                                     ret tup(res(cx, C_struct(elems)), false);\n                                 }\n-                                case (n_ary(_)) {\n+                                case (n_ary) {\n                                     cx.fcx.ccx.sess.unimpl(\"n-ary tag \" +\n                                                            \"constructor in \" +\n                                                            \"trans\");\n@@ -1746,10 +1746,9 @@ fn resolve_tag_types_for_item(&@crate_ctxt cx, @ast.item i) -> @crate_ctxt {\n                         }\n \n                         variant_tys += vec(T_struct(lltys));\n-\n-                        arity_info = n_ary(n_ary_idx);\n-                        n_ary_idx += 1u;\n+                        arity_info = n_ary;\n                     } else {\n+                        variant_tys += vec(T_nil());\n                         arity_info = nullary;\n                     }\n "}]}