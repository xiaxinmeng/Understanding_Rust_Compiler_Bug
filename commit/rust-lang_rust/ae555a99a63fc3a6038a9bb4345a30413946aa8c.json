{"sha": "ae555a99a63fc3a6038a9bb4345a30413946aa8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTU1YTk5YTYzZmMzYTYwMzhhOWJiNDM0NWEzMDQxMzk0NmFhOGM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-27T18:28:57Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-07T00:05:58Z"}, "message": "libregex_macros: remove unnecessary `as_slice` calls", "tree": {"sha": "b5963934125c7108c7e467dd813247fb6738f496", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5963934125c7108c7e467dd813247fb6738f496"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae555a99a63fc3a6038a9bb4345a30413946aa8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae555a99a63fc3a6038a9bb4345a30413946aa8c", "html_url": "https://github.com/rust-lang/rust/commit/ae555a99a63fc3a6038a9bb4345a30413946aa8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae555a99a63fc3a6038a9bb4345a30413946aa8c/comments", "author": null, "committer": null, "parents": [{"sha": "89e6a81ef9831810a8e68189c6137040f76fb6b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/89e6a81ef9831810a8e68189c6137040f76fb6b5", "html_url": "https://github.com/rust-lang/rust/commit/89e6a81ef9831810a8e68189c6137040f76fb6b5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4df8819774319e782e71a96affd38e3fb26aec4a", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae555a99a63fc3a6038a9bb4345a30413946aa8c/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae555a99a63fc3a6038a9bb4345a30413946aa8c/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=ae555a99a63fc3a6038a9bb4345a30413946aa8c", "patch": "@@ -115,7 +115,7 @@ impl<'a> NfaGen<'a> {\n         // expression returned.\n         let num_cap_locs = 2 * self.prog.num_captures();\n         let num_insts = self.prog.insts.len();\n-        let cap_names = self.vec_expr(self.names.as_slice().iter(),\n+        let cap_names = self.vec_expr(self.names.iter(),\n             |cx, name| match *name {\n                 Some(ref name) => {\n                     let name = name.as_slice();\n@@ -125,14 +125,14 @@ impl<'a> NfaGen<'a> {\n             }\n         );\n         let prefix_anchor =\n-            match self.prog.insts.as_slice()[1] {\n+            match self.prog.insts[1] {\n                 EmptyBegin(flags) if flags & FLAG_MULTI == 0 => true,\n                 _ => false,\n             };\n         let init_groups = self.vec_expr(range(0, num_cap_locs),\n                                         |cx, _| cx.expr_none(self.sp));\n \n-        let prefix_lit = Rc::new(self.prog.prefix.as_slice().as_bytes().to_vec());\n+        let prefix_lit = Rc::new(self.prog.prefix.as_bytes().to_vec());\n         let prefix_bytes = self.cx.expr_lit(self.sp, ast::LitBinary(prefix_lit));\n \n         let check_prefix = self.check_prefix();"}]}