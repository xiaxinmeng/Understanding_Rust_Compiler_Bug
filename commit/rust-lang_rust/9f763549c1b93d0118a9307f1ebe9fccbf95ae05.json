{"sha": "9f763549c1b93d0118a9307f1ebe9fccbf95ae05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNzYzNTQ5YzFiOTNkMDExOGE5MzA3ZjFlYmU5ZmNjYmY5NWFlMDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-09-16T11:28:08Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-09-16T11:28:08Z"}, "message": "Make use of Travis's conditional jobs.", "tree": {"sha": "c74d7b3c1b2328b7f893d84f7813c3b085cadc2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c74d7b3c1b2328b7f893d84f7813c3b085cadc2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f763549c1b93d0118a9307f1ebe9fccbf95ae05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJZvQrIAAoJEP72yAUdDgE8qgcP/jXVqDZ1HiGpHffpUfihXCaG\nftLqTn5/1EXInPzEDD98Dht4XS2XiyP0VhOMuANfj5Kd2cXhINQN/petYi/tX71C\nh8zQR9b4oSoby3dOVHRN7mHsY/kiu9XTjgWz9w1Pog2J8/xYDTQJQqkgtOWRCAHf\nOCymkdloJrOEGAykQXMasrB3fLaDi0yRJaPitmI+QhkvHvpFC5kklK4BDThFxyJA\nWA2PddgqUD7yamPp8yyXK54jcv98vhojuD7sAD0CYAyqeGt88qsQWwr41NLHWZck\nsAcA7idXley6JnVWkSdKYqxDo/r1IL/oG7wEVN7XNwb2L2ca84w1SLNXEaKL+WTD\nSOzQc24m+uk5fQdS/+ChxFqxDeuQ6+5mgexCFo1GI7zspp82QqC1/wod0u3nzrs2\nQhkNgVN/wK6Gdezbl4IhShtRRDgCcGR2w30OvTJbob/lTi+9cjGVn0+MLycjKAU1\n5kXGyUc3O61FsliziBJ+u5cV+80RUOKvSnpVYMOJNX42GFvuspY0NaK6iOZOARR6\ncwr0BD/EbjcFvi41qYe4l8gu8TUIvgJVpOMMytDHgPYBT0uoIzAYf+eS6+02kGiu\nMT8jILi8l3E7G1wXdy5a/RXwloPlPs6tNhztkd6mfLnc4pDhGxKBVaeT2Pqpxm6j\nqxPyRUUGKPlQKvtMukBU\n=a1Ro\n-----END PGP SIGNATURE-----", "payload": "tree c74d7b3c1b2328b7f893d84f7813c3b085cadc2d\nparent 3a7ab6cdd1526caf84b2fd1cf0ac5d440d27af6c\nauthor kennytm <kennytm@gmail.com> 1505561288 +0800\ncommitter kennytm <kennytm@gmail.com> 1505561288 +0800\n\nMake use of Travis's conditional jobs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f763549c1b93d0118a9307f1ebe9fccbf95ae05", "html_url": "https://github.com/rust-lang/rust/commit/9f763549c1b93d0118a9307f1ebe9fccbf95ae05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f763549c1b93d0118a9307f1ebe9fccbf95ae05/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7ab6cdd1526caf84b2fd1cf0ac5d440d27af6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7ab6cdd1526caf84b2fd1cf0ac5d440d27af6c", "html_url": "https://github.com/rust-lang/rust/commit/3a7ab6cdd1526caf84b2fd1cf0ac5d440d27af6c"}], "stats": {"total": 82, "additions": 52, "deletions": 30}, "files": [{"sha": "5bbacd5b0d7f3a772612f4568788dabc7630e2a5", "filename": ".travis.yml", "status": "modified", "additions": 52, "deletions": 30, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/9f763549c1b93d0118a9307f1ebe9fccbf95ae05/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9f763549c1b93d0118a9307f1ebe9fccbf95ae05/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=9f763549c1b93d0118a9307f1ebe9fccbf95ae05", "patch": "@@ -12,14 +12,19 @@ matrix:\n   fast_finish: true\n   include:\n     # Images used in testing PR and try-build should be run first.\n-    - env: IMAGE=x86_64-gnu-llvm-3.7 ALLOW_PR=1 RUST_BACKTRACE=1\n-    - env: IMAGE=dist-x86_64-linux DEPLOY=1 ALLOW_TRY=1\n+    - env: IMAGE=x86_64-gnu-llvm-3.7 RUST_BACKTRACE=1\n+      if: type = pull_request OR branch = auto\n+\n+    - env: IMAGE=dist-x86_64-linux DEPLOY=1\n+      if: branch = try OR branch = auto\n \n     # \"alternate\" deployments, these are \"nightlies\" but don't have assertions\n     # turned on, they're deployed to a different location primarily for projects\n     # which are stuck on nightly and don't want llvm assertions in the artifacts\n     # that they use.\n     - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n+      if: branch = auto\n+\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler\"\n@@ -31,6 +36,7 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n       os: osx\n       osx_image: xcode7\n+      if: branch = auto\n \n     # macOS builders. These are placed near the beginning because they are very\n     # slow to run.\n@@ -50,6 +56,8 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n       os: osx\n       osx_image: xcode8.2\n+      if: branch = auto\n+\n     - env: >\n         RUST_CHECK_TARGET=check\n         RUST_CONFIGURE_ARGS=--build=i686-apple-darwin\n@@ -61,6 +69,7 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n       os: osx\n       osx_image: xcode8.2\n+      if: branch = auto\n \n     # OSX builders producing releases. These do not run the full test suite and\n     # just produce a bunch of artifacts.\n@@ -79,6 +88,8 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n       os: osx\n       osx_image: xcode7\n+      if: branch = auto\n+\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-extended --enable-sanitizers --enable-profiler\"\n@@ -90,42 +101,77 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n       os: osx\n       osx_image: xcode7\n+      if: branch = auto\n \n     # Linux builders, remaining docker images\n     - env: IMAGE=arm-android\n+      if: branch = auto\n     - env: IMAGE=armhf-gnu\n+      if: branch = auto\n     - env: IMAGE=cross DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-aarch64-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-android DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-arm-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-armhf-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-armv7-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-fuchsia DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-i686-freebsd DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-i686-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-mips-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-mips64-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-mips64el-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-mipsel-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-powerpc-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-s390x-linux DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-x86_64-musl DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n+      if: branch = auto\n     - env: IMAGE=asmjs\n+      if: branch = auto\n     - env: IMAGE=i686-gnu\n+      if: branch = auto\n     - env: IMAGE=i686-gnu-nopt\n+      if: branch = auto\n     # - env: IMAGE=wasm32 issue 42646\n+    #   if: branch = auto\n     - env: IMAGE=x86_64-gnu\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-full-bootstrap\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-aux\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-debug\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-nopt\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-distcheck\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-incremental\n+      if: branch = auto\n \n env:\n   global:\n@@ -135,34 +181,11 @@ env:\n     - secure: \"j96XxTVOSUf4s4r4htIxn/fvIa5DWbMgLqWl7r8z2QfgUwscmkMXAwXuFNc7s7bGTpV/+CgDiMFFM6BAFLGKutytIF6oA02s9b+usQYnM0th7YQ2AIgm9GtMTJCJp4AoyfFmh8F2faUICBZlfVLUJ34udHEe35vOklix+0k4WDo=\"\n \n before_install:\n-  # If we are building a pull request, do the build if $ALLOW_PR == 1\n-  # Otherwise, do the build if we are on the auto branch, or the try branch and $ALLOW_TRY == 1\n-  - >\n-    if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]]; then\n-        if [[ \"$ALLOW_PR\" == \"1\" ]]; then\n-            export SKIP_BUILD=false;\n-        else\n-            export SKIP_BUILD=true;\n-        fi;\n-    elif [[ \"$TRAVIS_BRANCH\" == \"auto\" || ( \"$ALLOW_TRY\" == \"1\" && \"$TRAVIS_BRANCH\" == \"try\" ) ]]; then\n-        export SKIP_BUILD=false;\n-    else\n-        export SKIP_BUILD=true;\n-    fi\n-  - >\n-    if [[ \"$SKIP_BUILD\" == false ]]; then\n-      zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n-    fi\n+  - zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n   - mkdir -p $HOME/rustsrc\n \n install:\n-  - >\n-    if [[ \"$SKIP_BUILD\" == true ]]; then\n-      echo echo skipping, not a full build > $HOME/stamp &&\n-        chmod +x $HOME/stamp &&\n-        export PATH=$PATH:$HOME;\n-    else\n-      case \"$TRAVIS_OS_NAME\" in\n+  - case \"$TRAVIS_OS_NAME\" in\n         linux)\n           travis_retry curl -fo $HOME/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-unknown-linux-musl &&\n             chmod +x $HOME/stamp &&\n@@ -178,8 +201,7 @@ install:\n           travis_retry curl -fo /usr/local/bin/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-apple-darwin &&\n             chmod +x /usr/local/bin/stamp\n           ;;\n-      esac\n-    fi\n+    esac\n \n before_script:\n   - >\n@@ -284,7 +306,7 @@ deploy:\n       secure: \"kUGd3t7JcVWFESgIlzvsM8viZgCA9Encs3creW0xLJaLSeI1iVjlJK4h/2/nO6y224AFrh/GUfsNr4/4AlxPuYb8OU5oC5Lv+Ff2JiRDYtuNpyQSKAQp+bRYytWMtrmhja91h118Mbm90cUfcLPwkdiINgJNTXhPKg5Cqu3VYn0=\"\n     on:\n       branch: try\n-      condition: $DEPLOY = 1 && $ALLOW_TRY = 1\n+      condition: $DEPLOY = 1\n \n   # this is the same as the above deployment provider except that it uploads to\n   # a slightly different directory and has a different trigger"}]}