{"sha": "3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "node_id": "C_kwDOAAsO6NoAKDNjMTg0ZGIzODZlZTNlMWM0YTlhZTFiNDY4MzZkMjlkNjU3ZDVmNDM", "commit": {"author": {"name": "Daniel Paoliello", "email": "danpao@microsoft.com", "date": "2022-09-12T21:03:19Z"}, "committer": {"name": "Daniel Paoliello", "email": "danpao@microsoft.com", "date": "2022-09-12T21:03:19Z"}, "message": "Fix raw-dylib with link_name", "tree": {"sha": "dcf62922b62cc3472ba5cde9b0512b5bf0b67792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcf62922b62cc3472ba5cde9b0512b5bf0b67792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "html_url": "https://github.com/rust-lang/rust/commit/3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/comments", "author": {"login": "dpaoliello", "id": 10580822, "node_id": "MDQ6VXNlcjEwNTgwODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10580822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpaoliello", "html_url": "https://github.com/dpaoliello", "followers_url": "https://api.github.com/users/dpaoliello/followers", "following_url": "https://api.github.com/users/dpaoliello/following{/other_user}", "gists_url": "https://api.github.com/users/dpaoliello/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpaoliello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpaoliello/subscriptions", "organizations_url": "https://api.github.com/users/dpaoliello/orgs", "repos_url": "https://api.github.com/users/dpaoliello/repos", "events_url": "https://api.github.com/users/dpaoliello/events{/privacy}", "received_events_url": "https://api.github.com/users/dpaoliello/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpaoliello", "id": 10580822, "node_id": "MDQ6VXNlcjEwNTgwODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10580822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpaoliello", "html_url": "https://github.com/dpaoliello", "followers_url": "https://api.github.com/users/dpaoliello/followers", "following_url": "https://api.github.com/users/dpaoliello/following{/other_user}", "gists_url": "https://api.github.com/users/dpaoliello/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpaoliello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpaoliello/subscriptions", "organizations_url": "https://api.github.com/users/dpaoliello/orgs", "repos_url": "https://api.github.com/users/dpaoliello/repos", "events_url": "https://api.github.com/users/dpaoliello/events{/privacy}", "received_events_url": "https://api.github.com/users/dpaoliello/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f115e3cd239af753aeb398a114fa321a3ce584b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f115e3cd239af753aeb398a114fa321a3ce584b", "html_url": "https://github.com/rust-lang/rust/commit/7f115e3cd239af753aeb398a114fa321a3ce584b"}], "stats": {"total": 144, "additions": 140, "deletions": 4}, "files": [{"sha": "5017329200ef198a5b56dd511a9bb21a8eaccfc0", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -495,14 +495,13 @@ impl<'tcx> Collector<'tcx> {\n             }\n         };\n \n-        let import_name_type = self\n-            .tcx\n-            .codegen_fn_attrs(item.id.def_id)\n+        let codegen_fn_attrs = self.tcx.codegen_fn_attrs(item.id.def_id);\n+        let import_name_type = codegen_fn_attrs\n             .link_ordinal\n             .map_or(import_name_type, |ord| Some(PeImportNameType::Ordinal(ord)));\n \n         DllImport {\n-            name: item.ident.name,\n+            name: codegen_fn_attrs.link_name.unwrap_or(item.ident.name),\n             import_name_type,\n             calling_convention,\n             span: item.span,"}, {"sha": "344d4a6bf5a8d0394f890700404c4939e815932c", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/extern.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Fextern.c", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Fextern.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Fextern.c?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -70,6 +70,11 @@ __declspec(dllexport) void __stdcall stdcall_fn_9(uint8_t x, double y) {\n     fflush(stdout);\n }\n \n+__declspec(dllexport) void __stdcall stdcall_fn_10(int i) {\n+    printf(\"stdcall_fn_10(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n __declspec(dllexport) void __fastcall fastcall_fn_1(int i) {\n     printf(\"fastcall_fn_1(%d)\\n\", i);\n     fflush(stdout);\n@@ -122,6 +127,11 @@ __declspec(dllexport) void __fastcall fastcall_fn_9(uint8_t x, double y) {\n     fflush(stdout);\n }\n \n+__declspec(dllexport) void __fastcall fastcall_fn_10(int i) {\n+    printf(\"fastcall_fn_10(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n // GCC doesn't support vectorcall: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89485\n #ifdef _MSC_VER\n __declspec(dllexport) void __vectorcall vectorcall_fn_1(int i) {\n@@ -175,4 +185,9 @@ __declspec(dllexport) void __vectorcall vectorcall_fn_9(uint8_t x, double y) {\n     printf(\"vectorcall_fn_9(%d, %.1f)\\n\", x, y);\n     fflush(stdout);\n }\n+\n+__declspec(dllexport) void __vectorcall vectorcall_fn_10(int i) {\n+    printf(\"vectorcall_fn_10(%d)\\n\", i);\n+    fflush(stdout);\n+}\n #endif"}, {"sha": "22f222c12c39bfd6e620f3a5f659dc9f7a662706", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -32,6 +32,8 @@ extern \"stdcall\" {\n     fn stdcall_fn_7(a: S2, b: i32);\n     fn stdcall_fn_8(a: S3, b: S3);\n     fn stdcall_fn_9(x: u8, y: f64);\n+    #[link_name = \"stdcall_fn_10\"]\n+    fn stdcall_fn_10_renamed(i: i32);\n }\n \n #[link(name = \"extern\", kind = \"raw-dylib\")]\n@@ -45,6 +47,8 @@ extern \"fastcall\" {\n     fn fastcall_fn_7(a: S2, b: i32);\n     fn fastcall_fn_8(a: S3, b: S3);\n     fn fastcall_fn_9(x: u8, y: f64);\n+    #[link_name = \"fastcall_fn_10\"]\n+    fn fastcall_fn_10_renamed(i: i32);\n }\n \n #[cfg(target_env = \"msvc\")]\n@@ -59,6 +63,8 @@ extern \"vectorcall\" {\n     fn vectorcall_fn_7(a: S2, b: i32);\n     fn vectorcall_fn_8(a: S3, b: S3);\n     fn vectorcall_fn_9(x: u8, y: f64);\n+    #[link_name = \"vectorcall_fn_10\"]\n+    fn vectorcall_fn_10_renamed(i: i32);\n }\n \n pub fn library_function(run_msvc_only: bool) {\n@@ -73,6 +79,7 @@ pub fn library_function(run_msvc_only: bool) {\n             stdcall_fn_7(S2 { x: 15, y: 16 }, 3);\n             stdcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] });\n             stdcall_fn_9(1, 3.0);\n+            stdcall_fn_10_renamed(19);\n \n             fastcall_fn_1(14);\n             fastcall_fn_2(16, 3.5);\n@@ -81,6 +88,7 @@ pub fn library_function(run_msvc_only: bool) {\n             fastcall_fn_6(Some(&S { x: 10, y: 12 }));\n             fastcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] });\n             fastcall_fn_9(1, 3.0);\n+            fastcall_fn_10_renamed(19);\n         } else {\n             // FIXME: 91167\n             // rustc generates incorrect code for the calls to fastcall_fn_5 and fastcall_fn_7\n@@ -100,6 +108,7 @@ pub fn library_function(run_msvc_only: bool) {\n                 vectorcall_fn_7(S2 { x: 15, y: 16 }, 3);\n                 vectorcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] });\n                 vectorcall_fn_9(1, 3.0);\n+                vectorcall_fn_10_renamed(19);\n             }\n         }\n     }"}, {"sha": "a216835c4b62f8dbb96592b5f83056ea200daaf9", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/output.msvc.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.msvc.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.msvc.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.msvc.txt?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -9,3 +9,4 @@ vectorcall_fn_6(S { x: 10, y: 12 })\n vectorcall_fn_7(S2 { x: 15, y: 16 }, 3)\n vectorcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] })\n vectorcall_fn_9(1, 3.0)\n+vectorcall_fn_10(19)"}, {"sha": "7622d31618b8061a6dd01e3003b031f2de4372e6", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/output.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -7,10 +7,12 @@ stdcall_fn_6(S { x: 10, y: 12 })\n stdcall_fn_7(S2 { x: 15, y: 16 }, 3)\n stdcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] })\n stdcall_fn_9(1, 3.0)\n+stdcall_fn_10(19)\n fastcall_fn_1(14)\n fastcall_fn_2(16, 3.5)\n fastcall_fn_3(3.5)\n fastcall_fn_4(1, 2, 3.0)\n fastcall_fn_6(S { x: 10, y: 12 })\n fastcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] })\n fastcall_fn_9(1, 3.0)\n+fastcall_fn_10(19)"}, {"sha": "5d695547d0f5e01693cf6d6b0cbd80adf1c186ae", "filename": "src/test/run-make/raw-dylib-c/extern_1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Fextern_1.c", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Fextern_1.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Fextern_1.c?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -21,3 +21,8 @@ __declspec(dllexport) void extern_fn_with_long_name() {\n     printf(\"extern_fn_with_long_name; got the rename\\n\");\n     fflush(stdout);\n }\n+\n+__declspec(dllexport) void extern_fn_4() {\n+    printf(\"extern_fn_4\\n\");\n+    fflush(stdout);\n+}"}, {"sha": "005ffcdda5c2ed84b76a5c32109a17c6fe9ff0e5", "filename": "src/test/run-make/raw-dylib-c/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -16,12 +16,15 @@ pub fn library_function() {\n         fn extern_fn_2();\n         fn print_extern_variable();\n         static mut extern_variable: i32;\n+        #[link_name = \"extern_fn_4\"]\n+        fn extern_fn_4_renamed();\n     }\n \n     unsafe {\n         extern_fn_1();\n         extern_fn_2();\n         extern_fn_3();\n+        extern_fn_4_renamed();\n         extern_variable = 42;\n         print_extern_variable();\n         extern_variable = -42;"}, {"sha": "cc970cef7bcaa63766ae39057c3c70631d0e8c98", "filename": "src/test/run-make/raw-dylib-c/output.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Foutput.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Foutput.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Foutput.txt?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -1,5 +1,6 @@\n extern_fn_1\n extern_fn_2; didn't get the rename\n extern_fn_3\n+extern_fn_4\n extern_variable value: 42\n extern_variable value: -42"}, {"sha": "a38849fc8130a3d3c186dcecca2e1eb4c133dbe0", "filename": "src/test/run-make/raw-dylib-import-name-type/driver.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fdriver.rs?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -1,8 +1,11 @@\n #![feature(raw_dylib)]\n+#![feature(abi_vectorcall)]\n \n #[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"undecorated\")]\n extern \"C\" {\n     fn cdecl_fn_undecorated(i: i32);\n+    #[link_name = \"cdecl_fn_undecorated2\"]\n+    fn cdecl_fn_undecorated_renamed(i: i32);\n     static mut extern_variable_undecorated: i32;\n }\n \n@@ -21,6 +24,8 @@ extern \"C\" {\n #[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"undecorated\")]\n extern \"stdcall\" {\n     fn stdcall_fn_undecorated(i: i32);\n+    #[link_name = \"stdcall_fn_undecorated2\"]\n+    fn stdcall_fn_undecorated_renamed(i: i32);\n }\n \n #[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"noprefix\")]\n@@ -36,6 +41,8 @@ extern \"stdcall\" {\n #[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"undecorated\")]\n extern \"fastcall\" {\n     fn fastcall_fn_undecorated(i: i32);\n+    #[link_name = \"fastcall_fn_undecorated2\"]\n+    fn fastcall_fn_undecorated_renamed(i: i32);\n }\n \n #[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"noprefix\")]\n@@ -48,6 +55,26 @@ extern \"fastcall\" {\n     fn fastcall_fn_decorated(i: i32);\n }\n \n+#[cfg(target_env = \"msvc\")]\n+#[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"undecorated\")]\n+extern \"vectorcall\" {\n+    fn vectorcall_fn_undecorated(i: i32);\n+    #[link_name = \"vectorcall_fn_undecorated2\"]\n+    fn vectorcall_fn_undecorated_renamed(i: i32);\n+}\n+\n+#[cfg(target_env = \"msvc\")]\n+#[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"noprefix\")]\n+extern \"vectorcall\" {\n+    fn vectorcall_fn_noprefix(i: i32);\n+}\n+\n+#[cfg(target_env = \"msvc\")]\n+#[link(name = \"extern\", kind = \"raw-dylib\", import_name_type = \"decorated\")]\n+extern \"vectorcall\" {\n+    fn vectorcall_fn_decorated(i: i32);\n+}\n+\n #[link(name = \"extern\", kind = \"raw-dylib\")]\n extern {\n     fn print_extern_variable_undecorated();\n@@ -58,14 +85,17 @@ extern {\n pub fn main() {\n     unsafe {\n         cdecl_fn_undecorated(1);\n+        cdecl_fn_undecorated_renamed(10);\n         cdecl_fn_noprefix(2);\n         cdecl_fn_decorated(3);\n \n         stdcall_fn_undecorated(4);\n+        stdcall_fn_undecorated_renamed(14);\n         stdcall_fn_noprefix(5);\n         stdcall_fn_decorated(6);\n \n         fastcall_fn_undecorated(7);\n+        fastcall_fn_undecorated_renamed(17);\n         fastcall_fn_noprefix(8);\n         fastcall_fn_decorated(9);\n \n@@ -75,5 +105,21 @@ pub fn main() {\n         print_extern_variable_noprefix();\n         extern_variable_decorated = 44;\n         print_extern_variable_decorated();\n+\n+        // GCC doesn't support vectorcall: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89485\n+        #[cfg(target_env = \"msvc\")]\n+        {\n+            vectorcall_fn_undecorated(10);\n+            vectorcall_fn_undecorated_renamed(20);\n+            vectorcall_fn_noprefix(11);\n+            vectorcall_fn_decorated(12);\n+        }\n+        #[cfg(not(target_env = \"msvc\"))]\n+        {\n+            println!(\"vectorcall_fn_undecorated(10)\");\n+            println!(\"vectorcall_fn_undecorated2(20)\");\n+            println!(\"vectorcall_fn_noprefix(11)\");\n+            println!(\"vectorcall_fn_decorated(12)\");\n+        }\n     }\n }"}, {"sha": "195126d51294ccb58d47eb8d894286b06723fe12", "filename": "src/test/run-make/raw-dylib-import-name-type/extern.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.c", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.c?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -6,6 +6,11 @@ void _cdecl cdecl_fn_undecorated(int i) {\n     fflush(stdout);\n }\n \n+void _cdecl cdecl_fn_undecorated2(int i) {\n+    printf(\"cdecl_fn_undecorated2(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n void _cdecl cdecl_fn_noprefix(int i) {\n     printf(\"cdecl_fn_noprefix(%d)\\n\", i);\n     fflush(stdout);\n@@ -21,6 +26,11 @@ void __stdcall stdcall_fn_undecorated(int i) {\n     fflush(stdout);\n }\n \n+void __stdcall stdcall_fn_undecorated2(int i) {\n+    printf(\"stdcall_fn_undecorated2(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n void __stdcall stdcall_fn_noprefix(int i) {\n     printf(\"stdcall_fn_noprefix(%d)\\n\", i);\n     fflush(stdout);\n@@ -36,6 +46,11 @@ void __fastcall fastcall_fn_undecorated(int i) {\n     fflush(stdout);\n }\n \n+void __fastcall fastcall_fn_undecorated2(int i) {\n+    printf(\"fastcall_fn_undecorated2(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n void __fastcall fastcall_fn_noprefix(int i) {\n     printf(\"fastcall_fn_noprefix(%d)\\n\", i);\n     fflush(stdout);\n@@ -63,3 +78,26 @@ __declspec(dllexport) void print_extern_variable_decorated() {\n     printf(\"extern_variable_decorated value: %d\\n\", extern_variable_decorated);\n     fflush(stdout);\n }\n+\n+// GCC doesn't support vectorcall: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89485\n+#ifdef _MSC_VER\n+void __vectorcall vectorcall_fn_undecorated(int i) {\n+    printf(\"vectorcall_fn_undecorated(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n+void __vectorcall vectorcall_fn_undecorated2(int i) {\n+    printf(\"vectorcall_fn_undecorated2(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n+void __vectorcall vectorcall_fn_noprefix(int i) {\n+    printf(\"vectorcall_fn_noprefix(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+\n+void __vectorcall vectorcall_fn_decorated(int i) {\n+    printf(\"vectorcall_fn_decorated(%d)\\n\", i);\n+    fflush(stdout);\n+}\n+#endif"}, {"sha": "a523c959a4744c1d218642eb0863559331136e32", "filename": "src/test/run-make/raw-dylib-import-name-type/extern.gnu.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.gnu.def", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.gnu.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.gnu.def?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -1,11 +1,14 @@\n LIBRARY extern\n EXPORTS\n     cdecl_fn_undecorated\n+    cdecl_fn_undecorated2\n     cdecl_fn_noprefix\n     cdecl_fn_decorated\n     stdcall_fn_undecorated\n+    stdcall_fn_undecorated2\n     stdcall_fn_noprefix@4\n     fastcall_fn_undecorated\n+    fastcall_fn_undecorated2\n     @fastcall_fn_decorated@4\n \n     ;ld doesn't handle fully-decorated stdcall, or no-prefix fastcall"}, {"sha": "dbff32d4c90b0a68dede31c0181892e3df9aabd4", "filename": "src/test/run-make/raw-dylib-import-name-type/extern.msvc.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.msvc.def", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.msvc.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Fextern.msvc.def?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -1,12 +1,19 @@\n LIBRARY extern\n EXPORTS\n     cdecl_fn_undecorated\n+    cdecl_fn_undecorated2\n     cdecl_fn_noprefix\n     cdecl_fn_decorated\n     stdcall_fn_undecorated\n+    stdcall_fn_undecorated2\n     _stdcall_fn_decorated@4\n     fastcall_fn_undecorated\n+    fastcall_fn_undecorated2\n     @fastcall_fn_decorated@4\n+    vectorcall_fn_undecorated\n+    vectorcall_fn_undecorated2\n+    vectorcall_fn_decorated@@4\n+    vectorcall_fn_noprefix@@4\n \n     ;MSVC doesn't seem to recognize the \"no prefix\" syntax.\n     stdcall_fn_noprefix@4=_stdcall_fn_noprefix@4"}, {"sha": "707faf403aecab506d2a0f4ae428212b8b26518c", "filename": "src/test/run-make/raw-dylib-import-name-type/output.txt", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Foutput.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3c184db386ee3e1c4a9ae1b46836d29d657d5f43/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Foutput.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-import-name-type%2Foutput.txt?ref=3c184db386ee3e1c4a9ae1b46836d29d657d5f43", "patch": "@@ -1,12 +1,19 @@\n cdecl_fn_undecorated(1)\n+cdecl_fn_undecorated2(10)\n cdecl_fn_noprefix(2)\n cdecl_fn_decorated(3)\n stdcall_fn_undecorated(4)\n+stdcall_fn_undecorated2(14)\n stdcall_fn_noprefix(5)\n stdcall_fn_decorated(6)\n fastcall_fn_undecorated(7)\n+fastcall_fn_undecorated2(17)\n fastcall_fn_noprefix(8)\n fastcall_fn_decorated(9)\n extern_variable_undecorated value: 42\n extern_variable_noprefix value: 43\n extern_variable_decorated value: 44\n+vectorcall_fn_undecorated(10)\n+vectorcall_fn_undecorated2(20)\n+vectorcall_fn_noprefix(11)\n+vectorcall_fn_decorated(12)"}]}