{"sha": "e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YmYwNDI4ZDEzNGU2ZjljMWZlNTQ4MzlmMjQ5YzYxNmI2YjBiMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-25T02:42:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-25T02:42:58Z"}, "message": "Auto merge of #49284 - alexcrichton:use-our-own-cache, r=kennytm\n\nci: Don't use Travis caches for docker images\n\nThis commit moves away from caching on Travis to our own caching on S3 for\ncaching docker layers between builds. Unfortunately the Travis caches have over\ntime had a few critical pain points:\n\n* Caches are only updated for successful builds, meaning that if a build times\n  out or fails in a different location the sucessfully-created docker images\n  isn't always cached. While this makes sense as a general rule of caches it\n  hurts our use cases.\n\n* Caches are per-branch and builder which means that we don't have a separate\n  cache on each release channel. All our merges go through the `auto` branch\n  which means that they're all sharing the same cache, even those for merging to\n  master/beta. This means that PRs which switch between master/beta will keep\n  rebuilting and having cache misses.\n\n* Caches have historically been invaliated somewhat regularly a little more\n  aggressively than we'd want (I think).\n\n* We don't always need to update the contents of the cache if the Docker image\n  didn't change at all, and saving off the docker layers can sometimes be quite\n  expensive.\n\nFor all these reasons this commit drops the usage of Travis's built-in caching\nsupport. Instead our own caching is used by storing blobs to S3. Normally this\nwould be a very risky endeavour but we're basically priming a cache for a cache\n(docker) so if we get this wrong the failure mode is longer builds, not stale\ncaches. We'll notice that pretty quickly and hopefully fix it!\n\nThe logic here is inserted directly into the `src/ci/docker/run.sh` script to\ndownload an image based on a shasum of the `Dockerfile` and other assorted files.\nThis blob, if found, is loaded into docker and we record what layers were\ninserted. After docker finishes the build (hopefully quickly with lots of cache\nhits) we then see the sha of the final image. If it's one of the layers we\nloaded then there's no need to update the cache. Otherwise we upload our layers\nto the global cache, possibly overwriting what we previously just downloaded.\n\nThis is hopefully a step towards mitigating #49278 although it doesn't\ncompletely fix it as it means we'll still probably have to retry builds that\nbust the cache.", "tree": {"sha": "5132e27e525838437a688b3f5c6ea73f33e7ce38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5132e27e525838437a688b3f5c6ea73f33e7ce38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "html_url": "https://github.com/rust-lang/rust/commit/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e2bcb613c58ed2aeb86fdb07f470440f94f205", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e2bcb613c58ed2aeb86fdb07f470440f94f205", "html_url": "https://github.com/rust-lang/rust/commit/77e2bcb613c58ed2aeb86fdb07f470440f94f205"}, {"sha": "a09e9e9a2a0977d164173d8d08aac9fc3c9c3b4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09e9e9a2a0977d164173d8d08aac9fc3c9c3b4b", "html_url": "https://github.com/rust-lang/rust/commit/a09e9e9a2a0977d164173d8d08aac9fc3c9c3b4b"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "091a5abdaa21653cd5cb30ce8ee8518b74804f6c", "filename": ".travis.yml", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "patch": "@@ -183,7 +183,6 @@ matrix:\n       if: branch = master AND type = push\n       before_install: []\n       install: []\n-      cache: false\n       sudo: false\n       script:\n         MESSAGE_FILE=$(mktemp -t msg.XXXXXX);\n@@ -201,7 +200,12 @@ env:\n     - secure: \"cFh8thThqEJLC98XKI5pfqflUzOlxsYPRW20AWRaYOOgYHPTiGWypTXiPbGSKaeAXTZoOA+DpQtEmefc0U6lt9dHc7a/MIaK6isFurjlnKYiLOeTruzyu1z7PWCeZ/jKXsU2RK/88DBtlNwfMdaMIeuKj14IVfpepPPL71ETbuk=\"\n \n before_install:\n-  - zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n+  # We'll use the AWS cli to download/upload cached docker layers, so install\n+  # that here.\n+  - if [ \"$TRAVIS_OS_NAME\" = linux ]; then\n+      pip install --user awscli;\n+      export PATH=$PATH:$HOME/.local/bin;\n+    fi\n   - mkdir -p $HOME/rustsrc\n   # FIXME(#46924): these two commands are required to enable IPv6,\n   # they shouldn't exist, please revert once more official solutions appeared.\n@@ -286,23 +290,9 @@ after_failure:\n   # it happened\n   - dmesg | grep -i kill\n \n-# Save tagged docker images we created and load them if they're available\n-# Travis saves caches whether the build failed or not, nuke rustsrc if\n-# the failure was while updating it (as it may be in a bad state)\n-# https://github.com/travis-ci/travis-ci/issues/4472\n-before_cache:\n-  - docker history -q rust-ci |\n-    grep -v missing |\n-    xargs docker save |\n-    gzip > $HOME/docker/rust-ci.tar.gz\n-\n notifications:\n   email: false\n \n-cache:\n-  directories:\n-    - $HOME/docker\n-\n before_deploy:\n   - mkdir -p deploy/$TRAVIS_COMMIT\n   - >"}, {"sha": "2946cf7fc503fe314898f2f045321fb25cec4cf6", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e5bf0428d134e6f9c1fe54839f249c616b6b0b0b/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=e5bf0428d134e6f9c1fe54839f249c616b6b0b0b", "patch": "@@ -27,6 +27,21 @@ travis_fold start build_docker\n travis_time_start\n \n if [ -f \"$docker_dir/$image/Dockerfile\" ]; then\n+    if [ \"$CI\" != \"\" ]; then\n+      cksum=$(find $docker_dir/$image $docker_dir/scripts -type f | \\\n+        sort | \\\n+        xargs cat | \\\n+        sha512sum | \\\n+        awk '{print $1}')\n+      s3url=\"s3://$SCCACHE_BUCKET/docker/$cksum\"\n+      url=\"https://s3-us-west-1.amazonaws.com/$SCCACHE_BUCKET/docker/$cksum\"\n+      echo \"Attempting to download $s3url\"\n+      set +e\n+      loaded_images=$(curl $url | docker load | sed 's/.* sha/sha/')\n+      set -e\n+      echo \"Downloaded containers:\\n$loaded_images\"\n+    fi\n+\n     dockerfile=\"$docker_dir/$image/Dockerfile\"\n     if [ -x /usr/bin/cygpath ]; then\n         context=\"`cygpath -w $docker_dir`\"\n@@ -40,6 +55,23 @@ if [ -f \"$docker_dir/$image/Dockerfile\" ]; then\n       -t rust-ci \\\n       -f \"$dockerfile\" \\\n       \"$context\"\n+\n+    if [ \"$s3url\" != \"\" ]; then\n+      digest=$(docker inspect rust-ci --format '{{.Id}}')\n+      echo \"Built container $digest\"\n+      if ! grep -q \"$digest\" <(echo \"$loaded_images\"); then\n+        echo \"Uploading finished image to $s3url\"\n+        set +e\n+        docker history -q rust-ci | \\\n+          grep -v missing | \\\n+          xargs docker save | \\\n+          gzip | \\\n+          aws s3 cp - $s3url\n+        set -e\n+      else\n+        echo \"Looks like docker image is the same as before, not uploading\"\n+      fi\n+    fi\n elif [ -f \"$docker_dir/disabled/$image/Dockerfile\" ]; then\n     if [ -n \"$TRAVIS_OS_NAME\" ]; then\n         echo Cannot run disabled images on travis!"}]}