{"sha": "5ce420ac8487d991ead53f51ae2d45ef33d4f94e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTQyMGFjODQ4N2Q5OTFlYWQ1M2Y1MWFlMmQ0NWVmMzNkNGY5NGU=", "commit": {"author": {"name": "Daniel Silverstone", "email": "dsilvers@digital-scurf.org", "date": "2020-12-31T09:03:34Z"}, "committer": {"name": "Daniel Silverstone", "email": "dsilvers@digital-scurf.org", "date": "2020-12-31T10:25:51Z"}, "message": "handle_formatting: Notice if rustfmt is missing and report\n\nIn an attempt to fix #6052 and #4249 this attempts to detect\nif rustfmt is a rustup proxy which isn't installed, and reports\nthe error message to the user for them to fix.\n\nIn theory this ought to be memoised but for now it'll do as-is.\n\nFuture work might be to ask the user if they would like us to\ntrigger the installation (if possible).\n\nSigned-off-by: Daniel Silverstone <dsilvers@digital-scurf.org>", "tree": {"sha": "8414439a6141133dd2eb68ffd94f0ede306870f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8414439a6141133dd2eb68ffd94f0ede306870f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce420ac8487d991ead53f51ae2d45ef33d4f94e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFPBAABCgA5FiEEbMzlsXMGvNwXnPlUww30OfKYfXQFAl/tpy8bHGRzaWx2ZXJz\nQGRpZ2l0YWwtc2N1cmYub3JnAAoJEMMN9DnymH10CKkH/RU19g+JZ4mAqI/e2t2I\nS/WnyXul8avDZi4tdCJ8j0Qb1AlY413IIWH+nwAL1E7YDnUSOFMrzR33B+FO127c\no3u/px+fy7JMVO0MJemce4BIQRPN0zzN9MmR9vcc8v7WMCEsgug/lqIznBZWcLYl\nhldoVB9L8mj0A/W3tirDsRMxbf+NA033c/ihet5BPy61uNCxRIBnyLCtmlEMXeOb\nnswctJCx9AVUi/DmXrVWpRrollVZjfGBEdv1ajA7heqwVaAdXUA5zoR4iHRrmfyw\nzXIGDatKNEQhR4RAexpAov1OjMzG0fmpvLzHfRMYbrIqO5ibulLD/ispMYz/2QfH\ndqk=\n=zl/0\n-----END PGP SIGNATURE-----", "payload": "tree 8414439a6141133dd2eb68ffd94f0ede306870f3\nparent 558206f70e418730967fd690f5f219993de071bc\nauthor Daniel Silverstone <dsilvers@digital-scurf.org> 1609405414 +0000\ncommitter Daniel Silverstone <dsilvers@digital-scurf.org> 1609410351 +0000\n\nhandle_formatting: Notice if rustfmt is missing and report\n\nIn an attempt to fix #6052 and #4249 this attempts to detect\nif rustfmt is a rustup proxy which isn't installed, and reports\nthe error message to the user for them to fix.\n\nIn theory this ought to be memoised but for now it'll do as-is.\n\nFuture work might be to ask the user if they would like us to\ntrigger the installation (if possible).\n\nSigned-off-by: Daniel Silverstone <dsilvers@digital-scurf.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce420ac8487d991ead53f51ae2d45ef33d4f94e", "html_url": "https://github.com/rust-lang/rust/commit/5ce420ac8487d991ead53f51ae2d45ef33d4f94e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce420ac8487d991ead53f51ae2d45ef33d4f94e/comments", "author": {"login": "kinnison", "id": 1469421, "node_id": "MDQ6VXNlcjE0Njk0MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1469421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinnison", "html_url": "https://github.com/kinnison", "followers_url": "https://api.github.com/users/kinnison/followers", "following_url": "https://api.github.com/users/kinnison/following{/other_user}", "gists_url": "https://api.github.com/users/kinnison/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinnison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinnison/subscriptions", "organizations_url": "https://api.github.com/users/kinnison/orgs", "repos_url": "https://api.github.com/users/kinnison/repos", "events_url": "https://api.github.com/users/kinnison/events{/privacy}", "received_events_url": "https://api.github.com/users/kinnison/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kinnison", "id": 1469421, "node_id": "MDQ6VXNlcjE0Njk0MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1469421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinnison", "html_url": "https://github.com/kinnison", "followers_url": "https://api.github.com/users/kinnison/followers", "following_url": "https://api.github.com/users/kinnison/following{/other_user}", "gists_url": "https://api.github.com/users/kinnison/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinnison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinnison/subscriptions", "organizations_url": "https://api.github.com/users/kinnison/orgs", "repos_url": "https://api.github.com/users/kinnison/repos", "events_url": "https://api.github.com/users/kinnison/events{/privacy}", "received_events_url": "https://api.github.com/users/kinnison/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "558206f70e418730967fd690f5f219993de071bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/558206f70e418730967fd690f5f219993de071bc", "html_url": "https://github.com/rust-lang/rust/commit/558206f70e418730967fd690f5f219993de071bc"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "78411f6c0a25520906ca8473939cefbc44daf9f5", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ce420ac8487d991ead53f51ae2d45ef33d4f94e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce420ac8487d991ead53f51ae2d45ef33d4f94e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=5ce420ac8487d991ead53f51ae2d45ef33d4f94e", "patch": "@@ -861,16 +861,18 @@ pub(crate) fn handle_formatting(\n         }\n     };\n \n-    let mut rustfmt = rustfmt.stdin(Stdio::piped()).stdout(Stdio::piped()).spawn()?;\n+    let mut rustfmt =\n+        rustfmt.stdin(Stdio::piped()).stdout(Stdio::piped()).stderr(Stdio::piped()).spawn()?;\n \n     rustfmt.stdin.as_mut().unwrap().write_all(file.as_bytes())?;\n \n     let output = rustfmt.wait_with_output()?;\n     let captured_stdout = String::from_utf8(output.stdout)?;\n+    let captured_stderr = String::from_utf8(output.stderr).unwrap_or_default();\n \n     if !output.status.success() {\n         match output.status.code() {\n-            Some(1) => {\n+            Some(1) if !captured_stderr.contains(\"not installed\") => {\n                 // While `rustfmt` doesn't have a specific exit code for parse errors this is the\n                 // likely cause exiting with 1. Most Language Servers swallow parse errors on\n                 // formatting because otherwise an error is surfaced to the user on top of the\n@@ -886,8 +888,9 @@ pub(crate) fn handle_formatting(\n                     format!(\n                         r#\"rustfmt exited with:\n                            Status: {}\n-                           stdout: {}\"#,\n-                        output.status, captured_stdout,\n+                           stdout: {}\n+                           stderr: {}\"#,\n+                        output.status, captured_stdout, captured_stderr,\n                     ),\n                 )\n                 .into());"}]}