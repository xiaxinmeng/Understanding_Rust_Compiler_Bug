{"sha": "d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "node_id": "C_kwDOAAsO6NoAKGQ5MDEzOGJlYzhmNDA2YjVjMDFjNmJlZDRjMGU1OTdkZjJmM2IwMGY", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-27T17:35:52Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-28T15:45:20Z"}, "message": "Remove now-unnecessary blanket impl HIR check", "tree": {"sha": "0a9df6a701dced11bcc9e85eaa32172dcda17bed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a9df6a701dced11bcc9e85eaa32172dcda17bed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "html_url": "https://github.com/rust-lang/rust/commit/d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d90138bec8f406b5c01c6bed4c0e597df2f3b00f/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eae2026326058cb7021816d3630da1f8c47ebc6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eae2026326058cb7021816d3630da1f8c47ebc6d", "html_url": "https://github.com/rust-lang/rust/commit/eae2026326058cb7021816d3630da1f8c47ebc6d"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "6f4b87750ff858d1c6cba411e1bc64ddfc3b2332", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d90138bec8f406b5c01c6bed4c0e597df2f3b00f/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d90138bec8f406b5c01c6bed4c0e597df2f3b00f/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "patch": "@@ -101,27 +101,6 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n \n                     cx.generated_synthetics.insert((ty, trait_def_id));\n \n-                    let hir_imp = impl_def_id.as_local()\n-                        .map(|local| cx.tcx.hir().expect_item(local))\n-                        .and_then(|item| if let hir::ItemKind::Impl(i) = &item.kind {\n-                            Some(i)\n-                        } else {\n-                            None\n-                        });\n-\n-                    let items = match hir_imp {\n-                        Some(imp) => imp\n-                            .items\n-                            .iter()\n-                            .map(|ii| cx.tcx.hir().impl_item(ii.id).clean(cx))\n-                            .collect::<Vec<_>>(),\n-                        None => cx.tcx\n-                            .associated_items(impl_def_id)\n-                            .in_definition_order()\n-                            .map(|x| x.clean(cx))\n-                            .collect::<Vec<_>>(),\n-                    };\n-\n                     impls.push(Item {\n                         name: None,\n                         attrs: Default::default(),\n@@ -138,7 +117,11 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                             // the post-inference `trait_ref`, as it's more accurate.\n                             trait_: Some(trait_ref.clean(cx)),\n                             for_: ty.clean(cx),\n-                            items,\n+                            items: cx.tcx\n+                                .associated_items(impl_def_id)\n+                                .in_definition_order()\n+                                .map(|x| x.clean(cx))\n+                                .collect::<Vec<_>>(),\n                             polarity: ty::ImplPolarity::Positive,\n                             kind: ImplKind::Blanket(box trait_ref.self_ty().clean(cx)),\n                         }),"}]}