{"sha": "b3937ea862e15321e85537ac6bd63ad51099c23f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOTM3ZWE4NjJlMTUzMjFlODU1MzdhYzZiZDYzYWQ1MTA5OWMyM2Y=", "commit": {"author": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2017-02-09T18:58:48Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2017-02-09T18:58:48Z"}, "message": "Explicitly mention that `Vec::reserve` is based on len not capacity\n\nI spent a good chunk of time tracking down a buffer overrun bug that\nresulted from me mistakenly thinking that `reserve` was based on the\ncurrent capacity not the current length. It would be helpful if this\nwere called out explicitly in the docs.", "tree": {"sha": "026df22b927cde6cff787f1895f83a15c2a0bada", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/026df22b927cde6cff787f1895f83a15c2a0bada"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3937ea862e15321e85537ac6bd63ad51099c23f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3937ea862e15321e85537ac6bd63ad51099c23f", "html_url": "https://github.com/rust-lang/rust/commit/b3937ea862e15321e85537ac6bd63ad51099c23f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3937ea862e15321e85537ac6bd63ad51099c23f/comments", "author": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199", "html_url": "https://github.com/rust-lang/rust/commit/e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "3873b3535a07b5bacc8d61e3091ea2faf5ff4bef", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3937ea862e15321e85537ac6bd63ad51099c23f/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3937ea862e15321e85537ac6bd63ad51099c23f/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=b3937ea862e15321e85537ac6bd63ad51099c23f", "patch": "@@ -437,7 +437,9 @@ impl<T> Vec<T> {\n \n     /// Reserves capacity for at least `additional` more elements to be inserted\n     /// in the given `Vec<T>`. The collection may reserve more space to avoid\n-    /// frequent reallocations.\n+    /// frequent reallocations. After calling `reserve`, capacity will be\n+    /// greater than or equal to `self.len() + additional`. Does nothing if\n+    /// capacity is already sufficient.\n     ///\n     /// # Panics\n     ///\n@@ -456,8 +458,9 @@ impl<T> Vec<T> {\n     }\n \n     /// Reserves the minimum capacity for exactly `additional` more elements to\n-    /// be inserted in the given `Vec<T>`. Does nothing if the capacity is already\n-    /// sufficient.\n+    /// be inserted in the given `Vec<T>`. After calling `reserve_exact`,\n+    /// capacity will be greater than or equal to `self.len() + additional`.\n+    /// Does nothing if the capacity is already sufficient.\n     ///\n     /// Note that the allocator may give the collection more space than it\n     /// requests. Therefore capacity can not be relied upon to be precisely"}]}