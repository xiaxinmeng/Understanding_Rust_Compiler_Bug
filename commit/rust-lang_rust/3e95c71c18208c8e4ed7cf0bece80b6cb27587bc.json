{"sha": "3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTVjNzFjMTgyMDhjOGU0ZWQ3Y2YwYmVjZTgwYjZjYjI3NTg3YmM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T09:51:36Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T14:43:50Z"}, "message": "Rollup merge of #49225 - QuietMisdreavus:all-the-features-all-the-time, r=alexcrichton\n\nwhitelist every target feature for rustdoc\n\nWhen https://github.com/rust-lang-nursery/stdsimd/pull/367 was attempted to be upstreamed, it failed to document on non-x86 targets because it made every intrinsic visible, even the ones on foreign arches. This change makes it so that whenever rustdoc asks for the target feature whitelist, it gets a list of every feature known to every arch in `rustc_trans/llvm_util.rs`.\n\nBefore pushing, i temporarily updated the `stdsimd` submodule to include the `doc(cfg)` change, generated documentation for `aarch64-unknown-linux-gnu`, and it completed without a problem. The generated `core::arch` docs contained complete submodules for all main arches.", "tree": {"sha": "f387eb8f4fb1b07cfa1ffe124cac6a7a523c3911", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f387eb8f4fb1b07cfa1ffe124cac6a7a523c3911"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzwSYACgkQ/vbIBR0O\nATz3lw//dUOyvDVgB9rv86YcHClzuT9J4WKU1vqMddOmM0jBFJ4stmkBFgN+t9R9\nn3OL+ync+CRQiguso7TIUjDHg1GTT3xmx51i5QosKasNjG0sp0uw7FiFfDx6OiVw\n+Kp7g4+sqykvDt/GIcO65+V0v7qmHNcsl+SUoC38jXRcklqIjcmNhglMWrpo8ivv\nq/2fY6cQdeaZ0D0NhFDqC9xaTG8EePWUw2y8dIVesOUd/fkoy0eeWGwUJ4e98eay\nAyjU/7lLSjdXgk8UxpsVsYYPztkmm6P4GqsBXLcwTGXL4BYKYLNTumtKH8k8wkhu\nXOKPC4vZMvYir9w3nJRQmRLsEdsGgdhLFq8OPBkN9ySHeH6exgT/vZ7S9DzjnCB5\npsqg2mtEIivenLUQxEWIZJeZ7aEiOosX5Rs8DDepkFR4vAX/W6EoZyjTEmzPv2Un\nBdX9qKlY1A+/T91T+KGJxhC3cjNLFEFH3kZVmRL143DgMGfwQIXaiwdrj6Mxpgg7\niZ6MpP4PnfHix6iRADZdtkyQPsn0+FYsxvx+03RyFaBrf9ADkIoj60pFBUhXWQ4H\nUynZlCy05+5LV++gI5ZImSj5KrJsHgB2e0W5gOjXS7j5yTLkzuOoqLPt5t5pZ4ZX\nngrxQyu3ZV4g9RQwTkEW1/SoU5twX3eeBojF/mZA/tdRGy+ZKNI=\n=5+AF\n-----END PGP SIGNATURE-----", "payload": "tree f387eb8f4fb1b07cfa1ffe124cac6a7a523c3911\nparent 346a46e9d65b62d43eda6de2a23620a38889a198\nparent 2ba41e9d7943912dafe2f508c97d4083249d97a4\nauthor kennytm <kennytm@gmail.com> 1521712296 +0800\ncommitter kennytm <kennytm@gmail.com> 1521729830 +0800\n\nRollup merge of #49225 - QuietMisdreavus:all-the-features-all-the-time, r=alexcrichton\n\nwhitelist every target feature for rustdoc\n\nWhen https://github.com/rust-lang-nursery/stdsimd/pull/367 was attempted to be upstreamed, it failed to document on non-x86 targets because it made every intrinsic visible, even the ones on foreign arches. This change makes it so that whenever rustdoc asks for the target feature whitelist, it gets a list of every feature known to every arch in `rustc_trans/llvm_util.rs`.\n\nBefore pushing, i temporarily updated the `stdsimd` submodule to include the `doc(cfg)` change, generated documentation for `aarch64-unknown-linux-gnu`, and it completed without a problem. The generated `core::arch` docs contained complete submodules for all main arches.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "html_url": "https://github.com/rust-lang/rust/commit/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "346a46e9d65b62d43eda6de2a23620a38889a198", "url": "https://api.github.com/repos/rust-lang/rust/commits/346a46e9d65b62d43eda6de2a23620a38889a198", "html_url": "https://github.com/rust-lang/rust/commit/346a46e9d65b62d43eda6de2a23620a38889a198"}, {"sha": "2ba41e9d7943912dafe2f508c97d4083249d97a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba41e9d7943912dafe2f508c97d4083249d97a4", "html_url": "https://github.com/rust-lang/rust/commit/2ba41e9d7943912dafe2f508c97d4083249d97a4"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "040d9455334bc9ede85ff33901506f72683c1be3", "filename": "src/librustc_trans/attributes.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc/src%2Flibrustc_trans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc/src%2Flibrustc_trans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fattributes.rs?ref=3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "patch": "@@ -148,9 +148,17 @@ fn cstr(s: &'static str) -> &CStr {\n pub fn provide(providers: &mut Providers) {\n     providers.target_features_whitelist = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(llvm_util::target_feature_whitelist(tcx.sess)\n-            .iter()\n-            .map(|c| c.to_string())\n-            .collect())\n+        if tcx.sess.opts.actually_rustdoc {\n+            // rustdoc needs to be able to document functions that use all the features, so\n+            // whitelist them all\n+            Lrc::new(llvm_util::all_known_features()\n+                .map(|c| c.to_string())\n+                .collect())\n+        } else {\n+            Lrc::new(llvm_util::target_feature_whitelist(tcx.sess)\n+                .iter()\n+                .map(|c| c.to_string())\n+                .collect())\n+        }\n     };\n }"}, {"sha": "5113b65a5c4700231f9e573711669abe549426ac", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e95c71c18208c8e4ed7cf0bece80b6cb27587bc/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "patch": "@@ -107,6 +107,20 @@ const POWERPC_WHITELIST: &'static [&'static str] = &[\"altivec\",\n \n const MIPS_WHITELIST: &'static [&'static str] = &[\"fp64\", \"msa\"];\n \n+/// When rustdoc is running, provide a list of all known features so that all their respective\n+/// primtives may be documented.\n+///\n+/// IMPORTANT: If you're adding another whitelist to the above lists, make sure to add it to this\n+/// iterator!\n+pub fn all_known_features() -> impl Iterator<Item=&'static str> {\n+    ARM_WHITELIST.iter().cloned()\n+        .chain(AARCH64_WHITELIST.iter().cloned())\n+        .chain(X86_WHITELIST.iter().cloned())\n+        .chain(HEXAGON_WHITELIST.iter().cloned())\n+        .chain(POWERPC_WHITELIST.iter().cloned())\n+        .chain(MIPS_WHITELIST.iter().cloned())\n+}\n+\n pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n     let arch = if sess.target.target.arch == \"x86_64\" {\n         \"x86\""}, {"sha": "bcb720e55861c38db47f2ebdf26b7198338cb39d", "filename": "src/stdsimd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstdsimd?ref=3e95c71c18208c8e4ed7cf0bece80b6cb27587bc", "patch": "@@ -1 +1 @@\n-Subproject commit ab9356f2af650815d339d77306f0d09c44d531ad\n+Subproject commit bcb720e55861c38db47f2ebdf26b7198338cb39d"}]}