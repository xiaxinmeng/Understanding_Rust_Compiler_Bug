{"sha": "75e4b8c8e93a2032b711903ba2ba0398b6f4115b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZTRiOGM4ZTkzYTIwMzJiNzExOTAzYmEyYmEwMzk4YjZmNDExNWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T04:57:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T04:57:47Z"}, "message": "syntax: Make span functions take args by copy. Eliminate some copy warnings", "tree": {"sha": "8f6440d7135c464e0754bcd06cb285062b873778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6440d7135c464e0754bcd06cb285062b873778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75e4b8c8e93a2032b711903ba2ba0398b6f4115b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75e4b8c8e93a2032b711903ba2ba0398b6f4115b", "html_url": "https://github.com/rust-lang/rust/commit/75e4b8c8e93a2032b711903ba2ba0398b6f4115b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75e4b8c8e93a2032b711903ba2ba0398b6f4115b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e86214830ac3152b2a12d200b8fd29cc4073d460", "url": "https://api.github.com/repos/rust-lang/rust/commits/e86214830ac3152b2a12d200b8fd29cc4073d460", "html_url": "https://github.com/rust-lang/rust/commit/e86214830ac3152b2a12d200b8fd29cc4073d460"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "76feba3954c77e976af693b7d4d1d435acb65ca7", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75e4b8c8e93a2032b711903ba2ba0398b6f4115b/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4b8c8e93a2032b711903ba2ba0398b6f4115b/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=75e4b8c8e93a2032b711903ba2ba0398b6f4115b", "patch": "@@ -1,15 +1,15 @@\n import codemap::span;\n import ast::*;\n \n-pure fn spanned<T: copy>(lo: uint, hi: uint, t: T) -> spanned<T> {\n+pure fn spanned<T>(lo: uint, hi: uint, +t: T) -> spanned<T> {\n     respan(mk_sp(lo, hi), t)\n }\n \n-pure fn respan<T: copy>(sp: span, t: T) -> spanned<T> {\n+pure fn respan<T>(sp: span, +t: T) -> spanned<T> {\n     {node: t, span: sp}\n }\n \n-pure fn dummy_spanned<T: copy>(t: T) -> spanned<T> {\n+pure fn dummy_spanned<T>(+t: T) -> spanned<T> {\n     respan(dummy_sp(), t)\n }\n "}]}