{"sha": "6f3ad27416b45acc7c947962f4585665d56fda30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmM2FkMjc0MTZiNDVhY2M3Yzk0Nzk2MmY0NTg1NjY1ZDU2ZmRhMzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T08:50:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T08:50:51Z"}, "message": "fmt", "tree": {"sha": "f69129eb384c62480330e476fdb959cf853ddd63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69129eb384c62480330e476fdb959cf853ddd63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f3ad27416b45acc7c947962f4585665d56fda30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3ad27416b45acc7c947962f4585665d56fda30", "html_url": "https://github.com/rust-lang/rust/commit/6f3ad27416b45acc7c947962f4585665d56fda30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f3ad27416b45acc7c947962f4585665d56fda30/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "952066f545c67c2c384ac0197dbf815b551f3720", "url": "https://api.github.com/repos/rust-lang/rust/commits/952066f545c67c2c384ac0197dbf815b551f3720", "html_url": "https://github.com/rust-lang/rust/commit/952066f545c67c2c384ac0197dbf815b551f3720"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b26705cb704ff682edd271f27d81cae6038d5956", "filename": "benches/helpers/miri_helper.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f3ad27416b45acc7c947962f4585665d56fda30/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3ad27416b45acc7c947962f4585665d56fda30/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=6f3ad27416b45acc7c947962f4585665d56fda30", "patch": "@@ -20,8 +20,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls<'_> {\n         compiler.session().abort_if_errors();\n \n         queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n-            let (entry_def_id, _) =\n-                tcx.entry_fn(()).expect(\"no main or start function found\");\n+            let (entry_def_id, _) = tcx.entry_fn(()).expect(\"no main or start function found\");\n \n             self.bencher.iter(|| {\n                 let config = miri::MiriConfig::default();"}]}