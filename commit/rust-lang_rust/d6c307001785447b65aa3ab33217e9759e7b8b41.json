{"sha": "d6c307001785447b65aa3ab33217e9759e7b8b41", "node_id": "C_kwDOAAsO6NoAKGQ2YzMwNzAwMTc4NTQ0N2I2NWFhM2FiMzMyMTdlOTc1OWU3YjhiNDE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-28T10:53:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-28T10:53:02Z"}, "message": "Merge #11128\n\n11128: import style r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "906d8894ea26bf8974b9bc062408af86ca343f5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/906d8894ea26bf8974b9bc062408af86ca343f5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6c307001785447b65aa3ab33217e9759e7b8b41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhyuyOCRBK7hj4Ov3rIwAAi+gIAJASUXEkHb2et79lRDAPiU9t\nyQ92DUc0NUmQyCjBVXhC9T5Z1L38RgYcMLcE+zt2n5MNHiiLjfo2ZqDGrFUlgrfB\nVjP+J7BBH2r4oTJQmex1Q75j59JsoigFmtJb+HroAB/t4mm9oqCw6aft7t3WOJyD\n0XZmvg9AX+ri/3SxaS3jss16x3xw5qVZoqfTRcVyzsA4ViZhX8t8Ck3DsewRAw8x\nF7/w5kmbFtNGokS522S2Snz4ilWyBrQN/qg/AKw50dp1+LMQk5LbyQzoDq7f/Qcw\nJ4/NBJB4QKplFl1SfcO3lX2RwAbi17oJYUB+Xmen0JVymL7cgU3Y+pyqDYJUl7U=\n=pp4Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 906d8894ea26bf8974b9bc062408af86ca343f5e\nparent 05f7924c7722c34a2ba1688f5c8d768e26b28e53\nparent 621ba1c2d31b135a86d3505d6b9f10146fa0bf3b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1640688782 +0000\ncommitter GitHub <noreply@github.com> 1640688782 +0000\n\nMerge #11128\n\n11128: import style r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c307001785447b65aa3ab33217e9759e7b8b41", "html_url": "https://github.com/rust-lang/rust/commit/d6c307001785447b65aa3ab33217e9759e7b8b41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6c307001785447b65aa3ab33217e9759e7b8b41/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f7924c7722c34a2ba1688f5c8d768e26b28e53", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f7924c7722c34a2ba1688f5c8d768e26b28e53", "html_url": "https://github.com/rust-lang/rust/commit/05f7924c7722c34a2ba1688f5c8d768e26b28e53"}, {"sha": "621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "html_url": "https://github.com/rust-lang/rust/commit/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e4199898bfc5087361c118d28e16dfa918de8d9e", "filename": "crates/ide_db/src/helpers.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6c307001785447b65aa3ab33217e9759e7b8b41/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c307001785447b65aa3ab33217e9759e7b8b41/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers.rs?ref=d6c307001785447b65aa3ab33217e9759e7b8b41", "patch": "@@ -14,7 +14,7 @@ use base_db::FileId;\n use hir::{ItemInNs, MacroDef, ModuleDef, Name, PathResolution, Semantics};\n use itertools::Itertools;\n use syntax::{\n-    ast::{self, make, HasLoopBody, Ident},\n+    ast::{self, make, HasLoopBody},\n     AstNode, AstToken, Direction, SyntaxElement, SyntaxKind, SyntaxToken, TokenAtOffset, WalkEvent,\n     T,\n };\n@@ -38,7 +38,7 @@ pub fn item_name(db: &RootDatabase, item: ItemInNs) -> Option<Name> {\n pub fn get_path_in_derive_attr(\n     sema: &hir::Semantics<RootDatabase>,\n     attr: &ast::Attr,\n-    cursor: &Ident,\n+    cursor: &ast::Ident,\n ) -> Option<ast::Path> {\n     let path = attr.path()?;\n     let tt = attr.token_tree()?;\n@@ -55,7 +55,7 @@ pub fn get_path_in_derive_attr(\n }\n \n /// Parses the path the identifier is part of inside a token tree.\n-pub fn get_path_at_cursor_in_tt(cursor: &Ident) -> Option<ast::Path> {\n+pub fn get_path_at_cursor_in_tt(cursor: &ast::Ident) -> Option<ast::Path> {\n     let cursor = cursor.syntax();\n     let first = cursor\n         .siblings_with_tokens(Direction::Prev)\n@@ -75,7 +75,7 @@ pub fn get_path_at_cursor_in_tt(cursor: &Ident) -> Option<ast::Path> {\n pub fn try_resolve_derive_input(\n     sema: &hir::Semantics<RootDatabase>,\n     attr: &ast::Attr,\n-    cursor: &Ident,\n+    cursor: &ast::Ident,\n ) -> Option<PathResolution> {\n     let path = get_path_in_derive_attr(sema, attr, cursor)?;\n     let scope = sema.scope(attr.syntax());"}]}