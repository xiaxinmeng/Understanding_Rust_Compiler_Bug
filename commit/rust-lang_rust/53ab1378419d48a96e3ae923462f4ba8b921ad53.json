{"sha": "53ab1378419d48a96e3ae923462f4ba8b921ad53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYWIxMzc4NDE5ZDQ4YTk2ZTNhZTkyMzQ2MmY0YmE4YjkyMWFkNTM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-24T05:15:07Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-27T23:57:02Z"}, "message": "Comment methods in `CfgFolder`", "tree": {"sha": "141d7ad690ab96ed55438ac8c924ad6eb08a55ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/141d7ad690ab96ed55438ac8c924ad6eb08a55ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53ab1378419d48a96e3ae923462f4ba8b921ad53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53ab1378419d48a96e3ae923462f4ba8b921ad53", "html_url": "https://github.com/rust-lang/rust/commit/53ab1378419d48a96e3ae923462f4ba8b921ad53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53ab1378419d48a96e3ae923462f4ba8b921ad53/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b3edc2f8933a987ed956b4d720be1be9b02e036", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3edc2f8933a987ed956b4d720be1be9b02e036", "html_url": "https://github.com/rust-lang/rust/commit/6b3edc2f8933a987ed956b4d720be1be9b02e036"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "14035d8d116a3b2502be7f718c8d277467210851", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/53ab1378419d48a96e3ae923462f4ba8b921ad53/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ab1378419d48a96e3ae923462f4ba8b921ad53/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=53ab1378419d48a96e3ae923462f4ba8b921ad53", "patch": "@@ -19,9 +19,16 @@ use ptr::P;\n use util::small_vector::SmallVector;\n \n pub trait CfgFolder: fold::Folder {\n+    // Check if a node with the given attributes is in this configuration.\n     fn in_cfg(&mut self, attrs: &[ast::Attribute]) -> bool;\n+\n+    // Update a node before checking if it is in this configuration (used to implement `cfg_attr`).\n     fn process_attrs<T: HasAttrs>(&mut self, node: T) -> T { node }\n+\n+    // Visit attributes on expression and statements (but not attributes on items in blocks).\n     fn visit_stmt_or_expr_attrs(&mut self, _attrs: &[ast::Attribute]) {}\n+\n+    // Visit unremovable (non-optional) expressions -- c.f. `fold_expr` vs `fold_opt_expr`.\n     fn visit_unremovable_expr(&mut self, _expr: &ast::Expr) {}\n \n     fn configure<T: HasAttrs>(&mut self, node: T) -> Option<T> {"}]}