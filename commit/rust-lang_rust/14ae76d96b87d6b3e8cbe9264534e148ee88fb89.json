{"sha": "14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YWU3NmQ5NmI4N2Q2YjNlOGNiZTkyNjQ1MzRlMTQ4ZWU4OGZiODk=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-15T22:08:18Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:02:51Z"}, "message": "Unbox FunctionDebugContextData.\n\nIt is only a pointer and a Cell, which is quite small.", "tree": {"sha": "8ea59d78dfdbd54a1559fd81ed3f8d6f9e2c3f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ea59d78dfdbd54a1559fd81ed3f8d6f9e2c3f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "html_url": "https://github.com/rust-lang/rust/commit/14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b10d89a0961bb8682dc3e6d2781c6e390c6cf25c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b10d89a0961bb8682dc3e6d2781c6e390c6cf25c", "html_url": "https://github.com/rust-lang/rust/commit/b10d89a0961bb8682dc3e6d2781c6e390c6cf25c"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "23f415d95cf4a0bb9a5741259d0654501eb3abc6", "filename": "src/librustc_trans/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs?ref=14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "patch": "@@ -54,7 +54,7 @@ pub fn create_mir_scopes(fcx: &FunctionContext) -> IndexVec<VisibilityScope, Mir\n     let mut scopes = IndexVec::from_elem(null_scope, &mir.visibility_scopes);\n \n     let fn_metadata = match fcx.debug_context {\n-        FunctionDebugContext::RegularContext(box ref data) => data.fn_metadata,\n+        FunctionDebugContext::RegularContext(ref data) => data.fn_metadata,\n         FunctionDebugContext::DebugInfoDisabled |\n         FunctionDebugContext::FunctionWithoutDebugInfo => {\n             return scopes;"}, {"sha": "1bf3c0acec55aa56df4d16290d3ad1d6897da0cb", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "patch": "@@ -97,7 +97,7 @@ impl<'tcx> CrateDebugContext<'tcx> {\n }\n \n pub enum FunctionDebugContext {\n-    RegularContext(Box<FunctionDebugContextData>),\n+    RegularContext(FunctionDebugContextData),\n     DebugInfoDisabled,\n     FunctionWithoutDebugInfo,\n }\n@@ -107,7 +107,7 @@ impl FunctionDebugContext {\n                    span: Span)\n                    -> &'a FunctionDebugContextData {\n         match *self {\n-            FunctionDebugContext::RegularContext(box ref data) => data,\n+            FunctionDebugContext::RegularContext(ref data) => data,\n             FunctionDebugContext::DebugInfoDisabled => {\n                 span_bug!(span,\n                           \"{}\",\n@@ -134,7 +134,6 @@ impl FunctionDebugContext {\n pub struct FunctionDebugContextData {\n     fn_metadata: DISubprogram,\n     source_locations_enabled: Cell<bool>,\n-    source_location_override: Cell<bool>,\n }\n \n pub enum VariableAccess<'a> {\n@@ -293,10 +292,9 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n     };\n \n     // Initialize fn debug context (including scope map and namespace map)\n-    let fn_debug_context = box FunctionDebugContextData {\n+    let fn_debug_context = FunctionDebugContextData {\n         fn_metadata: fn_metadata,\n         source_locations_enabled: Cell::new(false),\n-        source_location_override: Cell::new(false),\n     };\n \n     return FunctionDebugContext::RegularContext(fn_debug_context);\n@@ -503,11 +501,7 @@ pub fn declare_local<'blk, 'tcx>(bcx: &BlockAndBuilder<'blk, 'tcx>,\n \n     match variable_kind {\n         ArgumentVariable(_) | CapturedVariable => {\n-            assert!(!bcx.fcx()\n-                        .debug_context\n-                        .get_ref(span)\n-                        .source_locations_enabled\n-                        .get());\n+            assert!(!bcx.fcx().debug_context.get_ref(span).source_locations_enabled.get());\n             source_loc::set_debug_location(cx, None, UnknownLocation);\n         }\n         _ => { /* nothing to do */ }"}, {"sha": "86ecc0e65a9de81fd321035b2ada1b4851628353", "filename": "src/librustc_trans/debuginfo/source_loc.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fsource_loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ae76d96b87d6b3e8cbe9264534e148ee88fb89/src%2Flibrustc_trans%2Fdebuginfo%2Fsource_loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fsource_loc.rs?ref=14ae76d96b87d6b3e8cbe9264534e148ee88fb89", "patch": "@@ -36,15 +36,9 @@ pub fn set_source_location(fcx: &FunctionContext,\n             set_debug_location(fcx.ccx, builder, UnknownLocation);\n             return;\n         }\n-        FunctionDebugContext::RegularContext(box ref data) => data\n+        FunctionDebugContext::RegularContext(ref data) => data\n     };\n \n-    if function_debug_context.source_location_override.get() {\n-        // Just ignore any attempts to set a new debug location while\n-        // the override is active.\n-        return;\n-    }\n-\n     let dbg_loc = if function_debug_context.source_locations_enabled.get() {\n         let (scope, span) = match debug_loc {\n             DebugLoc::ScopeAt(scope, span) => (scope, span),\n@@ -72,7 +66,7 @@ pub fn set_source_location(fcx: &FunctionContext,\n /// first real statement/expression of the function is translated.\n pub fn start_emitting_source_locations(fcx: &FunctionContext) {\n     match fcx.debug_context {\n-        FunctionDebugContext::RegularContext(box ref data) => {\n+        FunctionDebugContext::RegularContext(ref data) => {\n             data.source_locations_enabled.set(true)\n         },\n         _ => { /* safe to ignore */ }"}]}