{"sha": "3445454e792bc4b770a99e227fc18b5c90f8ed8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NDU0NTRlNzkyYmM0Yjc3MGE5OWUyMjdmYzE4YjVjOTBmOGVkOGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T23:46:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T23:46:32Z"}, "message": "core: Resolve and remove some FIXMEs", "tree": {"sha": "53dd059a7e525704199de120fa6efdf2877342a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53dd059a7e525704199de120fa6efdf2877342a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3445454e792bc4b770a99e227fc18b5c90f8ed8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3445454e792bc4b770a99e227fc18b5c90f8ed8a", "html_url": "https://github.com/rust-lang/rust/commit/3445454e792bc4b770a99e227fc18b5c90f8ed8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3445454e792bc4b770a99e227fc18b5c90f8ed8a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e9f4a6240b79ff64c5169296468950045e83515", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9f4a6240b79ff64c5169296468950045e83515", "html_url": "https://github.com/rust-lang/rust/commit/9e9f4a6240b79ff64c5169296468950045e83515"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "c8e32bb413826f71d8dd89288af443ba621ec902", "filename": "src/libcore/str.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3445454e792bc4b770a99e227fc18b5c90f8ed8a/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3445454e792bc4b770a99e227fc18b5c90f8ed8a/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=3445454e792bc4b770a99e227fc18b5c90f8ed8a", "patch": "@@ -106,8 +106,6 @@ native mod rustrt {\n     fn str_reserve_shared(&ss: str, nn: libc::size_t);\n }\n \n-// FIXME: add pure to a lot of functions\n-\n /*\n Section: Creating a string\n */"}, {"sha": "d69507b75c182b81a3289ab67584fa63592379f8", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3445454e792bc4b770a99e227fc18b5c90f8ed8a/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3445454e792bc4b770a99e227fc18b5c90f8ed8a/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=3445454e792bc4b770a99e227fc18b5c90f8ed8a", "patch": "@@ -94,9 +94,7 @@ type init_op<T> = fn(uint) -> T;\n \n #[doc = \"Returns true if a vector contains no elements\"]\n pure fn is_empty<T>(v: [const T]) -> bool {\n-    // FIXME: This would be easier if we could just call len\n-    for t: T in v { ret false; }\n-    ret true;\n+    len(v) == 0u\n }\n \n #[doc = \"Returns true if a vector contains some elements\"]\n@@ -154,8 +152,6 @@ fn from_elem<T: copy>(n_elts: uint, t: T) -> [T] {\n     ret v;\n }\n \n-// FIXME: Possible typestate postcondition:\n-// len(result) == len(v) (needs issue #586)\n #[doc = \"Produces a mutable vector from an immutable vector.\"]\n fn to_mut<T>(+v: [T]) -> [mutable T] unsafe {\n     let r = ::unsafe::reinterpret_cast(v);\n@@ -185,9 +181,6 @@ fn tailn<T: copy>(v: [const T], n: uint) -> [T] {\n     slice(v, n, len(v))\n }\n \n-// FIXME: This name is sort of confusing next to from_fn, etc\n-// but this is the name haskell uses for this function,\n-// along with head/tail/last.\n #[doc = \"Returns all but the last elemnt of a vector\"]\n fn init<T: copy>(v: [const T]) -> [T] {\n     assert len(v) != 0u;"}]}