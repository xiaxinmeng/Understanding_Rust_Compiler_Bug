{"sha": "bdffb9722d9330d3815be356a5ccedae07555328", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZmZiOTcyMmQ5MzMwZDM4MTViZTM1NmE1Y2NlZGFlMDc1NTUzMjg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-06-25T02:50:51Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-07T22:56:27Z"}, "message": "Move public reexports of private extern crates into a separate lint\n\nThis is going to be a hard error while all private-in-public errors from rustc_privacy will be reclassified into lints.", "tree": {"sha": "d64f9a32d8bb0f9f3d1ddc6673625d75baa8b035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d64f9a32d8bb0f9f3d1ddc6673625d75baa8b035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdffb9722d9330d3815be356a5ccedae07555328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdffb9722d9330d3815be356a5ccedae07555328", "html_url": "https://github.com/rust-lang/rust/commit/bdffb9722d9330d3815be356a5ccedae07555328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdffb9722d9330d3815be356a5ccedae07555328/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "html_url": "https://github.com/rust-lang/rust/commit/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "ce120a32d906b81316ea012fc343e76e125ee26e", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=bdffb9722d9330d3815be356a5ccedae07555328", "patch": "@@ -130,6 +130,12 @@ declare_lint! {\n     \"detect private items in public interfaces not caught by the old implementation\"\n }\n \n+declare_lint! {\n+    pub PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n+    Deny,\n+    \"detect public reexports of private extern crates\"\n+}\n+\n declare_lint! {\n     pub INVALID_TYPE_PARAM_DEFAULT,\n     Deny,\n@@ -230,6 +236,7 @@ impl LintPass for HardwiredLints {\n             TRIVIAL_CASTS,\n             TRIVIAL_NUMERIC_CASTS,\n             PRIVATE_IN_PUBLIC,\n+            PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n             INVALID_TYPE_PARAM_DEFAULT,\n             CONST_ERR,\n             RENAMED_AND_REMOVED_LINTS,"}, {"sha": "a03f12c3dfbca09dd054c2f732c4a6cda7bcd5f9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=bdffb9722d9330d3815be356a5ccedae07555328", "patch": "@@ -184,6 +184,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(PRIVATE_IN_PUBLIC),\n             reference: \"issue #34537 <https://github.com/rust-lang/rust/issues/34537>\",\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(PUB_USE_OF_PRIVATE_EXTERN_CRATE),\n+            reference: \"issue #34537 <https://github.com/rust-lang/rust/issues/34537>\",\n+        },\n         FutureIncompatibleInfo {\n             id: LintId::of(PATTERNS_IN_FNS_WITHOUT_BODY),\n             reference: \"issue #35203 <https://github.com/rust-lang/rust/issues/35203>\","}, {"sha": "4bff5da3d6b09462989eb25c2e4c993bc8bbd728", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdffb9722d9330d3815be356a5ccedae07555328/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=bdffb9722d9330d3815be356a5ccedae07555328", "patch": "@@ -18,7 +18,7 @@ use {names_to_string, module_to_string};\n use {resolve_error, ResolutionError};\n \n use rustc::ty;\n-use rustc::lint::builtin::PRIVATE_IN_PUBLIC;\n+use rustc::lint::builtin::PUB_USE_OF_PRIVATE_EXTERN_CRATE;\n use rustc::hir::def_id::DefId;\n use rustc::hir::def::*;\n use rustc::util::nodemap::FxHashMap;\n@@ -296,7 +296,8 @@ impl<'a> Resolver<'a> {\n     pub fn import(&self, binding: &'a NameBinding<'a>, directive: &'a ImportDirective<'a>)\n                   -> &'a NameBinding<'a> {\n         let vis = if binding.pseudo_vis().is_at_least(directive.vis.get(), self) ||\n-                     !directive.is_glob() && binding.is_extern_crate() { // c.f. `PRIVATE_IN_PUBLIC`\n+                     // c.f. `PUB_USE_OF_PRIVATE_EXTERN_CRATE`\n+                     !directive.is_glob() && binding.is_extern_crate() {\n             directive.vis.get()\n         } else {\n             binding.pseudo_vis()\n@@ -735,7 +736,8 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                 let msg = format!(\"extern crate `{}` is private, and cannot be reexported \\\n                                    (error E0365), consider declaring with `pub`\",\n                                    ident);\n-                self.session.add_lint(PRIVATE_IN_PUBLIC, directive.id, directive.span, msg);\n+                self.session.add_lint(PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n+                                      directive.id, directive.span, msg);\n             } else if ns == TypeNS {\n                 struct_span_err!(self.session, directive.span, E0365,\n                                  \"`{}` is private, and cannot be reexported\", ident)"}, {"sha": "5479be54533e033b96b23053e20754021e803d9f", "filename": "src/test/compile-fail/pub-reexport-priv-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdffb9722d9330d3815be356a5ccedae07555328/src%2Ftest%2Fcompile-fail%2Fpub-reexport-priv-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdffb9722d9330d3815be356a5ccedae07555328/src%2Ftest%2Fcompile-fail%2Fpub-reexport-priv-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpub-reexport-priv-extern-crate.rs?ref=bdffb9722d9330d3815be356a5ccedae07555328", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![allow(unused)]\n-#![deny(private_in_public)]\n \n extern crate core;\n pub use core as reexported_core; //~ ERROR `core` is private, and cannot be reexported"}]}