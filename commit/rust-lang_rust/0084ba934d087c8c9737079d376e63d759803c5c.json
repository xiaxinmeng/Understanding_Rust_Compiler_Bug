{"sha": "0084ba934d087c8c9737079d376e63d759803c5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwODRiYTkzNGQwODdjOGM5NzM3MDc5ZDM3NmU2M2Q3NTk4MDNjNWM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-05-07T10:21:05Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-05-07T10:21:05Z"}, "message": "Rollup merge of #25160 - michaelwu:remove-schedule_free_slice, r=cmr\n\nNothing uses it anymore.", "tree": {"sha": "a0bc1f4a2b16d74343e34fd3f2d64e84790d98be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0bc1f4a2b16d74343e34fd3f2d64e84790d98be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0084ba934d087c8c9737079d376e63d759803c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0084ba934d087c8c9737079d376e63d759803c5c", "html_url": "https://github.com/rust-lang/rust/commit/0084ba934d087c8c9737079d376e63d759803c5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0084ba934d087c8c9737079d376e63d759803c5c/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "464077d0a723dfdae0bbc7d67bc34014f374c463", "url": "https://api.github.com/repos/rust-lang/rust/commits/464077d0a723dfdae0bbc7d67bc34014f374c463", "html_url": "https://github.com/rust-lang/rust/commit/464077d0a723dfdae0bbc7d67bc34014f374c463"}, {"sha": "bfdbda24d970515acc453f3ace7700374b8e9324", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdbda24d970515acc453f3ace7700374b8e9324", "html_url": "https://github.com/rust-lang/rust/commit/bfdbda24d970515acc453f3ace7700374b8e9324"}], "stats": {"total": 60, "additions": 0, "deletions": 60}, "files": [{"sha": "d23543924dd397d6c82f9619315d53ad9e9a563f", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/0084ba934d087c8c9737079d376e63d759803c5c/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0084ba934d087c8c9737079d376e63d759803c5c/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=0084ba934d087c8c9737079d376e63d759803c5c", "patch": "@@ -507,23 +507,6 @@ impl<'blk, 'tcx> CleanupMethods<'blk, 'tcx> for FunctionContext<'blk, 'tcx> {\n         self.schedule_clean(cleanup_scope, drop as CleanupObj);\n     }\n \n-    /// Schedules a call to `free(val)`. Note that this is a shallow operation.\n-    fn schedule_free_slice(&self,\n-                           cleanup_scope: ScopeId,\n-                           val: ValueRef,\n-                           size: ValueRef,\n-                           align: ValueRef,\n-                           heap: Heap) {\n-        let drop = box FreeSlice { ptr: val, size: size, align: align, heap: heap };\n-\n-        debug!(\"schedule_free_slice({:?}, val={}, heap={:?})\",\n-               cleanup_scope,\n-               self.ccx.tn().val_to_string(val),\n-               heap);\n-\n-        self.schedule_clean(cleanup_scope, drop as CleanupObj);\n-    }\n-\n     fn schedule_clean(&self,\n                       cleanup_scope: ScopeId,\n                       cleanup: CleanupObj<'tcx>) {\n@@ -1106,43 +1089,6 @@ impl<'tcx> Cleanup<'tcx> for FreeValue<'tcx> {\n     }\n }\n \n-#[derive(Copy, Clone)]\n-pub struct FreeSlice {\n-    ptr: ValueRef,\n-    size: ValueRef,\n-    align: ValueRef,\n-    heap: Heap,\n-}\n-\n-impl<'tcx> Cleanup<'tcx> for FreeSlice {\n-    fn must_unwind(&self) -> bool {\n-        true\n-    }\n-\n-    fn clean_on_unwind(&self) -> bool {\n-        true\n-    }\n-\n-    fn is_lifetime_end(&self) -> bool {\n-        false\n-    }\n-\n-    fn trans<'blk>(&self,\n-                   bcx: Block<'blk, 'tcx>,\n-                   debug_loc: DebugLoc)\n-                   -> Block<'blk, 'tcx> {\n-        match self.heap {\n-            HeapExchange => {\n-                glue::trans_exchange_free_dyn(bcx,\n-                                              self.ptr,\n-                                              self.size,\n-                                              self.align,\n-                                              debug_loc)\n-            }\n-        }\n-    }\n-}\n-\n #[derive(Copy, Clone)]\n pub struct LifetimeEnd {\n     ptr: ValueRef,\n@@ -1253,12 +1199,6 @@ pub trait CleanupMethods<'blk, 'tcx> {\n                            val: ValueRef,\n                            heap: Heap,\n                            content_ty: Ty<'tcx>);\n-    fn schedule_free_slice(&self,\n-                           cleanup_scope: ScopeId,\n-                           val: ValueRef,\n-                           size: ValueRef,\n-                           align: ValueRef,\n-                           heap: Heap);\n     fn schedule_clean(&self,\n                       cleanup_scope: ScopeId,\n                       cleanup: CleanupObj<'tcx>);"}]}