{"sha": "bd71d11a8f75b9957489c795a1551a0cd489eca3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNzFkMTFhOGY3NWI5OTU3NDg5Yzc5NWExNTUxYTBjZDQ4OWVjYTM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-03-21T08:38:25Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-03-23T03:03:31Z"}, "message": "break long line", "tree": {"sha": "57bb449ad6b4b1c9a2317e4c767749e9567e1aa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57bb449ad6b4b1c9a2317e4c767749e9567e1aa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd71d11a8f75b9957489c795a1551a0cd489eca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd71d11a8f75b9957489c795a1551a0cd489eca3", "html_url": "https://github.com/rust-lang/rust/commit/bd71d11a8f75b9957489c795a1551a0cd489eca3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd71d11a8f75b9957489c795a1551a0cd489eca3/comments", "author": null, "committer": null, "parents": [{"sha": "acbf386ab48e631e0cab08bc7965c7fc63aa4075", "url": "https://api.github.com/repos/rust-lang/rust/commits/acbf386ab48e631e0cab08bc7965c7fc63aa4075", "html_url": "https://github.com/rust-lang/rust/commit/acbf386ab48e631e0cab08bc7965c7fc63aa4075"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a12016418c68186b8f0ea13daf4cebf7790237bc", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd71d11a8f75b9957489c795a1551a0cd489eca3/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd71d11a8f75b9957489c795a1551a0cd489eca3/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=bd71d11a8f75b9957489c795a1551a0cd489eca3", "patch": "@@ -617,7 +617,8 @@ impl Decodable for FileMap {\n \n                     Ok(lines)\n                 })?;\n-            let multibyte_chars: Vec<MultiByteChar> = d.read_struct_field(\"multibyte_chars\", 4, |d| Decodable::decode(d))?;\n+            let multibyte_chars: Vec<MultiByteChar> =\n+                d.read_struct_field(\"multibyte_chars\", 4, |d| Decodable::decode(d))?;\n             Ok(FileMap {\n                 name: name,\n                 start_pos: start_pos,"}]}