{"sha": "dcd415742095e0d21ce9c4b774ed3433858bf11a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZDQxNTc0MjA5NWUwZDIxY2U5YzRiNzc0ZWQzNDMzODU4YmYxMWE=", "commit": {"author": {"name": "nathan.whitaker", "email": "nathan.whitaker01@gmail.com", "date": "2021-08-29T17:12:59Z"}, "committer": {"name": "nathan.whitaker", "email": "nathan.whitaker01@gmail.com", "date": "2021-08-29T17:12:59Z"}, "message": "Use struct init shorthand in fill struct fields assist", "tree": {"sha": "2347dad5f388a92d9cb32480a4d44a6f4c9eeab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2347dad5f388a92d9cb32480a4d44a6f4c9eeab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcd415742095e0d21ce9c4b774ed3433858bf11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcd415742095e0d21ce9c4b774ed3433858bf11a", "html_url": "https://github.com/rust-lang/rust/commit/dcd415742095e0d21ce9c4b774ed3433858bf11a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcd415742095e0d21ce9c4b774ed3433858bf11a/comments", "author": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97409e5fc83ab8a4460474f5dc5a119160873544", "url": "https://api.github.com/repos/rust-lang/rust/commits/97409e5fc83ab8a4460474f5dc5a119160873544", "html_url": "https://github.com/rust-lang/rust/commit/97409e5fc83ab8a4460474f5dc5a119160873544"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "616f49a3fab54a3ca0e2e5c60f80f8eb6bbf7b6a", "filename": "crates/ide_diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dcd415742095e0d21ce9c4b774ed3433858bf11a/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcd415742095e0d21ce9c4b774ed3433858bf11a/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=dcd415742095e0d21ce9c4b774ed3433858bf11a", "patch": "@@ -1,6 +1,7 @@\n use either::Either;\n use hir::{db::AstDatabase, InFile};\n use ide_db::{assists::Assist, source_change::SourceChange};\n+use rustc_hash::FxHashMap;\n use stdx::format_to;\n use syntax::{algo, ast::make, AstNode, SyntaxNodePtr};\n use text_edit::TextEdit;\n@@ -54,9 +55,26 @@ fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::MissingFields) -> Option<Vec<Ass\n     };\n     let old_field_list = field_list_parent.record_expr_field_list()?;\n     let new_field_list = old_field_list.clone_for_update();\n-    for f in d.missed_fields.iter() {\n+    let mut locals = FxHashMap::default();\n+    ctx.sema.scope(field_list_parent.syntax()).process_all_names(&mut |name, def| {\n+        if let hir::ScopeDef::Local(local) = def {\n+            locals.insert(name.clone(), local);\n+        }\n+    });\n+    let missing_fields = ctx.sema.record_literal_missing_fields(&field_list_parent);\n+    for (f, ty) in missing_fields.iter() {\n+        let field_expr = if let Some(local_candidate) = locals.get(&f.name(ctx.sema.db)) {\n+            let candidate_ty = local_candidate.ty(ctx.sema.db);\n+            if ty.could_unify_with(ctx.sema.db, &candidate_ty) {\n+                None\n+            } else {\n+                Some(make::expr_unit())\n+            }\n+        } else {\n+            Some(make::expr_unit())\n+        };\n         let field =\n-            make::record_expr_field(make::name_ref(&f.to_string()), Some(make::expr_unit()))\n+            make::record_expr_field(make::name_ref(&f.name(ctx.sema.db).to_string()), field_expr)\n                 .clone_for_update();\n         new_field_list.add_field(field);\n     }"}]}