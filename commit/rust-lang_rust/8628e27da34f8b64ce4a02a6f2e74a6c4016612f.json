{"sha": "8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "node_id": "C_kwDOAAsO6NoAKDg2MjhlMjdkYTM0ZjhiNjRjZTRhMDJhNmYyZTc0YTZjNDAxNjYxMmY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-17T22:29:47Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-17T22:43:01Z"}, "message": "rustdoc: reduce allocations in `visibility_to_src_with_space`", "tree": {"sha": "82ae41a061162c54ec07b1f70be6a0388629376b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ae41a061162c54ec07b1f70be6a0388629376b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "html_url": "https://github.com/rust-lang/rust/commit/8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8628e27da34f8b64ce4a02a6f2e74a6c4016612f/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13afbdaa0655dda23d7129e59ac48f1ec88b2084", "url": "https://api.github.com/repos/rust-lang/rust/commits/13afbdaa0655dda23d7129e59ac48f1ec88b2084", "html_url": "https://github.com/rust-lang/rust/commit/13afbdaa0655dda23d7129e59ac48f1ec88b2084"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "d526a8be0811adc383daba96a070d3bcffd35505", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8628e27da34f8b64ce4a02a6f2e74a6c4016612f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8628e27da34f8b64ce4a02a6f2e74a6c4016612f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "patch": "@@ -1502,27 +1502,27 @@ pub(crate) fn visibility_to_src_with_space<'a, 'tcx: 'a>(\n     tcx: TyCtxt<'tcx>,\n     item_did: DefId,\n ) -> impl fmt::Display + 'a + Captures<'tcx> {\n-    let to_print = match visibility {\n-        None => String::new(),\n-        Some(ty::Visibility::Public) => \"pub \".to_owned(),\n+    let to_print: Cow<'static, str> = match visibility {\n+        None => \"\".into(),\n+        Some(ty::Visibility::Public) => \"pub \".into(),\n         Some(ty::Visibility::Restricted(vis_did)) => {\n             // FIXME(camelid): This may not work correctly if `item_did` is a module.\n             //                 However, rustdoc currently never displays a module's\n             //                 visibility, so it shouldn't matter.\n             let parent_module = find_nearest_parent_module(tcx, item_did);\n \n             if vis_did.is_crate_root() {\n-                \"pub(crate) \".to_owned()\n+                \"pub(crate) \".into()\n             } else if parent_module == Some(vis_did) {\n                 // `pub(in foo)` where `foo` is the parent module\n                 // is the same as no visibility modifier\n-                String::new()\n+                \"\".into()\n             } else if parent_module.and_then(|parent| find_nearest_parent_module(tcx, parent))\n                 == Some(vis_did)\n             {\n-                \"pub(super) \".to_owned()\n+                \"pub(super) \".into()\n             } else {\n-                format!(\"pub(in {}) \", tcx.def_path_str(vis_did))\n+                format!(\"pub(in {}) \", tcx.def_path_str(vis_did)).into()\n             }\n         }\n     };"}]}