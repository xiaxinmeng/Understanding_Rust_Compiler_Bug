{"sha": "b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyY2Y2ZGY4NzU2YzFiNTA0ZjBiMjdiMGZhNmViODA3ZDI3Y2M1M2Q=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-12-22T21:53:30Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-12-22T21:53:30Z"}, "message": "Add intrinsics & target features for rd{rand,seed}", "tree": {"sha": "4bdeede4123778e12880fb51a5ea98f9bd47516d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bdeede4123778e12880fb51a5ea98f9bd47516d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "html_url": "https://github.com/rust-lang/rust/commit/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17d873c2db77d029b8fe26d57b676e5797e99441", "url": "https://api.github.com/repos/rust-lang/rust/commits/17d873c2db77d029b8fe26d57b676e5797e99441", "html_url": "https://github.com/rust-lang/rust/commit/17d873c2db77d029b8fe26d57b676e5797e99441"}], "stats": {"total": 86, "additions": 85, "deletions": 1}, "files": [{"sha": "fa2feb4224b9f704de3548e1910f79dfdc4b5a78", "filename": "src/etc/platform-intrinsics/x86/rdrand.json", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdrand.json", "raw_url": "https://github.com/rust-lang/rust/raw/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdrand.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdrand.json?ref=b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "patch": "@@ -0,0 +1,27 @@\n+{\n+    \"intrinsic_prefix\": \"_rdrand\",\n+    \"llvm_prefix\": \"llvm.x86.rdrand.\",\n+    \"intrinsics\": [\n+        {\n+            \"intrinsic\": \"16_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"16\",\n+            \"ret\": \"(U16,S32)\",\n+            \"args\": []\n+        },\n+        {\n+            \"intrinsic\": \"32_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"32\",\n+            \"ret\": \"(U32,S32)\",\n+            \"args\": []\n+        },\n+        {\n+            \"intrinsic\": \"64_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"64\",\n+            \"ret\": \"(U64,S32)\",\n+            \"args\": []\n+        }\n+    ]\n+}"}, {"sha": "7be64b583e0ac15b11287b5ff638e0d957aaa17c", "filename": "src/etc/platform-intrinsics/x86/rdseed.json", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdseed.json", "raw_url": "https://github.com/rust-lang/rust/raw/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdseed.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Frdseed.json?ref=b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "patch": "@@ -0,0 +1,27 @@\n+{\n+    \"intrinsic_prefix\": \"_rdseed\",\n+    \"llvm_prefix\": \"llvm.x86.rdseed.\",\n+    \"intrinsics\": [\n+        {\n+            \"intrinsic\": \"16_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"16\",\n+            \"ret\": \"(U16,S32)\",\n+            \"args\": []\n+        },\n+        {\n+            \"intrinsic\": \"32_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"32\",\n+            \"ret\": \"(U32,S32)\",\n+            \"args\": []\n+        },\n+        {\n+            \"intrinsic\": \"64_step\",\n+            \"width\": [\"0\"],\n+            \"llvm\": \"64\",\n+            \"ret\": \"(U64,S32)\",\n+            \"args\": []\n+        }\n+    ]\n+}"}, {"sha": "0744fbbd4e9255512c3cc90cfdd7d5666eb3bc0c", "filename": "src/librustc_driver/target_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Flibrustc_driver%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Flibrustc_driver%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftarget_features.rs?ref=b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "patch": "@@ -25,7 +25,7 @@ const ARM_WHITELIST: &'static [&'static str] = &[\"neon\\0\", \"vfp2\\0\", \"vfp3\\0\", \"\n const X86_WHITELIST: &'static [&'static str] = &[\"avx\\0\", \"avx2\\0\", \"bmi\\0\", \"bmi2\\0\", \"sse\\0\",\n                                                  \"sse2\\0\", \"sse3\\0\", \"sse4.1\\0\", \"sse4.2\\0\",\n                                                  \"ssse3\\0\", \"tbm\\0\", \"lzcnt\\0\", \"popcnt\\0\",\n-                                                 \"sse4a\\0\"];\n+                                                 \"sse4a\\0\", \"rdrnd\\0\", \"rdseed\\0\"];\n \n /// Add `target_feature = \"...\"` cfgs for a variety of platform\n /// specific features (SSE, NEON etc.)."}, {"sha": "acb69423ffee392ffa261b1e8af5092b557c08be", "filename": "src/librustc_platform_intrinsics/x86.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fx86.rs?ref=b2cf6df8756c1b504f0b27b0fa6eb807d27cc53d", "patch": "@@ -872,6 +872,36 @@ pub fn find(name: &str) -> Option<Intrinsic> {\n             output: &::F64x4,\n             definition: Named(\"llvm.x86.fma.vfnmsub.pd.256\")\n         },\n+        \"_rdrand16_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U16, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdrand.16\")\n+        },\n+        \"_rdrand32_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U32, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdrand.32\")\n+        },\n+        \"_rdrand64_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U64, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdrand.64\")\n+        },\n+        \"_rdseed16_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U16, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdseed.16\")\n+        },\n+        \"_rdseed32_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U32, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdseed.32\")\n+        },\n+        \"_rdseed64_step\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 0] = []; &INPUTS },\n+            output: { static AGG: Type = Type::Aggregate(false, { static PARTS: [&'static Type; 2] = [&::U64, &::I32]; &PARTS }); &AGG },\n+            definition: Named(\"llvm.x86.rdseed.64\")\n+        },\n         \"_mm_adds_epi8\" => Intrinsic {\n             inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n             output: &::I8x16,"}]}