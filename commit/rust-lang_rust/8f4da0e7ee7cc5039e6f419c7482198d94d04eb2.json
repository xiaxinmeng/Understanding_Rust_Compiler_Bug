{"sha": "8f4da0e7ee7cc5039e6f419c7482198d94d04eb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNGRhMGU3ZWU3Y2M1MDM5ZTZmNDE5Yzc0ODIxOThkOTRkMDRlYjI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T21:53:13Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T21:53:13Z"}, "message": "Use is_dummy instead of comparing against DUMMY_SP", "tree": {"sha": "6e2cd80e11c4fceb996bdc730d587443556461ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e2cd80e11c4fceb996bdc730d587443556461ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2", "html_url": "https://github.com/rust-lang/rust/commit/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4b8df5df25aa8859d751ec0a7af3e7a0d6d699a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b8df5df25aa8859d751ec0a7af3e7a0d6d699a", "html_url": "https://github.com/rust-lang/rust/commit/c4b8df5df25aa8859d751ec0a7af3e7a0d6d699a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7f52d1335f728a8ad4071ffc30820619f3dfe999", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4da0e7ee7cc5039e6f419c7482198d94d04eb2/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=8f4da0e7ee7cc5039e6f419c7482198d94d04eb2", "patch": "@@ -670,7 +670,7 @@ impl MultiSpan {\n \n     /// Returns wether any of the primary spans is displayable.\n     pub fn has_primary_spans(&self) -> bool {\n-        self.primary_spans.iter().any(|sp| *sp != DUMMY_SP)\n+        self.primary_spans.iter().any(|sp| !sp.is_dummy())\n     }\n \n     /// Returns `true` if this contains only a dummy primary span with any hygienic context.\n@@ -734,7 +734,7 @@ impl MultiSpan {\n \n     /// Returns wether any of the span labels is displayable.\n     pub fn has_span_labels(&self) -> bool {\n-        self.span_labels.iter().any(|(sp, _)| *sp != DUMMY_SP)\n+        self.span_labels.iter().any(|(sp, _)| !sp.is_dummy())\n     }\n }\n "}]}