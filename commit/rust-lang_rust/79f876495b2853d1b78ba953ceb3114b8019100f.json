{"sha": "79f876495b2853d1b78ba953ceb3114b8019100f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Zjg3NjQ5NWIyODUzZDFiNzhiYTk1M2NlYjMxMTRiODAxOTEwMGY=", "commit": {"author": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2019-12-06T12:27:39Z"}, "committer": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2019-12-06T12:28:02Z"}, "message": "Remove boxed closures in address parser.", "tree": {"sha": "11ed3230cf40416997fb1607a6d4c6179b7771e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ed3230cf40416997fb1607a6d4c6179b7771e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f876495b2853d1b78ba953ceb3114b8019100f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f876495b2853d1b78ba953ceb3114b8019100f", "html_url": "https://github.com/rust-lang/rust/commit/79f876495b2853d1b78ba953ceb3114b8019100f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f876495b2853d1b78ba953ceb3114b8019100f/comments", "author": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "html_url": "https://github.com/rust-lang/rust/commit/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "686fa8c61a109410ab5b2c0ac8aa457cc5b46c83", "filename": "src/libstd/net/parser.rs", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/79f876495b2853d1b78ba953ceb3114b8019100f/src%2Flibstd%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f876495b2853d1b78ba953ceb3114b8019100f/src%2Flibstd%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fparser.rs?ref=79f876495b2853d1b78ba953ceb3114b8019100f", "patch": "@@ -44,19 +44,6 @@ impl<'a> Parser<'a> {\n         self.read_atomically(move |p| cb(p).filter(|_| p.is_eof()))\n     }\n \n-    // Return result of first successful parser\n-    fn read_or<T>(\n-        &mut self,\n-        parsers: &mut [Box<dyn FnMut(&mut Parser<'_>) -> Option<T> + 'static>],\n-    ) -> Option<T> {\n-        for pf in parsers {\n-            if let Some(r) = self.read_atomically(|p: &mut Parser<'_>| pf(p)) {\n-                return Some(r);\n-            }\n-        }\n-        None\n-    }\n-\n     // Apply 3 parsers sequentially\n     fn read_seq_3<A, B, C, PA, PB, PC>(&mut self, pa: PA, pb: PB, pc: PC) -> Option<(A, B, C)>\n     where\n@@ -235,9 +222,8 @@ impl<'a> Parser<'a> {\n     }\n \n     fn read_ip_addr(&mut self) -> Option<IpAddr> {\n-        let ipv4_addr = |p: &mut Parser<'_>| p.read_ipv4_addr().map(IpAddr::V4);\n-        let ipv6_addr = |p: &mut Parser<'_>| p.read_ipv6_addr().map(IpAddr::V6);\n-        self.read_or(&mut [Box::new(ipv4_addr), Box::new(ipv6_addr)])\n+        self.read_ipv4_addr().map(IpAddr::V4)\n+            .or_else(|| self.read_ipv6_addr().map(IpAddr::V6))\n     }\n \n     fn read_socket_addr_v4(&mut self) -> Option<SocketAddrV4> {\n@@ -268,9 +254,8 @@ impl<'a> Parser<'a> {\n     }\n \n     fn read_socket_addr(&mut self) -> Option<SocketAddr> {\n-        let v4 = |p: &mut Parser<'_>| p.read_socket_addr_v4().map(SocketAddr::V4);\n-        let v6 = |p: &mut Parser<'_>| p.read_socket_addr_v6().map(SocketAddr::V6);\n-        self.read_or(&mut [Box::new(v4), Box::new(v6)])\n+        self.read_socket_addr_v4().map(SocketAddr::V4)\n+            .or_else(|| self.read_socket_addr_v6().map(SocketAddr::V6))\n     }\n }\n "}]}