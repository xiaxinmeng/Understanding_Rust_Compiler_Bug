{"sha": "94ca94fa5f3b2df85e828b8459f033c44abd60ea", "node_id": "C_kwDOAAsO6NoAKDk0Y2E5NGZhNWYzYjJkZjg1ZTgyOGI4NDU5ZjAzM2M0NGFiZDYwZWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-17T14:09:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-17T14:09:51Z"}, "message": "Auto merge of #7898 - F3real:unit_struct, r=camsteffen\n\nDon't show no_effect warning on unit structs implementing fn_once\n\nFixes #7792\n\nchangelog: Don't show [`no_effect`] or [`unecessary_operation`] warning for unit struct implementing FnOnce", "tree": {"sha": "504bc526309e29dbaa47e5c512cc0f46f0948418", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/504bc526309e29dbaa47e5c512cc0f46f0948418"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94ca94fa5f3b2df85e828b8459f033c44abd60ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94ca94fa5f3b2df85e828b8459f033c44abd60ea", "html_url": "https://github.com/rust-lang/rust/commit/94ca94fa5f3b2df85e828b8459f033c44abd60ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94ca94fa5f3b2df85e828b8459f033c44abd60ea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46687f1313454882df10609e12d47f997501962d", "url": "https://api.github.com/repos/rust-lang/rust/commits/46687f1313454882df10609e12d47f997501962d", "html_url": "https://github.com/rust-lang/rust/commit/46687f1313454882df10609e12d47f997501962d"}, {"sha": "e9bf5ec6597a24cc4f24523b58b2e0e90be7a053", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bf5ec6597a24cc4f24523b58b2e0e90be7a053", "html_url": "https://github.com/rust-lang/rust/commit/e9bf5ec6597a24cc4f24523b58b2e0e90be7a053"}], "stats": {"total": 106, "additions": 73, "deletions": 33}, "files": [{"sha": "cd54de3ee4b75cf567b0668ea3adb7e6776ec92f", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/94ca94fa5f3b2df85e828b8459f033c44abd60ea/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ca94fa5f3b2df85e828b8459f033c44abd60ea/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=94ca94fa5f3b2df85e828b8459f033c44abd60ea", "patch": "@@ -133,9 +133,12 @@ fn has_no_effect(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n         },\n         ExprKind::Call(callee, args) => {\n             if let ExprKind::Path(ref qpath) = callee.kind {\n-                let res = cx.qpath_res(qpath, callee.hir_id);\n+                if cx.typeck_results().type_dependent_def(expr.hir_id).is_some() {\n+                    // type-dependent function call like `impl FnOnce for X`\n+                    return false;\n+                }\n                 let def_matched = matches!(\n-                    res,\n+                    cx.qpath_res(qpath, callee.hir_id),\n                     Res::Def(DefKind::Struct | DefKind::Variant | DefKind::Ctor(..), ..)\n                 );\n                 if def_matched || is_range_literal(expr) {\n@@ -238,6 +241,10 @@ fn reduce_expression<'a>(cx: &LateContext<'_>, expr: &'a Expr<'a>) -> Option<Vec\n         },\n         ExprKind::Call(callee, args) => {\n             if let ExprKind::Path(ref qpath) = callee.kind {\n+                if cx.typeck_results().type_dependent_def(expr.hir_id).is_some() {\n+                    // type-dependent function call like `impl FnOnce for X`\n+                    return None;\n+                }\n                 let res = cx.qpath_res(qpath, callee.hir_id);\n                 match res {\n                     Res::Def(DefKind::Struct | DefKind::Variant | DefKind::Ctor(..), ..)"}, {"sha": "5427c88faf348e3c3399253280b187f7e42599e0", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/94ca94fa5f3b2df85e828b8459f033c44abd60ea/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ca94fa5f3b2df85e828b8459f033c44abd60ea/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=94ca94fa5f3b2df85e828b8459f033c44abd60ea", "patch": "@@ -1,4 +1,4 @@\n-#![feature(box_syntax)]\n+#![feature(box_syntax, fn_traits, unboxed_closures)]\n #![warn(clippy::no_effect_underscore_binding)]\n #![allow(dead_code)]\n #![allow(path_statements)]\n@@ -58,6 +58,36 @@ unsafe fn unsafe_fn() -> i32 {\n     0\n }\n \n+struct GreetStruct1;\n+\n+impl FnOnce<(&str,)> for GreetStruct1 {\n+    type Output = ();\n+\n+    extern \"rust-call\" fn call_once(self, (who,): (&str,)) -> Self::Output {\n+        println!(\"hello {}\", who);\n+    }\n+}\n+\n+struct GreetStruct2();\n+\n+impl FnOnce<(&str,)> for GreetStruct2 {\n+    type Output = ();\n+\n+    extern \"rust-call\" fn call_once(self, (who,): (&str,)) -> Self::Output {\n+        println!(\"hello {}\", who);\n+    }\n+}\n+\n+struct GreetStruct3 {}\n+\n+impl FnOnce<(&str,)> for GreetStruct3 {\n+    type Output = ();\n+\n+    extern \"rust-call\" fn call_once(self, (who,): (&str,)) -> Self::Output {\n+        println!(\"hello {}\", who);\n+    }\n+}\n+\n fn main() {\n     let s = get_struct();\n     let s2 = get_struct();\n@@ -108,4 +138,7 @@ fn main() {\n     DropTuple(0);\n     DropEnum::Tuple(0);\n     DropEnum::Struct { field: 0 };\n+    GreetStruct1(\"world\");\n+    GreetStruct2()(\"world\");\n+    GreetStruct3 {}(\"world\");\n }"}, {"sha": "06b88bb5bee7ab5c3ef908a1a7efc66950c3bcf3", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/94ca94fa5f3b2df85e828b8459f033c44abd60ea/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94ca94fa5f3b2df85e828b8459f033c44abd60ea/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=94ca94fa5f3b2df85e828b8459f033c44abd60ea", "patch": "@@ -1,183 +1,183 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:65:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:66:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:67:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:68:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:69:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:70:5\n+  --> $DIR/no_effect.rs:100:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:71:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:72:5\n+  --> $DIR/no_effect.rs:102:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:73:5\n+  --> $DIR/no_effect.rs:103:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:74:5\n+  --> $DIR/no_effect.rs:104:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:75:5\n+  --> $DIR/no_effect.rs:105:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:76:5\n+  --> $DIR/no_effect.rs:106:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:77:5\n+  --> $DIR/no_effect.rs:107:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:78:5\n+  --> $DIR/no_effect.rs:108:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:79:5\n+  --> $DIR/no_effect.rs:109:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:80:5\n+  --> $DIR/no_effect.rs:110:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:81:5\n+  --> $DIR/no_effect.rs:111:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:82:5\n+  --> $DIR/no_effect.rs:112:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:83:5\n+  --> $DIR/no_effect.rs:113:5\n    |\n LL |     5..=6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:84:5\n+  --> $DIR/no_effect.rs:114:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:85:5\n+  --> $DIR/no_effect.rs:115:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:86:5\n+  --> $DIR/no_effect.rs:116:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:87:5\n+  --> $DIR/no_effect.rs:117:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:88:5\n+  --> $DIR/no_effect.rs:118:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:90:5\n+  --> $DIR/no_effect.rs:120:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:92:5\n+  --> $DIR/no_effect.rs:122:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:93:5\n+  --> $DIR/no_effect.rs:123:5\n    |\n LL |     let _unused = 1;\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::no-effect-underscore-binding` implied by `-D warnings`\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:94:5\n+  --> $DIR/no_effect.rs:124:5\n    |\n LL |     let _penguin = || println!(\"Some helpful closure\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:125:5\n    |\n LL |     let _duck = Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:126:5\n    |\n LL |     let _cat = [2, 4, 6, 8][2];\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}