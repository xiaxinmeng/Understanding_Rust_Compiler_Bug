{"sha": "2384e980ad1345930a795961a412b8897b9beeb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzODRlOTgwYWQxMzQ1OTMwYTc5NTk2MWE0MTJiODg5N2I5YmVlYjA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-26T18:58:59Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-04-23T20:35:21Z"}, "message": "rustc_mir: don't use upvar_decls in the miri validity checks.", "tree": {"sha": "b32b8c763ebf7ea3226d9042a0ce3925bcf84f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32b8c763ebf7ea3226d9042a0ce3925bcf84f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2384e980ad1345930a795961a412b8897b9beeb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2384e980ad1345930a795961a412b8897b9beeb0", "html_url": "https://github.com/rust-lang/rust/commit/2384e980ad1345930a795961a412b8897b9beeb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2384e980ad1345930a795961a412b8897b9beeb0/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ec45fb969f6fb020d6b1ab941afbe268adadfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ec45fb969f6fb020d6b1ab941afbe268adadfb", "html_url": "https://github.com/rust-lang/rust/commit/c1ec45fb969f6fb020d6b1ab941afbe268adadfb"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "bd6f005e8736c992de7605eb6a60481934f47a10", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2384e980ad1345930a795961a412b8897b9beeb0/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2384e980ad1345930a795961a412b8897b9beeb0/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=2384e980ad1345930a795961a412b8897b9beeb0", "patch": "@@ -3,6 +3,7 @@ use std::hash::Hash;\n use std::ops::RangeInclusive;\n \n use syntax_pos::symbol::Symbol;\n+use rustc::hir;\n use rustc::ty::layout::{self, Size, Align, TyLayout, LayoutOf, VariantIdx};\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n@@ -165,13 +166,28 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> ValidityVisitor<'rt, 'a, '\n         match layout.ty.sty {\n             // generators and closures.\n             ty::Closure(def_id, _) | ty::Generator(def_id, _, _) => {\n-                if let Some(upvar) = self.ecx.tcx.optimized_mir(def_id).upvar_decls.get(field) {\n-                    PathElem::ClosureVar(upvar.debug_name)\n-                } else {\n-                    // Sometimes the index is beyond the number of freevars (seen\n-                    // for a generator).\n-                    PathElem::ClosureVar(Symbol::intern(&field.to_string()))\n+                let mut name = None;\n+                if def_id.is_local() {\n+                    let tables = self.ecx.tcx.typeck_tables_of(def_id);\n+                    if let Some(upvars) = tables.upvar_list.get(&def_id) {\n+                        // Sometimes the index is beyond the number of freevars (seen\n+                        // for a generator).\n+                        if let Some(upvar_id) = upvars.get(field) {\n+                            let var_hir_id = upvar_id.var_path.hir_id;\n+                            let var_node_id = self.ecx.tcx.hir().hir_to_node_id(var_hir_id);\n+                            if let hir::Node::Binding(pat) = self.ecx.tcx.hir().get(var_node_id) {\n+                                if let hir::PatKind::Binding(_, _, ident, _) = pat.node {\n+                                    name = Some(ident.name);\n+                                }\n+                            }\n+                        }\n+                    }\n                 }\n+\n+                PathElem::ClosureVar(name.unwrap_or_else(|| {\n+                    // Fall back to showing the field index.\n+                    Symbol::intern(&field.to_string())\n+                }))\n             }\n \n             // tuples"}]}