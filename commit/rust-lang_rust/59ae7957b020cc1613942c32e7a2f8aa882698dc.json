{"sha": "59ae7957b020cc1613942c32e7a2f8aa882698dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YWU3OTU3YjAyMGNjMTYxMzk0MmMzMmU3YTJmOGFhODgyNjk4ZGM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-22T00:45:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-22T00:45:38Z"}, "message": "Rollup merge of #78155 - est31:rustc_lint_types_refactor, r=davidtwco\n\nFix two small issues in compiler/rustc_lint/src/types.rs\n\nTwo small improvements of `compiler/rustc_lint/src/types.rs`", "tree": {"sha": "acaa85ced278bbfa8dbfc0b0dc48a3be80a8f1cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acaa85ced278bbfa8dbfc0b0dc48a3be80a8f1cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59ae7957b020cc1613942c32e7a2f8aa882698dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkNYzCRBK7hj4Ov3rIwAAdHIIAHLJXqPfGF2D9vIXFSyngIN4\nLa+5IR4+zjUK61zSmPiCdA1/3nJKrCQLruPH7tWcoHTKNl9zlE36Vj0E6tkNHEZ0\n8D7EkRopbcL3wWzH26mgDAeW+/JlGDIsY6+709eYbxjT7XYhDHBDazK1yNdXOl+H\npin42//rfattpdNT5XlmLwC9LXuNQgzYVdM4zIbMXCUag9XZr/u1wsBwqf+X9EJS\nHxCXjLav0Bf0tE0Hvuay7/9mQaWZsaEW94k+xsTftN12Muib1qHg2/SUizleWMEY\nwp2qv0iYqz3KpPgBEmUNjShCHJVlGnKkTEmZMgY0HB6xqkxSfpBAbvSD+7D6sMA=\n=3EIU\n-----END PGP SIGNATURE-----\n", "payload": "tree acaa85ced278bbfa8dbfc0b0dc48a3be80a8f1cf\nparent d9cf1f20508fd27fb3bd79df3fd2a3ba8d141b05\nparent 00d23cf220a46adad99291a33557ce53fbb173ef\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603327538 +0900\ncommitter GitHub <noreply@github.com> 1603327538 +0900\n\nRollup merge of #78155 - est31:rustc_lint_types_refactor, r=davidtwco\n\nFix two small issues in compiler/rustc_lint/src/types.rs\n\nTwo small improvements of `compiler/rustc_lint/src/types.rs`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59ae7957b020cc1613942c32e7a2f8aa882698dc", "html_url": "https://github.com/rust-lang/rust/commit/59ae7957b020cc1613942c32e7a2f8aa882698dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59ae7957b020cc1613942c32e7a2f8aa882698dc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9cf1f20508fd27fb3bd79df3fd2a3ba8d141b05", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9cf1f20508fd27fb3bd79df3fd2a3ba8d141b05", "html_url": "https://github.com/rust-lang/rust/commit/d9cf1f20508fd27fb3bd79df3fd2a3ba8d141b05"}, {"sha": "00d23cf220a46adad99291a33557ce53fbb173ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/00d23cf220a46adad99291a33557ce53fbb173ef", "html_url": "https://github.com/rust-lang/rust/commit/00d23cf220a46adad99291a33557ce53fbb173ef"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "b502bd7f7a1bd07248f77fecb05b3786aede8ce3", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/59ae7957b020cc1613942c32e7a2f8aa882698dc/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59ae7957b020cc1613942c32e7a2f8aa882698dc/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=59ae7957b020cc1613942c32e7a2f8aa882698dc", "patch": "@@ -145,9 +145,9 @@ fn lint_overflowing_range_endpoint<'tcx>(\n                     // We need to preserve the literal's suffix,\n                     // as it may determine typing information.\n                     let suffix = match lit.node {\n-                        LitKind::Int(_, LitIntType::Signed(s)) => s.name_str().to_string(),\n-                        LitKind::Int(_, LitIntType::Unsigned(s)) => s.name_str().to_string(),\n-                        LitKind::Int(_, LitIntType::Unsuffixed) => \"\".to_string(),\n+                        LitKind::Int(_, LitIntType::Signed(s)) => s.name_str(),\n+                        LitKind::Int(_, LitIntType::Unsigned(s)) => s.name_str(),\n+                        LitKind::Int(_, LitIntType::Unsuffixed) => \"\",\n                         _ => bug!(),\n                     };\n                     let suggestion = format!(\"{}..={}{}\", start, lit_val - 1, suffix);\n@@ -170,24 +170,25 @@ fn lint_overflowing_range_endpoint<'tcx>(\n // warnings are consistent between 32- and 64-bit platforms.\n fn int_ty_range(int_ty: ast::IntTy) -> (i128, i128) {\n     match int_ty {\n-        ast::IntTy::Isize => (i64::MIN as i128, i64::MAX as i128),\n-        ast::IntTy::I8 => (i8::MIN as i64 as i128, i8::MAX as i128),\n-        ast::IntTy::I16 => (i16::MIN as i64 as i128, i16::MAX as i128),\n-        ast::IntTy::I32 => (i32::MIN as i64 as i128, i32::MAX as i128),\n-        ast::IntTy::I64 => (i64::MIN as i128, i64::MAX as i128),\n-        ast::IntTy::I128 => (i128::MIN as i128, i128::MAX),\n+        ast::IntTy::Isize => (i64::MIN.into(), i64::MAX.into()),\n+        ast::IntTy::I8 => (i8::MIN.into(), i8::MAX.into()),\n+        ast::IntTy::I16 => (i16::MIN.into(), i16::MAX.into()),\n+        ast::IntTy::I32 => (i32::MIN.into(), i32::MAX.into()),\n+        ast::IntTy::I64 => (i64::MIN.into(), i64::MAX.into()),\n+        ast::IntTy::I128 => (i128::MIN, i128::MAX),\n     }\n }\n \n fn uint_ty_range(uint_ty: ast::UintTy) -> (u128, u128) {\n-    match uint_ty {\n-        ast::UintTy::Usize => (u64::MIN as u128, u64::MAX as u128),\n-        ast::UintTy::U8 => (u8::MIN as u128, u8::MAX as u128),\n-        ast::UintTy::U16 => (u16::MIN as u128, u16::MAX as u128),\n-        ast::UintTy::U32 => (u32::MIN as u128, u32::MAX as u128),\n-        ast::UintTy::U64 => (u64::MIN as u128, u64::MAX as u128),\n-        ast::UintTy::U128 => (u128::MIN, u128::MAX),\n-    }\n+    let max = match uint_ty {\n+        ast::UintTy::Usize => u64::MAX.into(),\n+        ast::UintTy::U8 => u8::MAX.into(),\n+        ast::UintTy::U16 => u16::MAX.into(),\n+        ast::UintTy::U32 => u32::MAX.into(),\n+        ast::UintTy::U64 => u64::MAX.into(),\n+        ast::UintTy::U128 => u128::MAX,\n+    };\n+    (0, max)\n }\n \n fn get_bin_hex_repr(cx: &LateContext<'_>, lit: &hir::Lit) -> Option<String> {"}]}