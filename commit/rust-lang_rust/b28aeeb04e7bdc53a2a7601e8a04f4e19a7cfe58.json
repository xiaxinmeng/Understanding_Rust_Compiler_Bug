{"sha": "b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyOGFlZWIwNGU3YmRjNTNhMmE3NjAxZThhMDRmNGUxOWE3Y2ZlNTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-25T14:16:24Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-25T14:16:24Z"}, "message": "Fix indentation", "tree": {"sha": "214e0ca03280bbd55b551af4c8804cce92014114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/214e0ca03280bbd55b551af4c8804cce92014114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "html_url": "https://github.com/rust-lang/rust/commit/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c872f4727697327550d43d106f5dddd735c41e5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c872f4727697327550d43d106f5dddd735c41e5f", "html_url": "https://github.com/rust-lang/rust/commit/c872f4727697327550d43d106f5dddd735c41e5f"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "417083c4ff8011645b693ce8d4de965cd99761f8", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "patch": "@@ -102,37 +102,37 @@ fn find_dead_unwinds<'a, 'tcx>(\n             _ => continue,\n         };\n \n-                let mut init_data = InitializationData {\n-                    live: flow_inits.sets().on_entry_set_for(bb.index()).to_owned(),\n-                    dead: IdxSetBuf::new_empty(env.move_data.move_paths.len()),\n-                };\n-                debug!(\"find_dead_unwinds @ {:?}: {:?}; init_data={:?}\",\n-                        bb, bb_data, init_data.live);\n-                for stmt in 0..bb_data.statements.len() {\n-                    let loc = Location { block: bb, statement_index: stmt };\n-                    init_data.apply_location(tcx, mir, env, loc);\n-                }\n+        let mut init_data = InitializationData {\n+            live: flow_inits.sets().on_entry_set_for(bb.index()).to_owned(),\n+            dead: IdxSetBuf::new_empty(env.move_data.move_paths.len()),\n+        };\n+        debug!(\"find_dead_unwinds @ {:?}: {:?}; init_data={:?}\",\n+               bb, bb_data, init_data.live);\n+        for stmt in 0..bb_data.statements.len() {\n+            let loc = Location { block: bb, statement_index: stmt };\n+            init_data.apply_location(tcx, mir, env, loc);\n+        }\n \n-                let path = match env.move_data.rev_lookup.find(location) {\n-                    LookupResult::Exact(e) => e,\n-                    LookupResult::Parent(..) => {\n-                        debug!(\"find_dead_unwinds: has parent; skipping\");\n-                        continue\n-                    }\n-                };\n+        let path = match env.move_data.rev_lookup.find(location) {\n+            LookupResult::Exact(e) => e,\n+            LookupResult::Parent(..) => {\n+                debug!(\"find_dead_unwinds: has parent; skipping\");\n+                continue\n+            }\n+        };\n \n-                debug!(\"find_dead_unwinds @ {:?}: path({:?})={:?}\", bb, location, path);\n+        debug!(\"find_dead_unwinds @ {:?}: path({:?})={:?}\", bb, location, path);\n \n-                let mut maybe_live = false;\n-                on_all_drop_children_bits(tcx, mir, &env, path, |child| {\n-                    let (child_maybe_live, _) = init_data.state(child);\n-                    maybe_live |= child_maybe_live;\n-                });\n+        let mut maybe_live = false;\n+        on_all_drop_children_bits(tcx, mir, &env, path, |child| {\n+            let (child_maybe_live, _) = init_data.state(child);\n+            maybe_live |= child_maybe_live;\n+        });\n \n-                debug!(\"find_dead_unwinds @ {:?}: maybe_live={}\", bb, maybe_live);\n-                if !maybe_live {\n-                    dead_unwinds.add(&bb);\n-                }\n+        debug!(\"find_dead_unwinds @ {:?}: maybe_live={}\", bb, maybe_live);\n+        if !maybe_live {\n+            dead_unwinds.add(&bb);\n+        }\n     }\n \n     dead_unwinds"}, {"sha": "3a18eddaad347f69e613638ef228e3193c38096e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=b28aeeb04e7bdc53a2a7601e8a04f4e19a7cfe58", "patch": "@@ -3331,15 +3331,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                         .join(\", \");\n \n             struct_span_err!(tcx.sess, span, E0063,\n-                        \"missing field{} {}{} in initializer of `{}`\",\n+                             \"missing field{} {}{} in initializer of `{}`\",\n                              if remaining_fields.len() == 1 { \"\" } else { \"s\" },\n-                        remaining_fields_names,\n-                        truncated_fields_error,\n-                        adt_ty)\n-                        .span_label(span, format!(\"missing {}{}\",\n-                            remaining_fields_names,\n-                            truncated_fields_error))\n-                        .emit();\n+                             remaining_fields_names,\n+                             truncated_fields_error,\n+                             adt_ty)\n+                .span_label(span, format!(\"missing {}{}\",\n+                                          remaining_fields_names,\n+                                          truncated_fields_error))\n+                .emit();\n         }\n     }\n "}]}