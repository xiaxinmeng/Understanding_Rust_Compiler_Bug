{"sha": "b75d5f18677fadef03cc55887a18c804af527d9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NWQ1ZjE4Njc3ZmFkZWYwM2NjNTU4ODdhMThjODA0YWY1MjdkOWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-30T17:07:51Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-04T09:17:37Z"}, "message": "Clean up the logic in `is_min_const_fn`", "tree": {"sha": "5f82e6791e9900cee1c58ecdc3c42590a3501005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f82e6791e9900cee1c58ecdc3c42590a3501005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b75d5f18677fadef03cc55887a18c804af527d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b75d5f18677fadef03cc55887a18c804af527d9f", "html_url": "https://github.com/rust-lang/rust/commit/b75d5f18677fadef03cc55887a18c804af527d9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b75d5f18677fadef03cc55887a18c804af527d9f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae0b00cadace32fd85c6786df24a20d6b55a87d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0b00cadace32fd85c6786df24a20d6b55a87d2", "html_url": "https://github.com/rust-lang/rust/commit/ae0b00cadace32fd85c6786df24a20d6b55a87d2"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "d86170b24f239ec886c302c4be7f9d0a45b1866b", "filename": "src/librustc/ty/constness.rs", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b75d5f18677fadef03cc55887a18c804af527d9f/src%2Flibrustc%2Fty%2Fconstness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75d5f18677fadef03cc55887a18c804af527d9f/src%2Flibrustc%2Fty%2Fconstness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fconstness.rs?ref=b75d5f18677fadef03cc55887a18c804af527d9f", "patch": "@@ -40,19 +40,24 @@ impl<'a, 'tcx> TyCtxt<'a, 'tcx, 'tcx> {\n \n     /// Returns true if this function must conform to `min_const_fn`\n     pub fn is_min_const_fn(self, def_id: DefId) -> bool {\n-        if self.features().staged_api {\n-            // some intrinsics are waved through if called inside the\n-            // standard library. Users never need to call them directly\n-            if let abi::Abi::RustIntrinsic = self.fn_sig(def_id).abi() {\n-                assert!(!self.is_const_fn(def_id));\n-                match &self.item_name(def_id).as_str()[..] {\n-                    | \"size_of\"\n-                    | \"min_align_of\"\n-                    | \"needs_drop\"\n-                    => return true,\n-                    _ => {},\n-                }\n+        // some intrinsics are waved through if called inside the\n+        // standard library. Users never need to call them directly\n+        if let abi::Abi::RustIntrinsic = self.fn_sig(def_id).abi() {\n+            match &self.item_name(def_id).as_str()[..] {\n+                | \"size_of\"\n+                | \"min_align_of\"\n+                | \"needs_drop\"\n+                => return true,\n+                _ => {},\n             }\n+        }\n+\n+        // Bail out if the signature doesn't contain `const`\n+        if !self.is_const_fn_raw(def_id) {\n+            return false;\n+        }\n+\n+        if self.features().staged_api {\n             // in order for a libstd function to be considered min_const_fn\n             // it needs to be stable and have no `rustc_const_unstable` attribute\n             self.is_const_fn_raw(def_id) && match self.lookup_stability(def_id) {\n@@ -66,7 +71,7 @@ impl<'a, 'tcx> TyCtxt<'a, 'tcx, 'tcx> {\n             }\n         } else {\n             // users enabling the `const_fn` feature gate can do what they want\n-            self.is_const_fn_raw(def_id) && !self.features().const_fn\n+            !self.features().const_fn\n         }\n     }\n }"}]}