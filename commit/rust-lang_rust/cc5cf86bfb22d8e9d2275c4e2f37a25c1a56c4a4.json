{"sha": "cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4", "node_id": "C_kwDOAAsO6NoAKGNjNWNmODZiZmIyMmQ4ZTlkMjI3NWM0ZTJmMzdhMjVjMWE1NmM0YTQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-03-12T21:00:12Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-03-12T21:00:12Z"}, "message": "Remove needless use of `Into`", "tree": {"sha": "2c228c73a7254c42151b79e0e93e2e02fc16523c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c228c73a7254c42151b79e0e93e2e02fc16523c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4", "html_url": "https://github.com/rust-lang/rust/commit/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed2a69c4a9f3e5535461484af6266681fd7d90d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed2a69c4a9f3e5535461484af6266681fd7d90d4", "html_url": "https://github.com/rust-lang/rust/commit/ed2a69c4a9f3e5535461484af6266681fd7d90d4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ec538f11831b06a0e70c080ec3739906d0ddab44", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=cc5cf86bfb22d8e9d2275c4e2f37a25c1a56c4a4", "patch": "@@ -327,7 +327,7 @@ fn merge_attrs(\n /// Inline an `impl`, inherent or of a trait. The `did` must be for an `impl`.\n crate fn build_impl(\n     cx: &mut DocContext<'_>,\n-    parent_module: impl Into<Option<DefId>>,\n+    parent_module: Option<DefId>,\n     did: DefId,\n     attrs: Option<Attrs<'_>>,\n     ret: &mut Vec<clean::Item>,\n@@ -478,7 +478,7 @@ crate fn build_impl(\n         record_extern_trait(cx, did);\n     }\n \n-    let (merged_attrs, cfg) = merge_attrs(cx, parent_module.into(), load_attrs(cx, did), attrs);\n+    let (merged_attrs, cfg) = merge_attrs(cx, parent_module, load_attrs(cx, did), attrs);\n     trace!(\"merged_attrs={:?}\", merged_attrs);\n \n     trace!("}]}