{"sha": "b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "node_id": "C_kwDOAAsO6NoAKGI4MzU3ZmZkMWYyYjNmN2NkMTJiN2NkMjlkMzJjMDhhNWVjNWI3YzU", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-14T15:06:21Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-14T15:06:21Z"}, "message": "fix `vec-box-size-threshold` off-by-one error", "tree": {"sha": "e579224e86cf8eb7e3149d39486beb935b93c9b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e579224e86cf8eb7e3149d39486beb935b93c9b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "html_url": "https://github.com/rust-lang/rust/commit/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/comments", "author": null, "committer": null, "parents": [{"sha": "a5995279fb896c87b94cef1f34fb4a17d87eaae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5995279fb896c87b94cef1f34fb4a17d87eaae7", "html_url": "https://github.com/rust-lang/rust/commit/a5995279fb896c87b94cef1f34fb4a17d87eaae7"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "02703ebecb928046afe71261556ca5f95b04d93f", "filename": "clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "patch": "@@ -42,7 +42,7 @@ pub(super) fn check(\n             if !ty_ty.has_escaping_bound_vars();\n             if ty_ty.is_sized(cx.tcx.at(ty.span), cx.param_env);\n             if let Ok(ty_ty_size) = cx.layout_of(ty_ty).map(|l| l.size.bytes());\n-            if ty_ty_size <= box_size_threshold;\n+            if ty_ty_size < box_size_threshold;\n             then {\n                 span_lint_and_sugg(\n                     cx,"}, {"sha": "4c46deb585b6c26297d3f931b6ce21f90d3f4ee8", "filename": "tests/ui-toml/vec_box_sized/test.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/tests%2Fui-toml%2Fvec_box_sized%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/tests%2Fui-toml%2Fvec_box_sized%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fvec_box_sized%2Ftest.rs?ref=b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "patch": "@@ -7,8 +7,9 @@ struct C {\n }\n \n struct Foo(Vec<Box<u8>>);\n-struct Bar(Vec<Box<u32>>);\n-struct Baz(Vec<Box<(u32, u32)>>);\n+struct Bar(Vec<Box<u16>>);\n+struct Quux(Vec<Box<u32>>);\n+struct Baz(Vec<Box<(u16, u16)>>);\n struct BarBaz(Vec<Box<S>>);\n struct FooBarBaz(Vec<Box<C>>);\n "}, {"sha": "55de68f8ecf47b21cc90489ea7f8c4ec06b21db8", "filename": "tests/ui-toml/vec_box_sized/test.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/tests%2Fui-toml%2Fvec_box_sized%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5/tests%2Fui-toml%2Fvec_box_sized%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fvec_box_sized%2Ftest.stderr?ref=b8357ffd1f2b3f7cd12b7cd29d32c08a5ec5b7c5", "patch": "@@ -9,11 +9,11 @@ LL | struct Foo(Vec<Box<u8>>);\n error: `Vec<T>` is already on the heap, the boxing is unnecessary\n   --> $DIR/test.rs:10:12\n    |\n-LL | struct Bar(Vec<Box<u32>>);\n-   |            ^^^^^^^^^^^^^ help: try: `Vec<u32>`\n+LL | struct Bar(Vec<Box<u16>>);\n+   |            ^^^^^^^^^^^^^ help: try: `Vec<u16>`\n \n error: `Vec<T>` is already on the heap, the boxing is unnecessary\n-  --> $DIR/test.rs:13:18\n+  --> $DIR/test.rs:14:18\n    |\n LL | struct FooBarBaz(Vec<Box<C>>);\n    |                  ^^^^^^^^^^^ help: try: `Vec<C>`"}]}