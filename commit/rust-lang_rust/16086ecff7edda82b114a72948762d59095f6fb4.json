{"sha": "16086ecff7edda82b114a72948762d59095f6fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDg2ZWNmZjdlZGRhODJiMTE0YTcyOTQ4NzYyZDU5MDk1ZjZmYjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-03T23:56:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-05T04:45:42Z"}, "message": "libsyntax: Remove `pub impl` from the language", "tree": {"sha": "8f6e850a5803194c54d523703843bcec302f8ba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6e850a5803194c54d523703843bcec302f8ba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16086ecff7edda82b114a72948762d59095f6fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16086ecff7edda82b114a72948762d59095f6fb4", "html_url": "https://github.com/rust-lang/rust/commit/16086ecff7edda82b114a72948762d59095f6fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16086ecff7edda82b114a72948762d59095f6fb4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9873f67e944f2f9237caa3c670cbaa0ca988c9d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9873f67e944f2f9237caa3c670cbaa0ca988c9d0", "html_url": "https://github.com/rust-lang/rust/commit/9873f67e944f2f9237caa3c670cbaa0ca988c9d0"}], "stats": {"total": 52, "additions": 25, "deletions": 27}, "files": [{"sha": "455cc0b74507e02c36acac4ed24acc6d120b474e", "filename": "src/libextra/term.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibextra%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibextra%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterm.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -57,7 +57,7 @@ pub struct Terminal {\n }\n \n #[cfg(not(target_os = \"win32\"))]\n-pub impl Terminal {\n+impl Terminal {\n     pub fn new(out: @io::Writer) -> Result<Terminal, ~str> {\n         let term = os::getenv(\"TERM\");\n         if term.is_none() {\n@@ -81,7 +81,7 @@ pub impl Terminal {\n \n         return Ok(Terminal {out: out, ti: inf, color_supported: cs});\n     }\n-    fn fg(&self, color: u8) {\n+    pub fn fg(&self, color: u8) {\n         if self.color_supported {\n             let s = expand(*self.ti.strings.find_equiv(&(\"setaf\")).unwrap(),\n                            [Number(color as int)], [], []);\n@@ -92,7 +92,7 @@ pub impl Terminal {\n             }\n         }\n     }\n-    fn bg(&self, color: u8) {\n+    pub fn bg(&self, color: u8) {\n         if self.color_supported {\n             let s = expand(*self.ti.strings.find_equiv(&(\"setab\")).unwrap(),\n                            [Number(color as int)], [], []);\n@@ -103,7 +103,7 @@ pub impl Terminal {\n             }\n         }\n     }\n-    fn reset(&self) {\n+    pub fn reset(&self) {\n         if self.color_supported {\n             let s = expand(*self.ti.strings.find_equiv(&(\"op\")).unwrap(), [], [], []);\n             if s.is_ok() {\n@@ -116,17 +116,17 @@ pub impl Terminal {\n }\n \n #[cfg(target_os = \"win32\")]\n-pub impl Terminal {\n+impl Terminal {\n     pub fn new(out: @io::Writer) -> Result<Terminal, ~str> {\n         return Ok(Terminal {out: out, color_supported: false});\n     }\n \n-    fn fg(&self, color: u8) {\n+    pub fn fg(&self, color: u8) {\n     }\n \n-    fn bg(&self, color: u8) {\n+    pub fn bg(&self, color: u8) {\n     }\n \n-    fn reset(&self) {\n+    pub fn reset(&self) {\n     }\n }"}, {"sha": "85c82787f266e210574b6a64b4dfb7884c9a8e5e", "filename": "src/librustpkg/package_id.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibrustpkg%2Fpackage_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibrustpkg%2Fpackage_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpackage_id.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -35,8 +35,8 @@ pub struct PkgId {\n     version: Version\n }\n \n-pub impl PkgId {\n-    fn new(s: &str) -> PkgId {\n+impl PkgId {\n+    pub fn new(s: &str) -> PkgId {\n         use conditions::bad_pkg_id::cond;\n \n         let p = Path(s);\n@@ -57,13 +57,13 @@ pub impl PkgId {\n         }\n     }\n \n-    fn hash(&self) -> ~str {\n+    pub fn hash(&self) -> ~str {\n         fmt!(\"%s-%s-%s\", self.remote_path.to_str(),\n              hash(self.remote_path.to_str() + self.version.to_str()),\n              self.version.to_str())\n     }\n \n-    fn short_name_with_version(&self) -> ~str {\n+    pub fn short_name_with_version(&self) -> ~str {\n         fmt!(\"%s-%s\", self.short_name, self.version.to_str())\n     }\n }"}, {"sha": "f694e37d42fd4db435a819fbde860e0417642b73", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -440,8 +440,8 @@ pub struct expr {\n     span: span,\n }\n \n-pub impl expr {\n-    fn get_callee_id(&self) -> Option<node_id> {\n+impl expr {\n+    pub fn get_callee_id(&self) -> Option<node_id> {\n         match self.node {\n             expr_method_call(callee_id, _, _, _, _, _) |\n             expr_index(callee_id, _, _) |"}, {"sha": "f37b430b480d17d932c9303884ab0b4f1c8a169c", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -49,7 +49,7 @@ pub enum ObsoleteSyntax {\n     ObsoleteTraitBoundSeparator,\n     ObsoleteMutOwnedPointer,\n     ObsoleteMutVector,\n-    ObsoleteTraitImplVisibility,\n+    ObsoleteImplVisibility,\n     ObsoleteRecordType,\n     ObsoleteRecordPattern,\n     ObsoletePostFnTySigil,\n@@ -158,11 +158,10 @@ impl Parser {\n                  in a mutable location, like a mutable local variable or an \\\n                  `@mut` box\"\n             ),\n-            ObsoleteTraitImplVisibility => (\n-                \"visibility-qualified trait implementation\",\n-                \"`pub` or `priv` is meaningless for trait implementations, \\\n-                 because the `impl...for...` form defines overloads for \\\n-                 methods that already exist; remove the `pub` or `priv`\"\n+            ObsoleteImplVisibility => (\n+                \"visibility-qualified implementation\",\n+                \"`pub` or `priv` goes on individual functions; remove the \\\n+                 `pub` or `priv`\"\n             ),\n             ObsoleteRecordType => (\n                 \"structural record type\","}, {"sha": "dd966815ad2e964560a083019678e839c6649842", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -76,7 +76,7 @@ use parse::obsolete::{ObsoleteMoveInit, ObsoleteBinaryMove, ObsoleteSwap};\n use parse::obsolete::{ObsoleteSyntax, ObsoleteLowerCaseKindBounds};\n use parse::obsolete::{ObsoleteUnsafeBlock, ObsoleteImplSyntax};\n use parse::obsolete::{ObsoleteTraitBoundSeparator, ObsoleteMutOwnedPointer};\n-use parse::obsolete::{ObsoleteMutVector, ObsoleteTraitImplVisibility};\n+use parse::obsolete::{ObsoleteMutVector, ObsoleteImplVisibility};\n use parse::obsolete::{ObsoleteRecordType, ObsoleteRecordPattern};\n use parse::obsolete::{ObsoletePostFnTySigil};\n use parse::obsolete::{ObsoleteBareFnType, ObsoleteNewtypeEnum};\n@@ -3305,10 +3305,9 @@ impl Parser {\n             None\n         };\n \n-        // Do not allow visibility to be specified in `impl...for...`. It is\n-        // meaningless.\n-        if opt_trait.is_some() && visibility != ast::inherited {\n-            self.obsolete(*self.span, ObsoleteTraitImplVisibility);\n+        // Do not allow visibility to be specified.\n+        if visibility != ast::inherited {\n+            self.obsolete(*self.span, ObsoleteImplVisibility);\n         }\n \n         let mut meths = ~[];"}, {"sha": "811bf082ae8915ce3e5883770709c59f51e9ee17", "filename": "src/test/auxiliary/reexported_static_methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16086ecff7edda82b114a72948762d59095f6fb4/src%2Ftest%2Fauxiliary%2Freexported_static_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16086ecff7edda82b114a72948762d59095f6fb4/src%2Ftest%2Fauxiliary%2Freexported_static_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Freexported_static_methods.rs?ref=16086ecff7edda82b114a72948762d59095f6fb4", "patch": "@@ -34,7 +34,7 @@ pub mod sub_foo {\n         unused_str: ~str\n     }\n \n-    pub impl Boz {\n+    impl Boz {\n         pub fn boz(i: int) -> bool {\n             i > 0\n         }\n@@ -45,7 +45,7 @@ pub mod sub_foo {\n         Bort2\n     }\n \n-    pub impl Bort {\n+    impl Bort {\n         pub fn bort() -> ~str {\n             ~\"bort()\"\n         }"}]}