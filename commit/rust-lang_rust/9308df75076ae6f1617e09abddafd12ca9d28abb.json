{"sha": "9308df75076ae6f1617e09abddafd12ca9d28abb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMDhkZjc1MDc2YWU2ZjE2MTdlMDlhYmRkYWZkMTJjYTlkMjhhYmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-10T08:52:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-10T08:52:24Z"}, "message": "Auto merge of #3863 - rust-lang:get_unwrap, r=oli-obk\n\nMove get_unwrap to restriction\n\nfixes #3862\n\nr? @oli-obk", "tree": {"sha": "b1186bc41fb2a28b4980b3c6746ecec6e6f5cf8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1186bc41fb2a28b4980b3c6746ecec6e6f5cf8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9308df75076ae6f1617e09abddafd12ca9d28abb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9308df75076ae6f1617e09abddafd12ca9d28abb", "html_url": "https://github.com/rust-lang/rust/commit/9308df75076ae6f1617e09abddafd12ca9d28abb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9308df75076ae6f1617e09abddafd12ca9d28abb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "920112d723e3d4162e72ad29070ebf9cf65feb38", "url": "https://api.github.com/repos/rust-lang/rust/commits/920112d723e3d4162e72ad29070ebf9cf65feb38", "html_url": "https://github.com/rust-lang/rust/commit/920112d723e3d4162e72ad29070ebf9cf65feb38"}, {"sha": "038ec7f5d8aeaafafb7910f5f6e4e6742f7afe4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/038ec7f5d8aeaafafb7910f5f6e4e6742f7afe4e", "html_url": "https://github.com/rust-lang/rust/commit/038ec7f5d8aeaafafb7910f5f6e4e6742f7afe4e"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "9d9c426fa773a2c21673baf27d5a2468a472ba8e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9308df75076ae6f1617e09abddafd12ca9d28abb/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9308df75076ae6f1617e09abddafd12ca9d28abb/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=9308df75076ae6f1617e09abddafd12ca9d28abb", "patch": "@@ -583,6 +583,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         matches::WILDCARD_ENUM_MATCH_ARM,\n         mem_forget::MEM_FORGET,\n         methods::CLONE_ON_REF_PTR,\n+        methods::GET_UNWRAP,\n         methods::OPTION_UNWRAP_USED,\n         methods::RESULT_UNWRAP_USED,\n         methods::WRONG_PUB_SELF_CONVENTION,\n@@ -749,7 +750,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         methods::CLONE_ON_COPY,\n         methods::EXPECT_FUN_CALL,\n         methods::FILTER_NEXT,\n-        methods::GET_UNWRAP,\n         methods::INTO_ITER_ON_ARRAY,\n         methods::INTO_ITER_ON_REF,\n         methods::ITER_CLONED_COLLECT,\n@@ -908,7 +908,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         matches::SINGLE_MATCH,\n         mem_replace::MEM_REPLACE_OPTION_WITH_NONE,\n         methods::CHARS_LAST_CMP,\n-        methods::GET_UNWRAP,\n         methods::INTO_ITER_ON_REF,\n         methods::ITER_CLONED_COLLECT,\n         methods::ITER_SKIP_NEXT,"}, {"sha": "42de11d6dac1a2f9187c50d1710164c079e0c6ca", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9308df75076ae6f1617e09abddafd12ca9d28abb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9308df75076ae6f1617e09abddafd12ca9d28abb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=9308df75076ae6f1617e09abddafd12ca9d28abb", "patch": "@@ -579,7 +579,7 @@ declare_clippy_lint! {\n     /// some_vec[0] = 1;\n     /// ```\n     pub GET_UNWRAP,\n-    style,\n+    restriction,\n     \"using `.get().unwrap()` or `.get_mut().unwrap()` when using `[]` would work instead\"\n }\n "}, {"sha": "97e6b20f471fcf8bef96afdbeb493aa8f3deeee3", "filename": "tests/ui/get_unwrap.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.fixed?ref=9308df75076ae6f1617e09abddafd12ca9d28abb", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![allow(unused_mut)]\n+#![deny(clippy::get_unwrap)]\n \n use std::collections::BTreeMap;\n use std::collections::HashMap;"}, {"sha": "1c9a71c09699afda778d8dba35896571a672d997", "filename": "tests/ui/get_unwrap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.rs?ref=9308df75076ae6f1617e09abddafd12ca9d28abb", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![allow(unused_mut)]\n+#![deny(clippy::get_unwrap)]\n \n use std::collections::BTreeMap;\n use std::collections::HashMap;"}, {"sha": "b27bef6d1cc9d65bb80d462feb82398c533ec037", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9308df75076ae6f1617e09abddafd12ca9d28abb/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=9308df75076ae6f1617e09abddafd12ca9d28abb", "patch": "@@ -1,79 +1,83 @@\n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:33:17\n+  --> $DIR/get_unwrap.rs:34:17\n    |\n LL |         let _ = boxed_slice.get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n    |\n-   = note: `-D clippy::get-unwrap` implied by `-D warnings`\n+note: lint level defined here\n+  --> $DIR/get_unwrap.rs:3:9\n+   |\n+LL | #![deny(clippy::get_unwrap)]\n+   |         ^^^^^^^^^^^^^^^^^^\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:34:17\n+  --> $DIR/get_unwrap.rs:35:17\n    |\n LL |         let _ = some_slice.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_slice[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:35:17\n+  --> $DIR/get_unwrap.rs:36:17\n    |\n LL |         let _ = some_vec.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vec[0]`\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:36:17\n+  --> $DIR/get_unwrap.rs:37:17\n    |\n LL |         let _ = some_vecdeque.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:37:17\n+  --> $DIR/get_unwrap.rs:38:17\n    |\n LL |         let _ = some_hashmap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_hashmap[&1]`\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:38:17\n+  --> $DIR/get_unwrap.rs:39:17\n    |\n LL |         let _ = some_btreemap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_btreemap[&1]`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:41:21\n+  --> $DIR/get_unwrap.rs:42:21\n    |\n LL |         let _: u8 = *boxed_slice.get(1).unwrap();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `boxed_slice[1]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:46:9\n+  --> $DIR/get_unwrap.rs:47:9\n    |\n LL |         *boxed_slice.get_mut(0).unwrap() = 1;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `boxed_slice[0]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:47:9\n+  --> $DIR/get_unwrap.rs:48:9\n    |\n LL |         *some_slice.get_mut(0).unwrap() = 1;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_slice[0]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:48:9\n+  --> $DIR/get_unwrap.rs:49:9\n    |\n LL |         *some_vec.get_mut(0).unwrap() = 1;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0]`\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:49:9\n+  --> $DIR/get_unwrap.rs:50:9\n    |\n LL |         *some_vecdeque.get_mut(0).unwrap() = 1;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:58:17\n+  --> $DIR/get_unwrap.rs:59:17\n    |\n LL |         let _ = some_vec.get(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:59:17\n+  --> $DIR/get_unwrap.rs:60:17\n    |\n LL |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`"}]}