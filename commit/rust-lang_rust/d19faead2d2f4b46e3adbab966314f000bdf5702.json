{"sha": "d19faead2d2f4b46e3adbab966314f000bdf5702", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOWZhZWFkMmQyZjRiNDZlM2FkYmFiOTY2MzE0ZjAwMGJkZjU3MDI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-11-04T20:48:05Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-11-04T22:22:37Z"}, "message": "Make DefIndex use newtype_index macro", "tree": {"sha": "0c3f8ba70ed8ec15769c62fdd2c88690d39f8647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c3f8ba70ed8ec15769c62fdd2c88690d39f8647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d19faead2d2f4b46e3adbab966314f000bdf5702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d19faead2d2f4b46e3adbab966314f000bdf5702", "html_url": "https://github.com/rust-lang/rust/commit/d19faead2d2f4b46e3adbab966314f000bdf5702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d19faead2d2f4b46e3adbab966314f000bdf5702/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9bc8e7c4fd4d268a45956b3f91c39e5dc9b2c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9bc8e7c4fd4d268a45956b3f91c39e5dc9b2c0f", "html_url": "https://github.com/rust-lang/rust/commit/f9bc8e7c4fd4d268a45956b3f91c39e5dc9b2c0f"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "54e44936548682f467546d1c4b9f72b25f6bcc77", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -1834,6 +1834,7 @@ dependencies = [\n  \"arena 0.0.0\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n+ \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\","}, {"sha": "428f154c1b66a98db8fd1ddb801679ebbcf3e945", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -86,20 +86,17 @@ impl serialize::UseSpecializedDecodable for CrateNum {\n ///\n /// Since the DefIndex is mostly treated as an opaque ID, you probably\n /// don't have to care about these ranges.\n-#[derive(Clone, Eq, Ord, PartialOrd, PartialEq, RustcEncodable,\n-           RustcDecodable, Hash, Copy)]\n-pub struct DefIndex(u32);\n+newtype_index!(DefIndex\n+    {\n+        DEBUG_FORMAT = custom,\n \n-impl Idx for DefIndex {\n-    fn new(value: usize) -> Self {\n-        assert!(value < (u32::MAX) as usize);\n-        DefIndex(value as u32)\n-    }\n+        /// The start of the \"high\" range of DefIndexes.\n+        const DEF_INDEX_HI_START = 1 << 31,\n \n-    fn index(self) -> usize {\n-        self.0 as usize\n-    }\n-}\n+        /// The crate root is always assigned index 0 by the AST Map code,\n+        /// thanks to `NodeCollector::new`.\n+        const CRATE_DEF_INDEX = 0,\n+    });\n \n impl fmt::Debug for DefIndex {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -111,12 +108,6 @@ impl fmt::Debug for DefIndex {\n }\n \n impl DefIndex {\n-    #[inline]\n-    pub fn new(x: usize) -> DefIndex {\n-        assert!(x < (u32::MAX as usize));\n-        DefIndex(x as u32)\n-    }\n-\n     #[inline]\n     pub fn from_u32(x: u32) -> DefIndex {\n         DefIndex(x)\n@@ -155,13 +146,6 @@ impl DefIndex {\n     }\n }\n \n-/// The start of the \"high\" range of DefIndexes.\n-const DEF_INDEX_HI_START: DefIndex = DefIndex(1 << 31);\n-\n-/// The crate root is always assigned index 0 by the AST Map code,\n-/// thanks to `NodeCollector::new`.\n-pub const CRATE_DEF_INDEX: DefIndex = DefIndex(0);\n-\n #[derive(Copy, Clone, Eq, PartialEq, Hash)]\n pub enum DefIndexAddressSpace {\n     Low = 0,"}, {"sha": "b30cc0b09c9ac6c316cdea2ba34e49ff46cf3c0d", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -19,7 +19,7 @@ use hir::def_id::{CrateNum, DefId, DefIndex, LOCAL_CRATE, DefIndexAddressSpace,\n                   CRATE_DEF_INDEX};\n use ich::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use rustc_data_structures::stable_hasher::StableHasher;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n use session::CrateDisambiguator;"}, {"sha": "49f57d9aef50ec95a2b6a90f63f60d254550d35a", "filename": "src/librustc/infer/region_inference/graphviz.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -19,6 +19,7 @@\n use graphviz as dot;\n \n use hir::def_id::DefIndex;\n+use rustc_data_structures::indexed_vec::Idx;\n use ty;\n use middle::free_region::RegionRelations;\n use middle::region;"}, {"sha": "a57e2b96db4dbf33020b097193082c3f290233a2", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -41,6 +41,7 @@ use std::str;\n use std::u32;\n \n use rustc_serialize::{Decodable, Decoder, SpecializedDecoder, opaque};\n+use rustc_data_structures::indexed_vec::Idx;\n use syntax::attr;\n use syntax::ast::{self, Ident};\n use syntax::codemap;"}, {"sha": "ab2d152b724a7227be3528a9cf48a9bf4e054f25", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -16,3 +16,4 @@ rustc = { path = \"../librustc\" }\n arena = { path = \"../libarena\" }\n rustc_errors = { path = \"../librustc_errors\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "bed9f37c5157fab483b947fbf3b70a54e706f490", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -24,6 +24,7 @@ extern crate rustc_errors as errors;\n extern crate arena;\n #[macro_use]\n extern crate rustc;\n+extern crate rustc_data_structures;\n \n use self::Namespace::*;\n use self::TypeParameters::*;"}, {"sha": "a52e6fcad14812bf34841ffebe53c5bd1a01c27a", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19faead2d2f4b46e3adbab966314f000bdf5702/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=d19faead2d2f4b46e3adbab966314f000bdf5702", "patch": "@@ -13,6 +13,7 @@ use {Module, ModuleKind, NameBinding, NameBindingKind, PathResult};\n use Namespace::{self, MacroNS};\n use build_reduced_graph::BuildReducedGraphVisitor;\n use resolve_imports::ImportResolver;\n+use rustc_data_structures::indexed_vec::Idx;\n use rustc::hir::def_id::{DefId, BUILTIN_MACROS_CRATE, CRATE_DEF_INDEX, DefIndex};\n use rustc::hir::def::{Def, Export};\n use rustc::hir::map::{self, DefCollector};"}]}