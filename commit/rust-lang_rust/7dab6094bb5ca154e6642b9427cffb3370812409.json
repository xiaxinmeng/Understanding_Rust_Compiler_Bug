{"sha": "7dab6094bb5ca154e6642b9427cffb3370812409", "node_id": "C_kwDOAAsO6NoAKDdkYWI2MDk0YmI1Y2ExNTRlNjY0MmI5NDI3Y2ZmYjMzNzA4MTI0MDk", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-03-27T17:29:50Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-10T17:36:01Z"}, "message": "Remove useless drop of copy type", "tree": {"sha": "38840252de553175d0ea1c8682cda2d895a10016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38840252de553175d0ea1c8682cda2d895a10016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dab6094bb5ca154e6642b9427cffb3370812409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dab6094bb5ca154e6642b9427cffb3370812409", "html_url": "https://github.com/rust-lang/rust/commit/7dab6094bb5ca154e6642b9427cffb3370812409", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dab6094bb5ca154e6642b9427cffb3370812409/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d36e390d8176babedcf326581959958d447170cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d36e390d8176babedcf326581959958d447170cd", "html_url": "https://github.com/rust-lang/rust/commit/d36e390d8176babedcf326581959958d447170cd"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "bd5356575ca872d759289b5e5db5a11d392b21a1", "filename": "compiler/rustc_builtin_macros/src/format_foreign.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dab6094bb5ca154e6642b9427cffb3370812409/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dab6094bb5ca154e6642b9427cffb3370812409/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs?ref=7dab6094bb5ca154e6642b9427cffb3370812409", "patch": "@@ -562,15 +562,13 @@ pub(crate) mod printf {\n         }\n \n         if let Type = state {\n-            drop(c);\n             type_ = at.slice_between(next).unwrap();\n \n             // Don't use `move_to!` here, as we *can* be at the end of the input.\n             at = next;\n         }\n \n-        drop(c);\n-        drop(next);\n+        let _ = c; // to avoid never used value\n \n         end = at;\n         let position = InnerSpan::new(start.at, end.at);"}, {"sha": "5283a576d1b21a83a964592e599dc582dc06f8d9", "filename": "library/core/src/task/poll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs?ref=7dab6094bb5ca154e6642b9427cffb3370812409", "patch": "@@ -116,7 +116,7 @@ impl<T> Poll<T> {\n     ///     let fut = Pin::new(&mut fut);\n     ///\n     ///     let num = fut.poll(cx).ready()?;\n-    ///     # drop(num);\n+    ///     # let _ = num; // to silence unused warning\n     ///     // ... use num\n     ///\n     ///     Poll::Ready(())"}, {"sha": "8d12625e88d0cff183aaf0b087b2ce76736139d4", "filename": "library/core/src/task/ready.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fready.rs?ref=7dab6094bb5ca154e6642b9427cffb3370812409", "patch": "@@ -22,7 +22,7 @@ use core::task::Poll;\n ///     let fut = Pin::new(&mut fut);\n ///\n ///     let num = ready!(fut.poll(cx));\n-///     # drop(num);\n+///     # let _ = num;\n ///     // ... use num\n ///\n ///     Poll::Ready(())\n@@ -44,7 +44,7 @@ use core::task::Poll;\n ///     Poll::Ready(t) => t,\n ///     Poll::Pending => return Poll::Pending,\n /// };\n-///     # drop(num);\n+///     # let _ = num; // to silence unused warning\n ///     # // ... use num\n ///     #\n ///     # Poll::Ready(())"}, {"sha": "6d59266b6f838dd5304c7b28c3e95dce2bb38544", "filename": "library/std/src/panicking.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fstd%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dab6094bb5ca154e6642b9427cffb3370812409/library%2Fstd%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanicking.rs?ref=7dab6094bb5ca154e6642b9427cffb3370812409", "patch": "@@ -541,7 +541,7 @@ pub fn begin_panic_handler(info: &PanicInfo<'_>) -> ! {\n             // Lazily, the first time this gets called, run the actual string formatting.\n             self.string.get_or_insert_with(|| {\n                 let mut s = String::new();\n-                drop(s.write_fmt(*inner));\n+                let _err = s.write_fmt(*inner);\n                 s\n             })\n         }"}]}