{"sha": "fd86a01bb9f23921c82017485d88fe14448e78fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkODZhMDFiYjlmMjM5MjFjODIwMTc0ODVkODhmZTE0NDQ4ZTc4ZmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:36:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:36:08Z"}, "message": "rollup merge of #22813: alexcrichton/deprecate-net\n\nThe `std::net` primitives should be ready for use now and as a result the old\nones are now deprecated and slated for removal. Most TCP/UDP functionality is\nnow available through `std::net` but the `std::old_io::net::pipe` module is\nremoved entirely from the standard library.\n\nUnix socket funtionality can be found in sfackler's [`unix_socket`][unix] crate\nand there is currently no replacement for named pipes on Windows.\n\n[unix]: https://crates.io/crates/unix_socket\n\n[breaking-change]", "tree": {"sha": "ef2b8e32f3f88e0c968ed186b1dfb5e528fa1e1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef2b8e32f3f88e0c968ed186b1dfb5e528fa1e1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd86a01bb9f23921c82017485d88fe14448e78fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd86a01bb9f23921c82017485d88fe14448e78fe", "html_url": "https://github.com/rust-lang/rust/commit/fd86a01bb9f23921c82017485d88fe14448e78fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd86a01bb9f23921c82017485d88fe14448e78fe/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a30412ebf4363acf92f1edafa2c007617c94d02", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a30412ebf4363acf92f1edafa2c007617c94d02", "html_url": "https://github.com/rust-lang/rust/commit/1a30412ebf4363acf92f1edafa2c007617c94d02"}, {"sha": "9aea749b835a6fdcad6f2840a00adac996cc0339", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aea749b835a6fdcad6f2840a00adac996cc0339", "html_url": "https://github.com/rust-lang/rust/commit/9aea749b835a6fdcad6f2840a00adac996cc0339"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "a3567290b0e16395a83003ed874f3301bb469e50", "filename": "src/libstd/old_io/net/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fold_io%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fold_io%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fnet%2Fmod.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -10,6 +10,10 @@\n \n //! Networking I/O\n \n+#![deprecated(since = \"1.0.0\",\n+              reason = \"replaced with new I/O primitives in `std::net`\")]\n+#![unstable(feature = \"old_io\")]\n+\n use old_io::{IoError, IoResult, InvalidInput};\n use ops::FnMut;\n use option::Option::None;"}, {"sha": "2ecaf515f081b226a341af1af38b205e20ece099", "filename": "src/libstd/old_io/net/pipe.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -19,6 +19,12 @@\n //! instances as clients.\n \n #![allow(missing_docs)]\n+#![deprecated(since = \"1.0.0\",\n+              reason = \"will be removed to be reintroduced at a later date; \\\n+                        in the meantime consider using the `unix_socket` crate \\\n+                        for unix sockets; there is currently no replacement \\\n+                        for named pipes\")]\n+#![unstable(feature = \"old_io\")]\n \n use prelude::v1::*;\n "}, {"sha": "344645dfc1a159904c59a03698103a3b2a5b9a31", "filename": "src/libstd/sys/common/net.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(deprecated)]\n+\n use prelude::v1::*;\n use self::SocketStatus::*;\n use self::InAddr::*;"}, {"sha": "ca7f7c4c0ca4446521eb2072efcffe6a7151c2f0", "filename": "src/libstd/sys/unix/ext.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Funix%2Fext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Funix%2Fext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -73,42 +73,49 @@ impl AsRawFd for old_io::pipe::PipeStream {\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::pipe::UnixStream {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::pipe::UnixListener {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::pipe::UnixAcceptor {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::tcp::TcpStream {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::tcp::TcpListener {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::tcp::TcpAcceptor {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawFd for old_io::net::udp::UdpSocket {\n     fn as_raw_fd(&self) -> Fd {\n         self.as_inner().fd()"}, {"sha": "4fcaf504c3da5d7f447c1a933064ad5fe932c89a", "filename": "src/libstd/sys/unix/tcp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Funix%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Funix%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftcp.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(deprecated)]\n+\n use prelude::v1::*;\n \n use old_io::net::ip;"}, {"sha": "b30aec084392761fbf54326228a9e037efa7f285", "filename": "src/libstd/sys/windows/ext.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fwindows%2Fext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fwindows%2Fext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -58,18 +58,21 @@ impl AsRawHandle for old_io::pipe::PipeStream {\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawHandle for old_io::net::pipe::UnixStream {\n     fn as_raw_handle(&self) -> Handle {\n         self.as_inner().handle()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawHandle for old_io::net::pipe::UnixListener {\n     fn as_raw_handle(&self) -> Handle {\n         self.as_inner().handle()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawHandle for old_io::net::pipe::UnixAcceptor {\n     fn as_raw_handle(&self) -> Handle {\n         self.as_inner().handle()\n@@ -81,24 +84,28 @@ pub trait AsRawSocket {\n     fn as_raw_socket(&self) -> Socket;\n }\n \n+#[allow(deprecated)]\n impl AsRawSocket for old_io::net::tcp::TcpStream {\n     fn as_raw_socket(&self) -> Socket {\n         self.as_inner().fd()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawSocket for old_io::net::tcp::TcpListener {\n     fn as_raw_socket(&self) -> Socket {\n         self.as_inner().socket()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawSocket for old_io::net::tcp::TcpAcceptor {\n     fn as_raw_socket(&self) -> Socket {\n         self.as_inner().socket()\n     }\n }\n \n+#[allow(deprecated)]\n impl AsRawSocket for old_io::net::udp::UdpSocket {\n     fn as_raw_socket(&self) -> Socket {\n         self.as_inner().fd()"}, {"sha": "8547de145f8c40cddbc83a7180562288affd924e", "filename": "src/libstd/sys/windows/tcp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd86a01bb9f23921c82017485d88fe14448e78fe/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs?ref=fd86a01bb9f23921c82017485d88fe14448e78fe", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(deprecated)]\n+\n use old_io::net::ip;\n use old_io::IoResult;\n use libc;"}]}