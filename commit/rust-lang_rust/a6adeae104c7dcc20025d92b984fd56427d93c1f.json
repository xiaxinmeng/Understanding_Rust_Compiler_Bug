{"sha": "a6adeae104c7dcc20025d92b984fd56427d93c1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YWRlYWUxMDRjN2RjYzIwMDI1ZDkyYjk4NGZkNTY0MjdkOTNjMWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-05T22:15:46Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-05T23:04:04Z"}, "message": "Validate syntax of `--cfg` command line arguments", "tree": {"sha": "d176164bab30eb2ce794c9f032fbf394afe4f181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d176164bab30eb2ce794c9f032fbf394afe4f181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6adeae104c7dcc20025d92b984fd56427d93c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6adeae104c7dcc20025d92b984fd56427d93c1f", "html_url": "https://github.com/rust-lang/rust/commit/a6adeae104c7dcc20025d92b984fd56427d93c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6adeae104c7dcc20025d92b984fd56427d93c1f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0a05c59818a149d67e1fba0b8a37671204c089d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a05c59818a149d67e1fba0b8a37671204c089d", "html_url": "https://github.com/rust-lang/rust/commit/b0a05c59818a149d67e1fba0b8a37671204c089d"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "73c9729feee32864d18ea9a227558fbf4a67fa03", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -21,7 +21,7 @@ use rustc_target::spec::{Target, TargetTriple};\n use lint;\n use middle::cstore;\n \n-use syntax::ast::{self, IntTy, UintTy};\n+use syntax::ast::{self, IntTy, UintTy, MetaItemKind};\n use syntax::source_map::{FileName, FilePathMapping};\n use syntax::edition::{Edition, EDITION_NAME_LIST, DEFAULT_EDITION};\n use syntax::parse::token;\n@@ -1735,22 +1735,33 @@ pub fn parse_cfgspecs(cfgspecs: Vec<String>) -> ast::CrateConfig {\n             let mut parser =\n                 parse::new_parser_from_source_str(&sess, FileName::CfgSpec, s.to_string());\n \n-            let meta_item = panictry!(parser.parse_meta_item());\n+            macro_rules! error {($reason: expr) => {\n+                early_error(ErrorOutputType::default(),\n+                            &format!(concat!(\"invalid `--cfg` argument: `{}` (\", $reason, \")\"), s));\n+            }}\n \n-            if parser.token != token::Eof {\n-                early_error(\n-                    ErrorOutputType::default(),\n-                    &format!(\"invalid --cfg argument: {}\", s),\n-                )\n-            } else if meta_item.is_meta_item_list() {\n-                let msg = format!(\n-                    \"invalid predicate in --cfg command line argument: `{}`\",\n-                    meta_item.ident\n-                );\n-                early_error(ErrorOutputType::default(), &msg)\n+            match &mut parser.parse_meta_item() {\n+                Ok(meta_item) if parser.token == token::Eof => {\n+                    if meta_item.ident.segments.len() != 1 {\n+                        error!(\"argument key must be an identifier\");\n+                    }\n+                    match &meta_item.node {\n+                        MetaItemKind::List(..) => {\n+                            error!(r#\"expected `key` or `key=\"value\"`\"#);\n+                        }\n+                        MetaItemKind::NameValue(lit) if !lit.node.is_str() => {\n+                            error!(\"argument value must be a string\");\n+                        }\n+                        MetaItemKind::NameValue(..) | MetaItemKind::Word => {\n+                            return (meta_item.name(), meta_item.value_str());\n+                        }\n+                    }\n+                }\n+                Ok(..) => {}\n+                Err(err) => err.cancel(),\n             }\n \n-            (meta_item.name(), meta_item.value_str())\n+            error!(r#\"expected `key` or `key=\"value\"`\"#);\n         })\n         .collect::<ast::CrateConfig>()\n }"}, {"sha": "36dd78dd2b19a28d9571f486396251fb7795bf23", "filename": "src/test/ui/cfg-arg-invalid-1.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid-1.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: --cfg a(b=c)\n+// error-pattern: invalid `--cfg` argument: `a(b=c)` (expected `key` or `key=\"value\"`)\n+fn main() {}"}, {"sha": "48d656a4a28d92ffac76fb6aaf0a5d789c6c9c95", "filename": "src/test/ui/cfg-arg-invalid-2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid-2.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: --cfg a{b}\n+// error-pattern: invalid `--cfg` argument: `a{b}` (expected `key` or `key=\"value\"`)\n+fn main() {}"}, {"sha": "96ac7828c5c3b9dd766d89a6fd62503f6b7f1289", "filename": "src/test/ui/cfg-arg-invalid-3.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid-3.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: --cfg a::b\n+// error-pattern: invalid `--cfg` argument: `a::b` (argument key must be an identifier)\n+fn main() {}"}, {"sha": "e7dfa17b4b6c414a9cd3132cad8e1f2013a5c204", "filename": "src/test/ui/cfg-arg-invalid-4.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid-4.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: --cfg a(b)\n+// error-pattern: invalid `--cfg` argument: `a(b)` (expected `key` or `key=\"value\"`)\n+fn main() {}"}, {"sha": "a939f451038896b240fe514c9059d147ed67a2d7", "filename": "src/test/ui/cfg-arg-invalid-5.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-arg-invalid-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid-5.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: --cfg a=10\n+// error-pattern: invalid `--cfg` argument: `a=10` (argument value must be a string)\n+fn main() {}"}, {"sha": "404630399c601e15450d7311422c58936218960a", "filename": "src/test/ui/cfg-arg-invalid.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b0a05c59818a149d67e1fba0b8a37671204c089d/src%2Ftest%2Fui%2Fcfg-arg-invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0a05c59818a149d67e1fba0b8a37671204c089d/src%2Ftest%2Fui%2Fcfg-arg-invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-arg-invalid.rs?ref=b0a05c59818a149d67e1fba0b8a37671204c089d", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: --cfg a{b}\n-// error-pattern: invalid --cfg argument: a{b}\n-fn main() {}"}, {"sha": "5cf8135ca6bc6795d333c5c9abde6250e0933fc9", "filename": "src/test/ui/cfg-empty-codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-empty-codemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6adeae104c7dcc20025d92b984fd56427d93c1f/src%2Ftest%2Fui%2Fcfg-empty-codemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-empty-codemap.rs?ref=a6adeae104c7dcc20025d92b984fd56427d93c1f", "patch": "@@ -12,7 +12,7 @@\n \n // compile-flags: --cfg \"\"\n \n-// error-pattern: expected identifier, found\n+// error-pattern: invalid `--cfg` argument: `\"\"` (expected `key` or `key=\"value\"`)\n \n pub fn main() {\n }"}, {"sha": "794b8bb86bb5741a3a9ac850ce563a87116b12a3", "filename": "src/test/ui/issues/issue-31495.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b0a05c59818a149d67e1fba0b8a37671204c089d/src%2Ftest%2Fui%2Fissues%2Fissue-31495.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0a05c59818a149d67e1fba0b8a37671204c089d/src%2Ftest%2Fui%2Fissues%2Fissue-31495.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31495.rs?ref=b0a05c59818a149d67e1fba0b8a37671204c089d", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: --cfg foo(bar)\n-// error-pattern: invalid predicate in --cfg command line argument: `foo`\n-fn main() {}"}]}