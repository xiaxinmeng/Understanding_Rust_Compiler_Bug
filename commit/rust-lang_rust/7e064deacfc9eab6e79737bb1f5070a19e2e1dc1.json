{"sha": "7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMDY0ZGVhY2ZjOWVhYjZlNzk3MzdiYjFmNTA3MGExOWUyZTFkYzE=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-27T23:22:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T21:44:39Z"}, "message": "+0.0 should be positive and -0.0 should be negative.", "tree": {"sha": "d2fc1b5654839d3d5973b4f8a4fa787c651257bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2fc1b5654839d3d5973b4f8a4fa787c651257bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "html_url": "https://github.com/rust-lang/rust/commit/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54ddb553c2dab521f4d3bdf45e70767a413852d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/54ddb553c2dab521f4d3bdf45e70767a413852d3", "html_url": "https://github.com/rust-lang/rust/commit/54ddb553c2dab521f4d3bdf45e70767a413852d3"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "55ffa5025e764dd5cd4b1795faf3170ec10de59d", "filename": "src/lib/float.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1/src%2Flib%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1/src%2Flib%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffloat.rs?ref=7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "patch": "@@ -214,12 +214,12 @@ fn NaN() -> float {\n }\n \n /* Function: infinity */\n-fn infinity() -> float {\n+pure fn infinity() -> float {\n    ret 1./0.;\n }\n \n /* Function: neg_infinity */\n-fn neg_infinity() -> float {\n+pure fn neg_infinity() -> float {\n    ret -1./0.;\n }\n \n@@ -257,16 +257,16 @@ pure fn ge(x: float, y: float) -> bool { ret x >= y; }\n pure fn gt(x: float, y: float) -> bool { ret x > y; }\n \n /* Predicate: positive */\n-pure fn positive(x: float) -> bool { ret x > 0.; }\n+pure fn positive(x: float) -> bool { ret x > 0. || (1./x) == infinity(); }\n \n /* Predicate: negative */\n-pure fn negative(x: float) -> bool { ret x < 0.; }\n+pure fn negative(x: float) -> bool { ret x < 0. || (1./x) == neg_infinity(); }\n \n /* Predicate: nonpositive */\n-pure fn nonpositive(x: float) -> bool { ret x <= 0.; }\n+pure fn nonpositive(x: float) -> bool { ret !positive(x); }\n \n /* Predicate: nonnegative */\n-pure fn nonnegative(x: float) -> bool { ret x >= 0.; }\n+pure fn nonnegative(x: float) -> bool { ret !negative(x); }\n \n //\n // Local Variables:"}, {"sha": "086942fb8c175cde7197d370afb2df12ec4e866c", "filename": "src/test/stdtest/float.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1/src%2Ftest%2Fstdtest%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e064deacfc9eab6e79737bb1f5070a19e2e1dc1/src%2Ftest%2Fstdtest%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ffloat.rs?ref=7e064deacfc9eab6e79737bb1f5070a19e2e1dc1", "patch": "@@ -15,5 +15,24 @@ fn test_from_str() {\n    assert ( float::from_str(\"5.\") == 5. );\n    assert ( float::from_str(\".5\") == 0.5 );\n    assert ( float::from_str(\"0.5\") == 0.5 );\n+}\n \n+#[test]\n+fn test_positive() {\n+  assert(float::positive(float::infinity()));\n+  assert(float::positive(1.));\n+  assert(float::positive(0.));\n+  assert(!float::positive(-1.));\n+  assert(!float::positive(float::neg_infinity()));\n+  assert(!float::positive(1./float::neg_infinity()));\n+}\n+\n+#[test]\n+fn test_negative() {\n+  assert(!float::negative(float::infinity()));\n+  assert(!float::negative(1.));\n+  assert(!float::negative(0.));\n+  assert(float::negative(-1.));\n+  assert(float::negative(float::neg_infinity()));\n+  assert(float::negative(1./float::neg_infinity()));\n }"}]}