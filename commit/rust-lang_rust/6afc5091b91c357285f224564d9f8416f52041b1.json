{"sha": "6afc5091b91c357285f224564d9f8416f52041b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZmM1MDkxYjkxYzM1NzI4NWYyMjQ1NjRkOWY4NDE2ZjUyMDQxYjE=", "commit": {"author": {"name": "BaoshanPang", "email": "pangbw@gmail.com", "date": "2019-10-09T16:10:24Z"}, "committer": {"name": "BaoshanPang", "email": "pangbw@gmail.com", "date": "2019-10-10T15:41:10Z"}, "message": "vxWorks: implement get_path() and get_mode() for File fmt::Debug", "tree": {"sha": "122f1010766bff98fa490dae955c2b0b1a7f8699", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/122f1010766bff98fa490dae955c2b0b1a7f8699"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6afc5091b91c357285f224564d9f8416f52041b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6afc5091b91c357285f224564d9f8416f52041b1", "html_url": "https://github.com/rust-lang/rust/commit/6afc5091b91c357285f224564d9f8416f52041b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6afc5091b91c357285f224564d9f8416f52041b1/comments", "author": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46bf6ad416cf922c410fed11e9f73c03c0015bcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/46bf6ad416cf922c410fed11e9f73c03c0015bcd", "html_url": "https://github.com/rust-lang/rust/commit/46bf6ad416cf922c410fed11e9f73c03c0015bcd"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "adb08d8005ad486ed3c7701de7812a90c498b9fb", "filename": "src/libstd/sys/vxworks/fs.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6afc5091b91c357285f224564d9f8416f52041b1/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6afc5091b91c357285f224564d9f8416f52041b1/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs?ref=6afc5091b91c357285f224564d9f8416f52041b1", "patch": "@@ -400,13 +400,27 @@ impl FromInner<c_int> for File {\n \n impl fmt::Debug for File {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        fn get_path(_fd: c_int) -> Option<PathBuf> {\n-            // FIXME(#:(): implement this for VxWorks\n-            None\n+        fn get_path(fd: c_int) -> Option<PathBuf> {\n+            let mut buf = vec![0;libc::PATH_MAX as usize];\n+            let n = unsafe { libc::ioctl(fd, libc::FIOGETNAME, buf.as_ptr()) };\n+            if n == -1 {\n+                return None;\n+            }\n+            let l = buf.iter().position(|&c| c == 0).unwrap();\n+            buf.truncate(l as usize);\n+            Some(PathBuf::from(OsString::from_vec(buf)))\n         }\n-        fn get_mode(_fd: c_int) -> Option<(bool, bool)> {\n-            // FIXME(#:(): implement this for VxWorks\n-            None\n+        fn get_mode(fd: c_int) -> Option<(bool, bool)> {\n+            let mode = unsafe { libc::fcntl(fd, libc::F_GETFL) };\n+            if mode == -1 {\n+                return None;\n+            }\n+            match mode & libc::O_ACCMODE {\n+                libc::O_RDONLY => Some((true, false)),\n+                libc::O_RDWR => Some((true, true)),\n+                libc::O_WRONLY => Some((false, true)),\n+                _ => None\n+            }\n         }\n \n         let fd = self.0.raw();"}]}