{"sha": "9259eeb68935144e20710262b6953be3756535a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNTllZWI2ODkzNTE0NGUyMDcxMDI2MmI2OTUzYmUzNzU2NTM1YTg=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-08-05T08:50:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-05T08:50:07Z"}, "message": "Rollup merge of #4332 - phansch:rustfix_unnecessary_cast, r=flip1995\n\nSplit up cast.rs tests, run-rustfix for unnecessary_cast\n\nThis splits up the cast.rs tests and enables rustfix tests for the part\nof the `unnecessary_cast` lint that emits `MachineApplicable`\nsuggestions.\n\nchangelog: none\n\ncc #3630", "tree": {"sha": "780a61f2f3ba68a5e4a340b1d1be28d1e5718731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/780a61f2f3ba68a5e4a340b1d1be28d1e5718731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9259eeb68935144e20710262b6953be3756535a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdR+2/CRBK7hj4Ov3rIwAAdHIIAE9RcT03XyQDgrzKOl9xhlO7\ncL8PvboI4mK4gigrzzmcLt3y9m1zRY3Aqy84aigDp+Fu3ROTbSqhqEVtELHCNEyu\nQpQDt1OJHbqNqZIzVdkzM0Mts4sH4OxheX72+A7CtedXzSQBqQxbxczqTouNyuQY\nWeAoBzjGhOoIOcjka162ngOur2M/q4y313uHDHEY7viLrvlvJ/k9dlLQUbT3EFRO\nUgFCQ+P72+CQ6DuW5b5FqEPifBIPUhZIGGXmFSvjPsuvpbo+9cAGnTXBafgvMKqF\nOOlSTBGhd6YmApLqjLqJeuNo8W+Q8ejyq+lz92Y8JNvV391zD1ztKh59WTxeqjI=\n=x4KG\n-----END PGP SIGNATURE-----\n", "payload": "tree 780a61f2f3ba68a5e4a340b1d1be28d1e5718731\nparent 93c3da223f6b152859a3f246795b1cbdb2ca3aa7\nparent 2d84d0361d04b5220214bdad9dbf3714d3d8affe\nauthor Philipp Krones <hello@philkrones.com> 1564995007 +0200\ncommitter GitHub <noreply@github.com> 1564995007 +0200\n\nRollup merge of #4332 - phansch:rustfix_unnecessary_cast, r=flip1995\n\nSplit up cast.rs tests, run-rustfix for unnecessary_cast\n\nThis splits up the cast.rs tests and enables rustfix tests for the part\nof the `unnecessary_cast` lint that emits `MachineApplicable`\nsuggestions.\n\nchangelog: none\n\ncc #3630\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9259eeb68935144e20710262b6953be3756535a8", "html_url": "https://github.com/rust-lang/rust/commit/9259eeb68935144e20710262b6953be3756535a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9259eeb68935144e20710262b6953be3756535a8/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c3da223f6b152859a3f246795b1cbdb2ca3aa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c3da223f6b152859a3f246795b1cbdb2ca3aa7", "html_url": "https://github.com/rust-lang/rust/commit/93c3da223f6b152859a3f246795b1cbdb2ca3aa7"}, {"sha": "2d84d0361d04b5220214bdad9dbf3714d3d8affe", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d84d0361d04b5220214bdad9dbf3714d3d8affe", "html_url": "https://github.com/rust-lang/rust/commit/2d84d0361d04b5220214bdad9dbf3714d3d8affe"}], "stats": {"total": 169, "additions": 102, "deletions": 67}, "files": [{"sha": "79705071999249b6570967f82de4281633d41172", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -42,32 +42,4 @@ fn main() {\n     i32::max_value() as u32;\n     i64::max_value() as u64;\n     i128::max_value() as u128;\n-    // Extra checks for *size\n-    // Test cast_unnecessary\n-    1i32 as i32;\n-    1f32 as f32;\n-    false as bool;\n-    &1i32 as &i32;\n-    // macro version\n-    macro_rules! foo {\n-        ($a:ident, $b:ident) => {\n-            pub fn $a() -> $b {\n-                1 as $b\n-            }\n-        };\n-    }\n-    foo!(a, i32);\n-    foo!(b, f32);\n-    foo!(c, f64);\n-\n-    // casting integer literal to float is unnecessary\n-    100 as f32;\n-    100 as f64;\n-    100_i32 as f64;\n-    // Should not trigger\n-    #[rustfmt::skip]\n-    let v = vec!(1);\n-    &v as &[i32];\n-    1.0 as f64;\n-    1 as u64;\n }"}, {"sha": "0ebd3a1f184dcade930e41e73263903dc2e64ace", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -138,43 +138,5 @@ error: casting isize to usize may lose the sign of the value\n LL |     -1isize as usize;\n    |     ^^^^^^^^^^^^^^^^\n \n-error: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:47:5\n-   |\n-LL |     1i32 as i32;\n-   |     ^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n-\n-error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:48:5\n-   |\n-LL |     1f32 as f32;\n-   |     ^^^^^^^^^^^\n-\n-error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:49:5\n-   |\n-LL |     false as bool;\n-   |     ^^^^^^^^^^^^^\n-\n-error: casting integer literal to f32 is unnecessary\n-  --> $DIR/cast.rs:64:5\n-   |\n-LL |     100 as f32;\n-   |     ^^^^^^^^^^ help: try: `100_f32`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:65:5\n-   |\n-LL |     100 as f64;\n-   |     ^^^^^^^^^^ help: try: `100_f64`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:66:5\n-   |\n-LL |     100_i32 as f64;\n-   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n-\n-error: aborting due to 28 previous errors\n+error: aborting due to 22 previous errors\n "}, {"sha": "df9b227eeb3f55ad2cc6acb1f69c3ad040d9b11b", "filename": "tests/ui/unnecessary_cast.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.rs?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -0,0 +1,23 @@\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect)]\n+\n+fn main() {\n+    // Test cast_unnecessary\n+    1i32 as i32;\n+    1f32 as f32;\n+    false as bool;\n+    &1i32 as &i32;\n+\n+    // macro version\n+    macro_rules! foo {\n+        ($a:ident, $b:ident) => {\n+            #[allow(unused)]\n+            pub fn $a() -> $b {\n+                1 as $b\n+            }\n+        };\n+    }\n+    foo!(a, i32);\n+    foo!(b, f32);\n+    foo!(c, f64);\n+}"}, {"sha": "8981d13e8eabb61c1e2888f237af5016c8e9ccbe", "filename": "tests/ui/unnecessary_cast.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -0,0 +1,22 @@\n+error: casting to the same type is unnecessary (`i32` -> `i32`)\n+  --> $DIR/unnecessary_cast.rs:6:5\n+   |\n+LL |     1i32 as i32;\n+   |     ^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting to the same type is unnecessary (`f32` -> `f32`)\n+  --> $DIR/unnecessary_cast.rs:7:5\n+   |\n+LL |     1f32 as f32;\n+   |     ^^^^^^^^^^^\n+\n+error: casting to the same type is unnecessary (`bool` -> `bool`)\n+  --> $DIR/unnecessary_cast.rs:8:5\n+   |\n+LL |     false as bool;\n+   |     ^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "8c659df831e3d949a1aa558514c08a1dab28ad63", "filename": "tests/ui/unnecessary_cast_fixable.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.fixed?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100_f32;\n+    100_f64;\n+    100_f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "7bab5540c42f7f866f55e945fb79b5047364238e", "filename": "tests/ui/unnecessary_cast_fixable.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.rs?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100 as f32;\n+    100 as f64;\n+    100_i32 as f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "74616bb90822b547670eeeb0118396a1a016880f", "filename": "tests/ui/unnecessary_cast_fixable.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9259eeb68935144e20710262b6953be3756535a8/tests%2Fui%2Funnecessary_cast_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.stderr?ref=9259eeb68935144e20710262b6953be3756535a8", "patch": "@@ -0,0 +1,22 @@\n+error: casting integer literal to f32 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:8:5\n+   |\n+LL |     100 as f32;\n+   |     ^^^^^^^^^^ help: try: `100_f32`\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:9:5\n+   |\n+LL |     100 as f64;\n+   |     ^^^^^^^^^^ help: try: `100_f64`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:10:5\n+   |\n+LL |     100_i32 as f64;\n+   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n+\n+error: aborting due to 3 previous errors\n+"}]}