{"sha": "f19e763e0824a73118ed715f526cb7bdd584d4c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOWU3NjNlMDgyNGE3MzExOGVkNzE1ZjUyNmNiN2JkZDU4NGQ0YzQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-30T23:43:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-30T23:44:11Z"}, "message": "std: Stabilize the rest of Any/BoxAny\n\nThis commit stabilizes the following APIs:\n\n* `TypeId::of` - now that it has an `Any` bound it's ready to be stable.\n* `Box<Any>::downcast` - now that an inherent impl on `Box<Any>` as well as\n  `Box<Any+Send>` is allowed the `BoxAny` trait is removed in favor of these\n  inherent methods.\n\nThis is a breaking change due to the removal of the `BoxAny` trait, but\nconsumers can simply remove imports to fix crates.\n\n[breaking-change]", "tree": {"sha": "aa5b0028c6a860598762a78a6db987a63593868a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa5b0028c6a860598762a78a6db987a63593868a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19e763e0824a73118ed715f526cb7bdd584d4c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19e763e0824a73118ed715f526cb7bdd584d4c4", "html_url": "https://github.com/rust-lang/rust/commit/f19e763e0824a73118ed715f526cb7bdd584d4c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19e763e0824a73118ed715f526cb7bdd584d4c4/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf3b0b74aadcc1fe87adbd2c74876a1f6c920b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cf3b0b74aadcc1fe87adbd2c74876a1f6c920b3", "html_url": "https://github.com/rust-lang/rust/commit/6cf3b0b74aadcc1fe87adbd2c74876a1f6c920b3"}], "stats": {"total": 32, "additions": 7, "deletions": 25}, "files": [{"sha": "48dce3d8815e8100640c257a5f340c85101928a9", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=f19e763e0824a73118ed715f526cb7bdd584d4c4", "patch": "@@ -233,24 +233,10 @@ impl<T: ?Sized + Hash> Hash for Box<T> {\n     }\n }\n \n-/// Extension methods for an owning `Any` trait object.\n-#[unstable(feature = \"alloc\",\n-           reason = \"this trait will likely disappear once compiler bugs blocking \\\n-                     a direct impl on `Box<Any>` have been fixed \")]\n-// FIXME(#18737): this should be a direct impl on `Box<Any>`. If you're\n-//                removing this please make sure that you can downcase on\n-//                `Box<Any + Send>` as well as `Box<Any>`\n-pub trait BoxAny {\n-    /// Returns the boxed value if it is of type `T`, or\n-    /// `Err(Self)` if it isn't.\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn downcast<T: Any>(self) -> Result<Box<T>, Box<Any>>;\n-}\n-\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl BoxAny for Box<Any> {\n+impl Box<Any> {\n     #[inline]\n-    fn downcast<T: Any>(self) -> Result<Box<T>, Box<Any>> {\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn downcast<T: Any>(self) -> Result<Box<T>, Box<Any>> {\n         if self.is::<T>() {\n             unsafe {\n                 // Get the raw representation of the trait object\n@@ -267,10 +253,10 @@ impl BoxAny for Box<Any> {\n     }\n }\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl BoxAny for Box<Any+Send> {\n+impl Box<Any+Send> {\n     #[inline]\n-    fn downcast<T: Any>(self) -> Result<Box<T>, Box<Any>> {\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn downcast<T: Any>(self) -> Result<Box<T>, Box<Any>> {\n         <Box<Any>>::downcast(self)\n     }\n }"}, {"sha": "682d5f407c4eaeaf02f23666963cda07a0e63e69", "filename": "src/liballoc/boxed_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Fliballoc%2Fboxed_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Fliballoc%2Fboxed_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed_test.rs?ref=f19e763e0824a73118ed715f526cb7bdd584d4c4", "patch": "@@ -17,7 +17,6 @@ use core::clone::Clone;\n \n use std::boxed;\n use std::boxed::Box;\n-use std::boxed::BoxAny;\n \n #[test]\n fn test_owned_clone() {"}, {"sha": "0ffc4a229b5ae60a934ba2df4a16dae14def0e3d", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=f19e763e0824a73118ed715f526cb7bdd584d4c4", "patch": "@@ -202,8 +202,7 @@ pub struct TypeId {\n impl TypeId {\n     /// Returns the `TypeId` of the type this generic function has been\n     /// instantiated with\n-    #[unstable(feature = \"core\",\n-               reason = \"may grow a `Reflect` bound soon via marker traits\")]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn of<T: ?Sized + Any>() -> TypeId {\n         TypeId {\n             t: unsafe { intrinsics::type_id::<T>() },"}, {"sha": "863291ff542f33c4854e908f552b9a24b45c8096", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=f19e763e0824a73118ed715f526cb7bdd584d4c4", "patch": "@@ -810,7 +810,6 @@ mod test {\n \n     use any::Any;\n     use sync::mpsc::{channel, Sender};\n-    use boxed::BoxAny;\n     use result;\n     use std::old_io::{ChanReader, ChanWriter};\n     use super::{Builder};"}, {"sha": "c2db63ed251a5c72420d8189102f54cb230d5895", "filename": "src/test/run-pass/unit-like-struct-drop-run.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19e763e0824a73118ed715f526cb7bdd584d4c4/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs?ref=f19e763e0824a73118ed715f526cb7bdd584d4c4", "patch": "@@ -14,7 +14,6 @@\n \n #![feature(alloc)]\n \n-use std::boxed::BoxAny;\n use std::thread;\n \n struct Foo;"}]}