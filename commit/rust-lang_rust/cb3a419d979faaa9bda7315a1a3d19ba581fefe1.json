{"sha": "cb3a419d979faaa9bda7315a1a3d19ba581fefe1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiM2E0MTlkOTc5ZmFhYTliZGE3MzE1YTFhM2QxOWJhNTgxZmVmZTE=", "commit": {"author": {"name": "Eduard Bopp", "email": "eduard.bopp@aepsil0n.de", "date": "2014-02-19T13:01:50Z"}, "committer": {"name": "Eduard Bopp", "email": "eduard.bopp@aepsil0n.de", "date": "2014-02-19T13:01:50Z"}, "message": "libnum: Make RandBigInt trait public\n\nCloses #12383.", "tree": {"sha": "42741bbeb7fe53337a679ebc3901763be96e32d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42741bbeb7fe53337a679ebc3901763be96e32d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb3a419d979faaa9bda7315a1a3d19ba581fefe1", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3a419d979faaa9bda7315a1a3d19ba581fefe1", "html_url": "https://github.com/rust-lang/rust/commit/cb3a419d979faaa9bda7315a1a3d19ba581fefe1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb3a419d979faaa9bda7315a1a3d19ba581fefe1/comments", "author": {"login": "milibopp", "id": 3098430, "node_id": "MDQ6VXNlcjMwOTg0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3098430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milibopp", "html_url": "https://github.com/milibopp", "followers_url": "https://api.github.com/users/milibopp/followers", "following_url": "https://api.github.com/users/milibopp/following{/other_user}", "gists_url": "https://api.github.com/users/milibopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/milibopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milibopp/subscriptions", "organizations_url": "https://api.github.com/users/milibopp/orgs", "repos_url": "https://api.github.com/users/milibopp/repos", "events_url": "https://api.github.com/users/milibopp/events{/privacy}", "received_events_url": "https://api.github.com/users/milibopp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "milibopp", "id": 3098430, "node_id": "MDQ6VXNlcjMwOTg0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3098430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milibopp", "html_url": "https://github.com/milibopp", "followers_url": "https://api.github.com/users/milibopp/followers", "following_url": "https://api.github.com/users/milibopp/following{/other_user}", "gists_url": "https://api.github.com/users/milibopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/milibopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milibopp/subscriptions", "organizations_url": "https://api.github.com/users/milibopp/orgs", "repos_url": "https://api.github.com/users/milibopp/repos", "events_url": "https://api.github.com/users/milibopp/events{/privacy}", "received_events_url": "https://api.github.com/users/milibopp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f265d195fd0559b8edfb71126785114de92117", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f265d195fd0559b8edfb71126785114de92117", "html_url": "https://github.com/rust-lang/rust/commit/d2f265d195fd0559b8edfb71126785114de92117"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "661b5fa6f438b613eddcb61743e20df88dd2c5c3", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb3a419d979faaa9bda7315a1a3d19ba581fefe1/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb3a419d979faaa9bda7315a1a3d19ba581fefe1/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=cb3a419d979faaa9bda7315a1a3d19ba581fefe1", "patch": "@@ -1261,7 +1261,7 @@ impl FromStrRadix for BigInt {\n     }\n }\n \n-trait RandBigInt {\n+pub trait RandBigInt {\n     /// Generate a random `BigUint` of the given bit size.\n     fn gen_biguint(&mut self, bit_size: uint) -> BigUint;\n "}]}