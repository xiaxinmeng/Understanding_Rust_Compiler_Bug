{"sha": "58d03ad95d2f02a693869faa1081091d6999cd93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZDAzYWQ5NWQyZjAyYTY5Mzg2OWZhYTEwODEwOTFkNjk5OWNkOTM=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T08:16:59Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T09:26:01Z"}, "message": "Fix PEP8 in maketest", "tree": {"sha": "ab8b0d61db427ebfba4eee94cc232a474a83368d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab8b0d61db427ebfba4eee94cc232a474a83368d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58d03ad95d2f02a693869faa1081091d6999cd93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58d03ad95d2f02a693869faa1081091d6999cd93", "html_url": "https://github.com/rust-lang/rust/commit/58d03ad95d2f02a693869faa1081091d6999cd93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58d03ad95d2f02a693869faa1081091d6999cd93/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04408fadd39b8fe75a97f08186be6701dd200799", "url": "https://api.github.com/repos/rust-lang/rust/commits/04408fadd39b8fe75a97f08186be6701dd200799", "html_url": "https://github.com/rust-lang/rust/commit/04408fadd39b8fe75a97f08186be6701dd200799"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "f500de5e15d00c623784a62c8662c3ca0c2ab982", "filename": "src/etc/maketest.py", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/58d03ad95d2f02a693869faa1081091d6999cd93/src%2Fetc%2Fmaketest.py", "raw_url": "https://github.com/rust-lang/rust/raw/58d03ad95d2f02a693869faa1081091d6999cd93/src%2Fetc%2Fmaketest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmaketest.py?ref=58d03ad95d2f02a693869faa1081091d6999cd93", "patch": "@@ -12,13 +12,14 @@\n import os\n import sys\n \n-# msys1/msys2 automatically converts `/abs/path1:/abs/path2` into\n-# `c:\\real\\abs\\path1;c:\\real\\abs\\path2` (semicolons) if shell thinks\n-# the value is list of paths.\n-# (if there is only one path, it becomes `c:/real/abs/path`.)\n-# this causes great confusion and error: shell and Makefile doesn't like\n-# windows paths so it is really error-prone. revert it for peace.\n+\n def normalize_path(v):\n+    \"\"\"msys1/msys2 automatically converts `/abs/path1:/abs/path2` into\n+    `c:\\real\\abs\\path1;c:\\real\\abs\\path2` (semicolons) if shell thinks\n+    the value is list of paths.\n+    (if there is only one path, it becomes `c:/real/abs/path`.)\n+    this causes great confusion and error: shell and Makefile doesn't like\n+    windows paths so it is really error-prone. revert it for peace.\"\"\"\n     v = v.replace('\\\\', '/')\n     # c:/path -> /c/path\n     if ':/' in v:\n@@ -31,6 +32,7 @@ def putenv(name, value):\n         value = normalize_path(value)\n     os.putenv(name, value)\n \n+\n def convert_path_spec(name, value):\n     if os.name == 'nt' and name != 'PATH':\n         value = \":\".join(normalize_path(v) for v in value.split(\";\"))\n@@ -42,14 +44,14 @@ def convert_path_spec(name, value):\n putenv('CC', sys.argv[5])\n putenv('RUSTDOC', os.path.abspath(sys.argv[6]))\n filt = sys.argv[7]\n-putenv('LD_LIB_PATH_ENVVAR', sys.argv[8]);\n-putenv('HOST_RPATH_DIR', os.path.abspath(sys.argv[9]));\n-putenv('TARGET_RPATH_DIR', os.path.abspath(sys.argv[10]));\n+putenv('LD_LIB_PATH_ENVVAR', sys.argv[8])\n+putenv('HOST_RPATH_DIR', os.path.abspath(sys.argv[9]))\n+putenv('TARGET_RPATH_DIR', os.path.abspath(sys.argv[10]))\n putenv('RUST_BUILD_STAGE', sys.argv[11])\n putenv('S', os.path.abspath(sys.argv[12]))\n putenv('PYTHON', sys.executable)\n \n-if not filt in sys.argv[1]:\n+if filt not in sys.argv[1]:\n     sys.exit(0)\n print('maketest: ' + os.path.basename(os.path.dirname(sys.argv[1])))\n \n@@ -63,19 +65,19 @@ def convert_path_spec(name, value):\n     path = path[:-1]\n \n proc = subprocess.Popen([make, '-C', path],\n-                        stdout = subprocess.PIPE,\n-                        stderr = subprocess.PIPE)\n+                        stdout=subprocess.PIPE,\n+                        stderr=subprocess.PIPE)\n out, err = proc.communicate()\n i = proc.wait()\n \n if i != 0:\n-\n-    print '----- ' + sys.argv[1] + \"\"\" --------------------\n+    print \"\"\"\\\n+----- %s --------------------\n ------ stdout ---------------------------------------------\n-\"\"\" + out + \"\"\"\n+%s\n ------ stderr ---------------------------------------------\n-\"\"\" + err + \"\"\"\n+%s\n ------        ---------------------------------------------\n-\"\"\"\n-    sys.exit(i)\n+\"\"\" % (sys.argv[1], out, err)\n \n+    sys.exit(i)"}]}