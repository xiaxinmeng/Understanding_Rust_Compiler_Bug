{"sha": "54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZGE4NGZiZDhlYTAzNzZmODhmZDMxOTg5NDI3ZDNlNmFlYzFjMWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-11T22:01:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-11T22:01:14Z"}, "message": "Merge pull request #394 from RalfJung/start-fn\n\ndocument -Zmiri-start-fn; make its logic more clear", "tree": {"sha": "09e9799b4fda51c8cc1e4c2144b4b67fa29bd695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09e9799b4fda51c8cc1e4c2144b4b67fa29bd695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRn4qCRBK7hj4Ov3rIwAAdHIIAE1oLLGcPqGqyxkz1QowB1bb\nB2MeX9N8SrOKYvreL9AROIAWO2qjABL4a6e7tRwsj96cw1k0W+gbAQJG7Vf5ULXp\n2IYeOirOgk+PWlLcF0Z9leamjBq3czE9HFAE90EEXDDrbfGDWTINUnXf2NaRxRW1\nEJL4FzwuU0tcjgK3Fc8PkMZiV1DEhCCqsMh4XRt/RnWjcZ561eFUD44ooe/aU0wT\nAK962bRWEwvR1DRUYYAdgnyV3KgtKGjyG2W+6sJMXvQ+nUeJa7GT88tTTfogf3cM\nglyC/YT44BC8+A1EZiyc9J/FTwQ4bIhcPtugz4/LJ2pqEb0jK39cwucZ0Yu4anQ=\n=86Ie\n-----END PGP SIGNATURE-----\n", "payload": "tree 09e9799b4fda51c8cc1e4c2144b4b67fa29bd695\nparent 1896ba24354b0942d463d4a954cadb08d6177be4\nparent 0e0f52df75068b8b5c50d52db8e517cf488627db\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1531346474 +0200\ncommitter GitHub <noreply@github.com> 1531346474 +0200\n\nMerge pull request #394 from RalfJung/start-fn\n\ndocument -Zmiri-start-fn; make its logic more clear"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "html_url": "https://github.com/rust-lang/rust/commit/54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54da84fbd8ea0376f88fd31989427d3e6aec1c1a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1896ba24354b0942d463d4a954cadb08d6177be4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1896ba24354b0942d463d4a954cadb08d6177be4", "html_url": "https://github.com/rust-lang/rust/commit/1896ba24354b0942d463d4a954cadb08d6177be4"}, {"sha": "0e0f52df75068b8b5c50d52db8e517cf488627db", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0f52df75068b8b5c50d52db8e517cf488627db", "html_url": "https://github.com/rust-lang/rust/commit/0e0f52df75068b8b5c50d52db8e517cf488627db"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "32eca3652945f5d8d8f1a26babf9523b57829aff", "filename": "README.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54da84fbd8ea0376f88fd31989427d3e6aec1c1a/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/54da84fbd8ea0376f88fd31989427d3e6aec1c1a/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "patch": "@@ -76,6 +76,9 @@ MIRI_SYSROOT=~/.xargo/HOST cargo run --bin miri tests/run-pass-fullmir/vecs.rs\n Notice that you will have to re-run the last step of the preparations above when\n your toolchain changes (e.g., when you update the nightly).\n \n+You can also set `-Zmiri-start-fn` to make miri start evaluation with the\n+`start_fn` lang item, instead of starting at the `main` function.\n+\n ## Contributing and getting help\n \n Check out the issues on this GitHub repository for some ideas. There's lots that"}, {"sha": "51c53b4af275d03663deb1c22dc06dc6cac9fe74", "filename": "src/bin/miri.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/54da84fbd8ea0376f88fd31989427d3e6aec1c1a/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54da84fbd8ea0376f88fd31989427d3e6aec1c1a/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=54da84fbd8ea0376f88fd31989427d3e6aec1c1a", "patch": "@@ -135,13 +135,12 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>, use_start_fn: bo\n         );\n     } else if let Some((entry_node_id, _, _)) = *state.session.entry_fn.borrow() {\n         let entry_def_id = tcx.hir.local_def_id(entry_node_id);\n-        let start_wrapper = tcx.lang_items().start_fn().and_then(|start_fn| {\n-            if use_start_fn {\n-                Some(start_fn)\n-            } else {\n-                None\n-            }\n-        });\n+        // Use start_fn lang item if we have -Zmiri-start-fn set\n+        let start_wrapper = if use_start_fn {\n+            Some(tcx.lang_items().start_fn().unwrap())\n+        } else {\n+            None\n+        };\n         miri::eval_main(tcx, entry_def_id, start_wrapper);\n \n         state.session.abort_if_errors();"}]}