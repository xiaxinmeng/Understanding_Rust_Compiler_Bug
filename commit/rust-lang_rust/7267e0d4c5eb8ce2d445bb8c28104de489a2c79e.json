{"sha": "7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "node_id": "C_kwDOAAsO6NoAKDcyNjdlMGQ0YzVlYjhjZTJkNDQ1YmI4YzI4MTA0ZGU0ODlhMmM3OWU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-23T23:30:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-24T00:23:38Z"}, "message": "attempt to test RUSTC and RUSTC_WRAPPER shenanigans on CI", "tree": {"sha": "73bea12cd342814cae22107fd02c271660991a5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73bea12cd342814cae22107fd02c271660991a5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "html_url": "https://github.com/rust-lang/rust/commit/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b11f6424d928b1c6876ed3d49655fc4b1f6ffc", "url": "https://api.github.com/repos/rust-lang/rust/commits/25b11f6424d928b1c6876ed3d49655fc4b1f6ffc", "html_url": "https://github.com/rust-lang/rust/commit/25b11f6424d928b1c6876ed3d49655fc4b1f6ffc"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "9cba2e772bcd7ea57166569981e18721dd033837", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "patch": "@@ -483,6 +483,7 @@ path = \"lib.rs\"\n     // The `MIRI_CALLED_FROM_XARGO` will mean we dispatch to `phase_setup_rustc`.\n     let cargo_miri_path = std::env::current_exe().expect(\"current executable path invalid\");\n     if env::var_os(\"RUSTC_STAGE\").is_some() {\n+        assert!(env::var_os(\"RUSTC\").is_some());\n         command.env(\"RUSTC_REAL\", &cargo_miri_path);\n     } else {\n         command.env(\"RUSTC\", &cargo_miri_path);"}, {"sha": "f93c218f1b0ef8cbed583c7fa037635f775c5e51", "filename": "ci.sh", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7267e0d4c5eb8ce2d445bb8c28104de489a2c79e/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=7267e0d4c5eb8ce2d445bb8c28104de489a2c79e", "patch": "@@ -38,8 +38,21 @@ function run_tests {\n   else\n     PYTHON=python\n   fi\n+  # Some environment setup that attempts to confuse the heck out of cargo-miri.\n+  if [ \"$HOST_TARGET\" = x86_64-unknown-linux-gnu ]; then\n+    # These act up on Windows (`which miri` produces a filename that does not exist?!?),\n+    # so let's do this only on Linux. Also makes sure things work without these set.\n+    export RUSTC=$(which rustc)\n+    export MIRI=$(which miri)\n+  fi\n+  mkdir -p .cargo\n+  echo 'build.rustc-wrapper = \"thisdoesnotexist\"' > .cargo/config.toml\n+  # Run the actual test\n   ${PYTHON} test-cargo-miri/run-test.py\n   echo\n+  # Clean up\n+  unset RUSTC MIRI\n+  rm -rf .cargo\n \n   # Ensure that our benchmarks all work, on the host at least.\n   if [ -z \"${MIRI_TEST_TARGET+exists}\" ]; then"}]}