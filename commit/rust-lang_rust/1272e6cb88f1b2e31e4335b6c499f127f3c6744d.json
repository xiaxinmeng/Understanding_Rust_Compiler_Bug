{"sha": "1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNzJlNmNiODhmMWIyZTMxZTQzMzViNmM0OTlmMTI3ZjNjNjc0NGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-26T09:21:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-26T09:21:21Z"}, "message": "minor", "tree": {"sha": "c728005f8c0469fed3f47e97eded4fb54588560c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c728005f8c0469fed3f47e97eded4fb54588560c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "html_url": "https://github.com/rust-lang/rust/commit/1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1272e6cb88f1b2e31e4335b6c499f127f3c6744d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f2a596b9bfefdc43621bdafab520dbd814ac959", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f2a596b9bfefdc43621bdafab520dbd814ac959", "html_url": "https://github.com/rust-lang/rust/commit/3f2a596b9bfefdc43621bdafab520dbd814ac959"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "a9a1d09fde1a965f5c936eba3135d47e79567cb7", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1272e6cb88f1b2e31e4335b6c499f127f3c6744d/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1272e6cb88f1b2e31e4335b6c499f127f3c6744d/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "patch": "@@ -3,7 +3,7 @@\n //!\n //! Each tick provides an immutable snapshot of the state as `WorldSnapshot`.\n \n-use std::sync::Arc;\n+use std::{sync::Arc, time::Instant};\n \n use crossbeam_channel::{unbounded, Receiver, Sender};\n use flycheck::FlycheckHandle;\n@@ -20,7 +20,7 @@ use crate::{\n     diagnostics::{CheckFixes, DiagnosticCollection},\n     from_proto,\n     line_endings::LineEndings,\n-    main_loop::{ReqQueue, Task},\n+    main_loop::Task,\n     reload::SourceRootConfig,\n     request_metrics::{LatestRequests, RequestMetrics},\n     show_message,\n@@ -48,6 +48,9 @@ pub(crate) struct Handle<H, C> {\n     pub(crate) receiver: C,\n }\n \n+pub(crate) type ReqHandler = fn(&mut GlobalState, lsp_server::Response);\n+pub(crate) type ReqQueue = lsp_server::ReqQueue<(String, Instant), ReqHandler>;\n+\n /// `GlobalState` is the primary mutable state of the language server\n ///\n /// The most interesting components are `vfs`, which stores a consistent"}, {"sha": "386a47621b2237be42f1e0e9fcdb48a732b3b62e", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1272e6cb88f1b2e31e4335b6c499f127f3c6744d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1272e6cb88f1b2e31e4335b6c499f127f3c6744d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=1272e6cb88f1b2e31e4335b6c499f127f3c6744d", "patch": "@@ -468,10 +468,6 @@ impl GlobalState {\n     }\n }\n \n-pub(crate) type ReqHandler = fn(&mut GlobalState, Response);\n-pub(crate) type ReqQueue = lsp_server::ReqQueue<(String, Instant), ReqHandler>;\n-const DO_NOTHING: ReqHandler = |_, _| ();\n-\n #[derive(Eq, PartialEq)]\n enum Progress {\n     Begin,\n@@ -499,7 +495,7 @@ fn report_progress(\n             let work_done_progress_create = global_state.req_queue.outgoing.register(\n                 lsp_types::request::WorkDoneProgressCreate::METHOD.to_string(),\n                 lsp_types::WorkDoneProgressCreateParams { token: token.clone() },\n-                DO_NOTHING,\n+                |_, _| (),\n             );\n             global_state.send(work_done_progress_create.into());\n "}]}