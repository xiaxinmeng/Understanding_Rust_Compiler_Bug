{"sha": "fa48ee678a8b647f339547d1111dd9064ea9bfbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNDhlZTY3OGE4YjY0N2YzMzk1NDdkMTExMWRkOTA2NGVhOWJmYmU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T15:20:30Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T15:20:30Z"}, "message": "dogfood", "tree": {"sha": "8c2e0269231ea4aa305c50c09a44f3395269c655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c2e0269231ea4aa305c50c09a44f3395269c655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa48ee678a8b647f339547d1111dd9064ea9bfbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa48ee678a8b647f339547d1111dd9064ea9bfbe", "html_url": "https://github.com/rust-lang/rust/commit/fa48ee678a8b647f339547d1111dd9064ea9bfbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa48ee678a8b647f339547d1111dd9064ea9bfbe/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c87c777c88d36b7ce8aee1ef13d5744f90da3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c87c777c88d36b7ce8aee1ef13d5744f90da3d", "html_url": "https://github.com/rust-lang/rust/commit/e9c87c777c88d36b7ce8aee1ef13d5744f90da3d"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "35ea5fe44621cd1c2ae66b8fdc9cc9cd6eda9e60", "filename": "src/booleans.rs", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fa48ee678a8b647f339547d1111dd9064ea9bfbe/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa48ee678a8b647f339547d1111dd9064ea9bfbe/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=fa48ee678a8b647f339547d1111dd9064ea9bfbe", "patch": "@@ -149,29 +149,26 @@ fn suggest(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr]) -> String {\n                         recurse(true, cx, inner, terminals, s)\n                     },\n                     Term(n) => {\n-                        match terminals[n as usize].node {\n-                            ExprBinary(binop, ref lhs, ref rhs) => {\n-                                let op = match binop.node {\n-                                    BiEq => \" != \",\n-                                    BiNe => \" == \",\n-                                    BiLt => \" >= \",\n-                                    BiGt => \" <= \",\n-                                    BiLe => \" > \",\n-                                    BiGe => \" < \",\n-                                    _ => {\n-                                        s.push('!');\n-                                        return recurse(true, cx, inner, terminals, s)\n-                                    },\n-                                };\n-                                s.push_str(&snip(lhs));\n-                                s.push_str(op);\n-                                s.push_str(&snip(rhs));\n-                                s\n-                            },\n-                            _ => {\n-                                s.push('!');\n-                                recurse(false, cx, inner, terminals, s)\n-                            },\n+                        if let ExprBinary(binop, ref lhs, ref rhs) = terminals[n as usize].node {\n+                            let op = match binop.node {\n+                                BiEq => \" != \",\n+                                BiNe => \" == \",\n+                                BiLt => \" >= \",\n+                                BiGt => \" <= \",\n+                                BiLe => \" > \",\n+                                BiGe => \" < \",\n+                                _ => {\n+                                    s.push('!');\n+                                    return recurse(true, cx, inner, terminals, s)\n+                                },\n+                            };\n+                            s.push_str(&snip(lhs));\n+                            s.push_str(op);\n+                            s.push_str(&snip(rhs));\n+                            s\n+                        } else {\n+                            s.push('!');\n+                            recurse(false, cx, inner, terminals, s)\n                         }\n                     },\n                     _ => {"}]}