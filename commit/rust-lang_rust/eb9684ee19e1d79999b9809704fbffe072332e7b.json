{"sha": "eb9684ee19e1d79999b9809704fbffe072332e7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOTY4NGVlMTllMWQ3OTk5OWI5ODA5NzA0ZmJmZmUwNzIzMzJlN2I=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-14T11:37:59Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-14T11:37:59Z"}, "message": "Add `Show` and `Clone` trait to arrays\n\nDue to not being able to parametrize over array sizes, `Clone` is only\nimplemented for element types that are `Copy`able.", "tree": {"sha": "a1d032702a55cdb826af494d8562f0e3b8fe9c47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1d032702a55cdb826af494d8562f0e3b8fe9c47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb9684ee19e1d79999b9809704fbffe072332e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9684ee19e1d79999b9809704fbffe072332e7b", "html_url": "https://github.com/rust-lang/rust/commit/eb9684ee19e1d79999b9809704fbffe072332e7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb9684ee19e1d79999b9809704fbffe072332e7b/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2168c5252adeda1dd35ccf7050df89655233d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb2168c5252adeda1dd35ccf7050df89655233d7", "html_url": "https://github.com/rust-lang/rust/commit/bb2168c5252adeda1dd35ccf7050df89655233d7"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "60765e82cb476bfdb0f7d9b57b89154c2b57d91f", "filename": "src/libcore/array.rs", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/eb9684ee19e1d79999b9809704fbffe072332e7b/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9684ee19e1d79999b9809704fbffe072332e7b/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=eb9684ee19e1d79999b9809704fbffe072332e7b", "patch": "@@ -8,22 +8,36 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/*!\n- * Implementations of things like `Eq` for fixed-length arrays\n- * up to a certain length. Eventually we should able to generalize\n- * to all lengths.\n- */\n+//! Implementations of things like `Eq` for fixed-length arrays\n+//! up to a certain length. Eventually we should able to generalize\n+//! to all lengths.\n \n-#![stable]\n #![experimental] // not yet reviewed\n \n-use cmp::*;\n-use option::{Option};\n+use clone::Clone;\n+use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n+use fmt;\n+use kinds::Copy;\n+use option::Option;\n \n // macro for implementing n-ary tuple functions and operations\n macro_rules! array_impls {\n     ($($N:expr)+) => {\n         $(\n+            #[unstable = \"waiting for Clone to stabilize\"]\n+            impl<T:Copy> Clone for [T, ..$N] {\n+                fn clone(&self) -> [T, ..$N] {\n+                    *self\n+                }\n+            }\n+\n+            #[unstable = \"waiting for Show to stabilize\"]\n+            impl<T:fmt::Show> fmt::Show for [T, ..$N] {\n+                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+                    fmt::Show::fmt(&self[], f)\n+                }\n+            }\n+\n             #[unstable = \"waiting for PartialEq to stabilize\"]\n             impl<T:PartialEq> PartialEq for [T, ..$N] {\n                 #[inline]"}]}