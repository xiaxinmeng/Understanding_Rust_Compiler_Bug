{"sha": "184c8a99ed279c7ca8d5f8d202184915b645ab1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NGM4YTk5ZWQyNzljN2NhOGQ1ZjhkMjAyMTg0OTE1YjY0NWFiMWY=", "commit": {"author": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2015-09-21T09:45:04Z"}, "committer": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2015-09-21T14:48:25Z"}, "message": "Use ast::AsmDialect's variants qualified, and drop the pointless prefix.", "tree": {"sha": "1456590e4878c8fba93ebb5b19d549b8799270f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1456590e4878c8fba93ebb5b19d549b8799270f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/184c8a99ed279c7ca8d5f8d202184915b645ab1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/184c8a99ed279c7ca8d5f8d202184915b645ab1f", "html_url": "https://github.com/rust-lang/rust/commit/184c8a99ed279c7ca8d5f8d202184915b645ab1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/184c8a99ed279c7ca8d5f8d202184915b645ab1f/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22fa1aaadec721775661064653125fadbba9b908", "url": "https://api.github.com/repos/rust-lang/rust/commits/22fa1aaadec721775661064653125fadbba9b908", "html_url": "https://github.com/rust-lang/rust/commit/22fa1aaadec721775661064653125fadbba9b908"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "0ddbbdc392a4a3c0fa6f75a69507ea194efeec20", "filename": "src/librustc_front/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fprint%2Fpprust.rs?ref=184c8a99ed279c7ca8d5f8d202184915b645ab1f", "patch": "@@ -1539,7 +1539,7 @@ impl<'a> State<'a> {\n                 if a.alignstack {\n                     options.push(\"alignstack\");\n                 }\n-                if a.dialect == ast::AsmDialect::AsmIntel {\n+                if a.dialect == ast::AsmDialect::Intel {\n                     options.push(\"intel\");\n                 }\n "}, {"sha": "c59237e307849a30c701c0c229314f4b1fb30cde", "filename": "src/librustc_trans/trans/asm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibrustc_trans%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibrustc_trans%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fasm.rs?ref=184c8a99ed279c7ca8d5f8d202184915b645ab1f", "patch": "@@ -106,8 +106,8 @@ pub fn trans_inline_asm<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, ia: &ast::InlineAsm)\n     };\n \n     let dialect = match ia.dialect {\n-        AsmDialect::AsmAtt   => llvm::AD_ATT,\n-        AsmDialect::AsmIntel => llvm::AD_Intel\n+        AsmDialect::Att   => llvm::AD_ATT,\n+        AsmDialect::Intel => llvm::AD_Intel\n     };\n \n     let asm = CString::new(ia.asm.as_bytes()).unwrap();"}, {"sha": "5b04fc0e6977b3ece9c9f1d26f31702b70ca088b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=184c8a99ed279c7ca8d5f8d202184915b645ab1f", "patch": "@@ -10,7 +10,6 @@\n \n // The Rust abstract syntax tree.\n \n-pub use self::AsmDialect::*;\n pub use self::AttrStyle::*;\n pub use self::BindingMode::*;\n pub use self::BinOp_::*;\n@@ -1440,8 +1439,8 @@ pub enum Ty_ {\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n pub enum AsmDialect {\n-    AsmAtt,\n-    AsmIntel\n+    Att,\n+    Intel,\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]"}, {"sha": "d2b416f54157332b030a4bc94b43ec3305c39094", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=184c8a99ed279c7ca8d5f8d202184915b645ab1f", "patch": "@@ -22,6 +22,7 @@ use feature_gate;\n use parse::token::{intern, InternedString};\n use parse::token;\n use ptr::P;\n+use syntax::ast::AsmDialect;\n \n enum State {\n     Asm,\n@@ -65,7 +66,7 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     let mut clobs = Vec::new();\n     let mut volatile = false;\n     let mut alignstack = false;\n-    let mut dialect = ast::AsmAtt;\n+    let mut dialect = AsmDialect::Att;\n \n     let mut state = Asm;\n \n@@ -178,7 +179,7 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n                 } else if option == \"alignstack\" {\n                     alignstack = true;\n                 } else if option == \"intel\" {\n-                    dialect = ast::AsmIntel;\n+                    dialect = AsmDialect::Intel;\n                 } else {\n                     cx.span_warn(p.last_span, \"unrecognized option\");\n                 }"}, {"sha": "df72645f97d9b22023e0fc993e360cbe8a8d5078", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/184c8a99ed279c7ca8d5f8d202184915b645ab1f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=184c8a99ed279c7ca8d5f8d202184915b645ab1f", "patch": "@@ -2209,7 +2209,7 @@ impl<'a> State<'a> {\n                 if a.alignstack {\n                     options.push(\"alignstack\");\n                 }\n-                if a.dialect == ast::AsmDialect::AsmIntel {\n+                if a.dialect == ast::AsmDialect::Intel {\n                     options.push(\"intel\");\n                 }\n "}]}