{"sha": "1187ce7213dd8b7f36050e1994478dc9c7c5c451", "node_id": "C_kwDOAAsO6NoAKDExODdjZTcyMTNkZDhiN2YzNjA1MGUxOTk0NDc4ZGM5YzdjNWM0NTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-04T06:09:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-04T06:09:04Z"}, "message": "Rollup merge of #111020 - cjgillot:validate-self-ctor, r=petrochenkov\n\nValidate resolution for SelfCtor too.\n\nFixes https://github.com/rust-lang/rust/issues/89868\n\nr? `@petrochenkov`", "tree": {"sha": "1464b9cf1772d70bd8df5b1b0fe420545004c3ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1464b9cf1772d70bd8df5b1b0fe420545004c3ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1187ce7213dd8b7f36050e1994478dc9c7c5c451", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkU0wACRBK7hj4Ov3rIwAA8hMIAGRY05l4Ni/8oXHR5fzCDEsG\nVZ+ekvzf0m85S18vp6gjUyGZrXbYk/tmOMGjHOHxxxYTyHLqWFtfT5d0oHRYJbWV\nmkcbrorQGIlRgmKJMZBEPuTa8UDowzPfZ8At3hPuhwqDvh4jPt/dQDvUitUsvaxw\nInzS5EuNOvekNPXj08zEIgfe+nVWOq3tJ5sVUKHLpEJ7xXrn3drUuJKX4Gy8/B72\njL/N9rX0KGWX7EupJy/IhWvKVvyfX7ONOOOUuvqy3xvsi3zmOAdUkkNaT3N8KVRH\nxkkuByMLkRG5ZFco0RNtTxxdBzlfcRfZ70wNWWOgUODDg74uEbis7I/QYbUNCFE=\n=ipkr\n-----END PGP SIGNATURE-----\n", "payload": "tree 1464b9cf1772d70bd8df5b1b0fe420545004c3ba\nparent 6fca1a925985105e4393bbca227f868ee2de5c96\nparent 83453408a0ce91b9e3d3ae6e7f117b1fd28b487d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683180544 +0200\ncommitter GitHub <noreply@github.com> 1683180544 +0200\n\nRollup merge of #111020 - cjgillot:validate-self-ctor, r=petrochenkov\n\nValidate resolution for SelfCtor too.\n\nFixes https://github.com/rust-lang/rust/issues/89868\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1187ce7213dd8b7f36050e1994478dc9c7c5c451", "html_url": "https://github.com/rust-lang/rust/commit/1187ce7213dd8b7f36050e1994478dc9c7c5c451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1187ce7213dd8b7f36050e1994478dc9c7c5c451/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fca1a925985105e4393bbca227f868ee2de5c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fca1a925985105e4393bbca227f868ee2de5c96", "html_url": "https://github.com/rust-lang/rust/commit/6fca1a925985105e4393bbca227f868ee2de5c96"}, {"sha": "83453408a0ce91b9e3d3ae6e7f117b1fd28b487d", "url": "https://api.github.com/repos/rust-lang/rust/commits/83453408a0ce91b9e3d3ae6e7f117b1fd28b487d", "html_url": "https://github.com/rust-lang/rust/commit/83453408a0ce91b9e3d3ae6e7f117b1fd28b487d"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "fae7d5495925a3b629a4a756a232e13bc39cca22", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1187ce7213dd8b7f36050e1994478dc9c7c5c451/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1187ce7213dd8b7f36050e1994478dc9c7c5c451/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=1187ce7213dd8b7f36050e1994478dc9c7c5c451", "patch": "@@ -550,7 +550,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n                 let sm = self.tcx.sess.source_map();\n                 let def_id = match outer_res {\n-                    Res::SelfTyParam { .. } => {\n+                    Res::SelfTyParam { .. } | Res::SelfCtor(_) => {\n                         err.span_label(span, \"can't use `Self` here\");\n                         return err;\n                     }"}, {"sha": "ce2faae39047e4db27c884cad5db0c56b6c7fc08", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1187ce7213dd8b7f36050e1994478dc9c7c5c451/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1187ce7213dd8b7f36050e1994478dc9c7c5c451/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=1187ce7213dd8b7f36050e1994478dc9c7c5c451", "patch": "@@ -1171,7 +1171,10 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                     return Res::Err;\n                 }\n             }\n-            Res::Def(DefKind::TyParam, _) | Res::SelfTyParam { .. } | Res::SelfTyAlias { .. } => {\n+            Res::Def(DefKind::TyParam, _)\n+            | Res::SelfTyParam { .. }\n+            | Res::SelfTyAlias { .. }\n+            | Res::SelfCtor(_) => {\n                 for rib in ribs {\n                     let has_generic_params: HasGenericParams = match rib.kind {\n                         NormalRibKind"}, {"sha": "b015397a5bc5f66928fbd81af2a12461c1722682", "filename": "tests/ui/self/self-ctor-inner-const.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1187ce7213dd8b7f36050e1994478dc9c7c5c451/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1187ce7213dd8b7f36050e1994478dc9c7c5c451/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs?ref=1187ce7213dd8b7f36050e1994478dc9c7c5c451", "patch": "@@ -0,0 +1,17 @@\n+// Verify that we ban usage of `Self` as constructor from inner items.\n+\n+struct S0<T>(T);\n+\n+impl<T> S0<T> {\n+    fn foo() {\n+        const C: S0<u8> = Self(0);\n+        //~^ ERROR can't use generic parameters from outer function\n+        fn bar() -> Self {\n+            //~^ ERROR can't use generic parameters from outer function\n+            Self(0)\n+            //~^ ERROR can't use generic parameters from outer function\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "7287c64c659b72fc1a5c628a96506dd96c3d2c58", "filename": "tests/ui/self/self-ctor-inner-const.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1187ce7213dd8b7f36050e1994478dc9c7c5c451/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1187ce7213dd8b7f36050e1994478dc9c7c5c451/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr?ref=1187ce7213dd8b7f36050e1994478dc9c7c5c451", "patch": "@@ -0,0 +1,33 @@\n+error[E0401]: can't use generic parameters from outer function\n+  --> $DIR/self-ctor-inner-const.rs:7:27\n+   |\n+LL |         const C: S0<u8> = Self(0);\n+   |                           ^^^^\n+   |                           |\n+   |                           use of generic parameter from outer function\n+   |                           can't use `Self` here\n+\n+error[E0401]: can't use generic parameters from outer function\n+  --> $DIR/self-ctor-inner-const.rs:9:21\n+   |\n+LL | impl<T> S0<T> {\n+   | ---- `Self` type implicitly declared here, by this `impl`\n+...\n+LL |         fn bar() -> Self {\n+   |                     ^^^^\n+   |                     |\n+   |                     use of generic parameter from outer function\n+   |                     use a type here instead\n+\n+error[E0401]: can't use generic parameters from outer function\n+  --> $DIR/self-ctor-inner-const.rs:11:13\n+   |\n+LL |             Self(0)\n+   |             ^^^^\n+   |             |\n+   |             use of generic parameter from outer function\n+   |             can't use `Self` here\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0401`."}]}