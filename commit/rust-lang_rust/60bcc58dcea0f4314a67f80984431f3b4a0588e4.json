{"sha": "60bcc58dcea0f4314a67f80984431f3b4a0588e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYmNjNThkY2VhMGY0MzE0YTY3ZjgwOTg0NDMxZjNiNGEwNTg4ZTQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-26T13:56:58Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-26T13:56:58Z"}, "message": "debug log `AbstractConst::new`", "tree": {"sha": "e483ac240831b457308f3df21a4958df859e7952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e483ac240831b457308f3df21a4958df859e7952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60bcc58dcea0f4314a67f80984431f3b4a0588e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60bcc58dcea0f4314a67f80984431f3b4a0588e4", "html_url": "https://github.com/rust-lang/rust/commit/60bcc58dcea0f4314a67f80984431f3b4a0588e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60bcc58dcea0f4314a67f80984431f3b4a0588e4/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8546a80dc1728cf4bc72de343c2513a0bd6fd10e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8546a80dc1728cf4bc72de343c2513a0bd6fd10e", "html_url": "https://github.com/rust-lang/rust/commit/8546a80dc1728cf4bc72de343c2513a0bd6fd10e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "5f6d8ac751e265baa1147406fa9fa4071a7766ca", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60bcc58dcea0f4314a67f80984431f3b4a0588e4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60bcc58dcea0f4314a67f80984431f3b4a0588e4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=60bcc58dcea0f4314a67f80984431f3b4a0588e4", "patch": "@@ -211,6 +211,7 @@ impl AbstractConst<'tcx> {\n         substs: SubstsRef<'tcx>,\n     ) -> Result<Option<AbstractConst<'tcx>>, ErrorReported> {\n         let inner = tcx.mir_abstract_const_opt_const_arg(def)?;\n+        debug!(\"AbstractConst::new({:?}) = {:?}\", def, inner);\n         Ok(inner.map(|inner| AbstractConst { inner, substs }))\n     }\n "}]}