{"sha": "bdadad85b5cb77315893a887a3c8bf31687459f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYWRhZDg1YjVjYjc3MzE1ODkzYTg4N2EzYzhiZjMxNjg3NDU5Zjg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-05-13T22:11:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-05-18T23:36:08Z"}, "message": "rustbuild: Add missing test suites\n\nAfter a comparison with the current set of tests run it was discovered that\nrustbuild accidentally wasn't running a few test suites. This commit adds back a\nfew more test suites:\n\n* rfail-full\n* pretty-rpass\n* pretty-rpass-full\n* pretty-rpass-valgrind\n* pretty-rfail\n* pretty-rfail-full\n* librustc_bitflags unit tests", "tree": {"sha": "1f3627a6a9c40c2d7ace52b8351f1173e1066bf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f3627a6a9c40c2d7ace52b8351f1173e1066bf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdadad85b5cb77315893a887a3c8bf31687459f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdadad85b5cb77315893a887a3c8bf31687459f8", "html_url": "https://github.com/rust-lang/rust/commit/bdadad85b5cb77315893a887a3c8bf31687459f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdadad85b5cb77315893a887a3c8bf31687459f8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a140454ea47b7fd107b6e963b7ea2aef74e9518", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a140454ea47b7fd107b6e963b7ea2aef74e9518", "html_url": "https://github.com/rust-lang/rust/commit/9a140454ea47b7fd107b6e963b7ea2aef74e9518"}], "stats": {"total": 73, "additions": 57, "deletions": 16}, "files": [{"sha": "ebc05c5f61c50784a9eccd3a7d2c88b760582f57", "filename": "src/bootstrap/build/mod.rs", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Fbootstrap%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Fbootstrap%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fmod.rs?ref=bdadad85b5cb77315893a887a3c8bf31687459f8", "patch": "@@ -318,10 +318,18 @@ impl Build {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"run-pass\", \"run-pass\");\n                 }\n+                CheckRPassFull { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"run-pass\", \"run-pass-fulldeps\");\n+                }\n                 CheckCFail { compiler } => {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"compile-fail\", \"compile-fail\");\n                 }\n+                CheckCFailFull { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"compile-fail\", \"compile-fail-fulldeps\")\n+                }\n                 CheckPFail { compiler } => {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"parse-fail\", \"parse-fail\");\n@@ -330,10 +338,34 @@ impl Build {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"run-fail\", \"run-fail\");\n                 }\n+                CheckRFailFull { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"run-fail\", \"run-fail-fulldeps\");\n+                }\n                 CheckPretty { compiler } => {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"pretty\", \"pretty\");\n                 }\n+                CheckPrettyRPass { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"pretty\", \"run-pass\");\n+                }\n+                CheckPrettyRPassFull { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"pretty\", \"run-pass-fulldeps\");\n+                }\n+                CheckPrettyRFail { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"pretty\", \"run-fail\");\n+                }\n+                CheckPrettyRFailFull { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"pretty\", \"run-fail-fulldeps\");\n+                }\n+                CheckPrettyRPassValgrind { compiler } => {\n+                    check::compiletest(self, &compiler, target.target,\n+                                       \"pretty\", \"run-pass-valgrind\");\n+                }\n                 CheckCodegen { compiler } => {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"codegen\", \"codegen\");\n@@ -370,14 +402,6 @@ impl Build {\n                     check::compiletest(self, &compiler, target.target,\n                                        \"run-pass-valgrind\", \"run-pass-valgrind\");\n                 }\n-                CheckRPassFull { compiler } => {\n-                    check::compiletest(self, &compiler, target.target,\n-                                       \"run-pass\", \"run-pass-fulldeps\");\n-                }\n-                CheckCFailFull { compiler } => {\n-                    check::compiletest(self, &compiler, target.target,\n-                                       \"compile-fail\", \"compile-fail-fulldeps\")\n-                }\n                 CheckDocs { compiler } => {\n                     check::docs(self, &compiler);\n                 }"}, {"sha": "742fd8575bb809d6abb264ed1c3b49e31432733e", "filename": "src/bootstrap/build/step.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Fbootstrap%2Fbuild%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Fbootstrap%2Fbuild%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fstep.rs?ref=bdadad85b5cb77315893a887a3c8bf31687459f8", "patch": "@@ -106,19 +106,25 @@ macro_rules! targets {\n             (check_cargotest, CheckCargoTest { stage: u32 }),\n             (check_tidy, CheckTidy { stage: u32 }),\n             (check_rpass, CheckRPass { compiler: Compiler<'a> }),\n+            (check_rpass_full, CheckRPassFull { compiler: Compiler<'a> }),\n+            (check_rpass_valgrind, CheckRPassValgrind { compiler: Compiler<'a> }),\n             (check_rfail, CheckRFail { compiler: Compiler<'a> }),\n+            (check_rfail_full, CheckRFailFull { compiler: Compiler<'a> }),\n             (check_cfail, CheckCFail { compiler: Compiler<'a> }),\n+            (check_cfail_full, CheckCFailFull { compiler: Compiler<'a> }),\n             (check_pfail, CheckPFail { compiler: Compiler<'a> }),\n+            (check_pretty, CheckPretty { compiler: Compiler<'a> }),\n+            (check_pretty_rpass, CheckPrettyRPass { compiler: Compiler<'a> }),\n+            (check_pretty_rpass_full, CheckPrettyRPassFull { compiler: Compiler<'a> }),\n+            (check_pretty_rfail, CheckPrettyRFail { compiler: Compiler<'a> }),\n+            (check_pretty_rfail_full, CheckPrettyRFailFull { compiler: Compiler<'a> }),\n+            (check_pretty_rpass_valgrind, CheckPrettyRPassValgrind { compiler: Compiler<'a> }),\n             (check_codegen, CheckCodegen { compiler: Compiler<'a> }),\n             (check_codegen_units, CheckCodegenUnits { compiler: Compiler<'a> }),\n             (check_incremental, CheckIncremental { compiler: Compiler<'a> }),\n             (check_ui, CheckUi { compiler: Compiler<'a> }),\n             (check_debuginfo, CheckDebuginfo { compiler: Compiler<'a> }),\n             (check_rustdoc, CheckRustdoc { compiler: Compiler<'a> }),\n-            (check_pretty, CheckPretty { compiler: Compiler<'a> }),\n-            (check_rpass_valgrind, CheckRPassValgrind { compiler: Compiler<'a> }),\n-            (check_rpass_full, CheckRPassFull { compiler: Compiler<'a> }),\n-            (check_cfail_full, CheckCFailFull { compiler: Compiler<'a> }),\n             (check_docs, CheckDocs { compiler: Compiler<'a> }),\n             (check_error_index, CheckErrorIndex { compiler: Compiler<'a> }),\n             (check_rmake, CheckRMake { compiler: Compiler<'a> }),\n@@ -378,8 +384,11 @@ impl<'a> Step<'a> {\n             Source::Check { stage, compiler } => {\n                 vec![\n                     self.check_rpass(compiler),\n-                    self.check_cfail(compiler),\n+                    self.check_rpass_full(compiler),\n                     self.check_rfail(compiler),\n+                    self.check_rfail_full(compiler),\n+                    self.check_cfail(compiler),\n+                    self.check_cfail_full(compiler),\n                     self.check_pfail(compiler),\n                     self.check_incremental(compiler),\n                     self.check_ui(compiler),\n@@ -391,9 +400,12 @@ impl<'a> Step<'a> {\n                     self.check_debuginfo(compiler),\n                     self.check_rustdoc(compiler),\n                     self.check_pretty(compiler),\n+                    self.check_pretty_rpass(compiler),\n+                    self.check_pretty_rpass_full(compiler),\n+                    self.check_pretty_rfail(compiler),\n+                    self.check_pretty_rfail_full(compiler),\n+                    self.check_pretty_rpass_valgrind(compiler),\n                     self.check_rpass_valgrind(compiler),\n-                    self.check_rpass_full(compiler),\n-                    self.check_cfail_full(compiler),\n                     self.check_error_index(compiler),\n                     self.check_docs(compiler),\n                     self.check_rmake(compiler),\n@@ -412,6 +424,8 @@ impl<'a> Step<'a> {\n             Source::CheckTidy { stage } => {\n                 vec![self.tool_tidy(stage)]\n             }\n+            Source::CheckPrettyRPass { compiler } |\n+            Source::CheckPrettyRFail { compiler } |\n             Source::CheckRFail { compiler } |\n             Source::CheckPFail { compiler } |\n             Source::CheckCodegen { compiler } |\n@@ -438,7 +452,11 @@ impl<'a> Step<'a> {\n                 ]\n             }\n             Source::CheckRPassFull { compiler } |\n+            Source::CheckRFailFull { compiler } |\n             Source::CheckCFailFull { compiler } |\n+            Source::CheckPrettyRPassFull { compiler } |\n+            Source::CheckPrettyRFailFull { compiler } |\n+            Source::CheckPrettyRPassValgrind { compiler } |\n             Source::CheckRMake { compiler } => {\n                 vec![self.librustc(compiler),\n                      self.tool_compiletest(compiler.stage)]"}, {"sha": "d82a72994ca6f55303fe41f66caaa45c52ce76d5", "filename": "src/librustc_bitflags/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Flibrustc_bitflags%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bdadad85b5cb77315893a887a3c8bf31687459f8/src%2Flibrustc_bitflags%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_bitflags%2FCargo.toml?ref=bdadad85b5cb77315893a887a3c8bf31687459f8", "patch": "@@ -6,5 +6,4 @@ version = \"0.0.0\"\n [lib]\n name = \"rustc_bitflags\"\n path = \"lib.rs\"\n-test = false\n doctest = false"}]}