{"sha": "37c1d6dc09e97a7d707977c7cceeb0685df1776a", "node_id": "C_kwDOAAsO6NoAKDM3YzFkNmRjMDllOTdhN2Q3MDc5NzdjN2NjZWViMDY4NWRmMTc3NmE", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2023-01-09T15:35:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-09T15:35:29Z"}, "message": "Rollup merge of #106291 - obeis:issue-106182, r=oli-obk\n\nFix incorrect suggestion for extra `&` in pattern\n\nCloses #106182", "tree": {"sha": "6c36b66dc8a323864aeaeee6fa18d1381a6fbe05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c36b66dc8a323864aeaeee6fa18d1381a6fbe05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37c1d6dc09e97a7d707977c7cceeb0685df1776a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvDRBCRBK7hj4Ov3rIwAA3GMIAIHbkIayr01J7bm3Rt099TCb\nNk4xph7rL6kjPsaAnGyN9bevzB6AGhM/4O6V+0SFXpwn5vrHKkI09LP26kaBq3JL\nzThg2V8SGpdgn7Gd9DPoLk8rpAmiAFr7taCfh3TJmy4DmH+yoUsmDwRTfvmw7AKx\nK9russWvbcy9tjRdcrwIwgbITl4bIhh+kJM49Nhaf4gNeWYvEFhR0ubggdJK+Mcq\nI8GqhGppGhbTB56OBGhaaf8butJ/6aTdql+lHWkBox/R1YrSJYArtsHfG015sxHw\nsqyyzQ9AbWMIWWgblxAQoTV3rNWLmux1vKyG+qKw0/09VRRGlmPYh2uvbDil+oI=\n=JxdQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 6c36b66dc8a323864aeaeee6fa18d1381a6fbe05\nparent 7779386a3a62e6aedb81ddd10977b1b0d4b2bcec\nparent a74a48852a50628b8de61ad5534f4eb3d31ecc6e\nauthor fee1-dead <ent3rm4n@gmail.com> 1673278529 +0800\ncommitter GitHub <noreply@github.com> 1673278529 +0800\n\nRollup merge of #106291 - obeis:issue-106182, r=oli-obk\n\nFix incorrect suggestion for extra `&` in pattern\n\nCloses #106182\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37c1d6dc09e97a7d707977c7cceeb0685df1776a", "html_url": "https://github.com/rust-lang/rust/commit/37c1d6dc09e97a7d707977c7cceeb0685df1776a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37c1d6dc09e97a7d707977c7cceeb0685df1776a/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7779386a3a62e6aedb81ddd10977b1b0d4b2bcec", "url": "https://api.github.com/repos/rust-lang/rust/commits/7779386a3a62e6aedb81ddd10977b1b0d4b2bcec", "html_url": "https://github.com/rust-lang/rust/commit/7779386a3a62e6aedb81ddd10977b1b0d4b2bcec"}, {"sha": "a74a48852a50628b8de61ad5534f4eb3d31ecc6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a74a48852a50628b8de61ad5534f4eb3d31ecc6e", "html_url": "https://github.com/rust-lang/rust/commit/a74a48852a50628b8de61ad5534f4eb3d31ecc6e"}], "stats": {"total": 68, "additions": 65, "deletions": 3}, "files": [{"sha": "40bfac910ffb0fcfe8ac64971bec2c4e0940ebc4", "filename": "compiler/rustc_hir_typeck/src/pat.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/37c1d6dc09e97a7d707977c7cceeb0685df1776a/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37c1d6dc09e97a7d707977c7cceeb0685df1776a/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs?ref=37c1d6dc09e97a7d707977c7cceeb0685df1776a", "patch": "@@ -761,6 +761,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         err.span_note(sp, format!(\"{msg}: `{sugg}`\"));\n                     }\n                 }\n+                hir::Node::Pat(pt) if let PatKind::TupleStruct(_, pat_arr, _) = pt.kind => {\n+                    for i in pat_arr.iter() {\n+                        if let PatKind::Ref(the_ref, _) = i.kind\n+                        && let PatKind::Binding(mt, _, ident, _) = the_ref.kind {\n+                            let hir::BindingAnnotation(_, mtblty) = mt;\n+                            err.span_suggestion_verbose(\n+                                i.span,\n+                                format!(\"consider removing `&{mutability}` from the pattern\"),\n+                                mtblty.prefix_str().to_string() + &ident.name.to_string(),\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n+                    }\n+                    if let Some((sp, msg, sugg)) = mut_var_suggestion {\n+                        err.span_note(sp, format!(\"{msg}: `{sugg}`\"));\n+                    }\n+                }\n                 hir::Node::Param(_) | hir::Node::Arm(_) | hir::Node::Pat(_) => {\n                     // rely on match ergonomics or it might be nested `&&pat`\n                     err.span_suggestion_verbose("}, {"sha": "b8ddebf6fb63957d4a3ae80a425b8fb2b5288beb", "filename": "src/test/ui/mismatched_types/issue-106182.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.fixed?ref=37c1d6dc09e97a7d707977c7cceeb0685df1776a", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+struct _S(u32, Vec<i32>);\n+\n+fn _foo(x: &_S) {\n+    match x {\n+        _S(mut _y, _v) => {\n+        //~^ ERROR mismatched types [E0308]\n+        }\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "6eb6df13a028c9a567d3bc7c144fd640a7eaeb3b", "filename": "src/test/ui/mismatched_types/issue-106182.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.rs?ref=37c1d6dc09e97a7d707977c7cceeb0685df1776a", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+struct _S(u32, Vec<i32>);\n+\n+fn _foo(x: &_S) {\n+    match x {\n+        _S(& (mut _y), _v) => {\n+        //~^ ERROR mismatched types [E0308]\n+        }\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "ac3ab8e9895c4107a277d1af53c7d47b7263bcf3", "filename": "src/test/ui/mismatched_types/issue-106182.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-106182.stderr?ref=37c1d6dc09e97a7d707977c7cceeb0685df1776a", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-106182.rs:7:12\n+   |\n+LL |     match x {\n+   |           - this expression has type `&_S`\n+LL |         _S(& (mut _y), _v) => {\n+   |            ^^^^^^^^^^ expected `u32`, found reference\n+   |\n+   = note:   expected type `u32`\n+           found reference `&_`\n+help: consider removing `&` from the pattern\n+   |\n+LL |         _S(mut _y, _v) => {\n+   |            ~~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "63eaa3930b1c3468f66ab51308c8562563c3cf51", "filename": "src/test/ui/mismatched_types/ref-pat-suggestions.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37c1d6dc09e97a7d707977c7cceeb0685df1776a/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr?ref=37c1d6dc09e97a7d707977c7cceeb0685df1776a", "patch": "@@ -336,9 +336,8 @@ LL |         let S(&mut _b) = S(0);\n    |               ^^^^^^^\n help: consider removing `&mut` from the pattern\n    |\n-LL -         let S(&mut _b) = S(0);\n-LL +         let S(_b) = S(0);\n-   |\n+LL |         let S(_b) = S(0);\n+   |               ~~\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:31:14"}]}