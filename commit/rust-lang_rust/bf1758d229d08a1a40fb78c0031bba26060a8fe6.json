{"sha": "bf1758d229d08a1a40fb78c0031bba26060a8fe6", "node_id": "C_kwDOAAsO6NoAKGJmMTc1OGQyMjlkMDhhMWE0MGZiNzhjMDAzMWJiYTI2MDYwYThmZTY", "commit": {"author": {"name": "zhaixiaojuan", "email": "zhaixiaojuan@loongson.cn", "date": "2023-02-03T08:24:11Z"}, "committer": {"name": "wangrui", "email": "wangrui@loongson.cn", "date": "2023-04-07T16:09:54Z"}, "message": "Define UNWIND_DATA_REG for loongarch64", "tree": {"sha": "133f318321bbc73fb4fd9ee0df845c789ee51d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/133f318321bbc73fb4fd9ee0df845c789ee51d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1758d229d08a1a40fb78c0031bba26060a8fe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1758d229d08a1a40fb78c0031bba26060a8fe6", "html_url": "https://github.com/rust-lang/rust/commit/bf1758d229d08a1a40fb78c0031bba26060a8fe6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1758d229d08a1a40fb78c0031bba26060a8fe6/comments", "author": {"login": "zhaixiaojuan", "id": 67671683, "node_id": "MDQ6VXNlcjY3NjcxNjgz", "avatar_url": "https://avatars.githubusercontent.com/u/67671683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaixiaojuan", "html_url": "https://github.com/zhaixiaojuan", "followers_url": "https://api.github.com/users/zhaixiaojuan/followers", "following_url": "https://api.github.com/users/zhaixiaojuan/following{/other_user}", "gists_url": "https://api.github.com/users/zhaixiaojuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaixiaojuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaixiaojuan/subscriptions", "organizations_url": "https://api.github.com/users/zhaixiaojuan/orgs", "repos_url": "https://api.github.com/users/zhaixiaojuan/repos", "events_url": "https://api.github.com/users/zhaixiaojuan/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaixiaojuan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "heiher", "id": 1407733, "node_id": "MDQ6VXNlcjE0MDc3MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1407733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heiher", "html_url": "https://github.com/heiher", "followers_url": "https://api.github.com/users/heiher/followers", "following_url": "https://api.github.com/users/heiher/following{/other_user}", "gists_url": "https://api.github.com/users/heiher/gists{/gist_id}", "starred_url": "https://api.github.com/users/heiher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heiher/subscriptions", "organizations_url": "https://api.github.com/users/heiher/orgs", "repos_url": "https://api.github.com/users/heiher/repos", "events_url": "https://api.github.com/users/heiher/events{/privacy}", "received_events_url": "https://api.github.com/users/heiher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "737e1d25692ff57699fddb379d62dd6ec1cb2006", "url": "https://api.github.com/repos/rust-lang/rust/commits/737e1d25692ff57699fddb379d62dd6ec1cb2006", "html_url": "https://github.com/rust-lang/rust/commit/737e1d25692ff57699fddb379d62dd6ec1cb2006"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0421b47be024e39b35eeace7aad34d30064d695c", "filename": "library/std/src/personality/gcc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf1758d229d08a1a40fb78c0031bba26060a8fe6/library%2Fstd%2Fsrc%2Fpersonality%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1758d229d08a1a40fb78c0031bba26060a8fe6/library%2Fstd%2Fsrc%2Fpersonality%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpersonality%2Fgcc.rs?ref=bf1758d229d08a1a40fb78c0031bba26060a8fe6", "patch": "@@ -77,6 +77,9 @@ const UNWIND_DATA_REG: (i32, i32) = (0, 1); // R0, R1\n #[cfg(any(target_arch = \"riscv64\", target_arch = \"riscv32\"))]\n const UNWIND_DATA_REG: (i32, i32) = (10, 11); // x10, x11\n \n+#[cfg(target_arch = \"loongarch64\")]\n+const UNWIND_DATA_REG: (i32, i32) = (4, 5); // a0, a1\n+\n // The following code is based on GCC's C and C++ personality routines.  For reference, see:\n // https://github.com/gcc-mirror/gcc/blob/master/libstdc++-v3/libsupc++/eh_personality.cc\n // https://github.com/gcc-mirror/gcc/blob/trunk/libgcc/unwind-c.c"}]}