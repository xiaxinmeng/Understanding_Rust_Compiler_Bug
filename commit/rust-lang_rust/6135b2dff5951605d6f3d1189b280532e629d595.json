{"sha": "6135b2dff5951605d6f3d1189b280532e629d595", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMzViMmRmZjU5NTE2MDVkNmYzZDExODliMjgwNTMyZTYyOWQ1OTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-08-13T13:56:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-08-13T13:56:35Z"}, "message": "Fix tidy errors", "tree": {"sha": "bcd33c5c4457d0e8091daa2bfbeef91b84d61980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcd33c5c4457d0e8091daa2bfbeef91b84d61980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6135b2dff5951605d6f3d1189b280532e629d595", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJZkFqYAAoJEEpHzFJ6U7W8lGkQAKI7EQCH2vv8+OXLalqTYAa7\nKZvdNIpUggAvH5FzNaDYp3RqulPA04m3mF9vORRqMlDzwE39Ea6kNubT6i835klr\nk3d7duBT2yO0xebmEmxb7BBcifUtwnq7GuVtH1tTNPcrE6nMRPkn695I0OGU3p+U\non/uGX2rMhV+dNPvxBfo5pGZ/olKCagZRhp/AdXLS9i6/ALsVX78xbaU4r6iaexp\niD1ciG6ygUAAJEy/F+vgBsoKDCDN0riUgy1P8olPkaaAC+4rofpd96b1u8qqz3Qc\nCqkMzPUDrtdtaMCl9roBmU41yJiGD8gxge1Tq7x9cnyChtqfVpO9oji5S8uic1Wx\n/QEt6QalFVmF+PqrE8NlSS+xZCir/mc1ycryUU0OiXJKqMxDICzjKxruAk9v+ykO\nim/gg3dTVLsA5RaZMJ1VRFtd7WDsWY7DOL7zvQapYRe2+O0tZqMMX67ae94Jdpri\nG+NklODWUhZiJmyvcKJZJ3b4UYc/1NpVlJmIl0FY0FpX6Naowz4SNkkxYWO/O+F+\nEHQVcjqXHnaIvAJPIPUI1hKUphPU8415bl5rM1ZcCZ2yYh+tvPee1932ZMgKOWjg\nB7fn52hf5rZvX10+OC2YJEAUeE7rk+YtvS4uPVpmEciRYs+snXWWInO5tH2ZkUTX\n2AmtO/+r1uoKL2D6XHBO\n=I/9C\n-----END PGP SIGNATURE-----", "payload": "tree bcd33c5c4457d0e8091daa2bfbeef91b84d61980\nparent 0c97bbf424e976df4de1de0abf8c714095a2924b\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1502632595 +0200\ncommitter bjorn3 <bjorn3@users.noreply.github.com> 1502632595 +0200\n\nFix tidy errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6135b2dff5951605d6f3d1189b280532e629d595", "html_url": "https://github.com/rust-lang/rust/commit/6135b2dff5951605d6f3d1189b280532e629d595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6135b2dff5951605d6f3d1189b280532e629d595/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c97bbf424e976df4de1de0abf8c714095a2924b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c97bbf424e976df4de1de0abf8c714095a2924b", "html_url": "https://github.com/rust-lang/rust/commit/0c97bbf424e976df4de1de0abf8c714095a2924b"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "84b1ade6d8b23326e611f6c312bbe90040841272", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6135b2dff5951605d6f3d1189b280532e629d595/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6135b2dff5951605d6f3d1189b280532e629d595/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=6135b2dff5951605d6f3d1189b280532e629d595", "patch": "@@ -95,7 +95,7 @@ pub fn compile_input(sess: &Session,\n \n         if sess.opts.crate_types.iter().all(|&t|{\n             t != CrateType::CrateTypeRlib && t != CrateType::CrateTypeExecutable\n-        }) {\n+        }) && !sess.opts.crate_types.is_empty() {\n             sess.err(\n                 \"LLVM is not supported by this rustc, so non rlib libraries are not supported\"\n             );"}, {"sha": "f8cd2280cafe1e5779ab0c277e3538ecf3f21d3d", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6135b2dff5951605d6f3d1189b280532e629d595/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6135b2dff5951605d6f3d1189b280532e629d595/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=6135b2dff5951605d6f3d1189b280532e629d595", "patch": "@@ -157,28 +157,36 @@ pub use no_llvm_metadata_loader::NoLLvmMetadataLoader as MetadataLoader;\n pub use rustc_trans::LlvmMetadataLoader as MetadataLoader;\n \n #[cfg(not(feature=\"llvm\"))]\n-mod no_llvm_metadata_loader{\n+mod no_llvm_metadata_loader {\n     extern crate ar;\n     extern crate owning_ref;\n-    \n+\n     use rustc::middle::cstore::MetadataLoader as MetadataLoaderTrait;\n     use rustc_back::target::Target;\n     use std::io;\n     use std::fs::File;\n     use std::path::Path;\n-    \n+\n     use self::ar::Archive;\n     use self::owning_ref::{OwningRef, ErasedBoxRef};\n \n     pub struct NoLLvmMetadataLoader;\n \n     impl MetadataLoaderTrait for NoLLvmMetadataLoader {\n-        fn get_rlib_metadata(&self, _: &Target, filename: &Path) -> Result<ErasedBoxRef<[u8]>, String> {\n-            let file = File::open(filename).map_err(|e|format!(\"metadata file open err: {:?}\", e))?;\n+        fn get_rlib_metadata(\n+            &self,\n+            _: &Target,\n+            filename: &Path\n+        ) -> Result<ErasedBoxRef<[u8]>, String> {\n+            let file = File::open(filename).map_err(|e| {\n+                format!(\"metadata file open err: {:?}\", e)\n+            })?;\n             let mut archive = Archive::new(file);\n \n             while let Some(entry_result) = archive.next_entry() {\n-                let mut entry = entry_result.map_err(|e|format!(\"metadata section read err: {:?}\", e))?;\n+                let mut entry = entry_result.map_err(|e| {\n+                    format!(\"metadata section read err: {:?}\", e)\n+                })?;\n                 if entry.header().identifier() == \"rust.metadata.bin\" {\n                     let mut buf = Vec::new();\n                     io::copy(&mut entry, &mut buf).unwrap();"}]}