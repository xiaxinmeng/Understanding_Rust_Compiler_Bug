{"sha": "0095e6d85b99337a52801d834f8c61dc7c25e689", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOTVlNmQ4NWI5OTMzN2E1MjgwMWQ4MzRmOGM2MWRjN2MyNWU2ODk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-15T23:47:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-15T23:48:53Z"}, "message": "rustc: Have the typechecker pick up the resolved self region", "tree": {"sha": "4892348e79c7d757ab3563e2dba853222153ebd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4892348e79c7d757ab3563e2dba853222153ebd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0095e6d85b99337a52801d834f8c61dc7c25e689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0095e6d85b99337a52801d834f8c61dc7c25e689", "html_url": "https://github.com/rust-lang/rust/commit/0095e6d85b99337a52801d834f8c61dc7c25e689", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0095e6d85b99337a52801d834f8c61dc7c25e689/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d07f405675ab8eb636bdb9cb1fbfec6f3ed805", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d07f405675ab8eb636bdb9cb1fbfec6f3ed805", "html_url": "https://github.com/rust-lang/rust/commit/76d07f405675ab8eb636bdb9cb1fbfec6f3ed805"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c050fcdf49b6491a30dbac3b8bb31c57c501133a", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0095e6d85b99337a52801d834f8c61dc7c25e689/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0095e6d85b99337a52801d834f8c61dc7c25e689/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=0095e6d85b99337a52801d834f8c61dc7c25e689", "patch": "@@ -349,14 +349,14 @@ fn ast_ty_to_ty(tcx: ty::ctxt, mode: mode, &&ast_ty: @ast::ty) -> ty::t {\n           }\n           ast::ty_rptr(region, mt) {\n             let region = alt region.node {\n-                ast::re_inferred | ast::re_self {\n+                ast::re_inferred {\n                     let attir = tcx.region_map.ast_type_to_inferred_region;\n                     alt attir.find(ast_ty.id) {\n                         some(resolved_region) { resolved_region }\n                         none { ty::re_inferred }\n                     }\n                 }\n-                ast::re_named(_) {\n+                ast::re_named(_) | ast::re_self {\n                     tcx.region_map.ast_type_to_region.get(region.id)\n                 }\n             };"}]}