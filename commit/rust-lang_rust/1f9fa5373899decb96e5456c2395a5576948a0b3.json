{"sha": "1f9fa5373899decb96e5456c2395a5576948a0b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOWZhNTM3Mzg5OWRlY2I5NmU1NDU2YzIzOTVhNTU3Njk0OGEwYjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T09:26:42Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:38Z"}, "message": "Sanity check the `bits` argument to the `from_bits` function", "tree": {"sha": "7248283c036025263745202e5347cb63f64e4045", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7248283c036025263745202e5347cb63f64e4045"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f9fa5373899decb96e5456c2395a5576948a0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9fa5373899decb96e5456c2395a5576948a0b3", "html_url": "https://github.com/rust-lang/rust/commit/1f9fa5373899decb96e5456c2395a5576948a0b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f9fa5373899decb96e5456c2395a5576948a0b3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ea9ef315746fbe9989ef0e0e3a40dcd23509f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ea9ef315746fbe9989ef0e0e3a40dcd23509f6", "html_url": "https://github.com/rust-lang/rust/commit/f1ea9ef315746fbe9989ef0e0e3a40dcd23509f6"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "43cf838c248983772057dfe3b542437f49ec8a47", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f9fa5373899decb96e5456c2395a5576948a0b3/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f9fa5373899decb96e5456c2395a5576948a0b3/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=1f9fa5373899decb96e5456c2395a5576948a0b3", "patch": "@@ -1824,10 +1824,13 @@ impl<'tcx> Const<'tcx> {\n         ty: ParamEnvAnd<'tcx, Ty<'tcx>>,\n     ) -> &'tcx Self {\n         let ty = tcx.global_tcx().lift(&ty).unwrap();\n-        let defined = tcx.global_tcx().layout_of(ty).unwrap_or_else(|e| {\n+        let size = tcx.global_tcx().layout_of(ty).unwrap_or_else(|e| {\n             panic!(\"could not compute layout for {:?}: {:?}\", ty, e)\n-        }).size.bits() as u8;\n-        Self::from_scalar(tcx, Scalar::Bits { bits, defined }, ty.value)\n+        }).size;\n+        let amt = 128 - size.bits();\n+        let truncated = (bits << amt) >> amt;\n+        assert_eq!(truncated, bits, \"from_bits called with untruncated value\");\n+        Self::from_scalar(tcx, Scalar::Bits { bits, defined: size.bits() as u8 }, ty.value)\n     }\n \n     #[inline]"}]}