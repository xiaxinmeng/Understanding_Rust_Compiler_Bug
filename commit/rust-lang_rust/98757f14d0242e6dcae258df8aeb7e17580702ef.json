{"sha": "98757f14d0242e6dcae258df8aeb7e17580702ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NzU3ZjE0ZDAyNDJlNmRjYWUyNThkZjhhZWI3ZTE3NTgwNzAyZWY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-02-15T03:28:13Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-02-15T03:28:13Z"}, "message": "Suggest a comma if a struct initializer field fails to parse\n\nCurrently, we emit a \"try adding a comma\" suggestion if a comma is\nmissing in a struct definition. However, we emit no such suggestion if a\ncomma is missing in a struct initializer.\n\nThis commit adds a \"try adding a comma\" suggestion when we don't find a\ncomma during the parsing of a struct initializer field.\n\nThe change to `src/test/ui/parser/removed-syntax-with-1.stderr` isn't\ngreat, but I don't see a good way of avoiding it.", "tree": {"sha": "fad7a75a98cf274d2f1d0803461c25cb4d8affa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad7a75a98cf274d2f1d0803461c25cb4d8affa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98757f14d0242e6dcae258df8aeb7e17580702ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl5HZc4ACgkQtAh+UQ6Y\nsWQ3iA/6A5ztviC1UMj3O9fBheXzgsO/lavJM/XzsHYP3r2VFAhlrYVIty5oQQhL\niD7fceGOnO58o1iyZGwajZs5OaZqhrx9mvSRN2ugJ631R0wI+ZXWTyTAZX2FIJ2z\nANW/cwpeCn6MXVaiijWVKTcNJeUrL53MLq3+MY29HzeuL8713it6PuGbg70fdKAi\nEH0tqLvDvOTOz0DbyQ2Fnwt7Tt1/75yTqVf1OLwo9O0kUgE/ut6Lp+2zJ4YJn1Pt\nYjGNODYi5EPRUJhtGJccpioTUS97oiK5OxqFIm5v3ysUTnID6I/9oDfmu8TgasyD\nww5H3/cptvx7t/iRyWi3vbQUyY5E6GKVk7SoZql0+CV/X14ipfAJR2pqSn+1fVBM\nVHVrWVi/WDASLK+Lc3b3ABVMmx8c+nmayhkIa8hepHq+c+JNUWzU+1iT6Ii586bo\nOOr8HPLA9LiJwNMlfwHRBahuSaYkavF4AWbOflFbPoj2nXpBrAWsjd25tJtHQssN\nKb2IW6wnA8u/6fYI4s5ywBuCDhzicM2hA69Pl13+y+9OGrf1bUdrHmheuTmxerH7\nFYghoav1/sDR7R2rYzvt/IlIsSWkZs0aIx+jAgW9WpghSoXMXLcSvQdB4ryegEJw\nALqPaG25pvZ3J8ohtUkvIeaXAdC0npaRIWO6+ObkaJ+5IexuS6Y=\n=zs1q\n-----END PGP SIGNATURE-----", "payload": "tree fad7a75a98cf274d2f1d0803461c25cb4d8affa8\nparent b92c6ee882853313698f1148512e8e992ba36b2d\nauthor Aaron Hill <aa1ronham@gmail.com> 1581737293 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1581737293 -0500\n\nSuggest a comma if a struct initializer field fails to parse\n\nCurrently, we emit a \"try adding a comma\" suggestion if a comma is\nmissing in a struct definition. However, we emit no such suggestion if a\ncomma is missing in a struct initializer.\n\nThis commit adds a \"try adding a comma\" suggestion when we don't find a\ncomma during the parsing of a struct initializer field.\n\nThe change to `src/test/ui/parser/removed-syntax-with-1.stderr` isn't\ngreat, but I don't see a good way of avoiding it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98757f14d0242e6dcae258df8aeb7e17580702ef", "html_url": "https://github.com/rust-lang/rust/commit/98757f14d0242e6dcae258df8aeb7e17580702ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98757f14d0242e6dcae258df8aeb7e17580702ef/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92c6ee882853313698f1148512e8e992ba36b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92c6ee882853313698f1148512e8e992ba36b2d", "html_url": "https://github.com/rust-lang/rust/commit/b92c6ee882853313698f1148512e8e992ba36b2d"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "20b9df0a2d9b63207163665cc43f97f94af3dece", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=98757f14d0242e6dcae258df8aeb7e17580702ef", "patch": "@@ -1832,10 +1832,16 @@ impl<'a> Parser<'a> {\n                     }\n                 }\n                 Err(mut e) => {\n+                    e.span_label(struct_sp, \"while parsing this struct\");\n                     if let Some(f) = recovery_field {\n                         fields.push(f);\n+                        e.span_suggestion(\n+                            self.prev_span.shrink_to_hi(),\n+                            \"try adding a comma\",\n+                            \",\".into(),\n+                            Applicability::MachineApplicable,\n+                        );\n                     }\n-                    e.span_label(struct_sp, \"while parsing this struct\");\n                     e.emit();\n                     self.recover_stmt_(SemiColonMode::Comma, BlockMode::Ignore);\n                     self.eat(&token::Comma);"}, {"sha": "c3f747b61b99fe9563b5771a5ab0af5c2e3e5b9b", "filename": "src/test/ui/parser/removed-syntax-with-1.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr?ref=98757f14d0242e6dcae258df8aeb7e17580702ef", "patch": "@@ -2,8 +2,9 @@ error: expected one of `,`, `.`, `?`, `}`, or an operator, found `with`\n   --> $DIR/removed-syntax-with-1.rs:8:25\n    |\n LL |     let b = S { foo: () with a, bar: () };\n-   |             -           ^^^^ expected one of `,`, `.`, `?`, `}`, or an operator\n-   |             |\n+   |             -          -^^^^ expected one of `,`, `.`, `?`, `}`, or an operator\n+   |             |          |\n+   |             |          help: try adding a comma: `,`\n    |             while parsing this struct\n \n error: aborting due to previous error"}, {"sha": "613b976848f703807516042c5e512d39335dc720", "filename": "src/test/ui/suggestions/struct-initializer-comma.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.rs?ref=98757f14d0242e6dcae258df8aeb7e17580702ef", "patch": "@@ -0,0 +1,13 @@\n+struct Foo {\n+    first: bool,\n+    second: u8,\n+}\n+\n+fn main() {\n+    let a = Foo {\n+        //~^ ERROR missing field\n+        first: true\n+        second: 25\n+        //~^ ERROR expected one of\n+    };\n+}"}, {"sha": "731e8e10ab3ca016898bbaddcb4a1f19647ff41e", "filename": "src/test/ui/suggestions/struct-initializer-comma.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98757f14d0242e6dcae258df8aeb7e17580702ef/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-initializer-comma.stderr?ref=98757f14d0242e6dcae258df8aeb7e17580702ef", "patch": "@@ -0,0 +1,23 @@\n+error: expected one of `,`, `.`, `?`, `}`, or an operator, found `second`\n+  --> $DIR/struct-initializer-comma.rs:10:9\n+   |\n+LL |     let a = Foo {\n+   |             --- while parsing this struct\n+LL |\n+LL |         first: true\n+   |                    -\n+   |                    |\n+   |                    expected one of `,`, `.`, `?`, `}`, or an operator\n+   |                    help: try adding a comma: `,`\n+LL |         second: 25\n+   |         ^^^^^^ unexpected token\n+\n+error[E0063]: missing field `second` in initializer of `Foo`\n+  --> $DIR/struct-initializer-comma.rs:7:13\n+   |\n+LL |     let a = Foo {\n+   |             ^^^ missing `second`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0063`."}]}