{"sha": "508df227e5f4820f1d600b72e626a620b2c714af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOGRmMjI3ZTVmNDgyMGYxZDYwMGI3MmU2MjZhNjIwYjJjNzE0YWY=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-13T00:48:18Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-13T00:48:18Z"}, "message": "Group libc helper functions", "tree": {"sha": "e3a498f6015472e4e8d35955dd4cc99a89765756", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3a498f6015472e4e8d35955dd4cc99a89765756"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/508df227e5f4820f1d600b72e626a620b2c714af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/508df227e5f4820f1d600b72e626a620b2c714af", "html_url": "https://github.com/rust-lang/rust/commit/508df227e5f4820f1d600b72e626a620b2c714af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/508df227e5f4820f1d600b72e626a620b2c714af/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cbf4afa99a1a8953ed54abdcb292b45b79a8639", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cbf4afa99a1a8953ed54abdcb292b45b79a8639", "html_url": "https://github.com/rust-lang/rust/commit/2cbf4afa99a1a8953ed54abdcb292b45b79a8639"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "3012b1a95541cc706dd0fee0ddcaf587c59a8ee2", "filename": "src/helpers.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/508df227e5f4820f1d600b72e626a620b2c714af/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/508df227e5f4820f1d600b72e626a620b2c714af/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=508df227e5f4820f1d600b72e626a620b2c714af", "patch": "@@ -308,8 +308,16 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         self.eval_libc(name)?.to_i32()\n     }\n \n+    /// Helper function to get the `TyLayout` of a `libc` type\n+    fn libc_ty_layout(&mut self, name: &str) -> InterpResult<'tcx, TyLayout<'tcx>> {\n+        let this = self.eval_context_mut();\n+        let tcx = &{ this.tcx.tcx };\n+        let ty = this.resolve_path(&[\"libc\", name])?.ty(*tcx);\n+        this.layout_of(ty)\n+    }\n+\n     // Writes several `ImmTy`s contiguosly into memory. This is useful when you have to pack\n-    // different values into an struct.\n+    // different values into a struct.\n     fn write_immediates(\n         &mut self,\n         ptr: &Pointer<Tag>,\n@@ -335,11 +343,4 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         Ok(())\n     }\n-\n-    fn libc_ty_layout(&mut self, name: &str) -> InterpResult<'tcx, TyLayout<'tcx>> {\n-        let this = self.eval_context_mut();\n-        let tcx = &{ this.tcx.tcx };\n-        let ty = this.resolve_path(&[\"libc\", name])?.ty(*tcx);\n-        this.layout_of(ty)\n-    }\n }"}]}