{"sha": "246d05b6247429df433b3f01491b90b6e47a6ad8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NmQwNWI2MjQ3NDI5ZGY0MzNiM2YwMTQ5MWI5MGI2ZTQ3YTZhZDg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-01-14T12:04:02Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:07Z"}, "message": "Evaluate 128 lowering lang items manually", "tree": {"sha": "adf479e8bd2efe0db7f1b050b4f840655c4ab865", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf479e8bd2efe0db7f1b050b4f840655c4ab865"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/246d05b6247429df433b3f01491b90b6e47a6ad8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg528ACgkQpp+NIls6\n19lsaA/7BXQiLH+1UsNDCyx7ruua09++Z/wzo1TSAETGE1GQFn8GhTctdSfTpvQF\nsUcgWQwUkkMUb2tSBL7GEVdcxox+3EG3qk+NwMV4BUdO5kPyK0VbSh05nyVSFU/M\nRI1Gds9aLz7pbt3XNcGDn0cpD1nrL2EgbH38hk8B/beu6CV5NZ/kPOdB2kxlSeI+\n/6T3bVRyzc+CARsjlpLZcgSD/hQsmMsIPEo/1yT+YVkq6hgWxNT27BWkTlRMf1XE\nPBw5O5yW2ePGYsLqhmJhIpmFfg1vO+If1weN5JxtlN1qGIqP8UDuZCnpfNWTi82q\nw0b8Fqcig5A2RrudvvoigfX4QIBePhbGnspuXQL8IbFpw7oJiFW1Asv7gRvzARfU\nVhx5/wasHQXchomDMFTWuf8OQcVdJUa5HuDRYkz/A4HlficLZWI/a7Svkc07ySsS\n7yNzQL5H/zkMgslj/rdWhr25eFcHwt8kh1/dOwVKSntI0R+rquDn7gt9DHkLyn0j\nYcin0C2pc6ToZssRThA9WGOlno7l/krgFVw4N777yVATXS7kk4kXMBZyOQk0xe/2\nFwzqgP2PSm6C+MyXoW0dVWKqxofcCwjXYPE8L9WCCW/Jk16wZhiYjjaHHsI5L/Er\nU6KmDi1wv9/3xMAbuOI4i+LrTSJsty1iGMyq+oXQ2vJFKfhwD8k=\n=fsX+\n-----END PGP SIGNATURE-----", "payload": "tree adf479e8bd2efe0db7f1b050b4f840655c4ab865\nparent b33e4e784e9906c732dcb3e0b6872f65dc8f5597\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1515931442 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494447 +0100\n\nEvaluate 128 lowering lang items manually\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/246d05b6247429df433b3f01491b90b6e47a6ad8", "html_url": "https://github.com/rust-lang/rust/commit/246d05b6247429df433b3f01491b90b6e47a6ad8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/246d05b6247429df433b3f01491b90b6e47a6ad8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b33e4e784e9906c732dcb3e0b6872f65dc8f5597", "url": "https://api.github.com/repos/rust-lang/rust/commits/b33e4e784e9906c732dcb3e0b6872f65dc8f5597", "html_url": "https://github.com/rust-lang/rust/commit/b33e4e784e9906c732dcb3e0b6872f65dc8f5597"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "c1618d8e8a959e96a35158fd96885ad78ee766a8", "filename": "src/librustc_mir/const_eval/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/246d05b6247429df433b3f01491b90b6e47a6ad8/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246d05b6247429df433b3f01491b90b6e47a6ad8/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs?ref=246d05b6247429df433b3f01491b90b6e47a6ad8", "patch": "@@ -836,7 +836,7 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n                 }\n             },\n             ty::TyAdt(adt_def, _) => {\n-                let struct_var = adt_def.struct_variant();\n+                let struct_var = adt_def.non_enum_variant();\n                 PatternKind::Leaf {\n                     subpatterns: struct_var.fields.iter().enumerate().map(|(i, _)| {\n                         let field = Field::new(i);"}, {"sha": "1b4cbecab3b06621cb3447decf7b1c6b154d302f", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/246d05b6247429df433b3f01491b90b6e47a6ad8/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246d05b6247429df433b3f01491b90b6e47a6ad8/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=246d05b6247429df433b3f01491b90b6e47a6ad8", "patch": "@@ -205,15 +205,29 @@ impl<'mir, 'tcx> super::Machine<'mir, 'tcx> for CompileTimeEvaluator {\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         destination: Option<(Place, mir::BasicBlock)>,\n-        _args: &[ValTy<'tcx>],\n+        args: &[ValTy<'tcx>],\n         span: Span,\n-        _sig: ty::FnSig<'tcx>,\n+        sig: ty::FnSig<'tcx>,\n     ) -> EvalResult<'tcx, bool> {\n         debug!(\"eval_fn_call: {:?}\", instance);\n         if !ecx.tcx.is_const_fn(instance.def_id()) {\n-            return Err(\n-                ConstEvalError::NotConst(format!(\"calling non-const fn `{}`\", instance)).into(),\n-            );\n+            let def_id = instance.def_id();\n+            let (op, oflo) = if let Some(op) = ecx.tcx.is_binop_lang_item(def_id) {\n+                op\n+            } else {\n+                return Err(\n+                    ConstEvalError::NotConst(format!(\"calling non-const fn `{}`\", instance)).into(),\n+                );\n+            };\n+            let (dest, bb) = destination.expect(\"128 lowerings can't diverge\");\n+            let dest_ty = sig.output();\n+            if oflo {\n+                ecx.intrinsic_with_overflow(op, args[0], args[1], dest, dest_ty)?;\n+            } else {\n+                ecx.intrinsic_overflowing(op, args[0], args[1], dest, dest_ty)?;\n+            }\n+            ecx.goto_block(bb);\n+            return Ok(true);\n         }\n         let mir = match ecx.load_mir(instance.def) {\n             Ok(mir) => mir,\n@@ -472,8 +486,8 @@ pub fn const_eval_provider<'a, 'tcx>(\n             ecx.report(&mut err, true);\n         }\n         ConstEvalErr {\n-        kind: err.into(),\n-        span,\n+            kind: err.into(),\n+            span,\n         }\n     })\n }"}]}