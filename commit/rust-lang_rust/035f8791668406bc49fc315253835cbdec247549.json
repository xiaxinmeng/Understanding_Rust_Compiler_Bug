{"sha": "035f8791668406bc49fc315253835cbdec247549", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNWY4NzkxNjY4NDA2YmM0OWZjMzE1MjUzODM1Y2JkZWMyNDc1NDk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-14T08:08:32Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-14T08:08:32Z"}, "message": "improve const infer err", "tree": {"sha": "0e6d57b0ab1dc14230fa79fc79e566110d414e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e6d57b0ab1dc14230fa79fc79e566110d414e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035f8791668406bc49fc315253835cbdec247549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035f8791668406bc49fc315253835cbdec247549", "html_url": "https://github.com/rust-lang/rust/commit/035f8791668406bc49fc315253835cbdec247549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035f8791668406bc49fc315253835cbdec247549/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd57275c3e4d52b443090d0d75a9a3443bc5ce5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd57275c3e4d52b443090d0d75a9a3443bc5ce5c", "html_url": "https://github.com/rust-lang/rust/commit/dd57275c3e4d52b443090d0d75a9a3443bc5ce5c"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "f87406c2ce469c97f15da28c3d9950abb90942d6", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -6,6 +6,7 @@ use rustc_hir::def::{DefKind, Namespace};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnRetTy, HirId, Local, Pat};\n use rustc_middle::hir::map::Map;\n+use rustc_middle::infer::unify_key::ConstVariableOriginKind;\n use rustc_middle::ty::print::Print;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{self, DefIdTree, InferConst, Ty};\n@@ -569,8 +570,13 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             local_visitor.visit_expr(expr);\n         }\n \n+        let mut param_name = None;\n         let span = if let ty::ConstKind::Infer(InferConst::Var(vid)) = ct.val {\n-            self.inner.borrow_mut().const_unification_table().probe_value(vid).origin.span\n+            let origin = self.inner.borrow_mut().const_unification_table().probe_value(vid).origin;\n+            if let ConstVariableOriginKind::ConstParameterDefinition(param) = origin.kind {\n+                param_name = Some(param);\n+            }\n+            origin.span\n         } else {\n             local_visitor.target_span\n         };\n@@ -579,7 +585,11 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         let mut err =\n             self.tcx.sess.struct_span_err_with_code(span, \"type annotations needed\", error_code);\n \n-        err.note(\"unable to infer the value of a const parameter\");\n+        if let Some(param_name) = param_name {\n+            err.note(&format!(\"cannot infer the value of the const parameter `{}`\", param_name));\n+        } else {\n+            err.note(\"unable to infer the value of a const parameter\");\n+        }\n \n         err\n     }"}, {"sha": "a60a17befeffdce2b344112e4508b5910445d03e", "filename": "compiler/rustc_middle/src/infer/unify_key.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -124,6 +124,7 @@ pub struct ConstVariableOrigin {\n pub enum ConstVariableOriginKind {\n     MiscVariable,\n     ConstInference,\n+    // FIXME(const_generics): Consider storing the `DefId` of the param here.\n     ConstParameterDefinition(Symbol),\n     SubstitutionPlaceholder,\n }"}, {"sha": "84e75cc3764167ca8b3975039a06967e72beb156", "filename": "src/test/ui/const-generics/infer/cannot-infer-const-args.full.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.full.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     foo();\n    |     ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `X`\n \n error: aborting due to previous error\n "}, {"sha": "84e75cc3764167ca8b3975039a06967e72beb156", "filename": "src/test/ui/const-generics/infer/cannot-infer-const-args.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fcannot-infer-const-args.min.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     foo();\n    |     ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `X`\n \n error: aborting due to previous error\n "}, {"sha": "e65bc3f109681227c401e5010a61956cfcfbb29f", "filename": "src/test/ui/const-generics/infer/method-chain.full.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.full.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     Foo.bar().bar().bar().bar().baz();\n    |                                 ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `N`\n \n error: aborting due to previous error\n "}, {"sha": "e65bc3f109681227c401e5010a61956cfcfbb29f", "filename": "src/test/ui/const-generics/infer/method-chain.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.min.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     Foo.bar().bar().bar().bar().baz();\n    |                                 ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `N`\n \n error: aborting due to previous error\n "}, {"sha": "9389ca20d106fd7d54e3c7dc1dc2cfb6bf3bad9b", "filename": "src/test/ui/const-generics/infer/method-chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Fmethod-chain.rs?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -19,4 +19,4 @@ impl Foo {\n \n fn main() {\n     Foo.bar().bar().bar().bar().baz(); //~ ERROR type annotations needed\n-}\n\\ No newline at end of file\n+}"}, {"sha": "e47b6bd5dc691f49dc65c0a5cdd6db608ed97f35", "filename": "src/test/ui/const-generics/infer/uninferred-consts.full.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.full.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     Foo.foo();\n    |         ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `N`\n \n error: aborting due to previous error\n "}, {"sha": "e47b6bd5dc691f49dc65c0a5cdd6db608ed97f35", "filename": "src/test/ui/const-generics/infer/uninferred-consts.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/035f8791668406bc49fc315253835cbdec247549/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer%2Funinferred-consts.min.stderr?ref=035f8791668406bc49fc315253835cbdec247549", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n LL |     Foo.foo();\n    |         ^^^\n    |\n-   = note: unable to infer the value of a const parameter\n+   = note: cannot infer the value of the const parameter `N`\n \n error: aborting due to previous error\n "}]}