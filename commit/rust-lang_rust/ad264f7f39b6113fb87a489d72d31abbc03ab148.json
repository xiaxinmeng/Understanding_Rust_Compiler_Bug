{"sha": "ad264f7f39b6113fb87a489d72d31abbc03ab148", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMjY0ZjdmMzliNjExM2ZiODdhNDg5ZDcyZDMxYWJiYzAzYWIxNDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-22T18:30:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-22T18:30:29Z"}, "message": "Auto merge of #34924 - cgswords:empty_delim, r=nrc\n\nAdded empty CloseDelim to tokens for future use.\n\nDescription says it all. I added a new DelimToken type, Empty, to indicate a Delimited tokenstream with no actual delimiters (which are variously useful for constructing macro output).\n\nr? @nrc", "tree": {"sha": "4534d3522de7de7d9bf9335b0f2df85923c71bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4534d3522de7de7d9bf9335b0f2df85923c71bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad264f7f39b6113fb87a489d72d31abbc03ab148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad264f7f39b6113fb87a489d72d31abbc03ab148", "html_url": "https://github.com/rust-lang/rust/commit/ad264f7f39b6113fb87a489d72d31abbc03ab148", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad264f7f39b6113fb87a489d72d31abbc03ab148/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af87681ed28c35689d817a12be92024864ce7e2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/af87681ed28c35689d817a12be92024864ce7e2c", "html_url": "https://github.com/rust-lang/rust/commit/af87681ed28c35689d817a12be92024864ce7e2c"}, {"sha": "536c3157955b76297ff667087807ffe463b48018", "url": "https://api.github.com/repos/rust-lang/rust/commits/536c3157955b76297ff667087807ffe463b48018", "html_url": "https://github.com/rust-lang/rust/commit/536c3157955b76297ff667087807ffe463b48018"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6cb79d6e8630f570d0ff065b37db361ed2c1795d", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=ad264f7f39b6113fb87a489d72d31abbc03ab148", "patch": "@@ -233,6 +233,7 @@ impl<'a> Classifier<'a> {\n             token::Dot | token::DotDot | token::DotDotDot | token::Comma | token::Semi |\n                 token::Colon | token::ModSep | token::LArrow | token::OpenDelim(_) |\n                 token::CloseDelim(token::Brace) | token::CloseDelim(token::Paren) |\n+                token::CloseDelim(token::NoDelim) |\n                 token::Question => Class::None,\n             token::Dollar => {\n                 if self.lexer.peek().tok.is_ident() {"}, {"sha": "b70e270df54d2a08ef7169bd34219a1077cf6e8f", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=ad264f7f39b6113fb87a489d72d31abbc03ab148", "patch": "@@ -581,9 +581,10 @@ fn mk_binop(cx: &ExtCtxt, sp: Span, bop: token::BinOpToken) -> P<ast::Expr> {\n \n fn mk_delim(cx: &ExtCtxt, sp: Span, delim: token::DelimToken) -> P<ast::Expr> {\n     let name = match delim {\n-        token::Paren     => \"Paren\",\n-        token::Bracket   => \"Bracket\",\n-        token::Brace     => \"Brace\",\n+        token::Paren   => \"Paren\",\n+        token::Bracket => \"Bracket\",\n+        token::Brace   => \"Brace\",\n+        token::NoDelim => \"NoDelim\",\n     };\n     mk_token_path(cx, sp, name)\n }"}, {"sha": "6fdc9b714d34724202173d5417087ba1ea0bd4f3", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=ad264f7f39b6113fb87a489d72d31abbc03ab148", "patch": "@@ -48,6 +48,8 @@ pub enum DelimToken {\n     Bracket,\n     /// A curly brace: `{` or `}`\n     Brace,\n+    /// An empty delimiter\n+    NoDelim,\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Eq, Hash, Debug, Copy)]"}, {"sha": "a619da84b2d510529d679312641bf89b257b50e0", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad264f7f39b6113fb87a489d72d31abbc03ab148/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ad264f7f39b6113fb87a489d72d31abbc03ab148", "patch": "@@ -242,6 +242,8 @@ pub fn token_to_string(tok: &Token) -> String {\n         token::CloseDelim(token::Bracket) => \"]\".to_string(),\n         token::OpenDelim(token::Brace) => \"{\".to_string(),\n         token::CloseDelim(token::Brace) => \"}\".to_string(),\n+        token::OpenDelim(token::NoDelim) => \" \".to_string(),\n+        token::CloseDelim(token::NoDelim) => \" \".to_string(),\n         token::Pound                => \"#\".to_string(),\n         token::Dollar               => \"$\".to_string(),\n         token::Question             => \"?\".to_string(),\n@@ -1777,12 +1779,14 @@ impl<'a> State<'a> {\n                 try!(self.head(\"\"));\n                 try!(self.bopen());\n             }\n+            token::NoDelim => {}\n         }\n         try!(self.print_tts(&m.node.tts));\n         match delim {\n             token::Paren => self.pclose(),\n             token::Bracket => word(&mut self.s, \"]\"),\n             token::Brace => self.bclose(m.span),\n+            token::NoDelim => Ok(()),\n         }\n     }\n "}]}