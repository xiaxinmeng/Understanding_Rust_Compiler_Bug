{"sha": "d316ba9a136833c64ba066feb62cf553dd4b3a58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMTZiYTlhMTM2ODMzYzY0YmEwNjZmZWI2MmNmNTUzZGQ0YjNhNTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T10:24:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T10:52:17Z"}, "message": "Handle nested declrations in from_source", "tree": {"sha": "5402667f6508693b68acb7e58b95a25d272b93f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5402667f6508693b68acb7e58b95a25d272b93f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d316ba9a136833c64ba066feb62cf553dd4b3a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d316ba9a136833c64ba066feb62cf553dd4b3a58", "html_url": "https://github.com/rust-lang/rust/commit/d316ba9a136833c64ba066feb62cf553dd4b3a58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d316ba9a136833c64ba066feb62cf553dd4b3a58/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04177f135be89ddbf1788c6f747c26812e90438", "url": "https://api.github.com/repos/rust-lang/rust/commits/a04177f135be89ddbf1788c6f747c26812e90438", "html_url": "https://github.com/rust-lang/rust/commit/a04177f135be89ddbf1788c6f747c26812e90438"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "4fd7c757364e04933893d82426adae79e973b7b9", "filename": "crates/ra_hir/src/from_source.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d316ba9a136833c64ba066feb62cf553dd4b3a58/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d316ba9a136833c64ba066feb62cf553dd4b3a58/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs?ref=d316ba9a136833c64ba066feb62cf553dd4b3a58", "patch": "@@ -216,21 +216,30 @@ fn analyze_container(db: &impl DefDatabase, src: InFile<&SyntaxNode>) -> DynMap\n }\n \n fn _analyze_container(db: &impl DefDatabase, src: InFile<&SyntaxNode>) -> Option<DynMap> {\n-    // FIXME: this doesn't try to handle nested declarations\n     for container in src.value.ancestors().skip(1) {\n         let res = match_ast! {\n             match container {\n                 ast::TraitDef(it) => {\n-                    let c = Trait::from_source(db, src.with_value(it))?;\n-                    c.id.child_by_source(db)\n+                    let def = Trait::from_source(db, src.with_value(it))?;\n+                    def.id.child_by_source(db)\n                 },\n                 ast::ImplBlock(it) => {\n-                    let c = ImplBlock::from_source(db, src.with_value(it))?;\n-                    c.id.child_by_source(db)\n+                    let def = ImplBlock::from_source(db, src.with_value(it))?;\n+                    def.id.child_by_source(db)\n                 },\n                 ast::FnDef(it) => {\n-                    let f = Function::from_source(db, src.with_value(it))?;\n-                    DefWithBodyId::from(f.id)\n+                    let def = Function::from_source(db, src.with_value(it))?;\n+                    DefWithBodyId::from(def.id)\n+                        .child_by_source(db)\n+                },\n+                ast::StaticDef(it) => {\n+                    let def = Static::from_source(db, src.with_value(it))?;\n+                    DefWithBodyId::from(def.id)\n+                        .child_by_source(db)\n+                },\n+                ast::ConstDef(it) => {\n+                    let def = Const::from_source(db, src.with_value(it))?;\n+                    DefWithBodyId::from(def.id)\n                         .child_by_source(db)\n                 },\n                 _ => { continue },"}]}