{"sha": "bfbd0a5e49f263715a634ddc744ebe79cbc81126", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYmQwYTVlNDlmMjYzNzE1YTYzNGRkYzc0NGViZTc5Y2JjODExMjY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-11T15:51:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-11T15:51:27Z"}, "message": "Rollup merge of #37072 - michaelwoerister:enable-trait-ich-tests, r=nikomatsakis\n\nICH: Enable some cases in trait definition hashing.\n\nEnable some test cases originally written by @eulerdisk. The tests can be enabled now because @MathieuBordere has fixed the underlying problem in #36974.\n\nr? @nikomatsakis", "tree": {"sha": "7baeac511a1d341ae7807a0de64be6638d3bfbbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7baeac511a1d341ae7807a0de64be6638d3bfbbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfbd0a5e49f263715a634ddc744ebe79cbc81126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfbd0a5e49f263715a634ddc744ebe79cbc81126", "html_url": "https://github.com/rust-lang/rust/commit/bfbd0a5e49f263715a634ddc744ebe79cbc81126", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfbd0a5e49f263715a634ddc744ebe79cbc81126/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffa9bbf7cd3283f8d721bde6bed552a9c7a042dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa9bbf7cd3283f8d721bde6bed552a9c7a042dd", "html_url": "https://github.com/rust-lang/rust/commit/ffa9bbf7cd3283f8d721bde6bed552a9c7a042dd"}, {"sha": "f52723c3300f70ffe5c79620cb346251d7c236e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52723c3300f70ffe5c79620cb346251d7c236e4", "html_url": "https://github.com/rust-lang/rust/commit/f52723c3300f70ffe5c79620cb346251d7c236e4"}], "stats": {"total": 176, "additions": 85, "deletions": 91}, "files": [{"sha": "937f053e320f6a7c56d1965b2e68b98a44aac7a3", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 85, "deletions": 91, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/bfbd0a5e49f263715a634ddc744ebe79cbc81126/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfbd0a5e49f263715a634ddc744ebe79cbc81126/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=bfbd0a5e49f263715a634ddc744ebe79cbc81126", "patch": "@@ -46,16 +46,15 @@ pub trait TraitVisibility { }\n \n \n // Change trait unsafety ----------------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitUnsafety { }\n+#[cfg(cfail1)]\n+trait TraitUnsafety { }\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// unsafe trait TraitUnsafety { }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+unsafe trait TraitUnsafety { }\n \n \n \n@@ -178,20 +177,19 @@ trait TraitChangeMethodParameterType {\n \n \n // Change type of method parameter (&i32 => &mut i32) -----------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeMethodParameterTypeRef {\n-//     fn method(a: &i32);\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeMethodParameterTypeRef {\n+    fn method(a: &i32);\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeMethodParameterTypeRef {\n-//     fn method(a: &mut i32);\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeMethodParameterTypeRef {\n+    fn method(a: &mut i32);\n+}\n \n \n \n@@ -249,35 +247,35 @@ trait TraitChangeOrderOfMethods {\n \n \n // Change mode of self parameter --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeModeSelfRefToMut {\n-//     fn method(&self);\n-// }\n-\n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeModeSelfRefToMut {\n-//     fn method(&mut self);\n-// }\n-\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeModeSelfOwnToMut {\n-//     fn method(self);\n-// }\n-\n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeModeSelfOwnToMut {\n-//     fn method(mut self);\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeModeSelfRefToMut {\n+    fn method(&self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeModeSelfRefToMut {\n+    fn method(&mut self);\n+}\n+\n+\n+\n+#[cfg(cfail1)]\n+trait TraitChangeModeSelfOwnToMut {\n+    fn method(self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeModeSelfOwnToMut {\n+    fn method(mut self);\n+}\n \n \n \n@@ -298,56 +296,53 @@ trait TraitChangeModeSelfOwnToRef {\n \n \n // Add unsafe modifier to method --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitAddUnsafeModifier {\n-//     fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitAddUnsafeModifier {\n+    fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitAddUnsafeModifier {\n-//     unsafe fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitAddUnsafeModifier {\n+    unsafe fn method();\n+}\n \n \n \n // Add extern modifier to method --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitAddExternModifier {\n-//     fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitAddExternModifier {\n+    fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitAddExternModifier {\n-//     extern fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitAddExternModifier {\n+    extern fn method();\n+}\n \n \n \n // Change extern \"C\" to extern \"rust-intrinsic\" -----------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeExternCToRustIntrinsic {\n-//     extern \"C\" fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeExternCToRustIntrinsic {\n+    extern \"C\" fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeExternCToRustIntrinsic {\n-//     extern \"rust-intrinsic\" fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeExternCToRustIntrinsic {\n+    extern \"rust-intrinsic\" fn method();\n+}\n \n \n \n@@ -1118,4 +1113,3 @@ mod change_method_type_parameter_bound_indirectly_where {\n         fn method(a: T);\n     }\n }\n-"}]}