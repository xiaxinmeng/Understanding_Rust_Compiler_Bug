{"sha": "68c8d6d1c12856f22646accfdae6d90c2406f06e", "node_id": "C_kwDOAAsO6NoAKDY4YzhkNmQxYzEyODU2ZjIyNjQ2YWNjZmRhZTZkOTBjMjQwNmYwNmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-04T23:02:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-04T23:02:04Z"}, "message": "Rollup merge of #103878 - Mark-Simulacrum:fix-stable-ci-download, r=jyn514\n\nFix artifact version/channel detection for stable\n\nOn stable, our artifacts are uploaded with the raw version number (e.g., 1.65.0), not the channel. This adjusts our detection logic to use the version number from src/version when we detect the stable channel.\n\nThis is really only important for stable channel re-builds, I think, but those do happen from time to time. I'm backporting a similar commit in https://github.com/rust-lang/rust/pull/103859 to make that PR pass CI.", "tree": {"sha": "a0b4a31d76d6dfe6e3fbb121d42cdf7b78b82317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b4a31d76d6dfe6e3fbb121d42cdf7b78b82317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68c8d6d1c12856f22646accfdae6d90c2406f06e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZZnsCRBK7hj4Ov3rIwAArvQIABKF2NX3zxzdhJCllebzibUB\nLdiARWTZQn6FYDqgWJlFtu5sMNSTtWgepMl5TLN40A38L/azUusgL6AZeeKVLRe4\nY5uD8DH6arh95EV6sVSbDiiH9RcO4L7yliRxkdCEqabJC2IAQQ9LtPaTOWNfl4zl\ndohZeln7AoAc7SXEZPlcTgocnA5g+KpwQ+BBxixW58JiC6aehHaVYryX8upGhRQ+\nbA0IJKtagGyco7dyEU6BUSvmvcJDGNQXVOLDhqXPlVnNyrnDWuygJAxeHBHX7xro\ncJcC0JHLELNJWiXqgWhhyTgavDxvFr05iseVDE7XPTJ2dnfNR4wjjtYtv1unX2M=\n=eKcH\n-----END PGP SIGNATURE-----\n", "payload": "tree a0b4a31d76d6dfe6e3fbb121d42cdf7b78b82317\nparent ad01a37ca9d88db738267b4529914dc26bd624d6\nparent 29490098c2dbb9c90c5059ce7a9448dca345b0fb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1667602924 +0100\ncommitter GitHub <noreply@github.com> 1667602924 +0100\n\nRollup merge of #103878 - Mark-Simulacrum:fix-stable-ci-download, r=jyn514\n\nFix artifact version/channel detection for stable\n\nOn stable, our artifacts are uploaded with the raw version number (e.g., 1.65.0), not the channel. This adjusts our detection logic to use the version number from src/version when we detect the stable channel.\n\nThis is really only important for stable channel re-builds, I think, but those do happen from time to time. I'm backporting a similar commit in https://github.com/rust-lang/rust/pull/103859 to make that PR pass CI.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68c8d6d1c12856f22646accfdae6d90c2406f06e", "html_url": "https://github.com/rust-lang/rust/commit/68c8d6d1c12856f22646accfdae6d90c2406f06e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68c8d6d1c12856f22646accfdae6d90c2406f06e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad01a37ca9d88db738267b4529914dc26bd624d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad01a37ca9d88db738267b4529914dc26bd624d6", "html_url": "https://github.com/rust-lang/rust/commit/ad01a37ca9d88db738267b4529914dc26bd624d6"}, {"sha": "29490098c2dbb9c90c5059ce7a9448dca345b0fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/29490098c2dbb9c90c5059ce7a9448dca345b0fb", "html_url": "https://github.com/rust-lang/rust/commit/29490098c2dbb9c90c5059ce7a9448dca345b0fb"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "21dc11c48081e8f18ac2da327378772b85a5cd8c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 40, "deletions": 15, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/68c8d6d1c12856f22646accfdae6d90c2406f06e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c8d6d1c12856f22646accfdae6d90c2406f06e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=68c8d6d1c12856f22646accfdae6d90c2406f06e", "patch": "@@ -1380,21 +1380,46 @@ impl Config {\n         git\n     }\n \n-    pub(crate) fn artifact_channel(&self, builder: &Builder<'_>, commit: &str) -> String {\n-        if builder.rust_info.is_managed_git_subrepository() {\n+    /// Bootstrap embeds a version number into the name of shared libraries it uploads in CI.\n+    /// Return the version it would have used for the given commit.\n+    pub(crate) fn artifact_version_part(&self, builder: &Builder<'_>, commit: &str) -> String {\n+        let (channel, version) = if builder.rust_info.is_managed_git_subrepository() {\n             let mut channel = self.git();\n             channel.arg(\"show\").arg(format!(\"{}:src/ci/channel\", commit));\n             let channel = output(&mut channel);\n-            channel.trim().to_owned()\n-        } else if let Ok(channel) = fs::read_to_string(builder.src.join(\"src/ci/channel\")) {\n-            channel.trim().to_owned()\n+            let mut version = self.git();\n+            version.arg(\"show\").arg(format!(\"{}:src/version\", commit));\n+            let version = output(&mut version);\n+            (channel.trim().to_owned(), version.trim().to_owned())\n         } else {\n-            let src = builder.src.display();\n-            eprintln!(\"error: failed to determine artifact channel\");\n-            eprintln!(\n-                \"help: either use git or ensure that {src}/src/ci/channel contains the name of the channel to use\"\n-            );\n-            panic!();\n+            let channel = fs::read_to_string(builder.src.join(\"src/ci/channel\"));\n+            let version = fs::read_to_string(builder.src.join(\"src/version\"));\n+            match (channel, version) {\n+                (Ok(channel), Ok(version)) => {\n+                    (channel.trim().to_owned(), version.trim().to_owned())\n+                }\n+                (channel, version) => {\n+                    let src = builder.src.display();\n+                    eprintln!(\"error: failed to determine artifact channel and/or version\");\n+                    eprintln!(\n+                        \"help: consider using a git checkout or ensure these files are readable\"\n+                    );\n+                    if let Err(channel) = channel {\n+                        eprintln!(\"reading {}/src/ci/channel failed: {:?}\", src, channel);\n+                    }\n+                    if let Err(version) = version {\n+                        eprintln!(\"reading {}/src/version failed: {:?}\", src, version);\n+                    }\n+                    panic!();\n+                }\n+            }\n+        };\n+\n+        match channel.as_str() {\n+            \"stable\" => version,\n+            \"beta\" => channel,\n+            \"nightly\" => channel,\n+            other => unreachable!(\"{:?} is not recognized as a valid channel\", other),\n         }\n     }\n \n@@ -1637,7 +1662,7 @@ fn maybe_download_rustfmt(builder: &Builder<'_>) -> Option<PathBuf> {\n \n fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n     builder.verbose(&format!(\"using downloaded stage2 artifacts from CI (commit {commit})\"));\n-    let channel = builder.config.artifact_channel(builder, commit);\n+    let version = builder.config.artifact_version_part(builder, commit);\n     let host = builder.config.build.triple;\n     let bin_root = builder.out.join(host).join(\"ci-rustc\");\n     let rustc_stamp = bin_root.join(\".rustc-stamp\");\n@@ -1646,13 +1671,13 @@ fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n         if bin_root.exists() {\n             t!(fs::remove_dir_all(&bin_root));\n         }\n-        let filename = format!(\"rust-std-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rust-std-{version}-{host}.tar.xz\");\n         let pattern = format!(\"rust-std-{host}\");\n         download_ci_component(builder, filename, &pattern, commit);\n-        let filename = format!(\"rustc-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-{version}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc\", commit);\n         // download-rustc doesn't need its own cargo, it can just use beta's.\n-        let filename = format!(\"rustc-dev-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-dev-{version}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc-dev\", commit);\n \n         builder.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustc\"));"}, {"sha": "94a61b727a32bccfb2bd33e1b47b1fc68a4d74f5", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68c8d6d1c12856f22646accfdae6d90c2406f06e/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c8d6d1c12856f22646accfdae6d90c2406f06e/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=68c8d6d1c12856f22646accfdae6d90c2406f06e", "patch": "@@ -269,8 +269,8 @@ fn download_ci_llvm(builder: &Builder<'_>, llvm_sha: &str) {\n     } else {\n         &builder.config.stage0_metadata.config.artifacts_server\n     };\n-    let channel = builder.config.artifact_channel(builder, llvm_sha);\n-    let filename = format!(\"rust-dev-{}-{}.tar.xz\", channel, builder.build.build.triple);\n+    let version = builder.config.artifact_version_part(builder, llvm_sha);\n+    let filename = format!(\"rust-dev-{}-{}.tar.xz\", version, builder.build.build.triple);\n     let tarball = rustc_cache.join(&filename);\n     if !tarball.exists() {\n         let help_on_error = \"error: failed to download llvm from ci"}]}