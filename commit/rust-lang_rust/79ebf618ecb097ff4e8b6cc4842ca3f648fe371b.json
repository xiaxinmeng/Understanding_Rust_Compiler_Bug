{"sha": "79ebf618ecb097ff4e8b6cc4842ca3f648fe371b", "node_id": "C_kwDOAAsO6NoAKDc5ZWJmNjE4ZWNiMDk3ZmY0ZThiNmNjNDg0MmNhM2Y2NDhmZTM3MWI", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-07T17:21:31Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-07T17:21:31Z"}, "message": "Simplify", "tree": {"sha": "755af4223db86caac4b3714c8090b97d4f102168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/755af4223db86caac4b3714c8090b97d4f102168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b", "html_url": "https://github.com/rust-lang/rust/commit/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86b968ba94c30986ef7731b44af49907307c29a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/86b968ba94c30986ef7731b44af49907307c29a3", "html_url": "https://github.com/rust-lang/rust/commit/86b968ba94c30986ef7731b44af49907307c29a3"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "28a5d960859e40a89f92f2463706b1c853bfcb8b", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ebf618ecb097ff4e8b6cc4842ca3f648fe371b/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=79ebf618ecb097ff4e8b6cc4842ca3f648fe371b", "patch": "@@ -345,23 +345,7 @@ impl base_db::ProcMacroExpander for IdentityWhenValidProcMacroExpander {\n         if parse.errors().is_empty() {\n             Ok(subtree.clone())\n         } else {\n-            eprintln!(\"parse errors: {:?}\", parse.errors());\n-            use tt::{Delimiter, DelimiterKind, Ident, Leaf, Literal, Punct, TokenTree};\n-            let mut subtree = Subtree::default();\n-            subtree.token_trees.push(TokenTree::Leaf(\n-                Ident { text: \"compile_error!\".into(), id: TokenId(0) }.into(),\n-            ));\n-            subtree.token_trees.push(TokenTree::Subtree(Subtree {\n-                delimiter: Some(Delimiter { id: TokenId(2), kind: DelimiterKind::Parenthesis }),\n-                token_trees: vec![TokenTree::Leaf(Leaf::Literal(Literal {\n-                    text: r#\"\"parse error\"\"#.into(),\n-                    id: TokenId::unspecified(),\n-                }))],\n-            }));\n-            subtree.token_trees.push(TokenTree::Leaf(\n-                Punct { char: ';', spacing: tt::Spacing::Alone, id: TokenId::unspecified() }.into(),\n-            ));\n-            Ok(subtree)\n+            panic!(\"got invalid macro input: {:?}\", parse.errors());\n         }\n     }\n }"}]}