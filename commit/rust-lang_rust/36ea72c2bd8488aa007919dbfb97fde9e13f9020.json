{"sha": "36ea72c2bd8488aa007919dbfb97fde9e13f9020", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZWE3MmMyYmQ4NDg4YWEwMDc5MTlkYmZiOTdmZGU5ZTEzZjkwMjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T11:45:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T11:45:05Z"}, "message": "Move emit_module call", "tree": {"sha": "f20ade1c188bca0684148e15aa0f9b03848634df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f20ade1c188bca0684148e15aa0f9b03848634df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36ea72c2bd8488aa007919dbfb97fde9e13f9020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36ea72c2bd8488aa007919dbfb97fde9e13f9020", "html_url": "https://github.com/rust-lang/rust/commit/36ea72c2bd8488aa007919dbfb97fde9e13f9020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36ea72c2bd8488aa007919dbfb97fde9e13f9020/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97db112295dbf18595e1ad3006422621fa643b30", "url": "https://api.github.com/repos/rust-lang/rust/commits/97db112295dbf18595e1ad3006422621fa643b30", "html_url": "https://github.com/rust-lang/rust/commit/97db112295dbf18595e1ad3006422621fa643b30"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "b6cc3a98257f04347c6af8f8ac8d9c001aade3f9", "filename": "src/driver.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/36ea72c2bd8488aa007919dbfb97fde9e13f9020/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36ea72c2bd8488aa007919dbfb97fde9e13f9020/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=36ea72c2bd8488aa007919dbfb97fde9e13f9020", "patch": "@@ -231,6 +231,14 @@ fn run_aot(\n     });\n     crate::main_shim::maybe_create_entry_wrapper(tcx, &mut module);\n \n+    let modules = vec![emit_module(\n+        tcx,\n+        \"some_file\".to_string(),\n+        ModuleKind::Regular,\n+        module,\n+        debug,\n+    )];\n+\n     tcx.sess.abort_if_errors();\n \n     let mut allocator_module = new_module(\"allocator_shim\".to_string());\n@@ -277,13 +285,7 @@ fn run_aot(\n \n     Box::new(CodegenResults {\n         crate_name: tcx.crate_name(LOCAL_CRATE),\n-        modules: vec![emit_module(\n-            tcx,\n-            \"some_file\".to_string(),\n-            ModuleKind::Regular,\n-            module,\n-            debug,\n-        )],\n+        modules,\n         allocator_module: if created_alloc_shim {\n             Some(emit_module(\n                 tcx,"}]}