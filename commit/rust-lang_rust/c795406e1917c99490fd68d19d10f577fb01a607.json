{"sha": "c795406e1917c99490fd68d19d10f577fb01a607", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OTU0MDZlMTkxN2M5OTQ5MGZkNjhkMTlkMTBmNTc3ZmIwMWE2MDc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-05-17T21:16:39Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-05-20T16:53:02Z"}, "message": "Add error explanation for E0070", "tree": {"sha": "859acc6152b2bf39ff26a560940c212aa286cf70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/859acc6152b2bf39ff26a560940c212aa286cf70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c795406e1917c99490fd68d19d10f577fb01a607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c795406e1917c99490fd68d19d10f577fb01a607", "html_url": "https://github.com/rust-lang/rust/commit/c795406e1917c99490fd68d19d10f577fb01a607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c795406e1917c99490fd68d19d10f577fb01a607/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dd5ad0be84f8d14dc357fb35a4b21fe5a34030a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd5ad0be84f8d14dc357fb35a4b21fe5a34030a", "html_url": "https://github.com/rust-lang/rust/commit/2dd5ad0be84f8d14dc357fb35a4b21fe5a34030a"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "7b48beae572994719bb4783abc47ed12d502da65", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 51, "deletions": 4, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/c795406e1917c99490fd68d19d10f577fb01a607/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c795406e1917c99490fd68d19d10f577fb01a607/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=c795406e1917c99490fd68d19d10f577fb01a607", "patch": "@@ -124,8 +124,8 @@ be specified exactly one time.\n \n E0063: r##\"\n This error indicates that during an attempt to build a struct or struct-like\n-enum variant, one of the fields was not provided. Each field should be specified\n-exactly once.\n+enum variant, one of the fields was not provided. Each field should be\n+specified exactly once.\n \"##,\n \n E0066: r##\"\n@@ -141,7 +141,8 @@ and [RFC 809] for more details.\n E0067: r##\"\n The left-hand side of an assignment operator must be an lvalue expression. An\n lvalue expression represents a memory location and includes item paths (ie,\n-namespaced variables), dereferences, indexing expressions, and field references.\n+namespaced variables), dereferences, indexing expressions, and field\n+references.\n \n ```\n use std::collections::LinkedList;\n@@ -170,6 +171,53 @@ Since `return;` is just like `return ();`, there is a mismatch between the\n function's return type and the value being returned.\n \"##,\n \n+E0070: r##\"\n+The left-hand side of an assignment operator must be an lvalue expression. An\n+lvalue expression represents a memory location and can be a variable (with\n+optional namespacing), a dereference, an indexing expression or a field\n+reference.\n+\n+More details can be found here:\n+https://doc.rust-lang.org/reference.html#lvalues,-rvalues-and-temporaries\n+\n+Now, we can go further. Here are some bad examples:\n+```\n+struct SomeStruct {\n+    x: i32,\n+    y: i32\n+}\n+const SOME_CONST : i32 = 12;\n+\n+fn some_other_func() {}\n+\n+fn some_function() {\n+    SOME_CONST = 14; // error : a constant value cannot be changed!\n+    1 = 3; // error : 1 isn't a valid lvalue!\n+    some_other_func() = 4; // error : we can't assign value to a function!\n+    SomeStruct.x = 12; // error : SomeStruct a structure name but it is used\n+                       // like a variable!\n+}\n+```\n+\n+And now let's give good examples:\n+\n+```\n+struct SomeStruct {\n+    x: i32,\n+    y: i32\n+}\n+let mut s = SomeStruct {x: 0, y: 0};\n+\n+s.x = 3; // that's good !\n+\n+// ...\n+\n+fn some_func(x: &mut i32) {\n+    *x = 12; // that's good !\n+}\n+```\n+\"##,\n+\n E0072: r##\"\n When defining a recursive struct or enum, any use of the type being defined\n from inside the definition must occur behind a pointer (like `Box` or `&`).\n@@ -779,7 +827,6 @@ register_diagnostics! {\n     E0060,\n     E0061,\n     E0068,\n-    E0070,\n     E0071,\n     E0074,\n     E0075,"}]}