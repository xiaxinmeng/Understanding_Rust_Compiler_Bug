{"sha": "30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "node_id": "C_kwDOAAsO6NoAKDMwZmU0YmExZmI1OGM1ZjkyOWRjZjBmNjM3YjQwMGExY2ViNzc2OTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-27T00:49:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-27T00:49:08Z"}, "message": "Auto merge of #7722 - dtolnay-contrib:float, r=giraffate\n\nStop suggesting a float truncation that is not shorter\n\nFixes #7721.\n\nPreviously Clippy would say that a number has excessive precision even if it has the minimum possible precision for the floating point value that it corresponds to.\n\nchangelog: Fix [`excessive_precision`] being triggered on floats that are already written in shortest form", "tree": {"sha": "34788d3f8ad9c09ba70eee40b5f42305e267afe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34788d3f8ad9c09ba70eee40b5f42305e267afe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "html_url": "https://github.com/rust-lang/rust/commit/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb61d04896332afd90a66c661d2d5dab33345c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb61d04896332afd90a66c661d2d5dab33345c92", "html_url": "https://github.com/rust-lang/rust/commit/fb61d04896332afd90a66c661d2d5dab33345c92"}, {"sha": "e63d69244e6f0d1463cea210445cb46f59cd9f83", "url": "https://api.github.com/repos/rust-lang/rust/commits/e63d69244e6f0d1463cea210445cb46f59cd9f83", "html_url": "https://github.com/rust-lang/rust/commit/e63d69244e6f0d1463cea210445cb46f59cd9f83"}], "stats": {"total": 44, "additions": 7, "deletions": 37}, "files": [{"sha": "1e8a5bd7d34453be68f0b322047f601ed1f789d6", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "patch": "@@ -111,7 +111,7 @@ impl<'tcx> LateLintPass<'tcx> for FloatLiteral {\n                             Applicability::MachineApplicable,\n                         );\n                     }\n-                } else if digits > max as usize && sym_str != float_str {\n+                } else if digits > max as usize && float_str.len() < sym_str.len() {\n                     span_lint_and_sugg(\n                         cx,\n                         EXCESSIVE_PRECISION,"}, {"sha": "90376620a9fd835d867fbe9b7bdc8538321628cc", "filename": "tests/ui/excessive_precision.fixed", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/tests%2Fui%2Fexcessive_precision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/tests%2Fui%2Fexcessive_precision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.fixed?ref=30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "patch": "@@ -17,8 +17,8 @@ fn main() {\n     const BAD32_3: f32 = 0.1;\n     const BAD32_EDGE: f32 = 1.000_001;\n \n-    const BAD64_1: f64 = 0.123_456_789_012_345_66_f64;\n-    const BAD64_2: f64 = 0.123_456_789_012_345_66;\n+    const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n+    const BAD64_2: f64 = 0.123_456_789_012_345_67;\n     const BAD64_3: f64 = 0.1;\n \n     // Literal as param\n@@ -37,9 +37,9 @@ fn main() {\n     let bad32_suf: f32 = 1.123_456_8_f32;\n     let bad32_inf = 1.123_456_8_f32;\n \n-    let bad64: f64 = 0.123_456_789_012_345_66;\n-    let bad64_suf: f64 = 0.123_456_789_012_345_66_f64;\n-    let bad64_inf = 0.123_456_789_012_345_66;\n+    let bad64: f64 = 0.123_456_789_012_345_67;\n+    let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n+    let bad64_inf = 0.123_456_789_012_345_67;\n \n     // Vectors\n     let good_vec32: Vec<f32> = vec![0.123_456];"}, {"sha": "e59c20c30b4fda7bbfcceb15b60f2ceff69d9cb4", "filename": "tests/ui/excessive_precision.stderr", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/tests%2Fui%2Fexcessive_precision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30fe4ba1fb58c5f929dcf0f637b400a1ceb77693/tests%2Fui%2Fexcessive_precision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.stderr?ref=30fe4ba1fb58c5f929dcf0f637b400a1ceb77693", "patch": "@@ -24,18 +24,6 @@ error: float has excessive precision\n LL |     const BAD32_EDGE: f32 = 1.000_000_9;\n    |                             ^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.000_001`\n \n-error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:20:26\n-   |\n-LL |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66_f64`\n-\n-error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:21:26\n-   |\n-LL |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n-\n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:22:26\n    |\n@@ -66,24 +54,6 @@ error: float has excessive precision\n LL |     let bad32_inf = 1.123_456_789_f32;\n    |                     ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8_f32`\n \n-error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:40:22\n-   |\n-LL |     let bad64: f64 = 0.123_456_789_012_345_67;\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n-\n-error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:41:26\n-   |\n-LL |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66_f64`\n-\n-error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:42:21\n-   |\n-LL |     let bad64_inf = 0.123_456_789_012_345_67;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n-\n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:48:36\n    |\n@@ -108,5 +78,5 @@ error: float has excessive precision\n LL |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8E-10`\n \n-error: aborting due to 18 previous errors\n+error: aborting due to 13 previous errors\n "}]}