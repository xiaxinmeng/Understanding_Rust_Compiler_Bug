{"sha": "9506f62a7ab10629f10926f2bad8bd7e78e755a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MDZmNjJhN2FiMTA2MjlmMTA5MjZmMmJhZDhiZDdlNzhlNzU1YTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-14T15:49:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-14T15:49:26Z"}, "message": "Rollup merge of #59936 - petrochenkov:confict, r=davidtwco\n\nFix cross-crate visibility of fictive variant constructors\n\nAfter merging https://github.com/rust-lang/rust/pull/59376 I realized that the code in the decoder wasn't entirely correct - we \"decoded\" fictive variant constructors with their variant's visibility, which could be public, rather than demoted to `pub(crate)`.\n\nFictive constructors are not directly usable in expression/patterns, but the effect still can be observed with imports.\n\nr? @davidtwco", "tree": {"sha": "611ef7727c62cd6efd63a47d08d6a7d8b761e802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/611ef7727c62cd6efd63a47d08d6a7d8b761e802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9506f62a7ab10629f10926f2bad8bd7e78e755a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcs1aGCRBK7hj4Ov3rIwAAdHIIAGcYWzZELXZGtS5DLV8V+fGm\nILB+8UuRIib+MJ4L/4e4RU2Zsn5q5z9njJtlHFP8Z1Vhn7VPWSdBcNrQtoBSUQ3P\nQ5OIzURcsX/+6eC6GQ/zqHwZ5u4fzIxQ3hcgmkXrGYTkG57S9+nbFZUr3fUQDFvp\nGW4rCkrazV795X9fDObL+Bt4Yv7W63mzOkBZ2hFWeQlRd65nwnv4CZ7TBMe22b0F\npwmpaNVxA8pVbKpGrjBRtvg//5RaczewfGBCn8JGL/58Iu1CNt0qyIlNXOvM5P5l\n86EP+cRTTyxPMMSYMuibBDwUSqVkL2iYVUAFPQqEwB2hRRvtPUGxOoPCZpqF6A0=\n=g5rx\n-----END PGP SIGNATURE-----\n", "payload": "tree 611ef7727c62cd6efd63a47d08d6a7d8b761e802\nparent 271eb8fc5a420280937bb1745f1e7aee7901ad26\nparent dbc7042bfe690d55cbcd40e75851efd8af9bb34e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555256966 +0200\ncommitter GitHub <noreply@github.com> 1555256966 +0200\n\nRollup merge of #59936 - petrochenkov:confict, r=davidtwco\n\nFix cross-crate visibility of fictive variant constructors\n\nAfter merging https://github.com/rust-lang/rust/pull/59376 I realized that the code in the decoder wasn't entirely correct - we \"decoded\" fictive variant constructors with their variant's visibility, which could be public, rather than demoted to `pub(crate)`.\n\nFictive constructors are not directly usable in expression/patterns, but the effect still can be observed with imports.\n\nr? @davidtwco\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9506f62a7ab10629f10926f2bad8bd7e78e755a8", "html_url": "https://github.com/rust-lang/rust/commit/9506f62a7ab10629f10926f2bad8bd7e78e755a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9506f62a7ab10629f10926f2bad8bd7e78e755a8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "271eb8fc5a420280937bb1745f1e7aee7901ad26", "url": "https://api.github.com/repos/rust-lang/rust/commits/271eb8fc5a420280937bb1745f1e7aee7901ad26", "html_url": "https://github.com/rust-lang/rust/commit/271eb8fc5a420280937bb1745f1e7aee7901ad26"}, {"sha": "dbc7042bfe690d55cbcd40e75851efd8af9bb34e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbc7042bfe690d55cbcd40e75851efd8af9bb34e", "html_url": "https://github.com/rust-lang/rust/commit/dbc7042bfe690d55cbcd40e75851efd8af9bb34e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "5dade8d9438937bc62f562981e661f1779aa1807", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9506f62a7ab10629f10926f2bad8bd7e78e755a8/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9506f62a7ab10629f10926f2bad8bd7e78e755a8/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=9506f62a7ab10629f10926f2bad8bd7e78e755a8", "patch": "@@ -831,7 +831,18 @@ impl<'a, 'tcx> CrateMetadata {\n                             let ctor_def_id = self.get_ctor_def_id(child_index).unwrap_or(def_id);\n                             let ctor_kind = self.get_ctor_kind(child_index);\n                             let ctor_def = Def::Ctor(ctor_def_id, CtorOf::Variant, ctor_kind);\n-                            let vis = self.get_visibility(ctor_def_id.index);\n+                            let mut vis = self.get_visibility(ctor_def_id.index);\n+                            if ctor_def_id == def_id && vis == ty::Visibility::Public {\n+                                // For non-exhaustive variants lower the constructor visibility to\n+                                // within the crate. We only need this for fictive constructors,\n+                                // for other constructors correct visibilities\n+                                // were already encoded in metadata.\n+                                let attrs = self.get_item_attrs(def_id.index, sess);\n+                                if attr::contains_name(&attrs, \"non_exhaustive\") {\n+                                    let crate_def_id = DefId { index: CRATE_DEF_INDEX, ..def_id };\n+                                    vis = ty::Visibility::Restricted(crate_def_id);\n+                                }\n+                            }\n                             callback(def::Export { def: ctor_def, ident, vis, span });\n                         }\n                         _ => {}"}, {"sha": "62f6e4463f936f214ea2f32c9f3edb4898d9b51a", "filename": "src/test/ui/rfc-2008-non-exhaustive/variants_fictive_visibility.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9506f62a7ab10629f10926f2bad8bd7e78e755a8/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariants_fictive_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9506f62a7ab10629f10926f2bad8bd7e78e755a8/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariants_fictive_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariants_fictive_visibility.rs?ref=9506f62a7ab10629f10926f2bad8bd7e78e755a8", "patch": "@@ -0,0 +1,12 @@\n+// compile-pass\n+// aux-build:variants.rs\n+\n+extern crate variants;\n+\n+const S: u8 = 0;\n+\n+// OK, `Struct` in value namespace is crate-private, so it's filtered away\n+// and there's no conflict with the previously defined `const S`.\n+use variants::NonExhaustiveVariants::Struct as S;\n+\n+fn main() {}"}]}