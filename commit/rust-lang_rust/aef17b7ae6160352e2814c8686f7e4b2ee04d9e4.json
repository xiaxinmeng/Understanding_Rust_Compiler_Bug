{"sha": "aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "node_id": "C_kwDOAAsO6NoAKGFlZjE3YjdhZTYxNjAzNTJlMjgxNGM4Njg2ZjdlNGIyZWUwNGQ5ZTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-17T12:10:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-17T12:10:27Z"}, "message": "Auto merge of #105421 - jacobbramley:jb/branch-prot-check, r=nagisa\n\nCheck AArch64 branch-protection earlier in the pipeline.\n\nAs suggested in #93516.\n\nr? `@nagisa`", "tree": {"sha": "4d8e4467ec0b26ecdf43aed5c3d81b7c6415d7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8e4467ec0b26ecdf43aed5c3d81b7c6415d7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "html_url": "https://github.com/rust-lang/rust/commit/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c2279ef658d8732597c4da93897d84838f3df5", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c2279ef658d8732597c4da93897d84838f3df5", "html_url": "https://github.com/rust-lang/rust/commit/49c2279ef658d8732597c4da93897d84838f3df5"}, {"sha": "73d374f3e7d5fe9635a23937cdc2f7e1d1c29224", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d374f3e7d5fe9635a23937cdc2f7e1d1c29224", "html_url": "https://github.com/rust-lang/rust/commit/73d374f3e7d5fe9635a23937cdc2f7e1d1c29224"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "f3bff5d57161e25422ab811186ab2a1367cecefa", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -3,7 +3,6 @@ use crate::back::write::to_llvm_code_model;\n use crate::callee::get_fn;\n use crate::coverageinfo;\n use crate::debuginfo;\n-use crate::errors::BranchProtectionRequiresAArch64;\n use crate::llvm;\n use crate::llvm_util;\n use crate::type_::Type;\n@@ -281,9 +280,7 @@ pub unsafe fn create_module<'ll>(\n     }\n \n     if let Some(BranchProtection { bti, pac_ret }) = sess.opts.unstable_opts.branch_protection {\n-        if sess.target.arch != \"aarch64\" {\n-            sess.emit_err(BranchProtectionRequiresAArch64);\n-        } else {\n+        if sess.target.arch == \"aarch64\" {\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n                 llvm::LLVMModFlagBehavior::Error,\n@@ -309,6 +306,11 @@ pub unsafe fn create_module<'ll>(\n                 \"sign-return-address-with-bkey\\0\".as_ptr().cast(),\n                 u32::from(pac_opts.key == PAuthKey::B),\n             );\n+        } else {\n+            bug!(\n+                \"branch-protection used on non-AArch64 target; \\\n+                  this should be checked in rustc_session.\"\n+            );\n         }\n     }\n "}, {"sha": "b46209972421fe894fd4b217013d7072558d6682", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -51,10 +51,6 @@ pub(crate) struct SymbolAlreadyDefined<'a> {\n     pub symbol_name: &'a str,\n }\n \n-#[derive(Diagnostic)]\n-#[diag(codegen_llvm_branch_protection_requires_aarch64)]\n-pub(crate) struct BranchProtectionRequiresAArch64;\n-\n #[derive(Diagnostic)]\n #[diag(codegen_llvm_invalid_minimum_alignment)]\n pub(crate) struct InvalidMinimumAlignment {"}, {"sha": "860212b051f39c4a8739110e9bf1edf220aa23cf", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_llvm.ftl", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -17,9 +17,6 @@ codegen_llvm_instrument_coverage_requires_llvm_12 =\n codegen_llvm_symbol_already_defined =\n     symbol `{$symbol_name}` is already defined\n \n-codegen_llvm_branch_protection_requires_aarch64 =\n-    -Zbranch-protection is only supported on aarch64\n-\n codegen_llvm_invalid_minimum_alignment =\n     invalid minimum global alignment: {$err}\n "}, {"sha": "ab9e8b6baae6ad4a3e30bbd92ff4bafe18e66e4c", "filename": "compiler/rustc_error_messages/locales/en-US/session.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -41,6 +41,8 @@ session_unsupported_dwarf_version = requested DWARF version {$dwarf_version} is\n \n session_target_stack_protector_not_supported = `-Z stack-protector={$stack_protector}` is not supported for target {$target_triple} and will be ignored\n \n+session_branch_protection_requires_aarch64 = `-Zbranch-protection` is only supported on aarch64\n+\n session_split_debuginfo_unstable_platform = `-Csplit-debuginfo={$debuginfo}` is unstable on this platform\n \n session_file_is_not_writeable = output file {$file} is not writeable -- check its permissions"}, {"sha": "e72b76cfee9e9660a427746e2cadd14cb0ef711c", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -115,6 +115,10 @@ pub struct StackProtectorNotSupportedForTarget<'a> {\n     pub target_triple: &'a TargetTriple,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(session_branch_protection_requires_aarch64)]\n+pub(crate) struct BranchProtectionRequiresAArch64;\n+\n #[derive(Diagnostic)]\n #[diag(session_split_debuginfo_unstable_platform)]\n pub struct SplitDebugInfoUnstablePlatform {"}, {"sha": "fdd883fbeed5aaf0f61f00eb4b46057f4fd245e4", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -3,10 +3,10 @@ use crate::code_stats::CodeStats;\n pub use crate::code_stats::{DataTypeKind, FieldInfo, SizeKind, VariantInfo};\n use crate::config::{self, CrateType, InstrumentCoverage, OptLevel, OutputType, SwitchWithOptPath};\n use crate::errors::{\n-    CannotEnableCrtStaticLinux, CannotMixAndMatchSanitizers, LinkerPluginToWindowsNotSupported,\n-    NotCircumventFeature, ProfileSampleUseFileDoesNotExist, ProfileUseFileDoesNotExist,\n-    SanitizerCfiEnabled, SanitizerNotSupported, SanitizersNotSupported, SkippingConstChecks,\n-    SplitDebugInfoUnstablePlatform, StackProtectorNotSupportedForTarget,\n+    BranchProtectionRequiresAArch64, CannotEnableCrtStaticLinux, CannotMixAndMatchSanitizers,\n+    LinkerPluginToWindowsNotSupported, NotCircumventFeature, ProfileSampleUseFileDoesNotExist,\n+    ProfileUseFileDoesNotExist, SanitizerCfiEnabled, SanitizerNotSupported, SanitizersNotSupported,\n+    SkippingConstChecks, SplitDebugInfoUnstablePlatform, StackProtectorNotSupportedForTarget,\n     TargetRequiresUnwindTables, UnleashedFeatureHelp, UnstableVirtualFunctionElimination,\n     UnsupportedDwarfVersion,\n };\n@@ -1565,6 +1565,10 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n         }\n     }\n \n+    if sess.opts.unstable_opts.branch_protection.is_some() && sess.target.arch != \"aarch64\" {\n+        sess.emit_err(BranchProtectionRequiresAArch64);\n+    }\n+\n     if let Some(dwarf_version) = sess.opts.unstable_opts.dwarf_version {\n         if dwarf_version > 5 {\n             sess.emit_err(UnsupportedDwarfVersion { dwarf_version });"}, {"sha": "ca5664835f26fbf55a8b5b352c67da799f82806a", "filename": "src/doc/unstable-book/src/compiler-flags/branch-protection.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fbranch-protection.md", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fbranch-protection.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fbranch-protection.md?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -1,7 +1,7 @@\n # `branch-protection`\n \n This option lets you enable branch authentication instructions on AArch64.\n-This option is ignored for non-AArch64 architectures.\n+This option is only accepted when targeting AArch64 architectures.\n It takes some combination of the following values, separated by a `,`.\n \n - `pac-ret` - Enable pointer authentication for non-leaf functions."}, {"sha": "52a5919026463074199f87a216e1f8fc98723f15", "filename": "src/test/ui/invalid-compile-flags/branch-protection-missing-pac-ret.BADTARGET.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.BADTARGET.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.BADTARGET.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.BADTARGET.stderr?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -1,4 +1,4 @@\n-error: -Zbranch-protection is only supported on aarch64\n+error: `-Zbranch-protection` is only supported on aarch64\n \n error: aborting due to previous error\n "}, {"sha": "1d7ec5cba17ca71ebf37a4478771d1836918e2a8", "filename": "src/test/ui/invalid-compile-flags/branch-protection-missing-pac-ret.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-compile-flags%2Fbranch-protection-missing-pac-ret.rs?ref=aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "patch": "@@ -3,7 +3,7 @@\n // [BADFLAGS] check-fail\n // [BADFLAGS] needs-llvm-components: aarch64\n // [BADTARGET] compile-flags: --target=x86_64-unknown-linux-gnu -Zbranch-protection=bti\n-// [BADTARGET] build-fail\n+// [BADTARGET] check-fail\n // [BADTARGET] needs-llvm-components: x86\n \n #![crate_type = \"lib\"]"}]}