{"sha": "5195132a352a8248629824b6b73ebac49bc23dc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTUxMzJhMzUyYTgyNDg2Mjk4MjRiNmI3M2ViYWM0OWJjMjNkYzg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-07-03T09:31:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-03T09:31:06Z"}, "message": "Rollup merge of #51978 - estebank:issue-48364, r=oli-obk\n\nDo not suggest changes to str literal if it isn't one\n\nFix #48364.", "tree": {"sha": "6ffa1f7ae634ec936179c6d2a9018cdc867b8215", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ffa1f7ae634ec936179c6d2a9018cdc867b8215"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5195132a352a8248629824b6b73ebac49bc23dc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbO0JaCRBK7hj4Ov3rIwAAdHIIAGd1c7CUEgABRqIUmITSwGhX\ntldiaP5JG5mP0OEZjoWHa2GiZwJWTm4QOrN0GNmEq/5fJh7tglWvUycNVaSMWPCg\nyBA3P3M5sUsxWWjdT15NgWAS/zRR6zWUyWjySrSnZSTnYPcDw23bwILbKq3jQv21\ncMe4C26UcAJkHz9JpIUNmssWN+lHjwI4Pm4NbCxY3iBMdiVGTMpCuEyN2s5ZGaed\nOmlQkDA05Seo/AfV0depJ0sjcVKnxRY5CckVS6BFyalJJKfgbAljk1fxh93Ltaiw\nnv8Ive9djbCjSb74lE2kjMDTema+I0R1Rlm6fYodBJ3rC5OWGLZj+G3qn578WkM=\n=aAef\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ffa1f7ae634ec936179c6d2a9018cdc867b8215\nparent 47eee2497aa715920931fabdf5642b471e91be5c\nparent e89db3030d322ca7cb20d13df5578b60b0c8a942\nauthor Pietro Albini <pietro@pietroalbini.org> 1530610266 +0200\ncommitter GitHub <noreply@github.com> 1530610266 +0200\n\nRollup merge of #51978 - estebank:issue-48364, r=oli-obk\n\nDo not suggest changes to str literal if it isn't one\n\nFix #48364.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5195132a352a8248629824b6b73ebac49bc23dc8", "html_url": "https://github.com/rust-lang/rust/commit/5195132a352a8248629824b6b73ebac49bc23dc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5195132a352a8248629824b6b73ebac49bc23dc8/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47eee2497aa715920931fabdf5642b471e91be5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/47eee2497aa715920931fabdf5642b471e91be5c", "html_url": "https://github.com/rust-lang/rust/commit/47eee2497aa715920931fabdf5642b471e91be5c"}, {"sha": "e89db3030d322ca7cb20d13df5578b60b0c8a942", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89db3030d322ca7cb20d13df5578b60b0c8a942", "html_url": "https://github.com/rust-lang/rust/commit/e89db3030d322ca7cb20d13df5578b60b0c8a942"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "aee64ad3b550c11cd42d951bf556f254f9843fae", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=5195132a352a8248629824b6b73ebac49bc23dc8", "patch": "@@ -264,19 +264,23 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 (&ty::TyStr, &ty::TySlice(arr)) if arr == self.tcx.types.u8 => {\n                     if let hir::ExprLit(_) = expr.node {\n                         if let Ok(src) = cm.span_to_snippet(sp) {\n-                            return Some((sp,\n-                                         \"consider removing the leading `b`\",\n-                                         src[1..].to_string()));\n+                            if src.starts_with(\"b\\\"\") {\n+                                return Some((sp,\n+                                             \"consider removing the leading `b`\",\n+                                             src[1..].to_string()));\n+                            }\n                         }\n                     }\n                 },\n                 (&ty::TyArray(arr, _), &ty::TyStr) |\n                 (&ty::TySlice(arr), &ty::TyStr) if arr == self.tcx.types.u8 => {\n                     if let hir::ExprLit(_) = expr.node {\n                         if let Ok(src) = cm.span_to_snippet(sp) {\n-                            return Some((sp,\n-                                         \"consider adding a leading `b`\",\n-                                         format!(\"b{}\", src)));\n+                            if src.starts_with(\"\\\"\") {\n+                                return Some((sp,\n+                                             \"consider adding a leading `b`\",\n+                                             format!(\"b{}\", src)));\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "82cb722a6560096cafc6f985c71e4cb652083adc", "filename": "src/test/ui/suggestions/issue-48364.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.rs?ref=5195132a352a8248629824b6b73ebac49bc23dc8", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo() -> bool {\n+    b\"\".starts_with(stringify!(foo))\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "b420654a32d8c9bfe6520c3c682ac2bed98184ca", "filename": "src/test/ui/suggestions/issue-48364.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5195132a352a8248629824b6b73ebac49bc23dc8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-48364.stderr?ref=5195132a352a8248629824b6b73ebac49bc23dc8", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-48364.rs:12:21\n+   |\n+LL |     b\"\".starts_with(stringify!(foo))\n+   |                     ^^^^^^^^^^^^^^^ expected slice, found str\n+   |\n+   = note: expected type `&[u8]`\n+              found type `&'static str`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}