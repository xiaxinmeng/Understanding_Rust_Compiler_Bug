{"sha": "df6a3a0ed216a8548130f9b431964531a1bc7633", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNmEzYTBlZDIxNmE4NTQ4MTMwZjliNDMxOTY0NTMxYTFiYzc2MzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-09T11:24:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T08:27:25Z"}, "message": "test some more things that should not panic", "tree": {"sha": "324f844d8c5fc9ecad621fc8ed04cde24c445634", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/324f844d8c5fc9ecad621fc8ed04cde24c445634"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df6a3a0ed216a8548130f9b431964531a1bc7633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df6a3a0ed216a8548130f9b431964531a1bc7633", "html_url": "https://github.com/rust-lang/rust/commit/df6a3a0ed216a8548130f9b431964531a1bc7633", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df6a3a0ed216a8548130f9b431964531a1bc7633/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d78c4aa62ec0382d85e88b44cce2c087c5357f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/d78c4aa62ec0382d85e88b44cce2c087c5357f53", "html_url": "https://github.com/rust-lang/rust/commit/d78c4aa62ec0382d85e88b44cce2c087c5357f53"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "9c869947bfa101e3909138000aaade86a0494f97", "filename": "src/test/ui/intrinsics/panic-uninitialized-zeroed.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/df6a3a0ed216a8548130f9b431964531a1bc7633/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df6a3a0ed216a8548130f9b431964531a1bc7633/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs?ref=df6a3a0ed216a8548130f9b431964531a1bc7633", "patch": "@@ -6,8 +6,11 @@\n #![feature(never_type)]\n #![allow(deprecated, invalid_value)]\n \n-use std::{mem, panic};\n-use std::ptr::NonNull;\n+use std::{\n+    mem::{self, MaybeUninit},\n+    panic,\n+    ptr::NonNull,\n+};\n \n #[allow(dead_code)]\n struct Foo {\n@@ -40,7 +43,7 @@ fn main() {\n             \"attempted to instantiate uninhabited type `!`\"\n         );\n         test_panic_msg(\n-            || mem::MaybeUninit::<!>::uninit().assume_init(),\n+            || MaybeUninit::<!>::uninit().assume_init(),\n             \"attempted to instantiate uninhabited type `!`\"\n         );\n \n@@ -53,7 +56,7 @@ fn main() {\n             \"attempted to instantiate uninhabited type `Foo`\"\n         );\n         test_panic_msg(\n-            || mem::MaybeUninit::<Foo>::uninit().assume_init(),\n+            || MaybeUninit::<Foo>::uninit().assume_init(),\n             \"attempted to instantiate uninhabited type `Foo`\"\n         );\n \n@@ -66,7 +69,7 @@ fn main() {\n             \"attempted to instantiate uninhabited type `Bar`\"\n         );\n         test_panic_msg(\n-            || mem::MaybeUninit::<Bar>::uninit().assume_init(),\n+            || MaybeUninit::<Bar>::uninit().assume_init(),\n             \"attempted to instantiate uninhabited type `Bar`\"\n         );\n \n@@ -109,5 +112,11 @@ fn main() {\n         let _val = mem::zeroed::<bool>();\n         let _val = mem::zeroed::<OneVariant>();\n         let _val = mem::zeroed::<Option<&'static i32>>();\n+        let _val = mem::zeroed::<MaybeUninit<NonNull<u32>>>();\n+        let _val = mem::uninitialized::<MaybeUninit<bool>>();\n+\n+        // We don't panic for these just to be conservative. They are UB as of now (2019-11-09).\n+        let _val = mem::uninitialized::<i32>();\n+        let _val = mem::uninitialized::<*const ()>();\n     }\n }"}]}