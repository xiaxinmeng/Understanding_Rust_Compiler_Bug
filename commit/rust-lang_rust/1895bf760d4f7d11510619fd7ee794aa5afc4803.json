{"sha": "1895bf760d4f7d11510619fd7ee794aa5afc4803", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OTViZjc2MGQ0ZjdkMTE1MTA2MTlmZDdlZTc5NGFhNWFmYzQ4MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-28T07:01:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-28T07:01:54Z"}, "message": "Auto merge of #34908 - jseyfried:improve_tt_matchers, r=nrc\n\nmacros: Improve `tt` matchers\n\nFixes #5846, fixes #22819.\nr? @nrc", "tree": {"sha": "750edd1e7f1071fc5622276954deefb0551d5698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/750edd1e7f1071fc5622276954deefb0551d5698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1895bf760d4f7d11510619fd7ee794aa5afc4803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1895bf760d4f7d11510619fd7ee794aa5afc4803", "html_url": "https://github.com/rust-lang/rust/commit/1895bf760d4f7d11510619fd7ee794aa5afc4803", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1895bf760d4f7d11510619fd7ee794aa5afc4803/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5d79521ae1bd53d90e820e9f8c78494fb3a102d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d79521ae1bd53d90e820e9f8c78494fb3a102d", "html_url": "https://github.com/rust-lang/rust/commit/f5d79521ae1bd53d90e820e9f8c78494fb3a102d"}, {"sha": "448550223b4e80d722c18361c465a24889e37c40", "url": "https://api.github.com/repos/rust-lang/rust/commits/448550223b4e80d722c18361c465a24889e37c40", "html_url": "https://github.com/rust-lang/rust/commit/448550223b4e80d722c18361c465a24889e37c40"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "29a300b172e7562972aa22a645dfbff63ee05999", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=1895bf760d4f7d11510619fd7ee794aa5afc4803", "patch": "@@ -14,7 +14,7 @@ use syntax_pos::{Span, DUMMY_SP};\n use errors::{Handler, DiagnosticBuilder};\n use ext::tt::macro_parser::{NamedMatch, MatchedSeq, MatchedNonterminal};\n use parse::token::{DocComment, MatchNt, SubstNt};\n-use parse::token::{Token, NtIdent, SpecialMacroVar};\n+use parse::token::{Token, Interpolated, NtIdent, NtTT, SpecialMacroVar};\n use parse::token;\n use parse::lexer::TokenAndSpan;\n use tokenstream::{self, TokenTree};\n@@ -278,9 +278,9 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n             }\n             // FIXME #2887: think about span stuff here\n             TokenTree::Token(sp, SubstNt(ident)) => {\n-                r.stack.last_mut().unwrap().idx += 1;\n                 match lookup_cur_matched(r, ident) {\n                     None => {\n+                        r.stack.last_mut().unwrap().idx += 1;\n                         r.cur_span = sp;\n                         r.cur_tok = SubstNt(ident);\n                         return ret_val;\n@@ -292,14 +292,24 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n                             // (a) idents can be in lots of places, so it'd be a pain\n                             // (b) we actually can, since it's a token.\n                             MatchedNonterminal(NtIdent(ref sn)) => {\n+                                r.stack.last_mut().unwrap().idx += 1;\n                                 r.cur_span = sn.span;\n                                 r.cur_tok = token::Ident(sn.node);\n                                 return ret_val;\n                             }\n+                            MatchedNonterminal(NtTT(ref tt)) => {\n+                                r.stack.push(TtFrame {\n+                                    forest: TokenTree::Token(sp, Interpolated(NtTT(tt.clone()))),\n+                                    idx: 0,\n+                                    dotdotdoted: false,\n+                                    sep: None,\n+                                });\n+                            }\n                             MatchedNonterminal(ref other_whole_nt) => {\n+                                r.stack.last_mut().unwrap().idx += 1;\n                                 // FIXME(pcwalton): Bad copy.\n                                 r.cur_span = sp;\n-                                r.cur_tok = token::Interpolated((*other_whole_nt).clone());\n+                                r.cur_tok = Interpolated((*other_whole_nt).clone());\n                                 return ret_val;\n                             }\n                             MatchedSeq(..) => {"}, {"sha": "d38edf816880e1e44d9aa81ab93a4ba20b427257", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=1895bf760d4f7d11510619fd7ee794aa5afc4803", "patch": "@@ -135,6 +135,7 @@ impl TokenTree {\n             }\n             TokenTree::Token(_, token::SpecialVarNt(..)) => 2,\n             TokenTree::Token(_, token::MatchNt(..)) => 3,\n+            TokenTree::Token(_, token::Interpolated(Nonterminal::NtTT(..))) => 1,\n             TokenTree::Delimited(_, ref delimed) => delimed.tts.len() + 2,\n             TokenTree::Sequence(_, ref seq) => seq.tts.len(),\n             TokenTree::Token(..) => 0,\n@@ -197,6 +198,9 @@ impl TokenTree {\n                          TokenTree::Token(sp, token::Ident(kind))];\n                 v[index].clone()\n             }\n+            (&TokenTree::Token(_, token::Interpolated(Nonterminal::NtTT(ref tt))), _) => {\n+                tt.clone().unwrap()\n+            }\n             (&TokenTree::Sequence(_, ref seq), _) => seq.tts[index].clone(),\n             _ => panic!(\"Cannot expand a token tree\"),\n         }"}, {"sha": "f41da77ee989655e9b28f9424d13a8257cb79b4e", "filename": "src/test/compile-fail/macro-tt-matchers.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Ftest%2Fcompile-fail%2Fmacro-tt-matchers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1895bf760d4f7d11510619fd7ee794aa5afc4803/src%2Ftest%2Fcompile-fail%2Fmacro-tt-matchers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-tt-matchers.rs?ref=1895bf760d4f7d11510619fd7ee794aa5afc4803", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+macro_rules! foo {\n+    ($x:tt) => (type Alias = $x<i32>;)\n+}\n+\n+foo!(Box);\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}