{"sha": "acf691234fbf5dbd931500df3e479b9b39acf740", "node_id": "C_kwDOAAsO6NoAKGFjZjY5MTIzNGZiZjVkYmQ5MzE1MDBkZjNlNDc5YjliMzlhY2Y3NDA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-03T08:15:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-03T08:15:51Z"}, "message": "Rollup merge of #99738 - notriddle:notriddle/multiple-modules-w-same-name, r=camelid\n\nrustdoc: avoid inlining modules with duplicate names\n\nFixes rust-lang/rust#99734", "tree": {"sha": "eccaa0f4c5c6af57a7dfec399d9387bb32fe1fda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eccaa0f4c5c6af57a7dfec399d9387bb32fe1fda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acf691234fbf5dbd931500df3e479b9b39acf740", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi6i64CRBK7hj4Ov3rIwAAZMEIADoLZblerw4FAufiSFY4Tgmg\nwxhtQRruAGlrWai/Ll9VlAxFlFeufycW64yXNevNwlHtT1+0k/pG3aJCfF7S3raZ\na1cMhrje1YZXNlZrd1u0c46tHLWfO18fSAvobOV99q/T88OiQRVaRyauTYJtysrk\nAvR3qaQNz5pBGA0ZKLcnI3yEuNRi7BxcaNhgTc6xwgPMec5B0cUgE1sF8VBfO8cN\nPC99WC2LOMoUCNNWME8MPjooo63ORbG2+teNMrJK6xAxp/ANPqyps09snr7iJ6PZ\nXs4rF7sUSLx6BWRbtt7qKFfBVm/smO6ivdsL98+y0cf7YEKdxFYxceIGKnTeS6c=\n=5u3g\n-----END PGP SIGNATURE-----\n", "payload": "tree eccaa0f4c5c6af57a7dfec399d9387bb32fe1fda\nparent cb9932ea64b3dd799fbdbb8942e5a036af6cc7aa\nparent 8724ca3114f2babefeee7989eadbb7d156503f37\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1659514551 +0530\ncommitter GitHub <noreply@github.com> 1659514551 +0530\n\nRollup merge of #99738 - notriddle:notriddle/multiple-modules-w-same-name, r=camelid\n\nrustdoc: avoid inlining modules with duplicate names\n\nFixes rust-lang/rust#99734\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acf691234fbf5dbd931500df3e479b9b39acf740", "html_url": "https://github.com/rust-lang/rust/commit/acf691234fbf5dbd931500df3e479b9b39acf740", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acf691234fbf5dbd931500df3e479b9b39acf740/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb9932ea64b3dd799fbdbb8942e5a036af6cc7aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb9932ea64b3dd799fbdbb8942e5a036af6cc7aa", "html_url": "https://github.com/rust-lang/rust/commit/cb9932ea64b3dd799fbdbb8942e5a036af6cc7aa"}, {"sha": "8724ca3114f2babefeee7989eadbb7d156503f37", "url": "https://api.github.com/repos/rust-lang/rust/commits/8724ca3114f2babefeee7989eadbb7d156503f37", "html_url": "https://github.com/rust-lang/rust/commit/8724ca3114f2babefeee7989eadbb7d156503f37"}], "stats": {"total": 60, "additions": 53, "deletions": 7}, "files": [{"sha": "116b1f16f7f4b2c29c099f0f7156553ff07c916d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=acf691234fbf5dbd931500df3e479b9b39acf740", "patch": "@@ -51,19 +51,24 @@ pub(crate) trait Clean<'tcx, T> {\n impl<'tcx> Clean<'tcx, Item> for DocModule<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'tcx>) -> Item {\n         let mut items: Vec<Item> = vec![];\n-        items.extend(\n-            self.foreigns\n-                .iter()\n-                .map(|(item, renamed)| clean_maybe_renamed_foreign_item(cx, item, *renamed)),\n-        );\n-        items.extend(self.mods.iter().map(|x| x.clean(cx)));\n+        let mut inserted = FxHashSet::default();\n+        items.extend(self.foreigns.iter().map(|(item, renamed)| {\n+            let item = clean_maybe_renamed_foreign_item(cx, item, *renamed);\n+            if let Some(name) = item.name {\n+                inserted.insert((item.type_(), name));\n+            }\n+            item\n+        }));\n+        items.extend(self.mods.iter().map(|x| {\n+            inserted.insert((ItemType::Module, x.name));\n+            x.clean(cx)\n+        }));\n \n         // Split up imports from all other items.\n         //\n         // This covers the case where somebody does an import which should pull in an item,\n         // but there's already an item with the same namespace and same name. Rust gives\n         // priority to the not-imported one, so we should, too.\n-        let mut inserted = FxHashSet::default();\n         items.extend(self.items.iter().flat_map(|(item, renamed)| {\n             // First, lower everything other than imports.\n             if matches!(item.kind, hir::ItemKind::Use(..)) {"}, {"sha": "234d55efb554d06ad852deda9ac47a8d6a334894", "filename": "src/test/rustdoc/auxiliary/issue-99734-aux.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs?ref=acf691234fbf5dbd931500df3e479b9b39acf740", "patch": "@@ -0,0 +1,11 @@\n+pub struct Option;\n+impl Option {\n+    pub fn unwrap(self) {}\n+}\n+\n+/// [`Option::unwrap`]\n+pub mod task {}\n+\n+extern \"C\" {\n+    pub fn main() -> std::ffi::c_int;\n+}"}, {"sha": "3208fea05b3762d05f0943e39de8ee50609aa942", "filename": "src/test/rustdoc/issue-99734-multiple-foreigns-w-same-name.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-foreigns-w-same-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-foreigns-w-same-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-foreigns-w-same-name.rs?ref=acf691234fbf5dbd931500df3e479b9b39acf740", "patch": "@@ -0,0 +1,16 @@\n+// aux-build:issue-99734-aux.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+#[macro_use]\n+extern crate issue_99734_aux;\n+\n+pub use issue_99734_aux::*;\n+\n+// @count foo/index.html '//a[@class=\"fn\"][@title=\"foo::main fn\"]' 1\n+\n+extern \"C\" {\n+    pub fn main() -> std::ffi::c_int;\n+}"}, {"sha": "b2f9b8b46578b870bf91eba1eafdd39654e67f5d", "filename": "src/test/rustdoc/issue-99734-multiple-mods-w-same-name.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf691234fbf5dbd931500df3e479b9b39acf740/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs?ref=acf691234fbf5dbd931500df3e479b9b39acf740", "patch": "@@ -0,0 +1,14 @@\n+// aux-build:issue-99734-aux.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+#[macro_use]\n+extern crate issue_99734_aux;\n+\n+pub use issue_99734_aux::*;\n+\n+// @count foo/index.html '//a[@class=\"mod\"][@title=\"foo::task mod\"]' 1\n+\n+pub mod task {}"}]}