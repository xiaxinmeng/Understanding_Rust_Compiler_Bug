{"sha": "a076464c4a7e7e41be221ff3e05dbf22798be2bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNzY0NjRjNGE3ZTdlNDFiZTIyMWZmM2UwNWRiZjIyNzk4YmUyYmM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-27T23:35:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-27T23:35:59Z"}, "message": "Rollup merge of #67576 - king6cong:slice_repeat, r=Dylan-DPC\n\nreuse `capacity` variable in slice::repeat\n\nNone", "tree": {"sha": "1cc3d1fd7b16cbf7393dc7adeb83839f2cb586e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cc3d1fd7b16cbf7393dc7adeb83839f2cb586e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a076464c4a7e7e41be221ff3e05dbf22798be2bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeBpVfCRBK7hj4Ov3rIwAAdHIIAJ5n91tTVw1zlq88OjMAR4fH\nr2Xx1QeE7GqcsfpTtXed9LtOri7joeZbJtOrrTUxf6DuJZDVKkclBfnViiMaEdgV\n95Kr2bTeoZSRH0EBUR+D+PvQvVRX/tkdbeXxC13c4yCuFNkFio0qQea+3nPYJtv7\nTbM8hCtJP4EnluHqvR1AbJXSB5mx9qReV/B6oWXDMLlM3ANGGrhwEAmV81LTBccY\nexgkwwh8o0u8pg43o60Sq8TNxWM759yxhEr8A5rUvsxsOaiHbfcnDQ3GwxXmQ6rq\nzYogEg+9eUNXLaVF/fxrj5A6ulMtoR38WHgP0CvAwO4bcX71pRDZzBCqdz+86DY=\n=l8rQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 1cc3d1fd7b16cbf7393dc7adeb83839f2cb586e9\nparent b1b005b8f0d5219bc2020b902390508b5858baee\nparent 3c56a65bc42fa83edbcdfdb5357e99c5557755cb\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1577489759 +0100\ncommitter GitHub <noreply@github.com> 1577489759 +0100\n\nRollup merge of #67576 - king6cong:slice_repeat, r=Dylan-DPC\n\nreuse `capacity` variable in slice::repeat\n\nNone\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a076464c4a7e7e41be221ff3e05dbf22798be2bc", "html_url": "https://github.com/rust-lang/rust/commit/a076464c4a7e7e41be221ff3e05dbf22798be2bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a076464c4a7e7e41be221ff3e05dbf22798be2bc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1b005b8f0d5219bc2020b902390508b5858baee", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b005b8f0d5219bc2020b902390508b5858baee", "html_url": "https://github.com/rust-lang/rust/commit/b1b005b8f0d5219bc2020b902390508b5858baee"}, {"sha": "3c56a65bc42fa83edbcdfdb5357e99c5557755cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c56a65bc42fa83edbcdfdb5357e99c5557755cb", "html_url": "https://github.com/rust-lang/rust/commit/3c56a65bc42fa83edbcdfdb5357e99c5557755cb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7b83658fca60d03ad6e54c63ed6665adc5c262ec", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a076464c4a7e7e41be221ff3e05dbf22798be2bc/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076464c4a7e7e41be221ff3e05dbf22798be2bc/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=a076464c4a7e7e41be221ff3e05dbf22798be2bc", "patch": "@@ -450,7 +450,8 @@ impl<T> [T] {\n         // and `rem` is the remaining part of `n`.\n \n         // Using `Vec` to access `set_len()`.\n-        let mut buf = Vec::with_capacity(self.len().checked_mul(n).expect(\"capacity overflow\"));\n+        let capacity = self.len().checked_mul(n).expect(\"capacity overflow\");\n+        let mut buf = Vec::with_capacity(capacity);\n \n         // `2^expn` repetition is done by doubling `buf` `expn`-times.\n         buf.extend(self);\n@@ -476,7 +477,7 @@ impl<T> [T] {\n \n         // `rem` (`= n - 2^expn`) repetition is done by copying\n         // first `rem` repetitions from `buf` itself.\n-        let rem_len = self.len() * n - buf.len(); // `self.len() * rem`\n+        let rem_len = capacity - buf.len(); // `self.len() * rem`\n         if rem_len > 0 {\n             // `buf.extend(buf[0 .. rem_len])`:\n             unsafe {\n@@ -487,8 +488,7 @@ impl<T> [T] {\n                     rem_len,\n                 );\n                 // `buf.len() + rem_len` equals to `buf.capacity()` (`= self.len() * n`).\n-                let buf_cap = buf.capacity();\n-                buf.set_len(buf_cap);\n+                buf.set_len(capacity);\n             }\n         }\n         buf"}]}