{"sha": "2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "node_id": "C_kwDOAAsO6NoAKDJhNmE4ZjRkMzA3ODY0ZmNiMWQ4OGU2YTljNzFkNDgxZGUwZjFlNmQ", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-11-01T03:03:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-01T03:03:41Z"}, "message": "Rollup merge of #103749 - est31:reduce_irrefutable_let_else_span, r=cjgillot\n\nReduce span of let else irrefutable_let_patterns warning\n\nHuge spans aren't good for IDE users as they underline constructs that are possibly multiline.\n\nSimilar PR to #90761 which did the same for the `unused_macros` lint.", "tree": {"sha": "2900668219e2f4542a517f7e775d6cd030af0cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2900668219e2f4542a517f7e775d6cd030af0cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjYIyNCRBK7hj4Ov3rIwAACGYIAFnY7pNucYgg7LF45fgqfr5x\nmLCGtbCjdWiSJK1K7i2P9G2DKpvHPdJVReEU5hBby1/6vp/N4nxoJ+yFCJwtYSHP\n9NQUDxpl1n6leZthsZF8Av00XkxJMhS6q9NNydLbmkm387p8iywIhK1H8C8JSTlW\nhZqKmZfBxShx1oNghiimHdfwKR+cjOrOYqVWydorPebOHX4EH2g5K0PQZS/FalMY\n2oCYYubOt15Vv/G+tFGgfYSMpbVDwk8BtqjfMMRNikDTQUlyHJzQStiEvcPYq2Ip\n9r95uWhgvNoIGoETM61c/NGtkd+D34Y/t999tn0CCYLfJBlb/I4pzHaaKfWhixE=\n=vBw7\n-----END PGP SIGNATURE-----\n", "payload": "tree 2900668219e2f4542a517f7e775d6cd030af0cfc\nparent 2125181b7dc7a30634d2f60196c5a5c9108b2736\nparent 7b55d17a2f74f5254c7cf948329232c0bffe724c\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1667271821 +0900\ncommitter GitHub <noreply@github.com> 1667271821 +0900\n\nRollup merge of #103749 - est31:reduce_irrefutable_let_else_span, r=cjgillot\n\nReduce span of let else irrefutable_let_patterns warning\n\nHuge spans aren't good for IDE users as they underline constructs that are possibly multiline.\n\nSimilar PR to #90761 which did the same for the `unused_macros` lint.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "html_url": "https://github.com/rust-lang/rust/commit/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2125181b7dc7a30634d2f60196c5a5c9108b2736", "url": "https://api.github.com/repos/rust-lang/rust/commits/2125181b7dc7a30634d2f60196c5a5c9108b2736", "html_url": "https://github.com/rust-lang/rust/commit/2125181b7dc7a30634d2f60196c5a5c9108b2736"}, {"sha": "7b55d17a2f74f5254c7cf948329232c0bffe724c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b55d17a2f74f5254c7cf948329232c0bffe724c", "html_url": "https://github.com/rust-lang/rust/commit/7b55d17a2f74f5254c7cf948329232c0bffe724c"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "93a3dd8962a9edd608b1f58b366a3ce410cce612", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "patch": "@@ -79,7 +79,10 @@ impl<'tcx> Visitor<'tcx> for MatchVisitor<'_, '_, 'tcx> {\n         intravisit::walk_local(self, loc);\n         let els = loc.els;\n         if let Some(init) = loc.init && els.is_some() {\n-            self.check_let(&loc.pat, init, loc.span);\n+            // Build a span without the else { ... } as we don't want to underline\n+            // the entire else block in the IDE setting.\n+            let span = loc.span.with_hi(init.span.hi());\n+            self.check_let(&loc.pat, init, span);\n         }\n \n         let (msg, sp) = match loc.source {\n@@ -630,11 +633,6 @@ fn irrefutable_let_patterns(\n     count: usize,\n     span: Span,\n ) {\n-    let span = match source {\n-        LetSource::LetElse(span) => span,\n-        _ => span,\n-    };\n-\n     macro_rules! emit_diag {\n         (\n             $lint:expr,\n@@ -680,7 +678,7 @@ fn irrefutable_let_patterns(\n                 \"removing the guard and adding a `let` inside the match arm\"\n             );\n         }\n-        LetSource::LetElse(..) => {\n+        LetSource::LetElse => {\n             emit_diag!(\n                 lint,\n                 \"`let...else`\",\n@@ -1127,7 +1125,7 @@ pub enum LetSource {\n     GenericLet,\n     IfLet,\n     IfLetGuard,\n-    LetElse(Span),\n+    LetElse,\n     WhileLet,\n }\n \n@@ -1156,8 +1154,8 @@ fn let_source_parent(tcx: TyCtxt<'_>, parent: HirId, pat_id: Option<HirId>) -> L\n     let parent_parent = hir.get_parent_node(parent);\n     let parent_parent_node = hir.get(parent_parent);\n     match parent_parent_node {\n-        hir::Node::Stmt(hir::Stmt { kind: hir::StmtKind::Local(_), span, .. }) => {\n-            return LetSource::LetElse(*span);\n+        hir::Node::Stmt(hir::Stmt { kind: hir::StmtKind::Local(_), .. }) => {\n+            return LetSource::LetElse;\n         }\n         hir::Node::Arm(hir::Arm { guard: Some(hir::Guard::If(_)), .. }) => {\n             return LetSource::IfLetGuard;"}, {"sha": "f4b338eb0af95313b64b760ecf35175cfe9bc807", "filename": "src/test/ui/let-else/let-else-irrefutable.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.rs?ref=2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "patch": "@@ -1,7 +1,11 @@\n // check-pass\n \n-\n-\n fn main() {\n     let x = 1 else { return }; //~ WARN irrefutable `let...else` pattern\n+\n+    // Multiline else blocks should not get printed\n+    let x = 1 else { //~ WARN irrefutable `let...else` pattern\n+        eprintln!(\"problem case encountered\");\n+        return\n+    };\n }"}, {"sha": "73d4e5f34831d6444aa3571c11f52d7f2e5a08e0", "filename": "src/test/ui/let-else/let-else-irrefutable.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-irrefutable.stderr?ref=2a6a8f4d307864fcb1d88e6a9c71d481de0f1e6d", "patch": "@@ -1,12 +1,21 @@\n warning: irrefutable `let...else` pattern\n-  --> $DIR/let-else-irrefutable.rs:6:5\n+  --> $DIR/let-else-irrefutable.rs:4:5\n    |\n LL |     let x = 1 else { return };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n \n-warning: 1 warning emitted\n+warning: irrefutable `let...else` pattern\n+  --> $DIR/let-else-irrefutable.rs:7:5\n+   |\n+LL |     let x = 1 else {\n+   |     ^^^^^^^^^\n+   |\n+   = note: this pattern will always match, so the `else` clause is useless\n+   = help: consider removing the `else` clause\n+\n+warning: 2 warnings emitted\n "}]}