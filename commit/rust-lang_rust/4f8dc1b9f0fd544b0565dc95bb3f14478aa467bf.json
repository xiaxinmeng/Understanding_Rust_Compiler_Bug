{"sha": "4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOGRjMWI5ZjBmZDU0NGIwNTY1ZGM5NWJiM2YxNDQ3OGFhNDY3YmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T08:06:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T08:06:53Z"}, "message": "make expr scope stuff private", "tree": {"sha": "4f769e5c2d306e73c451ae19b9aa5df6529b9489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f769e5c2d306e73c451ae19b9aa5df6529b9489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "html_url": "https://github.com/rust-lang/rust/commit/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cc76ce63c3449d33d4a2261392e452df1d31b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cc76ce63c3449d33d4a2261392e452df1d31b1", "html_url": "https://github.com/rust-lang/rust/commit/a2cc76ce63c3449d33d4a2261392e452df1d31b1"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "4ac797eb76e6d93232ad61c9db3c65ebe2425208", "filename": "crates/ra_hir/src/expr/scope.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs?ref=4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "patch": "@@ -3,7 +3,6 @@ use std::sync::Arc;\n use rustc_hash::{FxHashMap};\n use ra_syntax::{\n     TextRange, AstPtr,\n-    algo::generate,\n     ast,\n };\n use ra_arena::{Arena, RawId, impl_arena_id};\n@@ -26,13 +25,13 @@ pub struct ExprScopes {\n }\n \n #[derive(Debug, PartialEq, Eq)]\n-pub struct ScopeEntry {\n+pub(crate) struct ScopeEntry {\n     name: Name,\n     pat: PatId,\n }\n \n #[derive(Debug, PartialEq, Eq)]\n-pub struct ScopeData {\n+pub(crate) struct ScopeData {\n     parent: Option<ScopeId>,\n     entries: Vec<ScopeEntry>,\n }\n@@ -57,16 +56,15 @@ impl ExprScopes {\n         scopes\n     }\n \n-    pub fn body(&self) -> Arc<Body> {\n-        self.body.clone()\n-    }\n-\n-    pub fn entries(&self, scope: ScopeId) -> &[ScopeEntry] {\n+    pub(crate) fn entries(&self, scope: ScopeId) -> &[ScopeEntry] {\n         &self.scopes[scope].entries\n     }\n \n-    pub fn scope_chain<'a>(&'a self, scope: Option<ScopeId>) -> impl Iterator<Item = ScopeId> + 'a {\n-        generate(scope, move |&scope| self.scopes[scope].parent)\n+    pub(crate) fn scope_chain<'a>(\n+        &'a self,\n+        scope: Option<ScopeId>,\n+    ) -> impl Iterator<Item = ScopeId> + 'a {\n+        std::iter::successors(scope, move |&scope| self.scopes[scope].parent)\n     }\n \n     fn root_scope(&mut self) -> ScopeId {\n@@ -98,7 +96,7 @@ impl ExprScopes {\n         self.scope_for.insert(node, scope);\n     }\n \n-    pub fn scope_for(&self, expr: ExprId) -> Option<ScopeId> {\n+    pub(crate) fn scope_for(&self, expr: ExprId) -> Option<ScopeId> {\n         self.scope_for.get(&expr).map(|&scope| scope)\n     }\n }"}]}