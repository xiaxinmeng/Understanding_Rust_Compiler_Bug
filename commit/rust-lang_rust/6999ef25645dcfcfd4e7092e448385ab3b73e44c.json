{"sha": "6999ef25645dcfcfd4e7092e448385ab3b73e44c", "node_id": "C_kwDOAAsO6NoAKDY5OTllZjI1NjQ1ZGNmY2ZkNGU3MDkyZTQ0ODM4NWFiM2I3M2U0NGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-29T23:25:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-29T23:25:51Z"}, "message": "Auto merge of #97538 - compiler-errors:rollup-zp3ukke, r=compiler-errors\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #97493 (Use `type_is_copy_modulo_regions` check in intrisicck)\n - #97518 (Fix order of closing HTML elements in rustdoc output)\n - #97530 (Add more eslint checks)\n - #97536 (Remove unused lifetimes from expand_macro)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "e7baaf3605d6b842b2322d91538c6528204241c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7baaf3605d6b842b2322d91538c6528204241c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6999ef25645dcfcfd4e7092e448385ab3b73e44c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6999ef25645dcfcfd4e7092e448385ab3b73e44c", "html_url": "https://github.com/rust-lang/rust/commit/6999ef25645dcfcfd4e7092e448385ab3b73e44c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6999ef25645dcfcfd4e7092e448385ab3b73e44c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b891916d4c85cd10fb2e9cfa8bc836a2c459f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b891916d4c85cd10fb2e9cfa8bc836a2c459f3", "html_url": "https://github.com/rust-lang/rust/commit/28b891916d4c85cd10fb2e9cfa8bc836a2c459f3"}, {"sha": "f20bbc1fb0a4812b6e51eef52908a635d47bb394", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20bbc1fb0a4812b6e51eef52908a635d47bb394", "html_url": "https://github.com/rust-lang/rust/commit/f20bbc1fb0a4812b6e51eef52908a635d47bb394"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "b86304ba6b1b1ebecdd36b392f474fdb8bae1227", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6999ef25645dcfcfd4e7092e448385ab3b73e44c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6999ef25645dcfcfd4e7092e448385ab3b73e44c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=6999ef25645dcfcfd4e7092e448385ab3b73e44c", "patch": "@@ -204,16 +204,16 @@ fn trace_macros_note(cx_expansions: &mut FxHashMap<Span, Vec<String>>, sp: Span,\n \n /// Expands the rules based macro defined by `lhses` and `rhses` for a given\n /// input `arg`.\n-fn expand_macro<'cx, 'tt>(\n+fn expand_macro<'cx>(\n     cx: &'cx mut ExtCtxt<'_>,\n     sp: Span,\n     def_span: Span,\n     node_id: NodeId,\n     name: Ident,\n     transparency: Transparency,\n     arg: TokenStream,\n-    lhses: &'tt [Vec<MatcherLoc>],\n-    rhses: &'tt [mbe::TokenTree],\n+    lhses: &[Vec<MatcherLoc>],\n+    rhses: &[mbe::TokenTree],\n ) -> Box<dyn MacResult + 'cx> {\n     let sess = &cx.sess.parse_sess;\n     // Macros defined in the current crate have a real node id,"}, {"sha": "469e6118575d2ffe6c255c04c5f818f0c19be156", "filename": "compiler/rustc_typeck/src/check/intrinsicck.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6999ef25645dcfcfd4e7092e448385ab3b73e44c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6999ef25645dcfcfd4e7092e448385ab3b73e44c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs?ref=6999ef25645dcfcfd4e7092e448385ab3b73e44c", "patch": "@@ -9,6 +9,7 @@ use rustc_session::lint;\n use rustc_span::{Span, Symbol, DUMMY_SP};\n use rustc_target::abi::{Pointer, VariantIdx};\n use rustc_target::asm::{InlineAsmReg, InlineAsmRegClass, InlineAsmRegOrRegClass, InlineAsmType};\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n use super::FnCtxt;\n \n@@ -210,7 +211,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Check that the type implements Copy. The only case where this can\n         // possibly fail is for SIMD types which don't #[derive(Copy)].\n-        if !ty.is_copy_modulo_regions(self.tcx.at(DUMMY_SP), self.param_env) {\n+        if !self.infcx.type_is_copy_modulo_regions(self.param_env, ty, DUMMY_SP) {\n             let msg = \"arguments for inline assembly must be copyable\";\n             let mut err = self.tcx.sess.struct_span_err(expr.span, msg);\n             err.note(&format!(\"`{ty}` does not implement the Copy trait\"));"}, {"sha": "b8d6b340b14dda551da9524b81fd83493bbefeeb", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=6999ef25645dcfcfd4e7092e448385ab3b73e44c", "patch": "@@ -1764,7 +1764,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n             write!(buffer, \"<li class=\\\"version\\\">Version {}</li>\", Escape(version));\n         }\n         write!(buffer, \"<li><a id=\\\"all-types\\\" href=\\\"all.html\\\">All Items</a></li>\");\n-        buffer.write_str(\"</div></ul>\");\n+        buffer.write_str(\"</ul></div>\");\n     }\n \n     match *it.kind {"}, {"sha": "f66ecbf78af7b1960d6d82228147f4b78e743923", "filename": "src/librustdoc/html/static/.eslintrc.js", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js?ref=6999ef25645dcfcfd4e7092e448385ab3b73e44c", "patch": "@@ -63,5 +63,12 @@ module.exports = {\n             }\n         ],\n         \"eqeqeq\": \"error\",\n+        \"no-const-assign\": \"error\",\n+        \"no-debugger\": \"error\",\n+        \"no-dupe-args\": \"error\",\n+        \"no-dupe-else-if\": \"error\",\n+        \"no-dupe-keys\": \"error\",\n+        \"no-duplicate-case\": \"error\",\n+        \"no-ex-assign\": \"error\",\n     }\n };"}, {"sha": "37862cf349cfce572a4e69f49e21de6374b920ef", "filename": "src/test/ui/asm/issue-97490.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6999ef25645dcfcfd4e7092e448385ab3b73e44c/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs?ref=6999ef25645dcfcfd4e7092e448385ab3b73e44c", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+// only-x86_64\n+// needs-asm-support\n+\n+pub type Yes = extern \"sysv64\" fn(&'static u8) -> !;\n+\n+fn main() {\n+    unsafe {\n+        let yes = &6 as *const _ as *const Yes;\n+        core::arch::asm!(\"call {}\", in(reg) yes, options(noreturn));\n+    }\n+}"}]}