{"sha": "ef6851cdb285d18e54b9770b455b595565572462", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNjg1MWNkYjI4NWQxOGU1NGI5NzcwYjQ1NWI1OTU1NjU1NzI0NjI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-30T16:14:54Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-30T18:21:42Z"}, "message": "Added InitLocation to encode Location or Local depending on source of Init", "tree": {"sha": "fc13e70dab4a3a8aece8b428404a98d9bcd6fe5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc13e70dab4a3a8aece8b428404a98d9bcd6fe5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef6851cdb285d18e54b9770b455b595565572462", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAluINbYACgkQAXYLT59T\n8VSoHA/+Mfq9t9OmaNk55d0CfuMttmHWJqsC4OcPvp3yndgJtTZYhiyzs8v+LeQg\n6P1w1LzZDocc4k9Vy2QRxXwi92PkF1+MmKti1iekLsheUbshwQVA2S9sFL897l9J\nhLqwhwjsNB/49SLo5iEZK6ugcC3p8U/F0bcnQzybDian2UQV+H3yaivPZG9UD2iK\njN0Lu5IkDl+QhyeXa60Ijl71FtIqwwC2n5xrDGgF4NajKdy0S4iLZqbVPWRBwAjP\nLhBPRgJ4DAdhWukeSngNs427YLmPm1e9DA1/lEpqPzerJuX4r+YhTpnCUfA28tD3\nMK+PggwQ0tePjtjHaJceR6Eju4A8qkSlSEKbqq1V+pN8ob+d5MV8yWEdbqZi5S2b\np8vB0kLf/3ym4LQbLRiXmFtGgc+NqL2D+GhPFGhgU/jmzQud+TK1cj/7fos5AnCq\npUZtWJO74KtRZzFrna8PQCqrsQhjCH4JfXCZz9RF9QSJGbHwK2SbAPC/a2jn+OJ4\neZT5H+wY8BA/C6SiZ4ZeDEBySxH5uBRAdyUEu9U7l+1BAu6OUM7IK2mqaPghj/3c\nbdqIcpDMmA+yiyRKuehBudVglVZ2Vj7tHwTNRC6McizdQmtMlxF7swldJ5dzSdGR\nfPP39hKZMuT9Bu1rdObh2jTQGl1wyS0i67QDinPT/rQ1upJ2Dn8=\n=5Gqi\n-----END PGP SIGNATURE-----", "payload": "tree fc13e70dab4a3a8aece8b428404a98d9bcd6fe5b\nparent 685fb543174f8f2cadc38ec0b2c6df635eb1c087\nauthor David Wood <david@davidtw.co> 1535645694 +0200\ncommitter David Wood <david@davidtw.co> 1535653302 +0200\n\nAdded InitLocation to encode Location or Local depending on source of Init\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6851cdb285d18e54b9770b455b595565572462", "html_url": "https://github.com/rust-lang/rust/commit/ef6851cdb285d18e54b9770b455b595565572462", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef6851cdb285d18e54b9770b455b595565572462/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "685fb543174f8f2cadc38ec0b2c6df635eb1c087", "url": "https://api.github.com/repos/rust-lang/rust/commits/685fb543174f8f2cadc38ec0b2c6df635eb1c087", "html_url": "https://github.com/rust-lang/rust/commit/685fb543174f8f2cadc38ec0b2c6df635eb1c087"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "b06a1e0e19f6a8c8e7f36367c7780ace629819c2", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=ef6851cdb285d18e54b9770b455b595565572462", "patch": "@@ -1601,7 +1601,9 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         if let Some(&init_index) = first_init_index {\n             // And, if so, report an error.\n             let init = &self.move_data.inits[init_index];\n-            self.report_illegal_reassignment(context, place_span, init.span, place_span.0);\n+            self.report_illegal_reassignment(\n+                context, place_span, init.span(&self.mir), place_span.0\n+            );\n         }\n     }\n "}, {"sha": "645cce8dd793bfa00705d023d109f5852a83d7e5", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=ef6851cdb285d18e54b9770b455b595565572462", "patch": "@@ -16,6 +16,7 @@ use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::indexed_vec::Idx;\n use syntax_pos::Span;\n \n+use dataflow::move_paths::InitLocation;\n use borrow_check::MirBorrowckCtxt;\n use util::borrowck_errors::{BorrowckErrors, Origin};\n use util::collect_writes::FindAssignments;"}, {"sha": "0162bb84b94b62f1080a1bf416756f5796b0b6d7", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=ef6851cdb285d18e54b9770b455b595565572462", "patch": "@@ -20,7 +20,7 @@ use std::mem;\n use super::abs_domain::Lift;\n \n use super::{LocationMap, MoveData, MovePath, MovePathLookup, MovePathIndex, MoveOut, MoveOutIndex};\n-use super::{MoveError, InitIndex, Init, LookupResult, InitKind};\n+use super::{MoveError, InitIndex, Init, InitLocation, LookupResult, InitKind};\n use super::IllegalMoveOriginKind::*;\n \n struct MoveDataBuilder<'a, 'gcx: 'tcx, 'tcx: 'a> {\n@@ -237,10 +237,9 @@ impl<'a, 'gcx, 'tcx> MoveDataBuilder<'a, 'gcx, 'tcx> {\n     fn gather_args(&mut self) {\n         for arg in self.mir.args_iter() {\n             let path = self.data.rev_lookup.locals[arg];\n-            let span = self.mir.local_decls[arg].source_info.span;\n \n             let init = self.data.inits.push(Init {\n-                path, span, kind: InitKind::Deep\n+                path, kind: InitKind::Deep, location: InitLocation::Argument(arg),\n             });\n \n             debug!(\"gather_args: adding init {:?} of {:?} for argument {:?}\",\n@@ -428,7 +427,7 @@ impl<'b, 'a, 'gcx, 'tcx> Gatherer<'b, 'a, 'gcx, 'tcx> {\n \n         if let LookupResult::Exact(path) = self.builder.data.rev_lookup.find(place) {\n             let init = self.builder.data.inits.push(Init {\n-                span: self.builder.mir.source_info(self.loc).span,\n+                location: InitLocation::Statement(self.loc),\n                 path,\n                 kind,\n             });"}, {"sha": "8728afc228fcc0c60ea3f06773b2dbe7c511d989", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6851cdb285d18e54b9770b455b595565572462/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=ef6851cdb285d18e54b9770b455b595565572462", "patch": "@@ -196,12 +196,21 @@ impl fmt::Debug for MoveOut {\n pub struct Init {\n     /// path being initialized\n     pub path: MovePathIndex,\n-    /// span of initialization\n-    pub span: Span,\n+    /// location of initialization\n+    pub location: InitLocation,\n     /// Extra information about this initialization\n     pub kind: InitKind,\n }\n \n+\n+/// Initializations can be from an argument or from a statement. Arguments\n+/// do not have locations, in those cases the `Local` is kept..\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n+pub enum InitLocation {\n+    Argument(Local),\n+    Statement(Location),\n+}\n+\n /// Additional information about the initialization.\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum InitKind {\n@@ -215,7 +224,16 @@ pub enum InitKind {\n \n impl fmt::Debug for Init {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"{:?}@{:?} ({:?})\", self.path, self.span, self.kind)\n+        write!(fmt, \"{:?}@{:?} ({:?})\", self.path, self.location, self.kind)\n+    }\n+}\n+\n+impl Init {\n+    crate fn span<'gcx>(&self, mir: &Mir<'gcx>) -> Span {\n+        match self.location {\n+            InitLocation::Argument(local) => mir.local_decls[local].source_info.span,\n+            InitLocation::Statement(location) => mir.source_info(location).span,\n+        }\n     }\n }\n "}]}