{"sha": "03806edb76b4eeee8f01d280417840b76bfb70c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzODA2ZWRiNzZiNGVlZWU4ZjAxZDI4MDQxNzg0MGI3NmJmYjcwYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-07T21:33:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-07T21:33:04Z"}, "message": "Auto merge of #4784 - Manishearth:remove-extern, r=Manishearth\n\nRemove `extern crate clippy_lints` from tests\n\nThis causes rustc's build system to fail because it still tries to load the crate as a plugin: https://github.com/rust-lang/rust/pull/66158#issuecomment-550415160 . I'm not sure _why_ this happens, but for a short term fix we should remove these.\n\nIn one case it was just a convenient crate to use so i picked a different test. In another it was load-bearing, I had to delete the test. Idk if there's a better way around this.\n\nchangelog: none", "tree": {"sha": "aa99e475a3a96a5c4776a45cf73b2be296538b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa99e475a3a96a5c4776a45cf73b2be296538b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03806edb76b4eeee8f01d280417840b76bfb70c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03806edb76b4eeee8f01d280417840b76bfb70c7", "html_url": "https://github.com/rust-lang/rust/commit/03806edb76b4eeee8f01d280417840b76bfb70c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03806edb76b4eeee8f01d280417840b76bfb70c7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "426c05ae335630fa422f431957d3483106efe3ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/426c05ae335630fa422f431957d3483106efe3ae", "html_url": "https://github.com/rust-lang/rust/commit/426c05ae335630fa422f431957d3483106efe3ae"}, {"sha": "4721f4419b0fcfa95e42690a1acc3198b943fb22", "url": "https://api.github.com/repos/rust-lang/rust/commits/4721f4419b0fcfa95e42690a1acc3198b943fb22", "html_url": "https://github.com/rust-lang/rust/commit/4721f4419b0fcfa95e42690a1acc3198b943fb22"}], "stats": {"total": 63, "additions": 32, "deletions": 31}, "files": [{"sha": "f6d101a0911b31222f31a5f80cfedd349f5366f7", "filename": "tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -16,7 +16,7 @@ pub fn derive(_: TokenStream) -> TokenStream {\n     let output = quote! {\n         // Should not trigger `useless_attribute`\n         #[allow(dead_code)]\n-        extern crate clippy_lints;\n+        extern crate rustc;\n     };\n     output\n }"}, {"sha": "81353414d24d6a73337ce954ba3ee1116649a2f5", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -5,25 +5,25 @@\n extern crate rustc;\n use rustc::lint::{LintArray, LintPass};\n \n-#[macro_use]\n-extern crate clippy_lints;\n-\n-declare_clippy_lint! {\n-    pub TEST_LINT,\n-    correctness,\n-    \"\"\n+declare_tool_lint! {\n+    pub clippy::TEST_LINT,\n+    Warn,\n+    \"\",\n+    report_in_external_macro: true\n }\n \n-declare_clippy_lint! {\n-    pub TEST_LINT_REGISTERED,\n-    correctness,\n-    \"\"\n+declare_tool_lint! {\n+    pub clippy::TEST_LINT_REGISTERED,\n+    Warn,\n+    \"\",\n+    report_in_external_macro: true\n }\n \n-declare_clippy_lint! {\n-    pub TEST_LINT_REGISTERED_ONLY_IMPL,\n-    correctness,\n-    \"\"\n+declare_tool_lint! {\n+    pub clippy::TEST_LINT_REGISTERED_ONLY_IMPL,\n+    Warn,\n+    \"\",\n+    report_in_external_macro: true\n }\n \n pub struct Pass;"}, {"sha": "7ee9d96c16a24e7c46de0c581533937137caac2d", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -1,10 +1,11 @@\n error: the lint `TEST_LINT` is not added to any `LintPass`\n-  --> $DIR/lint_without_lint_pass.rs:11:1\n+  --> $DIR/lint_without_lint_pass.rs:8:1\n    |\n-LL | / declare_clippy_lint! {\n-LL | |     pub TEST_LINT,\n-LL | |     correctness,\n-LL | |     \"\"\n+LL | / declare_tool_lint! {\n+LL | |     pub clippy::TEST_LINT,\n+LL | |     Warn,\n+LL | |     \"\",\n+LL | |     report_in_external_macro: true\n LL | | }\n    | |_^\n    |"}, {"sha": "9c06e047c4ad0e3a7f71d327e8448197820f72bf", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -1,5 +1,6 @@\n // aux-build:proc_macro_derive.rs\n \n+#![feature(rustc_private)]\n #![warn(clippy::all)]\n #![allow(clippy::blacklisted_name)]\n #![warn(clippy::used_underscore_binding)]"}, {"sha": "47693518f862617da353288275e72b5f07560663", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -1,31 +1,31 @@\n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:24:5\n+  --> $DIR/used_underscore_binding.rs:25:5\n    |\n LL |     _foo + 1\n    |     ^^^^\n    |\n    = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:29:20\n+  --> $DIR/used_underscore_binding.rs:30:20\n    |\n LL |     println!(\"{}\", _foo);\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:30:16\n+  --> $DIR/used_underscore_binding.rs:31:16\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:30:22\n+  --> $DIR/used_underscore_binding.rs:31:22\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:43:5\n+  --> $DIR/used_underscore_binding.rs:44:5\n    |\n LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^"}, {"sha": "529680a7588a654619babc1b3f8ee7fa8e4f8135", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -2,16 +2,15 @@\n \n #![warn(clippy::useless_attribute)]\n #![warn(unreachable_pub)]\n+#![feature(rustc_private)]\n \n #[allow(dead_code)]\n #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n #[rustfmt::skip]\n-#[cfg_attr(feature = \"cargo-clippy\",\n-           allow(dead_code))]\n #[allow(unused_imports)]\n #[allow(unused_extern_crates)]\n #[macro_use]\n-extern crate clippy_lints;\n+extern crate rustc;\n \n #[macro_use]\n extern crate proc_macro_derive;"}, {"sha": "87a1291543e158da0a3edb6d01d2bf4381519bcd", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03806edb76b4eeee8f01d280417840b76bfb70c7/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=03806edb76b4eeee8f01d280417840b76bfb70c7", "patch": "@@ -1,13 +1,13 @@\n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:6:1\n+  --> $DIR/useless_attribute.rs:7:1\n    |\n LL | #[allow(dead_code)]\n    | ^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(dead_code)]`\n    |\n    = note: `-D clippy::useless-attribute` implied by `-D warnings`\n \n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:7:1\n+  --> $DIR/useless_attribute.rs:8:1\n    |\n LL | #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code)`"}]}