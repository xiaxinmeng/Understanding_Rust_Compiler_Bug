{"sha": "29bec2dfc2bba0612be9a4e31407fd42a678adc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YmVjMmRmYzJiYmEwNjEyYmU5YTRlMzE0MDdmZDQyYTY3OGFkYzk=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-12T15:04:03Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-12T15:04:03Z"}, "message": "target: remove Box returned from get_targets", "tree": {"sha": "9b82b66a751beb066fa2720bf57120413ba97851", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b82b66a751beb066fa2720bf57120413ba97851"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29bec2dfc2bba0612be9a4e31407fd42a678adc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29bec2dfc2bba0612be9a4e31407fd42a678adc9", "html_url": "https://github.com/rust-lang/rust/commit/29bec2dfc2bba0612be9a4e31407fd42a678adc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29bec2dfc2bba0612be9a4e31407fd42a678adc9/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae3833db3b0acd5d7f06cad333e61e21e39be295", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3833db3b0acd5d7f06cad333e61e21e39be295", "html_url": "https://github.com/rust-lang/rust/commit/ae3833db3b0acd5d7f06cad333e61e21e39be295"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "185a67666d742dfe47c463ef81c7a901ec4fe709", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29bec2dfc2bba0612be9a4e31407fd42a678adc9/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29bec2dfc2bba0612be9a4e31407fd42a678adc9/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=29bec2dfc2bba0612be9a4e31407fd42a678adc9", "patch": "@@ -254,12 +254,12 @@ macro_rules! supported_targets {\n             }\n         }\n \n-        pub fn get_targets() -> Box<dyn Iterator<Item=String>> {\n-            Box::new(TARGETS.iter().filter_map(|t| -> Option<String> {\n+        pub fn get_targets() -> impl Iterator<Item = String> {\n+            TARGETS.iter().filter_map(|t| -> Option<String> {\n                 load_specific(t)\n                     .and(Ok(t.to_string()))\n                     .ok()\n-            }))\n+            })\n         }\n \n         #[cfg(test)]"}]}