{"sha": "a4ffbaadc81f9768a262059af77cf35fb88784bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZmZiYWFkYzgxZjk3NjhhMjYyMDU5YWY3N2NmMzVmYjg4Nzg0YmY=", "commit": {"author": {"name": "YI", "email": "uuuuuu@protonmail.com", "date": "2020-03-14T03:57:04Z"}, "committer": {"name": "YI", "email": "uuuuuu@protonmail.com", "date": "2020-03-15T03:37:43Z"}, "message": "Add more context to the literal overflow message", "tree": {"sha": "3ac524bc0c8fc6ab8f7860e09a60462aa48ba38d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ac524bc0c8fc6ab8f7860e09a60462aa48ba38d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4ffbaadc81f9768a262059af77cf35fb88784bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ffbaadc81f9768a262059af77cf35fb88784bf", "html_url": "https://github.com/rust-lang/rust/commit/a4ffbaadc81f9768a262059af77cf35fb88784bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4ffbaadc81f9768a262059af77cf35fb88784bf/comments", "author": {"login": "contrun", "id": 32609395, "node_id": "MDQ6VXNlcjMyNjA5Mzk1", "avatar_url": "https://avatars.githubusercontent.com/u/32609395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/contrun", "html_url": "https://github.com/contrun", "followers_url": "https://api.github.com/users/contrun/followers", "following_url": "https://api.github.com/users/contrun/following{/other_user}", "gists_url": "https://api.github.com/users/contrun/gists{/gist_id}", "starred_url": "https://api.github.com/users/contrun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/contrun/subscriptions", "organizations_url": "https://api.github.com/users/contrun/orgs", "repos_url": "https://api.github.com/users/contrun/repos", "events_url": "https://api.github.com/users/contrun/events{/privacy}", "received_events_url": "https://api.github.com/users/contrun/received_events", "type": "User", "site_admin": false}, "committer": {"login": "contrun", "id": 32609395, "node_id": "MDQ6VXNlcjMyNjA5Mzk1", "avatar_url": "https://avatars.githubusercontent.com/u/32609395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/contrun", "html_url": "https://github.com/contrun", "followers_url": "https://api.github.com/users/contrun/followers", "following_url": "https://api.github.com/users/contrun/following{/other_user}", "gists_url": "https://api.github.com/users/contrun/gists{/gist_id}", "starred_url": "https://api.github.com/users/contrun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/contrun/subscriptions", "organizations_url": "https://api.github.com/users/contrun/orgs", "repos_url": "https://api.github.com/users/contrun/repos", "events_url": "https://api.github.com/users/contrun/events{/privacy}", "received_events_url": "https://api.github.com/users/contrun/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e8ba4edc435c9f87314b23a6c5d9c175bdf19c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e8ba4edc435c9f87314b23a6c5d9c175bdf19c", "html_url": "https://github.com/rust-lang/rust/commit/e5e8ba4edc435c9f87314b23a6c5d9c175bdf19c"}], "stats": {"total": 118, "additions": 107, "deletions": 11}, "files": [{"sha": "b5c0296e297e0a5b61455b8ea6599b1c82a5048c", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -165,7 +165,7 @@ fn report_bin_hex_error(\n         let mut err = lint.build(&format!(\"literal out of range for {}\", t));\n         err.note(&format!(\n             \"the literal `{}` (decimal `{}`) does not fit into \\\n-                    an `{}` and will become `{}{}`\",\n+             the type `{}` and will become `{}{}`\",\n             repr_str, val, t, actually, t\n         ));\n         if let Some(sugg_ty) = get_type_suggestion(&cx.tables.node_type(expr.hir_id), val, negative)\n@@ -242,7 +242,7 @@ fn lint_int_literal<'a, 'tcx>(\n     v: u128,\n ) {\n     let int_type = t.normalize(cx.sess().target.ptr_width);\n-    let (_, max) = int_ty_range(int_type);\n+    let (min, max) = int_ty_range(int_type);\n     let max = max as u128;\n     let negative = type_limits.negated_expr_id == e.hir_id;\n \n@@ -267,7 +267,19 @@ fn lint_int_literal<'a, 'tcx>(\n         }\n \n         cx.struct_span_lint(OVERFLOWING_LITERALS, e.span, |lint| {\n-            lint.build(&format!(\"literal out of range for `{}`\", t.name_str())).emit()\n+            lint.build(&format!(\"literal out of range for `{}`\", t.name_str()))\n+                .note(&format!(\n+                    \"the literal `{}` does not fit into the type `{}` whose range is `{}..={}`\",\n+                    cx.sess()\n+                        .source_map()\n+                        .span_to_snippet(lit.span)\n+                        .ok()\n+                        .expect(\"must get snippet from literal\"),\n+                    t.name_str(),\n+                    min,\n+                    max,\n+                ))\n+                .emit();\n         });\n     }\n }\n@@ -320,7 +332,19 @@ fn lint_uint_literal<'a, 'tcx>(\n             return;\n         }\n         cx.struct_span_lint(OVERFLOWING_LITERALS, e.span, |lint| {\n-            lint.build(&format!(\"literal out of range for `{}`\", t.name_str())).emit()\n+            lint.build(&format!(\"literal out of range for `{}`\", t.name_str()))\n+                .note(&format!(\n+                    \"the literal `{}` does not fit into the type `{}` whose range is `{}..={}`\",\n+                    cx.sess()\n+                        .source_map()\n+                        .span_to_snippet(lit.span)\n+                        .ok()\n+                        .expect(\"must get snippet from literal\"),\n+                    t.name_str(),\n+                    min,\n+                    max,\n+                ))\n+                .emit()\n         });\n     }\n }\n@@ -352,7 +376,17 @@ fn lint_literal<'a, 'tcx>(\n             };\n             if is_infinite == Ok(true) {\n                 cx.struct_span_lint(OVERFLOWING_LITERALS, e.span, |lint| {\n-                    lint.build(&format!(\"literal out of range for `{}`\", t.name_str())).emit()\n+                    lint.build(&format!(\"literal out of range for `{}`\", t.name_str()))\n+                        .note(&format!(\n+                            \"the literal `{}` does not fit into the type `{}` and will be converted to `std::{}::INFINITY`\",\n+                            cx.sess()\n+                                .source_map()\n+                                .span_to_snippet(lit.span)\n+                                .expect(\"must get snippet from literal\"),\n+                            t.name_str(),\n+                            t.name_str(),\n+                        ))\n+                        .emit();\n                 });\n             }\n         }"}, {"sha": "fadf6ab86b43e0f49934377e3eec5820a120a10e", "filename": "src/test/ui/enum/enum-discrim-too-small2.stderr", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -9,24 +9,31 @@ note: the lint level is defined here\n    |\n LL | #![deny(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `223` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i16`\n   --> $DIR/enum-discrim-too-small2.rs:15:12\n    |\n LL |     Ci16 = 55555,\n    |            ^^^^^\n+   |\n+   = note: the literal `55555` does not fit into the type `i16` whose range is `-32768..=32767`\n \n error: literal out of range for `i32`\n   --> $DIR/enum-discrim-too-small2.rs:22:12\n    |\n LL |     Ci32 = 3_000_000_000,\n    |            ^^^^^^^^^^^^^\n+   |\n+   = note: the literal `3_000_000_000` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i64`\n   --> $DIR/enum-discrim-too-small2.rs:29:12\n    |\n LL |     Ci64 = 9223372036854775809,\n    |            ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `9223372036854775809` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "0375359aeaba619c3320df95d240ed6070dc2485", "filename": "src/test/ui/issues/issue-63364.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -5,6 +5,7 @@ LL |     for n in 100_000.. {\n    |              ^^^^^^^\n    |\n    = note: `#[deny(overflowing_literals)]` on by default\n+   = note: the literal `100_000` does not fit into the type `u16` whose range is `0..=65535`\n \n error: aborting due to previous error\n "}, {"sha": "127dd4127c261999435c2c9a53b0eb2f769c1e7e", "filename": "src/test/ui/lint/deny-overflowing-literals.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -5,6 +5,7 @@ LL |     let x: u8 = 256;\n    |                 ^^^\n    |\n    = note: `#[deny(overflowing_literals)]` on by default\n+   = note: the literal `256` does not fit into the type `u8` whose range is `0..=255`\n \n error: range endpoint is out of range for `u8`\n   --> $DIR/deny-overflowing-literals.rs:5:14"}, {"sha": "d2df73727412fb5f400825d11725456861775329", "filename": "src/test/ui/lint/lint-range-endpoint-overflow.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -15,18 +15,24 @@ error: literal out of range for `u8`\n    |\n LL |     let range_c = 0..=256;\n    |                       ^^^\n+   |\n+   = note: the literal `256` does not fit into the type `u8` whose range is `0..=255`\n \n error: literal out of range for `u8`\n   --> $DIR/lint-range-endpoint-overflow.rs:7:19\n    |\n LL |     let range_d = 256..5;\n    |                   ^^^\n+   |\n+   = note: the literal `256` does not fit into the type `u8` whose range is `0..=255`\n \n error: literal out of range for `u8`\n   --> $DIR/lint-range-endpoint-overflow.rs:8:22\n    |\n LL |     let range_e = 0..257;\n    |                      ^^^\n+   |\n+   = note: the literal `257` does not fit into the type `u8` whose range is `0..=255`\n \n error: range endpoint is out of range for `u8`\n   --> $DIR/lint-range-endpoint-overflow.rs:9:20"}, {"sha": "1e3c88dfc469c52541abfdfcdc7eebce570bfbd1", "filename": "src/test/ui/lint/lint-type-limits2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -17,6 +17,7 @@ note: the lint level is defined here\n    |\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n \n error: aborting due to previous error\n "}, {"sha": "150e9a2aa47921ac2486cba9efa31f621f29f356", "filename": "src/test/ui/lint/lint-type-limits3.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -17,6 +17,7 @@ note: the lint level is defined here\n    |\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `200` does not fit into the type `i8` whose range is `-128..=127`\n \n error: aborting due to previous error\n "}, {"sha": "7715c0d3a4db93d8e1a1754bbb2dd2b860dba032", "filename": "src/test/ui/lint/lint-type-overflow.stderr", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -9,108 +9,143 @@ note: the lint level is defined here\n    |\n LL | #![deny(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `256` does not fit into the type `u8` whose range is `0..=255`\n \n error: literal out of range for `u8`\n   --> $DIR/lint-type-overflow.rs:13:14\n    |\n LL |     let x1 = 256_u8;\n    |              ^^^^^^\n+   |\n+   = note: the literal `256_u8` does not fit into the type `u8` whose range is `0..=255`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:16:18\n    |\n LL |     let x1: i8 = 128;\n    |                  ^^^\n+   |\n+   = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:18:19\n    |\n LL |     let x3: i8 = -129;\n    |                   ^^^\n+   |\n+   = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:19:19\n    |\n LL |     let x3: i8 = -(129);\n    |                   ^^^^^\n+   |\n+   = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:20:20\n    |\n LL |     let x3: i8 = -{129};\n    |                    ^^^\n+   |\n+   = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:22:10\n    |\n LL |     test(1000);\n    |          ^^^^\n+   |\n+   = note: the literal `1000` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:24:13\n    |\n LL |     let x = 128_i8;\n    |             ^^^^^^\n+   |\n+   = note: the literal `128_i8` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:28:14\n    |\n LL |     let x = -129_i8;\n    |              ^^^^^^\n+   |\n+   = note: the literal `129_i8` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:32:18\n    |\n LL |     let x: i32 = 2147483648;\n    |                  ^^^^^^^^^^\n+   |\n+   = note: the literal `2147483648` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:33:13\n    |\n LL |     let x = 2147483648_i32;\n    |             ^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `2147483648_i32` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:36:19\n    |\n LL |     let x: i32 = -2147483649;\n    |                   ^^^^^^^^^^\n+   |\n+   = note: the literal `2147483649` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:37:14\n    |\n LL |     let x = -2147483649_i32;\n    |              ^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `2147483649_i32` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:38:13\n    |\n LL |     let x = 2147483648;\n    |             ^^^^^^^^^^\n+   |\n+   = note: the literal `2147483648` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:40:13\n    |\n LL |     let x = 9223372036854775808_i64;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `9223372036854775808_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:42:13\n    |\n LL |     let x = 18446744073709551615_i64;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `18446744073709551615_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:43:19\n    |\n LL |     let x: i64 = -9223372036854775809;\n    |                   ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `9223372036854775809` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:44:14\n    |\n LL |     let x = -9223372036854775809_i64;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `9223372036854775809_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n \n error: aborting due to 18 previous errors\n "}, {"sha": "61e33b7a260c96a2d4ee37426bb0645b9af00911", "filename": "src/test/ui/lint/lint-type-overflow2.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -9,30 +9,39 @@ note: the lint level is defined here\n    |\n LL | #![deny(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n \n error: literal out of range for `f32`\n   --> $DIR/lint-type-overflow2.rs:9:14\n    |\n LL |     let x = -3.40282357e+38_f32;\n    |              ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `3.40282357e+38_f32` does not fit into the type `f32` and will be converted to `std::f32::INFINITY`\n \n error: literal out of range for `f32`\n   --> $DIR/lint-type-overflow2.rs:10:14\n    |\n LL |     let x =  3.40282357e+38_f32;\n    |              ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `3.40282357e+38_f32` does not fit into the type `f32` and will be converted to `std::f32::INFINITY`\n \n error: literal out of range for `f64`\n   --> $DIR/lint-type-overflow2.rs:11:14\n    |\n LL |     let x = -1.7976931348623159e+308_f64;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `1.7976931348623159e+308_f64` does not fit into the type `f64` and will be converted to `std::f64::INFINITY`\n \n error: literal out of range for `f64`\n   --> $DIR/lint-type-overflow2.rs:12:14\n    |\n LL |     let x =  1.7976931348623159e+308_f64;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the literal `1.7976931348623159e+308_f64` does not fit into the type `f64` and will be converted to `std::f64::INFINITY`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "a7a788b877a6d163119fb0d6c304ab30919a747b", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ffbaadc81f9768a262059af77cf35fb88784bf/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=a4ffbaadc81f9768a262059af77cf35fb88784bf", "patch": "@@ -9,38 +9,39 @@ note: the lint level is defined here\n    |\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: the literal `255i8` does not fit into the type `i8` whose range is `-128..=127`\n \n warning: literal out of range for i8\n   --> $DIR/type-overflow.rs:10:16\n    |\n LL |     let fail = 0b1000_0001i8;\n    |                ^^^^^^^^^^^^^ help: consider using `u8` instead: `0b1000_0001u8`\n    |\n-   = note: the literal `0b1000_0001i8` (decimal `129`) does not fit into an `i8` and will become `-127i8`\n+   = note: the literal `0b1000_0001i8` (decimal `129`) does not fit into the type `i8` and will become `-127i8`\n \n warning: literal out of range for i64\n   --> $DIR/type-overflow.rs:12:16\n    |\n LL |     let fail = 0x8000_0000_0000_0000i64;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `u64` instead: `0x8000_0000_0000_0000u64`\n    |\n-   = note: the literal `0x8000_0000_0000_0000i64` (decimal `9223372036854775808`) does not fit into an `i64` and will become `-9223372036854775808i64`\n+   = note: the literal `0x8000_0000_0000_0000i64` (decimal `9223372036854775808`) does not fit into the type `i64` and will become `-9223372036854775808i64`\n \n warning: literal out of range for u32\n   --> $DIR/type-overflow.rs:14:16\n    |\n LL |     let fail = 0x1_FFFF_FFFFu32;\n    |                ^^^^^^^^^^^^^^^^ help: consider using `u64` instead: `0x1_FFFF_FFFFu64`\n    |\n-   = note: the literal `0x1_FFFF_FFFFu32` (decimal `8589934591`) does not fit into an `u32` and will become `4294967295u32`\n+   = note: the literal `0x1_FFFF_FFFFu32` (decimal `8589934591`) does not fit into the type `u32` and will become `4294967295u32`\n \n warning: literal out of range for i128\n   --> $DIR/type-overflow.rs:16:22\n    |\n LL |     let fail: i128 = 0x8000_0000_0000_0000_0000_0000_0000_0000;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: the literal `0x8000_0000_0000_0000_0000_0000_0000_0000` (decimal `170141183460469231731687303715884105728`) does not fit into an `i128` and will become `-170141183460469231731687303715884105728i128`\n+   = note: the literal `0x8000_0000_0000_0000_0000_0000_0000_0000` (decimal `170141183460469231731687303715884105728`) does not fit into the type `i128` and will become `-170141183460469231731687303715884105728i128`\n    = help: consider using `u128` instead\n \n warning: literal out of range for i32\n@@ -49,7 +50,7 @@ warning: literal out of range for i32\n LL |     let fail = 0x8FFF_FFFF_FFFF_FFFE;\n    |                ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: the literal `0x8FFF_FFFF_FFFF_FFFE` (decimal `10376293541461622782`) does not fit into an `i32` and will become `-2i32`\n+   = note: the literal `0x8FFF_FFFF_FFFF_FFFE` (decimal `10376293541461622782`) does not fit into the type `i32` and will become `-2i32`\n    = help: consider using `i128` instead\n \n warning: literal out of range for i8\n@@ -58,5 +59,5 @@ warning: literal out of range for i8\n LL |     let fail = -0b1111_1111i8;\n    |                 ^^^^^^^^^^^^^ help: consider using `i16` instead: `0b1111_1111i16`\n    |\n-   = note: the literal `0b1111_1111i8` (decimal `255`) does not fit into an `i8` and will become `-1i8`\n+   = note: the literal `0b1111_1111i8` (decimal `255`) does not fit into the type `i8` and will become `-1i8`\n "}]}