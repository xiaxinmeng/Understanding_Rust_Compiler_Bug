{"sha": "e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NjVmZGZjOGU0MGRjZWNkMmE5MjY4ZWNhYmM0YjE3MmM3MDllZDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-16T19:10:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-16T19:10:50Z"}, "message": "Add two tests for rvalue mutability", "tree": {"sha": "e45bba43d3b3108d94fbe457b3676c119714ccd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e45bba43d3b3108d94fbe457b3676c119714ccd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "html_url": "https://github.com/rust-lang/rust/commit/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87398f31e5615bef744f2ac3f66c00b1a7d4959e", "url": "https://api.github.com/repos/rust-lang/rust/commits/87398f31e5615bef744f2ac3f66c00b1a7d4959e", "html_url": "https://github.com/rust-lang/rust/commit/87398f31e5615bef744f2ac3f66c00b1a7d4959e"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "10bef907a28a3076e89202fae9927b4d97db8bed", "filename": "src/test/compile-fail/borrowck-rvalues-mutable-bad.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1/src%2Ftest%2Fcompile-fail%2Fborrowck-rvalues-mutable-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1/src%2Ftest%2Fcompile-fail%2Fborrowck-rvalues-mutable-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-rvalues-mutable-bad.rs?ref=e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that rvalue lifetimes is limited to the enclosing trans\n+// cleanup scope. It is unclear that this is the correct lifetime for\n+// rvalues, but that's what it is right now.\n+\n+struct Counter {\n+    value: uint\n+}\n+\n+impl Counter {\n+    fn new(v: uint) -> Counter {\n+        Counter {value: v}\n+    }\n+\n+    fn inc<'a>(&'a mut self) -> &'a mut Counter {\n+        self.value += 1;\n+        self\n+    }\n+\n+    fn get(&self) -> uint {\n+        self.value\n+    }\n+}\n+\n+pub fn main() {\n+    let v = Counter::new(22).inc().inc().get();\n+    //~^ ERROR borrowed value does not live long enough\n+    assert_eq!(v, 24);;\n+}"}, {"sha": "cf5a9341c9dc437747d91eb7d32c27fd94bdd6e3", "filename": "src/test/run-pass/borrowck-rvalues-mutable.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e665fdfc8e40dcecd2a9268ecabc4b172c709ed1/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs?ref=e665fdfc8e40dcecd2a9268ecabc4b172c709ed1", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Counter {\n+    value: uint\n+}\n+\n+impl Counter {\n+    fn new(v: uint) -> Counter {\n+        Counter {value: v}\n+    }\n+\n+    fn get_and_inc(&mut self) -> uint {\n+        let v = self.value;\n+        self.value += 1;\n+        v\n+    }\n+}\n+\n+pub fn main() {\n+    let v = Counter::new(22).get_and_inc();\n+    assert_eq!(v, 22);\n+}"}]}