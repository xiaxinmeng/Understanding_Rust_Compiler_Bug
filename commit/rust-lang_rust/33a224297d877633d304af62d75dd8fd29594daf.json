{"sha": "33a224297d877633d304af62d75dd8fd29594daf", "node_id": "C_kwDOAAsO6NoAKDMzYTIyNDI5N2Q4Nzc2MzNkMzA0YWY2MmQ3NWRkOGZkMjk1OTRkYWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-19T15:55:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-19T15:55:21Z"}, "message": "Rollup merge of #101979 - rust-lang:pa-update-relnotes, r=Mark-Simulacrum\n\nUpdate release notes for 1.64\n\nThis PR makes a few updates to the release notes to bring them on-par with the release notes of other releases:\n\n* The wording on some items has been changed to be more consistent and better describe what each change means, rather than using the PR title.\n* Items that were also in the compatibility notes have been removed from the other sections, only keeping them in the compat notes.\n* Diagnostics and ICE fixes have been removed from the notes.\n* The cargo section has been made more consistent.\n\nr? ``@Mark-Simulacrum``\ncc ``@rust-lang/release`` ``@joshtriplett``", "tree": {"sha": "089248e032a0039648501a51d535c1a646898031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/089248e032a0039648501a51d535c1a646898031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a224297d877633d304af62d75dd8fd29594daf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjKJDpCRBK7hj4Ov3rIwAAKD8IAA7q9PRDD1ZBF+NSUXv2/m90\nsIiyWrRYwv7D0fVau85EskIlzEJ9ekiR57NdE7DdqR+H136nxXulbBMmAD9OuhRD\nDyuOj2hwZWmRZ/3ABNwtkcne1AEsGXrGJDoPBZRFB/5oB7KEjVIrLGePL4QcZPGK\nTHQaEUhx//g5Jdy7CbYo+iilvC3nPQsM67bpnlFEX9InOps7hEl9rtSnzssz9lfA\nTTN50rvtk8+XJD+c0ShV3PMavH3AXlnTGIUl9BxBR+EgVFUoX/d1MLUPbsZk+uwg\nj4XszCPQTt3XLbVwxVG0avBf0hXd8elfl+m8ENnZb05dbRcAckjA+HsxlT9pIJo=\n=keIh\n-----END PGP SIGNATURE-----\n", "payload": "tree 089248e032a0039648501a51d535c1a646898031\nparent fdf3c0fc4409a380c26007b8a19efaf548ea1253\nparent b4937c3c7bc37baf3e603c9434972b9a5251abb8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663602921 +0200\ncommitter GitHub <noreply@github.com> 1663602921 +0200\n\nRollup merge of #101979 - rust-lang:pa-update-relnotes, r=Mark-Simulacrum\n\nUpdate release notes for 1.64\n\nThis PR makes a few updates to the release notes to bring them on-par with the release notes of other releases:\n\n* The wording on some items has been changed to be more consistent and better describe what each change means, rather than using the PR title.\n* Items that were also in the compatibility notes have been removed from the other sections, only keeping them in the compat notes.\n* Diagnostics and ICE fixes have been removed from the notes.\n* The cargo section has been made more consistent.\n\nr? ``@Mark-Simulacrum``\ncc ``@rust-lang/release`` ``@joshtriplett``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a224297d877633d304af62d75dd8fd29594daf", "html_url": "https://github.com/rust-lang/rust/commit/33a224297d877633d304af62d75dd8fd29594daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a224297d877633d304af62d75dd8fd29594daf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf3c0fc4409a380c26007b8a19efaf548ea1253", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf3c0fc4409a380c26007b8a19efaf548ea1253", "html_url": "https://github.com/rust-lang/rust/commit/fdf3c0fc4409a380c26007b8a19efaf548ea1253"}, {"sha": "b4937c3c7bc37baf3e603c9434972b9a5251abb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4937c3c7bc37baf3e603c9434972b9a5251abb8", "html_url": "https://github.com/rust-lang/rust/commit/b4937c3c7bc37baf3e603c9434972b9a5251abb8"}], "stats": {"total": 54, "additions": 19, "deletions": 35}, "files": [{"sha": "2b32349f48fad6c11e1bd8a283dc1a1230b96f50", "filename": "RELEASES.md", "status": "modified", "additions": 19, "deletions": 35, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/33a224297d877633d304af62d75dd8fd29594daf/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/33a224297d877633d304af62d75dd8fd29594daf/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=33a224297d877633d304af62d75dd8fd29594daf", "patch": "@@ -3,40 +3,30 @@ Version 1.64.0 (2022-09-22)\n \n Language\n --------\n-- [make `const_err` show up in future breakage reports](https://github.com/rust-lang/rust/pull/97743/)\n-- [allow unions with mutable references and tuples of allowed types](https://github.com/rust-lang/rust/pull/97995/)\n+- [Unions with mutable references or tuples of allowed types are now allowed](https://github.com/rust-lang/rust/pull/97995/)\n - It is now considered valid to deallocate memory pointed to by a shared reference `&T` [if every byte in `T` is inside an `UnsafeCell`](https://github.com/rust-lang/rust/pull/98017/)\n - Unused tuple struct fields are now warned against in an allow-by-default lint, [`unused_tuple_struct_fields`](https://github.com/rust-lang/rust/pull/95977/), similar to the existing warning for unused struct fields. This lint will become warn-by-default in the future.\n \n Compiler\n --------\n-- The minimum required versions for all `-linux-gnu` targets are now at least kernel 3.2 and glibc 2.17, for targets that previously supported older versions: [Increase the minimum linux-gnu versions](https://github.com/rust-lang/rust/pull/95026/)\n-- [Keep unstable target features for asm feature checking](https://github.com/rust-lang/rust/pull/99155/)\n - [Add Nintendo Switch as tier 3 target](https://github.com/rust-lang/rust/pull/88991/)\n   - Refer to Rust's [platform support page][platform-support-doc] for more\n     information on Rust's tiered platform support.\n-- [Only compile #[used] as llvm.compiler.used for ELF targets](https://github.com/rust-lang/rust/pull/93718/)\n-- [sess: stabilize `-Zterminal-width` as `--diagnostic-width`](https://github.com/rust-lang/rust/pull/95635/)\n-- [Fix repr(align) enum handling](https://github.com/rust-lang/rust/pull/96814/)\n-- [Suggest defining variable as mutable on `&mut _` type mismatch in pats](https://github.com/rust-lang/rust/pull/98431/)\n-- [Emit warning when named arguments are used positionally in format](https://github.com/rust-lang/rust/pull/98580/)\n-- [Add support for link-flavor rust-lld for iOS, tvOS and watchOS](https://github.com/rust-lang/rust/pull/98771/)\n-- [Do not mention private types from other crates as impl candidates](https://github.com/rust-lang/rust/pull/99091/)\n+- [Only compile `#[used]` as llvm.compiler.used for ELF targets](https://github.com/rust-lang/rust/pull/93718/)\n+- [Add the `--diagnostic-width` compiler flag to define the terminal width.](https://github.com/rust-lang/rust/pull/95635/)\n+- [Add support for link-flavor `rust-lld` for iOS, tvOS and watchOS](https://github.com/rust-lang/rust/pull/98771/)\n \n Libraries\n ---------\n-- [Implement network primitives with ideal Rust layout, not C system layout](https://github.com/rust-lang/rust/pull/78802/)\n - [Remove restrictions on compare-exchange memory ordering.](https://github.com/rust-lang/rust/pull/98383/)\n - You can now `write!` or `writeln!` into an `OsString`: [Implement `fmt::Write` for `OsString`](https://github.com/rust-lang/rust/pull/97915/)\n - [Enforce that layout size fits in isize in Layout](https://github.com/rust-lang/rust/pull/95295/)\n - [Make RwLockReadGuard covariant](https://github.com/rust-lang/rust/pull/96820/)\n - [Implement `FusedIterator` for `std::net::[Into]Incoming`](https://github.com/rust-lang/rust/pull/97300/)\n - [`impl<T: AsRawFd> AsRawFd for {Arc,Box}<T>`](https://github.com/rust-lang/rust/pull/97437/)\n-- [ptr::copy and ptr::swap are doing untyped copies](https://github.com/rust-lang/rust/pull/97712/)\n-- [Add assertion that `transmute_copy`'s U is not larger than T](https://github.com/rust-lang/rust/pull/98839/)\n-- [A soundness bug in `BTreeMap` was fixed](https://github.com/rust-lang/rust/pull/99413/) that allowed data it was borrowing to be dropped before the container.\n+- [`ptr::copy` and `ptr::swap` are doing untyped copies](https://github.com/rust-lang/rust/pull/97712/)\n - [Add cgroupv1 support to `available_parallelism`](https://github.com/rust-lang/rust/pull/97925/)\n-- [mem::uninitialized: mitigate many incorrect uses of this function](https://github.com/rust-lang/rust/pull/99182/)\n+- [Mitigate many incorrect uses of `mem::uninitialized`](https://github.com/rust-lang/rust/pull/99182/)\n \n Stabilized APIs\n ---------------\n@@ -86,40 +76,34 @@ These APIs are now usable in const contexts:\n \n Cargo\n -----\n-- Packages can now inherit settings from the workspace so that the settings\n-  can be centralized in one place. See\n+- [Packages can now inherit settings from the workspace so that the settings\n+  can be centralized in one place.](https://github.com/rust-lang/cargo/pull/10859) See\n   [`workspace.package`](https://doc.rust-lang.org/nightly/cargo/reference/workspaces.html#the-workspacepackage-table)\n   and\n   [`workspace.dependencies`](https://doc.rust-lang.org/nightly/cargo/reference/workspaces.html#the-workspacedependencies-table)\n   for more details on how to define these common settings.\n-  [#10859](https://github.com/rust-lang/cargo/pull/10859)\n-- Cargo commands can now accept multiple `--target` flags to build for\n-  multiple targets at once, and the\n+- [Cargo commands can now accept multiple `--target` flags to build for\n+  multiple targets at once](https://github.com/rust-lang/cargo/pull/10766), and the\n   [`build.target`](https://doc.rust-lang.org/nightly/cargo/reference/config.html#buildtarget)\n   config option may now take an array of multiple targets.\n-  [#10766](https://github.com/rust-lang/cargo/pull/10766)\n-- The `--jobs` argument can now take a negative number to count backwards from\n-  the max CPUs.\n-  [#10844](https://github.com/rust-lang/cargo/pull/10844)\n-- `cargo add` will now update `Cargo.lock`.\n-  [#10902](https://github.com/rust-lang/cargo/pull/10902)\n-- Added the\n+- [The `--jobs` argument can now take a negative number to count backwards from\n+  the max CPUs.](https://github.com/rust-lang/cargo/pull/10844)\n+- [`cargo add` will now update `Cargo.lock`.](https://github.com/rust-lang/cargo/pull/10902)\n+- [Added](https://github.com/rust-lang/cargo/pull/10838) the\n   [`--crate-type`](https://doc.rust-lang.org/nightly/cargo/commands/cargo-rustc.html#option-cargo-rustc---crate-type)\n   flag to `cargo rustc` to override the crate type.\n-  [#10838](https://github.com/rust-lang/cargo/pull/10838)\n-- Significantly improved the performance fetching git dependencies from GitHub\n-  when using a hash in the `rev` field.\n-  [#10079](https://github.com/rust-lang/cargo/pull/10079)\n+- [Significantly improved the performance fetching git dependencies from GitHub\n+  when using a hash in the `rev` field.](https://github.com/rust-lang/cargo/pull/10079)\n \n Misc\n ----\n-- [Let rust-analyzer ship on stable, non-preview](https://github.com/rust-lang/rust/pull/98640/)\n+- [The `rust-analyzer` rustup component is now available on the stable channel.](https://github.com/rust-lang/rust/pull/98640/)\n \n Compatibility Notes\n -------------------\n - The minimum required versions for all `-linux-gnu` targets are now at least kernel 3.2 and glibc 2.17, for targets that previously supported older versions: [Increase the minimum linux-gnu versions](https://github.com/rust-lang/rust/pull/95026/)\n-- [Implement network primitives with ideal Rust layout, not C system layout](https://github.com/rust-lang/rust/pull/78802/)\n-- [Add assertion that `transmute_copy`'s U is not larger than T](https://github.com/rust-lang/rust/pull/98839/)\n+- [Network primitives are now implemented with the ideal Rust layout, not the C system layout](https://github.com/rust-lang/rust/pull/78802/). This can cause problems when transmuting the types.\n+- [Add assertion that `transmute_copy`'s `U` is not larger than `T`](https://github.com/rust-lang/rust/pull/98839/)\n - [A soundness bug in `BTreeMap` was fixed](https://github.com/rust-lang/rust/pull/99413/) that allowed data it was borrowing to be dropped before the container.\n - [The Drop behavior of C-like enums cast to ints has changed](https://github.com/rust-lang/rust/pull/96862/). These are already discouraged by a compiler warning.\n - [Relate late-bound closure lifetimes to parent fn in NLL](https://github.com/rust-lang/rust/pull/98835/)"}]}