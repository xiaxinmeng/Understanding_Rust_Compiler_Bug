{"sha": "3c2cb89087c87f29ad3bc3856625b83017b7a294", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMmNiODkwODdjODdmMjlhZDNiYzM4NTY2MjViODMwMTdiN2EyOTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-06T11:05:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-06T14:35:29Z"}, "message": "add parent & resolve_path", "tree": {"sha": "9bf8d9e271d9199ec4d11f4728c0591e0796e9cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bf8d9e271d9199ec4d11f4728c0591e0796e9cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c2cb89087c87f29ad3bc3856625b83017b7a294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2cb89087c87f29ad3bc3856625b83017b7a294", "html_url": "https://github.com/rust-lang/rust/commit/3c2cb89087c87f29ad3bc3856625b83017b7a294", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c2cb89087c87f29ad3bc3856625b83017b7a294/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1836f4db35b29cd325b04978776a902679bd9ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1836f4db35b29cd325b04978776a902679bd9ce6", "html_url": "https://github.com/rust-lang/rust/commit/1836f4db35b29cd325b04978776a902679bd9ce6"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "236cb3ab4d237f2238cfb3b1e105e70e92bf05d4", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=3c2cb89087c87f29ad3bc3856625b83017b7a294", "patch": "@@ -1,7 +1,7 @@\n use ra_db::{CrateId, Cancelable, FileId};\n use ra_syntax::ast;\n \n-use crate::{Name, db::HirDatabase, DefId};\n+use crate::{Name, db::HirDatabase, DefId, Path, PerNs};\n \n /// hir::Crate describes a single crate. It's the main inteface with which\n /// crate's dependencies interact. Mostly, it should be just a proxy for the\n@@ -52,4 +52,12 @@ impl Module {\n     pub fn child(&self, db: &impl HirDatabase, name: &Name) -> Cancelable<Option<Module>> {\n         self.child_impl(db, name)\n     }\n+    /// Finds a parent module.\n+    pub fn parent(&self, db: &impl HirDatabase) -> Cancelable<Option<Module>> {\n+        self.parent_impl(db)\n+    }\n+\n+    pub fn resolve_path(&self, db: &impl HirDatabase, path: &Path) -> Cancelable<PerNs<DefId>> {\n+        self.resolve_path_impl(db, path)\n+    }\n }"}, {"sha": "678758956a445fb35c58f9170e10da9920351b9b", "filename": "crates/ra_hir/src/code_model_impl.rs", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fcode_model_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fcode_model_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl.rs?ref=3c2cb89087c87f29ad3bc3856625b83017b7a294", "patch": "@@ -1,7 +1,7 @@\n use ra_db::{CrateId, Cancelable, FileId};\n use ra_syntax::{AstNode, ast};\n \n-use crate::{HirFileId, db::HirDatabase, Crate, CrateDependency, AsName, DefId, DefLoc, DefKind, Name};\n+use crate::{HirFileId, db::HirDatabase, Crate, CrateDependency, AsName, DefId, DefLoc, DefKind, Name, Path, PathKind, PerNs, Def};\n \n use crate::code_model_api::Module;\n \n@@ -102,4 +102,58 @@ impl Module {\n         let module = Module::new(def_id);\n         Ok(Some(module))\n     }\n+    pub fn parent_impl(&self, db: &impl HirDatabase) -> Cancelable<Option<Module>> {\n+        let loc = self.def_id.loc(db);\n+        let module_tree = db.module_tree(loc.source_root_id)?;\n+        let parent_id = ctry!(loc.module_id.parent(&module_tree));\n+        let def_loc = DefLoc {\n+            module_id: parent_id,\n+            source_item_id: parent_id.source(&module_tree).0,\n+            ..loc\n+        };\n+        let def_id = def_loc.id(db);\n+        let module = Module::new(def_id);\n+        Ok(Some(module))\n+    }\n+    pub fn resolve_path_impl(\n+        &self,\n+        db: &impl HirDatabase,\n+        path: &Path,\n+    ) -> Cancelable<PerNs<DefId>> {\n+        let mut curr_per_ns = PerNs::types(\n+            match path.kind {\n+                PathKind::Crate => self.crate_root(db)?,\n+                PathKind::Self_ | PathKind::Plain => self.clone(),\n+                PathKind::Super => {\n+                    if let Some(p) = self.parent(db)? {\n+                        p\n+                    } else {\n+                        return Ok(PerNs::none());\n+                    }\n+                }\n+            }\n+            .def_id,\n+        );\n+\n+        let segments = &path.segments;\n+        for name in segments.iter() {\n+            let curr = if let Some(r) = curr_per_ns.as_ref().take_types() {\n+                r\n+            } else {\n+                return Ok(PerNs::none());\n+            };\n+            let module = match curr.resolve(db)? {\n+                Def::Module(it) => it,\n+                // TODO here would be the place to handle enum variants...\n+                _ => return Ok(PerNs::none()),\n+            };\n+            let scope = module.scope(db)?;\n+            curr_per_ns = if let Some(r) = scope.get(&name) {\n+                r.def_id\n+            } else {\n+                return Ok(PerNs::none());\n+            };\n+        }\n+        Ok(curr_per_ns)\n+    }\n }"}, {"sha": "11e3f6782c35fb6d30a943c928381b18f9a93087", "filename": "crates/ra_hir/src/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule.rs?ref=3c2cb89087c87f29ad3bc3856625b83017b7a294", "patch": "@@ -251,7 +251,7 @@ impl ModuleId {\n     fn parent_link(self, tree: &ModuleTree) -> Option<LinkId> {\n         tree.mods[self].parent\n     }\n-    fn parent(self, tree: &ModuleTree) -> Option<ModuleId> {\n+    pub(crate) fn parent(self, tree: &ModuleTree) -> Option<ModuleId> {\n         let link = self.parent_link(tree)?;\n         Some(tree.links[link].owner)\n     }"}, {"sha": "dac524384afe81c9d9336e3f7cdd36ef144f4cbc", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2cb89087c87f29ad3bc3856625b83017b7a294/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=3c2cb89087c87f29ad3bc3856625b83017b7a294", "patch": "@@ -177,11 +177,11 @@ impl<T> PerNs<T> {\n     }\n \n     pub fn take_types(self) -> Option<T> {\n-        self.types\n+        self.take(Namespace::Types)\n     }\n \n     pub fn take_values(self) -> Option<T> {\n-        self.values\n+        self.take(Namespace::Values)\n     }\n \n     pub fn get(&self, namespace: Namespace) -> Option<&T> {"}]}