{"sha": "bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNjg0OGQzNTJkZDIzNGZmYjljNmNiOTdlMmZiY2Y2Yzg3OGM4ZDg=", "commit": {"author": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-06-17T00:05:36Z"}, "committer": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-06-17T00:05:36Z"}, "message": "Adds conditional byteswapping intrinsics\n\nThese intrinsics are synthesized, so maybe they should be in another\nfile. But since they are just a single line of code each, based on the\nbswap intrinsics and aren't really intended for public consumption (they should be exposed as a\nsingle function / trait) I thought they would fit here.", "tree": {"sha": "89b87feeb250cfd65085486e8c9d59f5ef53ba7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89b87feeb250cfd65085486e8c9d59f5ef53ba7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "html_url": "https://github.com/rust-lang/rust/commit/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8/comments", "author": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4cc34fa120cacde411ccdc6b62cc8b6f5f14e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cc34fa120cacde411ccdc6b62cc8b6f5f14e24", "html_url": "https://github.com/rust-lang/rust/commit/a4cc34fa120cacde411ccdc6b62cc8b6f5f14e24"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "599ecc3c4658d45a1a96638ce4cc9e3e4fb0f0b5", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "patch": "@@ -238,3 +238,17 @@ pub extern \"rust-intrinsic\" {\n     pub fn bswap32(x: i32) -> i32;\n     pub fn bswap64(x: i64) -> i64;\n }\n+\n+#[cfg(target_endian = \"little\")] pub fn to_le16(x: i16) -> i16 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le16(x: i16) -> i16 { unsafe { bswap16(x) } }\n+#[cfg(target_endian = \"little\")] pub fn to_le32(x: i32) -> i32 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le32(x: i32) -> i32 { unsafe { bswap32(x) } }\n+#[cfg(target_endian = \"little\")] pub fn to_le64(x: i64) -> i64 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le64(x: i64) -> i64 { unsafe { bswap64(x) } }\n+\n+#[cfg(target_endian = \"little\")] pub fn to_be16(x: i16) -> i16 { unsafe { bswap16(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be16(x: i16) -> i16 { x }\n+#[cfg(target_endian = \"little\")] pub fn to_be32(x: i32) -> i32 { unsafe { bswap32(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be32(x: i32) -> i32 { x }\n+#[cfg(target_endian = \"little\")] pub fn to_be64(x: i64) -> i64 { unsafe { bswap64(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be64(x: i64) -> i64 { x }"}]}