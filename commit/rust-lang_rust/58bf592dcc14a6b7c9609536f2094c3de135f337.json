{"sha": "58bf592dcc14a6b7c9609536f2094c3de135f337", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YmY1OTJkY2MxNGE2YjdjOTYwOTUzNmYyMDk0YzNkZTEzNWYzMzc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-17T23:54:52Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-17T23:54:52Z"}, "message": "Fix a couple bugs in parametric returns.", "tree": {"sha": "119e806ef793926afad3f6ca4753336d01c5e3e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/119e806ef793926afad3f6ca4753336d01c5e3e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58bf592dcc14a6b7c9609536f2094c3de135f337", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58bf592dcc14a6b7c9609536f2094c3de135f337", "html_url": "https://github.com/rust-lang/rust/commit/58bf592dcc14a6b7c9609536f2094c3de135f337", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58bf592dcc14a6b7c9609536f2094c3de135f337/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f591c37671ad1e3932d8a5c27124eb52903026c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f591c37671ad1e3932d8a5c27124eb52903026c", "html_url": "https://github.com/rust-lang/rust/commit/5f591c37671ad1e3932d8a5c27124eb52903026c"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "a449eec8ec660eeba681720738f553524ceba17e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/58bf592dcc14a6b7c9609536f2094c3de135f337/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bf592dcc14a6b7c9609536f2094c3de135f337/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=58bf592dcc14a6b7c9609536f2094c3de135f337", "patch": "@@ -2014,8 +2014,7 @@ impure fn trans_args(@block_ctxt cx,\n                 auto retty = ty.ty_fn_ret(fn_ty);\n                 auto llretty = type_of(cx.fcx.ccx, retty);\n                 auto llretslot = cx.build.Alloca(llretty);\n-                llretslot = cx.build.PointerCast(llretslot, T_ptr(T_i8()));\n-                vs += llretslot;\n+                vs += cx.build.PointerCast(llretslot, T_ptr(T_i8()));\n                 llretslot_opt = some[ValueRef](llretslot);\n             }\n         }\n@@ -2318,19 +2317,22 @@ impure fn trans_call(@block_ctxt cx, @ast.expr f,\n \n     auto bcx = args_res._0;\n     auto real_retval = bcx.build.FastCall(faddr, args_res._1);\n-    auto retval;\n+    auto retval = real_retval;\n+\n+    if (ty.type_is_nil(ret_ty)) {\n+        retval = C_nil();\n+    }\n \n     // Check for a generic retslot.\n     alt (args_res._2) {\n+\n         case (some[ValueRef](?llretslot)) {\n-            retval = bcx.build.Load(llretslot);\n+            retval = load_scalar_or_boxed(bcx, llretslot, ret_ty);\n         }\n-        case (none[ValueRef]) {\n-            retval = real_retval;\n \n-            if (ty.type_is_nil(ret_ty)) {\n-                retval = C_nil();\n-            } else if (ty.type_is_structural(ret_ty)) {\n+        case (none[ValueRef]) {\n+            if (! (ty.type_is_scalar(ret_ty) ||\n+                   ty.type_is_boxed(ret_ty))) {\n                 // Structured returns come back as first-class values. This is\n                 // nice for LLVM but wrong for us; we treat structured values\n                 // by pointer in most of our code here. So spill it to an\n@@ -2342,8 +2344,6 @@ impure fn trans_call(@block_ctxt cx, @ast.expr f,\n         }\n     }\n \n-\n-\n     // Retval doesn't correspond to anything really tangible in the frame, but\n     // it's a ref all the same, so we put a note here to drop it when we're\n     // done in this scope."}]}