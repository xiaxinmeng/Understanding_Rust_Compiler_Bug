{"sha": "be4f19ae7c8b72669f1201c5d009e34af2d49228", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNGYxOWFlN2M4YjcyNjY5ZjEyMDFjNWQwMDllMzRhZjJkNDkyMjg=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-07T04:38:23Z"}, "committer": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-07T04:38:23Z"}, "message": "Fix regression of multi-line statement indents", "tree": {"sha": "bbe77d8d37df80ca9b1f82964789da4046753409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe77d8d37df80ca9b1f82964789da4046753409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be4f19ae7c8b72669f1201c5d009e34af2d49228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be4f19ae7c8b72669f1201c5d009e34af2d49228", "html_url": "https://github.com/rust-lang/rust/commit/be4f19ae7c8b72669f1201c5d009e34af2d49228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be4f19ae7c8b72669f1201c5d009e34af2d49228/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcf18786b4c37972d9220bfb8bbe6a4875433faf", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf18786b4c37972d9220bfb8bbe6a4875433faf", "html_url": "https://github.com/rust-lang/rust/commit/fcf18786b4c37972d9220bfb8bbe6a4875433faf"}], "stats": {"total": 59, "additions": 36, "deletions": 23}, "files": [{"sha": "ac5b1b1dd9854e1351e1ff91d5306cf6269c2251", "filename": "src/etc/emacs/rust-mode-tests.el", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/be4f19ae7c8b72669f1201c5d009e34af2d49228/src%2Fetc%2Femacs%2Frust-mode-tests.el", "raw_url": "https://github.com/rust-lang/rust/raw/be4f19ae7c8b72669f1201c5d009e34af2d49228/src%2Fetc%2Femacs%2Frust-mode-tests.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode-tests.el?ref=be4f19ae7c8b72669f1201c5d009e34af2d49228", "patch": "@@ -378,3 +378,15 @@ fn nexted_fns(a: fn(b:int,\n }\n \"\n ))\n+\n+(ert-deftest indent-multi-line-expr ()\n+  (test-indent\n+   \"\n+fn foo()\n+{\n+    x();\n+    let a =\n+        b();\n+}\n+\"\n+))"}, {"sha": "a61d916f46fa76bfb2c269bf0a479b02cef3696b", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/be4f19ae7c8b72669f1201c5d009e34af2d49228/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/be4f19ae7c8b72669f1201c5d009e34af2d49228/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=be4f19ae7c8b72669f1201c5d009e34af2d49228", "patch": "@@ -48,13 +48,12 @@\n     (if (/= starting (point))\n         (rust-rewind-irrelevant))))\n \n-(defun rust-first-indent-after-brace ()\n+(defun rust-align-to-expr-after-brace ()\n   (save-excursion\n     (forward-char)\n-    (if (looking-at \"[[:blank:]]*\\\\(?://.*\\\\)?$\")\n-        ;; We don't want to indent out to the open bracket if the\n-        ;; open bracket ends the line\n-        (* rust-indent-offset (rust-paren-level))\n+    ;; We don't want to indent out to the open bracket if the\n+    ;; open bracket ends the line\n+    (when (not (looking-at \"[[:blank:]]*\\\\(?://.*\\\\)?$\"))\n       (when (looking-at \"[[:space:]]\") (forward-to-word 1))\n       (current-column))))\n \n@@ -69,7 +68,8 @@\n               ((looking-at \"->\")\n                (save-excursion\n                  (backward-list)\n-                 (rust-first-indent-after-brace)))\n+                 (or (rust-align-to-expr-after-brace)\n+                     (* rust-indent-offset (+ 1 level)))))\n \n               ;; A closing brace is 1 level unindended\n               ((looking-at \"}\") (* rust-indent-offset (- level 1)))\n@@ -91,24 +91,25 @@\n                (let ((pt (point)))\n                  (rust-rewind-irrelevant)\n                  (backward-up-list)\n-                 (if (looking-at \"[[({]\")\n-                     (rust-first-indent-after-brace)\n-                   (progn\n-                     (goto-char pt)\n-                     (back-to-indentation)\n-                     (if (looking-at \"\\\\<else\\\\>\")\n-                         (* rust-indent-offset (+ 1 level))\n-                       (progn\n-                         (goto-char pt)\n-                         (beginning-of-line)\n-                         (rust-rewind-irrelevant)\n-                         (end-of-line)\n-                         (if (looking-back \"[[,;{}(][[:space:]]*\\\\(?://.*\\\\)?\")\n-                             (* rust-indent-offset level)\n-                           (back-to-indentation)\n-                           (if (looking-at \"#\")\n+                 (or (and (looking-at \"[[({]\")\n+                          (rust-align-to-expr-after-brace))\n+                     (progn\n+                       (goto-char pt)\n+                       (back-to-indentation)\n+                       (if (looking-at \"\\\\<else\\\\>\")\n+                           (* rust-indent-offset (+ 1 level))\n+                         (progn\n+                           (goto-char pt)\n+                           (beginning-of-line)\n+                           (rust-rewind-irrelevant)\n+                           (end-of-line)\n+                           (if (looking-back\n+                                \"[[,;{}(][[:space:]]*\\\\(?://.*\\\\)?\")\n                                (* rust-indent-offset level)\n-                             (* rust-indent-offset (+ 1 level))))))))))\n+                             (back-to-indentation)\n+                             (if (looking-at \"#\")\n+                                 (* rust-indent-offset level)\n+                               (* rust-indent-offset (+ 1 level))))))))))\n \n               ;; Otherwise we're in a column-zero definition\n               (t 0))))))"}]}