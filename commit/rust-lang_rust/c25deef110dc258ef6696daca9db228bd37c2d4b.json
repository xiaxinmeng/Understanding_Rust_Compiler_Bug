{"sha": "c25deef110dc258ef6696daca9db228bd37c2d4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNWRlZWYxMTBkYzI1OGVmNjY5NmRhY2E5ZGIyMjhiZDM3YzJkNGI=", "commit": {"author": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-07-31T10:50:09Z"}, "committer": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-07-31T10:50:09Z"}, "message": "Fix check for unstable features\n\nThese features are registered only on Nightly and so matches.opt_present panics when it's called without the is_nightly guard.", "tree": {"sha": "c766734a68c405014f7e23463b32b34fef258ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c766734a68c405014f7e23463b32b34fef258ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c25deef110dc258ef6696daca9db228bd37c2d4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c25deef110dc258ef6696daca9db228bd37c2d4b", "html_url": "https://github.com/rust-lang/rust/commit/c25deef110dc258ef6696daca9db228bd37c2d4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c25deef110dc258ef6696daca9db228bd37c2d4b/comments", "author": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "html_url": "https://github.com/rust-lang/rust/commit/ca6b360c8a2c40bec3cf04bb4c9198ad30779309"}], "stats": {"total": 59, "additions": 30, "deletions": 29}, "files": [{"sha": "96237d533a295aecb156aaa636dc40b790567a86", "filename": "src/bin/main.rs", "status": "modified", "additions": 30, "deletions": 29, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c25deef110dc258ef6696daca9db228bd37c2d4b/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c25deef110dc258ef6696daca9db228bd37c2d4b/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=c25deef110dc258ef6696daca9db228bd37c2d4b", "patch": "@@ -459,38 +459,39 @@ impl GetOptsOptions {\n         let rust_nightly = option_env!(\"CFG_RELEASE_CHANNEL\")\n             .map(|c| c == \"nightly\")\n             .unwrap_or(false);\n+\n         if rust_nightly {\n             options.unstable_features = matches.opt_present(\"unstable-features\");\n-        }\n \n-        if options.unstable_features {\n-            if matches.opt_present(\"skip-children\") {\n-                options.skip_children = Some(true);\n-            }\n-            if matches.opt_present(\"error-on-unformatted\") {\n-                options.error_on_unformatted = Some(true);\n-            }\n-            if let Some(ref file_lines) = matches.opt_str(\"file-lines\") {\n-                options.file_lines = file_lines.parse().map_err(err_msg)?;\n-            }\n-        } else {\n-            let mut unstable_options = vec![];\n-            if matches.opt_present(\"skip-children\") {\n-                unstable_options.push(\"`--skip-children`\");\n-            }\n-            if matches.opt_present(\"error-on-unformatted\") {\n-                unstable_options.push(\"`--error-on-unformatted`\");\n-            }\n-            if matches.opt_present(\"file-lines\") {\n-                unstable_options.push(\"`--file-lines`\");\n-            }\n-            if !unstable_options.is_empty() {\n-                let s = if unstable_options.len() == 1 { \"\" } else { \"s\" };\n-                return Err(format_err!(\n-                    \"Unstable option{} ({}) used without `--unstable-features`\",\n-                    s,\n-                    unstable_options.join(\", \"),\n-                ));\n+            if options.unstable_features {\n+                if matches.opt_present(\"skip-children\") {\n+                    options.skip_children = Some(true);\n+                }\n+                if matches.opt_present(\"error-on-unformatted\") {\n+                    options.error_on_unformatted = Some(true);\n+                }\n+                if let Some(ref file_lines) = matches.opt_str(\"file-lines\") {\n+                    options.file_lines = file_lines.parse().map_err(err_msg)?;\n+                }\n+            } else {\n+                let mut unstable_options = vec![];\n+                if matches.opt_present(\"skip-children\") {\n+                    unstable_options.push(\"`--skip-children`\");\n+                }\n+                if matches.opt_present(\"error-on-unformatted\") {\n+                    unstable_options.push(\"`--error-on-unformatted`\");\n+                }\n+                if matches.opt_present(\"file-lines\") {\n+                    unstable_options.push(\"`--file-lines`\");\n+                }\n+                if !unstable_options.is_empty() {\n+                    let s = if unstable_options.len() == 1 { \"\" } else { \"s\" };\n+                    return Err(format_err!(\n+                        \"Unstable option{} ({}) used without `--unstable-features`\",\n+                        s,\n+                        unstable_options.join(\", \"),\n+                    ));\n+                }\n             }\n         }\n "}]}