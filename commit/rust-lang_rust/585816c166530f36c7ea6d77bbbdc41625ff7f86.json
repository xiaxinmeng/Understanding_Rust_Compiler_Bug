{"sha": "585816c166530f36c7ea6d77bbbdc41625ff7f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NTgxNmMxNjY1MzBmMzZjN2VhNmQ3N2JiYmRjNDE2MjVmZjdmODY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-21T19:36:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-21T19:36:08Z"}, "message": "Merge #7383\n\n7383: Add test for path resolution bug r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "e073c1c6b6f63b00073b2ec20594751fa9184f7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e073c1c6b6f63b00073b2ec20594751fa9184f7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/585816c166530f36c7ea6d77bbbdc41625ff7f86", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCdeoCRBK7hj4Ov3rIwAAdHIIAHNSraB93jQ6H7+PLtijhhMn\nFGc4/49FNmib+dTk9fUZY+PPw6FX0kFIK70w9osFkcz3HqCj4vLJoq7L3TZrkWbZ\n8WOPcReyJ9e3vyvlcWdqNrx+8CFHEqecYpacBh18hngwcCuOFbePdSos4rBerRlJ\ndxMAOkQh2i82s9vgeiDNFOk47wEtXAez8I5lryoXzDfFyOJ89iwf9RpW9QtVMtN8\n7CgAJ5vfYVinPlhjePwk4H3mmn8togOvXHxgOTYhcJ4jnl2DVKnMNIyOUZmPJFwj\nqhtDDq0D6+YJtdm/UKl6DUGcXUjqCXmjXq5e8PVH/nhcsfBhXdhKaWDOLevhYn4=\n=SA3G\n-----END PGP SIGNATURE-----\n", "payload": "tree e073c1c6b6f63b00073b2ec20594751fa9184f7d\nparent a162083099be55e6f205794d57c9c72f36d5933a\nparent 4d1960705709828d03c76c3610ecdece658790ae\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611257768 +0000\ncommitter GitHub <noreply@github.com> 1611257768 +0000\n\nMerge #7383\n\n7383: Add test for path resolution bug r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/585816c166530f36c7ea6d77bbbdc41625ff7f86", "html_url": "https://github.com/rust-lang/rust/commit/585816c166530f36c7ea6d77bbbdc41625ff7f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/585816c166530f36c7ea6d77bbbdc41625ff7f86/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a162083099be55e6f205794d57c9c72f36d5933a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a162083099be55e6f205794d57c9c72f36d5933a", "html_url": "https://github.com/rust-lang/rust/commit/a162083099be55e6f205794d57c9c72f36d5933a"}, {"sha": "4d1960705709828d03c76c3610ecdece658790ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d1960705709828d03c76c3610ecdece658790ae", "html_url": "https://github.com/rust-lang/rust/commit/4d1960705709828d03c76c3610ecdece658790ae"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "2e5d0a01e76ea323b073b14509f08f7b802aad8e", "filename": "crates/hir_def/src/body/tests.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/585816c166530f36c7ea6d77bbbdc41625ff7f86/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585816c166530f36c7ea6d77bbbdc41625ff7f86/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs?ref=585816c166530f36c7ea6d77bbbdc41625ff7f86", "patch": "@@ -6,18 +6,24 @@ use crate::{test_db::TestDB, ModuleDefId};\n use super::*;\n \n fn lower(ra_fixture: &str) -> Arc<Body> {\n-    let (db, file_id) = crate::test_db::TestDB::with_single_file(ra_fixture);\n+    let db = crate::test_db::TestDB::with_files(ra_fixture);\n \n     let krate = db.crate_graph().iter().next().unwrap();\n     let def_map = db.crate_def_map(krate);\n-    let module = def_map.modules_for_file(file_id).next().unwrap();\n-    let module = &def_map[module];\n-    let fn_def = match module.scope.declarations().next().unwrap() {\n-        ModuleDefId::FunctionId(it) => it,\n-        _ => panic!(),\n-    };\n+    let mut fn_def = None;\n+    'outer: for (_, module) in def_map.modules() {\n+        for decl in module.scope.declarations() {\n+            match decl {\n+                ModuleDefId::FunctionId(it) => {\n+                    fn_def = Some(it);\n+                    break 'outer;\n+                }\n+                _ => {}\n+            }\n+        }\n+    }\n \n-    db.body(fn_def.into())\n+    db.body(fn_def.unwrap().into())\n }\n \n fn check_diagnostics(ra_fixture: &str) {\n@@ -41,6 +47,25 @@ fn main() { n_nuple!(1,2,3); }\n     );\n }\n \n+#[test]\n+fn macro_resolve() {\n+    // Regression test for a path resolution bug introduced with inner item handling.\n+    lower(\n+        r\"\n+macro_rules! vec {\n+    () => { () };\n+    ($elem:expr; $n:expr) => { () };\n+    ($($x:expr),+ $(,)?) => { () };\n+}\n+mod m {\n+    fn outer() {\n+        let _ = vec![FileSet::default(); self.len()];\n+    }\n+}\n+      \",\n+    );\n+}\n+\n #[test]\n fn cfg_diagnostics() {\n     check_diagnostics("}]}