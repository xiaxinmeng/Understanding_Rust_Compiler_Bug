{"sha": "aed53f9bf0eed5526891d3998d2a570840e453f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZDUzZjliZjBlZWQ1NTI2ODkxZDM5OThkMmE1NzA4NDBlNDUzZjc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-30T08:03:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-31T01:45:13Z"}, "message": "Promote unreachable code to being a lint attribute", "tree": {"sha": "8edabe8dc9cf03ade8b383e590927b1763e59d36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8edabe8dc9cf03ade8b383e590927b1763e59d36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aed53f9bf0eed5526891d3998d2a570840e453f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aed53f9bf0eed5526891d3998d2a570840e453f7", "html_url": "https://github.com/rust-lang/rust/commit/aed53f9bf0eed5526891d3998d2a570840e453f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aed53f9bf0eed5526891d3998d2a570840e453f7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237dce12c934287abd0bbe5a35309b1dc4f0d2c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/237dce12c934287abd0bbe5a35309b1dc4f0d2c0", "html_url": "https://github.com/rust-lang/rust/commit/237dce12c934287abd0bbe5a35309b1dc4f0d2c0"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "c460ec89e4e9e0bd404da06107e277e99728795e", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -96,6 +96,7 @@ pub enum lint {\n     unnecessary_allocation,\n \n     missing_doc,\n+    unreachable_code,\n }\n \n pub fn level_to_str(lv: level) -> &'static str {\n@@ -273,6 +274,13 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         desc: \"detects missing documentation for public members\",\n         default: allow\n     }),\n+\n+    (\"unreachable_code\",\n+     LintSpec {\n+        lint: unreachable_code,\n+        desc: \"detects unreachable code\",\n+        default: warn\n+    }),\n ];\n \n /*"}, {"sha": "f8481d4cf904d0e8b195052c93f93183dbbafc5d", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -81,6 +81,7 @@ use core::prelude::*;\n use middle::const_eval;\n use middle::pat_util::pat_id_map;\n use middle::pat_util;\n+use middle::lint::unreachable_code;\n use middle::ty::{FnSig, VariantInfo_};\n use middle::ty::{ty_param_bounds_and_ty, ty_param_substs_and_ty};\n use middle::ty::{substs, param_ty};\n@@ -2937,7 +2938,8 @@ pub fn check_block_with_expected(fcx: @mut FnCtxt,\n         let mut any_err = false;\n         for blk.node.stmts.each |s| {\n             check_stmt(fcx, *s);\n-            let s_ty = fcx.node_ty(ast_util::stmt_id(*s));\n+            let s_id = ast_util::stmt_id(*s);\n+            let s_ty = fcx.node_ty(s_id);\n             if last_was_bot && !warned && match s.node {\n                   ast::stmt_decl(@codemap::spanned { node: ast::decl_local(_),\n                                                  _}, _) |\n@@ -2946,7 +2948,8 @@ pub fn check_block_with_expected(fcx: @mut FnCtxt,\n                   }\n                   _ => false\n                 } {\n-                fcx.ccx.tcx.sess.span_warn(s.span, \"unreachable statement\");\n+                fcx.ccx.tcx.sess.add_lint(unreachable_code, s_id, s.span,\n+                                          ~\"unreachable statement\");\n                 warned = true;\n             }\n             if ty::type_is_bot(s_ty) {"}, {"sha": "91b89a67ee3484859ab65123cef0a0bfbb85c366", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -9,13 +9,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-fn f(caller: &str) {\n-    debug!(caller);\n-    let x: uint = 0u32; // induce type error //~ ERROR mismatched types\n-}\n+#[deny(unreachable_code)];\n \n fn main() {\n-    return f(\"main\");\n-    debug!(\"Paul is dead\"); //~ WARNING unreachable\n+    return;\n+    debug!(\"Paul is dead\"); //~ ERROR: unreachable\n }"}, {"sha": "0b35104841e64b678e6104cbb0a7c67a043fc05d", "filename": "src/test/compile-fail/issue-2150.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -8,11 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[deny(unreachable_code)];\n+#[allow(unused_variable)];\n+\n fn fail_len(v: ~[int]) -> uint {\n-    let mut i = fail!();\n+    let mut i = 3;\n+    fail!();\n     for v.each |x| { i += 1u; }\n-    //~^ WARNING unreachable statement\n-    //~^^ ERROR the type of this value must be known\n+    //~^ ERROR: unreachable statement\n     return i;\n }\n fn main() {}"}, {"sha": "eb60e34df8f14e5f4259634f7d6bb5673b41fd41", "filename": "src/test/compile-fail/issue-897-2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -8,9 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[deny(unreachable_code)];\n+\n fn g() -> ! { fail!(); }\n fn f() -> ! {\n-    return 42i; //~ ERROR expected `!` but found `int`\n-    g(); //~ WARNING unreachable statement\n+    return g();\n+    g(); //~ ERROR: unreachable statement\n }\n fn main() { }"}, {"sha": "103156175a3fd0d8447568173f6cb8b0be90310f", "filename": "src/test/compile-fail/issue-897.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -8,8 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[deny(unreachable_code)];\n+\n fn f() -> ! {\n-    return 42i; //~ ERROR expected `!` but found `int`\n-    fail!(); //~ WARNING unreachable statement\n+    return fail!();\n+    fail!(); //~ ERROR: unreachable statement\n }\n fn main() { }"}, {"sha": "2ed02e2cdd7db3e3f54ef6d82afcf4c8a0ade012", "filename": "src/test/compile-fail/liveness-break-uninit-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit-2.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -13,7 +13,7 @@ fn foo() -> int {\n \n     while 1 != 2  {\n         break;\n-        x = 0; //~ WARNING unreachable statement\n+        x = 0;\n     }\n \n     debug!(x); //~ ERROR use of possibly uninitialized variable: `x`"}, {"sha": "2dcbad2804c16e7eb70c553d651950f5b3be188b", "filename": "src/test/compile-fail/liveness-break-uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-break-uninit.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -13,7 +13,7 @@ fn foo() -> int {\n \n     loop {\n         break;\n-        x = 0;  //~ WARNING unreachable statement\n+        x = 0;\n     }\n \n     debug!(x); //~ ERROR use of possibly uninitialized variable: `x`"}, {"sha": "a9365eeda1c55a62aa350340763c7205d3435def", "filename": "src/test/compile-fail/unreachable-code.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Funreachable-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed53f9bf0eed5526891d3998d2a570840e453f7/src%2Ftest%2Fcompile-fail%2Funreachable-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-code.rs?ref=aed53f9bf0eed5526891d3998d2a570840e453f7", "patch": "@@ -8,9 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:unreachable statement\n+#[deny(unreachable_code)];\n+#[allow(unused_variable)];\n+\n fn main() {\n   loop{}\n-             // red herring to make sure compilation fails\n-  error!(42 == 'c');\n+\n+  let a = 3; //~ ERROR: unreachable statement\n }"}]}