{"sha": "39ffe9699a2b24c72bebd1c952daf31707b68106", "node_id": "C_kwDOAAsO6NoAKDM5ZmZlOTY5OWEyYjI0YzcyYmViZDFjOTUyZGFmMzE3MDdiNjgxMDY", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-14T17:29:06Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-15T15:27:16Z"}, "message": "Properly implement generics_of for traits", "tree": {"sha": "9757f6351eb5de8526969fe513c4aa40a7e95458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9757f6351eb5de8526969fe513c4aa40a7e95458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39ffe9699a2b24c72bebd1c952daf31707b68106", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmQR49QACgkQgTGiTgx5\n76/0GhAAtDudxQevG6+IavEElSJxjtXajZcawpkhD6gy9PReXNowAoW7wfAHGeLZ\nN6WzuC3Q6tjkgk8h0SArlSBrHIz76oFBJGz70K6MGgHlfs9BiGo7ZMgzUfGPfhWR\n/utgwp3EGVw1QP+LWXcrTgR6ihkrH01rguoVf7eue+JMFKKJrwp85zu8XoJffpF2\n2gMcjwoFRoAcfsbjJ0V6rtYRGc+AQy+xyB7301Lw2F2x/OpIYlarXes21THx80ve\nhmvqNI8tJory6iR6KW6FCOInTS6DXs4AGaFUjSrtdfcHg72ur2RvRTgjCW3XS1/1\nNLWayjQAIhgmPK2iuA56cNGjOe+G3c18BSzu6095hodtXsafGjcIqwq95zpkBDCW\n/ZAqmGprmICU7s3GN9Yqu7pMYHRtr5FhA6CsszqirC7pU6+PNsAtmTUbbaVVOlwI\njdGlIJqxOa48EB1ZwFNaxBUtY+pHqIK9NI43aXrfwpet9008s+4X2EOKiik5Q+Q0\nE3GBbvcfrGJrMA1P4kv/ZmR2inKqvmAArgsKAaR2FR0k7qRnukqBhnoh6gSJN/OK\n72DOZjcBRmiOoUFX630t+azF27/5Cd2X+41UGG9PV3EsJ6FRjGnQAqY+i5nK/Egx\nz+nzJNMewLrtOQ7iqfTyP6CXliSfeJ2DJmtYjAiCx/3WEdK4g1g=\n=szf+\n-----END PGP SIGNATURE-----", "payload": "tree 9757f6351eb5de8526969fe513c4aa40a7e95458\nparent 26c4c1ea97d16863dbbaf2688d5dc7ce1ca3680b\nauthor Santiago Pastorino <spastorino@gmail.com> 1678814946 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1678894036 -0300\n\nProperly implement generics_of for traits\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39ffe9699a2b24c72bebd1c952daf31707b68106", "html_url": "https://github.com/rust-lang/rust/commit/39ffe9699a2b24c72bebd1c952daf31707b68106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39ffe9699a2b24c72bebd1c952daf31707b68106/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26c4c1ea97d16863dbbaf2688d5dc7ce1ca3680b", "url": "https://api.github.com/repos/rust-lang/rust/commits/26c4c1ea97d16863dbbaf2688d5dc7ce1ca3680b", "html_url": "https://github.com/rust-lang/rust/commit/26c4c1ea97d16863dbbaf2688d5dc7ce1ca3680b"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "fae5997e3949d785fbee9d35641d2f22e053f750", "filename": "compiler/rustc_ty_utils/src/assoc.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/39ffe9699a2b24c72bebd1c952daf31707b68106/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ffe9699a2b24c72bebd1c952daf31707b68106/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs?ref=39ffe9699a2b24c72bebd1c952daf31707b68106", "patch": "@@ -289,8 +289,37 @@ fn associated_item_for_impl_trait_in_trait(\n         InternalSubsts::identity_for_item(tcx, opaque_ty_def_id.to_def_id()),\n     )));\n \n-    // Copy generics_of of the opaque.\n-    trait_assoc_ty.generics_of(tcx.generics_of(opaque_ty_def_id).clone());\n+    // Copy generics_of of the opaque type item but the trait is the parent.\n+    trait_assoc_ty.generics_of({\n+        let opaque_ty_generics = tcx.generics_of(opaque_ty_def_id);\n+        let opaque_ty_parent_count = opaque_ty_generics.parent_count;\n+        let mut params = opaque_ty_generics.params.clone();\n+\n+        let parent_generics = tcx.generics_of(trait_def_id);\n+        let parent_count = parent_generics.parent_count + parent_generics.params.len();\n+\n+        let mut trait_fn_params = tcx.generics_of(fn_def_id).params.clone();\n+\n+        for param in &mut params {\n+            param.index = param.index + parent_count as u32 + trait_fn_params.len() as u32\n+                - opaque_ty_parent_count as u32;\n+        }\n+\n+        trait_fn_params.extend(params);\n+        params = trait_fn_params;\n+\n+        let param_def_id_to_index =\n+            params.iter().map(|param| (param.def_id, param.index)).collect();\n+\n+        ty::Generics {\n+            parent: Some(trait_def_id),\n+            parent_count,\n+            params,\n+            param_def_id_to_index,\n+            has_self: false,\n+            has_late_bound_regions: opaque_ty_generics.has_late_bound_regions,\n+        }\n+    });\n \n     // There are no predicates for the synthesized associated type.\n     trait_assoc_ty.explicit_predicates_of(ty::GenericPredicates {"}]}