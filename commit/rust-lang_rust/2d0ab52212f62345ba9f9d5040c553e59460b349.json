{"sha": "2d0ab52212f62345ba9f9d5040c553e59460b349", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMGFiNTIyMTJmNjIzNDViYTlmOWQ1MDQwYzU1M2U1OTQ2MGIzNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:27:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:28:08Z"}, "message": "move variants to API", "tree": {"sha": "52d0212de29792eea89deaf1fff7efeca15dc299", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52d0212de29792eea89deaf1fff7efeca15dc299"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0ab52212f62345ba9f9d5040c553e59460b349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0ab52212f62345ba9f9d5040c553e59460b349", "html_url": "https://github.com/rust-lang/rust/commit/2d0ab52212f62345ba9f9d5040c553e59460b349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0ab52212f62345ba9f9d5040c553e59460b349/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71c7936932c7471ce968223c20fd9bb812524c7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/71c7936932c7471ce968223c20fd9bb812524c7a", "html_url": "https://github.com/rust-lang/rust/commit/71c7936932c7471ce968223c20fd9bb812524c7a"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "58deea1c7ea9406de6de8a6ac98731be586b3128", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=2d0ab52212f62345ba9f9d5040c553e59460b349", "patch": "@@ -3,7 +3,7 @@ use std::sync::Arc;\n use ra_syntax::ast::{self, NameOwner, StructFlavor};\n \n use crate::{\n-    DefId, Name, AsName, Struct, Enum,\n+    DefId, Name, AsName, Struct, Enum, VariantData, StructField,\n     type_ref::TypeRef,\n };\n \n@@ -67,30 +67,6 @@ impl EnumData {\n     }\n }\n \n-/// A single field of an enum variant or struct\n-#[derive(Debug, Clone, PartialEq, Eq)]\n-pub struct StructField {\n-    name: Name,\n-    type_ref: TypeRef,\n-}\n-\n-impl StructField {\n-    pub fn name(&self) -> Name {\n-        self.name.clone()\n-    }\n-    pub fn type_ref(&self) -> &TypeRef {\n-        &self.type_ref\n-    }\n-}\n-\n-/// Fields of an enum variant or struct\n-#[derive(Debug, Clone, PartialEq, Eq)]\n-pub enum VariantData {\n-    Struct(Vec<StructField>),\n-    Tuple(Vec<StructField>),\n-    Unit,\n-}\n-\n impl VariantData {\n     pub fn new(flavor: StructFlavor) -> Self {\n         match flavor {\n@@ -122,8 +98,8 @@ impl VariantData {\n     pub(crate) fn get_field_type_ref(&self, field_name: &Name) -> Option<&TypeRef> {\n         self.fields()\n             .iter()\n-            .find(|f| f.name == *field_name)\n-            .map(|f| &f.type_ref)\n+            .find(|f| f.name() == field_name)\n+            .map(|f| f.type_ref())\n     }\n \n     pub fn fields(&self) -> &[StructField] {"}, {"sha": "3bb42ac584ca584bd81e5ca152086a02236be2dd", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=2d0ab52212f62345ba9f9d5040c553e59460b349", "patch": "@@ -4,7 +4,12 @@ use relative_path::RelativePathBuf;\n use ra_db::{CrateId, Cancelable, FileId};\n use ra_syntax::{ast, TreePtr, SyntaxNode};\n \n-use crate::{Name, db::HirDatabase, DefId, Path, PerNs, nameres::ModuleScope, adt::VariantData};\n+use crate::{\n+    Name, DefId, Path, PerNs,\n+    type_ref::TypeRef,\n+    nameres::ModuleScope,\n+    db::HirDatabase,\n+};\n \n /// hir::Crate describes a single crate. It's the main inteface with which\n /// crate's dependencies interact. Mostly, it should be just a proxy for the\n@@ -114,6 +119,30 @@ impl Module {\n     }\n }\n \n+/// A single field of an enum variant or struct\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub struct StructField {\n+    pub(crate) name: Name,\n+    pub(crate) type_ref: TypeRef,\n+}\n+\n+impl StructField {\n+    pub fn name(&self) -> &Name {\n+        &self.name\n+    }\n+    pub fn type_ref(&self) -> &TypeRef {\n+        &self.type_ref\n+    }\n+}\n+\n+/// Fields of an enum variant or struct\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub enum VariantData {\n+    Struct(Vec<StructField>),\n+    Tuple(Vec<StructField>),\n+    Unit,\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct Struct {\n     pub(crate) def_id: DefId,"}, {"sha": "cd04575d17edd3001d232fe9b2a03477838e2dee", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0ab52212f62345ba9f9d5040c553e59460b349/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=2d0ab52212f62345ba9f9d5040c553e59460b349", "patch": "@@ -59,7 +59,7 @@ pub use self::function::FnSignatureInfo;\n pub use self::code_model_api::{\n     Crate, CrateDependency,\n     Module, ModuleSource, Problem,\n-    Struct, Enum,\n+    Struct, Enum, VariantData, StructField,\n };\n \n pub enum Def {"}]}