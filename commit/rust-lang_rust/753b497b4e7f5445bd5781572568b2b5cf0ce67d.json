{"sha": "753b497b4e7f5445bd5781572568b2b5cf0ce67d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1M2I0OTdiNGU3ZjU0NDViZDU3ODE1NzI1NjhiMmI1Y2YwY2U2N2Q=", "commit": {"author": {"name": "toddaaro", "email": "github@opprobrio.us", "date": "2013-06-19T22:23:14Z"}, "committer": {"name": "toddaaro", "email": "github@opprobrio.us", "date": "2013-06-19T22:23:14Z"}, "message": "Modified a match in resume_task_from_queue that was returning an int that was then matched on to instead use an enum.", "tree": {"sha": "bb83f48e7023220644e79913c0274ba898a6eebf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb83f48e7023220644e79913c0274ba898a6eebf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/753b497b4e7f5445bd5781572568b2b5cf0ce67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/753b497b4e7f5445bd5781572568b2b5cf0ce67d", "html_url": "https://github.com/rust-lang/rust/commit/753b497b4e7f5445bd5781572568b2b5cf0ce67d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/753b497b4e7f5445bd5781572568b2b5cf0ce67d/comments", "author": {"login": "toddaaro", "id": 366431, "node_id": "MDQ6VXNlcjM2NjQzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/366431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddaaro", "html_url": "https://github.com/toddaaro", "followers_url": "https://api.github.com/users/toddaaro/followers", "following_url": "https://api.github.com/users/toddaaro/following{/other_user}", "gists_url": "https://api.github.com/users/toddaaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddaaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddaaro/subscriptions", "organizations_url": "https://api.github.com/users/toddaaro/orgs", "repos_url": "https://api.github.com/users/toddaaro/repos", "events_url": "https://api.github.com/users/toddaaro/events{/privacy}", "received_events_url": "https://api.github.com/users/toddaaro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "toddaaro", "id": 366431, "node_id": "MDQ6VXNlcjM2NjQzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/366431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddaaro", "html_url": "https://github.com/toddaaro", "followers_url": "https://api.github.com/users/toddaaro/followers", "following_url": "https://api.github.com/users/toddaaro/following{/other_user}", "gists_url": "https://api.github.com/users/toddaaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddaaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddaaro/subscriptions", "organizations_url": "https://api.github.com/users/toddaaro/orgs", "repos_url": "https://api.github.com/users/toddaaro/repos", "events_url": "https://api.github.com/users/toddaaro/events{/privacy}", "received_events_url": "https://api.github.com/users/toddaaro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ad8e15a2b7e2024941d74ea4ce261cb501ded9", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ad8e15a2b7e2024941d74ea4ce261cb501ded9", "html_url": "https://github.com/rust-lang/rust/commit/29ad8e15a2b7e2024941d74ea4ce261cb501ded9"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "453d3303db668bc9fb9d58bf4a0e8bfd9cf69880", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/753b497b4e7f5445bd5781572568b2b5cf0ce67d/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753b497b4e7f5445bd5781572568b2b5cf0ce67d/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=753b497b4e7f5445bd5781572568b2b5cf0ce67d", "patch": "@@ -381,52 +381,44 @@ impl Scheduler {\n                     match home {\n                         &Some(Sched(ref home_handle))\n                         if home_handle.sched_id != this.sched_id() => {\n-                            0\n+                            SendHome\n                         }\n                         &Some(AnySched) if this.run_anything => {\n-                            1\n+                            ResumeNow\n                         }\n                         &Some(AnySched) => {\n-                            2\n+                            Requeue\n                         }\n                         &Some(Sched(_)) => {\n-                            3\n+                            ResumeNow\n                         }\n                         &None => {\n-                            4\n+                            Homeless\n                         }\n                     }\n                 };\n \n                 match action_id {\n-                    0 => {\n+                    SendHome => {\n                         rtdebug!(\"sending task home\");\n                         Scheduler::send_task_home(task);\n                         Local::put(this);\n                         return false;\n                     }\n-                    1 => {\n+                    ResumeNow => {\n                         rtdebug!(\"resuming now\");\n                         this.resume_task_immediately(task);\n                         return true;\n                     }\n-                    2 => {\n+                    Requeue => {\n                         rtdebug!(\"re-queueing\")\n                         this.enqueue_task(task);\n                         Local::put(this);\n                         return false;\n                     }\n-                    3 => {\n-                        rtdebug!(\"resuming now\");\n-                        this.resume_task_immediately(task);\n-                        return true;\n-                    }\n-                    4 => {\n+                    Homeless => {\n                         rtabort!(\"task home was None!\");\n                     }\n-                    _ => {\n-                        rtabort!(\"literally, you should not be here\");\n-                    }\n                 }\n             }\n \n@@ -654,6 +646,14 @@ impl Scheduler {\n     }\n }\n \n+// The cases for the below function.                                              \n+enum ResumeAction {\n+    SendHome,\n+    Requeue,\n+    ResumeNow,\n+    Homeless                                                                      \n+}\n+\n impl SchedHandle {\n     pub fn send(&mut self, msg: SchedMessage) {\n         self.queue.push(msg);"}]}