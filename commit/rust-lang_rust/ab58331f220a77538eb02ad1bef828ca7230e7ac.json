{"sha": "ab58331f220a77538eb02ad1bef828ca7230e7ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNTgzMzFmMjIwYTc3NTM4ZWIwMmFkMWJlZjgyOGNhNzIzMGU3YWM=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-08-05T16:30:07Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-08-05T16:30:49Z"}, "message": "Lint inconsistent casing in hex literals (closes #703)", "tree": {"sha": "1981e467d1c2787b0183c497be78155b252189b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1981e467d1c2787b0183c497be78155b252189b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab58331f220a77538eb02ad1bef828ca7230e7ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab58331f220a77538eb02ad1bef828ca7230e7ac", "html_url": "https://github.com/rust-lang/rust/commit/ab58331f220a77538eb02ad1bef828ca7230e7ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab58331f220a77538eb02ad1bef828ca7230e7ac/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78fa1abc93842a8aadf9072e01c132c38baac0e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/78fa1abc93842a8aadf9072e01c132c38baac0e3", "html_url": "https://github.com/rust-lang/rust/commit/78fa1abc93842a8aadf9072e01c132c38baac0e3"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "4081d3d25c057bba63c9058e627a2b39582be4bf", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab58331f220a77538eb02ad1bef828ca7230e7ac/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab58331f220a77538eb02ad1bef828ca7230e7ac/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=ab58331f220a77538eb02ad1bef828ca7230e7ac", "patch": "@@ -211,6 +211,7 @@ All notable changes to this project will be documented in this file.\n [`mem_forget`]: https://github.com/Manishearth/rust-clippy/wiki#mem_forget\n [`min_max`]: https://github.com/Manishearth/rust-clippy/wiki#min_max\n [`misrefactored_assign_op`]: https://github.com/Manishearth/rust-clippy/wiki#misrefactored_assign_op\n+[`mixed_case_hex_literals`]: https://github.com/Manishearth/rust-clippy/wiki#mixed_case_hex_literals\n [`modulo_one`]: https://github.com/Manishearth/rust-clippy/wiki#modulo_one\n [`mut_mut`]: https://github.com/Manishearth/rust-clippy/wiki#mut_mut\n [`mutex_atomic`]: https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic"}, {"sha": "7edb751fb449f667c12c71283fbf2b9839851fea", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab58331f220a77538eb02ad1bef828ca7230e7ac/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab58331f220a77538eb02ad1bef828ca7230e7ac/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=ab58331f220a77538eb02ad1bef828ca7230e7ac", "patch": "@@ -17,7 +17,7 @@ Table of contents:\n \n ## Lints\n \n-There are 160 lints included in this crate:\n+There are 161 lints included in this crate:\n \n name                                                                                                                 | default | meaning\n ---------------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -98,6 +98,7 @@ name\n [mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | `mem::forget` usage on `Drop` types is likely to cause memory leaks\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                                   | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [misrefactored_assign_op](https://github.com/Manishearth/rust-clippy/wiki#misrefactored_assign_op)                   | warn    | having a variable on both sides of an assign op\n+[mixed_case_hex_literals](https://github.com/Manishearth/rust-clippy/wiki#mixed_case_hex_literals)                   | warn    | letter digits in hex literals should be either completely upper- or lowercased\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                             | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...`\n [mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                                         | warn    | using a mutex where an atomic value could be used instead"}, {"sha": "eaac42c5c175ddff20ec4fcf0a2b5628659531a0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab58331f220a77538eb02ad1bef828ca7230e7ac/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab58331f220a77538eb02ad1bef828ca7230e7ac/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=ab58331f220a77538eb02ad1bef828ca7230e7ac", "patch": "@@ -377,6 +377,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         misc::TOPLEVEL_REF_ARG,\n         misc_early::DOUBLE_NEG,\n         misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n+        misc_early::MIXED_CASE_HEX_LITERALS,\n         misc_early::REDUNDANT_CLOSURE_CALL,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         mut_reference::UNNECESSARY_MUT_PASSED,"}, {"sha": "2d6b0a357da55b64a48bc6ddb182b521f74952ae", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ab58331f220a77538eb02ad1bef828ca7230e7ac/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab58331f220a77538eb02ad1bef828ca7230e7ac/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=ab58331f220a77538eb02ad1bef828ca7230e7ac", "patch": "@@ -3,7 +3,7 @@ use std::collections::HashMap;\n use syntax::ast::*;\n use syntax::codemap::Span;\n use syntax::visit::FnKind;\n-use utils::{span_lint, span_help_and_lint, snippet, span_lint_and_then};\n+use utils::{span_lint, span_help_and_lint, snippet, snippet_opt, span_lint_and_then};\n /// **What it does:** This lint checks for structure field patterns bound to wildcards.\n ///\n /// **Why is this bad?** Using `..` instead is shorter and leaves the focus on the fields that are actually bound.\n@@ -64,13 +64,29 @@ declare_lint! {\n     \"`--x` is a double negation of `x` and not a pre-decrement as in C or C++\"\n }\n \n+/// **What it does:** Warns on hexadecimal literals with mixed-case letter digits.\n+///\n+/// **Why is this bad?** It looks confusing.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let y = 0x1a9BAcD;\n+/// ```\n+declare_lint! {\n+    pub MIXED_CASE_HEX_LITERALS, Warn,\n+    \"letter digits in hex literals should be either completely upper- or lowercased\"\n+}\n+\n \n #[derive(Copy, Clone)]\n pub struct MiscEarly;\n \n impl LintPass for MiscEarly {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(UNNEEDED_FIELD_PATTERN, DUPLICATE_UNDERSCORE_ARGUMENT, REDUNDANT_CLOSURE_CALL, DOUBLE_NEG)\n+        lint_array!(UNNEEDED_FIELD_PATTERN, DUPLICATE_UNDERSCORE_ARGUMENT, REDUNDANT_CLOSURE_CALL,\n+                    DOUBLE_NEG, MIXED_CASE_HEX_LITERALS)\n     }\n }\n \n@@ -174,7 +190,28 @@ impl EarlyLintPass for MiscEarly {\n                               DOUBLE_NEG,\n                               expr.span,\n                               \"`--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\");\n-    }\n+                }\n+            }\n+            ExprKind::Lit(ref lit) => {\n+                if_let_chain! {[\n+                    let LitKind::Int(..) = lit.node,\n+                    let Some(src) = snippet_opt(cx, lit.span),\n+                    src.starts_with(\"0x\")\n+                ], {\n+                    let mut seen = (false, false);\n+                    for ch in src.chars() {\n+                        match ch {\n+                            'a' ... 'f' => seen.0 = true,\n+                            'A' ... 'F' => seen.1 = true,\n+                            'i' | 'u'   => break,   // start of suffix already\n+                            _ => ()\n+                        }\n+                    }\n+                    if seen.0 && seen.1 {\n+                        span_lint(cx, MIXED_CASE_HEX_LITERALS, lit.span,\n+                                  \"inconsistent casing in hexadecimal literal\");\n+                    }\n+                }}\n             }\n             _ => ()\n         }"}, {"sha": "fb031ea7c969cb24c1639c7ce927c0c76b1ee0ca", "filename": "tests/compile-fail/literals.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ab58331f220a77538eb02ad1bef828ca7230e7ac/tests%2Fcompile-fail%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab58331f220a77538eb02ad1bef828ca7230e7ac/tests%2Fcompile-fail%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fliterals.rs?ref=ab58331f220a77538eb02ad1bef828ca7230e7ac", "patch": "@@ -0,0 +1,15 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![deny(mixed_case_hex_literals)]\n+#![allow(dead_code)]\n+\n+fn main() {\n+    let ok1 = 0xABCD;\n+    let ok3 = 0xab_cd;\n+    let ok4 = 0xab_cd_i32;\n+    let ok5 = 0xAB_CD_u32;\n+    let ok5 = 0xAB_CD_isize;\n+    let fail1 = 0xabCD;       //~ERROR inconsistent casing in hexadecimal literal\n+    let fail2 = 0xabCD_u32;   //~ERROR inconsistent casing in hexadecimal literal\n+    let fail2 = 0xabCD_isize; //~ERROR inconsistent casing in hexadecimal literal\n+}"}]}