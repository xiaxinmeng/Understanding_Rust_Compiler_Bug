{"sha": "a88d9effbca3a228136dff82b4d47a8bf8276b64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OGQ5ZWZmYmNhM2EyMjgxMzZkZmY4MmI0ZDQ3YThiZjgyNzZiNjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-27T00:41:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-27T00:41:22Z"}, "message": "rt: Don't run arbitrary destructors on cycle collection; that's just broken.", "tree": {"sha": "5e0e75e67810fc5042772b89f79958e127202393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e0e75e67810fc5042772b89f79958e127202393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a88d9effbca3a228136dff82b4d47a8bf8276b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a88d9effbca3a228136dff82b4d47a8bf8276b64", "html_url": "https://github.com/rust-lang/rust/commit/a88d9effbca3a228136dff82b4d47a8bf8276b64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a88d9effbca3a228136dff82b4d47a8bf8276b64/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c973142df3661a23a085bfb655300c08ca19764", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c973142df3661a23a085bfb655300c08ca19764", "html_url": "https://github.com/rust-lang/rust/commit/5c973142df3661a23a085bfb655300c08ca19764"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "aebf472ab36f138ed548af65cf9d3585302d09c4", "filename": "src/rt/rust_cc.cpp", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a88d9effbca3a228136dff82b4d47a8bf8276b64/src%2Frt%2Frust_cc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a88d9effbca3a228136dff82b4d47a8bf8276b64/src%2Frt%2Frust_cc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.cpp?ref=a88d9effbca3a228136dff82b4d47a8bf8276b64", "patch": "@@ -419,16 +419,9 @@ sweep(rust_task *task, const std::set<void *> &marked) {\n     while (begin != end) {\n         void *alloc = begin->first;\n         if (marked.find(alloc) == marked.end()) {\n-            const type_desc *tydesc = begin->second;\n-\n             //DPRINT(\"object is part of a cycle: %p\\n\", alloc);\n \n-            // Run the destructor.\n-            // TODO: What if it fails?\n-            if (tydesc->drop_glue) {\n-                tydesc->drop_glue(NULL, task, (void *)tydesc,\n-                                  tydesc->first_param, alloc);\n-            }\n+            // FIXME: Run the destructor, *if* it's a resource.\n \n             task->free(alloc);\n         }"}]}