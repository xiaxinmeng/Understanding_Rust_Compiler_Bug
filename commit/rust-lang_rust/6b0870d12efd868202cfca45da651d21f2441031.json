{"sha": "6b0870d12efd868202cfca45da651d21f2441031", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMDg3MGQxMmVmZDg2ODIwMmNmY2E0NWRhNjUxZDIxZjI0NDEwMzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-11T15:00:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-11T15:00:31Z"}, "message": "Simplify", "tree": {"sha": "aa9f234501256a711c3f9aa9f7ee6afaf6181ebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa9f234501256a711c3f9aa9f7ee6afaf6181ebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b0870d12efd868202cfca45da651d21f2441031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0870d12efd868202cfca45da651d21f2441031", "html_url": "https://github.com/rust-lang/rust/commit/6b0870d12efd868202cfca45da651d21f2441031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b0870d12efd868202cfca45da651d21f2441031/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "997c959d4f373df0cbba09609c5e4d8215d3d0c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/997c959d4f373df0cbba09609c5e4d8215d3d0c7", "html_url": "https://github.com/rust-lang/rust/commit/997c959d4f373df0cbba09609c5e4d8215d3d0c7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ff0758da0a515cf562f5472fab27766ba0c147b9", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b0870d12efd868202cfca45da651d21f2441031/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0870d12efd868202cfca45da651d21f2441031/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=6b0870d12efd868202cfca45da651d21f2441031", "patch": "@@ -14,6 +14,7 @@ use ra_syntax::{ast, AstNode, AstPtr};\n use rustc_hash::FxHashMap;\n \n use crate::{\n+    attr::Attrs,\n     db::DefDatabase,\n     expr::{Expr, ExprId, Pat, PatId},\n     item_scope::BuiltinShadowMode,\n@@ -102,6 +103,10 @@ impl Expander {\n         InFile { file_id: self.current_file_id, value }\n     }\n \n+    pub(crate) fn parse_attrs(&self, owner: &dyn ast::AttrsOwner) -> Attrs {\n+        Attrs::new(owner, &self.hygiene)\n+    }\n+\n     fn parse_path(&mut self, path: ast::Path) -> Option<Path> {\n         Path::from_src(path, &self.hygiene)\n     }"}, {"sha": "06df88a34eef765acc9f540a4afc8e805921c99a", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6b0870d12efd868202cfca45da651d21f2441031/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0870d12efd868202cfca45da651d21f2441031/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=6b0870d12efd868202cfca45da651d21f2441031", "patch": "@@ -2,9 +2,7 @@\n //! representation.\n \n use either::Either;\n-\n use hir_expand::{\n-    hygiene::Hygiene,\n     name::{name, AsName, Name},\n     MacroDefId, MacroDefKind,\n };\n@@ -18,10 +16,8 @@ use ra_syntax::{\n };\n use test_utils::tested_by;\n \n-use super::{ExprSource, PatSource};\n use crate::{\n     adt::StructKind,\n-    attr::Attrs,\n     body::{Body, BodySourceMap, Expander, PatPtr, SyntheticSyntax},\n     builtin_type::{BuiltinFloat, BuiltinInt},\n     db::DefDatabase,\n@@ -37,6 +33,8 @@ use crate::{\n     ModuleDefId, StaticLoc, StructLoc, TraitLoc, TypeAliasLoc, UnionLoc,\n };\n \n+use super::{ExprSource, PatSource};\n+\n pub(super) fn lower(\n     db: &dyn DefDatabase,\n     def: DefWithBodyId,\n@@ -309,10 +307,7 @@ impl ExprCollector<'_> {\n                         .inspect(|field| field_ptrs.push(AstPtr::new(field)))\n                         .filter_map(|field| {\n                             let module_id = ContainerId::DefWithBodyId(self.def).module(self.db);\n-                            let attrs = Attrs::new(\n-                                &field,\n-                                &Hygiene::new(self.db.upcast(), self.expander.current_file_id),\n-                            );\n+                            let attrs = self.expander.parse_attrs(&field);\n \n                             if !attrs.is_cfg_enabled(&crate_graph[module_id.krate].cfg_options) {\n                                 return None;"}]}