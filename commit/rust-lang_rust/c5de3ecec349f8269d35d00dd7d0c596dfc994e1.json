{"sha": "c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "node_id": "C_kwDOAAsO6NoAKGM1ZGUzZWNlYzM0OWY4MjY5ZDM1ZDAwZGQ3ZDBjNTk2ZGZjOTk0ZTE", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-12T14:16:24Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-12T14:16:24Z"}, "message": "link lint function with `decorate` function param to `struct_lint_level`", "tree": {"sha": "b756ec742895a45c0305f4adfa392edc08fa6a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b756ec742895a45c0305f4adfa392edc08fa6a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "html_url": "https://github.com/rust-lang/rust/commit/c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1c3e786613932f04472e7616a0dfd856cda17ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c3e786613932f04472e7616a0dfd856cda17ad", "html_url": "https://github.com/rust-lang/rust/commit/b1c3e786613932f04472e7616a0dfd856cda17ad"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "63a11877333ef64b81b962ba92b7dbdd8c5e85fe", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "patch": "@@ -574,6 +574,11 @@ pub trait LintContext: Sized {\n     fn sess(&self) -> &Session;\n     fn lints(&self) -> &LintStore;\n \n+    /// Emit a lint at the appropriate level, with an optional associated span and an existing diagnostic.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup_with_diagnostics(\n         &self,\n         lint: &'static Lint,\n@@ -872,6 +877,11 @@ pub trait LintContext: Sized {\n \n     // FIXME: These methods should not take an Into<MultiSpan> -- instead, callers should need to\n     // set the span in their `decorate` function (preferably using set_span).\n+    /// Emit a lint at the appropriate level, with an optional associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -893,6 +903,11 @@ pub trait LintContext: Sized {\n         self.lookup(lint, Some(span), decorator.msg(), |diag| decorator.decorate_lint(diag));\n     }\n \n+    /// Emit a lint at the appropriate level, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn struct_span_lint<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -914,6 +929,10 @@ pub trait LintContext: Sized {\n     }\n \n     /// Emit a lint at the appropriate level, with no associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "d3879ff487de9c81df1adb64e7884816bffa6776", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "patch": "@@ -1069,6 +1069,10 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n \n     /// Used to emit a lint-related diagnostic based on the current state of\n     /// this lint context.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub(crate) fn struct_lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "99b38bcea0814889deb1719e9cfcf6f3807bdd88", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5de3ecec349f8269d35d00dd7d0c596dfc994e1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=c5de3ecec349f8269d35d00dd7d0c596dfc994e1", "patch": "@@ -2826,6 +2826,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_span_lint_hir(\n         self,\n         lint: &'static Lint,\n@@ -2851,6 +2856,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.struct_lint_node(lint, id, decorator.msg(), |diag| decorator.decorate_lint(diag))\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_lint_node(\n         self,\n         lint: &'static Lint,"}]}