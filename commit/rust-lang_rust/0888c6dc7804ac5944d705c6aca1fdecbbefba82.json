{"sha": "0888c6dc7804ac5944d705c6aca1fdecbbefba82", "node_id": "C_kwDOAAsO6NoAKDA4ODhjNmRjNzgwNGFjNTk0NGQ3MDVjNmFjYTFmZGVjYmJlZmJhODI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-14T14:06:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-14T14:06:46Z"}, "message": "Rollup merge of #89865 - tmandry:llvm-static, r=Mark-Simulacrum\n\nAllow static linking LLVM with ThinLTO\n\nThere's no reason not to allow this if the user wants it. It works, at least in a local build on linux host.\n\nFor our use case, we're happy to spend more time building the compiler if it creates a speedup every time we run it, and we've observed speedups like this with clang.", "tree": {"sha": "9f6712ee5e8ce80bd808dcafb2d90248e7375b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f6712ee5e8ce80bd808dcafb2d90248e7375b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0888c6dc7804ac5944d705c6aca1fdecbbefba82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhaDl2CRBK7hj4Ov3rIwAAM28IAEnhFmWa1WUM1+gD7d5M7/73\nyyd8Of3sOBZPh+yF1Mcfjt9/+lPQ+PPBirr0YctiSNviwbnIzjfiBRheckDC2UTA\ny2G9kZq345VRvdWdURek1/aZfSdpyppVPCh22kRVCfmTV28//ZFpvtGeHs8vkKWF\nuCziRRbidFWbhzX8uObhbTa3ozOdYSxvpiMe94xlUPGovbi4oacOUfQMZcCqve+u\n+CeaCgO3+5lfw0FljNbxJ0/7Z7BE5ypSQQcZ1UID4DIovUeovwBP7ToPyIwJbL1u\n6Mkl6UGdQH+Z78OjqmQjaHaMhJqJmdyAfTSpoBMwjwU9eze+AK0MgMHSBjGyV5Y=\n=3/nw\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f6712ee5e8ce80bd808dcafb2d90248e7375b0a\nparent 29081f95e9c7db9abd52eeeb794472a6636c9778\nparent c9af192690d52818e83acb8b591d23dbab856f77\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634220406 +0200\ncommitter GitHub <noreply@github.com> 1634220406 +0200\n\nRollup merge of #89865 - tmandry:llvm-static, r=Mark-Simulacrum\n\nAllow static linking LLVM with ThinLTO\n\nThere's no reason not to allow this if the user wants it. It works, at least in a local build on linux host.\n\nFor our use case, we're happy to spend more time building the compiler if it creates a speedup every time we run it, and we've observed speedups like this with clang.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0888c6dc7804ac5944d705c6aca1fdecbbefba82", "html_url": "https://github.com/rust-lang/rust/commit/0888c6dc7804ac5944d705c6aca1fdecbbefba82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0888c6dc7804ac5944d705c6aca1fdecbbefba82/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29081f95e9c7db9abd52eeeb794472a6636c9778", "url": "https://api.github.com/repos/rust-lang/rust/commits/29081f95e9c7db9abd52eeeb794472a6636c9778", "html_url": "https://github.com/rust-lang/rust/commit/29081f95e9c7db9abd52eeeb794472a6636c9778"}, {"sha": "c9af192690d52818e83acb8b591d23dbab856f77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9af192690d52818e83acb8b591d23dbab856f77", "html_url": "https://github.com/rust-lang/rust/commit/c9af192690d52818e83acb8b591d23dbab856f77"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "e658d958d0a26970895091a507d8fb7010f8545d", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0888c6dc7804ac5944d705c6aca1fdecbbefba82/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0888c6dc7804ac5944d705c6aca1fdecbbefba82/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=0888c6dc7804ac5944d705c6aca1fdecbbefba82", "patch": "@@ -825,15 +825,10 @@ impl Config {\n                 };\n             }\n \n-            if config.llvm_thin_lto {\n-                // If we're building with ThinLTO on, we want to link to LLVM\n-                // shared, to avoid re-doing ThinLTO (which happens in the link\n-                // step) with each stage.\n-                assert_ne!(\n-                    llvm.link_shared,\n-                    Some(false),\n-                    \"setting link-shared=false is incompatible with thin-lto=true\"\n-                );\n+            if config.llvm_thin_lto && llvm.link_shared.is_none() {\n+                // If we're building with ThinLTO on, by default we want to link\n+                // to LLVM shared, to avoid re-doing ThinLTO (which happens in\n+                // the link step) with each stage.\n                 config.llvm_link_shared = true;\n             }\n         }"}]}