{"sha": "32a9614a4e466d5b27227948c9500743066628c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYTk2MTRhNGU0NjZkNWIyNzIyNzk0OGM5NTAwNzQzMDY2NjI4Yzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T15:05:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T15:05:49Z"}, "message": "this is for you, tidy", "tree": {"sha": "5a6e3a30112a3cdc7f6d55789c987816866edcdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a6e3a30112a3cdc7f6d55789c987816866edcdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32a9614a4e466d5b27227948c9500743066628c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32a9614a4e466d5b27227948c9500743066628c8", "html_url": "https://github.com/rust-lang/rust/commit/32a9614a4e466d5b27227948c9500743066628c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32a9614a4e466d5b27227948c9500743066628c8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b880074734e1916f6347d46de28fa44b1f1bae2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b880074734e1916f6347d46de28fa44b1f1bae2", "html_url": "https://github.com/rust-lang/rust/commit/6b880074734e1916f6347d46de28fa44b1f1bae2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ff10c33681d22ccebde73c322812d59a49873e99", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32a9614a4e466d5b27227948c9500743066628c8/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a9614a4e466d5b27227948c9500743066628c8/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=32a9614a4e466d5b27227948c9500743066628c8", "patch": "@@ -15,8 +15,8 @@\n //! moving the values they contain: you can move out of a `Box<T>`, or you can use [`mem::swap`].\n //! [`Pin<P>`] wraps a pointer type `P`, so `Pin<Box<T>>` functions much like a regular `Box<T>`:\n //! when a `Pin<Box<T>>` gets dropped, so do its contents, and the memory gets deallocated.\n-//! Similarily, `Pin<&mut T>` is a lot like `&mut T`. However, [`Pin<P>`] does not let clients actually\n-//! obtain a `Box<T>` or `&mut T` to pinned data, which implies that you cannot use\n+//! Similarily, `Pin<&mut T>` is a lot like `&mut T`. However, [`Pin<P>`] does not let clients\n+//! actually obtain a `Box<T>` or `&mut T` to pinned data, which implies that you cannot use\n //! operations such as [`mem::swap`]:\n //! ```\n //! use std::pin::Pin;"}]}