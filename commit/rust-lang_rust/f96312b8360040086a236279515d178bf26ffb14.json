{"sha": "f96312b8360040086a236279515d178bf26ffb14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjMxMmI4MzYwMDQwMDg2YTIzNjI3OTUxNWQxNzhiZjI2ZmZiMTQ=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-10T18:27:38Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-10T18:27:38Z"}, "message": "Merge #486\n\n486: Fix handling of where clauses in tuple structs r=matklad a=DJMcNab\n\nOriginally reported by @max-frai on discord.\r\n\r\nAs I was writing this, I was wondering if there's any way we can compare our test suite against libsyntax (i.e. check that it similarly fails/succeeds). Any ideas?\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "8a90b787c2aa3377dc5eea4baa024a2d9442dbd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a90b787c2aa3377dc5eea4baa024a2d9442dbd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96312b8360040086a236279515d178bf26ffb14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96312b8360040086a236279515d178bf26ffb14", "html_url": "https://github.com/rust-lang/rust/commit/f96312b8360040086a236279515d178bf26ffb14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96312b8360040086a236279515d178bf26ffb14/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "1a7a68de165fe89457e130de90e50a90c0b0d3c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a7a68de165fe89457e130de90e50a90c0b0d3c2", "html_url": "https://github.com/rust-lang/rust/commit/1a7a68de165fe89457e130de90e50a90c0b0d3c2"}, {"sha": "afdb56990212eb385e77fff9a6316a16e50bd1d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/afdb56990212eb385e77fff9a6316a16e50bd1d4", "html_url": "https://github.com/rust-lang/rust/commit/afdb56990212eb385e77fff9a6316a16e50bd1d4"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "495462ca7ac894dcba40bea0d0a1f677e9eee702", "filename": "crates/ra_syntax/src/grammar/items/nominal.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs?ref=f96312b8360040086a236279515d178bf26ffb14", "patch": "@@ -29,6 +29,10 @@ pub(super) fn struct_def(p: &mut Parser, kind: SyntaxKind) {\n         L_CURLY => named_field_def_list(p),\n         L_PAREN if kind == STRUCT_KW => {\n             pos_field_list(p);\n+            // test tuple_struct_where\n+            // struct Test<T>(T) where T: Clone;\n+            // struct Test<T>(T);\n+            type_params::opt_where_clause(p);\n             p.expect(SEMI);\n         }\n         _ if kind == STRUCT_KW => {"}, {"sha": "ddd59016dc62f8e4b814e82a7a9fd0485e0aa057", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0114_tuple_struct_where.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rs?ref=f96312b8360040086a236279515d178bf26ffb14", "patch": "@@ -0,0 +1,2 @@\n+struct Test<T>(T) where T: Clone;\n+struct Test<T>(T);"}, {"sha": "b7de83072fabcb8077d60b7f7af912e77413d270", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0114_tuple_struct_where.txt", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f96312b8360040086a236279515d178bf26ffb14/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt?ref=f96312b8360040086a236279515d178bf26ffb14", "patch": "@@ -0,0 +1,62 @@\n+SOURCE_FILE@[0; 53)\n+  STRUCT_DEF@[0; 33)\n+    STRUCT_KW@[0; 6)\n+    WHITESPACE@[6; 7)\n+    NAME@[7; 11)\n+      IDENT@[7; 11) \"Test\"\n+    TYPE_PARAM_LIST@[11; 14)\n+      L_ANGLE@[11; 12)\n+      TYPE_PARAM@[12; 13)\n+        NAME@[12; 13)\n+          IDENT@[12; 13) \"T\"\n+      R_ANGLE@[13; 14)\n+    POS_FIELD_LIST@[14; 17)\n+      L_PAREN@[14; 15)\n+      POS_FIELD@[15; 16)\n+        PATH_TYPE@[15; 16)\n+          PATH@[15; 16)\n+            PATH_SEGMENT@[15; 16)\n+              NAME_REF@[15; 16)\n+                IDENT@[15; 16) \"T\"\n+      R_PAREN@[16; 17)\n+    WHITESPACE@[17; 18)\n+    WHERE_CLAUSE@[18; 32)\n+      WHERE_KW@[18; 23)\n+      WHITESPACE@[23; 24)\n+      WHERE_PRED@[24; 32)\n+        PATH_TYPE@[24; 25)\n+          PATH@[24; 25)\n+            PATH_SEGMENT@[24; 25)\n+              NAME_REF@[24; 25)\n+                IDENT@[24; 25) \"T\"\n+        COLON@[25; 26)\n+        WHITESPACE@[26; 27)\n+        PATH_TYPE@[27; 32)\n+          PATH@[27; 32)\n+            PATH_SEGMENT@[27; 32)\n+              NAME_REF@[27; 32)\n+                IDENT@[27; 32) \"Clone\"\n+    SEMI@[32; 33)\n+  WHITESPACE@[33; 34)\n+  STRUCT_DEF@[34; 52)\n+    STRUCT_KW@[34; 40)\n+    WHITESPACE@[40; 41)\n+    NAME@[41; 45)\n+      IDENT@[41; 45) \"Test\"\n+    TYPE_PARAM_LIST@[45; 48)\n+      L_ANGLE@[45; 46)\n+      TYPE_PARAM@[46; 47)\n+        NAME@[46; 47)\n+          IDENT@[46; 47) \"T\"\n+      R_ANGLE@[47; 48)\n+    POS_FIELD_LIST@[48; 51)\n+      L_PAREN@[48; 49)\n+      POS_FIELD@[49; 50)\n+        PATH_TYPE@[49; 50)\n+          PATH@[49; 50)\n+            PATH_SEGMENT@[49; 50)\n+              NAME_REF@[49; 50)\n+                IDENT@[49; 50) \"T\"\n+      R_PAREN@[50; 51)\n+    SEMI@[51; 52)\n+  WHITESPACE@[52; 53)"}]}