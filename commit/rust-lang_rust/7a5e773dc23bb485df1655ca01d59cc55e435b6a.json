{"sha": "7a5e773dc23bb485df1655ca01d59cc55e435b6a", "node_id": "C_kwDOAAsO6NoAKDdhNWU3NzNkYzIzYmI0ODVkZjE2NTVjYTAxZDU5Y2M1NWU0MzViNmE", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-06-24T16:12:08Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:54:37Z"}, "message": "fall back on the blank path if out_filename is blank", "tree": {"sha": "1a41671a50faa27eca24edd436e3927dab2eeb45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a41671a50faa27eca24edd436e3927dab2eeb45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a5e773dc23bb485df1655ca01d59cc55e435b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a5e773dc23bb485df1655ca01d59cc55e435b6a", "html_url": "https://github.com/rust-lang/rust/commit/7a5e773dc23bb485df1655ca01d59cc55e435b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a5e773dc23bb485df1655ca01d59cc55e435b6a/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a206121388524c6b0d5b8c5f97fc732e4ad16709", "url": "https://api.github.com/repos/rust-lang/rust/commits/a206121388524c6b0d5b8c5f97fc732e4ad16709", "html_url": "https://github.com/rust-lang/rust/commit/a206121388524c6b0d5b8c5f97fc732e4ad16709"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e6072901aaa43df068a8df0f72d27de5f9980471", "filename": "compiler/rustc_metadata/src/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a5e773dc23bb485df1655ca01d59cc55e435b6a/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5e773dc23bb485df1655ca01d59cc55e435b6a/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs?ref=7a5e773dc23bb485df1655ca01d59cc55e435b6a", "patch": "@@ -64,7 +64,7 @@ pub fn encode_and_write_metadata(\n     // which is why we create it inside the output directory specifically.\n     let metadata_tmpdir = TempFileBuilder::new()\n         .prefix(\"rmeta\")\n-        .tempdir_in(out_filename.parent().unwrap_or_else(|| Path::new(\"tmp\")))\n+        .tempdir_in(out_filename.parent().unwrap_or_else(|| Path::new(\"\")))\n         .unwrap_or_else(|err| tcx.sess.fatal(&format!(\"couldn't create a temp dir: {}\", err)));\n     let metadata_tmpdir = MaybeTempDir::new(metadata_tmpdir, tcx.sess.opts.cg.save_temps);\n     let metadata_filename = metadata_tmpdir.as_ref().join(METADATA_FILENAME);"}]}