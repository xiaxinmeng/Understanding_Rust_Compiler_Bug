{"sha": "c42bbc5e37dee8b1de309a6dd5b892651de4b676", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MmJiYzVlMzdkZWU4YjFkZTMwOWE2ZGQ1Yjg5MjY1MWRlNGI2NzY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-02-27T15:03:18Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-02-27T15:03:18Z"}, "message": "Ignore hover on builtin macro", "tree": {"sha": "ba013c582f4c6e1c24adf3d1c943da939c751362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba013c582f4c6e1c24adf3d1c943da939c751362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c42bbc5e37dee8b1de309a6dd5b892651de4b676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c42bbc5e37dee8b1de309a6dd5b892651de4b676", "html_url": "https://github.com/rust-lang/rust/commit/c42bbc5e37dee8b1de309a6dd5b892651de4b676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c42bbc5e37dee8b1de309a6dd5b892651de4b676/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57f0d6cba3b2c7b0a2ac384ab0cb73983afd2a5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/57f0d6cba3b2c7b0a2ac384ab0cb73983afd2a5e", "html_url": "https://github.com/rust-lang/rust/commit/57f0d6cba3b2c7b0a2ac384ab0cb73983afd2a5e"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "dfa0f1d973c0a11d9a566e63a717386f6792138c", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c42bbc5e37dee8b1de309a6dd5b892651de4b676/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c42bbc5e37dee8b1de309a6dd5b892651de4b676/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=c42bbc5e37dee8b1de309a6dd5b892651de4b676", "patch": "@@ -174,6 +174,12 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         .ancestors()\n         .find(|n| ast::Expr::cast(n.clone()).is_some() || ast::Pat::cast(n.clone()).is_some())?;\n \n+    // if this node is a MACRO_CALL, it means that `descend_into_macros` is failed to resolve.\n+    // (e.g expanding a builtin macro). So we give up here.\n+    if node.kind() == MACRO_CALL {\n+        return None;\n+    }\n+\n     // FIXME: Currently `hover::typeof` do not work inside\n     // macro expansion such that if the hover range is pointing to\n     // a string literal, the following type_of will return None.\n@@ -801,6 +807,25 @@ fn func(foo: i32) { if true { <|>foo; }; }\n         );\n     }\n \n+    #[test]\n+    fn test_hover_through_literal_string_in_builtin_macro() {\n+        check_hover_no_result(\n+            r#\"\n+            //- /lib.rs            \n+            #[rustc_builtin_macro]\n+            macro_rules! assert {\n+                ($cond:expr) => {{ /* compiler built-in */ }};\n+                ($cond:expr,) => {{ /* compiler built-in */ }};\n+                ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};\n+            }        \n+\n+            fn foo() {\n+                assert!(\"hel<|>lo\");\n+            }\n+            \"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hover_non_ascii_space_doc() {\n         check_hover_result("}]}