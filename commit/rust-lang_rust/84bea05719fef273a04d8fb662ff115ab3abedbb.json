{"sha": "84bea05719fef273a04d8fb662ff115ab3abedbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YmVhMDU3MTlmZWYyNzNhMDRkOGZiNjYyZmYxMTVhYjNhYmVkYmI=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2017-10-15T11:35:20Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2017-10-26T17:20:36Z"}, "message": "Add tests", "tree": {"sha": "a292090de5967c8e8d12aa97324d0b70bf8ac9c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a292090de5967c8e8d12aa97324d0b70bf8ac9c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84bea05719fef273a04d8fb662ff115ab3abedbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84bea05719fef273a04d8fb662ff115ab3abedbb", "html_url": "https://github.com/rust-lang/rust/commit/84bea05719fef273a04d8fb662ff115ab3abedbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84bea05719fef273a04d8fb662ff115ab3abedbb/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf8f43233cd281ef005cda050e887406fa9e1e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf8f43233cd281ef005cda050e887406fa9e1e6", "html_url": "https://github.com/rust-lang/rust/commit/abf8f43233cd281ef005cda050e887406fa9e1e6"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "e9c8d575f1df67532ba4255f17a70773bffde0e5", "filename": "tests/source/configs-match_arm_forces_newline-true.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/84bea05719fef273a04d8fb662ff115ab3abedbb/tests%2Fsource%2Fconfigs-match_arm_forces_newline-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bea05719fef273a04d8fb662ff115ab3abedbb/tests%2Fsource%2Fconfigs-match_arm_forces_newline-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-match_arm_forces_newline-true.rs?ref=84bea05719fef273a04d8fb662ff115ab3abedbb", "patch": "@@ -0,0 +1,20 @@\n+// rustfmt-match_arm_forces_newline: true\n+// rustfmt-wrap_match_arms: false\n+\n+// match_arm_forces_newline puts all match arms bodies in a newline and indents\n+// them.\n+\n+fn main() {\n+    match x() {\n+        // a short non-empty block\n+        X0 => { f(); }\n+        // a long non-empty block\n+        X1 => { some.really.long.expression.fooooooooooooooooooooooooooooooooooooooooo().baaaaarrrrrrrrrrrrrrrrrrrrrrrrrr(); }\n+        // an empty block\n+        X2 => {}\n+        // a short non-block\n+        X3 => println!(\"ok\"),\n+        // a long non-block\n+        X4 => foo.bar.baz.test.x.y.z.a.s.d.fasdfasdf.asfads.fasd.fasdfasdf.dfasfdsaf(),\n+    }\n+}"}, {"sha": "5629a56d66462063583f77386a02463c91ac3464", "filename": "tests/target/configs-match_arm_forces_newline-true.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/84bea05719fef273a04d8fb662ff115ab3abedbb/tests%2Ftarget%2Fconfigs-match_arm_forces_newline-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bea05719fef273a04d8fb662ff115ab3abedbb/tests%2Ftarget%2Fconfigs-match_arm_forces_newline-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-match_arm_forces_newline-true.rs?ref=84bea05719fef273a04d8fb662ff115ab3abedbb", "patch": "@@ -0,0 +1,44 @@\n+// rustfmt-match_arm_forces_newline: true\n+// rustfmt-wrap_match_arms: false\n+\n+// match_arm_forces_newline puts all match arms bodies in a newline and indents\n+// them.\n+\n+fn main() {\n+    match x() {\n+        // a short non-empty block\n+        X0 => {\n+            f();\n+        }\n+        // a long non-empty block\n+        X1 => {\n+            some.really\n+                .long\n+                .expression\n+                .fooooooooooooooooooooooooooooooooooooooooo()\n+                .baaaaarrrrrrrrrrrrrrrrrrrrrrrrrr();\n+        }\n+        // an empty block\n+        X2 =>\n+            {}\n+        // a short non-block\n+        X3 =>\n+            println!(\"ok\"),\n+        // a long non-block\n+        X4 =>\n+            foo.bar\n+                .baz\n+                .test\n+                .x\n+                .y\n+                .z\n+                .a\n+                .s\n+                .d\n+                .fasdfasdf\n+                .asfads\n+                .fasd\n+                .fasdfasdf\n+                .dfasfdsaf(),\n+    }\n+}"}]}