{"sha": "58768b2a6343451bae8c4efb93ce7b1d598c914d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzY4YjJhNjM0MzQ1MWJhZThjNGVmYjkzY2U3YjFkNTk4YzkxNGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-11T16:37:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-11T16:37:32Z"}, "message": "Revert \"Support LSP 3.15\"\n\nThis reverts commit fcccf8ec59420d20edc53f7d787f2412e297f5fe.\n\nThis causes rust-analyzer die immediatelly after startup", "tree": {"sha": "b5a6ae0efb25d4f9a4cb69e626d0600838ccd842", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a6ae0efb25d4f9a4cb69e626d0600838ccd842"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58768b2a6343451bae8c4efb93ce7b1d598c914d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58768b2a6343451bae8c4efb93ce7b1d598c914d", "html_url": "https://github.com/rust-lang/rust/commit/58768b2a6343451bae8c4efb93ce7b1d598c914d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58768b2a6343451bae8c4efb93ce7b1d598c914d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "712700d8e027b108f9c4f8fa9acc2f25e453b6d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/712700d8e027b108f9c4f8fa9acc2f25e453b6d1", "html_url": "https://github.com/rust-lang/rust/commit/712700d8e027b108f9c4f8fa9acc2f25e453b6d1"}], "stats": {"total": 44, "additions": 8, "deletions": 36}, "files": [{"sha": "caa52fb69d1d639d9a23af6b5a1f9aef95f09094", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -620,7 +620,7 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.63.0\"\n+version = \"0.61.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1048,7 +1048,7 @@ dependencies = [\n  \"jod-thread 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lsp-server 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lsp-types 0.63.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lsp-types 0.61.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_ide 0.1.0\",\n  \"ra_prof 0.1.0\",\n@@ -1839,7 +1839,7 @@ dependencies = [\n \"checksum lock_api 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e57b3997725d2b60dbec1297f6c2e2957cc383db1cebd6be812163f969c7d586\"\n \"checksum log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7\"\n \"checksum lsp-server 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0ba36405bd742139ab79c246ca5adb7fde2fe1a0f495e2c8e2f607b607dedb12\"\n-\"checksum lsp-types 0.63.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"031d6b53a686f8eef69138f5b834b7eadadb0dd86f4c888504476ee1b17ae8d7\"\n+\"checksum lsp-types 0.61.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fa3268fbe8beb2795c2fb327bf44f4f3d24f5fe9ebc18d7e2980afd444d72bcf\"\n \"checksum matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n \"checksum memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88579771288728879b57485cc7d6b07d648c9f0141eb955f8ab7f9d45394468e\"\n \"checksum memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"75189eb85871ea5c2e2c15abbdd541185f63b408415e5051f5cac122d8c774b9\""}, {"sha": "41672eaffe27bada736e5d6280706d0878e63bd2", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -14,7 +14,7 @@ serde_json = \"1.0.34\"\n serde = { version = \"1.0.83\", features = [\"derive\"] }\n crossbeam-channel = \"0.4\"\n log = \"0.4.3\"\n-lsp-types = { version = \"0.63.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.61.0\", features = [\"proposed\"] }\n rustc-hash = \"1.0\"\n parking_lot = \"0.10.0\"\n jod-thread = \"0.1.0\""}, {"sha": "eea0965edbea6d77ea1eaf4828e685b490c2a6d2", "filename": "crates/ra_lsp_server/src/caps.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -5,7 +5,7 @@ use lsp_types::{\n     DocumentOnTypeFormattingOptions, FoldingRangeProviderCapability, GenericCapability,\n     ImplementationProviderCapability, RenameOptions, RenameProviderCapability, ServerCapabilities,\n     SignatureHelpOptions, TextDocumentSyncCapability, TextDocumentSyncKind,\n-    TextDocumentSyncOptions, TypeDefinitionProviderCapability, WorkDoneProgressOptions,\n+    TextDocumentSyncOptions, TypeDefinitionProviderCapability,\n };\n \n pub fn server_capabilities() -> ServerCapabilities {\n@@ -21,14 +21,10 @@ pub fn server_capabilities() -> ServerCapabilities {\n         completion_provider: Some(CompletionOptions {\n             resolve_provider: None,\n             trigger_characters: Some(vec![\":\".to_string(), \".\".to_string()]),\n-            work_done_progress_options: WorkDoneProgressOptions { work_done_progress: None },\n         }),\n         signature_help_provider: Some(SignatureHelpOptions {\n             trigger_characters: Some(vec![\"(\".to_string(), \",\".to_string(), \")\".to_string()]),\n-            retrigger_characters: None,\n-            work_done_progress_options: WorkDoneProgressOptions { work_done_progress: None },\n         }),\n-        declaration_provider: None,\n         definition_provider: Some(true),\n         type_definition_provider: Some(TypeDefinitionProviderCapability::Simple(true)),\n         implementation_provider: Some(ImplementationProviderCapability::Simple(true)),\n@@ -48,7 +44,6 @@ pub fn server_capabilities() -> ServerCapabilities {\n         folding_range_provider: Some(FoldingRangeProviderCapability::Simple(true)),\n         rename_provider: Some(RenameProviderCapability::Options(RenameOptions {\n             prepare_provider: Some(true),\n-            work_done_progress_options: WorkDoneProgressOptions { work_done_progress: None },\n         })),\n         document_link_provider: None,\n         color_provider: None,"}, {"sha": "83845f1e006e5dda0b03120b0e866e1a3e8b4fa7", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -520,8 +520,7 @@ fn on_notification(\n             if let Some(file_id) = state.vfs.write().remove_file_overlay(path.as_path()) {\n                 subs.remove_sub(FileId(file_id.0));\n             }\n-            let params =\n-                req::PublishDiagnosticsParams { uri, diagnostics: Vec::new(), version: None };\n+            let params = req::PublishDiagnosticsParams { uri, diagnostics: Vec::new() };\n             let not = notification_new::<req::PublishDiagnostics>(params);\n             msg_sender.send(not.into()).unwrap();\n             return Ok(());"}, {"sha": "4095836344003051b17b6f073586100fff792276", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -648,7 +648,6 @@ pub fn handle_code_action(\n             diagnostics: None,\n             edit: None,\n             command: Some(command),\n-            is_preferred: None,\n         };\n         res.push(action.into());\n     }\n@@ -671,7 +670,6 @@ pub fn handle_code_action(\n             diagnostics: None,\n             edit: None,\n             command: Some(command),\n-            is_preferred: None,\n         };\n         res.push(action.into());\n     }\n@@ -830,10 +828,9 @@ pub fn publish_diagnostics(\n             source: Some(\"rust-analyzer\".to_string()),\n             message: d.message,\n             related_information: None,\n-            tags: None,\n         })\n         .collect();\n-    Ok(req::PublishDiagnosticsParams { uri, diagnostics, version: None })\n+    Ok(req::PublishDiagnosticsParams { uri, diagnostics })\n }\n \n pub fn publish_decorations("}, {"sha": "cfbf16ea5f064163191232d46ac0c293ae7940e5", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58768b2a6343451bae8c4efb93ce7b1d598c914d/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=58768b2a6343451bae8c4efb93ce7b1d598c914d", "patch": "@@ -4,8 +4,7 @@ use std::{collections::HashMap, time::Instant};\n \n use lsp_types::{\n     CodeActionContext, DidOpenTextDocumentParams, DocumentFormattingParams, FormattingOptions,\n-    PartialResultParams, Position, Range, TextDocumentItem, TextDocumentPositionParams,\n-    WorkDoneProgressParams,\n+    Position, Range, TextDocumentItem, TextDocumentPositionParams,\n };\n use ra_lsp_server::req::{\n     CodeActionParams, CodeActionRequest, Completion, CompletionParams, DidOpenTextDocument,\n@@ -49,8 +48,6 @@ use std::collections::Spam;\n             Position::new(0, 23),\n         ),\n         context: None,\n-        partial_result_params: PartialResultParams::default(),\n-        work_done_progress_params: WorkDoneProgressParams::default(),\n     });\n     assert!(format!(\"{}\", res).contains(\"HashMap\"));\n     eprintln!(\"completion took {:?}\", completion_start.elapsed());\n@@ -214,12 +211,8 @@ pub use std::collections::HashMap;\n             options: FormattingOptions {\n                 tab_size: 4,\n                 insert_spaces: false,\n-                insert_final_newline: None,\n-                trim_final_newlines: None,\n-                trim_trailing_whitespace: None,\n                 properties: HashMap::new(),\n             },\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([\n             {\n@@ -279,11 +272,7 @@ pub use std::collections::HashMap;\n                 tab_size: 4,\n                 insert_spaces: false,\n                 properties: HashMap::new(),\n-                insert_final_newline: None,\n-                trim_final_newlines: None,\n-                trim_trailing_whitespace: None,\n             },\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([\n             {\n@@ -336,8 +325,6 @@ fn main() {}\n             text_document: server.doc_id(\"src/lib.rs\"),\n             range: Range::new(Position::new(0, 4), Position::new(0, 7)),\n             context: empty_context(),\n-            partial_result_params: PartialResultParams::default(),\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([\n           {\n@@ -369,8 +356,6 @@ fn main() {}\n             text_document: server.doc_id(\"src/lib.rs\"),\n             range: Range::new(Position::new(2, 4), Position::new(2, 7)),\n             context: empty_context(),\n-            partial_result_params: PartialResultParams::default(),\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([]),\n     );\n@@ -419,8 +404,6 @@ fn main() {{}}\n             text_document: server.doc_id(\"src/lib.rs\"),\n             range: Range::new(Position::new(0, 4), Position::new(0, 7)),\n             context: empty_context(),\n-            partial_result_params: PartialResultParams::default(),\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([\n           {\n@@ -452,8 +435,6 @@ fn main() {{}}\n             text_document: server.doc_id(\"src/lib.rs\"),\n             range: Range::new(Position::new(2, 4), Position::new(2, 7)),\n             context: empty_context(),\n-            partial_result_params: PartialResultParams::default(),\n-            work_done_progress_params: WorkDoneProgressParams::default(),\n         },\n         json!([]),\n     );"}]}