{"sha": "a434e4c8f1a97482118f2b0ef833dc3e93bc5103", "node_id": "C_kwDOAAsO6NoAKGE0MzRlNGM4ZjFhOTc0ODIxMThmMmIwZWY4MzNkYzNlOTNiYzUxMDM", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2022-06-15T21:18:44Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2022-06-15T21:18:44Z"}, "message": "Add debuginfo test for if let lexical scopes", "tree": {"sha": "bf4805e1f30ec215f14be5f85dc03c41d946e7e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf4805e1f30ec215f14be5f85dc03c41d946e7e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a434e4c8f1a97482118f2b0ef833dc3e93bc5103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a434e4c8f1a97482118f2b0ef833dc3e93bc5103", "html_url": "https://github.com/rust-lang/rust/commit/a434e4c8f1a97482118f2b0ef833dc3e93bc5103", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a434e4c8f1a97482118f2b0ef833dc3e93bc5103/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e27a113445498b7b435bcd04e26ad1d71defab", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e27a113445498b7b435bcd04e26ad1d71defab", "html_url": "https://github.com/rust-lang/rust/commit/a5e27a113445498b7b435bcd04e26ad1d71defab"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "cdc37ce48fbad7b9a53634cc8c43000cf6c1a55d", "filename": "src/test/debuginfo/lexical-scope-in-if-let.rs", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/a434e4c8f1a97482118f2b0ef833dc3e93bc5103/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a434e4c8f1a97482118f2b0ef833dc3e93bc5103/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if-let.rs?ref=a434e4c8f1a97482118f2b0ef833dc3e93bc5103", "patch": "@@ -0,0 +1,100 @@\n+// compile-flags:-g\n+\n+// === GDB TESTS ==================================================================================\n+\n+// gdb-command:run\n+// gdb-command:info locals\n+// gdb-check:a = 123\n+\n+// gdb-command:continue\n+// gdb-command:info locals\n+// gdb-check:x = 42\n+// gdb-check:a = 123\n+\n+// gdb-command:continue\n+// gdb-command:info locals\n+// gdb-check:y = true\n+// gdb-check:b = 456\n+// gdb-check:x = 42\n+// gdb-check:a = 123\n+\n+// gdb-command:continue\n+// gdb-command:info locals\n+// gdb-check:z = 10\n+// gdb-check:c = 789\n+// gdb-check:y = true\n+// gdb-check:b = 456\n+// gdb-check:x = 42\n+// gdb-check:a = 123\n+\n+// === LLDB TESTS =================================================================================\n+\n+// lldb-command:run\n+// lldb-command:frame variable\n+// lldb-check:(int) a = 123\n+\n+// lldb-command:continue\n+// lldb-command:frame variable\n+// lldb-check:(int) a = 123 (int) x = 42\n+\n+// lldb-command:continue\n+// lldb-command:frame variable\n+// lldb-check:(int) a = 123 (int) x = 42 (int) b = 456 (bool) y = true\n+\n+// lldb-command:continue\n+// lldb-command:frame variable\n+// lldb-check:(int) a = 123 (int) x = 42 (int) b = 456 (bool) y = true (int) c = 789 (int) z = 10\n+\n+// === CDB TESTS ==================================================================================\n+\n+// cdb-command: g\n+// cdb-command: dv\n+// cdb-check:[...]a = 0n123\n+\n+// cdb-command: g\n+// cdb-command: dv\n+// cdb-check:[...]a = 0n123\n+// cdb-check:[...]x = 0n42\n+\n+// cdb-command: g\n+// cdb-command: dv\n+// cdb-check:[...]y = true\n+// cdb-check:[...]b = 0n456\n+// cdb-check:[...]a = 0n123\n+// cdb-check:[...]x = 0n42\n+\n+// cdb-command: g\n+// cdb-command: dv\n+// cdb-check:[...]z = 0n10\n+// cdb-check:[...]c = 0n789\n+// cdb-check:[...]y = true\n+// cdb-check:[...]b = 0n456\n+// cdb-check:[...]a = 0n123\n+// cdb-check:[...]x = 0n42\n+\n+fn main() {\n+    let a = id(123);\n+\n+    zzz(); // #break\n+\n+    if let Some(x) = id(Some(42)) {\n+        zzz(); // #break\n+\n+        let b = id(456);\n+\n+        if let Ok(y) = id::<Result<bool, ()>>(Ok(true)) {\n+            zzz(); // #break\n+\n+            let c = id(789);\n+\n+            if let (z, 42) = id((10, 42)) {\n+                zzz(); // #break\n+            }\n+        }\n+    }\n+}\n+\n+#[inline(never)]\n+fn id<T>(value: T) -> T { value }\n+\n+fn zzz() { }"}]}