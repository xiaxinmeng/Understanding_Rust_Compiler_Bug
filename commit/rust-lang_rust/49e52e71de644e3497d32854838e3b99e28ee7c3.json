{"sha": "49e52e71de644e3497d32854838e3b99e28ee7c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZTUyZTcxZGU2NDRlMzQ5N2QzMjg1NDgzOGUzYjk5ZTI4ZWU3YzM=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-12-29T11:55:00Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-12-29T11:55:00Z"}, "message": "Remove unused types from rustc::mir::interpret\n\nThe types are no longer used with the change to stacked borrows for\nvalidation.", "tree": {"sha": "a241dd5a29c8efdd27eaec111dbda04381d98b8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a241dd5a29c8efdd27eaec111dbda04381d98b8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49e52e71de644e3497d32854838e3b99e28ee7c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49e52e71de644e3497d32854838e3b99e28ee7c3", "html_url": "https://github.com/rust-lang/rust/commit/49e52e71de644e3497d32854838e3b99e28ee7c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49e52e71de644e3497d32854838e3b99e28ee7c3/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2149d73358b648ee7c6f9635a123bb8aa6bb2009", "url": "https://api.github.com/repos/rust-lang/rust/commits/2149d73358b648ee7c6f9635a123bb8aa6bb2009", "html_url": "https://github.com/rust-lang/rust/commit/2149d73358b648ee7c6f9635a123bb8aa6bb2009"}], "stats": {"total": 38, "additions": 0, "deletions": 38}, "files": [{"sha": "bab3846fe86e5ef7448c3c6d82857e5699062811", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/49e52e71de644e3497d32854838e3b99e28ee7c3/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e52e71de644e3497d32854838e3b99e28ee7c3/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=49e52e71de644e3497d32854838e3b99e28ee7c3", "patch": "@@ -473,22 +473,6 @@ impl_stable_hash_for!(enum mir::interpret::InboundsCheck {\n     MaybeDead\n });\n \n-impl_stable_hash_for!(enum mir::interpret::Lock {\n-    NoLock,\n-    WriteLock(dl),\n-    ReadLock(v)\n-});\n-\n-impl_stable_hash_for!(struct mir::interpret::DynamicLifetime {\n-    frame,\n-    region\n-});\n-\n-impl_stable_hash_for!(enum mir::interpret::AccessKind {\n-    Read,\n-    Write\n-});\n-\n impl_stable_hash_for!(enum ty::Variance {\n     Covariant,\n     Invariant,"}, {"sha": "e6a560b2ad7b6e87f2008b54467686f92087b6c2", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/49e52e71de644e3497d32854838e3b99e28ee7c3/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e52e71de644e3497d32854838e3b99e28ee7c3/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=49e52e71de644e3497d32854838e3b99e28ee7c3", "patch": "@@ -29,7 +29,6 @@ use mir;\n use hir::def_id::DefId;\n use ty::{self, TyCtxt, Instance};\n use ty::layout::{self, Size};\n-use middle::region;\n use std::io;\n use rustc_serialize::{Encoder, Decodable, Encodable};\n use rustc_data_structures::fx::FxHashMap;\n@@ -40,27 +39,6 @@ use ty::codec::TyDecoder;\n use std::sync::atomic::{AtomicU32, Ordering};\n use std::num::NonZeroU32;\n \n-#[derive(Clone, Debug, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n-pub enum Lock {\n-    NoLock,\n-    WriteLock(DynamicLifetime),\n-    /// This should never be empty -- that would be a read lock held and nobody\n-    /// there to release it...\n-    ReadLock(Vec<DynamicLifetime>),\n-}\n-\n-#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n-pub struct DynamicLifetime {\n-    pub frame: usize,\n-    pub region: Option<region::Scope>, // \"None\" indicates \"until the function ends\"\n-}\n-\n-#[derive(Copy, Clone, Debug, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n-pub enum AccessKind {\n-    Read,\n-    Write,\n-}\n-\n /// Uniquely identifies a specific constant or static.\n #[derive(Copy, Clone, Debug, Eq, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub struct GlobalId<'tcx> {"}]}