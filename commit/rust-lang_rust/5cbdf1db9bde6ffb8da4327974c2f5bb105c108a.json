{"sha": "5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYmRmMWRiOWJkZTZmZmI4ZGE0MzI3OTc0YzJmNWJiMTA1YzEwOGE=", "commit": {"author": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-01-22T12:39:06Z"}, "committer": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-10T06:48:05Z"}, "message": "Make aarch64-linux-android check with real target", "tree": {"sha": "8e404a588d0e14cc094a9fcd652a3a8764db9b3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e404a588d0e14cc094a9fcd652a3a8764db9b3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "html_url": "https://github.com/rust-lang/rust/commit/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/comments", "author": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "134e00be7751a9fdc820981962e4fd7ea97bfff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/134e00be7751a9fdc820981962e4fd7ea97bfff6", "html_url": "https://github.com/rust-lang/rust/commit/134e00be7751a9fdc820981962e4fd7ea97bfff6"}], "stats": {"total": 55, "additions": 29, "deletions": 26}, "files": [{"sha": "24a5c575bfba2949aced7697d402a0df450c4212", "filename": "mk/install.mk", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "patch": "@@ -65,7 +65,7 @@ CFG_ADB_DEVICE_STATUS=$(1)\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n-  $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+  $(if $(or $(findstring $(target),\"arm-linux-androideabi\"),$(findstring $(target),\"aarch64-linux-android\")), \\\n     $(if $(findstring adb,$(CFG_ADB)), \\\n       $(if $(findstring device,$(shell $(CFG_ADB) devices 2>/dev/null | grep -E '^[_A-Za-z0-9-]+[[:blank:]]+device')), \\\n         $(info install: install-runtime-target for $(target) enabled \\\n@@ -117,8 +117,11 @@ install-runtime-target-$(1)-cleanup:\n \t    $$(call ADB_SHELL,rm,$$(CFG_RUNTIME_PUSH_DIR)/$$(call CFG_LIB_GLOB_$(1),$$(crate)));)\n endef\n \n-$(eval $(call INSTALL_RUNTIME_TARGET_N,arm-linux-androideabi,$(CFG_BUILD)))\n-$(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,arm-linux-androideabi))\n+$(foreach target,$(CFG_TARGET), \\\n+ $(if $(findstring $(CFG_ADB_DEVICE_STATUS),\"true\"), \\\n+  $(eval $(call INSTALL_RUNTIME_TARGET_N,$(taget),$(CFG_BUILD))) \\\n+  $(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,arm-linux-$(target))) \\\n+  ))\n \n install-runtime-target: \\\n \tinstall-runtime-target-arm-linux-androideabi-cleanup \\"}, {"sha": "3e4bae02427d76e26c9d9f123feb446126099d53", "filename": "mk/tests.mk", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "patch": "@@ -111,14 +111,15 @@ $(foreach target,$(CFG_TARGET), \\\n # for arm-linux-androidabi\n define DEF_ADB_DEVICE_STATUS\n CFG_ADB_DEVICE_STATUS=$(1)\n+CFG_ANDROID_TARGET_TRIPLE=$(2)\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n-  $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+  $(if $(or $(findstring $(target),\"arm-linux-androideabi\"),$(findstring $(target),\"aarch64-linux-android\")), \\\n     $(if $(findstring adb,$(CFG_ADB)), \\\n       $(if $(findstring device,$(shell $(CFG_ADB) devices 2>/dev/null | grep -E '^[:_A-Za-z0-9-]+[[:blank:]]+device')), \\\n         $(info check: android device attached) \\\n-        $(eval $(call DEF_ADB_DEVICE_STATUS, true)), \\\n+        $(eval $(call DEF_ADB_DEVICE_STATUS, true, $(target))), \\\n         $(info check: android device not attached) \\\n         $(eval $(call DEF_ADB_DEVICE_STATUS, false)) \\\n       ), \\\n@@ -138,7 +139,7 @@ $(info check: android device test dir $(CFG_ADB_TEST_DIR) ready \\\n  $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/tmp) \\\n  $(shell $(CFG_ADB) push $(S)src/etc/adb_run_wrapper.sh $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n  $(foreach crate,$(TARGET_CRATES), \\\n-    $(shell $(CFG_ADB) push $(TLIB2_T_arm-linux-androideabi_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_arm-linux-androideabi,$(crate)) \\\n+    $(shell $(CFG_ADB) push $(TLIB2_T_$(CFG_ANDROID_TARGET_TRIPLE)_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_$(CFG_ANDROID_TARGET_TRIPLE),$(crate)) \\\n                     $(CFG_ADB_TEST_DIR))) \\\n  )\n else\n@@ -393,7 +394,7 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t    && touch $$@\n endef\n \n-define DEF_TEST_CRATE_RULES_arm-linux-androideabi\n+define DEF_TEST_CRATE_RULES_android\n check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n \n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n@@ -434,9 +435,9 @@ $(foreach host,$(CFG_HOST), \\\n    $(foreach crate, $(TEST_CRATES), \\\n     $(if $(findstring $(target),$(CFG_BUILD)), \\\n      $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate))), \\\n-     $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+     $(if $(or $(findstring $(target),\"arm-linux-androideabi\"), $(findstring $(target),\"aarch64-linux-android\")), \\\n       $(if $(findstring $(CFG_ADB_DEVICE_STATUS),\"true\"), \\\n-       $(eval $(call DEF_TEST_CRATE_RULES_arm-linux-androideabi,$(stage),$(target),$(host),$(crate))), \\\n+       $(eval $(call DEF_TEST_CRATE_RULES_android,$(stage),$(target),$(host),$(crate))), \\\n        $(eval $(call DEF_TEST_CRATE_RULES_null,$(stage),$(target),$(host),$(crate))) \\\n       ), \\\n       $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate))) \\"}, {"sha": "1e9f843db34b1cf892bbfd25518bd1b17b3a2ca8", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "patch": "@@ -158,10 +158,8 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")),\n         adb_test_dir: opt_str2(matches.opt_str(\"adb-test-dir\")),\n         adb_device_status:\n-            \"arm-linux-androideabi\" ==\n-                opt_str2(matches.opt_str(\"target\")) &&\n-            \"(none)\" !=\n-                opt_str2(matches.opt_str(\"adb-test-dir\")) &&\n+            opt_str2(matches.opt_str(\"target\")).contains(\"android\") &&\n+            \"(none)\" != opt_str2(matches.opt_str(\"adb-test-dir\")) &&\n             !opt_str2(matches.opt_str(\"adb-test-dir\")).is_empty(),\n         lldb_python_dir: matches.opt_str(\"lldb-python-dir\"),\n         verbose: matches.opt_present(\"verbose\"),\n@@ -216,17 +214,17 @@ pub fn opt_str2(maybestr: Option<String>) -> String {\n }\n \n pub fn run_tests(config: &Config) {\n-    if config.target == \"arm-linux-androideabi\" {\n+    if config.target.contains(\"android\") {\n         match config.mode {\n             DebugInfoGdb => {\n-                println!(\"arm-linux-androideabi debug-info \\\n-                         test uses tcp 5039 port. please reserve it\");\n+                println!(\"{} debug-info test uses tcp 5039 port.\\\n+                         please reserve it\", config.target);\n             }\n             _ =>{}\n         }\n \n-        //arm-linux-androideabi debug-info test uses remote debugger\n-        //so, we test 1 task at once.\n+        // android debug-info test uses remote debugger\n+        // so, we test 1 task at once.\n         // also trying to isolate problems with adb_run_wrapper.sh ilooping\n         env::set_var(\"RUST_TEST_TASKS\",\"1\");\n     }"}, {"sha": "047d84f1eca73fc8a13d7c623c93a2aa715905d0", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "patch": "@@ -42,7 +42,7 @@ use test::MetricMap;\n pub fn run(config: Config, testfile: String) {\n     match &*config.target {\n \n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n             if !config.adb_device_status {\n                 panic!(\"android device not available\");\n             }\n@@ -382,7 +382,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n \n     let debugger_run_result;\n     match &*config.target {\n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n \n             cmds = cmds.replace(\"run\", \"continue\").to_string();\n \n@@ -470,7 +470,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                      format!(\"-command={}\", debugger_script.as_str().unwrap()));\n \n             let mut gdb_path = tool_path;\n-            gdb_path.push_str(\"/bin/arm-linux-androideabi-gdb\");\n+            gdb_path.push_str(&format!(\"/bin/{}-gdb\", config.target));\n             let procsrv::Result {\n                 out,\n                 err,\n@@ -484,7 +484,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 .expect(&format!(\"failed to exec `{:?}`\", gdb_path));\n             let cmdline = {\n                 let cmdline = make_cmdline(\"\",\n-                                           \"arm-linux-androideabi-gdb\",\n+                                           &format!(\"{}-gdb\", config.target),\n                                            &debugger_opts);\n                 logv(config, format!(\"executing {}\", cmdline));\n                 cmdline\n@@ -1135,7 +1135,7 @@ fn exec_compiled_test(config: &Config, props: &TestProps,\n \n     match &*config.target {\n \n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n             _arm_exec_compiled_test(config, props, testfile, env)\n         }\n \n@@ -1200,7 +1200,7 @@ fn compose_and_run_compiler(\n         }\n \n         match &*config.target {\n-            \"arm-linux-androideabi\" => {\n+            \"arm-linux-androideabi\"  | \"aarch64-linux-android\" => {\n                 _arm_push_aux_shared_library(config, testfile);\n             }\n             _ => {}"}, {"sha": "c15e18168e50d319aca6134bd14380cbf37312a8", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "patch": "@@ -345,11 +345,13 @@ impl Target {\n             mips_unknown_linux_gnu,\n             mipsel_unknown_linux_gnu,\n             powerpc_unknown_linux_gnu,\n-            arm_linux_androideabi,\n             arm_unknown_linux_gnueabi,\n             arm_unknown_linux_gnueabihf,\n             aarch64_unknown_linux_gnu,\n \n+            arm_linux_androideabi,\n+            aarch64_linux_android,\n+\n             x86_64_unknown_freebsd,\n \n             i686_unknown_dragonfly,\n@@ -363,7 +365,6 @@ impl Target {\n             i386_apple_ios,\n             x86_64_apple_ios,\n             aarch64_apple_ios,\n-            aarch64_linux_android,\n             armv7_apple_ios,\n             armv7s_apple_ios,\n "}]}