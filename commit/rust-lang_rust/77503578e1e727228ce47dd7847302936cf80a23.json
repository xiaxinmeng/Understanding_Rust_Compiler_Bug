{"sha": "77503578e1e727228ce47dd7847302936cf80a23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NTAzNTc4ZTFlNzI3MjI4Y2U0N2RkNzg0NzMwMjkzNmNmODBhMjM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-30T09:48:54Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-30T09:48:54Z"}, "message": "Return early to avoid ICE", "tree": {"sha": "8c376d45a61b544691c6b718f2c73f6871347ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c376d45a61b544691c6b718f2c73f6871347ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77503578e1e727228ce47dd7847302936cf80a23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl7SLAYACgkQsJhshcDi\n2qEG+g/5AVQ25RTs9fnDrybzC3APU8irvmg7pfxnnWdDc5ZtN7g0PMolKaUKdBQ7\nnwhnlssbpBZNfzA9fbl0l8Ba0j8tNC3cFuSCmTIrDkL28WnYa0rbJs9RVZ0RUxAA\ngjZ66bH28gd/ld5JhFns3kVA3MnZtu9idT+55AnZCU6ihd71/WoO29JjGy0iyNQX\nLv0uZm4pY50F0hKo2sj0yDFFOqZPe+Vl5R0SWcRdmz24spyaSaNHS/ZT9FulPchj\niJGEEb7wAZT9I3108jqgKgYVJzGdObMHy18OgCUC5up7rS3kSD1p2aJH+24d21sY\n3JIDKRIq92p2JYrJuMBfcwZilFi5Z6lQsU/Sp1mhHyR5tfa5/8wosLzUOrVjZ4IT\nnIcQEBoAvtxXv3Z9Gl844dugZT/U1W05uHsV2GAYigEMWv+yOzrbyl/nOuD2KAeR\nLhCT8HlQxOw+2SFpY9Y7omrgvaZlTs5bMp01XmNbghaBapVH02/8ozf5AegfS015\neYidecsHkYcHSLsIR6KnxALywwBzD0d71t+PCpgHFXwxYQvLFkEH8uRfwgrIOMBi\n94Oi9PkXX0VDJFAKsPul+ANXDqW3299msMdIhp9dOx/7Ua+3txsuBwvq+x1x/KSh\nP4NsXvt8j0aTXT3i8k6+Yzt4pcb3NCIGnFIacy/zxs3z86h3z6E=\n=652i\n-----END PGP SIGNATURE-----", "payload": "tree 8c376d45a61b544691c6b718f2c73f6871347ee6\nparent 4bd32c98047a809ba5fd1fac2aa044638e5f2105\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590832134 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1590832134 +0900\n\nReturn early to avoid ICE\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77503578e1e727228ce47dd7847302936cf80a23", "html_url": "https://github.com/rust-lang/rust/commit/77503578e1e727228ce47dd7847302936cf80a23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77503578e1e727228ce47dd7847302936cf80a23/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd32c98047a809ba5fd1fac2aa044638e5f2105", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd32c98047a809ba5fd1fac2aa044638e5f2105", "html_url": "https://github.com/rust-lang/rust/commit/4bd32c98047a809ba5fd1fac2aa044638e5f2105"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "3174f43c657922e3214ae1253ad2d1a4598db1ee", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77503578e1e727228ce47dd7847302936cf80a23/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77503578e1e727228ce47dd7847302936cf80a23/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=77503578e1e727228ce47dd7847302936cf80a23", "patch": "@@ -1909,6 +1909,12 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n \n                 let self_ty = self.resolve_vars_if_possible(&trait_ref.self_ty());\n \n+                // Do not check on infer_types to avoid panic in evaluate_obligation.\n+                if self_ty.has_infer_types() {\n+                    return;\n+                }\n+                let self_ty = self.tcx.erase_regions(&self_ty);\n+\n                 let impls_future = self.tcx.type_implements_trait((\n                     future_trait,\n                     self_ty,"}, {"sha": "958ba69a8262c4b448eb87336769379e0a9de06b", "filename": "src/librustc_trait_selection/traits/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/77503578e1e727228ce47dd7847302936cf80a23/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77503578e1e727228ce47dd7847302936cf80a23/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs?ref=77503578e1e727228ce47dd7847302936cf80a23", "patch": "@@ -540,13 +540,6 @@ fn type_implements_trait<'tcx>(\n         trait_def_id, ty, params, param_env\n     );\n \n-    // Do not check on infer_types to avoid panic in evaluate_obligation.\n-    if ty.has_infer_types() {\n-        return false;\n-    }\n-\n-    let ty = tcx.erase_regions(&ty);\n-\n     let trait_ref = ty::TraitRef { def_id: trait_def_id, substs: tcx.mk_substs_trait(ty, params) };\n \n     let obligation = Obligation {"}, {"sha": "0448f0719589dceeceac3c3b383d90cf9eee1bf5", "filename": "src/test/ui/suggestions/issue-72766.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.rs?ref=77503578e1e727228ce47dd7847302936cf80a23", "patch": "@@ -0,0 +1,20 @@\n+// edition:2018\n+// compile-flags: -Cincremental=tmp/issue-72766\n+\n+pub struct SadGirl;\n+\n+impl SadGirl {\n+    pub async fn call(&self) -> Result<(), ()> {\n+        Ok(())\n+    }\n+}\n+\n+async fn async_main() -> Result<(), ()> {\n+    // should be `.call().await?`\n+    SadGirl {}.call()?; //~ ERROR: the `?` operator can only be applied to values\n+    Ok(())\n+}\n+\n+fn main() {\n+    let _ = async_main();\n+}"}, {"sha": "4290f3b4bf1aa752003770eda395a8aba7832e60", "filename": "src/test/ui/suggestions/issue-72766.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr?ref=77503578e1e727228ce47dd7847302936cf80a23", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/issue-72766.rs:14:5\n+   |\n+LL |     SadGirl {}.call()?;\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     the `?` operator cannot be applied to type `impl std::future::Future`\n+   |     help: consider using `.await` here: `SadGirl {}.call().await?`\n+   |\n+   = help: the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n+   = note: required by `std::ops::Try::into_result`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "6dd8fef7e82da31954eb51c7d53195c288a26842", "filename": "src/tools/clippy/clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77503578e1e727228ce47dd7847302936cf80a23/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=77503578e1e727228ce47dd7847302936cf80a23", "patch": "@@ -323,6 +323,11 @@ pub fn implements_trait<'a, 'tcx>(\n     trait_id: DefId,\n     ty_params: &[GenericArg<'tcx>],\n ) -> bool {\n+    // Do not check on infer_types to avoid panic in evaluate_obligation.\n+    if ty.has_infer_types() {\n+        return false;\n+    }\n+    let ty = cx.tcx.erase_regions(&ty);\n     let ty_params = cx.tcx.mk_substs(ty_params.iter());\n     cx.tcx.type_implements_trait((trait_id, ty, ty_params, cx.param_env))\n }"}]}