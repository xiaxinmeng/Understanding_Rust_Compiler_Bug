{"sha": "f053f29ff5469ff955221d1ea8d6154ef276ce10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNTNmMjlmZjU0NjlmZjk1NTIyMWQxZWE4ZDYxNTRlZjI3NmNlMTA=", "commit": {"author": {"name": "mchaput", "email": "matt@whoosh.ca", "date": "2014-12-14T05:48:09Z"}, "committer": {"name": "mchaput", "email": "matt@whoosh.ca", "date": "2014-12-14T05:48:09Z"}, "message": "Fix mispelling in char.rs error message\n\nError message has wrong spelling (\"radix is to high\").", "tree": {"sha": "293ae0079859ec585ee79c92cb78dac9eae57bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/293ae0079859ec585ee79c92cb78dac9eae57bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f053f29ff5469ff955221d1ea8d6154ef276ce10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f053f29ff5469ff955221d1ea8d6154ef276ce10", "html_url": "https://github.com/rust-lang/rust/commit/f053f29ff5469ff955221d1ea8d6154ef276ce10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f053f29ff5469ff955221d1ea8d6154ef276ce10/comments", "author": {"login": "mchaput", "id": 362643, "node_id": "MDQ6VXNlcjM2MjY0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/362643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchaput", "html_url": "https://github.com/mchaput", "followers_url": "https://api.github.com/users/mchaput/followers", "following_url": "https://api.github.com/users/mchaput/following{/other_user}", "gists_url": "https://api.github.com/users/mchaput/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchaput/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchaput/subscriptions", "organizations_url": "https://api.github.com/users/mchaput/orgs", "repos_url": "https://api.github.com/users/mchaput/repos", "events_url": "https://api.github.com/users/mchaput/events{/privacy}", "received_events_url": "https://api.github.com/users/mchaput/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mchaput", "id": 362643, "node_id": "MDQ6VXNlcjM2MjY0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/362643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchaput", "html_url": "https://github.com/mchaput", "followers_url": "https://api.github.com/users/mchaput/followers", "following_url": "https://api.github.com/users/mchaput/following{/other_user}", "gists_url": "https://api.github.com/users/mchaput/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchaput/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchaput/subscriptions", "organizations_url": "https://api.github.com/users/mchaput/orgs", "repos_url": "https://api.github.com/users/mchaput/repos", "events_url": "https://api.github.com/users/mchaput/events{/privacy}", "received_events_url": "https://api.github.com/users/mchaput/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07526a9990ab07983905fb5f383e62ae72242bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f07526a9990ab07983905fb5f383e62ae72242bc", "html_url": "https://github.com/rust-lang/rust/commit/f07526a9990ab07983905fb5f383e62ae72242bc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "07db32bcc2b6465888cbb82a0920ea7c50a0f820", "filename": "src/libcore/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f053f29ff5469ff955221d1ea8d6154ef276ce10/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f053f29ff5469ff955221d1ea8d6154ef276ce10/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=f053f29ff5469ff955221d1ea8d6154ef276ce10", "patch": "@@ -141,7 +141,7 @@ pub fn to_digit(c: char, radix: uint) -> Option<uint> {\n #[unstable = \"pending decisions about costructors for primitives\"]\n pub fn from_digit(num: uint, radix: uint) -> Option<char> {\n     if radix > 36 {\n-        panic!(\"from_digit: radix is to high (maximum 36)\");\n+        panic!(\"from_digit: radix is too high (maximum 36)\");\n     }\n     if num < radix {\n         unsafe {"}]}