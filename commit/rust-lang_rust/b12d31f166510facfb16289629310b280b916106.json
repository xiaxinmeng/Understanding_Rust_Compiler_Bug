{"sha": "b12d31f166510facfb16289629310b280b916106", "node_id": "C_kwDOAAsO6NoAKGIxMmQzMWYxNjY1MTBmYWNmYjE2Mjg5NjI5MzEwYjI4MGI5MTYxMDY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-22T11:06:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-22T11:06:38Z"}, "message": "Rollup merge of #104701 - compiler-errors:rpitit-remove-reempty-hack, r=TaKO8Ki\n\nRemove a lifetime resolution hack from `compare_predicate_entailment`\n\nThis is not needed anymore, probably due to #102334 equating the function signatures fully in `collect_trait_impl_trait_tys`. Also, the assertion in in #102903 makes sure that this is actually fixed, so I'm pretty confident this isn't needed.", "tree": {"sha": "25a1b4e58802651cbd7761d8b3cfe8e9ff336676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25a1b4e58802651cbd7761d8b3cfe8e9ff336676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b12d31f166510facfb16289629310b280b916106", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfK0+CRBK7hj4Ov3rIwAAQ4oIAIZdOnb3Mudjxil/bKeaS2IT\n6T/Rqz3eraXefM8HvjlkPxmFKYMBxAZO90lsmhgk6tgpZjWuXgGppQfKYvdNmhnI\ndCm1bEfl3O7lWa6HQc1lgrexttKx+qAev5Z39MfsnkT0BGDHJdQBZ211uM11TA9/\nrRg4b6HZXlhZnnqiufbD+bsNraDtHuZFQbcJiw4C5PXa/ePeYrOmf+6sMBVdnrUK\nnJyzPXO9Un4xLtfd79Cp4sJ20NSCnyb8Qn/CGDHggC0lMidXZT7OgOWAoXGE6iw9\nvvzmnd6MJrJqgFf/9wao7ns0ezoQZ6j3L7I7eD5X1McFsxakYBKolskqFxbu48A=\n=bBfR\n-----END PGP SIGNATURE-----\n", "payload": "tree 25a1b4e58802651cbd7761d8b3cfe8e9ff336676\nparent d29491aba00fd879c437943aa7629b9867129d9f\nparent 1c1778da25fbbcf2c952d2c33fa63a5016559064\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1669115198 +0530\ncommitter GitHub <noreply@github.com> 1669115198 +0530\n\nRollup merge of #104701 - compiler-errors:rpitit-remove-reempty-hack, r=TaKO8Ki\n\nRemove a lifetime resolution hack from `compare_predicate_entailment`\n\nThis is not needed anymore, probably due to #102334 equating the function signatures fully in `collect_trait_impl_trait_tys`. Also, the assertion in in #102903 makes sure that this is actually fixed, so I'm pretty confident this isn't needed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b12d31f166510facfb16289629310b280b916106", "html_url": "https://github.com/rust-lang/rust/commit/b12d31f166510facfb16289629310b280b916106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b12d31f166510facfb16289629310b280b916106/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29491aba00fd879c437943aa7629b9867129d9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29491aba00fd879c437943aa7629b9867129d9f", "html_url": "https://github.com/rust-lang/rust/commit/d29491aba00fd879c437943aa7629b9867129d9f"}, {"sha": "1c1778da25fbbcf2c952d2c33fa63a5016559064", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1778da25fbbcf2c952d2c33fa63a5016559064", "html_url": "https://github.com/rust-lang/rust/commit/1c1778da25fbbcf2c952d2c33fa63a5016559064"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "bf4e5126bfa100fc0cb9654f550fcc357572094c", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b12d31f166510facfb16289629310b280b916106/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b12d31f166510facfb16289629310b280b916106/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=b12d31f166510facfb16289629310b280b916106", "patch": "@@ -288,17 +288,7 @@ fn compare_predicate_entailment<'tcx>(\n     // type would be more appropriate. In other places we have a `Vec<Span>`\n     // corresponding to their `Vec<Predicate>`, but we don't have that here.\n     // Fixing this would improve the output of test `issue-83765.rs`.\n-    let mut result = ocx.sup(&cause, param_env, trait_fty, impl_fty);\n-\n-    // HACK(RPITIT): #101614. When we are trying to infer the hidden types for\n-    // RPITITs, we need to equate the output tys instead of just subtyping. If\n-    // we just use `sup` above, we'll end up `&'static str <: _#1t`, which causes\n-    // us to infer `_#1t = #'_#2r str`, where `'_#2r` is unconstrained, which gets\n-    // fixed up to `ReEmpty`, and which is certainly not what we want.\n-    if trait_fty.has_infer_types() {\n-        result =\n-            result.and_then(|()| ocx.eq(&cause, param_env, trait_sig.output(), impl_sig.output()));\n-    }\n+    let result = ocx.sup(&cause, param_env, trait_fty, impl_fty);\n \n     if let Err(terr) = result {\n         debug!(?terr, \"sub_types failed: impl ty {:?}, trait ty {:?}\", impl_fty, trait_fty);"}]}