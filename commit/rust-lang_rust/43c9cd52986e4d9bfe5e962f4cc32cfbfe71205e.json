{"sha": "43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYzljZDUyOTg2ZTRkOWJmZTVlOTYyZjRjYzMyY2ZiZmU3MTIwNWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T00:34:37Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T00:34:37Z"}, "message": "vim: Add new keywords", "tree": {"sha": "9047185f9ac28649cf85d043b57a879f13f5c106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9047185f9ac28649cf85d043b57a879f13f5c106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e", "html_url": "https://github.com/rust-lang/rust/commit/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c88933d714f12be6bdca80cc9583a1e5670cfc62", "url": "https://api.github.com/repos/rust-lang/rust/commits/c88933d714f12be6bdca80cc9583a1e5670cfc62", "html_url": "https://github.com/rust-lang/rust/commit/c88933d714f12be6bdca80cc9583a1e5670cfc62"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "247f38b7a8cad19fc271ba2e37bb50855a7d2762", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=43c9cd52986e4d9bfe5e962f4cc32cfbfe71205e", "patch": "@@ -15,8 +15,8 @@ syn match     rustAssert      \"assert\\(\\w\\)*\"\n syn keyword   rustKeyword     alt again as break\n syn keyword   rustKeyword     check claim const copy do drop else export extern fail\n syn keyword   rustKeyword     for if impl import in let log\n-syn keyword   rustKeyword     loop mod move mut new of owned pure\n-syn keyword   rustKeyword     ret self to unchecked\n+syn keyword   rustKeyword     loop match mod module move mut new of owned pure\n+syn keyword   rustKeyword     ret return self to unchecked\n syn match     rustKeyword     \"unsafe\" \" Allows also matching unsafe::foo()\n syn keyword   rustKeyword     use while with\n \" FIXME: Scoped impl's name is also fallen in this category"}]}