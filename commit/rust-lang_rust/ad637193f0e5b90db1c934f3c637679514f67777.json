{"sha": "ad637193f0e5b90db1c934f3c637679514f67777", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNjM3MTkzZjBlNWI5MGRiMWM5MzRmM2M2Mzc2Nzk1MTRmNjc3Nzc=", "commit": {"author": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T21:59:46Z"}, "committer": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T21:59:46Z"}, "message": "Hash discriminant of Lifetime::Name", "tree": {"sha": "a2d25b8870b4fd0197bcc637dde4a37149069ac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2d25b8870b4fd0197bcc637dde4a37149069ac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad637193f0e5b90db1c934f3c637679514f67777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad637193f0e5b90db1c934f3c637679514f67777", "html_url": "https://github.com/rust-lang/rust/commit/ad637193f0e5b90db1c934f3c637679514f67777", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad637193f0e5b90db1c934f3c637679514f67777/comments", "author": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "html_url": "https://github.com/rust-lang/rust/commit/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "64f5f352570bee52e8217a4bcffa780f14fe89e3", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad637193f0e5b90db1c934f3c637679514f67777/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad637193f0e5b90db1c934f3c637679514f67777/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=ad637193f0e5b90db1c934f3c637679514f67777", "patch": "@@ -584,14 +584,15 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n \n     pub fn hash_lifetime(&mut self, lifetime: &Lifetime) {\n         if let LifetimeName::Param(ref name) = lifetime.name {\n+            std::mem::discriminant(&name).hash(&mut self.s);\n             match name {\n                 ParamName::Plain(ref ident) => {\n                     ident.name.hash(&mut self.s);\n                 },\n                 ParamName::Fresh(ref size) => {\n                     size.hash(&mut self.s);\n                 },\n-                _ => {},\n+                ParamName::Error => {},\n             }\n         }\n     }"}]}