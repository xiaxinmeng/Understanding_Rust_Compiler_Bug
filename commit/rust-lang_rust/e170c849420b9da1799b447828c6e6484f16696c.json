{"sha": "e170c849420b9da1799b447828c6e6484f16696c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNzBjODQ5NDIwYjlkYTE3OTliNDQ3ODI4YzZlNjQ4NGYxNjY5NmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T13:22:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T13:22:34Z"}, "message": "Auto merge of #5392 - matthiaskrgr:rustup_40, r=phansch\n\nrustup  https://github.com/rust-lang/rust/pull/70536\n\nchangelog: none", "tree": {"sha": "f93d63a2f023725a4aef87fb44c3bddec0c2ab45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f93d63a2f023725a4aef87fb44c3bddec0c2ab45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e170c849420b9da1799b447828c6e6484f16696c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e170c849420b9da1799b447828c6e6484f16696c", "html_url": "https://github.com/rust-lang/rust/commit/e170c849420b9da1799b447828c6e6484f16696c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e170c849420b9da1799b447828c6e6484f16696c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd11235a6a5cd2f23d5ed219ebba579b2078505", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd11235a6a5cd2f23d5ed219ebba579b2078505", "html_url": "https://github.com/rust-lang/rust/commit/bfd11235a6a5cd2f23d5ed219ebba579b2078505"}, {"sha": "aff57e0f43855925eeb747963f6875335eba596b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aff57e0f43855925eeb747963f6875335eba596b", "html_url": "https://github.com/rust-lang/rust/commit/aff57e0f43855925eeb747963f6875335eba596b"}], "stats": {"total": 322, "additions": 161, "deletions": 161}, "files": [{"sha": "4d8bbcd310240df6de2cd1a0da5fd75db729701d", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,6 +1,6 @@\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_lint_and_help;"}, {"sha": "b66e8746707516cacc4fc7237e4f2c3ff5e28edf", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,11 +3,11 @@ use crate::utils::{\n };\n use crate::utils::{higher, sugg};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "d9ff1fe0a1d0dab4f4520706b24fced957267f7c", "filename": "clippy_lints/src/atomic_ordering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fatomic_ordering.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_def_path, span_lint_and_help};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "a406b141c36df3909790f5d545e1c2e2934b2cbf", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -6,15 +6,15 @@ use crate::utils::{\n     span_lint_and_then, without_block_comments,\n };\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n-use rustc::ty;\n use rustc_ast::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_errors::Applicability;\n use rustc_hir::{\n     Block, Expr, ExprKind, ImplItem, ImplItemKind, Item, ItemKind, StmtKind, TraitFn, TraitItem, TraitItemKind,\n };\n use rustc_lint::{CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;"}, {"sha": "9e533eaa32c93a08e5866245f52741238378af52", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{differing_macro_contexts, higher, snippet_block_with_applicability, span_lint, span_lint_and_sugg};\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BlockCheckMode, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "7c9df141d66693856d596a4a71fc4ff7d1beadb9", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,12 +3,12 @@ use crate::utils::{\n     span_lint_and_then, SpanlessEq,\n };\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "91d3e47d7870c21ab7f6034e0d9c7f56dfeac100", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,11 +3,11 @@ use crate::utils::{\n     span_lint_and_sugg, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast::{Name, UintTy};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "88baaea9e5624e85d40fa341cae95d76e7737960", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,11 +1,11 @@\n //! lint on manually implemented checked conversions that could be transformed into `try_from`\n \n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOp, BinOpKind, Expr, ExprKind, QPath, TyKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{snippet_with_applicability, span_lint_and_sugg, SpanlessEq};"}, {"sha": "b90dd28642b7053019f2c49fb316f7b30ef7d943", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n //! calculate cognitive complexity and warn about overly complex functions\n \n-use rustc::hir::map::Map;\n use rustc_ast::ast::Attribute;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;"}, {"sha": "b1d540c9751589a600b3477dd75320fb56bf7fe7", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,14 +2,14 @@\n \n use crate::utils::{clip, higher, sext, unsext};\n use if_chain::if_chain;\n-use rustc::ty::subst::{Subst, SubstsRef};\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast::{FloatTy, LitFloatType, LitKind};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, QPath, UnOp};\n use rustc_lint::LateContext;\n+use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::{bug, span_bug};\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::convert::TryInto;\n@@ -333,7 +333,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     .tcx\n                     .const_eval_resolve(self.param_env, def_id, substs, None, None)\n                     .ok()\n-                    .map(|val| rustc::ty::Const::from_value(self.lcx.tcx, val, ty))?;\n+                    .map(|val| rustc_middle::ty::Const::from_value(self.lcx.tcx, val, ty))?;\n                 let result = miri_to_const(&result);\n                 if result.is_some() {\n                     self.needed_resolution = true;\n@@ -460,7 +460,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n }\n \n pub fn miri_to_const(result: &ty::Const<'_>) -> Option<Constant> {\n-    use rustc::mir::interpret::{ConstValue, Scalar};\n+    use rustc_middle::mir::interpret::{ConstValue, Scalar};\n     match result.val {\n         ty::ConstKind::Value(ConstValue::Scalar(Scalar::Raw { data: d, .. })) => match result.ty.kind {\n             ty::Bool => Some(Constant::Bool(d == 1)),"}, {"sha": "383ee1164a2e6e700514ab9d80aa2c9d79b67f6c", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{get_parent_expr, higher, if_sequence, same_tys, snippet, span_lint_and_note, span_lint_and_then};\n use crate::utils::{SpanlessEq, SpanlessHash};\n-use rustc::ty::Ty;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::{Arm, Block, Expr, ExprKind, MatchSource, Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::Ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use std::collections::hash_map::Entry;"}, {"sha": "635d609c382890f1a04ae880afdaf965f535c6f6", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,8 @@\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{any_parent_is_automatically_derived, match_def_path, paths, span_lint_and_sugg};"}, {"sha": "a24cfa89ec2e9f6daa789370f9dba8943b71c846", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::ty::{self, Ty};\n use rustc_hir::{Item, ItemKind, TraitRef};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "e015b1b49c64053cafd0bbf654214c1671e82991", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,12 +1,12 @@\n use crate::utils::{implements_trait, is_entrypoint_fn, match_type, paths, return_ty, span_lint};\n use if_chain::if_chain;\n use itertools::Itertools;\n-use rustc::lint::in_external_macro;\n-use rustc::ty;\n use rustc_ast::ast::{AttrKind, Attribute};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, MultiSpan, Span};\n use rustc_span::Pos;"}, {"sha": "9a60b2f027abe3ebca34868c8e762370da6de7d5", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_copy, match_def_path, paths, qpath_res, span_lint_and_note};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "fb10ca48074ed10efc228422674221771d5536b5", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,8 @@\n //! Lint on if expressions with an else if, but without a final else branch.\n \n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_lint_and_help;"}, {"sha": "65c9d08a6bd83dfe2261835368576e7922aa7cd4", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,11 +2,11 @@ use crate::utils::SpanlessEq;\n use crate::utils::{get_item_name, higher, match_type, paths, snippet, snippet_opt};\n use crate::utils::{snippet_with_applicability, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BorrowKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "ace11073a8f96ddddb54bd324a7edc152d729ff7", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,11 +3,11 @@\n \n use crate::consts::{miri_to_const, Constant};\n use crate::utils::span_lint;\n-use rustc::ty;\n-use rustc::ty::util::IntTypeExt;\n use rustc_ast::ast::{IntTy, UintTy};\n use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_middle::ty::util::IntTypeExt;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::convert::TryFrom;\n \n@@ -51,7 +51,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n                         .tcx\n                         .const_eval_poly(def_id)\n                         .ok()\n-                        .map(|val| rustc::ty::Const::from_value(cx.tcx, val, ty));\n+                        .map(|val| rustc_middle::ty::Const::from_value(cx.tcx, val, ty));\n                     if let Some(Constant::Int(val)) = constant.and_then(miri_to_const) {\n                         if let ty::Adt(adt, _) = ty.kind {\n                             if adt.is_enum() {"}, {"sha": "94c458cc6a663cc3a96d1029fa01978ec70aa305", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n-use rustc::ty::layout::LayoutOf;\n-use rustc::ty::{self, Ty};\n use rustc_hir::intravisit;\n use rustc_hir::{self, Body, FnDecl, HirId, HirIdSet, ItemKind, Node};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::layout::LayoutOf;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n@@ -92,7 +92,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n }\n \n // TODO: Replace with Map::is_argument(..) when it's fixed\n-fn is_argument(map: rustc::hir::map::Map<'_>, id: HirId) -> bool {\n+fn is_argument(map: rustc_middle::hir::map::Map<'_>, id: HirId) -> bool {\n     match map.find(id) {\n         Some(Node::Binding(_)) => (),\n         _ => return false,"}, {"sha": "1a1a40902c2d8cac7c1dda28ca8795ca166467f8", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::{def_id, Expr, ExprKind, Param, PatKind, QPath};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{"}, {"sha": "48b761260a5527225385edd9e0114ce7b7da8990", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{get_parent_expr, span_lint, span_lint_and_note};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::ty;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{def, BinOpKind, Block, Expr, ExprKind, Guard, HirId, Local, Node, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "d44481dd24a457ecf6239874bfba8e4ba8e52b7b", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::paths::{BEGIN_PANIC, BEGIN_PANIC_FMT, FROM_TRAIT, OPTION, RESULT};\n use crate::utils::{is_expn_of, match_def_path, method_chain_args, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n "}, {"sha": "79040ebf86d606712913929060372d9a8123d865", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{numeric_literal, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast::{FloatTy, LitFloatType, LitKind};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::{f32, f64, fmt};\n "}, {"sha": "86317fb8bd5c4767b9ed5d7a4e9543b7fc8ed17c", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -4,10 +4,10 @@ use crate::consts::{\n };\n use crate::utils::{higher, numeric_literal, span_lint_and_sugg, sugg, SpanlessEq};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n "}, {"sha": "30795f537ea19f9594c60ac4aedf7286bfa31304", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -91,7 +91,7 @@ fn on_argumentv1_new<'a, 'tcx>(\n         if pats.len() == 1;\n         then {\n             let ty = walk_ptrs_ty(cx.tables.pat_ty(&pats[0]));\n-            if ty.kind != rustc::ty::Str && !match_type(cx, ty, &paths::STRING) {\n+            if ty.kind != rustc_middle::ty::Str && !match_type(cx, ty, &paths::STRING) {\n                 return None;\n             }\n             if let ExprKind::Lit(ref lit) = format_args.kind {"}, {"sha": "8f5f82b0a2ce95b93ae623a0edb4b00b6af7049b", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{differing_macro_contexts, snippet_opt, span_lint_and_help, span_lint_and_note};\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "cf1b65a0166cdcd3064cdf47c87a70b6859f3c08", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,16 +3,16 @@ use crate::utils::{\n     must_use_attr, qpath_res, return_ty, snippet, snippet_opt, span_lint, span_lint_and_help, span_lint_and_then,\n     trait_ref_of_method, type_is_unsafe_function,\n };\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_hir::{def::Res, def_id::DefId};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;"}, {"sha": "088e4ab1921fb8a31f0d38397521dbb1cbeb2486", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,6 +1,6 @@\n-use rustc::ty;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "271df5b03e385071b2ebfb5cdf3001cbb88156ac", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n //! lint on if branches that could be swapped so no `!` operation is necessary\n //! on the condition\n \n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_lint_and_help;"}, {"sha": "a2b1085a36e628dc352b93b92f6e8dce988f5dd1", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,10 +2,10 @@\n \n use crate::consts::{constant, Constant};\n use crate::utils::{higher, span_lint, span_lint_and_help};\n-use rustc::ty;\n use rustc_ast::ast::RangeLimits;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "429f7440510b320b23b3ae901cba6746a8796f2d", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n //! lint when there is a large size difference between variants on an enum\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n-use rustc::ty::layout::LayoutOf;\n use rustc_errors::Applicability;\n use rustc_hir::{Item, ItemKind, VariantData};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {"}, {"sha": "f67fce9697af3694c5e72bdd0857248134bf10f5", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::interpret::ConstValue;\n-use rustc::ty::{self, ConstKind};\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::mir::interpret::ConstValue;\n+use rustc_middle::ty::{self, ConstKind};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n use if_chain::if_chain;"}, {"sha": "a875e58775e7560819b1a8a624a30e1c32baa110", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::{get_item_name, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n-use rustc::ty;\n use rustc_ast::ast::{LitKind, Name};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AssocItemKind, BinOpKind, Expr, ExprKind, ImplItemRef, Item, ItemKind, TraitItemRef};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};\n "}, {"sha": "dbf86ba312438ec8b82f059a26b6ff6298f2c368", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,12 +1,12 @@\n use crate::utils::{higher, qpath_res, snippet, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit;\n use rustc_hir::BindingAnnotation;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "1f5a6b77ed31e016367d6a1e92fb80ace130025d", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_hir::{PatKind, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{is_must_use_func_call, is_must_use_ty, match_type, paths, span_lint_and_help};"}, {"sha": "73c05607b0fb0873335b7ca3c81cd389087d6e17", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -18,8 +18,6 @@\n #[allow(unused_extern_crates)]\n extern crate fmt_macros;\n #[allow(unused_extern_crates)]\n-extern crate rustc;\n-#[allow(unused_extern_crates)]\n extern crate rustc_ast;\n #[allow(unused_extern_crates)]\n extern crate rustc_ast_pretty;\n@@ -44,6 +42,8 @@ extern crate rustc_lexer;\n #[allow(unused_extern_crates)]\n extern crate rustc_lint;\n #[allow(unused_extern_crates)]\n+extern crate rustc_middle;\n+#[allow(unused_extern_crates)]\n extern crate rustc_mir;\n #[allow(unused_extern_crates)]\n extern crate rustc_parse;\n@@ -82,7 +82,7 @@ use rustc_session::Session;\n /// ```\n /// # #![feature(rustc_private)]\n /// # #[allow(unused_extern_crates)]\n-/// # extern crate rustc;\n+/// # extern crate rustc_middle;\n /// # #[allow(unused_extern_crates)]\n /// # extern crate rustc_session;\n /// # #[macro_use]"}, {"sha": "8a23bedfdbea94ff776b0d804d73dfdffb10df0d", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,5 +1,3 @@\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{\n@@ -12,6 +10,8 @@ use rustc_hir::{\n     TyKind, WhereClause, WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;"}, {"sha": "1b0b111bcfed42a2f45ccc8b60dd9ba21fb5fcf5", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -7,10 +7,10 @@ use crate::utils::{\n     snippet_opt, span_lint_and_sugg,\n };\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{Expr, ExprKind, Lit, LitKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {"}, {"sha": "43217b6cc64e04abcff394dcc906fcb87e46502f", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -11,10 +11,6 @@ use crate::utils::{\n use crate::utils::{is_type_diagnostic_item, qpath_res, same_tys, sext, sugg};\n use if_chain::if_chain;\n use itertools::Itertools;\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::middle::region;\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n@@ -26,6 +22,10 @@ use rustc_hir::{\n };\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::{BytePos, Symbol};"}, {"sha": "58c94d7208d1c6b287bef97219aa808d6178a751", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,11 +3,11 @@ use crate::utils::{\n     is_copy, match_trait_method, match_type, remove_blocks, snippet_with_applicability, span_lint_and_sugg,\n };\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast::Ident;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "c5bb559e18ea5d2f50042078645a97464cf0071c", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::paths;\n use crate::utils::{iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "a124bf8b8db99743ff6d3534757abed6274224f6", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -9,8 +9,6 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::def::CtorKind;\n@@ -19,6 +17,8 @@ use rustc_hir::{\n     QPath, RangeEnd,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use std::cmp::Ordering;"}, {"sha": "35b8842dc450b64027600665ab5d55ec29088c11", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,10 +3,10 @@ use crate::utils::{\n     span_lint_and_sugg, span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "495f42700eeb563380b4a474d853fa8f4cd5f6ea", "filename": "clippy_lints/src/methods/inefficient_to_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use super::INEFFICIENT_TO_STRING;\n use crate::utils::{match_def_path, paths, snippet_with_applicability, span_lint_and_then, walk_ptrs_ty_depth};\n use if_chain::if_chain;\n-use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n+use rustc_middle::ty::{self, Ty};\n \n /// Checks for the `INEFFICIENT_TO_STRING` lint\n pub fn lint<'tcx>(cx: &LateContext<'_, 'tcx>, expr: &hir::Expr<'_>, arg: &hir::Expr<'_>, arg_ty: Ty<'tcx>) {"}, {"sha": "527508af8a319d3dbd3b49ac6177294f3fe8a993", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -8,14 +8,14 @@ use std::fmt;\n use std::iter;\n \n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::{self, Predicate, Ty};\n use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_lint::{LateContext, LateLintPass, Lint, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::{self, Predicate, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol, SymbolStr};"}, {"sha": "2fd4bb1db65cf752abee936d31557c7fcbc6fa48", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::{differing_macro_contexts, paths, snippet_with_applicability, span_lint_and_then};\n use crate::utils::{is_copy, match_type};\n-use rustc::hir::map::Map;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n use rustc_hir::{self, HirId, Path};\n use rustc_lint::LateContext;\n+use rustc_middle::hir::map::Map;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "41c9ce7cda3e61ab780854fd44c566e5be870523", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::paths;\n use crate::utils::usage::mutated_variables;\n use crate::utils::{match_qpath, match_trait_method, span_lint};\n-use rustc::hir::map::Map;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_lint::LateContext;\n+use rustc_middle::hir::map::Map;\n \n use if_chain::if_chain;\n "}, {"sha": "0dc55b7f7beb55dcf1ea9e095c03790a6165dc27", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,5 +1,4 @@\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n@@ -8,6 +7,7 @@ use rustc_hir::{\n     TyKind, UnOp,\n };\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{ExpnKind, Span};\n "}, {"sha": "b3244453d6baa4e8d75636642b4b728fc12e781d", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,7 +3,6 @@ use crate::utils::{\n     span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::{\n     BindingMode, Block, Expr, ExprKind, GenericParamKind, Generics, Lit, LitFloatType, LitIntType, LitKind, Mutability,\n     NodeId, Pat, PatKind, StmtKind, UnOp,\n@@ -12,6 +11,7 @@ use rustc_ast::visit::{walk_expr, FnKind, Visitor};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "0b235bdfe3cae6c8413a6e47033279cd8d6431a7", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{fn_has_unsatisfiable_preds, has_drop, is_entrypoint_fn, span_lint, trait_ref_of_method};\n-use rustc::lint::in_external_macro;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, Constness, FnDecl, GenericParamKind, HirId};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_mir::transform::qualify_min_const_fn::is_min_const_fn;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;"}, {"sha": "2eefb6bbaf4245b2ec30d66a2f4ff53738a24f47", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -7,11 +7,11 @@\n \n use crate::utils::span_lint;\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast::{self, MetaItem, MetaItemKind};\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::ty;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n "}, {"sha": "9fc26047d88804f4625cca0e6d223dfe5ed1d918", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -81,7 +81,7 @@ declare_lint_pass!(MissingInline => [MISSING_INLINE_IN_PUBLIC_ITEMS]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, it: &'tcx hir::Item<'_>) {\n-        if rustc::lint::in_external_macro(cx.sess(), it.span) || is_executable(cx) {\n+        if rustc_middle::lint::in_external_macro(cx.sess(), it.span) || is_executable(cx) {\n             return;\n         }\n \n@@ -130,8 +130,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n     }\n \n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, impl_item: &'tcx hir::ImplItem<'_>) {\n-        use rustc::ty::{ImplContainer, TraitContainer};\n-        if rustc::lint::in_external_macro(cx.sess(), impl_item.span) || is_executable(cx) {\n+        use rustc_middle::ty::{ImplContainer, TraitContainer};\n+        if rustc_middle::lint::in_external_macro(cx.sess(), impl_item.span) || is_executable(cx) {\n             return;\n         }\n "}, {"sha": "b24d5c1fc8ed15b27a30399c46514c575deacc14", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{sext, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::ty::{self};\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::fmt::Display;\n "}, {"sha": "0b9b7e1b8cc1b3e8e951d2f97dc43ff080390638", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_def_path, paths, span_lint, trait_ref_of_method, walk_ptrs_ty};\n-use rustc::ty::{Adt, Array, RawPtr, Ref, Slice, Tuple, Ty, TypeAndMut};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{Adt, Array, RawPtr, Ref, Slice, Tuple, Ty, TypeAndMut};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "f7a20a74b85e21d2e04ddb2399c24dff18a233f8", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{higher, span_lint};\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::ty;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "e5680482e5bfba5251f8151c5c869f83b2163670", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_lint;\n-use rustc::ty::subst::Subst;\n-use rustc::ty::{self, Ty};\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "80609d5cb1d152b5cd9ef5e330bf12757c81d69a", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{is_direct_expn_of, span_lint};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::ty;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BorrowKind, Expr, ExprKind, MatchSource, Mutability, StmtKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n "}, {"sha": "de8feee76baa45c662faadfacd57f046af471d6f", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,10 +3,10 @@\n //! This lint is **warn** by default\n \n use crate::utils::{match_type, paths, span_lint};\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_hir::Expr;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "422254bb007d738d3513bafdae81970f64292b68", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -4,11 +4,11 @@\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::ty;\n-use rustc::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir::{BindingAnnotation, BorrowKind, Expr, ExprKind, HirId, Item, Mutability, Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {"}, {"sha": "c352f61992753eb137c0a118eadbea8a187aa119", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -4,14 +4,14 @@ use crate::utils::{\n     snippet, snippet_opt, span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::ty::{self, TypeFoldable};\n use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{BindingAnnotation, Body, FnDecl, GenericArg, HirId, ItemKind, Node, PatKind, QPath, TyKind};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{Span, Symbol};\n use rustc_target::spec::abi::Abi;"}, {"sha": "4b2586877e562a0f84b6a88308b22ddeeb4d7bf6", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n-use rustc::ty;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "339c460bbd5c718b2cf51409cc8da73ad64d3e3a", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{self, paths, span_lint};"}, {"sha": "09f4cccf743177b43f528a269c74b0fae68f2452", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,13 +2,13 @@ use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_hir_and_then};\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::HirIdSet;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n "}, {"sha": "744cade461c0abc183367b5c33706690052453c8", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -4,11 +4,11 @@\n \n use std::ptr;\n \n-use rustc::ty::adjustment::Adjust;\n-use rustc::ty::{Ty, TypeFlags};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind, ImplItem, ImplItemKind, Item, ItemKind, Node, TraitItem, TraitItemKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass, Lint};\n+use rustc_middle::ty::adjustment::Adjust;\n+use rustc_middle::ty::{Ty, TypeFlags};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use rustc_typeck::hir_ty_to_ty;"}, {"sha": "fd07df780e42e559b7d48b0f4aa5784178ba8b6e", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -6,13 +6,13 @@ use crate::utils::{\n     walk_ptrs_hir_ty,\n };\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::{\n     BinOpKind, BodyId, Expr, ExprKind, FnDecl, FnRetTy, GenericArg, HirId, ImplItem, ImplItemKind, Item, ItemKind,\n     Lifetime, MutTy, Mutability, Node, PathSegment, QPath, TraitFn, TraitItem, TraitItemKind, Ty, TyKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::{MultiSpan, Symbol};"}, {"sha": "6bb11c8d9d765d2d0df8849165b5ef4f4bfea496", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,17 +3,17 @@ use crate::utils::{\n     span_lint_hir_and_then, walk_ptrs_ty_depth,\n };\n use if_chain::if_chain;\n-use rustc::mir::{\n-    self, traversal,\n-    visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor as _},\n-};\n-use rustc::ty::{self, fold::TypeVisitor, Ty};\n use rustc_data_structures::{fx::FxHashMap, transitive_relation::TransitiveRelation};\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{def_id, Body, FnDecl, HirId};\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::mir::{\n+    self, traversal,\n+    visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor as _},\n+};\n+use rustc_middle::ty::{self, fold::TypeVisitor, Ty};\n use rustc_mir::dataflow::BottomValue;\n use rustc_mir::dataflow::{Analysis, AnalysisDomain, GenKill, GenKillAnalysis, ResultsCursor};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -335,7 +335,7 @@ fn base_local_and_movability<'tcx>(\n     mir: &mir::Body<'tcx>,\n     place: mir::Place<'tcx>,\n ) -> Option<(mir::Local, CannotMoveOut)> {\n-    use rustc::mir::PlaceRef;\n+    use rustc_middle::mir::PlaceRef;\n \n     // Dereference. You cannot move things out from a borrowed value.\n     let mut deref = false;\n@@ -556,7 +556,7 @@ impl TypeVisitor<'_> for ContainsRegion {\n }\n \n fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n-    use rustc::mir::Rvalue::{Aggregate, BinaryOp, Cast, CheckedBinaryOp, Repeat, UnaryOp, Use};\n+    use rustc_middle::mir::Rvalue::{Aggregate, BinaryOp, Cast, CheckedBinaryOp, Repeat, UnaryOp, Use};\n \n     let mut visit_op = |op: &mir::Operand<'_>| match op {\n         mir::Operand::Copy(p) | mir::Operand::Move(p) => visit(p.local),"}, {"sha": "ef1a1d7ac297308db06ab049b1e23a4799b6b3bf", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast;\n use rustc_ast::visit::FnKind;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;"}, {"sha": "9b5c3306f3a971ae80fe8d4db7bc714013f62a85", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,13 +1,13 @@\n use crate::reexport::Name;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n-use rustc::lint::in_external_macro;\n-use rustc::ty;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{\n     Block, Body, Expr, ExprKind, FnDecl, Guard, HirId, Local, MutTy, Pat, PatKind, Path, QPath, StmtKind, Ty, TyKind,\n     UnOp,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "b308692b849762f177d377c8101dcf6f499c3782", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,12 +1,12 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{get_enclosing_block, match_qpath, span_lint_and_then, SpanlessEq};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_stmt, NestedVisitorMap, Visitor};\n use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, HirId, PatKind, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass, Lint};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n "}, {"sha": "bb41e964d13494015d233f3468720720fc21bbe0", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,7 @@\n-use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n "}, {"sha": "89b57ed1a8defb4e15776c8fe00645e07787e9b4", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{get_trait_def_id, span_lint, trait_ref_of_method};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "e038c3785d5922d8c8a129f197fdc0554df587f9", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -4,10 +4,10 @@ use crate::utils::{\n     span_lint_and_then, walk_ptrs_ty, SpanlessEq,\n };\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::{Block, Expr, ExprKind, PatKind, QPath, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Symbol;\n "}, {"sha": "c6302ca03d918ddee1fbc9ad93a94ee6fc8d79ac", "filename": "clippy_lints/src/to_digit_is_some.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_digit_is_some.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_def_path, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "3220bd9b9e2de81568d384efaecc96f599b1f1cb", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,11 +2,11 @@ use crate::utils::{\n     is_normalizable, last_path_segment, match_def_path, paths, snippet, span_lint, span_lint_and_then, sugg,\n };\n use if_chain::if_chain;\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, GenericArg, Mutability, QPath, TyKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::borrow::Cow;\n "}, {"sha": "1d0332c580500f73433486c69fe798ee57cd07b5", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::consts::{constant_context, Constant};\n use crate::utils::{match_qpath, paths, span_lint};\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "52b07fb34017a490ad406b9a569a4ba4a9f40a65", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,12 +2,12 @@ use std::cmp;\n \n use crate::utils::{is_copy, is_self_ty, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl, HirId, ItemKind, MutTy, Mutability, Node};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n use rustc_session::config::Config as SessionConfig;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;"}, {"sha": "7018fa6804ba71949c7892daf05d3c21ddbe4168", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{match_qpath, paths, snippet, snippet_with_macro_callsite, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::Ty;\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, Expr, ExprKind, MatchSource};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::Ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "4ff2947378f88ae545b30c2046596a2e77e0ae90", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -5,10 +5,6 @@ use std::cmp::Ordering;\n use std::collections::BTreeMap;\n \n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::ty::layout::LayoutOf;\n-use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n use rustc_ast::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n@@ -19,6 +15,10 @@ use rustc_hir::{\n     TraitItem, TraitItemKind, TyKind, UnOp,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::layout::LayoutOf;\n+use rustc_middle::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::Span;"}, {"sha": "c12553312d871af4095822f5287923287216b6c6", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n use rustc_hir::{AssocItemKind, HirId, ImplItem, ImplItemKind, ImplItemRef, ItemKind, Path};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_lint_and_help;"}, {"sha": "a3f71be695b58b0617f9d60783afdc08e9ef1288", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{higher::if_block, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n use rustc_hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, Path, QPath, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "4fcaf3cdb96ee3d229b14a7375ff2fac2241266e", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,8 +1,4 @@\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::lint::in_external_macro;\n-use rustc::ty;\n-use rustc::ty::{DefIdTree, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -12,6 +8,10 @@ use rustc_hir::{\n     TyKind,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n+use rustc_middle::ty::{DefIdTree, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::kw;\n "}, {"sha": "0c8f06da9bb3bfc8674d704f1f87f474ebb2346a", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,14 +2,14 @@\n //! to generate a clippy lint detecting said code automatically.\n \n use crate::utils::{get_attr, higher};\n-use rustc::hir::map::Map;\n use rustc_ast::ast::{Attribute, LitFloatType, LitKind};\n use rustc_ast::walk_list;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::hir::map::Map;\n use rustc_session::Session;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "7dfe666b18ed8b6adb421431a9acf64995b452d1", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -5,10 +5,10 @@\n \n use crate::utils::{is_expn_of, match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n-use rustc::ty;\n use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n+use rustc_middle::ty;\n \n /// Converts a hir binary operator to the corresponding `ast` type.\n #[must_use]"}, {"sha": "02b721fd378ff5afb1137f60e16e1e60711e77bc", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,7 +1,5 @@\n use crate::consts::{constant_context, constant_simple};\n use crate::utils::differing_macro_contexts;\n-use rustc::ich::StableHashingContextProvider;\n-use rustc::ty::TypeckTables;\n use rustc_ast::ast::Name;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::{\n@@ -10,6 +8,8 @@ use rustc_hir::{\n     TyKind, TypeBinding,\n };\n use rustc_lint::LateContext;\n+use rustc_middle::ich::StableHashingContextProvider;\n+use rustc_middle::ty::TypeckTables;\n use std::hash::Hash;\n \n /// Type used to check whether two ast are the same. This is different from the"}, {"sha": "bc2200800de38da18e3341f33ca4cf3cf7d3d1dc", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,7 +3,6 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n use rustc_ast::ast::{Crate as AstCrate, ItemKind, LitKind, Name, NodeId};\n use rustc_ast::visit::FnKind;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -13,6 +12,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{Crate, Expr, ExprKind, HirId, Item, MutTy, Mutability, Path, Ty, TyKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n+use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{Span, Spanned};\n use rustc_span::symbol::SymbolStr;"}, {"sha": "a2c6e0bbd24998c0d417ed46d2b063ec91221904", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -25,14 +25,6 @@ use std::borrow::Cow;\n use std::mem;\n \n use if_chain::if_chain;\n-use rustc::hir::map::Map;\n-use rustc::traits;\n-use rustc::ty::{\n-    self,\n-    layout::{self, IntegerExt},\n-    subst::GenericArg,\n-    Binder, Ty, TyCtxt, TypeFoldable,\n-};\n use rustc_ast::ast::{self, Attribute, LitKind};\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n@@ -47,6 +39,14 @@ use rustc_hir::{\n };\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::traits;\n+use rustc_middle::ty::{\n+    self,\n+    layout::{self, IntegerExt},\n+    subst::GenericArg,\n+    Binder, Ty, TyCtxt, TypeFoldable,\n+};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::original_sp;\n use rustc_span::symbol::{self, kw, Symbol};\n@@ -230,7 +230,7 @@ pub fn match_qpath(path: &QPath<'_>, segments: &[&str]) -> bool {\n /// }\n ///\n /// if match_path(ty_path, &[\"rustc\", \"lint\", \"Lint\"]) {\n-///     // This is a `rustc::lint::Lint`.\n+///     // This is a `rustc_middle::lint::Lint`.\n /// }\n /// ```\n pub fn match_path(path: &Path<'_>, segments: &[&str]) -> bool {\n@@ -832,7 +832,7 @@ pub fn is_integer_literal(expr: &Expr<'_>, value: u128) -> bool {\n /// Examples of coercions can be found in the Nomicon at\n /// <https://doc.rust-lang.org/nomicon/coercions.html>.\n ///\n-/// See `rustc::ty::adjustment::Adjustment` and `rustc_typeck::check::coercion` for more\n+/// See `rustc_middle::ty::adjustment::Adjustment` and `rustc_typeck::check::coercion` for more\n /// information on adjustments and coercions.\n pub fn is_adjusted(cx: &LateContext<'_, '_>, e: &Expr<'_>) -> bool {\n     cx.tables.adjustments().get(e.hir_id).is_some()\n@@ -1224,7 +1224,7 @@ pub fn match_function_call<'a, 'tcx>(\n /// to avoid crashes on `layout_of`.\n pub fn is_normalizable<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, param_env: ty::ParamEnv<'tcx>, ty: Ty<'tcx>) -> bool {\n     cx.tcx.infer_ctxt().enter(|infcx| {\n-        let cause = rustc::traits::ObligationCause::dummy();\n+        let cause = rustc_middle::traits::ObligationCause::dummy();\n         infcx.at(&cause, param_env).normalize(&ty).is_ok()\n     })\n }"}, {"sha": "240bf2449cb5ebbbc928be17beb60bf83e870efb", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{get_pat_name, match_var, snippet};\n-use rustc::hir::map::Map;\n use rustc_ast::ast::Name;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, BodyId, Expr, ExprKind, Param};\n use rustc_lint::LateContext;\n+use rustc_middle::hir::map::Map;\n use rustc_span::source_map::Span;\n use std::borrow::Cow;\n "}, {"sha": "1838fa5f8ffa4215acae556634c00243a0938e26", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,13 +1,13 @@\n use crate::utils::match_var;\n-use rustc::hir::map::Map;\n-use rustc::ty;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, HirId, Path};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty;\n use rustc_span::symbol::Ident;\n use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n "}, {"sha": "1174f421577493b20c80dd230057bda7d116c57a", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -1,10 +1,10 @@\n use crate::consts::constant;\n use crate::utils::{higher, is_copy, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n "}, {"sha": "2c699998ea90e237cdb708de9eb62507f3d0c60c", "filename": "src/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -5,16 +5,16 @@\n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n #[allow(unused_extern_crates)]\n-extern crate rustc;\n-#[allow(unused_extern_crates)]\n extern crate rustc_driver;\n #[allow(unused_extern_crates)]\n extern crate rustc_errors;\n #[allow(unused_extern_crates)]\n extern crate rustc_interface;\n+#[allow(unused_extern_crates)]\n+extern crate rustc_middle;\n \n-use rustc::ty::TyCtxt;\n use rustc_interface::interface;\n+use rustc_middle::ty::TyCtxt;\n use rustc_tools_util::VersionInfo;\n \n use lazy_static::lazy_static;"}, {"sha": "21bb5b01e02b5ec683c99f73167e0efd2f964b75", "filename": "tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -16,7 +16,7 @@ pub fn derive(_: TokenStream) -> TokenStream {\n     let output = quote! {\n         // Should not trigger `useless_attribute`\n         #[allow(dead_code)]\n-        extern crate rustc;\n+        extern crate rustc_middle;\n     };\n     output\n }"}, {"sha": "053faae02ce3e0d3aa457083224bb9d32b20ba30", "filename": "tests/ui/default_lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fdefault_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fdefault_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_lint.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,7 +2,7 @@\n #![feature(rustc_private)]\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n extern crate rustc_lint;"}, {"sha": "beaef79a340afad2c371352f2dda86f385c95d8c", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -2,7 +2,7 @@\n #![feature(rustc_private)]\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n extern crate rustc_lint;"}, {"sha": "999a19b289e1816c3ec20af42aa8dc39fa3bbd23", "filename": "tests/ui/outer_expn_data.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fouter_expn_data.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fouter_expn_data.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.fixed?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,9 +3,9 @@\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n \n-extern crate rustc;\n extern crate rustc_hir;\n extern crate rustc_lint;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n use rustc_hir::Expr;"}, {"sha": "5405d475d1accd4b1a49dd4bfea06bcf5464b3dc", "filename": "tests/ui/outer_expn_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fouter_expn_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fouter_expn_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -3,9 +3,9 @@\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n \n-extern crate rustc;\n extern crate rustc_hir;\n extern crate rustc_lint;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n use rustc_hir::Expr;"}, {"sha": "b222e2f7976d5a0b953fbeee44669608efff24ff", "filename": "tests/ui/useless_attribute.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fuseless_attribute.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fuseless_attribute.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.fixed?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -11,7 +11,7 @@\n #[allow(unused_imports)]\n #[allow(unused_extern_crates)]\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n #[macro_use]\n extern crate proc_macro_derive;"}, {"sha": "3422eace4ab97d81613ab2d27a3082fb174cd2ea", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e170c849420b9da1799b447828c6e6484f16696c/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=e170c849420b9da1799b447828c6e6484f16696c", "patch": "@@ -11,7 +11,7 @@\n #[allow(unused_imports)]\n #[allow(unused_extern_crates)]\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n #[macro_use]\n extern crate proc_macro_derive;"}]}