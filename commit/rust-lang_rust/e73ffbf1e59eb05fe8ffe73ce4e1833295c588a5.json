{"sha": "e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3M2ZmYmYxZTU5ZWIwNWZlOGZmZTczY2U0ZTE4MzMyOTVjNTg4YTU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-02-03T14:01:09Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-02-03T14:01:09Z"}, "message": "Add cargo file tidy test", "tree": {"sha": "48f6079b55d32e13f355443aa82a5278a9c68a23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48f6079b55d32e13f355443aa82a5278a9c68a23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "html_url": "https://github.com/rust-lang/rust/commit/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85e1f0905aae762b8d64b52e76bbc6aa5915894b", "url": "https://api.github.com/repos/rust-lang/rust/commits/85e1f0905aae762b8d64b52e76bbc6aa5915894b", "html_url": "https://github.com/rust-lang/rust/commit/85e1f0905aae762b8d64b52e76bbc6aa5915894b"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "e22cd6b0c5d2854a6d18d5e657807332a4e59117", "filename": "crates/syntax/fuzz/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/crates%2Fsyntax%2Ffuzz%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/crates%2Fsyntax%2Ffuzz%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ffuzz%2FCargo.toml?ref=e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "patch": "@@ -10,8 +10,8 @@ edition = \"2018\"\n cargo-fuzz = true\n \n [dependencies]\n-syntax = { path = \"..\" }\n-text_edit = { path = \"../../text_edit\" }\n+syntax = { path = \"..\", version = \"0.0.0\" }\n+text_edit = { path = \"../../text_edit\", version = \"0.0.0\" }\n libfuzzer-sys = { git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\" }\n \n # Prevent this from interfering with workspaces"}, {"sha": "b19985fb238479b1d44d66e4c0ae59e71787d0ec", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "patch": "@@ -38,19 +38,13 @@ pub fn rust_files() -> impl Iterator<Item = PathBuf> {\n     rust_files_in(&project_root().join(\"crates\"))\n }\n \n-pub fn rust_files_in(path: &Path) -> impl Iterator<Item = PathBuf> {\n-    let iter = WalkDir::new(path);\n-    return iter\n-        .into_iter()\n-        .filter_entry(|e| !is_hidden(e))\n-        .map(|e| e.unwrap())\n-        .filter(|e| !e.file_type().is_dir())\n-        .map(|e| e.into_path())\n-        .filter(|path| path.extension().map(|it| it == \"rs\").unwrap_or(false));\n+pub fn cargo_files() -> impl Iterator<Item = PathBuf> {\n+    files_in(&project_root(), \"toml\")\n+        .filter(|path| path.file_name().map(|it| it == \"Cargo.toml\").unwrap_or(false))\n+}\n \n-    fn is_hidden(entry: &DirEntry) -> bool {\n-        entry.file_name().to_str().map(|s| s.starts_with('.')).unwrap_or(false)\n-    }\n+pub fn rust_files_in(path: &Path) -> impl Iterator<Item = PathBuf> {\n+    files_in(path, \"rs\")\n }\n \n pub fn run_rustfmt(mode: Mode) -> Result<()> {\n@@ -120,3 +114,18 @@ fn date_iso() -> Result<String> {\n fn is_release_tag(tag: &str) -> bool {\n     tag.len() == \"2020-02-24\".len() && tag.starts_with(|c: char| c.is_ascii_digit())\n }\n+\n+fn files_in(path: &Path, ext: &'static str) -> impl Iterator<Item = PathBuf> {\n+    let iter = WalkDir::new(path);\n+    return iter\n+        .into_iter()\n+        .filter_entry(|e| !is_hidden(e))\n+        .map(|e| e.unwrap())\n+        .filter(|e| !e.file_type().is_dir())\n+        .map(|e| e.into_path())\n+        .filter(move |path| path.extension().map(|it| it == ext).unwrap_or(false));\n+\n+    fn is_hidden(entry: &DirEntry) -> bool {\n+        entry.file_name().to_str().map(|s| s.starts_with('.')).unwrap_or(false)\n+    }\n+}"}, {"sha": "cb83e07fd1b0486cf637c40eae6061319180f43b", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=e73ffbf1e59eb05fe8ffe73ce4e1833295c588a5", "patch": "@@ -5,6 +5,7 @@ use std::{\n \n use xshell::{cmd, read_file};\n use xtask::{\n+    cargo_files,\n     codegen::{self, Mode},\n     project_root, run_rustfmt, rust_files,\n };\n@@ -93,6 +94,32 @@ fn rust_files_are_tidy() {\n     tidy_docs.finish();\n }\n \n+#[test]\n+fn cargo_files_are_tidy() {\n+    for cargo in cargo_files() {\n+        let mut section = None;\n+        for (line_no, text) in read_file(&cargo).unwrap().lines().enumerate() {\n+            let text = text.trim();\n+            if text.starts_with(\"[\") {\n+                section = Some(text);\n+                continue;\n+            }\n+            if !section.map(|it| it.starts_with(\"[dependencies\")).unwrap_or(false) {\n+                continue;\n+            }\n+            let text: String = text.split_whitespace().collect();\n+            if text.contains(\"path=\") && !text.contains(\"version\") {\n+                panic!(\n+                    \"\\ncargo internal dependencies should have version.\\n\\\n+                     {}:{}\\n\",\n+                    cargo.display(),\n+                    line_no + 1\n+                )\n+            }\n+        }\n+    }\n+}\n+\n #[test]\n fn check_merge_commits() {\n     let stdout = cmd!(\"git rev-list --merges --invert-grep --author 'bors\\\\[bot\\\\]' HEAD~19..\")"}]}