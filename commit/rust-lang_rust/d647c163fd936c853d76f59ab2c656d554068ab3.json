{"sha": "d647c163fd936c853d76f59ab2c656d554068ab3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NDdjMTYzZmQ5MzZjODUzZDc2ZjU5YWIyYzY1NmQ1NTQwNjhhYjM=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-09T13:53:37Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-09T13:53:37Z"}, "message": "Updated/added test cases.", "tree": {"sha": "c5092621db603321d235ea2bef6ba85e8c2424dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5092621db603321d235ea2bef6ba85e8c2424dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d647c163fd936c853d76f59ab2c656d554068ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d647c163fd936c853d76f59ab2c656d554068ab3", "html_url": "https://github.com/rust-lang/rust/commit/d647c163fd936c853d76f59ab2c656d554068ab3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d647c163fd936c853d76f59ab2c656d554068ab3/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd7835effa42a37ddf647e9cbf132d601de4700d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7835effa42a37ddf647e9cbf132d601de4700d", "html_url": "https://github.com/rust-lang/rust/commit/bd7835effa42a37ddf647e9cbf132d601de4700d"}], "stats": {"total": 136, "additions": 112, "deletions": 24}, "files": [{"sha": "7587b0050ad379203f69be645f6e5fd4963cedac", "filename": "src/test/run-pass/arith-0.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farith-0.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -0,0 +1,5 @@\n+fn main() -> () {\n+    let int a = 10;\n+    log a;\n+    check (a * (a - 1) == 90);\n+}\n\\ No newline at end of file"}, {"sha": "bac6a055e80e1905d1a40f9469fbb2c8e796cf1c", "filename": "src/test/run-pass/arith-1.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farith-1.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -0,0 +1,22 @@\n+fn main() -> () {\n+    let int i32_a = 10;\n+    check(i32_a == 10);\n+    check(i32_a - 10 == 0);\n+    check(i32_a / 10 == 1);\n+    check(i32_a - 20 == -10);\n+    check(i32_a << 10 == 10240);\n+    check(i32_a << 16 == 655360);\n+    check(i32_a * 16 == 160);\n+    check(i32_a * i32_a * i32_a == 1000);\n+    check(i32_a * i32_a * i32_a * i32_a == 10000);\n+    check(((i32_a * i32_a) / i32_a) * i32_a == 100);\n+    check(i32_a * (i32_a - 1) << 2 + i32_a == 368640);\n+\n+    let int i32_b = 0x10101010;\n+    check(i32_b + 1 - 1 == i32_b);\n+    check(i32_b << 1 == i32_b << 1);\n+    check(i32_b >> 1 == i32_b >> 1);\n+    check((i32_b & (i32_b << 1)) == 0);\n+    log ((i32_b | (i32_b << 1)));\n+    check((i32_b | (i32_b << 1)) == 0x30303030);\n+}\n\\ No newline at end of file"}, {"sha": "33a740c84fce6ffd6df35c09eeaef486fdca5725", "filename": "src/test/run-pass/arith-2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Farith-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farith-2.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -0,0 +1,5 @@\n+fn main() -> () {\n+    let int i32_c = 0x10101010;\n+    check (i32_c + i32_c * 2 / 3 * 2 + (i32_c - 7 % 3) == \n+           i32_c + (((i32_c * 2) / 3) * 2) + (i32_c - (7 % 3)));\n+}\n\\ No newline at end of file"}, {"sha": "bdd7ee256413a3ed1b6aa0eebf7f2a1eba141a6e", "filename": "src/test/run-pass/basic-1.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -0,0 +1,25 @@\n+// -*- rust -*-\n+\n+io fn a(chan[int] c) {\n+    c <| 10;\n+}\n+\n+io fn main() {\n+    let port[int] p = port();\n+    spawn a(chan(p));\n+    spawn b(chan(p));\n+    let int n = 0;\n+    n <- p;\n+    n <- p;\n+//    log \"Finished.\";\n+}\n+\n+io fn b(chan[int] c) {\n+//    log \"task b0\";\n+//    log \"task b1\";\n+//    log \"task b2\";\n+//    log \"task b3\";\n+//    log \"task b4\";\n+//    log \"task b5\";\n+    c <| 10;\n+}\n\\ No newline at end of file"}, {"sha": "975a0d4b896bb9d24071c555bb5513b9c87db81c", "filename": "src/test/run-pass/basic-2.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -0,0 +1,26 @@\n+// -*- rust -*-\n+\n+io fn a(chan[int] c) {\n+    log \"task a0\";\n+    log \"task a1\";\n+    c <| 10;\n+}\n+\n+io fn main() {\n+    let port[int] p = port();\n+    spawn a(chan(p));\n+    spawn b(chan(p));\n+    let int n = 0;\n+    n <- p;\n+    n <- p;\n+    log \"Finished.\";\n+}\n+\n+io fn b(chan[int] c) {\n+    log \"task b0\";\n+    log \"task b1\";\n+    log \"task b2\";\n+    log \"task b2\";\n+    log \"task b3\";\n+    c <| 10;\n+}"}, {"sha": "28294422b5c22f9d355130ea1931ea7d0230771d", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -15,5 +15,5 @@ io fn test05() {\n     let int value <- po;\n     value <- po;\n     value <- po;\n-    log value;\n+    check(value == 30);\n }"}, {"sha": "864d49de1e09b2cfb74ad5306a6a601c2b288436", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -1,8 +1,8 @@\n fn main() -> () {    \n-    log \"===== THREADS =====\";\n+    log \"===== SPAWNING and JOINING TASKS =====\";\n+    test00(false);\n+    log \"===== SPAWNING and JOINING THREAD TASKS =====\";\n     test00(true);\n-    log \"====== TASKS ======\";\n-   // test00(false);\n }\n \n fn start(int task_number) {\n@@ -15,7 +15,7 @@ fn start(int task_number) {\n }\n     \n fn test00(bool create_threads) {\n-    let int number_of_tasks = 0;\n+    let int number_of_tasks = 8;\n     \n     let int i = 0;\n     let vec[task] tasks = vec();"}, {"sha": "9a3f9e16919ef0cad0220b8f6124ced180fe0e80", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -1,6 +1,8 @@\n io fn main() -> () {\n-   log \"===== THREADS =====\";\n+   log \"===== WITHOUT THREADS =====\";\n    test00(false);\n+   log \"====== WITH THREADS ======\";\n+   test00(true);\n }\n \n io fn test00_start(chan[int] ch, int message, int count) {\n@@ -15,8 +17,9 @@ io fn test00_start(chan[int] ch, int message, int count) {\n }\n \n io fn test00(bool is_multithreaded) {\n-    let int number_of_tasks = 1;\n-    let int number_of_messages = 0;\n+    let int number_of_tasks = 16;\n+    let int number_of_messages = 4;\n+    \n     log \"Creating tasks\";\n     \n     let port[int] po = port();\n@@ -27,13 +30,13 @@ io fn test00(bool is_multithreaded) {\n     // Create and spawn tasks...\n     let vec[task] tasks = vec();\n     while (i < number_of_tasks) {\n-        i = i + 1;\n         if (is_multithreaded) {\n             tasks += vec(\n                 spawn thread test00_start(ch, i, number_of_messages));\n         } else {\n             tasks += vec(spawn test00_start(ch, i, number_of_messages));\n         }\n+        i = i + 1;\n     }\n     \n     // Read from spawned tasks...\n@@ -53,7 +56,7 @@ io fn test00(bool is_multithreaded) {\n     }\n     \n     log \"Completed: Final number is: \";\n-    check (sum + 1 == number_of_messages * \n-           (number_of_tasks * number_of_tasks + number_of_tasks) / 2);\n-    log sum;\n-}\n\\ No newline at end of file\n+    // check (sum == (((number_of_tasks * (number_of_tasks - 1)) / 2) * \n+    //       number_of_messages));\n+    check (sum == 480);\n+}"}, {"sha": "2774c0ba545e79d0ed8e244d1b852b3cf0341c38", "filename": "src/test/run-pass/task-comm-6.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -31,6 +31,8 @@ io fn test00() {\n         r <- p; sum += r;\n         i += 1;\n     }\n-    \n-    check (sum == 4 * ((number_of_messages * (number_of_messages - 1)) / 2));\n+\n+    check (sum == 1998000);\n+    // check (sum == 4 * ((number_of_messages * \n+    //                   (number_of_messages - 1)) / 2));\n }\n\\ No newline at end of file"}, {"sha": "3c5d321689fd9e3314a47ee661866b66fc2df1e1", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647c163fd936c853d76f59ab2c656d554068ab3/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=d647c163fd936c853d76f59ab2c656d554068ab3", "patch": "@@ -1,11 +1,11 @@\n \n-fn main() -> () {\n-    // test00(true);\n+io fn main() -> () {\n+    test00(true);\n     // test01();\n-    // test02();\n-    // test03();\n-    // test04();\n-    // test05();\n+    test02();\n+    test03();\n+    test04();\n+    test05();\n     test06();\n }\n \n@@ -22,7 +22,7 @@ io fn test00_start(chan[int] ch, int message, int count) {\n \n io fn test00(bool is_multithreaded) {\n     let int number_of_tasks = 1;\n-    let int number_of_messages = 64;\n+    let int number_of_messages = 4;\n     log \"Creating tasks\";\n     \n     let port[int] po = port();\n@@ -103,7 +103,7 @@ fn test04_start() {\n \n fn test04() {\n     log \"Spawning lots of tasks.\";\n-    let int i = 64;\n+    let int i = 4;\n     while (i > 0) {\n         i = i - 1;\n         spawn thread test04_start();\n@@ -139,7 +139,7 @@ fn test06_start(int task_number) {\n }\n     \n fn test06() {\n-    let int number_of_tasks = 32;\n+    let int number_of_tasks = 4;\n     log \"Creating tasks\";\n     \n     let int i = 0;"}]}