{"sha": "f5a702dc785760c74960007af389caa47546fa58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YTcwMmRjNzg1NzYwYzc0OTYwMDA3YWYzODljYWE0NzU0NmZhNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-30T17:12:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-30T17:12:20Z"}, "message": "Auto merge of #37445 - nnethercote:shrink-Expr_, r=eddyb\n\nShrink Expr_::ExprInlineAsm.\n\nOn 64-bit this reduces the size of `Expr_` from 144 to 64 bytes, and\nreduces the size of `Expr` from 176 to 96 bytes.\n\nFor the workload in #36799 this reduces the RSS for the \"lowering ast -> hir\" phase and all subsequent phases by 50 MiB, which reduces the peak RSS for that workload by about 1%. Not huge, but it's a very easy improvement.\n\nr? @eddyb", "tree": {"sha": "66fec222fb867f464eb0f270a1253d70101752b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66fec222fb867f464eb0f270a1253d70101752b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a702dc785760c74960007af389caa47546fa58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a702dc785760c74960007af389caa47546fa58", "html_url": "https://github.com/rust-lang/rust/commit/f5a702dc785760c74960007af389caa47546fa58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a702dc785760c74960007af389caa47546fa58/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6062e7ed3d81cb3bd535993e9b14269924b76c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/6062e7ed3d81cb3bd535993e9b14269924b76c29", "html_url": "https://github.com/rust-lang/rust/commit/6062e7ed3d81cb3bd535993e9b14269924b76c29"}, {"sha": "a920e355ea837a950b484b5791051337cd371f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a920e355ea837a950b484b5791051337cd371f5d", "html_url": "https://github.com/rust-lang/rust/commit/a920e355ea837a950b484b5791051337cd371f5d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "620ee30c95628a100ca6ff35b01bc349fe76f1fe", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5a702dc785760c74960007af389caa47546fa58/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a702dc785760c74960007af389caa47546fa58/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f5a702dc785760c74960007af389caa47546fa58", "patch": "@@ -1218,7 +1218,7 @@ impl<'a> LoweringContext<'a> {\n                         alignstack,\n                         dialect,\n                         expn_id,\n-                    }) => hir::ExprInlineAsm(hir::InlineAsm {\n+                    }) => hir::ExprInlineAsm(P(hir::InlineAsm {\n                     inputs: inputs.iter().map(|&(ref c, _)| c.clone()).collect(),\n                     outputs: outputs.iter()\n                                     .map(|out| {\n@@ -1236,7 +1236,7 @@ impl<'a> LoweringContext<'a> {\n                     alignstack: alignstack,\n                     dialect: dialect,\n                     expn_id: expn_id,\n-                }, outputs.iter().map(|out| self.lower_expr(&out.expr)).collect(),\n+                }), outputs.iter().map(|out| self.lower_expr(&out.expr)).collect(),\n                    inputs.iter().map(|&(_, ref input)| self.lower_expr(input)).collect()),\n                 ExprKind::Struct(ref path, ref fields, ref maybe_expr) => {\n                     hir::ExprStruct(self.lower_path(path),"}, {"sha": "c451a789193aaecb0f917a69a3987eaf5282fa55", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5a702dc785760c74960007af389caa47546fa58/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a702dc785760c74960007af389caa47546fa58/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=f5a702dc785760c74960007af389caa47546fa58", "patch": "@@ -940,7 +940,7 @@ pub enum Expr_ {\n     ExprRet(Option<P<Expr>>),\n \n     /// Inline assembly (from `asm!`), with its outputs and inputs.\n-    ExprInlineAsm(InlineAsm, Vec<P<Expr>>, Vec<P<Expr>>),\n+    ExprInlineAsm(P<InlineAsm>, HirVec<P<Expr>>, HirVec<P<Expr>>),\n \n     /// A struct or struct-like variant literal expression.\n     ///"}]}