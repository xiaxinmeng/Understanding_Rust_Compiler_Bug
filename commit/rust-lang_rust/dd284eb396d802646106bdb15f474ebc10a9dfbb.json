{"sha": "dd284eb396d802646106bdb15f474ebc10a9dfbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMjg0ZWIzOTZkODAyNjQ2MTA2YmRiMTVmNDc0ZWJjMTBhOWRmYmI=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2012-01-02T20:29:44Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-04T08:33:04Z"}, "message": "\"char\": use shorter names \"to_lower\"/\"to_upper\", analogous to the same names in \"str\"", "tree": {"sha": "b9dadd471034fc5d1fe0619e5bd8ec9d9612996c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9dadd471034fc5d1fe0619e5bd8ec9d9612996c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd284eb396d802646106bdb15f474ebc10a9dfbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd284eb396d802646106bdb15f474ebc10a9dfbb", "html_url": "https://github.com/rust-lang/rust/commit/dd284eb396d802646106bdb15f474ebc10a9dfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd284eb396d802646106bdb15f474ebc10a9dfbb/comments", "author": null, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e12b1692478e490fbffdc1aad86e6de627425f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e12b1692478e490fbffdc1aad86e6de627425f8d", "html_url": "https://github.com/rust-lang/rust/commit/e12b1692478e490fbffdc1aad86e6de627425f8d"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "5475e695a79906df42916f13c5845de9945ef6b8", "filename": "src/libcore/char.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=dd284eb396d802646106bdb15f474ebc10a9dfbb", "patch": "@@ -41,7 +41,7 @@ export is_alphabetic,\n        is_XID_start, is_XID_continue,\n        is_lowercase, is_uppercase,\n        is_whitespace, is_alphanumeric,\n-       to_digit, to_lowercase, to_uppercase, maybe_digit, cmp;\n+       to_digit, to_lower, to_upper, maybe_digit, cmp;\n \n import is_alphabetic = unicode::derived_property::Alphabetic;\n import is_XID_start = unicode::derived_property::XID_Start;\n@@ -137,27 +137,27 @@ pure fn maybe_digit(c: char) -> option::t<u8> {\n }\n \n /*\n- Function: to_lowercase\n+ Function: to_lower\n \n  Convert a char to the corresponding lower case.\n \n  FIXME: works only on ASCII\n */\n-pure fn to_lowercase(c: char) -> char {\n+pure fn to_lower(c: char) -> char {\n     alt c {\n       'A' to 'Z' { ((c as u8) + 32u8) as char }\n       _ { c }\n     }\n }\n \n /*\n- Function: to_uppercase\n+ Function: to_upper\n \n  Convert a char to the corresponding upper case.\n \n  FIXME: works only on ASCII\n */\n-pure fn to_uppercase(c: char) -> char {\n+pure fn to_upper(c: char) -> char {\n     alt c {\n       'a' to 'z' { ((c as u8) - 32u8) as char }\n       _ { c }"}, {"sha": "1872d0ae674b9f51428a31c5c4edbe815113c61b", "filename": "src/libcore/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=dd284eb396d802646106bdb15f474ebc10a9dfbb", "patch": "@@ -833,7 +833,7 @@ Convert a string to lowercase\n fn to_lower(s: str) -> str {\n     let outstr = \"\";\n     iter_chars(s) { |c|\n-        push_char(outstr, char::to_lowercase(c));\n+        push_char(outstr, char::to_lower(c));\n     }\n     ret outstr;\n }\n@@ -845,7 +845,7 @@ Convert a string to uppercase\n fn to_upper(s: str) -> str {\n     let outstr = \"\";\n     iter_chars(s) { |c|\n-        push_char(outstr, char::to_uppercase(c));\n+        push_char(outstr, char::to_upper(c));\n     }\n     ret outstr;\n }"}, {"sha": "7da2443d6c2c1c425de057afc8e26247f68c3cd8", "filename": "src/test/stdtest/char.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Ftest%2Fstdtest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd284eb396d802646106bdb15f474ebc10a9dfbb/src%2Ftest%2Fstdtest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fchar.rs?ref=dd284eb396d802646106bdb15f474ebc10a9dfbb", "patch": "@@ -62,17 +62,17 @@ fn test_to_digit_fail_2() {\n }\n \n #[test]\n-fn test_to_lowercase() {\n-    assert (char::to_lowercase('H') == 'h');\n-    assert (char::to_lowercase('e') == 'e');\n-    //assert (char::to_lowercase('\u00d6') == '\u00f6');\n-    assert (char::to_lowercase('\u00df') == '\u00df');\n+fn test_to_lower() {\n+    assert (char::to_lower('H') == 'h');\n+    assert (char::to_lower('e') == 'e');\n+    //assert (char::to_lower('\u00d6') == '\u00f6');\n+    assert (char::to_lower('\u00df') == '\u00df');\n }\n \n #[test]\n-fn test_to_uppercase() {\n-    assert (char::to_uppercase('l') == 'L');\n-    assert (char::to_uppercase('Q') == 'Q');\n-    //assert (char::to_uppercase('\u00fc') == '\u00dc');\n-    assert (char::to_uppercase('\u00df') == '\u00df');\n+fn test_to_upper() {\n+    assert (char::to_upper('l') == 'L');\n+    assert (char::to_upper('Q') == 'Q');\n+    //assert (char::to_upper('\u00fc') == '\u00dc');\n+    assert (char::to_upper('\u00df') == '\u00df');\n }"}]}