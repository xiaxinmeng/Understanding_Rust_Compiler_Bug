{"sha": "7103c39dbb32f5bc1452f8abaa3de5d68b47053b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMDNjMzlkYmIzMmY1YmMxNDUyZjhhYmFhM2RlNWQ2OGI0NzA1M2I=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T16:23:52Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T16:36:08Z"}, "message": "Move tuple tests into submodule", "tree": {"sha": "aa1093249d9d08dc5b0b02f32c03fc9622085c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa1093249d9d08dc5b0b02f32c03fc9622085c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7103c39dbb32f5bc1452f8abaa3de5d68b47053b", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7103c39dbb32f5bc1452f8abaa3de5d68b47053b", "html_url": "https://github.com/rust-lang/rust/commit/7103c39dbb32f5bc1452f8abaa3de5d68b47053b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7103c39dbb32f5bc1452f8abaa3de5d68b47053b/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9eec664fd812dda88c349d092f327c9be8a7558", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9eec664fd812dda88c349d092f327c9be8a7558", "html_url": "https://github.com/rust-lang/rust/commit/d9eec664fd812dda88c349d092f327c9be8a7558"}], "stats": {"total": 102, "additions": 54, "deletions": 48}, "files": [{"sha": "e8796147ef8f64c795006e7d89b62002879fe296", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 54, "deletions": 48, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/7103c39dbb32f5bc1452f8abaa3de5d68b47053b/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7103c39dbb32f5bc1452f8abaa3de5d68b47053b/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=7103c39dbb32f5bc1452f8abaa3de5d68b47053b", "patch": "@@ -311,55 +311,61 @@ tuple_impls!(\n     }\n )\n \n-#[test]\n-fn test_tuple_ref() {\n-    let x = (~\"foo\", ~\"bar\");\n-    assert_eq!(x.first_ref(), &~\"foo\");\n-    assert_eq!(x.second_ref(), &~\"bar\");\n-}\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+    use clone::Clone;\n+\n+    #[test]\n+    fn test_tuple_ref() {\n+        let x = (~\"foo\", ~\"bar\");\n+        assert_eq!(x.first_ref(), &~\"foo\");\n+        assert_eq!(x.second_ref(), &~\"bar\");\n+    }\n \n-#[test]\n-#[allow(non_implicitly_copyable_typarams)]\n-fn test_tuple() {\n-    assert_eq!((948, 4039.48).first(), 948);\n-    assert_eq!((34.5, ~\"foo\").second(), ~\"foo\");\n-    assert_eq!(('a', 2).swap(), (2, 'a'));\n-}\n+    #[test]\n+    #[allow(non_implicitly_copyable_typarams)]\n+    fn test_tuple() {\n+        assert_eq!((948, 4039.48).first(), 948);\n+        assert_eq!((34.5, ~\"foo\").second(), ~\"foo\");\n+        assert_eq!(('a', 2).swap(), (2, 'a'));\n+    }\n \n-#[test]\n-fn test_clone() {\n-    let a = (1, ~\"2\");\n-    let b = a.clone();\n-    assert_eq!(a.first(), b.first());\n-    assert_eq!(a.second(), b.second());\n-}\n+    #[test]\n+    fn test_clone() {\n+        let a = (1, ~\"2\");\n+        let b = a.clone();\n+        assert_eq!(a.first(), b.first());\n+        assert_eq!(a.second(), b.second());\n+    }\n \n-#[test]\n-fn test_n_tuple() {\n-    let t = (0u8, 1u16, 2u32, 3u64, 4u, 5i8, 6i16, 7i32, 8i64, 9i, 10f32, 11f64);\n-    assert_eq!(t.n0(), 0u8);\n-    assert_eq!(t.n1(), 1u16);\n-    assert_eq!(t.n2(), 2u32);\n-    assert_eq!(t.n3(), 3u64);\n-    assert_eq!(t.n4(), 4u);\n-    assert_eq!(t.n5(), 5i8);\n-    assert_eq!(t.n6(), 6i16);\n-    assert_eq!(t.n7(), 7i32);\n-    assert_eq!(t.n8(), 8i64);\n-    assert_eq!(t.n9(), 9i);\n-    assert_eq!(t.n10(), 10f32);\n-    assert_eq!(t.n11(), 11f64);\n-\n-    assert_eq!(t.n0_ref(), &0u8);\n-    assert_eq!(t.n1_ref(), &1u16);\n-    assert_eq!(t.n2_ref(), &2u32);\n-    assert_eq!(t.n3_ref(), &3u64);\n-    assert_eq!(t.n4_ref(), &4u);\n-    assert_eq!(t.n5_ref(), &5i8);\n-    assert_eq!(t.n6_ref(), &6i16);\n-    assert_eq!(t.n7_ref(), &7i32);\n-    assert_eq!(t.n8_ref(), &8i64);\n-    assert_eq!(t.n9_ref(), &9i);\n-    assert_eq!(t.n10_ref(), &10f32);\n-    assert_eq!(t.n11_ref(), &11f64);\n+    #[test]\n+    fn test_n_tuple() {\n+        let t = (0u8, 1u16, 2u32, 3u64, 4u, 5i8, 6i16, 7i32, 8i64, 9i, 10f32, 11f64);\n+        assert_eq!(t.n0(), 0u8);\n+        assert_eq!(t.n1(), 1u16);\n+        assert_eq!(t.n2(), 2u32);\n+        assert_eq!(t.n3(), 3u64);\n+        assert_eq!(t.n4(), 4u);\n+        assert_eq!(t.n5(), 5i8);\n+        assert_eq!(t.n6(), 6i16);\n+        assert_eq!(t.n7(), 7i32);\n+        assert_eq!(t.n8(), 8i64);\n+        assert_eq!(t.n9(), 9i);\n+        assert_eq!(t.n10(), 10f32);\n+        assert_eq!(t.n11(), 11f64);\n+\n+        assert_eq!(t.n0_ref(), &0u8);\n+        assert_eq!(t.n1_ref(), &1u16);\n+        assert_eq!(t.n2_ref(), &2u32);\n+        assert_eq!(t.n3_ref(), &3u64);\n+        assert_eq!(t.n4_ref(), &4u);\n+        assert_eq!(t.n5_ref(), &5i8);\n+        assert_eq!(t.n6_ref(), &6i16);\n+        assert_eq!(t.n7_ref(), &7i32);\n+        assert_eq!(t.n8_ref(), &8i64);\n+        assert_eq!(t.n9_ref(), &9i);\n+        assert_eq!(t.n10_ref(), &10f32);\n+        assert_eq!(t.n11_ref(), &11f64);\n+    }\n }"}]}