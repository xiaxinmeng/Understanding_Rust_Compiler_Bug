{"sha": "a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "node_id": "C_kwDOAAsO6NoAKGE5ZjFiN2JkMmEyNWUzNGRlMjllYjg4ZjgxNTUwNjkwZjRmZWM1ZGM", "commit": {"author": {"name": "Aaron Kofsky", "email": "aaronko@umich.edu", "date": "2022-08-04T21:00:48Z"}, "committer": {"name": "Aaron Kofsky", "email": "aaronko@umich.edu", "date": "2022-08-04T21:00:48Z"}, "message": "Explain why let-underscoring a lock guard is incorrect.\n\nCurrently, the let_underscore_lock lint simply tells what is wrong, but\nnot why it is wrong. We fix this by using a `MultiSpan` to explain\nspecifically that doing `let _ = ` immediately drops the lock guard\nbecause it does not assign the lock guard to a binding.", "tree": {"sha": "3a5ac965a3c4c7e45af33eb97b258870b1242b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a5ac965a3c4c7e45af33eb97b258870b1242b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "html_url": "https://github.com/rust-lang/rust/commit/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc/comments", "author": {"login": "a2aaron", "id": 15718048, "node_id": "MDQ6VXNlcjE1NzE4MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/15718048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a2aaron", "html_url": "https://github.com/a2aaron", "followers_url": "https://api.github.com/users/a2aaron/followers", "following_url": "https://api.github.com/users/a2aaron/following{/other_user}", "gists_url": "https://api.github.com/users/a2aaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/a2aaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a2aaron/subscriptions", "organizations_url": "https://api.github.com/users/a2aaron/orgs", "repos_url": "https://api.github.com/users/a2aaron/repos", "events_url": "https://api.github.com/users/a2aaron/events{/privacy}", "received_events_url": "https://api.github.com/users/a2aaron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a2aaron", "id": 15718048, "node_id": "MDQ6VXNlcjE1NzE4MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/15718048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a2aaron", "html_url": "https://github.com/a2aaron", "followers_url": "https://api.github.com/users/a2aaron/followers", "following_url": "https://api.github.com/users/a2aaron/following{/other_user}", "gists_url": "https://api.github.com/users/a2aaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/a2aaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a2aaron/subscriptions", "organizations_url": "https://api.github.com/users/a2aaron/orgs", "repos_url": "https://api.github.com/users/a2aaron/repos", "events_url": "https://api.github.com/users/a2aaron/events{/privacy}", "received_events_url": "https://api.github.com/users/a2aaron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9095ff2139fb305b15006d1f2a1ff16da0b6c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9095ff2139fb305b15006d1f2a1ff16da0b6c29", "html_url": "https://github.com/rust-lang/rust/commit/a9095ff2139fb305b15006d1f2a1ff16da0b6c29"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "79d1443dc353cda01c863b96c4611546e42fa2c9", "filename": "compiler/rustc_lint/src/let_underscore.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs?ref=a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "patch": "@@ -1,5 +1,5 @@\n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, MultiSpan};\n use rustc_hir as hir;\n use rustc_middle::{lint::LintDiagnosticBuilder, ty};\n use rustc_span::Symbol;\n@@ -119,7 +119,16 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n             };\n \n             if is_sync_lock {\n-                cx.struct_span_lint(LET_UNDERSCORE_LOCK, local.span, |lint| {\n+                let mut span = MultiSpan::from_spans(vec![local.pat.span, init.span]);\n+                span.push_span_label(\n+                    local.pat.span,\n+                    \"this lock is not assigned to a binding and is immediately dropped\".to_string(),\n+                );\n+                span.push_span_label(\n+                    init.span,\n+                    \"this binding will immediately drop the value assigned to it\".to_string(),\n+                );\n+                cx.struct_span_lint(LET_UNDERSCORE_LOCK, span, |lint| {\n                     build_and_emit_lint(\n                         lint,\n                         local,"}, {"sha": "fb58af0a42f81422097a8e7848caf14e3a785c3a", "filename": "src/test/ui/lint/let_underscore/let_underscore_lock.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc/src%2Ftest%2Fui%2Flint%2Flet_underscore%2Flet_underscore_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9f1b7bd2a25e34de29eb88f81550690f4fec5dc/src%2Ftest%2Fui%2Flint%2Flet_underscore%2Flet_underscore_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flet_underscore%2Flet_underscore_lock.stderr?ref=a9f1b7bd2a25e34de29eb88f81550690f4fec5dc", "patch": "@@ -1,8 +1,10 @@\n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:6:5\n+  --> $DIR/let_underscore_lock.rs:6:9\n    |\n LL |     let _ = data.lock().unwrap();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^   ^^^^^^^^^^^^^^^^^^^^ this binding will immediately drop the value assigned to it\n+   |         |\n+   |         this lock is not assigned to a binding and is immediately dropped\n    |\n    = note: `#[deny(let_underscore_lock)]` on by default\n help: consider binding to an unused variable to avoid immediately dropping the value"}]}