{"sha": "32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTQ2MmVmOTllMmY2MWI3NWUyYjBlZjM3MDQ4ZDUwYWQ4Y2NmNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-02T13:12:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-02T13:12:23Z"}, "message": "Auto merge of #35145 - jseyfried:avoid_extra_resolve_error, r=arielb1\n\nresolve: Avoid emitting an unhelpful cascading resolution error\n\nFixes #35142.", "tree": {"sha": "c28042027b4845f70058ac29352ea772490110c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c28042027b4845f70058ac29352ea772490110c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "html_url": "https://github.com/rust-lang/rust/commit/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97d5be98191038f24bf3c98f772cbf1662486581", "url": "https://api.github.com/repos/rust-lang/rust/commits/97d5be98191038f24bf3c98f772cbf1662486581", "html_url": "https://github.com/rust-lang/rust/commit/97d5be98191038f24bf3c98f772cbf1662486581"}, {"sha": "6656a30ca161d3ea46add7e6538f74ed1e671e4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6656a30ca161d3ea46add7e6538f74ed1e671e4e", "html_url": "https://github.com/rust-lang/rust/commit/6656a30ca161d3ea46add7e6538f74ed1e671e4e"}], "stats": {"total": 66, "additions": 26, "deletions": 40}, "files": [{"sha": "c1511b29c9e0154f1649e8f49ac0cca04289c170", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 17, "deletions": 31, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "patch": "@@ -1807,39 +1807,25 @@ impl<'a> Resolver<'a> {\n                                path_depth: usize)\n                                -> Result<PathResolution, ()> {\n         self.resolve_path(id, trait_path, path_depth, TypeNS).and_then(|path_res| {\n-            if let Def::Trait(_) = path_res.base_def {\n-                debug!(\"(resolving trait) found trait def: {:?}\", path_res);\n-                Ok(path_res)\n-            } else {\n-                let mut err =\n-                    resolve_struct_error(self,\n-                                  trait_path.span,\n-                                  ResolutionError::IsNotATrait(&path_names_to_string(trait_path,\n-                                                                                      path_depth)));\n-\n-                // If it's a typedef, give a note\n-                if let Def::TyAlias(..) = path_res.base_def {\n-                    let trait_name = trait_path.segments.last().unwrap().identifier.name;\n-                    err.span_label(trait_path.span,\n-                                   &format!(\"`{}` is not a trait\", trait_name));\n-\n-                    let definition_site = {\n-                        let segments = &trait_path.segments;\n-                        if trait_path.global {\n-                            self.resolve_crate_relative_path(trait_path.span, segments, TypeNS)\n-                        } else {\n-                            self.resolve_module_relative_path(trait_path.span, segments, TypeNS)\n-                        }.map(|binding| binding.span).unwrap_or(syntax_pos::DUMMY_SP)\n-                    };\n-\n-                    if definition_site != syntax_pos::DUMMY_SP {\n-                        err.span_label(definition_site,\n-                                       &format!(\"type aliases cannot be used for traits\"));\n-                    }\n+            match path_res.base_def {\n+                Def::Trait(_) => {\n+                    debug!(\"(resolving trait) found trait def: {:?}\", path_res);\n+                    return Ok(path_res);\n                 }\n-                err.emit();\n-                Err(true)\n+                Def::Err => return Err(true),\n+                _ => {}\n+            }\n+\n+            let mut err = resolve_struct_error(self, trait_path.span, {\n+                ResolutionError::IsNotATrait(&path_names_to_string(trait_path, path_depth))\n+            });\n+\n+            // If it's a typedef, give a note\n+            if let Def::TyAlias(..) = path_res.base_def {\n+                err.note(&format!(\"type aliases cannot be used for traits\"));\n             }\n+            err.emit();\n+            Err(true)\n         }).map_err(|error_reported| {\n             if error_reported { return }\n "}, {"sha": "cbc09a028c2c6833cc24c22fa4d18caddbe16672", "filename": "src/test/compile-fail/issue-3907.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs?ref=32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "patch": "@@ -11,14 +11,14 @@\n // aux-build:issue_3907.rs\n extern crate issue_3907;\n \n-type Foo = issue_3907::Foo; //~ NOTE: type aliases cannot be used for traits\n+type Foo = issue_3907::Foo;\n \n struct S {\n     name: isize\n }\n \n impl Foo for S { //~ ERROR: `Foo` is not a trait\n-    //~| `Foo` is not a trait\n+                 //~| NOTE: type aliases cannot be used for traits\n     fn bar() { }\n }\n "}, {"sha": "9648d64d1fb6ec0d086736c52d0baff31a9a8396", "filename": "src/test/compile-fail/issue-5035.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs?ref=32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "patch": "@@ -10,7 +10,10 @@\n \n trait I {}\n type K = I;\n-//~^ NOTE: aliases cannot be used for traits\n impl K for isize {} //~ ERROR: `K` is not a trait\n-//~| is not a trait\n+                    //~| NOTE: aliases cannot be used for traits\n+\n+use ImportError; //~ ERROR unresolved\n+impl ImportError for () {} // check that this is not an additional error (c.f. #35142)\n+\n fn main() {}"}, {"sha": "cf3f187af93340474ac4755abbc93e6b55624e67", "filename": "src/test/ui/codemap_tests/two_files.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr?ref=32e462ef99e2f61b75e2b0ef37048d50ad8ccf6c", "patch": "@@ -2,12 +2,9 @@ error[E0404]: `Bar` is not a trait\n   --> $DIR/two_files.rs:16:6\n    |\n 16 | impl Bar for Baz { }\n-   |      ^^^ `Bar` is not a trait\n-   | \n-  ::: $DIR/two_files_data.rs\n+   |      ^^^\n    |\n-15 | type Bar = Foo;\n-   | --------------- type aliases cannot be used for traits\n+   = note: type aliases cannot be used for traits\n \n error: cannot continue compilation due to previous error\n "}]}