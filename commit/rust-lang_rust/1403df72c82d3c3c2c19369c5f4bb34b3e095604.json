{"sha": "1403df72c82d3c3c2c19369c5f4bb34b3e095604", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MDNkZjcyYzgyZDNjM2MyYzE5MzY5YzVmNGJiMzRiM2UwOTU2MDQ=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2016-08-05T19:57:19Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2016-08-05T19:57:19Z"}, "message": "Implement From for Cell, RefCell and UnsafeCell", "tree": {"sha": "25ff31d46acd625a57ca700a637b8a2b8c48b44f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25ff31d46acd625a57ca700a637b8a2b8c48b44f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1403df72c82d3c3c2c19369c5f4bb34b3e095604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1403df72c82d3c3c2c19369c5f4bb34b3e095604", "html_url": "https://github.com/rust-lang/rust/commit/1403df72c82d3c3c2c19369c5f4bb34b3e095604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1403df72c82d3c3c2c19369c5f4bb34b3e095604/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c02363852e6ce41cf2da1b43a32cb7780a9b067", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c02363852e6ce41cf2da1b43a32cb7780a9b067", "html_url": "https://github.com/rust-lang/rust/commit/4c02363852e6ce41cf2da1b43a32cb7780a9b067"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "eb694319f42ef6ff9c92ca60a5cec4d33c7eb8c2", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1403df72c82d3c3c2c19369c5f4bb34b3e095604/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1403df72c82d3c3c2c19369c5f4bb34b3e095604/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=1403df72c82d3c3c2c19369c5f4bb34b3e095604", "patch": "@@ -146,6 +146,7 @@\n \n use clone::Clone;\n use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n+use convert::From;\n use default::Default;\n use marker::{Copy, Send, Sync, Sized, Unsize};\n use ops::{Deref, DerefMut, Drop, FnOnce, CoerceUnsized};\n@@ -326,6 +327,13 @@ impl<T:Ord + Copy> Ord for Cell<T> {\n     }\n }\n \n+#[stable(feature = \"cell_from\", since = \"1.12.0\")]\n+impl<T: Copy> From<T> for Cell<T> {\n+    fn from(t: T) -> Cell<T> {\n+        Cell::new(t)\n+    }\n+}\n+\n /// A mutable memory location with dynamically checked borrow rules\n ///\n /// See the [module-level documentation](index.html) for more.\n@@ -635,6 +643,13 @@ impl<T: ?Sized + Ord> Ord for RefCell<T> {\n     }\n }\n \n+#[stable(feature = \"cell_from\", since = \"1.12.0\")]\n+impl<T> From<T> for RefCell<T> {\n+    fn from(t: T) -> RefCell<T> {\n+        RefCell::new(t)\n+    }\n+}\n+\n struct BorrowRef<'b> {\n     borrow: &'b Cell<BorrowFlag>,\n }\n@@ -957,3 +972,10 @@ impl<T: Default> Default for UnsafeCell<T> {\n         UnsafeCell::new(Default::default())\n     }\n }\n+\n+#[stable(feature = \"cell_from\", since = \"1.12.0\")]\n+impl<T> From<T> for UnsafeCell<T> {\n+    fn from(t: T) -> UnsafeCell<T> {\n+        UnsafeCell::new(t)\n+    }\n+}"}]}