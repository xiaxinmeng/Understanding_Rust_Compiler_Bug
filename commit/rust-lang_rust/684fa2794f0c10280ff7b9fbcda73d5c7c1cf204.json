{"sha": "684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "node_id": "C_kwDOAAsO6NoAKDY4NGZhMjc5NGYwYzEwMjgwZmY3YjlmYmNkYTczZDVjN2MxY2YyMDQ", "commit": {"author": {"name": "Andrei Listochkin", "email": "andrei.listochkin@ferrous-systems.com", "date": "2022-05-11T12:34:43Z"}, "committer": {"name": "Andrei Listochkin", "email": "andrei.listochkin@ferrous-systems.com", "date": "2022-05-11T14:50:59Z"}, "message": "VSCode variables support for substitutions\n\nTests now open Rust-Analyzer extension code in order to populate\nVSCode variables.", "tree": {"sha": "e42e0726193797074278277b7afff09a76aed2c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42e0726193797074278277b7afff09a76aed2c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "html_url": "https://github.com/rust-lang/rust/commit/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/comments", "author": {"login": "listochkin", "id": 405222, "node_id": "MDQ6VXNlcjQwNTIyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/405222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/listochkin", "html_url": "https://github.com/listochkin", "followers_url": "https://api.github.com/users/listochkin/followers", "following_url": "https://api.github.com/users/listochkin/following{/other_user}", "gists_url": "https://api.github.com/users/listochkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/listochkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/listochkin/subscriptions", "organizations_url": "https://api.github.com/users/listochkin/orgs", "repos_url": "https://api.github.com/users/listochkin/repos", "events_url": "https://api.github.com/users/listochkin/events{/privacy}", "received_events_url": "https://api.github.com/users/listochkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "listochkin", "id": 405222, "node_id": "MDQ6VXNlcjQwNTIyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/405222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/listochkin", "html_url": "https://github.com/listochkin", "followers_url": "https://api.github.com/users/listochkin/followers", "following_url": "https://api.github.com/users/listochkin/following{/other_user}", "gists_url": "https://api.github.com/users/listochkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/listochkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/listochkin/subscriptions", "organizations_url": "https://api.github.com/users/listochkin/orgs", "repos_url": "https://api.github.com/users/listochkin/repos", "events_url": "https://api.github.com/users/listochkin/events{/privacy}", "received_events_url": "https://api.github.com/users/listochkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c769ac00d12cc1436bdbb2bbbce80db0bb8d2d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c769ac00d12cc1436bdbb2bbbce80db0bb8d2d5", "html_url": "https://github.com/rust-lang/rust/commit/6c769ac00d12cc1436bdbb2bbbce80db0bb8d2d5"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "9165ba861d4a5ee61dff9400b9711e55ac833ef0", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "patch": "@@ -1,3 +1,4 @@\n+import path = require('path');\n import * as vscode from 'vscode';\n import { Env } from './client';\n import { log } from \"./util\";\n@@ -253,7 +254,10 @@ export function substituteVariablesInEnv(env: Env): Env {\n                 resolved.add(dep);\n             }\n         } else {\n-            // TODO: handle VSCode variables\n+            envWithDeps[dep] = {\n+                value: computeVscodeVar(dep),\n+                deps: []\n+            };\n         }\n     }\n     const toResolve = new Set(Object.keys(envWithDeps));\n@@ -279,3 +283,52 @@ export function substituteVariablesInEnv(env: Env): Env {\n     }\n     return resolvedEnv;\n }\n+\n+function computeVscodeVar(varName: string): string {\n+    // https://code.visualstudio.com/docs/editor/variables-reference\n+    const supportedVariables: { [k: string]: () => string } = {\n+        workspaceFolder: () => {\n+            const folders = vscode.workspace.workspaceFolders ?? [];\n+            if (folders.length === 1) {\n+                // TODO: support for remote workspaces?\n+                return folders[0].uri.fsPath;\n+            } else if (folders.length > 1) {\n+                // could use currently opened document to detect the correct\n+                // workspace. However, that would be determined by the document\n+                // user has opened on Editor startup. Could lead to\n+                // unpredictable workspace selection in practice.\n+                // It's better to pick the first one\n+                return folders[0].uri.fsPath;\n+            } else {\n+                // no workspace opened\n+                return '';\n+            }\n+        },\n+\n+        workspaceFolderBasename: () => {\n+            const workspaceFolder = computeVscodeVar('workspaceFolder');\n+            if (workspaceFolder) {\n+                return path.basename(workspaceFolder);\n+            } else {\n+                return '';\n+            }\n+        },\n+\n+        cwd: () => process.cwd(),\n+\n+        // see\n+        // https://github.com/microsoft/vscode/blob/08ac1bb67ca2459496b272d8f4a908757f24f56f/src/vs/workbench/api/common/extHostVariableResolverService.ts#L81\n+        // or\n+        // https://github.com/microsoft/vscode/blob/29eb316bb9f154b7870eb5204ec7f2e7cf649bec/src/vs/server/node/remoteTerminalChannel.ts#L56\n+        execPath: () => process.env.VSCODE_EXEC_PATH ?? process.execPath,\n+\n+        pathSeparator: () => path.sep\n+    };\n+\n+    if (varName in supportedVariables) {\n+        return supportedVariables[varName]();\n+    } else {\n+        // can't resolve, keep the expression as is\n+        return '${' + varName + '}';\n+    }\n+}"}, {"sha": "6172cc7d5f96d5f19a3ddf7e6955a5e8f9c1e42a", "filename": "editors/code/tests/runTests.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Ftests%2FrunTests.ts", "raw_url": "https://github.com/rust-lang/rust/raw/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Ftests%2FrunTests.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftests%2FrunTests.ts?ref=684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "patch": "@@ -14,7 +14,7 @@ async function main() {\n     let minimalVersion: string = json.engines.vscode;\n     if (minimalVersion.startsWith('^')) minimalVersion = minimalVersion.slice(1);\n \n-    const launchArgs = [\"--disable-extensions\"];\n+    const launchArgs = [\"--disable-extensions\", extensionDevelopmentPath];\n \n     // All test suites (either unit tests or integration tests) should be in subfolders.\n     const extensionTestsPath = path.resolve(__dirname, './unit/index');"}, {"sha": "dca4e38d1381e1c358f0d66d566a4ae1075df9d7", "filename": "editors/code/tests/unit/settings.test.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Ftests%2Funit%2Fsettings.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/684fa2794f0c10280ff7b9fbcda73d5c7c1cf204/editors%2Fcode%2Ftests%2Funit%2Fsettings.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftests%2Funit%2Fsettings.test.ts?ref=684fa2794f0c10280ff7b9fbcda73d5c7c1cf204", "patch": "@@ -49,5 +49,13 @@ export async function getTests(ctx: Context) {\n             const actualEnv = await substituteVariablesInEnv(envJson);\n             assert.deepStrictEqual(actualEnv, expectedEnv);\n         });\n+\n+        suite.addTest('should support VSCode variables', async () => {\n+            const envJson = {\n+                USING_VSCODE_VAR: \"${workspaceFolderBasename}\"\n+            };\n+            const actualEnv = await substituteVariablesInEnv(envJson);\n+            assert.deepStrictEqual(actualEnv.USING_VSCODE_VAR, 'code');\n+        });\n     });\n }"}]}