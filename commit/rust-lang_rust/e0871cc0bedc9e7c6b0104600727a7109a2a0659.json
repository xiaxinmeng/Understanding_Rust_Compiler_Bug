{"sha": "e0871cc0bedc9e7c6b0104600727a7109a2a0659", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwODcxY2MwYmVkYzllN2M2YjAxMDQ2MDA3MjdhNzEwOWEyYTA2NTk=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-10-11T18:52:48Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-11-22T23:58:53Z"}, "message": "Reduce boilerplate with the `?` operator", "tree": {"sha": "3453f122f614415a525c195deddb08ae79fbf34f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3453f122f614415a525c195deddb08ae79fbf34f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0871cc0bedc9e7c6b0104600727a7109a2a0659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0871cc0bedc9e7c6b0104600727a7109a2a0659", "html_url": "https://github.com/rust-lang/rust/commit/e0871cc0bedc9e7c6b0104600727a7109a2a0659", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0871cc0bedc9e7c6b0104600727a7109a2a0659/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c643dd2ec8fed2852f5eee8f776d657293a6a8f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c643dd2ec8fed2852f5eee8f776d657293a6a8f2", "html_url": "https://github.com/rust-lang/rust/commit/c643dd2ec8fed2852f5eee8f776d657293a6a8f2"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "f00dfd1241fbbb6287ac8b91121874128deecc32", "filename": "compiler/rustc_builtin_macros/src/format_foreign.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e0871cc0bedc9e7c6b0104600727a7109a2a0659/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0871cc0bedc9e7c6b0104600727a7109a2a0659/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs?ref=e0871cc0bedc9e7c6b0104600727a7109a2a0659", "patch": "@@ -649,17 +649,13 @@ pub mod shell {\n     impl<'a> Iterator for Substitutions<'a> {\n         type Item = Substitution<'a>;\n         fn next(&mut self) -> Option<Self::Item> {\n-            match parse_next_substitution(self.s) {\n-                Some((mut sub, tail)) => {\n-                    self.s = tail;\n-                    if let Some(InnerSpan { start, end }) = sub.position() {\n-                        sub.set_position(start + self.pos, end + self.pos);\n-                        self.pos += end;\n-                    }\n-                    Some(sub)\n-                }\n-                None => None,\n+            let (mut sub, tail) = parse_next_substitution(self.s)?;\n+            self.s = tail;\n+            if let Some(InnerSpan { start, end }) = sub.position() {\n+                sub.set_position(start + self.pos, end + self.pos);\n+                self.pos += end;\n             }\n+            Some(sub)\n         }\n \n         fn size_hint(&self) -> (usize, Option<usize>) {"}, {"sha": "e9e7e9520eee4a7bad48c23a0b39a0d77e858cbd", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0871cc0bedc9e7c6b0104600727a7109a2a0659/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0871cc0bedc9e7c6b0104600727a7109a2a0659/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=e0871cc0bedc9e7c6b0104600727a7109a2a0659", "patch": "@@ -2364,13 +2364,9 @@ impl<'o, 'tcx> Iterator for TraitObligationStackList<'o, 'tcx> {\n     type Item = &'o TraitObligationStack<'o, 'tcx>;\n \n     fn next(&mut self) -> Option<&'o TraitObligationStack<'o, 'tcx>> {\n-        match self.head {\n-            Some(o) => {\n-                *self = o.previous;\n-                Some(o)\n-            }\n-            None => None,\n-        }\n+        let o = self.head?;\n+        *self = o.previous;\n+        Some(o)\n     }\n }\n "}]}