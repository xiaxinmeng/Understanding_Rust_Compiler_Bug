{"sha": "3baee66f9b0cd440d9288ce757cc6caec93eeb67", "node_id": "C_kwDOAAsO6NoAKDNiYWVlNjZmOWIwY2Q0NDBkOTI4OGNlNzU3Y2M2Y2FlYzkzZWViNjc", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-29T09:58:59Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-13T16:39:59Z"}, "message": "Rework standard library building", "tree": {"sha": "37178b8fb04487f9f26fcb6a66cea7282f6d862e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37178b8fb04487f9f26fcb6a66cea7282f6d862e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3baee66f9b0cd440d9288ce757cc6caec93eeb67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3baee66f9b0cd440d9288ce757cc6caec93eeb67", "html_url": "https://github.com/rust-lang/rust/commit/3baee66f9b0cd440d9288ce757cc6caec93eeb67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3baee66f9b0cd440d9288ce757cc6caec93eeb67/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54eaa5382c8455be4390c7e1e1b9b9f86c5a159d", "url": "https://api.github.com/repos/rust-lang/rust/commits/54eaa5382c8455be4390c7e1e1b9b9f86c5a159d", "html_url": "https://github.com/rust-lang/rust/commit/54eaa5382c8455be4390c7e1e1b9b9f86c5a159d"}], "stats": {"total": 147, "additions": 117, "deletions": 30}, "files": [{"sha": "1dde9e54d7ee0b1a128d451078d5a744cca78691", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 102, "deletions": 2, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=3baee66f9b0cd440d9288ce757cc6caec93eeb67", "patch": "@@ -30,8 +30,26 @@ version = \"0.0.0\"\n dependencies = [\n  \"compiler_builtins\",\n  \"core\",\n+ \"rand\",\n+ \"rand_xorshift\",\n ]\n \n+[[package]]\n+name = \"auxv\"\n+version = \"0.3.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e50430f9beb8effb02399fa81c76eeaa26b05e4f03b09285cad8d079c1af5a3d\"\n+dependencies = [\n+ \"byteorder\",\n+ \"gcc\",\n+]\n+\n+[[package]]\n+name = \"byteorder\"\n+version = \"1.4.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n+\n [[package]]\n name = \"cc\"\n version = \"1.0.79\"\n@@ -54,12 +72,27 @@ version = \"0.1.93\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"76630810d973ecea3dbf611e1b7aecfb1012751ef1ff8de3998f89014a166781\"\n dependencies = [\n+ \"cc\",\n  \"rustc-std-workspace-core\",\n ]\n \n [[package]]\n name = \"core\"\n version = \"0.0.0\"\n+dependencies = [\n+ \"rand\",\n+ \"rand_xorshift\",\n+]\n+\n+[[package]]\n+name = \"cupid\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"8bad352a84b567cc38a5854e3aa8ee903cb8519a25d0b799b739bafffd1f91a1\"\n+dependencies = [\n+ \"gcc\",\n+ \"rustc_version\",\n+]\n \n [[package]]\n name = \"dlmalloc\"\n@@ -82,6 +115,12 @@ dependencies = [\n  \"rustc-std-workspace-core\",\n ]\n \n+[[package]]\n+name = \"gcc\"\n+version = \"0.3.55\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2\"\n+\n [[package]]\n name = \"getopts\"\n version = \"0.2.21\"\n@@ -200,6 +239,39 @@ dependencies = [\n  \"std\",\n ]\n \n+[[package]]\n+name = \"profiler_builtins\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"cc\",\n+ \"compiler_builtins\",\n+ \"core\",\n+]\n+\n+[[package]]\n+name = \"rand\"\n+version = \"0.8.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\n+dependencies = [\n+ \"rand_core\",\n+]\n+\n+[[package]]\n+name = \"rand_core\"\n+version = \"0.6.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\n+\n+[[package]]\n+name = \"rand_xorshift\"\n+version = \"0.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f\"\n+dependencies = [\n+ \"rand_core\",\n+]\n+\n [[package]]\n name = \"rustc-demangle\"\n version = \"0.1.23\"\n@@ -231,6 +303,30 @@ dependencies = [\n  \"std\",\n ]\n \n+[[package]]\n+name = \"rustc_version\"\n+version = \"0.2.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n+dependencies = [\n+ \"semver\",\n+]\n+\n+[[package]]\n+name = \"semver\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n+dependencies = [\n+ \"semver-parser\",\n+]\n+\n+[[package]]\n+name = \"semver-parser\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n+\n [[package]]\n name = \"std\"\n version = \"0.0.0\"\n@@ -249,6 +345,9 @@ dependencies = [\n  \"object\",\n  \"panic_abort\",\n  \"panic_unwind\",\n+ \"profiler_builtins\",\n+ \"rand\",\n+ \"rand_xorshift\",\n  \"rustc-demangle\",\n  \"std_detect\",\n  \"unwind\",\n@@ -259,8 +358,11 @@ dependencies = [\n name = \"std_detect\"\n version = \"0.1.5\"\n dependencies = [\n+ \"auxv\",\n  \"cfg-if\",\n  \"compiler_builtins\",\n+ \"cupid\",\n+ \"libc\",\n  \"rustc-std-workspace-alloc\",\n  \"rustc-std-workspace-core\",\n ]\n@@ -269,8 +371,6 @@ dependencies = [\n name = \"sysroot\"\n version = \"0.0.0\"\n dependencies = [\n- \"alloc\",\n- \"core\",\n  \"proc_macro\",\n  \"std\",\n  \"test\","}, {"sha": "3e5d0c159f2b203172567a0423aa0bec7559ab11", "filename": "build_sysroot/Cargo.toml", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_sysroot%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_sysroot%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.toml?ref=3baee66f9b0cd440d9288ce757cc6caec93eeb67", "patch": "@@ -1,18 +1,10 @@\n-[package]\n-name = \"sysroot\"\n-version = \"0.0.0\"\n-\n-[dependencies]\n-core = { path = \"./sysroot_src/library/core\" }\n-alloc = { path = \"./sysroot_src/library/alloc\" }\n-std = { path = \"./sysroot_src/library/std\", features = [\"panic_unwind\", \"backtrace\"] }\n-test = { path = \"./sysroot_src/library/test\" }\n-proc_macro = { path = \"./sysroot_src/library/proc_macro\" }\n+[workspace]\n+members = [\"./library/sysroot\"]\n \n [patch.crates-io]\n-rustc-std-workspace-core = { path = \"./sysroot_src/library/rustc-std-workspace-core\" }\n-rustc-std-workspace-alloc = { path = \"./sysroot_src/library/rustc-std-workspace-alloc\" }\n-rustc-std-workspace-std = { path = \"./sysroot_src/library/rustc-std-workspace-std\" }\n+rustc-std-workspace-core = { path = \"./library/rustc-std-workspace-core\" }\n+rustc-std-workspace-alloc = { path = \"./library/rustc-std-workspace-alloc\" }\n+rustc-std-workspace-std = { path = \"./library/rustc-std-workspace-std\" }\n \n [profile.dev]\n lto = \"off\""}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "build_sysroot/src/lib.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54eaa5382c8455be4390c7e1e1b9b9f86c5a159d/build_sysroot%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54eaa5382c8455be4390c7e1e1b9b9f86c5a159d/build_sysroot%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fsrc%2Flib.rs?ref=54eaa5382c8455be4390c7e1e1b9b9f86c5a159d", "patch": "@@ -1 +0,0 @@\n-"}, {"sha": "09dc43b8136b5bf30eedcbd9c3644a2002e1d334", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=3baee66f9b0cd440d9288ce757cc6caec93eeb67", "patch": "@@ -156,11 +156,10 @@ impl SysrootTarget {\n }\n \n pub(crate) static ORIG_BUILD_SYSROOT: RelPath = RelPath::SOURCE.join(\"build_sysroot\");\n-pub(crate) static BUILD_SYSROOT: RelPath = RelPath::BUILD.join(\"sysroot\");\n-pub(crate) static SYSROOT_RUSTC_VERSION: RelPath = BUILD_SYSROOT.join(\"rustc_version\");\n-pub(crate) static SYSROOT_SRC: RelPath = BUILD_SYSROOT.join(\"sysroot_src\");\n+pub(crate) static STDLIB_SRC: RelPath = RelPath::BUILD.join(\"stdlib\");\n+pub(crate) static SYSROOT_RUSTC_VERSION: RelPath = STDLIB_SRC.join(\"rustc_version\");\n pub(crate) static STANDARD_LIBRARY: CargoProject =\n-    CargoProject::new(&BUILD_SYSROOT, \"build_sysroot\");\n+    CargoProject::new(&STDLIB_SRC.join(\"library/sysroot\"), \"stdlib_target\");\n pub(crate) static RTSTARTUP_SYSROOT: RelPath = RelPath::BUILD.join(\"rtstartup\");\n \n #[must_use]\n@@ -277,7 +276,7 @@ fn build_clif_sysroot_for_triple(\n     if channel == \"release\" {\n         build_cmd.arg(\"--release\");\n     }\n-    build_cmd.arg(\"--features\").arg(\"std/compiler-builtins-no-asm\");\n+    build_cmd.arg(\"--features\").arg(\"compiler-builtins-no-asm backtrace panic-unwind\");\n     build_cmd.arg(\"--locked\");\n     build_cmd.env(\"__CARGO_DEFAULT_LIB_METADATA\", \"cg_clif\");\n     if compiler.triple.contains(\"apple\") {\n@@ -307,7 +306,7 @@ fn build_rtstartup(dirs: &Dirs, compiler: &Compiler) -> Option<SysrootTarget> {\n \n     RTSTARTUP_SYSROOT.ensure_fresh(dirs);\n \n-    let rtstartup_src = SYSROOT_SRC.to_path(dirs).join(\"library\").join(\"rtstartup\");\n+    let rtstartup_src = STDLIB_SRC.to_path(dirs).join(\"library\").join(\"rtstartup\");\n     let mut target_libs = SysrootTarget { triple: compiler.triple.clone(), libs: vec![] };\n \n     for file in [\"rsbegin\", \"rsend\"] {"}, {"sha": "bc249f4cdab30eef7ada9488e406822f7faf1b80", "filename": "build_system/prepare.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3baee66f9b0cd440d9288ce757cc6caec93eeb67/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=3baee66f9b0cd440d9288ce757cc6caec93eeb67", "patch": "@@ -3,7 +3,7 @@ use std::fs;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n \n-use super::build_sysroot::{BUILD_SYSROOT, ORIG_BUILD_SYSROOT, SYSROOT_RUSTC_VERSION, SYSROOT_SRC};\n+use super::build_sysroot::{ORIG_BUILD_SYSROOT, STDLIB_SRC, SYSROOT_RUSTC_VERSION};\n use super::path::{Dirs, RelPath};\n use super::rustc_info::{get_default_sysroot, get_rustc_version};\n use super::utils::{\n@@ -28,15 +28,10 @@ fn prepare_stdlib(dirs: &Dirs, rustc: &Path) {\n     let sysroot_src_orig = get_default_sysroot(rustc).join(\"lib/rustlib/src/rust\");\n     assert!(sysroot_src_orig.exists());\n \n-    eprintln!(\"[COPY] stdlib src\");\n+    apply_patches(dirs, \"stdlib\", &sysroot_src_orig, &STDLIB_SRC.to_path(dirs));\n \n     // FIXME ensure builds error out or update the copy if any of the files copied here change\n-    BUILD_SYSROOT.ensure_fresh(dirs);\n-    copy_dir_recursively(&ORIG_BUILD_SYSROOT.to_path(dirs), &BUILD_SYSROOT.to_path(dirs));\n-\n-    fs::create_dir_all(SYSROOT_SRC.to_path(dirs).join(\"library\")).unwrap();\n-\n-    apply_patches(dirs, \"stdlib\", &sysroot_src_orig, &SYSROOT_SRC.to_path(dirs));\n+    copy_dir_recursively(&ORIG_BUILD_SYSROOT.to_path(dirs), &STDLIB_SRC.to_path(dirs));\n \n     let rustc_version = get_rustc_version(rustc);\n     fs::write(SYSROOT_RUSTC_VERSION.to_path(dirs), &rustc_version).unwrap();\n@@ -251,6 +246,8 @@ fn get_patches(dirs: &Dirs, crate_name: &str) -> Vec<PathBuf> {\n pub(crate) fn apply_patches(dirs: &Dirs, crate_name: &str, source_dir: &Path, target_dir: &Path) {\n     // FIXME avoid copy and patch if src, patches and target are unchanged\n \n+    eprintln!(\"[COPY] {crate_name} source\");\n+\n     remove_dir_if_exists(target_dir);\n     fs::create_dir_all(target_dir).unwrap();\n     copy_dir_recursively(source_dir, target_dir);"}]}