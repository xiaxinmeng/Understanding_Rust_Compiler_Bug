{"sha": "b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZTE1MmM3ZTUwZmMxYmE3ODY5ZDVjMjBkZDI0MWIwMDExYTA4MzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-05T15:52:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-05T15:52:22Z"}, "message": "Rollup merge of #84803 - jyn514:duplicate-macros, r=petrochenkov\n\nReduce duplication in `impl_dep_tracking_hash` macros\n\nCherry-picked from https://github.com/rust-lang/rust/pull/84234 since it will be a while until it lands.", "tree": {"sha": "81da8676b495dd2d868af6cee8f4a65ce726bd63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81da8676b495dd2d868af6cee8f4a65ce726bd63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkr82CRBK7hj4Ov3rIwAAnGwIAEK5UkxBwSh6VrozJRf8xOEn\nfFfeGORPXwFOV1xGO4iXWaanjrGdXokRQrxHlTy6fRE1X2X2nKgaL4DSeviWDy/s\n7klrB4Ma5TX4CwyLieFixG4Yl2IXmsGLawFU9AU0t+TLpy02p+OhSNe4NlEUzsbd\n//dTuDUI/dSlNa5245eBhufI3bLjygAliA/KRSP07yVt652nf5QtM+pTUSBPiNAJ\ni7ejArp4jUiqKmV4gH7ucayXCDkLMGMIR2qBSEcsU+Ff8pxfj1wD8GZwjlThkp7A\nRYyOJMRI0Avh6dKueiIc7fdwyqsKxVMkD4hEowFw92WF20ijmTsnF3OSdIvb8qU=\n=TsZ+\n-----END PGP SIGNATURE-----\n", "payload": "tree 81da8676b495dd2d868af6cee8f4a65ce726bd63\nparent 4c4b3e81df7c61b99fe1cef2ac581077e38c7467\nparent dd43d133252750154e323af3bc87d523bb1987ae\nauthor Ralf Jung <post@ralfj.de> 1620229942 +0200\ncommitter GitHub <noreply@github.com> 1620229942 +0200\n\nRollup merge of #84803 - jyn514:duplicate-macros, r=petrochenkov\n\nReduce duplication in `impl_dep_tracking_hash` macros\n\nCherry-picked from https://github.com/rust-lang/rust/pull/84234 since it will be a while until it lands.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "html_url": "https://github.com/rust-lang/rust/commit/b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e152c7e50fc1ba7869d5c20dd241b0011a0836/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c4b3e81df7c61b99fe1cef2ac581077e38c7467", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4b3e81df7c61b99fe1cef2ac581077e38c7467", "html_url": "https://github.com/rust-lang/rust/commit/4c4b3e81df7c61b99fe1cef2ac581077e38c7467"}, {"sha": "dd43d133252750154e323af3bc87d523bb1987ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd43d133252750154e323af3bc87d523bb1987ae", "html_url": "https://github.com/rust-lang/rust/commit/dd43d133252750154e323af3bc87d523bb1987ae"}], "stats": {"total": 118, "additions": 61, "deletions": 57}, "files": [{"sha": "08d6f4a46fefeafb9a1da67843cd635ef4d1ce3c", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 61, "deletions": 57, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/b1e152c7e50fc1ba7869d5c20dd241b0011a0836/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e152c7e50fc1ba7869d5c20dd241b0011a0836/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "patch": "@@ -2332,17 +2332,17 @@ crate mod dep_tracking {\n     }\n \n     macro_rules! impl_dep_tracking_hash_via_hash {\n-        ($t:ty) => {\n+        ($($t:ty),+ $(,)?) => {$(\n             impl DepTrackingHash for $t {\n                 fn hash(&self, hasher: &mut DefaultHasher, _: ErrorOutputType) {\n                     Hash::hash(self, hasher);\n                 }\n             }\n-        };\n+        )+};\n     }\n \n     macro_rules! impl_dep_tracking_hash_for_sortable_vec_of {\n-        ($t:ty) => {\n+        ($($t:ty),+ $(,)?) => {$(\n             impl DepTrackingHash for Vec<$t> {\n                 fn hash(&self, hasher: &mut DefaultHasher, error_format: ErrorOutputType) {\n                     let mut elems: Vec<&$t> = self.iter().collect();\n@@ -2354,61 +2354,65 @@ crate mod dep_tracking {\n                     }\n                 }\n             }\n-        };\n-    }\n+        )+};\n+    }\n+\n+    impl_dep_tracking_hash_via_hash!(\n+        bool,\n+        usize,\n+        u64,\n+        String,\n+        PathBuf,\n+        lint::Level,\n+        Option<bool>,\n+        Option<u32>,\n+        Option<usize>,\n+        Option<NonZeroUsize>,\n+        Option<String>,\n+        Option<(String, u64)>,\n+        Option<Vec<String>>,\n+        Option<MergeFunctions>,\n+        Option<RelocModel>,\n+        Option<CodeModel>,\n+        Option<TlsModel>,\n+        Option<WasiExecModel>,\n+        Option<PanicStrategy>,\n+        Option<RelroLevel>,\n+        Option<InstrumentCoverage>,\n+        Option<lint::Level>,\n+        Option<PathBuf>,\n+        CrateType,\n+        MergeFunctions,\n+        PanicStrategy,\n+        RelroLevel,\n+        Passes,\n+        OptLevel,\n+        LtoCli,\n+        DebugInfo,\n+        UnstableFeatures,\n+        OutputTypes,\n+        NativeLibKind,\n+        SanitizerSet,\n+        CFGuard,\n+        TargetTriple,\n+        Edition,\n+        LinkerPluginLto,\n+        Option<SplitDebuginfo>,\n+        SwitchWithOptPath,\n+        Option<SymbolManglingVersion>,\n+        Option<SourceFileHashAlgorithm>,\n+        TrimmedDefPaths,\n+    );\n \n-    impl_dep_tracking_hash_via_hash!(bool);\n-    impl_dep_tracking_hash_via_hash!(usize);\n-    impl_dep_tracking_hash_via_hash!(u64);\n-    impl_dep_tracking_hash_via_hash!(String);\n-    impl_dep_tracking_hash_via_hash!(PathBuf);\n-    impl_dep_tracking_hash_via_hash!(lint::Level);\n-    impl_dep_tracking_hash_via_hash!(Option<bool>);\n-    impl_dep_tracking_hash_via_hash!(Option<u32>);\n-    impl_dep_tracking_hash_via_hash!(Option<usize>);\n-    impl_dep_tracking_hash_via_hash!(Option<NonZeroUsize>);\n-    impl_dep_tracking_hash_via_hash!(Option<String>);\n-    impl_dep_tracking_hash_via_hash!(Option<(String, u64)>);\n-    impl_dep_tracking_hash_via_hash!(Option<Vec<String>>);\n-    impl_dep_tracking_hash_via_hash!(Option<MergeFunctions>);\n-    impl_dep_tracking_hash_via_hash!(Option<RelocModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<CodeModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<TlsModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<WasiExecModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<PanicStrategy>);\n-    impl_dep_tracking_hash_via_hash!(Option<RelroLevel>);\n-    impl_dep_tracking_hash_via_hash!(Option<InstrumentCoverage>);\n-    impl_dep_tracking_hash_via_hash!(Option<lint::Level>);\n-    impl_dep_tracking_hash_via_hash!(Option<PathBuf>);\n-    impl_dep_tracking_hash_via_hash!(CrateType);\n-    impl_dep_tracking_hash_via_hash!(MergeFunctions);\n-    impl_dep_tracking_hash_via_hash!(PanicStrategy);\n-    impl_dep_tracking_hash_via_hash!(RelroLevel);\n-    impl_dep_tracking_hash_via_hash!(Passes);\n-    impl_dep_tracking_hash_via_hash!(OptLevel);\n-    impl_dep_tracking_hash_via_hash!(LtoCli);\n-    impl_dep_tracking_hash_via_hash!(DebugInfo);\n-    impl_dep_tracking_hash_via_hash!(UnstableFeatures);\n-    impl_dep_tracking_hash_via_hash!(OutputTypes);\n-    impl_dep_tracking_hash_via_hash!(NativeLibKind);\n-    impl_dep_tracking_hash_via_hash!(SanitizerSet);\n-    impl_dep_tracking_hash_via_hash!(CFGuard);\n-    impl_dep_tracking_hash_via_hash!(TargetTriple);\n-    impl_dep_tracking_hash_via_hash!(Edition);\n-    impl_dep_tracking_hash_via_hash!(LinkerPluginLto);\n-    impl_dep_tracking_hash_via_hash!(Option<SplitDebuginfo>);\n-    impl_dep_tracking_hash_via_hash!(SwitchWithOptPath);\n-    impl_dep_tracking_hash_via_hash!(Option<SymbolManglingVersion>);\n-    impl_dep_tracking_hash_via_hash!(Option<SourceFileHashAlgorithm>);\n-    impl_dep_tracking_hash_via_hash!(TrimmedDefPaths);\n-\n-    impl_dep_tracking_hash_for_sortable_vec_of!(String);\n-    impl_dep_tracking_hash_for_sortable_vec_of!(PathBuf);\n-    impl_dep_tracking_hash_for_sortable_vec_of!((PathBuf, PathBuf));\n-    impl_dep_tracking_hash_for_sortable_vec_of!(CrateType);\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, lint::Level));\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, Option<String>, NativeLibKind));\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, u64));\n+    impl_dep_tracking_hash_for_sortable_vec_of!(\n+        String,\n+        PathBuf,\n+        (PathBuf, PathBuf),\n+        CrateType,\n+        (String, lint::Level),\n+        (String, Option<String>, NativeLibKind),\n+        (String, u64)\n+    );\n \n     impl<T1, T2> DepTrackingHash for (T1, T2)\n     where"}]}