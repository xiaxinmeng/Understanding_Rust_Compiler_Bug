{"sha": "4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "node_id": "C_kwDOAAsO6NoAKDRhNjNiMDdkMjQwODJjODZjZWRiMzBiMGFkNWZjYzJmYzZiNDVmYjA", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-05-23T21:49:45Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-05-23T23:17:38Z"}, "message": "Add tests for pretty-printing inherent projections", "tree": {"sha": "76eb34e3fa8e11489d6acbb36fb77f1b077aaa0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76eb34e3fa8e11489d6acbb36fb77f1b077aaa0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmRtSZ8ACgkQ0XoHIV9o\n5xPVyw/7BeZRovH/5fa8m2B9At741/aqF8nLz/uyM5bsCno2mBeAnQqmohz+x8RM\nCt4eIjRKVid0qYryZiqH7omXA8YWM6vxtrwxod59wl8R22ChptQBh1Xi9IZGWT4x\nN7ZjfaNN4oNiJCGB7zrOh1mVLgCvbywBnI0CGReEEmuR4lw+Jy7MiTOubqfo55lP\nCuECXcv1JmiHPr1AeBn73tVy94/CXrV+Nnzhg2yP6/BfyhgpuEL8UxCA5j6BAVba\nS8TDQSsT26EGIoSEmtewFejJfX+KzX9R4Swnv0vP426s9BktDgjMNIig1XeKix3/\nb4BZYhC0IPlsO06SrwxWQHMcQMedY/WK4YIMo0Y1ZsiB9o+zJVsT1C+s5OgvIZoD\nrpY5T0ojRwmYIpnq1oOUz368rSvW6doyWJ3iqOAeKq3KDYF4Oy/V8xApjmNjaPuA\n9MQF4//WQJ8lAlo5Mob+K6C/ou35RymJoOfBQ4Kelv5H4FXB11f+HivFGf2ETGWe\n8z/P02EPUMb1epwI7Mb0M4l/z04HhEaOuMOsTqbGwwVhOsobU1ferHny2vwo+m3W\nZRRZc1d9VTyIuHOPnlZovhG9OdPt99ji1bwn8iRkeEVnuTq4Pp/NIWDpa6EDS4/g\n6l2ZavNxghLfajNLlbZHn33c+StMH2f9IiejUZqAitYxRMh3YsI=\n=vDkL\n-----END PGP SIGNATURE-----", "payload": "tree 76eb34e3fa8e11489d6acbb36fb77f1b077aaa0b\nparent d5699874dc07d2dfb262d007293853f73c171f7e\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1684878585 +0200\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1684883858 +0200\n\nAdd tests for pretty-printing inherent projections\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "html_url": "https://github.com/rust-lang/rust/commit/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5699874dc07d2dfb262d007293853f73c171f7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5699874dc07d2dfb262d007293853f73c171f7e", "html_url": "https://github.com/rust-lang/rust/commit/d5699874dc07d2dfb262d007293853f73c171f7e"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "e37f7d34ab5b8fdd7973691b8ebda23d35793661", "filename": "tests/ui/associated-inherent-types/issue-111879-0.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.rs?ref=4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "patch": "@@ -0,0 +1,14 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+// Check that we don't crash when printing inherent projections in diagnostics.\n+\n+pub struct Carrier<'a>(&'a ());\n+\n+pub type User = for<'b> fn(Carrier<'b>::Focus<i32>);\n+\n+impl<'a> Carrier<'a> {\n+    pub type Focus<T> = &'a mut User; //~ ERROR overflow evaluating associated type\n+}\n+\n+fn main() {}"}, {"sha": "7bdbad4401762a130ce821cbad55a779cf3005fd", "filename": "tests/ui/associated-inherent-types/issue-111879-0.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-0.stderr?ref=4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "patch": "@@ -0,0 +1,8 @@\n+error: overflow evaluating associated type `Carrier<'b>::Focus<i32>`\n+  --> $DIR/issue-111879-0.rs:11:25\n+   |\n+LL |     pub type Focus<T> = &'a mut User;\n+   |                         ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "7acc4f945051edb3556386bb7844fbfdf70e607e", "filename": "tests/ui/associated-inherent-types/issue-111879-1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.rs?ref=4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "patch": "@@ -0,0 +1,12 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+// Check that we don't crash when printing inherent projections in diagnostics.\n+\n+struct Foo<T>(T);\n+\n+impl<'a> Foo<fn(&'a ())> {\n+    type Assoc = &'a ();\n+}\n+\n+fn main(_: for<'a> fn(Foo<fn(&'a ())>::Assoc)) {} //~ ERROR `main` function has wrong type"}, {"sha": "689b45e09aaac8392df7189ddb7566e65aae790b", "filename": "tests/ui/associated-inherent-types/issue-111879-1.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fissue-111879-1.stderr?ref=4a63b07d24082c86cedb30b0ad5fcc2fc6b45fb0", "patch": "@@ -0,0 +1,12 @@\n+error[E0580]: `main` function has wrong type\n+  --> $DIR/issue-111879-1.rs:12:1\n+   |\n+LL | fn main(_: for<'a> fn(Foo<fn(&'a ())>::Assoc)) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ incorrect number of function parameters\n+   |\n+   = note: expected fn pointer `fn()`\n+              found fn pointer `fn(for<'a> fn(Foo<fn(&'a ())>::Assoc))`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0580`."}]}