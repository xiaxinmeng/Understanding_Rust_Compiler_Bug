{"sha": "43165b54e05d0640fda8cf419de09d9f6d032724", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMTY1YjU0ZTA1ZDA2NDBmZGE4Y2Y0MTlkZTA5ZDlmNmQwMzI3MjQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-07T16:57:28Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-07T17:02:56Z"}, "message": "rc: remove the managed pointer workaround", "tree": {"sha": "1c7c3408ae8f770e44c89f07d80451f9fbd80949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c7c3408ae8f770e44c89f07d80451f9fbd80949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43165b54e05d0640fda8cf419de09d9f6d032724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43165b54e05d0640fda8cf419de09d9f6d032724", "html_url": "https://github.com/rust-lang/rust/commit/43165b54e05d0640fda8cf419de09d9f6d032724", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43165b54e05d0640fda8cf419de09d9f6d032724/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "html_url": "https://github.com/rust-lang/rust/commit/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "6f72d8dc16dfdc5bef0c07b1427d6fbb67c9112d", "filename": "src/libstd/rc.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/43165b54e05d0640fda8cf419de09d9f6d032724/src%2Flibstd%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43165b54e05d0640fda8cf419de09d9f6d032724/src%2Flibstd%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frc.rs?ref=43165b54e05d0640fda8cf419de09d9f6d032724", "patch": "@@ -24,9 +24,9 @@ struct RcBox<T> {\n }\n \n /// Immutable reference counted pointer type\n+#[non_owned]\n pub struct Rc<T> {\n     priv ptr: *mut RcBox<T>,\n-    priv non_owned: Option<@()> // FIXME: #5601: replace with `#[non_owned]`\n }\n \n pub impl<'self, T: Owned> Rc<T> {\n@@ -35,7 +35,7 @@ pub impl<'self, T: Owned> Rc<T> {\n             let ptr = malloc(sys::size_of::<RcBox<T>>() as size_t) as *mut RcBox<T>;\n             assert!(!ptr::is_null(ptr));\n             intrinsics::move_val_init(&mut *ptr, RcBox{value: value, count: 1});\n-            Rc{ptr: ptr, non_owned: None}\n+            Rc{ptr: ptr}\n         }\n     }\n \n@@ -64,7 +64,7 @@ impl<T: Owned> Clone for Rc<T> {\n     fn clone(&self) -> Rc<T> {\n         unsafe {\n             (*self.ptr).count += 1;\n-            Rc{ptr: self.ptr, non_owned: None}\n+            Rc{ptr: self.ptr}\n         }\n     }\n }\n@@ -113,9 +113,10 @@ struct RcMutBox<T> {\n }\n \n /// Mutable reference counted pointer type\n+#[non_owned]\n+#[mutable]\n pub struct RcMut<T> {\n     priv ptr: *mut RcMutBox<T>,\n-    priv non_owned: Option<@mut ()> // FIXME: #5601: replace with `#[non_owned]` and `#[non_const]`\n }\n \n pub impl<'self, T: Owned> RcMut<T> {\n@@ -124,7 +125,7 @@ pub impl<'self, T: Owned> RcMut<T> {\n             let ptr = malloc(sys::size_of::<RcMutBox<T>>() as size_t) as *mut RcMutBox<T>;\n             assert!(!ptr::is_null(ptr));\n             intrinsics::move_val_init(&mut *ptr, RcMutBox{value: value, count: 1, borrow: Nothing});\n-            RcMut{ptr: ptr, non_owned: None}\n+            RcMut{ptr: ptr}\n         }\n     }\n \n@@ -171,7 +172,7 @@ impl<T: Owned> Clone for RcMut<T> {\n     fn clone(&self) -> RcMut<T> {\n         unsafe {\n             (*self.ptr).count += 1;\n-            RcMut{ptr: self.ptr, non_owned: None}\n+            RcMut{ptr: self.ptr}\n         }\n     }\n }"}]}