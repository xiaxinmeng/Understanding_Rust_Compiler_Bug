{"sha": "8990f7d627525db934831cc29d5805172d80e156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5OTBmN2Q2Mjc1MjVkYjkzNDgzMWNjMjlkNTgwNTE3MmQ4MGUxNTY=", "commit": {"author": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2019-09-28T13:55:22Z"}, "committer": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2019-09-28T13:55:26Z"}, "message": "Update pretty-print test with new format! impl", "tree": {"sha": "a1cc0d02e9bc2035a672bb0e80e2ea04d34f0431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1cc0d02e9bc2035a672bb0e80e2ea04d34f0431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8990f7d627525db934831cc29d5805172d80e156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8990f7d627525db934831cc29d5805172d80e156", "html_url": "https://github.com/rust-lang/rust/commit/8990f7d627525db934831cc29d5805172d80e156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8990f7d627525db934831cc29d5805172d80e156/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7f6df0d5a64010fc0b3612773f56245ee581247", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f6df0d5a64010fc0b3612773f56245ee581247", "html_url": "https://github.com/rust-lang/rust/commit/c7f6df0d5a64010fc0b3612773f56245ee581247"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "0f71dbe486b9735f50cd31429b929ad711f16eca", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/8990f7d627525db934831cc29d5805172d80e156/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/8990f7d627525db934831cc29d5805172d80e156/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=8990f7d627525db934831cc29d5805172d80e156", "patch": "@@ -29,33 +29,37 @@\n \n \n \n-                  ((::alloc::fmt::format as\n-                       for<'r> fn(std::fmt::Arguments<'r>) -> std::string::String {std::fmt::format})(((<::core::fmt::Arguments>::new_v1\n-                                                                                                           as\n-                                                                                                           fn(&[&str], &[std::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1})((&([(\"test\"\n-                                                                                                                                                                                                                            as\n-                                                                                                                                                                                                                            &'static str)]\n-                                                                                                                                                                                                                          as\n-                                                                                                                                                                                                                          [&str; 1])\n-                                                                                                                                                                                                                        as\n-                                                                                                                                                                                                                        &[&str; 1]),\n-                                                                                                                                                                                                                    (&(match (()\n+                  ({\n+                       let res =\n+                           ((::alloc::fmt::format as\n+                                for<'r> fn(std::fmt::Arguments<'r>) -> std::string::String {std::fmt::format})(((<::core::fmt::Arguments>::new_v1\n+                                                                                                                    as\n+                                                                                                                    fn(&[&str], &[std::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1})((&([(\"test\"\n+                                                                                                                                                                                                                                     as\n+                                                                                                                                                                                                                                     &'static str)]\n+                                                                                                                                                                                                                                   as\n+                                                                                                                                                                                                                                   [&str; 1])\n                                                                                                                                                                                                                                  as\n-                                                                                                                                                                                                                                 ())\n-                                                                                                                                                                                                                           {\n-                                                                                                                                                                                                                           ()\n-                                                                                                                                                                                                                           =>\n-                                                                                                                                                                                                                           ([]\n-                                                                                                                                                                                                                               as\n-                                                                                                                                                                                                                               [std::fmt::ArgumentV1<'_>; 0]),\n-                                                                                                                                                                                                                       }\n-                                                                                                                                                                                                                          as\n-                                                                                                                                                                                                                          [std::fmt::ArgumentV1<'_>; 0])\n-                                                                                                                                                                                                                        as\n-                                                                                                                                                                                                                        &[std::fmt::ArgumentV1<'_>; 0]))\n-                                                                                                          as\n-                                                                                                          std::fmt::Arguments<'_>))\n-                      as std::string::String);\n+                                                                                                                                                                                                                                 &[&str; 1]),\n+                                                                                                                                                                                                                             (&(match (()\n+                                                                                                                                                                                                                                          as\n+                                                                                                                                                                                                                                          ())\n+                                                                                                                                                                                                                                    {\n+                                                                                                                                                                                                                                    ()\n+                                                                                                                                                                                                                                    =>\n+                                                                                                                                                                                                                                    ([]\n+                                                                                                                                                                                                                                        as\n+                                                                                                                                                                                                                                        [std::fmt::ArgumentV1<'_>; 0]),\n+                                                                                                                                                                                                                                }\n+                                                                                                                                                                                                                                   as\n+                                                                                                                                                                                                                                   [std::fmt::ArgumentV1<'_>; 0])\n+                                                                                                                                                                                                                                 as\n+                                                                                                                                                                                                                                 &[std::fmt::ArgumentV1<'_>; 0]))\n+                                                                                                                   as\n+                                                                                                                   std::fmt::Arguments<'_>))\n+                               as std::string::String);\n+                       (res as std::string::String)\n+                   } as std::string::String);\n               } as ())\n pub type Foo = [i32; (3 as usize)];\n pub struct Bar {"}]}