{"sha": "bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYWNiNjNmNWE5M2I3MzU5ZTJkMmI2ZDg3N2YyODQxMDMyZDJlZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-11-05T21:22:19Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-11-06T02:29:53Z"}, "message": "Only test docs and such for the host", "tree": {"sha": "7192276765eec322c0fa354224eb86dbb8bcac2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7192276765eec322c0fa354224eb86dbb8bcac2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "html_url": "https://github.com/rust-lang/rust/commit/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18ee04b3dfb5dfdb7ce0e701d85763751cfe6cde", "url": "https://api.github.com/repos/rust-lang/rust/commits/18ee04b3dfb5dfdb7ce0e701d85763751cfe6cde", "html_url": "https://github.com/rust-lang/rust/commit/18ee04b3dfb5dfdb7ce0e701d85763751cfe6cde"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "75bcbfee6ee0b3e119f037baa95f75d0b2e70fd6", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "patch": "@@ -36,7 +36,8 @@ pub fn clean(build: &Build) {\n             if entry.file_name().to_str() == Some(\"llvm\") {\n                 continue\n             }\n-            rm_rf(build, &entry.path());\n+            let path = t!(entry.path().canonicalize());\n+            rm_rf(build, &path);\n         }\n     }\n }"}, {"sha": "6f616434b10c345bd93041ccc4ded07da55adf8f", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdacb63f5a93b7359e2d2b6d877f2841032d2ed2/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=bdacb63f5a93b7359e2d2b6d877f2841032d2ed2", "patch": "@@ -112,7 +112,7 @@ pub fn build_rules(build: &Build) -> Rules {\n          .dep(|s| s.name(\"build-crate-rustc-main\"));\n     for (krate, path, _default) in krates(\"std_shim\") {\n         rules.build(&krate.build_step, path)\n-             .dep(|s| s.name(\"rustc\").target(s.host))\n+             .dep(move |s| s.name(\"rustc\").host(&build.config.build).target(s.host))\n              .dep(move |s| {\n                  if s.host == build.config.build {\n                     dummy(s, build)\n@@ -296,31 +296,36 @@ pub fn build_rules(build: &Build) -> Rules {\n     rules.test(\"check-rustc-all\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"librustc\"))\n          .default(true)\n-             .host(true)\n+         .host(true)\n          .run(move |s| check::krate(build, &s.compiler(), s.target, Mode::Librustc,\n                                None));\n \n     rules.test(\"check-linkchecker\", \"src/tools/linkchecker\")\n          .dep(|s| s.name(\"tool-linkchecker\"))\n          .dep(|s| s.name(\"default:doc\"))\n          .default(true)\n+         .host(true)\n          .run(move |s| check::linkcheck(build, s.stage, s.target));\n     rules.test(\"check-cargotest\", \"src/tools/cargotest\")\n          .dep(|s| s.name(\"tool-cargotest\"))\n          .dep(|s| s.name(\"librustc\"))\n+         .host(true)\n          .run(move |s| check::cargotest(build, s.stage, s.target));\n     rules.test(\"check-tidy\", \"src/tools/tidy\")\n          .dep(|s| s.name(\"tool-tidy\"))\n          .default(true)\n+         .host(true)\n          .run(move |s| check::tidy(build, s.stage, s.target));\n     rules.test(\"check-error-index\", \"src/tools/error_index_generator\")\n          .dep(|s| s.name(\"libstd\"))\n          .dep(|s| s.name(\"tool-error-index\").host(s.host))\n          .default(true)\n+         .host(true)\n          .run(move |s| check::error_index(build, &s.compiler()));\n     rules.test(\"check-docs\", \"src/doc\")\n          .dep(|s| s.name(\"libtest\"))\n          .default(true)\n+         .host(true)\n          .run(move |s| check::docs(build, &s.compiler()));\n \n     rules.build(\"test-helpers\", \"src/rt/rust_test_helpers.c\")\n@@ -363,12 +368,14 @@ pub fn build_rules(build: &Build) -> Rules {\n          .default(build.config.docs)\n          .run(move |s| doc::rustbook(build, s.stage, s.target, \"nomicon\"));\n     rules.doc(\"doc-standalone\", \"src/doc\")\n-         .dep(move |s| s.name(\"rustc\").target(&build.config.build))\n+         .dep(move |s| s.name(\"rustc\").host(&build.config.build).target(&build.config.build))\n          .default(build.config.docs)\n          .run(move |s| doc::standalone(build, s.stage, s.target));\n     rules.doc(\"doc-error-index\", \"src/tools/error_index_generator\")\n          .dep(move |s| s.name(\"tool-error-index\").target(&build.config.build))\n+         .dep(move |s| s.name(\"librustc\"))\n          .default(build.config.docs)\n+         .host(true)\n          .run(move |s| doc::error_index(build, s.stage, s.target));\n     for (krate, path, default) in krates(\"std_shim\") {\n         rules.doc(&krate.doc_step, path)\n@@ -393,7 +400,7 @@ pub fn build_rules(build: &Build) -> Rules {\n     // ========================================================================\n     // Distribution targets\n     rules.dist(\"dist-rustc\", \"src/librustc\")\n-         .dep(|s| s.name(\"rustc\"))\n+         .dep(move |s| s.name(\"rustc\").host(&build.config.build))\n          .host(true)\n          .default(true)\n          .run(move |s| dist::rustc(build, s.stage, s.target));\n@@ -658,6 +665,7 @@ invalid rule dependency graph detected, was a rule added and maybe typo'd?\n \n         // And finally, iterate over everything and execute it.\n         for step in order.iter() {\n+            self.build.verbose(&format!(\"executing step {:?}\", step));\n             (self.rules[step.name].run)(step);\n         }\n     }"}]}