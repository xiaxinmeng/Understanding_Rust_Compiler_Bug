{"sha": "d8b1d51b9540be6e51e46077ac6f196f088b0e80", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YjFkNTFiOTU0MGJlNmU1MWU0NjA3N2FjNmYxOTZmMDg4YjBlODA=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-25T01:38:25Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-23T19:28:25Z"}, "message": "Clean up `core` macros documentation\n\n* Switch a couple links over to intra-doc links\n* Clean up some formatting/typography", "tree": {"sha": "e49b81410a003f9aa8a3fb5aae0ec30c26aaf54c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e49b81410a003f9aa8a3fb5aae0ec30c26aaf54c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8b1d51b9540be6e51e46077ac6f196f088b0e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b1d51b9540be6e51e46077ac6f196f088b0e80", "html_url": "https://github.com/rust-lang/rust/commit/d8b1d51b9540be6e51e46077ac6f196f088b0e80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8b1d51b9540be6e51e46077ac6f196f088b0e80/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37e1e186eae66c31ddf8c1c7b30b17f6d167e6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37e1e186eae66c31ddf8c1c7b30b17f6d167e6b", "html_url": "https://github.com/rust-lang/rust/commit/d37e1e186eae66c31ddf8c1c7b30b17f6d167e6b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0699c9eab1871922b819558ef3ac74286da95eeb", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8b1d51b9540be6e51e46077ac6f196f088b0e80/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b1d51b9540be6e51e46077ac6f196f088b0e80/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=d8b1d51b9540be6e51e46077ac6f196f088b0e80", "patch": "@@ -517,15 +517,15 @@ macro_rules! unreachable {\n /// This allows your code to type-check, which is useful if you are prototyping or\n /// implementing a trait that requires multiple methods which you don't plan of using all of.\n ///\n-/// The difference between `unimplemented!` and [`todo!`](macro.todo.html) is that while `todo!`\n+/// The difference between `unimplemented!` and [`todo!`] is that while `todo!`\n /// conveys an intent of implementing the functionality later and the message is \"not yet\n /// implemented\", `unimplemented!` makes no such claims. Its message is \"not implemented\".\n /// Also some IDEs will mark `todo!`s.\n ///\n /// # Panics\n ///\n-/// This will always [panic!](macro.panic.html) because `unimplemented!` is just a\n-/// shorthand for `panic!` with a fixed, specific message.\n+/// This will always [`panic!`] because `unimplemented!` is just a shorthand for `panic!` with a\n+/// fixed, specific message.\n ///\n /// Like `panic!`, this macro has a second form for displaying custom values.\n ///\n@@ -602,7 +602,7 @@ macro_rules! unimplemented {\n ///\n /// # Panics\n ///\n-/// This will always [panic!](macro.panic.html)\n+/// This will always [`panic!`].\n ///\n /// # Examples\n ///"}]}