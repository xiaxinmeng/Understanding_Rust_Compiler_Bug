{"sha": "3d80e0a15417ccf731a68e3100dfb4c7619c9274", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkODBlMGExNTQxN2NjZjczMWE2OGUzMTAwZGZiNGM3NjE5YzkyNzQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-04T11:52:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-04T12:38:53Z"}, "message": "Migrate to user-centric config name for `cargo check` stuff", "tree": {"sha": "f8dbb7d935d57f0f24bb57128af5d2440148dfbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8dbb7d935d57f0f24bb57128af5d2440148dfbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d80e0a15417ccf731a68e3100dfb4c7619c9274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d80e0a15417ccf731a68e3100dfb4c7619c9274", "html_url": "https://github.com/rust-lang/rust/commit/3d80e0a15417ccf731a68e3100dfb4c7619c9274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d80e0a15417ccf731a68e3100dfb4c7619c9274/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ce539ec969125dd757f06ef97a75f89876b07c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ce539ec969125dd757f06ef97a75f89876b07c5", "html_url": "https://github.com/rust-lang/rust/commit/0ce539ec969125dd757f06ef97a75f89876b07c5"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "3671367025059787e105ff5b348185e6ae133da0", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=3d80e0a15417ccf731a68e3100dfb4c7619c9274", "patch": "@@ -46,8 +46,8 @@ config_data! {\n         cargo_allFeatures: bool          = \"false\",\n         /// List of features to activate.\n         cargo_features: Vec<String>      = \"[]\",\n-        /// Run `cargo check` on startup to get the correct value for package\n-        /// OUT_DIRs.\n+        /// Run build scripts (`build.rs`) for more precise code analysis.\n+        cargo_runBuildScripts |\n         cargo_loadOutDirsFromCheck: bool = \"false\",\n         /// Do not activate the `default` feature.\n         cargo_noDefaultFeatures: bool    = \"false\",\n@@ -167,8 +167,7 @@ config_data! {\n         /// Whether to show `can't find Cargo.toml` error message.\n         notifications_cargoTomlNotFound: bool      = \"true\",\n \n-        /// Enable Proc macro support, `#rust-analyzer.cargo.loadOutDirsFromCheck#` must be\n-        /// enabled.\n+        /// Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\n         procMacro_enable: bool                     = \"false\",\n         /// Internal config, path to proc-macro server executable (typically,\n         /// this is rust-analyzer itself, but we override this in tests).\n@@ -480,8 +479,8 @@ impl Config {\n     pub fn cargo_autoreload(&self) -> bool {\n         self.data.cargo_autoreload\n     }\n-    pub fn load_out_dirs_from_check(&self) -> bool {\n-        self.data.cargo_loadOutDirsFromCheck\n+    pub fn run_build_scripts(&self) -> bool {\n+        self.data.cargo_runBuildScripts || self.data.procMacro_enable\n     }\n     pub fn cargo(&self) -> CargoConfig {\n         let rustc_source = self.data.rustcSource.as_ref().map(|rustc_src| {"}, {"sha": "f0cb309e4737cc340f42372e95ba4440fc6a7207", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=3d80e0a15417ccf731a68e3100dfb4c7619c9274", "patch": "@@ -312,7 +312,7 @@ impl GlobalState {\n                                 } else {\n                                     assert_eq!(n_done, n_total);\n                                     new_status = Status::Ready {\n-                                        partial: self.config.load_out_dirs_from_check()\n+                                        partial: self.config.run_build_scripts()\n                                             && self.workspace_build_data.is_none()\n                                             || config_version < self.vfs_config_version,\n                                     };"}, {"sha": "aa8504c3d5168cedf12404ffab8b0ac6d527a466", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d80e0a15417ccf731a68e3100dfb4c7619c9274/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=3d80e0a15417ccf731a68e3100dfb4c7619c9274", "patch": "@@ -337,7 +337,7 @@ impl GlobalState {\n         };\n         change.set_crate_graph(crate_graph);\n \n-        if self.config.load_out_dirs_from_check() && workspace_build_data.is_none() {\n+        if self.config.run_build_scripts() && workspace_build_data.is_none() {\n             let mut collector = BuildDataCollector::default();\n             for ws in &workspaces {\n                 ws.collect_build_data_configs(&mut collector);"}, {"sha": "1dbf2a611d6722b18d40fdfc8cec651ca916778f", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d80e0a15417ccf731a68e3100dfb4c7619c9274/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/3d80e0a15417ccf731a68e3100dfb4c7619c9274/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=3d80e0a15417ccf731a68e3100dfb4c7619c9274", "patch": "@@ -10,8 +10,8 @@\n  Activate all available features (`--all-features`).\n [[rust-analyzer.cargo.features]]rust-analyzer.cargo.features (default: `[]`)::\n  List of features to activate.\n-[[rust-analyzer.cargo.loadOutDirsFromCheck]]rust-analyzer.cargo.loadOutDirsFromCheck (default: `false`)::\n- Run `cargo check` on startup to get the correct value for package  OUT_DIRs.\n+[[rust-analyzer.cargo.runBuildScripts]]rust-analyzer.cargo.runBuildScripts (default: `false`)::\n+ Run build scripts (`build.rs`) for more precise code analysis.\n [[rust-analyzer.cargo.noDefaultFeatures]]rust-analyzer.cargo.noDefaultFeatures (default: `false`)::\n  Do not activate the `default` feature.\n [[rust-analyzer.cargo.target]]rust-analyzer.cargo.target (default: `null`)::\n@@ -97,7 +97,7 @@\n [[rust-analyzer.notifications.cargoTomlNotFound]]rust-analyzer.notifications.cargoTomlNotFound (default: `true`)::\n  Whether to show `can't find Cargo.toml` error message.\n [[rust-analyzer.procMacro.enable]]rust-analyzer.procMacro.enable (default: `false`)::\n- Enable Proc macro support, `#rust-analyzer.cargo.loadOutDirsFromCheck#` must be  enabled.\n+ Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\n [[rust-analyzer.procMacro.server]]rust-analyzer.procMacro.server (default: `null`)::\n  Internal config, path to proc-macro server executable (typically,  this is rust-analyzer itself, but we override this in tests).\n [[rust-analyzer.runnables.overrideCargo]]rust-analyzer.runnables.overrideCargo (default: `null`)::"}, {"sha": "1987364bc02b8239384ef39164f60cdd23867029", "filename": "editors/code/package.json", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d80e0a15417ccf731a68e3100dfb4c7619c9274/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/3d80e0a15417ccf731a68e3100dfb4c7619c9274/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=3d80e0a15417ccf731a68e3100dfb4c7619c9274", "patch": "@@ -408,8 +408,8 @@\n                         \"type\": \"string\"\n                     }\n                 },\n-                \"rust-analyzer.cargo.loadOutDirsFromCheck\": {\n-                    \"markdownDescription\": \"Run `cargo check` on startup to get the correct value for package OUT_DIRs.\",\n+                \"rust-analyzer.cargo.runBuildScripts\": {\n+                    \"markdownDescription\": \"Run build scripts (`build.rs`) for more precise code analysis.\",\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },\n@@ -678,7 +678,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.procMacro.enable\": {\n-                    \"markdownDescription\": \"Enable Proc macro support, `#rust-analyzer.cargo.loadOutDirsFromCheck#` must be enabled.\",\n+                    \"markdownDescription\": \"Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\",\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },"}]}