{"sha": "159178e5d4a023f3945b504b49d3742b40453fee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTE3OGU1ZDRhMDIzZjM5NDViNTA0YjQ5ZDM3NDJiNDA0NTNmZWU=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-09T21:32:38Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-09T21:32:38Z"}, "message": "Separate compare_exchange and compare_exchange_weak uitests", "tree": {"sha": "077f54aa8526ad6b8762cae7f6e27a4d28a5e084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/077f54aa8526ad6b8762cae7f6e27a4d28a5e084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/159178e5d4a023f3945b504b49d3742b40453fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/159178e5d4a023f3945b504b49d3742b40453fee", "html_url": "https://github.com/rust-lang/rust/commit/159178e5d4a023f3945b504b49d3742b40453fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/159178e5d4a023f3945b504b49d3742b40453fee/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61671a2268903e1b5c28fcb3c713c27e84ea3e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/61671a2268903e1b5c28fcb3c713c27e84ea3e9b", "html_url": "https://github.com/rust-lang/rust/commit/61671a2268903e1b5c28fcb3c713c27e84ea3e9b"}], "stats": {"total": 347, "additions": 179, "deletions": 168}, "files": [{"sha": "1ddc12f9ab21341b5c93998a2ab12136a09b6e9a", "filename": "tests/ui/atomic_ordering_exchange.rs", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange.rs?ref=159178e5d4a023f3945b504b49d3742b40453fee", "patch": "@@ -42,43 +42,4 @@ fn main() {\n     // Acquire/AcqRel forbids failure order of SeqCst\n     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-\n-    // compare_exchange_weak tests\n-\n-    // Allowed ordering combos\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::Acquire);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::Acquire);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::Acquire);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::SeqCst);\n-\n-    // AcqRel is always forbidden as a failure ordering\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::AcqRel);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::AcqRel);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::AcqRel);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::AcqRel);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::AcqRel);\n-\n-    // Release is always forbidden as a failure ordering\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::Release);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::Release);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::Release);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::Release);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::Release);\n-\n-    // Release success order forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::Acquire);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::SeqCst);\n-\n-    // Relaxed success order also forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-\n-    // Acquire/AcqRel forbids failure order of SeqCst\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-    let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n }"}, {"sha": "c09d2d6ab21ae8263e27cc1166a533289b5a9d1c", "filename": "tests/ui/atomic_ordering_exchange.stderr", "status": "modified", "additions": 1, "deletions": 129, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange.stderr?ref=159178e5d4a023f3945b504b49d3742b40453fee", "patch": "@@ -127,133 +127,5 @@ LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n    |\n    = help: consider using ordering modes `Acquire` or `Relaxed` instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:60:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::AcqRel);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:61:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::AcqRel);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:62:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::AcqRel);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:63:61\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::AcqRel);\n-   |                                                             ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:64:61\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::AcqRel);\n-   |                                                             ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:67:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::Release);\n-   |                                                              ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:68:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::Release);\n-   |                                                              ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:69:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::Release);\n-   |                                                              ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:70:61\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::Release);\n-   |                                                             ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:71:61\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::SeqCst, Ordering::Release);\n-   |                                                             ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n-  --> $DIR/atomic_ordering_exchange.rs:74:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::Acquire);\n-   |                                                              ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n-  --> $DIR/atomic_ordering_exchange.rs:75:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Release, Ordering::SeqCst);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n-  --> $DIR/atomic_ordering_exchange.rs:78:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n-  --> $DIR/atomic_ordering_exchange.rs:79:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-   |                                                              ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering mode `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Acquire`\n-  --> $DIR/atomic_ordering_exchange.rs:82:62\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-   |                                                              ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `AcqRel`\n-  --> $DIR/atomic_ordering_exchange.rs:83:61\n-   |\n-LL |     let _ = x.compare_exchange_weak(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-   |                                                             ^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n-\n-error: aborting due to 32 previous errors\n+error: aborting due to 16 previous errors\n "}, {"sha": "5906990250728851196101c3da284ba9c7faedd0", "filename": "tests/ui/atomic_ordering_exchange_weak.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange_weak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange_weak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange_weak.rs?ref=159178e5d4a023f3945b504b49d3742b40453fee", "patch": "@@ -0,0 +1,47 @@\n+#![warn(clippy::invalid_atomic_ordering)]\n+\n+use std::sync::atomic::{AtomicPtr, Ordering};\n+\n+fn main() {\n+    let ptr = &mut 5;\n+    let ptr2 = &mut 10;\n+    // `compare_exchange_weak` testing\n+    let x = AtomicPtr::new(ptr);\n+\n+    // Allowed ordering combos\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::SeqCst);\n+\n+    // AcqRel is always forbidden as a failure ordering\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Relaxed, Ordering::AcqRel);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::AcqRel);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::AcqRel);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::AcqRel);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::SeqCst, Ordering::AcqRel);\n+\n+    // Release is always forbidden as a failure ordering\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Release);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Release);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Release);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Release);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Release);\n+\n+    // Release success order forbids failure order of Acquire or SeqCst\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n+\n+    // Relaxed success order also forbids failure order of Acquire or SeqCst\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n+\n+    // Acquire/AcqRel forbids failure order of SeqCst\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n+}"}, {"sha": "7210431bd1bdfec7aa2447d8844ebe269ff747fe", "filename": "tests/ui/atomic_ordering_exchange_weak.stderr", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/159178e5d4a023f3945b504b49d3742b40453fee/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fatomic_ordering_exchange_weak.stderr?ref=159178e5d4a023f3945b504b49d3742b40453fee", "patch": "@@ -0,0 +1,131 @@\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:23:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Relaxed, Ordering::AcqRel);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::invalid-atomic-ordering` implied by `-D warnings`\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:24:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::AcqRel);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:25:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::AcqRel);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:26:66\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::AcqRel);\n+   |                                                                  ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:27:66\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::SeqCst, Ordering::AcqRel);\n+   |                                                                  ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:30:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Release);\n+   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:31:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Release);\n+   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:32:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Release);\n+   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:33:66\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Release);\n+   |                                                                  ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:34:66\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Release);\n+   |                                                                  ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:37:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n+   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Release`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:38:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:41:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Relaxed`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:42:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n+   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering mode `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `Acquire`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:45:67\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n+   |                                                                   ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: compare_exchange_weak's failure ordering may not stronger than the success ordering of `AcqRel`\n+  --> $DIR/atomic_ordering_exchange_weak.rs:46:66\n+   |\n+LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n+   |                                                                  ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+\n+error: aborting due to 16 previous errors\n+"}]}