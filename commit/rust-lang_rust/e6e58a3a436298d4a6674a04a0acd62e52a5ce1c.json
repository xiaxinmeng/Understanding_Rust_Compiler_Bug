{"sha": "e6e58a3a436298d4a6674a04a0acd62e52a5ce1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZTU4YTNhNDM2Mjk4ZDRhNjY3NGEwNGEwYWNkNjJlNTJhNWNlMWM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-09T09:26:13Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-09T12:29:44Z"}, "message": "Rollup merge of #50464 - est31:master, r=rkruppe\n\nRemove some transmutes", "tree": {"sha": "bb99d1f81e94b8d5f77f799df4ae717e82a8f052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb99d1f81e94b8d5f77f799df4ae717e82a8f052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlry6bgACgkQ/vbIBR0O\nATxS+Q/9HVjdPBhqF1I27MZAqpLfOQYPziiy3CxNQATzjqu9RLV/e00OKDZuquHl\nogEZuJWuzGsEx0qCEE/ITXgBV09xurg+o3LinhR6J7hHpZIq5yZoZ2ErnWDgFwkT\nd57+X4te0ApWf/XQuv8ae/k8zvnB+ri4tdKKGRbqyoqSw+ENvxIVyRHMfxqSh0Vs\nuIQdRQLUMho8CnZV7TnCBoUIMnCE3RnxME8QJR9QfNz+0VxF/Rwkwk2/BCTgoXvY\nWtd3Sv5TPj96OP4oqOGHXTXSlJeUdq6li8l2936EINnBDexnrOfSTvFkJ/JksmKa\n7R456EL62wqvu2mzXFsr5ewDFEIbVLRKtTq4ns5hAatwADQIc+/h+UzbAFMM4+FT\nKeojFeGbrW1cH5FvnRcIW/uSLI7z9Rq1jYtLmcTtUjWdMUsdNko7Y29lrzedPOfN\nAQuOAxDaolCvpkvjbUwKQcZiCfe+opu7ZWagC3Jwf8Fwz3qig7c9Aeoo32koQ0Gh\nnXGgzVrqZMpFPa+8U3OrA6cBEYXoO1DHUxW/rh23F89E1kS6rCxalpWUpqJecVSV\n/LstCmTFYxwTKFLSRQ7aOIfmDFmAN8qY9q1fHuwG5p9xwzPrQ8v2X5SGwzuWfIqz\ndStmU37TkapUc9On+CR35LvO1yy6U/cJtrTKySFYG6zlB5/St8Q=\n=U09N\n-----END PGP SIGNATURE-----", "payload": "tree bb99d1f81e94b8d5f77f799df4ae717e82a8f052\nparent 1f4718a5c1ae842d119b2a0399ce07a4ee78c28c\nparent 6c8ec842cc2dbd0f4dbf99dbd47717fb48cf5b88\nauthor kennytm <kennytm@gmail.com> 1525857973 +0800\ncommitter kennytm <kennytm@gmail.com> 1525868984 +0800\n\nRollup merge of #50464 - est31:master, r=rkruppe\n\nRemove some transmutes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c", "html_url": "https://github.com/rust-lang/rust/commit/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4718a5c1ae842d119b2a0399ce07a4ee78c28c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4718a5c1ae842d119b2a0399ce07a4ee78c28c", "html_url": "https://github.com/rust-lang/rust/commit/1f4718a5c1ae842d119b2a0399ce07a4ee78c28c"}, {"sha": "6c8ec842cc2dbd0f4dbf99dbd47717fb48cf5b88", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c8ec842cc2dbd0f4dbf99dbd47717fb48cf5b88", "html_url": "https://github.com/rust-lang/rust/commit/6c8ec842cc2dbd0f4dbf99dbd47717fb48cf5b88"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "a1928657dabc480413d361950f8234d60ab8474b", "filename": "src/libcore/tests/num/flt2dec/random.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e58a3a436298d4a6674a04a0acd62e52a5ce1c/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs?ref=e6e58a3a436298d4a6674a04a0acd62e52a5ce1c", "patch": "@@ -11,7 +11,6 @@\n #![cfg(not(target_arch = \"wasm32\"))]\n \n use std::i16;\n-use std::mem;\n use std::str;\n \n use core::num::flt2dec::MAX_SIG_DIGITS;\n@@ -75,8 +74,7 @@ pub fn f32_random_equivalence_test<F, G>(f: F, g: G, k: usize, n: usize)\n     let mut rng: XorShiftRng = Rand::rand(&mut rand::thread_rng());\n     let f32_range = Range::new(0x0000_0001u32, 0x7f80_0000);\n     iterate(\"f32_random_equivalence_test\", k, n, f, g, |_| {\n-        let i: u32 = f32_range.ind_sample(&mut rng);\n-        let x: f32 = unsafe {mem::transmute(i)};\n+        let x = f32::from_bits(f32_range.ind_sample(&mut rng));\n         decode_finite(x)\n     });\n }\n@@ -87,8 +85,7 @@ pub fn f64_random_equivalence_test<F, G>(f: F, g: G, k: usize, n: usize)\n     let mut rng: XorShiftRng = Rand::rand(&mut rand::thread_rng());\n     let f64_range = Range::new(0x0000_0000_0000_0001u64, 0x7ff0_0000_0000_0000);\n     iterate(\"f64_random_equivalence_test\", k, n, f, g, |_| {\n-        let i: u64 = f64_range.ind_sample(&mut rng);\n-        let x: f64 = unsafe {mem::transmute(i)};\n+        let x = f64::from_bits(f64_range.ind_sample(&mut rng));\n         decode_finite(x)\n     });\n }\n@@ -105,7 +102,8 @@ pub fn f32_exhaustive_equivalence_test<F, G>(f: F, g: G, k: usize)\n     // iterate from 0x0000_0001 to 0x7f7f_ffff, i.e. all finite ranges\n     let (npassed, nignored) = iterate(\"f32_exhaustive_equivalence_test\",\n                                       k, 0x7f7f_ffff, f, g, |i: usize| {\n-        let x: f32 = unsafe {mem::transmute(i as u32 + 1)};\n+\n+        let x = f32::from_bits(i as u32 + 1);\n         decode_finite(x)\n     });\n     assert_eq!((npassed, nignored), (2121451881, 17643158));"}]}