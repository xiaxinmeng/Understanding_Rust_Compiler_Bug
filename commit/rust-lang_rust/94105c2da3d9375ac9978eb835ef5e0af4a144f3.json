{"sha": "94105c2da3d9375ac9978eb835ef5e0af4a144f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MTA1YzJkYTNkOTM3NWFjOTk3OGViODM1ZWY1ZTBhZjRhMTQ0ZjM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-16T13:08:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-16T13:08:42Z"}, "message": "Rollup merge of #73373 - lzutao:bug-trackcaller, r=Amanieu\n\nUse track caller for bug! macro", "tree": {"sha": "e1abe66d159d2cf7e3ddf3aa0bd6a32f28afc85c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1abe66d159d2cf7e3ddf3aa0bd6a32f28afc85c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94105c2da3d9375ac9978eb835ef5e0af4a144f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe6MRaCRBK7hj4Ov3rIwAAdHIIAIC+dpP7Yyv9Gpw6LnVhaqM4\nFHG2TFul2dVCbWi+jBE9XshZzVxPgCnDclcirsiQdODOydE7OIktboYg6XeanLU5\nZX10l6vOuLwNki9ytlk68cPAvv0ef9Ux87AkYLE9nH2CCGgkWqQTpFDjPGVb9nHE\nk8FcSAmdNNZYO9CWahyLjsR/ab3Z+vwl1zcQM9B+wahoekDjIdBb7xIACxu0YuyA\nWT7qc8EYeaztQ5sPnt/btMa0XVvtlz5z+EJPhilxEhXU1zWSsVe0zqP4vsltPsXd\nyiVYDr+nDJhfc4VN5dLe6qqLL6xg90hvvXinzhw3092cAQq1FsSyBwYCrys4irM=\n=d5+j\n-----END PGP SIGNATURE-----\n", "payload": "tree e1abe66d159d2cf7e3ddf3aa0bd6a32f28afc85c\nparent 6c44519749d978a071a4f4fb01fc18b01db00e1c\nparent fe7456ce94b8edd549176d004a4435e1132c9c36\nauthor Dylan DPC <dylan.dpc@gmail.com> 1592312922 +0200\ncommitter GitHub <noreply@github.com> 1592312922 +0200\n\nRollup merge of #73373 - lzutao:bug-trackcaller, r=Amanieu\n\nUse track caller for bug! macro\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94105c2da3d9375ac9978eb835ef5e0af4a144f3", "html_url": "https://github.com/rust-lang/rust/commit/94105c2da3d9375ac9978eb835ef5e0af4a144f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94105c2da3d9375ac9978eb835ef5e0af4a144f3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c44519749d978a071a4f4fb01fc18b01db00e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c44519749d978a071a4f4fb01fc18b01db00e1c", "html_url": "https://github.com/rust-lang/rust/commit/6c44519749d978a071a4f4fb01fc18b01db00e1c"}, {"sha": "fe7456ce94b8edd549176d004a4435e1132c9c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7456ce94b8edd549176d004a4435e1132c9c36", "html_url": "https://github.com/rust-lang/rust/commit/fe7456ce94b8edd549176d004a4435e1132c9c36"}], "stats": {"total": 67, "additions": 28, "deletions": 39}, "files": [{"sha": "c7009b76e814817042fb3bab5d9cea92f1ae7845", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -39,8 +39,7 @@ pub struct PanicInfo<'a> {\n impl<'a> PanicInfo<'a> {\n     #[unstable(\n         feature = \"panic_internals\",\n-        reason = \"internal details of the implementation of the `panic!` \\\n-                         and related macros\",\n+        reason = \"internal details of the implementation of the `panic!` and related macros\",\n         issue = \"none\"\n     )]\n     #[doc(hidden)]\n@@ -55,8 +54,7 @@ impl<'a> PanicInfo<'a> {\n \n     #[unstable(\n         feature = \"panic_internals\",\n-        reason = \"internal details of the implementation of the `panic!` \\\n-                         and related macros\",\n+        reason = \"internal details of the implementation of the `panic!` and related macros\",\n         issue = \"none\"\n     )]\n     #[doc(hidden)]\n@@ -244,8 +242,7 @@ impl<'a> Location<'a> {\n impl<'a> Location<'a> {\n     #![unstable(\n         feature = \"panic_internals\",\n-        reason = \"internal details of the implementation of the `panic!` \\\n-                          and related macros\",\n+        reason = \"internal details of the implementation of the `panic!` and related macros\",\n         issue = \"none\"\n     )]\n     #[doc(hidden)]"}, {"sha": "766c69a5f94206ae7944ae635c5f17fbe954c219", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -22,8 +22,7 @@\n #![allow(dead_code, missing_docs)]\n #![unstable(\n     feature = \"core_panic\",\n-    reason = \"internal details of the implementation of the `panic!` \\\n-              and related macros\",\n+    reason = \"internal details of the implementation of the `panic!` and related macros\",\n     issue = \"none\"\n )]\n "}, {"sha": "a5482b7bdcfeb1a40c69a4b4483727fc093cfa97", "filename": "src/librustc_middle/macros.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmacros.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -1,16 +1,20 @@\n #[macro_export]\n macro_rules! bug {\n-    () => ( bug!(\"impossible case reached\") );\n-    ($($message:tt)*) => ({\n-        $crate::util::bug::bug_fmt(file!(), line!(), format_args!($($message)*))\n-    })\n+    () => ( $crate::bug!(\"impossible case reached\") );\n+    ($msg:expr) => ({ $crate::util::bug::bug_fmt(::std::format_args!($msg)) });\n+    ($msg:expr,) => ({ $crate::bug!($msg) });\n+    ($fmt:expr, $($arg:tt)+) => ({\n+        $crate::util::bug::bug_fmt(::std::format_args!($fmt, $($arg)+))\n+    });\n }\n \n #[macro_export]\n macro_rules! span_bug {\n-    ($span:expr, $($message:tt)*) => ({\n-        $crate::util::bug::span_bug_fmt(file!(), line!(), $span, format_args!($($message)*))\n-    })\n+    ($span:expr, $msg:expr) => ({ $crate::util::bug::span_bug_fmt($span, ::std::format_args!($msg)) });\n+    ($span:expr, $msg:expr,) => ({ $crate::span_bug!($span, $msg) });\n+    ($span:expr, $fmt:expr, $($arg:tt)+) => ({\n+        $crate::util::bug::span_bug_fmt($span, ::std::format_args!($fmt, $($arg)+))\n+    });\n }\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "de2e1046f1cbbb60ea245fbe5655ed737ca21325", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -189,8 +189,7 @@ fn validate_hir_id_for_typeck_tables(\n         if hir_id.owner != hir_owner {\n             ty::tls::with(|tcx| {\n                 bug!(\n-                    \"node {} with HirId::owner {:?} cannot be placed in \\\n-                     TypeckTables with hir_owner {:?}\",\n+                    \"node {} with HirId::owner {:?} cannot be placed in TypeckTables with hir_owner {:?}\",\n                     tcx.hir().node_to_string(hir_id),\n                     hir_id.owner,\n                     hir_owner"}, {"sha": "9c3a97d8332f1992c4a2f58f1a83acff28dddadd", "filename": "src/librustc_middle/util/bug.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Futil%2Fbug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibrustc_middle%2Futil%2Fbug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Futil%2Fbug.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -3,34 +3,31 @@\n use crate::ty::{tls, TyCtxt};\n use rustc_span::{MultiSpan, Span};\n use std::fmt;\n+use std::panic::Location;\n \n #[cold]\n #[inline(never)]\n-pub fn bug_fmt(file: &'static str, line: u32, args: fmt::Arguments<'_>) -> ! {\n+#[track_caller]\n+pub fn bug_fmt(args: fmt::Arguments<'_>) -> ! {\n     // this wrapper mostly exists so I don't have to write a fully\n     // qualified path of None::<Span> inside the bug!() macro definition\n-    opt_span_bug_fmt(file, line, None::<Span>, args);\n+    opt_span_bug_fmt(None::<Span>, args, Location::caller());\n }\n \n #[cold]\n #[inline(never)]\n-pub fn span_bug_fmt<S: Into<MultiSpan>>(\n-    file: &'static str,\n-    line: u32,\n-    span: S,\n-    args: fmt::Arguments<'_>,\n-) -> ! {\n-    opt_span_bug_fmt(file, line, Some(span), args);\n+#[track_caller]\n+pub fn span_bug_fmt<S: Into<MultiSpan>>(span: S, args: fmt::Arguments<'_>) -> ! {\n+    opt_span_bug_fmt(Some(span), args, Location::caller());\n }\n \n fn opt_span_bug_fmt<S: Into<MultiSpan>>(\n-    file: &'static str,\n-    line: u32,\n     span: Option<S>,\n     args: fmt::Arguments<'_>,\n+    location: &Location<'_>,\n ) -> ! {\n     tls::with_opt(move |tcx| {\n-        let msg = format!(\"{}:{}: {}\", file, line, args);\n+        let msg = format!(\"{}: {}\", location, args);\n         match (tcx, span) {\n             (Some(tcx), Some(span)) => tcx.sess.diagnostic().span_bug(span, &msg),\n             (Some(tcx), None) => tcx.sess.diagnostic().bug(&msg),"}, {"sha": "d22ac1d53858429dcc45c9fcbd9c16ce98926400", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94105c2da3d9375ac9978eb835ef5e0af4a144f3/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=94105c2da3d9375ac9978eb835ef5e0af4a144f3", "patch": "@@ -201,8 +201,7 @@ fn default_hook(info: &PanicInfo<'_>) {\n                 if FIRST_PANIC.swap(false, Ordering::SeqCst) {\n                     let _ = writeln!(\n                         err,\n-                        \"note: run with `RUST_BACKTRACE=1` \\\n-                                           environment variable to display a backtrace\"\n+                        \"note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\"\n                     );\n                 }\n             }\n@@ -454,10 +453,7 @@ fn rust_panic_with_hook(\n     // process real quickly as we don't want to try calling it again as it'll\n     // probably just panic again.\n     if panics > 2 {\n-        util::dumb_print(format_args!(\n-            \"thread panicked while processing \\\n-                                       panic. aborting.\\n\"\n-        ));\n+        util::dumb_print(format_args!(\"thread panicked while processing panic. aborting.\\n\"));\n         intrinsics::abort()\n     }\n \n@@ -489,10 +485,7 @@ fn rust_panic_with_hook(\n         // have limited options. Currently our preference is to\n         // just abort. In the future we may consider resuming\n         // unwinding or otherwise exiting the thread cleanly.\n-        util::dumb_print(format_args!(\n-            \"thread panicked while panicking. \\\n-                                       aborting.\\n\"\n-        ));\n+        util::dumb_print(format_args!(\"thread panicked while panicking. aborting.\\n\"));\n         intrinsics::abort()\n     }\n "}]}