{"sha": "3766453a422198c77df4970159dd3a56f05e1861", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NjY0NTNhNDIyMTk4Yzc3ZGY0OTcwMTU5ZGQzYTU2ZjA1ZTE4NjE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-04T23:05:31Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-04T23:52:28Z"}, "message": "rustc: move the check_loop pass earlier.\n\nThis pass is purely AST based, and by running it earlier we emit more\nuseful error messages, e.g. type inference fails in the case of `let r =\nbreak;` with few constraints on `r`, but its more useful to be told that\nthe `break` is outside a loop (rather than a type error) when it is.\n\nCloses #13292.", "tree": {"sha": "796e295c63a00380be076ad80bfd0d701c2479f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/796e295c63a00380be076ad80bfd0d701c2479f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3766453a422198c77df4970159dd3a56f05e1861", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3766453a422198c77df4970159dd3a56f05e1861", "html_url": "https://github.com/rust-lang/rust/commit/3766453a422198c77df4970159dd3a56f05e1861", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3766453a422198c77df4970159dd3a56f05e1861/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f1b9f6dc9418325f83d9766c7cfab30cb48018", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f1b9f6dc9418325f83d9766c7cfab30cb48018", "html_url": "https://github.com/rust-lang/rust/commit/e5f1b9f6dc9418325f83d9766c7cfab30cb48018"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "7cb8a3c4efd221f5546758bc18b9b08b6f720da7", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3766453a422198c77df4970159dd3a56f05e1861/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3766453a422198c77df4970159dd3a56f05e1861/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=3766453a422198c77df4970159dd3a56f05e1861", "patch": "@@ -323,6 +323,9 @@ pub fn phase_3_run_analysis_passes(sess: Session,\n     let region_map = time(time_passes, \"region resolution\", (), |_|\n                           middle::region::resolve_crate(&sess, krate));\n \n+    time(time_passes, \"loop checking\", (), |_|\n+         middle::check_loop::check_crate(&sess, krate));\n+\n     let ty_cx = ty::mk_ctxt(sess, def_map, named_region_map, ast_map,\n                             freevars, region_map, lang_items);\n \n@@ -348,9 +351,6 @@ pub fn phase_3_run_analysis_passes(sess: Session,\n     time(time_passes, \"effect checking\", (), |_|\n          middle::effect::check_crate(&ty_cx, method_map, krate));\n \n-    time(time_passes, \"loop checking\", (), |_|\n-         middle::check_loop::check_crate(&ty_cx, krate));\n-\n     let middle::moves::MoveMaps {moves_map, moved_variables_set,\n                                  capture_map} =\n         time(time_passes, \"compute moves\", (), |_|"}, {"sha": "4f08d818f4a13c33ad406f3012b67d905bbe163a", "filename": "src/librustc/middle/check_loop.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3766453a422198c77df4970159dd3a56f05e1861/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3766453a422198c77df4970159dd3a56f05e1861/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs?ref=3766453a422198c77df4970159dd3a56f05e1861", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty;\n+use driver::session::Session;\n \n use syntax::ast;\n use syntax::codemap::Span;\n@@ -21,11 +21,11 @@ enum Context {\n }\n \n struct CheckLoopVisitor<'a> {\n-    tcx: &'a ty::ctxt,\n+    sess: &'a Session,\n }\n \n-pub fn check_crate(tcx: &ty::ctxt, krate: &ast::Crate) {\n-    visit::walk_crate(&mut CheckLoopVisitor { tcx: tcx }, krate, Normal)\n+pub fn check_crate(sess: &Session, krate: &ast::Crate) {\n+    visit::walk_crate(&mut CheckLoopVisitor { sess: sess }, krate, Normal)\n }\n \n impl<'a> Visitor<Context> for CheckLoopVisitor<'a> {\n@@ -57,12 +57,10 @@ impl<'a> CheckLoopVisitor<'a> {\n         match cx {\n             Loop => {}\n             Closure => {\n-                self.tcx.sess.span_err(span, format!(\"`{}` inside of a closure\",\n-                                                     name));\n+                self.sess.span_err(span, format!(\"`{}` inside of a closure\", name));\n             }\n             Normal => {\n-                self.tcx.sess.span_err(span, format!(\"`{}` outside of loop\",\n-                                                     name));\n+                self.sess.span_err(span, format!(\"`{}` outside of loop\", name));\n             }\n         }\n     }"}, {"sha": "210e3d3af800b1f99c29536e58c4b8ea89f99900", "filename": "src/test/compile-fail/break-outside-loop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3766453a422198c77df4970159dd3a56f05e1861/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3766453a422198c77df4970159dd3a56f05e1861/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs?ref=3766453a422198c77df4970159dd3a56f05e1861", "patch": "@@ -30,4 +30,6 @@ fn main() {\n     }\n \n     let rs: Foo = Foo{t: pth};\n+\n+    let unconstrained = break; //~ ERROR: `break` outside of loop\n }"}]}