{"sha": "2609fab8e46414333aa68412134df65c7fcd1a77", "node_id": "C_kwDOAAsO6NoAKDI2MDlmYWI4ZTQ2NDE0MzMzYWE2ODQxMjEzNGRmNjVjN2ZjZDFhNzc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-30T16:22:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-30T16:22:49Z"}, "message": "Auto merge of #90205 - mati865:link-modifiers-in-rustc, r=petrochenkov\n\nRepace use of `static_nobundle` with `native_link_modifiers` within Rust codebase\n\nThis fixes warnings when building Rust and running tests:\n```\nwarning: library kind `static-nobundle` has been superseded by specifying `-bundle` on library kind `static`. Try `static:-bundle`\nwarning: `rustc_llvm` (lib) generated 2 warnings (1 duplicate)\n```", "tree": {"sha": "3b412fd426c9847f057d4ca978bbe81e60e10d91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b412fd426c9847f057d4ca978bbe81e60e10d91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2609fab8e46414333aa68412134df65c7fcd1a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2609fab8e46414333aa68412134df65c7fcd1a77", "html_url": "https://github.com/rust-lang/rust/commit/2609fab8e46414333aa68412134df65c7fcd1a77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2609fab8e46414333aa68412134df65c7fcd1a77/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f13083542cb2b9fce83ed8a50238e4a6386820f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f13083542cb2b9fce83ed8a50238e4a6386820f", "html_url": "https://github.com/rust-lang/rust/commit/9f13083542cb2b9fce83ed8a50238e4a6386820f"}, {"sha": "533247c1c843ebafed07de995ee33fef388a3676", "url": "https://api.github.com/repos/rust-lang/rust/commits/533247c1c843ebafed07de995ee33fef388a3676", "html_url": "https://github.com/rust-lang/rust/commit/533247c1c843ebafed07de995ee33fef388a3676"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "943ce589c4f36ea41a19888cbe61af07159d0c40", "filename": "compiler/rustc_llvm/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/compiler%2Frustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/compiler%2Frustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fbuild.rs?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -288,7 +288,7 @@ fn main() {\n             let path = PathBuf::from(s);\n             println!(\"cargo:rustc-link-search=native={}\", path.parent().unwrap().display());\n             if target.contains(\"windows\") {\n-                println!(\"cargo:rustc-link-lib=static-nobundle={}\", stdcppname);\n+                println!(\"cargo:rustc-link-lib=static:-bundle={}\", stdcppname);\n             } else {\n                 println!(\"cargo:rustc-link-lib=static={}\", stdcppname);\n             }\n@@ -302,6 +302,6 @@ fn main() {\n     // Libstdc++ depends on pthread which Rust doesn't link on MinGW\n     // since nothing else requires it.\n     if target.contains(\"windows-gnu\") {\n-        println!(\"cargo:rustc-link-lib=static-nobundle=pthread\");\n+        println!(\"cargo:rustc-link-lib=static:-bundle=pthread\");\n     }\n }"}, {"sha": "8476c2bfcc431ca7c8fe0a2e26323b4b6a9e918b", "filename": "compiler/rustc_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fsrc%2Flib.rs?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -1,5 +1,5 @@\n #![feature(nll)]\n-#![feature(static_nobundle)]\n+#![feature(native_link_modifiers)]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n \n // NOTE: This crate only exists to allow linking on mingw targets."}, {"sha": "079626f0fea54c38755fbc1a7be8af9918890643", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -5,7 +5,6 @@\n #![feature(native_link_modifiers_bundle)]\n #![feature(nll)]\n #![feature(staged_api)]\n-#![feature(static_nobundle)]\n #![feature(c_unwind)]\n #![cfg_attr(not(target_env = \"msvc\"), feature(libc))]\n "}, {"sha": "dd3b7c76f28675b8d0d77321f9607193fe843119", "filename": "src/test/run-make-fulldeps/foreign-exceptions/foo.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -2,8 +2,6 @@\n // are caught by catch_unwind. Also tests that Rust panics can unwind through\n // C++ code.\n \n-// For linking libstdc++ on MinGW\n-#![cfg_attr(all(windows, target_env = \"gnu\"), feature(static_nobundle))]\n #![feature(c_unwind)]\n \n use std::panic::{catch_unwind, AssertUnwindSafe};"}, {"sha": "9655d09df0f2a021ff78835395c411d308d1694f", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -117,10 +117,10 @@ else\n \t# that it is compiled with the expectation that pthreads is dynamically\n \t# linked as a DLL and will fail to link with a statically linked libpthread.\n \t#\n-\t# So we end up with the following hack: we link use static-nobundle to only\n+\t# So we end up with the following hack: we link use static:-bundle to only\n \t# link the parts of libstdc++ that we actually use, which doesn't include\n \t# the dependency on the pthreads DLL.\n-\tEXTRARSCXXFLAGS := -l static-nobundle=stdc++\n+\tEXTRARSCXXFLAGS := -l static:-bundle=stdc++ -Z unstable-options\n endif\n else\n ifeq ($(UNAME),Darwin)"}, {"sha": "f30a35e27c0bcc7f596fda1de1e8007e2798c109", "filename": "src/test/run-make/issue-36710/foo.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2609fab8e46414333aa68412134df65c7fcd1a77/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs?ref=2609fab8e46414333aa68412134df65c7fcd1a77", "patch": "@@ -1,8 +1,5 @@\n // Tests that linking to C++ code with global destructors works.\n \n-// For linking libstdc++ on MinGW\n-#![cfg_attr(all(windows, target_env = \"gnu\"), feature(static_nobundle))]\n-\n extern \"C\" {\n     fn get() -> u32;\n }"}]}