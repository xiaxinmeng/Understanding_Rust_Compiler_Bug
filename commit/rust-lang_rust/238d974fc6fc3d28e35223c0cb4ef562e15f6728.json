{"sha": "238d974fc6fc3d28e35223c0cb4ef562e15f6728", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzOGQ5NzRmYzZmYzNkMjhlMzUyMjNjMGNiNGVmNTYyZTE1ZjY3Mjg=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-06T10:49:35Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-06T10:49:35Z"}, "message": "Document `with_opaque_type_inference`'s use cases.", "tree": {"sha": "21e638f1d9483b70dd40acf803e52a2a1974c36e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21e638f1d9483b70dd40acf803e52a2a1974c36e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/238d974fc6fc3d28e35223c0cb4ef562e15f6728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/238d974fc6fc3d28e35223c0cb4ef562e15f6728", "html_url": "https://github.com/rust-lang/rust/commit/238d974fc6fc3d28e35223c0cb4ef562e15f6728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/238d974fc6fc3d28e35223c0cb4ef562e15f6728/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9ad13941b0e6959470fe6e18b06848b75c262e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9ad13941b0e6959470fe6e18b06848b75c262e", "html_url": "https://github.com/rust-lang/rust/commit/1b9ad13941b0e6959470fe6e18b06848b75c262e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "10217a5f5749809d6615794d19f942a039c788d6", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/238d974fc6fc3d28e35223c0cb4ef562e15f6728/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238d974fc6fc3d28e35223c0cb4ef562e15f6728/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=238d974fc6fc3d28e35223c0cb4ef562e15f6728", "patch": "@@ -581,6 +581,10 @@ impl<'tcx> InferCtxtBuilder<'tcx> {\n \n     /// Whenever the `InferCtxt` should be able to handle defining uses of opaque types,\n     /// you need to call this function. Otherwise the opaque type will be treated opaquely.\n+    ///\n+    /// It is only meant to be called in two places, for typeck\n+    /// (via `with_fresh_in_progress_typeck_results`) and for the inference context used\n+    /// in mir borrowck.\n     pub fn with_opaque_type_inference(mut self, defining_use_anchor: LocalDefId) -> Self {\n         self.defining_use_anchor = defining_use_anchor;\n         self"}]}