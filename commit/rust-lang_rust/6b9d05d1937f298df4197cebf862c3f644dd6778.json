{"sha": "6b9d05d1937f298df4197cebf862c3f644dd6778", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOWQwNWQxOTM3ZjI5OGRmNDE5N2NlYmY4NjJjM2Y2NDRkZDY3Nzg=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:17:08Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:28:11Z"}, "message": "Fix add_new assist (kind of)", "tree": {"sha": "05e40d87cdda538f9f45b8a98b1c792aa452d5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e40d87cdda538f9f45b8a98b1c792aa452d5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b9d05d1937f298df4197cebf862c3f644dd6778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9d05d1937f298df4197cebf862c3f644dd6778", "html_url": "https://github.com/rust-lang/rust/commit/6b9d05d1937f298df4197cebf862c3f644dd6778", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b9d05d1937f298df4197cebf862c3f644dd6778/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0bb8622eea7cb447ebadb8b5fba43850305e913", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0bb8622eea7cb447ebadb8b5fba43850305e913", "html_url": "https://github.com/rust-lang/rust/commit/b0bb8622eea7cb447ebadb8b5fba43850305e913"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "2701eddb80c53a043244bd589c07813101668457", "filename": "crates/ra_assists/src/handlers/add_new.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b9d05d1937f298df4197cebf862c3f644dd6778/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9d05d1937f298df4197cebf862c3f644dd6778/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs?ref=6b9d05d1937f298df4197cebf862c3f644dd6778", "patch": "@@ -1,5 +1,5 @@\n use format_buf::format;\n-use hir::InFile;\n+use hir::{Adt, InFile};\n use join_to_string::join;\n use ra_syntax::{\n     ast::{\n@@ -135,17 +135,22 @@ fn find_struct_impl(ctx: &AssistCtx, strukt: &ast::StructDef) -> Option<Option<a\n     })?;\n     let mut sb = ctx.source_binder();\n \n-    let struct_ty = {\n+    let struct_def = {\n         let src = InFile { file_id: ctx.frange.file_id.into(), value: strukt.clone() };\n-        sb.to_def(src)?.ty(db)\n+        sb.to_def(src)?\n     };\n \n     let block = module.descendants().filter_map(ast::ImplBlock::cast).find_map(|impl_blk| {\n         let src = InFile { file_id: ctx.frange.file_id.into(), value: impl_blk.clone() };\n         let blk = sb.to_def(src)?;\n \n-        // TODO this check doesn't work\n-        let same_ty = blk.target_ty(db) == struct_ty;\n+        // FIXME: handle e.g. `struct S<T>; impl<U> S<U> {}`\n+        // (we currently use the wrong type parameter)\n+        // also we wouldn't want to use e.g. `impl S<u32>`\n+        let same_ty = match blk.target_ty(db).as_adt() {\n+            Some(def) => def == Adt::Struct(struct_def),\n+            None => false,\n+        };\n         let not_trait_impl = blk.target_trait(db).is_none();\n \n         if !(same_ty && not_trait_impl) {"}]}