{"sha": "ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "node_id": "C_kwDOAAsO6NoAKGVjZjI1MzZiMDM4ZjBhMTdjZTQ3OGQ2YmNkZWZmMzllOTFjMGE5ZGU", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-11-22T21:40:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-22T21:40:22Z"}, "message": "Rollup merge of #104717 - GuillaumeGomez:test-projection-used-as-const-generic, r=oli-obk\n\nAdd failing test for projections used as const generic\n\nBased on the experiment done in https://github.com/rust-lang/rust/pull/104443, we realized it's currently not possible to support projections in const generics. More information about it in https://github.com/rust-lang/rust/pull/104443#discussion_r1029375633.\n\nThis PR adds the UI test in any case so we can gather data in order to work towards adding `TyAlias` into the ABI in the future.\n\nr? ``@oli-obk``", "tree": {"sha": "9604b26c65b442c4a40025fd77eb26df102b46f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9604b26c65b442c4a40025fd77eb26df102b46f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfUHGCRBK7hj4Ov3rIwAAYDoIAG/RD/RSWU8yTh3eorwbTOwx\nDgja8QPz6WAoG/LpoiNNv7ukwPkEF73YR14S+bSmOrViswDRYrPvL2CIWpAceLQe\nZhvXzcmY2tQUoI+Mp0e5kRoDfifXfZMzKA9ugs1zbENqvAlhUgT0BA81VsHyAUG+\nirnlxrbFoGvWRRxndWyoWBR5oK9CHrfbCJf81cB8zzZOVlqyf1Wkc/hcNSZfIb3a\nSRZYRe2Pr0H8eBtMSC86JVkmD/xVMyRKeAi1b4oc92ghlk0I0ssr8vlAsP1gjru4\nG3wLWSlDNLgA0Tc2ayzBdTMclQ7XvZmWM9IXBBtOWibFkf+skIMxA5Zpyu6Hb4Q=\n=FerJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 9604b26c65b442c4a40025fd77eb26df102b46f7\nparent b162bb42707ad1afcd4b8c7fd3bdb6cb1810ae1d\nparent 2d5d692053590aa173ffebd3d5fc9707dc39ea9f\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1669153222 +0900\ncommitter GitHub <noreply@github.com> 1669153222 +0900\n\nRollup merge of #104717 - GuillaumeGomez:test-projection-used-as-const-generic, r=oli-obk\n\nAdd failing test for projections used as const generic\n\nBased on the experiment done in https://github.com/rust-lang/rust/pull/104443, we realized it's currently not possible to support projections in const generics. More information about it in https://github.com/rust-lang/rust/pull/104443#discussion_r1029375633.\n\nThis PR adds the UI test in any case so we can gather data in order to work towards adding `TyAlias` into the ABI in the future.\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "html_url": "https://github.com/rust-lang/rust/commit/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b162bb42707ad1afcd4b8c7fd3bdb6cb1810ae1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b162bb42707ad1afcd4b8c7fd3bdb6cb1810ae1d", "html_url": "https://github.com/rust-lang/rust/commit/b162bb42707ad1afcd4b8c7fd3bdb6cb1810ae1d"}, {"sha": "2d5d692053590aa173ffebd3d5fc9707dc39ea9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d5d692053590aa173ffebd3d5fc9707dc39ea9f", "html_url": "https://github.com/rust-lang/rust/commit/2d5d692053590aa173ffebd3d5fc9707dc39ea9f"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "903548c75db56fad166193d68bf7bc3ebfb25ff1", "filename": "src/test/ui/const-generics/projection-as-arg-const.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.rs?ref=ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "patch": "@@ -0,0 +1,20 @@\n+// This is currently not possible to use projections as const generics.\n+// More information about this available here:\n+// https://github.com/rust-lang/rust/pull/104443#discussion_r1029375633\n+\n+pub trait Identity {\n+    type Identity;\n+}\n+\n+impl<T> Identity for T {\n+    type Identity = Self;\n+}\n+\n+pub fn foo<const X: <i32 as Identity>::Identity>() {\n+//~^ ERROR\n+    assert!(X == 12);\n+}\n+\n+fn main() {\n+    foo::<12>();\n+}"}, {"sha": "803ed9c959752de837a68e23e47b32890665d4ce", "filename": "src/test/ui/const-generics/projection-as-arg-const.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecf2536b038f0a17ce478d6bcdeff39e91c0a9de/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fprojection-as-arg-const.stderr?ref=ecf2536b038f0a17ce478d6bcdeff39e91c0a9de", "patch": "@@ -0,0 +1,11 @@\n+error: `<i32 as Identity>::Identity` is forbidden as the type of a const generic parameter\n+  --> $DIR/projection-as-arg-const.rs:13:21\n+   |\n+LL | pub fn foo<const X: <i32 as Identity>::Identity>() {\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the only supported types are integers, `bool` and `char`\n+   = help: more complex types are supported with `#![feature(adt_const_params)]`\n+\n+error: aborting due to previous error\n+"}]}