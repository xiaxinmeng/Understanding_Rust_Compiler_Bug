{"sha": "3cb78259862d37da082f628af3ccb54edf264fd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYjc4MjU5ODYyZDM3ZGEwODJmNjI4YWYzY2NiNTRlZGYyNjRmZDA=", "commit": {"author": {"name": "Wonwoo Choi", "email": "chwo9843@gmail.com", "date": "2017-06-12T16:30:08Z"}, "committer": {"name": "Wonwoo Choi", "email": "chwo9843@gmail.com", "date": "2017-06-14T15:04:00Z"}, "message": "Update older URLs pointing to the first edition of the Book\n\n`compiler-plugins.html` is moved into the Unstable Book.\nExplanation is slightly modified to match the change.", "tree": {"sha": "33c0f28cfa4782dc5d9eb27e7b3faacacd5fe29b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33c0f28cfa4782dc5d9eb27e7b3faacacd5fe29b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb78259862d37da082f628af3ccb54edf264fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb78259862d37da082f628af3ccb54edf264fd0", "html_url": "https://github.com/rust-lang/rust/commit/3cb78259862d37da082f628af3ccb54edf264fd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb78259862d37da082f628af3ccb54edf264fd0/comments", "author": {"login": "tirr-c", "id": 2322996, "node_id": "MDQ6VXNlcjIzMjI5OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2322996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirr-c", "html_url": "https://github.com/tirr-c", "followers_url": "https://api.github.com/users/tirr-c/followers", "following_url": "https://api.github.com/users/tirr-c/following{/other_user}", "gists_url": "https://api.github.com/users/tirr-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirr-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirr-c/subscriptions", "organizations_url": "https://api.github.com/users/tirr-c/orgs", "repos_url": "https://api.github.com/users/tirr-c/repos", "events_url": "https://api.github.com/users/tirr-c/events{/privacy}", "received_events_url": "https://api.github.com/users/tirr-c/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tirr-c", "id": 2322996, "node_id": "MDQ6VXNlcjIzMjI5OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2322996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirr-c", "html_url": "https://github.com/tirr-c", "followers_url": "https://api.github.com/users/tirr-c/followers", "following_url": "https://api.github.com/users/tirr-c/following{/other_user}", "gists_url": "https://api.github.com/users/tirr-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirr-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirr-c/subscriptions", "organizations_url": "https://api.github.com/users/tirr-c/orgs", "repos_url": "https://api.github.com/users/tirr-c/repos", "events_url": "https://api.github.com/users/tirr-c/events{/privacy}", "received_events_url": "https://api.github.com/users/tirr-c/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "554c685b0b3b25b7aa752717edf50b8d6bcab7a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/554c685b0b3b25b7aa752717edf50b8d6bcab7a0", "html_url": "https://github.com/rust-lang/rust/commit/554c685b0b3b25b7aa752717edf50b8d6bcab7a0"}], "stats": {"total": 74, "additions": 38, "deletions": 36}, "files": [{"sha": "61558034e63eb765912b6f75015a0017ed0bd549", "filename": "src/libcore/borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fborrow.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -31,7 +31,7 @@\n /// `Borrow` is very similar to, but different than, `AsRef`. See\n /// [the book][book] for more.\n ///\n-/// [book]: ../../book/borrow-and-asref.html\n+/// [book]: ../../book/first-edition/borrow-and-asref.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Borrow<Borrowed: ?Sized> {\n     /// Immutably borrows from an owned value."}, {"sha": "6f3c3863fae1d66a3bee7deb453e87427d4aa1e8", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -71,7 +71,7 @@ use str::FromStr;\n ///\n /// See [the book][book] for a more detailed comparison.\n ///\n-/// [book]: ../../book/borrow-and-asref.html\n+/// [book]: ../../book/first-edition/borrow-and-asref.html\n /// [`Borrow`]: ../../std/borrow/trait.Borrow.html\n ///\n /// **Note: this trait must not fail**. If the conversion can fail, use a\n@@ -305,7 +305,7 @@ pub trait Into<T>: Sized {\n /// [`String`]: ../../std/string/struct.String.html\n /// [`Into<U>`]: trait.Into.html\n /// [`from`]: trait.From.html#tymethod.from\n-/// [book]: ../../book/error-handling.html\n+/// [book]: ../../book/first-edition/error-handling.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait From<T>: Sized {\n     /// Performs the conversion."}, {"sha": "91ee064aaba6a28713a5744e010c82dfaf962df9", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -54,7 +54,7 @@ macro_rules! panic {\n ///\n /// [`panic!`]: macro.panic.html\n /// [`debug_assert!`]: macro.debug_assert.html\n-/// [testing]: ../book/testing.html\n+/// [testing]: ../book/first-edition/testing.html\n ///\n /// # Examples\n ///"}, {"sha": "3bed425943f78af8aa9fa21b31e344bf7c891793", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -85,7 +85,7 @@ impl<T: ?Sized> !Send for *mut T { }\n ///                         // be made into an object\n /// ```\n ///\n-/// [trait object]: ../../book/trait-objects.html\n+/// [trait object]: ../../book/first-edition/trait-objects.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[lang = \"sized\"]\n #[rustc_on_unimplemented = \"`{Self}` does not have a constant size known at compile-time\"]\n@@ -493,7 +493,7 @@ macro_rules! impls{\n /// types. We track the Rust type using a phantom type parameter on\n /// the struct `ExternalResource` which wraps a handle.\n ///\n-/// [FFI]: ../../book/ffi.html\n+/// [FFI]: ../../book/first-edition/ffi.html\n ///\n /// ```\n /// # #![allow(dead_code)]"}, {"sha": "18cf20ac411dff9e28c2e53470344c2b46c9734b", "filename": "src/libcore/ops/deref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fops%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibcore%2Fops%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fderef.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -13,7 +13,7 @@\n ///\n /// `Deref` also enables ['`Deref` coercions'][coercions].\n ///\n-/// [coercions]: ../../book/deref-coercions.html\n+/// [coercions]: ../../book/first-edition/deref-coercions.html\n ///\n /// # Examples\n ///\n@@ -71,7 +71,7 @@ impl<'a, T: ?Sized> Deref for &'a mut T {\n ///\n /// `DerefMut` also enables ['`Deref` coercions'][coercions].\n ///\n-/// [coercions]: ../../book/deref-coercions.html\n+/// [coercions]: ../../book/first-edition/deref-coercions.html\n ///\n /// # Examples\n ///"}, {"sha": "f3d0521a2af6cc3811fc4c026faa37ceaf457c44", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -21,7 +21,7 @@\n //! This functionality is intended to be expanded over time as more surface\n //! area for macro authors is stabilized.\n //!\n-//! See [the book](../book/procedural-macros.html) for more.\n+//! See [the book](../book/first-edition/procedural-macros.html) for more.\n \n #![crate_name = \"proc_macro\"]\n #![stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]"}, {"sha": "28fb96aa203242834cff1125c5bee3dd041c2632", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -405,7 +405,7 @@ impl Quux for Foo { }\n Lifetime elision in implementation headers was part of the lifetime elision\n RFC. It is, however, [currently unimplemented][iss15872].\n \n-[book-le]: https://doc.rust-lang.org/nightly/book/lifetimes.html#lifetime-elision\n+[book-le]: https://doc.rust-lang.org/nightly/book/first-edition/lifetimes.html#lifetime-elision\n [iss15872]: https://github.com/rust-lang/rust/issues/15872\n \"##,\n \n@@ -501,7 +501,7 @@ fn main() {\n }\n ```\n \n-See also https://doc.rust-lang.org/book/unsafe.html\n+See also https://doc.rust-lang.org/book/first-edition/unsafe.html\n \"##,\n \n // This shouldn't really ever trigger since the repeated value error comes first\n@@ -666,7 +666,7 @@ attributes:\n #![no_std]\n ```\n \n-See also https://doc.rust-lang.org/book/no-stdlib.html\n+See also https://doc.rust-lang.org/book/first-edition/no-stdlib.html\n \"##,\n \n E0261: r##\"\n@@ -1779,7 +1779,7 @@ fn main() {\n ```\n \n To understand better how closures work in Rust, read:\n-https://doc.rust-lang.org/book/closures.html\n+https://doc.rust-lang.org/book/first-edition/closures.html\n \"##,\n \n E0580: r##\""}, {"sha": "c114c66559ff6bf12ab8a9664ed64180cda3b95f", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -144,7 +144,7 @@ that at most one writer or multiple readers can access the data at any one time.\n If you wish to learn more about ownership in Rust, start with the chapter in the\n Book:\n \n-https://doc.rust-lang.org/book/ownership.html\n+https://doc.rust-lang.org/book/first-edition/ownership.html\n \"##,\n \n E0383: r##\"\n@@ -366,8 +366,8 @@ let mut a = &mut i;\n \n Please note that in rust, you can either have many immutable references, or one\n mutable reference. Take a look at\n-https://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\n-information. Example:\n+https://doc.rust-lang.org/book/first-edition/references-and-borrowing.html\n+for more information. Example:\n \n \n ```\n@@ -533,7 +533,7 @@ fn foo(a: &mut i32) {\n ```\n \n For more information on the rust ownership system, take a look at\n-https://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n+https://doc.rust-lang.org/book/first-edition/references-and-borrowing.html.\n \"##,\n \n E0503: r##\"\n@@ -589,7 +589,7 @@ fn main() {\n ```\n \n You can find more information about borrowing in the rust-book:\n-http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+http://doc.rust-lang.org/book/first-edition/references-and-borrowing.html\n \"##,\n \n E0504: r##\"\n@@ -773,7 +773,7 @@ fn main() {\n ```\n \n You can find more information about borrowing in the rust-book:\n-http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+http://doc.rust-lang.org/book/first-edition/references-and-borrowing.html\n \"##,\n \n E0506: r##\"\n@@ -972,7 +972,7 @@ fn main() {\n ```\n \n You can find more information about borrowing in the rust-book:\n-http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+http://doc.rust-lang.org/book/first-edition/references-and-borrowing.html\n \"##,\n \n E0508: r##\""}, {"sha": "9a174e05eabd456544f29ff05af87f6ce2c5ef0a", "filename": "src/librustc_metadata/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_metadata%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_metadata%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdiagnostics.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -44,7 +44,8 @@ To solve this error you can use conditional compilation:\n extern {}\n ```\n \n-See more: https://doc.rust-lang.org/book/conditional-compilation.html\n+See more:\n+https://doc.rust-lang.org/book/first-edition/conditional-compilation.html\n \"##,\n \n E0458: r##\""}, {"sha": "0df82be3adc9cf668cc7df7ea2c8d79039927aad", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -47,8 +47,8 @@\n //! #![plugin(myplugin)]\n //! ```\n //!\n-//! See the [Plugins Chapter](../../book/compiler-plugins.html) of the book\n-//! for more examples.\n+//! See the [`plugin` feature](../../unstable-book/language-features/plugin.html) of\n+//! the Unstable Book for more examples.\n \n #![crate_name = \"rustc_plugin\"]\n #![crate_type = \"dylib\"]"}, {"sha": "9cdde0797a0c1f219b7cae078eae33d3bad1df45", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -1642,7 +1642,7 @@ fn f<T>() {}\n \n It is not possible to declare type parameters on a function that has the `start`\n attribute. Such a function must have the following type signature (for more\n-information: http://doc.rust-lang.org/stable/book/no-stdlib.html):\n+information: http://doc.rust-lang.org/stable/book/first-edition/no-stdlib.html):\n \n ```ignore\n fn(isize, *const *const u8) -> isize;\n@@ -3186,7 +3186,7 @@ impl Baz for Bar { } // Note: This is OK\n E0374: r##\"\n A struct without a field containing an unsized type cannot implement\n `CoerceUnsized`. An\n-[unsized type](https://doc.rust-lang.org/book/unsized-types.html)\n+[unsized type](https://doc.rust-lang.org/book/first-edition/unsized-types.html)\n is any type that the compiler doesn't know the length or alignment of at\n compile time. Any struct containing an unsized type is also unsized.\n \n@@ -3245,9 +3245,9 @@ A struct with more than one field containing an unsized type cannot implement\n `CoerceUnsized`. This only occurs when you are trying to coerce one of the\n types in your struct to another type in the struct. In this case we try to\n impl `CoerceUnsized` from `T` to `U` which are both types that the struct\n-takes. An [unsized type](https://doc.rust-lang.org/book/unsized-types.html)\n-is any type that the compiler doesn't know the length or alignment of at\n-compile time. Any struct containing an unsized type is also unsized.\n+takes. An [unsized type] is any type that the compiler doesn't know the length\n+or alignment of at compile time. Any struct containing an unsized type is also\n+unsized.\n \n Example of erroneous code:\n \n@@ -3292,6 +3292,7 @@ fn coerce_foo<T: CoerceUnsized<U>, U>(t: T) -> Foo<U> {\n }\n ```\n \n+[unsized type]: https://doc.rust-lang.org/book/first-edition/unsized-types.html\n \"##,\n \n E0376: r##\"\n@@ -3300,7 +3301,7 @@ The type you are trying to impl `CoerceUnsized` for is not a struct.\n already able to be coerced without an implementation of `CoerceUnsized`\n whereas a struct containing an unsized type needs to know the unsized type\n field it's containing is able to be coerced. An\n-[unsized type](https://doc.rust-lang.org/book/unsized-types.html)\n+[unsized type](https://doc.rust-lang.org/book/first-edition/unsized-types.html)\n is any type that the compiler doesn't know the length or alignment of at\n compile time. Any struct containing an unsized type is also unsized.\n "}, {"sha": "061e807dace26420f4800f9b8b896b91b66bf5e2", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -263,7 +263,7 @@\n //! [`println!`]: ../macro.println.html\n //! [`Lines`]: struct.Lines.html\n //! [`io::Result`]: type.Result.html\n-//! [`?` operator]: ../../book/syntax-index.html\n+//! [`?` operator]: ../../book/first-edition/syntax-index.html\n //! [`Read::read`]: trait.Read.html#tymethod.read\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "496c014f70e2f107a6864efab8fea400905a3c36", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -486,7 +486,7 @@ pub mod builtin {\n     /// leads to less duplicated code.\n     ///\n     /// The syntax given to this macro is the same syntax as [the `cfg`\n-    /// attribute](../book/conditional-compilation.html).\n+    /// attribute](../book/first-edition/conditional-compilation.html).\n     ///\n     /// # Examples\n     ///"}, {"sha": "195662637f0135ad8bf091fe6caad1c6c3a0e8f9", "filename": "src/libstd/prelude/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibstd%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fmod.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -136,10 +136,10 @@\n //! [`std::string`]: ../string/index.html\n //! [`std::vec`]: ../vec/index.html\n //! [`to_owned`]: ../borrow/trait.ToOwned.html#tymethod.to_owned\n-//! [book-closures]: ../../book/closures.html\n-//! [book-dtor]: ../../book/drop.html\n-//! [book-enums]: ../../book/enums.html\n-//! [book-iter]: ../../book/iterators.html\n+//! [book-closures]: ../../book/first-edition/closures.html\n+//! [book-dtor]: ../../book/first-edition/drop.html\n+//! [book-enums]: ../../book/first-edition/enums.html\n+//! [book-iter]: ../../book/first-edition/iterators.html\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "74212625eea02a51f23003ef783a65e0cf93856b", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb78259862d37da082f628af3ccb54edf264fd0/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=3cb78259862d37da082f628af3ccb54edf264fd0", "patch": "@@ -16,7 +16,7 @@\n //! benchmarks themselves) should be done via the `#[test]` and\n //! `#[bench]` attributes.\n //!\n-//! See the [Testing Chapter](../book/testing.html) of the book for more details.\n+//! See the [Testing Chapter](../book/first-edition/testing.html) of the book for more details.\n \n // Currently, not much of this is meant for users. It is intended to\n // support the simplest interface possible for representing and"}]}