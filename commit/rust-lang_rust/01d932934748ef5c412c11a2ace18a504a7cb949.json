{"sha": "01d932934748ef5c412c11a2ace18a504a7cb949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDkzMjkzNDc0OGVmNWM0MTJjMTFhMmFjZTE4YTUwNGE3Y2I5NDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T18:50:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T18:50:34Z"}, "message": "canonicalize alloc ID before calling tag_static_base_pointer", "tree": {"sha": "d4a0f7514749ceee068065f3452621ce884acfd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a0f7514749ceee068065f3452621ce884acfd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d932934748ef5c412c11a2ace18a504a7cb949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d932934748ef5c412c11a2ace18a504a7cb949", "html_url": "https://github.com/rust-lang/rust/commit/01d932934748ef5c412c11a2ace18a504a7cb949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d932934748ef5c412c11a2ace18a504a7cb949/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da393970df87f13881fd1f8cebd9b2a42659759", "url": "https://api.github.com/repos/rust-lang/rust/commits/5da393970df87f13881fd1f8cebd9b2a42659759", "html_url": "https://github.com/rust-lang/rust/commit/5da393970df87f13881fd1f8cebd9b2a42659759"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "11d28ec582a881a05b03c6fad971653c0b203140", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d932934748ef5c412c11a2ace18a504a7cb949/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d932934748ef5c412c11a2ace18a504a7cb949/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=01d932934748ef5c412c11a2ace18a504a7cb949", "patch": "@@ -253,6 +253,8 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     /// Return the \"base\" tag for the given *static* allocation: the one that is used for direct\n     /// accesses to this static/const/fn allocation. If `id` is not a static allocation,\n     /// this will return an unusable tag (i.e., accesses will be UB)!\n+    ///\n+    /// Expects `id` to be already canonical, if needed.\n     fn tag_static_base_pointer(memory_extra: &Self::MemoryExtra, id: AllocId) -> Self::PointerTag;\n \n     /// Executes a retagging operation"}, {"sha": "f60307e468bd25c469add4d6af68dbc7abe62bbc", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01d932934748ef5c412c11a2ace18a504a7cb949/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d932934748ef5c412c11a2ace18a504a7cb949/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=01d932934748ef5c412c11a2ace18a504a7cb949", "patch": "@@ -150,7 +150,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n     /// through a pointer that was created by the program.\n     #[inline]\n     pub fn tag_static_base_pointer(&self, ptr: Pointer) -> Pointer<M::PointerTag> {\n-        ptr.with_tag(M::tag_static_base_pointer(&self.extra, ptr.alloc_id))\n+        let id = M::canonical_alloc_id(self, ptr.alloc_id);\n+        ptr.with_tag(M::tag_static_base_pointer(&self.extra, id))\n     }\n \n     pub fn create_fn_alloc("}]}