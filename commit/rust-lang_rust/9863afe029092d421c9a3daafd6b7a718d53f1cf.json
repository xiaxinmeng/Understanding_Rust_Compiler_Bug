{"sha": "9863afe029092d421c9a3daafd6b7a718d53f1cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NjNhZmUwMjkwOTJkNDIxYzlhM2RhYWZkNmI3YTcxOGQ1M2YxY2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-08-16T23:11:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-08-17T22:13:56Z"}, "message": "1.11 changelog", "tree": {"sha": "a015b00e142746b27539951652c6d11333f9d3c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a015b00e142746b27539951652c6d11333f9d3c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9863afe029092d421c9a3daafd6b7a718d53f1cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9863afe029092d421c9a3daafd6b7a718d53f1cf", "html_url": "https://github.com/rust-lang/rust/commit/9863afe029092d421c9a3daafd6b7a718d53f1cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9863afe029092d421c9a3daafd6b7a718d53f1cf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "html_url": "https://github.com/rust-lang/rust/commit/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e"}], "stats": {"total": 177, "additions": 177, "deletions": 0}, "files": [{"sha": "8817d7f88a73801e64c16b5f127f6404ebfc9a1f", "filename": "RELEASES.md", "status": "modified", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/rust-lang/rust/blob/9863afe029092d421c9a3daafd6b7a718d53f1cf/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/9863afe029092d421c9a3daafd6b7a718d53f1cf/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=9863afe029092d421c9a3daafd6b7a718d53f1cf", "patch": "@@ -1,3 +1,180 @@\n+Version 1.11.0 (2016-08-18)\n+===========================\n+\n+Language\n+--------\n+\n+* [`cfg_attr` works on `path` attributes]\n+  (https://github.com/rust-lang/rust/pull/34546)\n+* [Support nested `cfg_attr` attributes]\n+  (https://github.com/rust-lang/rust/pull/34216)\n+* [Allow statement-generating braced macro invocations at the end of blocks]\n+  (https://github.com/rust-lang/rust/pull/34436)\n+* [Macros can be expanded inside of trait definitions]\n+  (https://github.com/rust-lang/rust/pull/34213)\n+* [`#[macro_use]` works properly when it is itself expanded from a macro]\n+  (https://github.com/rust-lang/rust/pull/34032)\n+\n+Stabilized APIs\n+---------------\n+\n+* [`BinaryHeap::append`]\n+  (https://doc.rust-lang.org/std/collections/binary_heap/struct.BinaryHeap.html#method.append)\n+* [`BTreeMap::append`]\n+  (https://doc.rust-lang.org/std/collections/btree_map/struct.BTreeMap.html#method.append)\n+* [`BTreeMap::split_off`]\n+  (https://doc.rust-lang.org/std/collections/btree_map/struct.BTreeMap.html#method.split_off)\n+* [`BTreeSet::append`]\n+  (https://doc.rust-lang.org/std/collections/btree_set/struct.BTreeSet.html#method.append)\n+* [`BTreeSet::split_off`]\n+  (https://doc.rust-lang.org/std/collections/btree_set/struct.BTreeSet.html#method.split_off)\n+* [`f32::to_degrees`]\n+  (https://doc.rust-lang.org/std/primitive.f32.html#method.to_degrees)\n+  (in libcore - previously stabilized in libstd)\n+* [`f32::to_radians`]\n+  (https://doc.rust-lang.org/std/primitive.f32.html#method.to_radians)\n+  (in libcore - previously stabilized in libstd)\n+* [`f64::to_degrees`]\n+  (https://doc.rust-lang.org/std/primitive.f64.html#method.to_degrees)\n+  (in libcore - previously stabilized in libstd)\n+* [`f64::to_radians`]\n+  (https://doc.rust-lang.org/std/primitive.f64.html#method.to_radians)\n+  (in libcore - previously stabilized in libstd)\n+* [`Iterator::sum`]\n+  (https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum)\n+* [`Iterator::product`]\n+  (https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum)\n+* [`Cell::get_mut`]\n+  (https://doc.rust-lang.org/std/cell/struct.Cell.html#method.get_mut)\n+* [`RefCell::get_mut`]\n+  (https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.get_mut)\n+\n+Libraries\n+---------\n+\n+* [The `thread_local!` macro supports multiple definitions in a single\n+   invocation, and can apply attributes]\n+  (https://github.com/rust-lang/rust/pull/34077)\n+* [`Cow` implements `Default`]\n+  (https://github.com/rust-lang/rust/pull/34305)\n+* [`Wrapping` implements binary, octal, lower-hex and upper-hex\n+  `Display` formatting]\n+  (https://github.com/rust-lang/rust/pull/34190)\n+* [The range types implement `Hash`]\n+  (https://github.com/rust-lang/rust/pull/34180)\n+* [`lookup_host` ignores unknown address types]\n+  (https://github.com/rust-lang/rust/pull/34067)\n+* [`assert_eq!` accepts a custom error message, like `assert!` does]\n+  (https://github.com/rust-lang/rust/pull/33976)\n+* [The main thread is now called \"main\" instead of \"&lt;main&gt;\"]\n+  (https://github.com/rust-lang/rust/pull/33803)\n+\n+Cargo\n+-----\n+\n+* [Disallow specifying features of transitive deps]\n+  (https://github.com/rust-lang/cargo/pull/2821)\n+* [Add color support for Windows consoles]\n+  (https://github.com/rust-lang/cargo/pull/2804)\n+* [Fix `harness = false` on `[lib]` sections]\n+  (https://github.com/rust-lang/cargo/pull/2795)\n+* [Don't panic when `links` contains a '.']\n+  (https://github.com/rust-lang/cargo/pull/2787)\n+* [Build scripts can emit warnings]\n+  (https://github.com/rust-lang/cargo/pull/2630),\n+  and `-vv` prints warnings for all crates.\n+* [Ignore file locks on OS X NFS mounts]\n+  (https://github.com/rust-lang/cargo/pull/2720)\n+* [Don't warn about `package.metadata` keys]\n+  (https://github.com/rust-lang/cargo/pull/2668).\n+  This provides room for expansion by arbitrary tools.\n+* [Add support for cdylib crate types]\n+  (https://github.com/rust-lang/cargo/pull/2741)\n+* [Prevent publishing crates when files are dirty]\n+  (https://github.com/rust-lang/cargo/pull/2781)\n+* [Don't fetch all crates on clean]\n+  (https://github.com/rust-lang/cargo/pull/2704)\n+* [Propagate --color option to rustc]\n+  (https://github.com/rust-lang/cargo/pull/2779)\n+* [Fix `cargo doc --open` on Windows]\n+  (https://github.com/rust-lang/cargo/pull/2780)\n+* [Improve autocompletion]\n+  (https://github.com/rust-lang/cargo/pull/2772)\n+* [Configure colors of stderr as well as stdout]\n+  (https://github.com/rust-lang/cargo/pull/2739)\n+\n+Performance\n+-----------\n+\n+* [Caching projections speeds up type check dramatically for some\n+  workloads]\n+  (https://github.com/rust-lang/rust/pull/33816)\n+* [The default `HashMap` hasher is SipHash 1-3 instead of SipHash 2-4]\n+  (https://github.com/rust-lang/rust/pull/33940)\n+  This hasher is faster, but is believed to provide sufficient\n+  protection from collision attacks.\n+* [Comparison of `Ipv4Addr` is 10x faster]\n+  (https://github.com/rust-lang/rust/pull/33891)\n+\n+Rustdoc\n+-------\n+\n+* [Fix empty implementation section on some module pages]\n+  (https://github.com/rust-lang/rust/pull/34536)\n+* [Fix inlined renamed reexports in import lists]\n+  (https://github.com/rust-lang/rust/pull/34479)\n+* [Fix search result layout for enum variants and struct fields]\n+  (https://github.com/rust-lang/rust/pull/34477)\n+* [Fix issues with source links to external crates]\n+  (https://github.com/rust-lang/rust/pull/34387)\n+* [Fix redirect pages for renamed reexports]\n+  (https://github.com/rust-lang/rust/pull/34245)\n+\n+Tooling\n+-------\n+\n+* [rustc is better at finding the MSVC toolchain]\n+  (https://github.com/rust-lang/rust/pull/34492)\n+* [When emitting debug info, rustc emits frame pointers for closures,\n+  shims and glue, as it does for all other functions]\n+  (https://github.com/rust-lang/rust/pull/33909)\n+* [rust-lldb warns about unsupported versions of LLDB]\n+  (https://github.com/rust-lang/rust/pull/34646)\n+* Many more errors have been given error codes and extended\n+  explanations\n+* API documentation continues to be improved, with many new examples\n+\n+Misc\n+----\n+\n+* [rustc no longer hangs when dependencies recursively re-export\n+  submodules]\n+  (https://github.com/rust-lang/rust/pull/34542)\n+* [rustc requires LLVM 3.7+]\n+  (https://github.com/rust-lang/rust/pull/34104)\n+* [The 'How Safe and Unsafe Interact' chapter of The Rustonomicon was\n+  rewritten]\n+  (https://github.com/rust-lang/rust/pull/33895)\n+* [rustc support 16-bit pointer sizes]\n+  (https://github.com/rust-lang/rust/pull/33460).\n+  No targets use this yet, but it works toward AVR support.\n+\n+Compatibility Notes\n+-------------------\n+\n+* [`const`s and `static`s may not have unsized types]\n+  (https://github.com/rust-lang/rust/pull/34443)\n+* [The new follow-set rules that place restrictions on `macro_rules!`\n+  in order to ensure syntax forward-compatibility have been enabled]\n+  (https://github.com/rust-lang/rust/pull/33982)\n+  This was an [ammendment to RFC 550]\n+  (https://github.com/rust-lang/rfcs/pull/1384),\n+  and has been a warning since 1.10.\n+* [`cfg` attribute process has been refactored to fix various bugs]\n+  (https://github.com/rust-lang/rust/pull/33706).\n+  This causes breakage in some corner cases.\n+\n+\n Version 1.10.0 (2016-07-07)\n ===========================\n "}]}