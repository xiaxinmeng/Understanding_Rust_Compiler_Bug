{"sha": "76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MzAwZDUyZjc3MDdhMWUzMGU0ZDlmZjgzZDI1ZGNiYjAxZDgzMzg=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-18T05:21:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-18T05:21:52Z"}, "message": "Rollup merge of #86763 - JohnTitor:test-63355, r=oli-obk\n\nAdd a regression test for issue-63355\n\nCloses #63355\nr? ``@nikomatsakis``", "tree": {"sha": "a0853fc3fac27912c075b1ce5fbed6c2c5d55eb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0853fc3fac27912c075b1ce5fbed6c2c5d55eb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg87pwCRBK7hj4Ov3rIwAAaP8IAARM9ti48VJ4nB9+EKuT3Egu\nVX86xeLci7mr0qyLBd0GyzwDvc2b/tzYC6ta5ahSB6FczNPKTKPSD1SSyhaSQdGH\nPmiBKbBvKJtaMYJ+f3rW3GVda8ZFnaBnUBwNAglXw+J7KSfrTZZ/xS3gay7GJkne\nJKXi5GocYZjiDTmJUsaq1yHkP2YyV2cUlzYV9TN8EIQrOue/iLktTDwjqYp6/dug\n4lG7exN8XYAxLHcQ14RZAgqX0Su/z5725/1HBi5AuOmKyH+Th9acRyPv4G52Sb3Q\nvb7nap8wJ/bNTmPhwxgwPpnxxwfiAmvxMXVd+Eqtaepbw0Ooc3zACfC1okzSAsY=\n=A8KA\n-----END PGP SIGNATURE-----\n", "payload": "tree a0853fc3fac27912c075b1ce5fbed6c2c5d55eb3\nparent 77d155973c6c22a0e1af49a4a9bac024f697851d\nparent 5e7fed1f35c1318092fc6bf6d25814026224af8a\nauthor Yuki Okushi <jtitor@2k36.org> 1626585712 +0900\ncommitter GitHub <noreply@github.com> 1626585712 +0900\n\nRollup merge of #86763 - JohnTitor:test-63355, r=oli-obk\n\nAdd a regression test for issue-63355\n\nCloses #63355\nr? ``@nikomatsakis``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "html_url": "https://github.com/rust-lang/rust/commit/76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76300d52f7707a1e30e4d9ff83d25dcbb01d8338/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d155973c6c22a0e1af49a4a9bac024f697851d", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d155973c6c22a0e1af49a4a9bac024f697851d", "html_url": "https://github.com/rust-lang/rust/commit/77d155973c6c22a0e1af49a4a9bac024f697851d"}, {"sha": "5e7fed1f35c1318092fc6bf6d25814026224af8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7fed1f35c1318092fc6bf6d25814026224af8a", "html_url": "https://github.com/rust-lang/rust/commit/5e7fed1f35c1318092fc6bf6d25814026224af8a"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "8762d189c73891237009db88e35d9d96b571d309", "filename": "src/test/ui/type-alias-impl-trait/issue-63355.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/76300d52f7707a1e30e4d9ff83d25dcbb01d8338/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76300d52f7707a1e30e4d9ff83d25dcbb01d8338/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.rs?ref=76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "patch": "@@ -0,0 +1,50 @@\n+#![feature(min_type_alias_impl_trait)]\n+#![feature(type_alias_impl_trait)]\n+#![allow(incomplete_features)]\n+\n+pub trait Foo {}\n+\n+pub trait Bar {\n+    type Foo: Foo;\n+\n+    fn foo() -> Self::Foo;\n+}\n+\n+pub trait Baz {\n+    type Foo: Foo;\n+    type Bar: Bar<Foo = Self::Foo>;\n+\n+    fn foo() -> Self::Foo;\n+    fn bar() -> Self::Bar;\n+}\n+\n+impl Foo for () {}\n+\n+impl Bar for () {\n+    type Foo = FooImpl;\n+\n+    fn foo() -> Self::Foo {\n+        ()\n+    }\n+}\n+\n+// FIXME(#86731): The below is illegal use of `min_type_alias_impl_trait`\n+// but the compiler doesn't report it, we should fix it.\n+pub type FooImpl = impl Foo;\n+pub type BarImpl = impl Bar<Foo = FooImpl>;\n+//~^ ERROR: type mismatch resolving `<() as Bar>::Foo == ()`\n+\n+impl Baz for () {\n+    type Foo = FooImpl;\n+    type Bar = BarImpl;\n+\n+    fn foo() -> Self::Foo {\n+        ()\n+    }\n+\n+    fn bar() -> Self::Bar {\n+        ()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "dc5370a2666b76f4119fd355ee373fa933d43f54", "filename": "src/test/ui/type-alias-impl-trait/issue-63355.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/76300d52f7707a1e30e4d9ff83d25dcbb01d8338/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76300d52f7707a1e30e4d9ff83d25dcbb01d8338/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63355.stderr?ref=76300d52f7707a1e30e4d9ff83d25dcbb01d8338", "patch": "@@ -0,0 +1,14 @@\n+error[E0271]: type mismatch resolving `<() as Bar>::Foo == ()`\n+  --> $DIR/issue-63355.rs:34:20\n+   |\n+LL | pub type FooImpl = impl Foo;\n+   |                    -------- the found opaque type\n+LL | pub type BarImpl = impl Bar<Foo = FooImpl>;\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found opaque type\n+   |\n+   = note: expected unit type `()`\n+            found opaque type `impl Foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0271`."}]}