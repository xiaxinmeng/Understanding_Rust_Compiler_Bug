{"sha": "298acef30730ee676fdbc9e731370cd7ccedd431", "node_id": "C_kwDOAAsO6NoAKDI5OGFjZWYzMDczMGVlNjc2ZmRiYzllNzMxMzcwY2Q3Y2NlZGQ0MzE", "commit": {"author": {"name": "Preston From", "email": "prestonfrom@gmail.com", "date": "2022-08-02T06:20:12Z"}, "committer": {"name": "Preston From", "email": "prestonfrom@gmail.com", "date": "2022-08-02T06:20:44Z"}, "message": "Move if-block into closure to reduce duplicate code", "tree": {"sha": "1f743fd466b364ae223c8a45019d82a9891a1873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f743fd466b364ae223c8a45019d82a9891a1873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/298acef30730ee676fdbc9e731370cd7ccedd431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/298acef30730ee676fdbc9e731370cd7ccedd431", "html_url": "https://github.com/rust-lang/rust/commit/298acef30730ee676fdbc9e731370cd7ccedd431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/298acef30730ee676fdbc9e731370cd7ccedd431/comments", "author": {"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ea440dfe8659debd01246b5f2b8448abfb1e8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ea440dfe8659debd01246b5f2b8448abfb1e8b", "html_url": "https://github.com/rust-lang/rust/commit/d0ea440dfe8659debd01246b5f2b8448abfb1e8b"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "4f3cda16f037d452ac6e741c8f90f1ac36c3265c", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/298acef30730ee676fdbc9e731370cd7ccedd431/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/298acef30730ee676fdbc9e731370cd7ccedd431/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=298acef30730ee676fdbc9e731370cd7ccedd431", "patch": "@@ -81,21 +81,19 @@ impl PositionalNamedArg {\n             // For the message span, if there is formatting, we want to use the opening `{` and the\n             // next character, which will the `:` indicating the start of formatting. If there is\n             // not any formatting, we want to underline the entire span.\n-            if self.has_formatting {\n-                cx.arg_spans.get(self.cur_piece).map_or((None, None), |arg_span| {\n+            cx.arg_spans.get(self.cur_piece).map_or((None, None), |arg_span| {\n+                if self.has_formatting {\n                     (\n                         Some(arg_span.with_lo(arg_span.lo() + BytePos(1)).shrink_to_lo()),\n                         Some(arg_span.with_hi(arg_span.lo() + BytePos(2))),\n                     )\n-                })\n-            } else {\n-                cx.arg_spans.get(self.cur_piece).map_or((None, None), |arg_span| {\n+                } else {\n                     let replace_start = arg_span.lo() + BytePos(1);\n                     let replace_end = arg_span.hi() - BytePos(1);\n                     let to_replace = arg_span.with_lo(replace_start).with_hi(replace_end);\n                     (Some(to_replace), Some(*arg_span))\n-                })\n-            }\n+                }\n+            })\n         } else {\n             (None, None)\n         }"}]}