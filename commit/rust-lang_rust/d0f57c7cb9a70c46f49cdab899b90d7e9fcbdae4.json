{"sha": "d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZjU3YzdjYjlhNzBjNDZmNDljZGFiODk5YjkwZDdlOWZjYmRhZTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-26T10:24:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-26T10:24:29Z"}, "message": "Merge pull request #587 from solson/rustup\n\nFix comparing function pointers", "tree": {"sha": "6edffaf61029cf20e5debe43679f8660a3aa3799", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6edffaf61029cf20e5debe43679f8660a3aa3799"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcI1bdCRBK7hj4Ov3rIwAAdHIIAELTWnAGXH8nKrT11jXcOxQL\ns2JUfoHd6Y0ypBzflIAfu+nm0MBqnhpmw2w0ZYH2pjNemtQGfjMGafmdcNxcyYWB\nAkaVsPlgSQ76EeP8vTXiWbYqpF8jhoq+0lA7OUrkNb8tP6tmbMYUoVWBOE/4oZcL\n499qm1Bm6qYqMJxtU1hdJvYvKWuY+aK2g8nVVbBQcDiRtqRCqQ5kRiYHdadAb7/J\nBrTdgeYTnqvHqo1t3ar9yOaNInHXm5jqUwUPC++ImmUS44PJS/csGbPJMXIM0jaq\nmL5WQL+2Ss4VxaYkiirfpybdVb19XPlcBYCs5CvPUo5U1QarVNoxw6PB75hwmL8=\n=oJNu\n-----END PGP SIGNATURE-----\n", "payload": "tree 6edffaf61029cf20e5debe43679f8660a3aa3799\nparent 821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3\nparent 55107d5dd34d73af891f117ace2c25bb8ac33680\nauthor Ralf Jung <post@ralfj.de> 1545819869 +0100\ncommitter GitHub <noreply@github.com> 1545819869 +0100\n\nMerge pull request #587 from solson/rustup\n\nFix comparing function pointers"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "html_url": "https://github.com/rust-lang/rust/commit/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3", "html_url": "https://github.com/rust-lang/rust/commit/821f29bc5db4badaa0fb91c18fa4c3e389b5f9e3"}, {"sha": "55107d5dd34d73af891f117ace2c25bb8ac33680", "url": "https://api.github.com/repos/rust-lang/rust/commits/55107d5dd34d73af891f117ace2c25bb8ac33680", "html_url": "https://github.com/rust-lang/rust/commit/55107d5dd34d73af891f117ace2c25bb8ac33680"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "a2909dd32898cba66b749860a138a3b0ed9fa9fc", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "patch": "@@ -1 +1 @@\n-nightly-2018-12-24\n+nightly-2018-12-26"}, {"sha": "cc803c4ea954828042208e130fcf368640e4c839", "filename": "src/operator.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "patch": "@@ -145,8 +145,8 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'a, 'mir, '\n                     // Dead allocations in miri cannot overlap with live allocations, but\n                     // on read hardware this can easily happen. Thus for comparisons we require\n                     // both pointers to be live.\n-                    self.memory().get(left.alloc_id)?.check_bounds_ptr(left)?;\n-                    self.memory().get(right.alloc_id)?.check_bounds_ptr(right)?;\n+                    self.memory().check_bounds_ptr(left, InboundsCheck::Live)?;\n+                    self.memory().check_bounds_ptr(right, InboundsCheck::Live)?;\n                     // Two in-bounds pointers, we can compare across allocations\n                     left == right\n                 }\n@@ -161,12 +161,14 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'a, 'mir, '\n                 if bits == 0 {\n                     // Test if the ptr is in-bounds. Then it cannot be NULL.\n                     // Even dangling pointers cannot be NULL.\n-                    if self.memory().check_bounds_ptr_maybe_dead(ptr).is_ok() {\n+                    if self.memory().check_bounds_ptr(ptr, InboundsCheck::MaybeDead).is_ok() {\n                         return Ok(false);\n                     }\n                 }\n \n-                let (alloc_size, alloc_align) = self.memory().get_size_and_align(ptr.alloc_id);\n+                let (alloc_size, alloc_align) = self.memory()\n+                    .get_size_and_align(ptr.alloc_id, InboundsCheck::MaybeDead)\n+                    .expect(\"determining size+align of dead ptr cannot fail\");\n \n                 // Case II: Alignment gives it away\n                 if ptr.offset.bytes() % alloc_align.bytes() == 0 {"}, {"sha": "9094a9fd3a6803ab6010a9f683ef94e791a76e7f", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "patch": "@@ -2,7 +2,6 @@\n     async_await,\n     await_macro,\n     futures_api,\n-    pin,\n )]\n \n use std::{future::Future, pin::Pin, task::Poll};"}, {"sha": "cc888630d3eea8e3565370c2ba02216aadb87c88", "filename": "tests/run-pass/function_pointers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/tests%2Frun-pass%2Ffunction_pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4/tests%2Frun-pass%2Ffunction_pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_pointers.rs?ref=d0f57c7cb9a70c46f49cdab899b90d7e9fcbdae4", "patch": "@@ -44,4 +44,5 @@ fn main() {\n     let g = f as fn() -> i32;\n     assert!(return_fn_ptr(g) == g);\n     assert!(return_fn_ptr(g) as unsafe fn() -> i32 == g as fn() -> i32 as unsafe fn() -> i32);\n+    assert!(return_fn_ptr(f) != f);\n }"}]}