{"sha": "d3a6d4b1a00806797d8588e9efd3e133a7e55003", "node_id": "C_kwDOAAsO6NoAKGQzYTZkNGIxYTAwODA2Nzk3ZDg1ODhlOWVmZDNlMTMzYTdlNTUwMDM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-01T09:01:42Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-04T22:13:58Z"}, "message": "Use multipart suggestions.", "tree": {"sha": "2d110382f8c7017c996cf2c66966e6ae61dc1d5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d110382f8c7017c996cf2c66966e6ae61dc1d5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3a6d4b1a00806797d8588e9efd3e133a7e55003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a6d4b1a00806797d8588e9efd3e133a7e55003", "html_url": "https://github.com/rust-lang/rust/commit/d3a6d4b1a00806797d8588e9efd3e133a7e55003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3a6d4b1a00806797d8588e9efd3e133a7e55003/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6152b1d7225a45c7814ea6c9e3ea09304268c499", "url": "https://api.github.com/repos/rust-lang/rust/commits/6152b1d7225a45c7814ea6c9e3ea09304268c499", "html_url": "https://github.com/rust-lang/rust/commit/6152b1d7225a45c7814ea6c9e3ea09304268c499"}], "stats": {"total": 316, "additions": 254, "deletions": 62}, "files": [{"sha": "73face2b270e30753fda641deea13f3e52f53ae8", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2617,40 +2617,53 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         if let hir::TyKind::TraitObject([poly_trait_ref, ..], _, TraitObjectSyntax::None) =\n             self_ty.kind\n         {\n-            let (mut sugg, app) = match tcx.sess.source_map().span_to_snippet(self_ty.span) {\n-                Ok(s) if poly_trait_ref.trait_ref.path.is_global() => {\n-                    (format!(\"dyn ({})\", s), Applicability::MachineApplicable)\n-                }\n-                Ok(s) => (format!(\"dyn {}\", s), Applicability::MachineApplicable),\n-                Err(_) => (\"dyn <type>\".to_string(), Applicability::HasPlaceholders),\n-            };\n-            if in_path {\n-                let has_bracket = tcx\n+            let needs_bracket = in_path\n+                && !tcx\n                     .sess\n                     .source_map()\n                     .span_to_prev_source(self_ty.span)\n                     .ok()\n                     .map_or(false, |s| s.trim_end().ends_with('<'));\n-                if !has_bracket {\n-                    sugg = format!(\"<{}>\", sugg);\n-                }\n-            }\n+\n+            let is_global = poly_trait_ref.trait_ref.path.is_global();\n+            let sugg = Vec::from_iter([\n+                (\n+                    self_ty.span.shrink_to_lo(),\n+                    format!(\n+                        \"{}dyn {}\",\n+                        if needs_bracket { \"<\" } else { \"\" },\n+                        if is_global { \"(\" } else { \"\" },\n+                    ),\n+                ),\n+                (\n+                    self_ty.span.shrink_to_hi(),\n+                    format!(\n+                        \"{}{}\",\n+                        if is_global { \")\" } else { \"\" },\n+                        if needs_bracket { \">\" } else { \"\" },\n+                    ),\n+                ),\n+            ]);\n             if self_ty.span.edition() >= Edition::Edition2021 {\n                 let msg = \"trait objects must include the `dyn` keyword\";\n                 let label = \"add `dyn` keyword before this trait\";\n-                let mut err =\n-                    rustc_errors::struct_span_err!(tcx.sess, self_ty.span, E0782, \"{}\", msg);\n-                err.span_suggestion_verbose(self_ty.span, label, sugg, app).emit();\n+                rustc_errors::struct_span_err!(tcx.sess, self_ty.span, E0782, \"{}\", msg)\n+                    .multipart_suggestion_verbose(label, sugg, Applicability::MachineApplicable)\n+                    .emit();\n             } else {\n                 let msg = \"trait objects without an explicit `dyn` are deprecated\";\n                 tcx.struct_span_lint_hir(\n                     BARE_TRAIT_OBJECTS,\n                     self_ty.hir_id,\n                     self_ty.span,\n                     |lint| {\n-                        let mut db = lint.build(msg);\n-                        db.span_suggestion(self_ty.span, \"use `dyn`\", sugg, app);\n-                        db.emit()\n+                        lint.build(msg)\n+                            .multipart_suggestion_verbose(\n+                                \"use `dyn`\",\n+                                sugg,\n+                                Applicability::MachineApplicable,\n+                            )\n+                            .emit()\n                     },\n                 );\n             }"}, {"sha": "11514a28b2ca591394f48eb58de8c0ed388bcaec", "filename": "src/test/ui/did_you_mean/bad-assoc-ty.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -103,11 +103,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/bad-assoc-ty.rs:33:10\n    |\n LL | type H = Fn(u8) -> (u8)::Output;\n-   |          ^^^^^^^^^^^^^^ help: use `dyn`: `<dyn Fn(u8) -> (u8)>`\n+   |          ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL | type H = <dyn Fn(u8) -> (u8)>::Output;\n+   |          ++++               +\n \n error[E0223]: ambiguous associated type\n   --> $DIR/bad-assoc-ty.rs:33:10"}, {"sha": "7e9435efb08d2698c1569d14d4197f16398c7b57", "filename": "src/test/ui/dyn-keyword/dyn-2018-edition-lint.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,7 +2,7 @@ error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:17\n    |\n LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-   |                 ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                 ^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/dyn-2018-edition-lint.rs:2:8\n@@ -11,15 +11,25 @@ LL | #[deny(bare_trait_objects)]\n    |        ^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n+LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   | \n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:35\n    |\n LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-   |                                   ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                                   ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n+LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   | \n \n error: aborting due to 2 previous errors\n "}, {"sha": "b5bc359d7166d912bcb925889a48eb67ea192bc9", "filename": "src/test/ui/dyn-keyword/dyn-2021-edition-error.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -6,8 +6,9 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n-   |                 ~~~~~~~~~~~~~\n+LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n+LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   | \n \n error[E0782]: trait objects must include the `dyn` keyword\n   --> $DIR/dyn-2021-edition-error.rs:3:35\n@@ -17,8 +18,9 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n-   |                                   ~~~~~~~~~~~~~\n+LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n+LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   | \n \n error: aborting due to 2 previous errors\n "}, {"sha": "fd4030e96226b86516aaff36cce45be2c2a614fe", "filename": "src/test/ui/dyn-keyword/dyn-angle-brackets.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,7 +2,7 @@ error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-angle-brackets.rs:15:10\n    |\n LL |         <fmt::Debug>::fmt(self, f)\n-   |          ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Debug`\n+   |          ^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/dyn-angle-brackets.rs:4:9\n@@ -11,6 +11,11 @@ LL | #![deny(bare_trait_objects)]\n    |         ^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -         <fmt::Debug>::fmt(self, f)\n+LL +         <dyn fmt::Debug>::fmt(self, f)\n+   | \n \n error: aborting due to previous error\n "}, {"sha": "8c68dec1df7e407bca61289b95a4528222a26b06", "filename": "src/test/ui/editions/dyn-trait-sugg-2021.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Feditions%2Fdyn-trait-sugg-2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Feditions%2Fdyn-trait-sugg-2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fdyn-trait-sugg-2021.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -7,7 +7,7 @@ LL |     Foo::hi(123);\n help: add `dyn` keyword before this trait\n    |\n LL |     <dyn Foo>::hi(123);\n-   |     ~~~~~~~~~\n+   |     ++++    +\n \n error: aborting due to previous error\n "}, {"sha": "b1d1c01b27a3c483c70e8679159dfb19ce7901f3", "filename": "src/test/ui/issues/issue-28344.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,11 +2,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-28344.rs:4:17\n    |\n LL |     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n-   |                 ^^^^^^ help: use `dyn`: `<dyn BitXor>`\n+   |                 ^^^^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let x: u8 = <dyn BitXor>::bitor(0 as u8, 0 as u8);\n+   |                 ++++       +\n \n error[E0191]: the value of the associated type `Output` (from trait `BitXor`) must be specified\n   --> $DIR/issue-28344.rs:4:17\n@@ -27,10 +31,14 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-28344.rs:10:13\n    |\n LL |     let g = BitXor::bitor;\n-   |             ^^^^^^ help: use `dyn`: `<dyn BitXor>`\n+   |             ^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let g = <dyn BitXor>::bitor;\n+   |             ++++       +\n \n error[E0191]: the value of the associated type `Output` (from trait `BitXor`) must be specified\n   --> $DIR/issue-28344.rs:10:13"}, {"sha": "a91a1b3778edbdd0e668276c901ea2ac60b89298", "filename": "src/test/ui/issues/issue-58734.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-58734.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-58734.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-58734.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,11 +2,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-58734.rs:20:5\n    |\n LL |     Trait::nonexistent(());\n-   |     ^^^^^ help: use `dyn`: `<dyn Trait>`\n+   |     ^^^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     <dyn Trait>::nonexistent(());\n+   |     ++++      +\n \n error[E0599]: no function or associated item named `nonexistent` found for trait object `dyn Trait` in the current scope\n   --> $DIR/issue-58734.rs:20:12"}, {"sha": "5b2f04ffa83093b1c3eaa773dc3e54b520cbd7f7", "filename": "src/test/ui/issues/issue-86756.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -18,11 +18,16 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-86756.rs:5:15\n    |\n LL |     eq::<dyn, Foo>\n-   |               ^^^ help: use `dyn`: `dyn Foo`\n+   |               ^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -     eq::<dyn, Foo>\n+LL +     eq::<dyn, dyn Foo>\n+   | \n \n error[E0107]: missing generics for trait `Foo`\n   --> $DIR/issue-86756.rs:5:15"}, {"sha": "4b8c2b539d55aefcf860691e462c950351c81e02", "filename": "src/test/ui/lint/bare-trait-objects-path.stderr", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fbare-trait-objects-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fbare-trait-objects-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fbare-trait-objects-path.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,11 +2,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/bare-trait-objects-path.rs:23:12\n    |\n LL |     let _: Dyn::Ty;\n-   |            ^^^ help: use `dyn`: `<dyn Dyn>`\n+   |            ^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let _: <dyn Dyn>::Ty;\n+   |            ++++    +\n \n error[E0223]: ambiguous associated type\n   --> $DIR/bare-trait-objects-path.rs:23:12\n@@ -18,28 +22,40 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/bare-trait-objects-path.rs:14:5\n    |\n LL |     Dyn::func();\n-   |     ^^^ help: use `dyn`: `<dyn Dyn>`\n+   |     ^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     <dyn Dyn>::func();\n+   |     ++++    +\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/bare-trait-objects-path.rs:17:5\n    |\n LL |     ::Dyn::func();\n-   |     ^^^^^ help: use `dyn`: `<dyn (::Dyn)>`\n+   |     ^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     <dyn (::Dyn)>::func();\n+   |     ++++++     ++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/bare-trait-objects-path.rs:20:5\n    |\n LL |     Dyn::CONST;\n-   |     ^^^ help: use `dyn`: `<dyn Dyn>`\n+   |     ^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     <dyn Dyn>::CONST;\n+   |     ++++    +\n \n error: aborting due to previous error; 4 warnings emitted\n "}, {"sha": "99d97ba52a0f23987a7a5e00a03b0f80daecfdc6", "filename": "src/test/ui/lint/force-warn/allowed-group-warn-by-default-lint.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,29 +2,44 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/allowed-group-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = note: requested on the command line with `--force-warn bare-trait-objects`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/allowed-group-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/allowed-group-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: 3 warnings emitted\n "}, {"sha": "90496ca7d2078439d8b5ad068837a5b0b96d81ce", "filename": "src/test/ui/lint/force-warn/cap-lints-allow.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,29 +2,44 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/cap-lints-allow.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = note: requested on the command line with `--force-warn bare-trait-objects`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/cap-lints-allow.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/cap-lints-allow.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: 3 warnings emitted\n "}, {"sha": "b6d36eaac44480b04a13310aab2cab520fda720d", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-cli-warn-by-default-lint.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,29 +2,44 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-cli-warn-by-default-lint.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = note: `--force-warn bare-trait-objects` implied by `--force-warn rust-2018-idioms`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-cli-warn-by-default-lint.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-cli-warn-by-default-lint.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: 3 warnings emitted\n "}, {"sha": "e8fdaa72cc0f653ce286cf7a5839ddf2ae25e463", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-lint-group.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,29 +2,44 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-lint-group.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = note: `--force-warn bare-trait-objects` implied by `--force-warn rust-2018-idioms`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-lint-group.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-lint-group.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: 3 warnings emitted\n "}, {"sha": "2de30d0c2f43d1f7c3115d495e3ce8238361e66a", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-warn-by-default-lint.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,29 +2,44 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = note: `--force-warn bare-trait-objects` implied by `--force-warn rust-2018-idioms`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-warn-by-default-lint.rs:10:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n-   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |                         ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub fn function(_x: Box<SomeTrait>) {}\n+LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n+   | \n \n warning: 3 warnings emitted\n "}, {"sha": "a852337b6fe454d30155e102101eaf484e0dc369", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -20,11 +20,16 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/trait-object-trait-parens.rs:8:16\n    |\n LL |     let _: Box<(Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (Obj) + (?Sized) + (for<'a> Trait<'a>)`\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -     let _: Box<(Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n+LL +     let _: Box<dyn (Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n+   | \n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:8:35\n@@ -41,10 +46,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/trait-object-trait-parens.rs:13:16\n    |\n LL |     let _: Box<?Sized + (for<'a> Trait<'a>) + (Obj)>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ?Sized + (for<'a> Trait<'a>) + (Obj)`\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -     let _: Box<?Sized + (for<'a> Trait<'a>) + (Obj)>;\n+LL +     let _: Box<dyn ?Sized + (for<'a> Trait<'a>) + (Obj)>;\n+   | \n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:13:47\n@@ -61,10 +71,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/trait-object-trait-parens.rs:18:16\n    |\n LL |     let _: Box<for<'a> Trait<'a> + (Obj) + (?Sized)>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn for<'a> Trait<'a> + (Obj) + (?Sized)`\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -     let _: Box<for<'a> Trait<'a> + (Obj) + (?Sized)>;\n+LL +     let _: Box<dyn for<'a> Trait<'a> + (Obj) + (?Sized)>;\n+   | \n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:18:36"}, {"sha": "7dfd8c327085752931f05dc0f56cc445479bedae", "filename": "src/test/ui/suggestions/issue-61963.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,7 +2,7 @@ error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:22:14\n    |\n LL |     bar: Box<Bar>,\n-   |              ^^^ help: use `dyn`: `dyn Bar`\n+   |              ^^^\n    |\n note: the lint level is defined here\n   --> $DIR/issue-61963.rs:3:9\n@@ -11,15 +11,25 @@ LL | #![deny(bare_trait_objects)]\n    |         ^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL -     bar: Box<Bar>,\n+LL +     bar: Box<dyn Bar>,\n+   | \n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:18:1\n    |\n LL | pub struct Foo {\n-   | ^^^ help: use `dyn`: `dyn pub`\n+   | ^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - pub struct Foo {\n+LL + dyn pub struct Foo {\n+   | \n \n error: aborting due to 2 previous errors\n "}, {"sha": "08f6d166d226f85f476df509fcf7e7a2b90d460b", "filename": "src/test/ui/traits/bound/not-on-bare-trait.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,11 +2,16 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/not-on-bare-trait.rs:7:12\n    |\n LL | fn foo(_x: Foo + Send) {\n-   |            ^^^^^^^^^^ help: use `dyn`: `dyn Foo + Send`\n+   |            ^^^^^^^^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL - fn foo(_x: Foo + Send) {\n+LL + fn foo(_x: dyn Foo + Send) {\n+   | \n \n error[E0277]: the size for values of type `(dyn Foo + Send + 'static)` cannot be known at compilation time\n   --> $DIR/not-on-bare-trait.rs:7:8"}, {"sha": "2ba921871577304f8aa6b0b486d3bf9d411697c2", "filename": "src/test/ui/unspecified-self-in-trait-ref.stderr", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a6d4b1a00806797d8588e9efd3e133a7e55003/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr?ref=d3a6d4b1a00806797d8588e9efd3e133a7e55003", "patch": "@@ -2,11 +2,15 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/unspecified-self-in-trait-ref.rs:10:13\n    |\n LL |     let a = Foo::lol();\n-   |             ^^^ help: use `dyn`: `<dyn Foo>`\n+   |             ^^^\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let a = <dyn Foo>::lol();\n+   |             ++++    +\n \n error[E0599]: no function or associated item named `lol` found for trait object `dyn Foo<_>` in the current scope\n   --> $DIR/unspecified-self-in-trait-ref.rs:10:18\n@@ -18,10 +22,14 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/unspecified-self-in-trait-ref.rs:14:13\n    |\n LL |     let b = Foo::<_>::lol();\n-   |             ^^^^^^^^ help: use `dyn`: `<dyn Foo::<_>>`\n+   |             ^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let b = <dyn Foo::<_>>::lol();\n+   |             ++++         +\n \n error[E0599]: no function or associated item named `lol` found for trait object `dyn Foo<_>` in the current scope\n   --> $DIR/unspecified-self-in-trait-ref.rs:14:23\n@@ -33,10 +41,14 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/unspecified-self-in-trait-ref.rs:18:13\n    |\n LL |     let c = Bar::lol();\n-   |             ^^^ help: use `dyn`: `<dyn Bar>`\n+   |             ^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let c = <dyn Bar>::lol();\n+   |             ++++    +\n \n error[E0599]: no function or associated item named `lol` found for trait object `dyn Bar<_, _>` in the current scope\n   --> $DIR/unspecified-self-in-trait-ref.rs:18:18\n@@ -48,10 +60,14 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/unspecified-self-in-trait-ref.rs:22:13\n    |\n LL |     let d = Bar::<usize, _>::lol();\n-   |             ^^^^^^^^^^^^^^^ help: use `dyn`: `<dyn Bar::<usize, _>>`\n+   |             ^^^^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let d = <dyn Bar::<usize, _>>::lol();\n+   |             ++++                +\n \n error[E0599]: no function or associated item named `lol` found for trait object `dyn Bar<usize, _>` in the current scope\n   --> $DIR/unspecified-self-in-trait-ref.rs:22:30\n@@ -63,10 +79,14 @@ warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/unspecified-self-in-trait-ref.rs:26:13\n    |\n LL |     let e = Bar::<usize>::lol();\n-   |             ^^^^^^^^^^^^ help: use `dyn`: `<dyn Bar::<usize>>`\n+   |             ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+help: use `dyn`\n+   |\n+LL |     let e = <dyn Bar::<usize>>::lol();\n+   |             ++++             +\n \n error[E0393]: the type parameter `A` must be explicitly specified\n   --> $DIR/unspecified-self-in-trait-ref.rs:26:13"}]}