{"sha": "c2ad75e36409c97a49c950060d88c4ca7eaa580c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYWQ3NWUzNjQwOWM5N2E0OWM5NTAwNjBkODhjNGNhN2VhYTU4MGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-23T08:25:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-23T08:25:34Z"}, "message": "Rollup merge of #58648 - pnkfelix:issue-23926-update-tests, r=nikomatsakis\n\nUpdate tests to account for cross-platform testing and miri.\n\nFix #23926", "tree": {"sha": "c09e72c2e6d4584d418c7076dad54daf5c8b4b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c09e72c2e6d4584d418c7076dad54daf5c8b4b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2ad75e36409c97a49c950060d88c4ca7eaa580c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJccQN/CRBK7hj4Ov3rIwAAdHIIAI/B/PqDlQjr1oW3Xj93lVgH\npKC5fAWv3kSHVcuXKl797si7cjeFsVdxHMfu60i3xMZTRVjZvC9Dxlv5vVC1yh68\nu8dH+DwlAK9bhAbTsOPPxUDU/FhremqJc/4knyuQPsMhIf1MBbq99IC3q3LJhSNb\nNip21cyokRdPhlk3oNwoNJzGozQbhrIIrGHUb4qkm7RHWEeIZTHRuF9T54cSHt+r\nuHMxRWHNsAzUL36+lpuEAWifpESbJgLBw1Dftw4o9zE5hOlodP+7F7ZQLvFw/BSV\nhxh80mVh3RcHO5dF1iU3RO0Awy5FZmzK//XEZwanrB5hRGrLM2mrKr8/CYtFd2U=\n=A5oF\n-----END PGP SIGNATURE-----\n", "payload": "tree c09e72c2e6d4584d418c7076dad54daf5c8b4b07\nparent 69cb908849958f803a2c3cf072573d3d8dadda0e\nparent b72ba0559cab28ab88c9397ece9e5e4b193bdc89\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550910334 +0100\ncommitter GitHub <noreply@github.com> 1550910334 +0100\n\nRollup merge of #58648 - pnkfelix:issue-23926-update-tests, r=nikomatsakis\n\nUpdate tests to account for cross-platform testing and miri.\n\nFix #23926\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ad75e36409c97a49c950060d88c4ca7eaa580c", "html_url": "https://github.com/rust-lang/rust/commit/c2ad75e36409c97a49c950060d88c4ca7eaa580c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2ad75e36409c97a49c950060d88c4ca7eaa580c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69cb908849958f803a2c3cf072573d3d8dadda0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/69cb908849958f803a2c3cf072573d3d8dadda0e", "html_url": "https://github.com/rust-lang/rust/commit/69cb908849958f803a2c3cf072573d3d8dadda0e"}, {"sha": "b72ba0559cab28ab88c9397ece9e5e4b193bdc89", "url": "https://api.github.com/repos/rust-lang/rust/commits/b72ba0559cab28ab88c9397ece9e5e4b193bdc89", "html_url": "https://github.com/rust-lang/rust/commit/b72ba0559cab28ab88c9397ece9e5e4b193bdc89"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "6fd8e9cbc806b17c872bcc12c77623134faa428a", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs?ref=c2ad75e36409c97a49c950060d88c4ca7eaa580c", "patch": "@@ -3,11 +3,11 @@\n //\n // This test is checking the count in an array expression.\n \n-// FIXME (#23926): the error output is not consistent between a\n-// self-hosted and a cross-compiled setup; therefore resorting to\n-// error-pattern for now.\n \n-// error-pattern: attempt to add with overflow\n+\n+\n+\n+\n \n #![allow(unused_imports)]\n \n@@ -18,6 +18,7 @@ use std::{u8, u16, u32, u64, usize};\n const A_I8_I\n     : [u32; (i8::MAX as usize) + 1]\n     = [0; (i8::MAX + 1) as usize];\n+//~^ ERROR evaluation of constant value failed\n \n fn main() {\n     foo(&A_I8_I[..]);"}, {"sha": "d9b06370dff794b5171756aa73869db418dc1794", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3b.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs?ref=c2ad75e36409c97a49c950060d88c4ca7eaa580c", "patch": "@@ -7,11 +7,11 @@\n // types for the left- and right-hand sides of the addition do not\n // match (as well as overflow).\n \n-// FIXME (#23926): the error output is not consistent between a\n-// self-hosted and a cross-compiled setup; therefore resorting to\n-// error-pattern for now.\n \n-// error-pattern: mismatched types\n+\n+\n+\n+\n \n #![allow(unused_imports)]\n \n@@ -22,6 +22,8 @@ use std::{u8, u16, u32, u64, usize};\n const A_I8_I\n     : [u32; (i8::MAX as usize) + 1]\n     = [0; (i8::MAX + 1u8) as usize];\n+//~^ ERROR mismatched types\n+//~| ERROR cannot add `u8` to `i8`\n \n fn main() {\n     foo(&A_I8_I[..]);"}, {"sha": "8b244a47232fab30b084d723e4250b50117aa274", "filename": "src/test/ui/huge-array-simple.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fhuge-array-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fhuge-array-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-array-simple.rs?ref=c2ad75e36409c97a49c950060d88c4ca7eaa580c", "patch": "@@ -1,11 +1,16 @@\n-// FIXME (#23926): the error output is not consistent between a\n-// self-hosted and a cross-compiled setup. Skipping for now.\n-\n-// ignore-test FIXME(#23926)\n+// error-pattern: too big for the current architecture\n \n+// normalize-stderr-test \"; \\d+]\" -> \"; N]\"\n #![allow(exceeding_bitshifts)]\n \n+#[cfg(target_pointer_width = \"64\")]\n fn main() {\n     let _fat : [u8; (1<<61)+(1<<31)] =\n         [0; (1u64<<61) as usize +(1u64<<31) as usize];\n }\n+\n+#[cfg(target_pointer_width = \"32\")]\n+fn main() {\n+    let _fat : [u8; (1<<31)+(1<<15)] =\n+        [0; (1u32<<31) as usize +(1u32<<15) as usize];\n+}"}, {"sha": "3e9c86296cec2ecdd74b1f022001b76d73dfd927", "filename": "src/test/ui/huge-array-simple.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fhuge-array-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2ad75e36409c97a49c950060d88c4ca7eaa580c/src%2Ftest%2Fui%2Fhuge-array-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-array-simple.stderr?ref=c2ad75e36409c97a49c950060d88c4ca7eaa580c", "patch": "@@ -0,0 +1,4 @@\n+error: the type `[u8; N]` is too big for the current architecture\n+\n+error: aborting due to previous error\n+"}]}