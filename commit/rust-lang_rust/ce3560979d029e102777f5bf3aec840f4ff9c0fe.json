{"sha": "ce3560979d029e102777f5bf3aec840f4ff9c0fe", "node_id": "C_kwDOAAsO6NoAKGNlMzU2MDk3OWQwMjllMTAyNzc3ZjViZjNhZWM4NDBmNGZmOWMwZmU", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-07T17:38:38Z"}, "committer": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-10-12T12:19:10Z"}, "message": "Error if tidy-alphabetical-end was not found", "tree": {"sha": "a3efa94ea061ac3a01361791edc3dc16a1bb8c67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3efa94ea061ac3a01361791edc3dc16a1bb8c67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3560979d029e102777f5bf3aec840f4ff9c0fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3560979d029e102777f5bf3aec840f4ff9c0fe", "html_url": "https://github.com/rust-lang/rust/commit/ce3560979d029e102777f5bf3aec840f4ff9c0fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3560979d029e102777f5bf3aec840f4ff9c0fe/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bfef19844f20514cda40437847880ec8a663926", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfef19844f20514cda40437847880ec8a663926", "html_url": "https://github.com/rust-lang/rust/commit/7bfef19844f20514cda40437847880ec8a663926"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "c9f1dfb707f3f1efa514afea89e1a0c2f2b91e3f", "filename": "src/tools/tidy/src/alphabetical.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ce3560979d029e102777f5bf3aec840f4ff9c0fe/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3560979d029e102777f5bf3aec840f4ff9c0fe/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs?ref=ce3560979d029e102777f5bf3aec840f4ff9c0fe", "patch": "@@ -29,18 +29,29 @@ fn is_close_bracket(c: char) -> bool {\n     matches!(c, ')' | ']' | '}')\n }\n \n+const START_COMMENT: &str = \"// tidy-alphabetical-start\";\n+const END_COMMENT: &str = \"// tidy-alphabetical-end\";\n+\n fn check_section<'a>(\n     file: impl Display,\n     lines: impl Iterator<Item = (usize, &'a str)>,\n     bad: &mut bool,\n ) {\n-    let content_lines = lines.take_while(|(_, line)| !line.contains(\"// tidy-alphabetical-end\"));\n+    let content_lines = lines.take_while(|(_, line)| !line.contains(END_COMMENT));\n \n     let mut prev_line = String::new();\n     let mut first_indent = None;\n     let mut in_split_line = None;\n \n     for (line_idx, line) in content_lines {\n+        if line.contains(START_COMMENT) {\n+            tidy_error!(\n+                bad,\n+                \"{file}:{} found `// tidy-alphabetical-start` expecting `// tidy-alphabetical-end`\",\n+                line_idx\n+            )\n+        }\n+\n         let indent = first_indent.unwrap_or_else(|| {\n             let indent = indentation(line);\n             first_indent = Some(indent);\n@@ -82,16 +93,20 @@ fn check_section<'a>(\n     }\n }\n \n-const START_COMMENT: &str = \"// tidy-alphabetical-start\";\n-\n pub fn check(path: &Path, bad: &mut bool) {\n     walk(path, &mut filter_dirs, &mut |entry, contents| {\n         let file = &entry.path().display();\n \n-        let mut lines = contents.lines().enumerate();\n+        let mut lines = contents.lines().enumerate().peekable();\n         while let Some((_, line)) = lines.next() {\n             if line.contains(START_COMMENT) {\n                 check_section(file, &mut lines, bad);\n+                if lines.peek().is_none() {\n+                    tidy_error!(\n+                        bad,\n+                        \"{file}: reached end of file expecting `// tidy-alphabetical-end`\"\n+                    )\n+                }\n             }\n         }\n     });"}]}