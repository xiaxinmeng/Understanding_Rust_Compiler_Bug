{"sha": "810177c78709e114f31ad16540f51b17fb6f3b98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMDE3N2M3ODcwOWUxMTRmMzFhZDE2NTQwZjUxYjE3ZmI2ZjNiOTg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T21:48:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:31Z"}, "message": "librustc: De-`@mut` `IrMaps::lnks`", "tree": {"sha": "92fbfd2a9c125b36c6bd1bb904ed134b3b2d9f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fbfd2a9c125b36c6bd1bb904ed134b3b2d9f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/810177c78709e114f31ad16540f51b17fb6f3b98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/810177c78709e114f31ad16540f51b17fb6f3b98", "html_url": "https://github.com/rust-lang/rust/commit/810177c78709e114f31ad16540f51b17fb6f3b98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/810177c78709e114f31ad16540f51b17fb6f3b98/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bef2353e1bea928a7f99d09ed264da412686c5d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bef2353e1bea928a7f99d09ed264da412686c5d1", "html_url": "https://github.com/rust-lang/rust/commit/bef2353e1bea928a7f99d09ed264da412686c5d1"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "9520285e3804095fd71bf0e7f49eac36836af91e", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/810177c78709e114f31ad16540f51b17fb6f3b98/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810177c78709e114f31ad16540f51b17fb6f3b98/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=810177c78709e114f31ad16540f51b17fb6f3b98", "patch": "@@ -251,7 +251,7 @@ struct IrMaps {\n     variable_map: RefCell<HashMap<NodeId, Variable>>,\n     capture_info_map: RefCell<HashMap<NodeId, @~[CaptureInfo]>>,\n     var_kinds: RefCell<~[VarKind]>,\n-    lnks: ~[LiveNodeKind],\n+    lnks: RefCell<~[LiveNodeKind]>,\n }\n \n fn IrMaps(tcx: ty::ctxt,\n@@ -268,15 +268,16 @@ fn IrMaps(tcx: ty::ctxt,\n         variable_map: RefCell::new(HashMap::new()),\n         capture_info_map: RefCell::new(HashMap::new()),\n         var_kinds: RefCell::new(~[]),\n-        lnks: ~[],\n+        lnks: RefCell::new(~[]),\n     }\n }\n \n impl IrMaps {\n     pub fn add_live_node(&mut self, lnk: LiveNodeKind) -> LiveNode {\n         let num_live_nodes = self.num_live_nodes.get();\n         let ln = LiveNode(num_live_nodes);\n-        self.lnks.push(lnk);\n+        let mut lnks = self.lnks.borrow_mut();\n+        lnks.get().push(lnk);\n         self.num_live_nodes.set(num_live_nodes + 1);\n \n         debug!(\"{} is of kind {}\", ln.to_str(),\n@@ -353,7 +354,8 @@ impl IrMaps {\n     }\n \n     pub fn lnk(&mut self, ln: LiveNode) -> LiveNodeKind {\n-        self.lnks[*ln]\n+        let lnks = self.lnks.borrow();\n+        lnks.get()[*ln]\n     }\n }\n \n@@ -776,10 +778,16 @@ impl Liveness {\n     pub fn ln_str(&self, ln: LiveNode) -> ~str {\n         str::from_utf8_owned(io::mem::with_mem_writer(|wr| {\n             let wr = wr as &mut io::Writer;\n-            write!(wr, \"[ln({}) of kind {:?} reads\", *ln, self.ir.lnks[*ln]);\n-            self.write_vars(wr, ln, |idx| self.users[idx].reader );\n+            {\n+                let lnks = self.ir.lnks.borrow();\n+                write!(wr,\n+                       \"[ln({}) of kind {:?} reads\",\n+                       *ln,\n+                       lnks.get()[*ln]);\n+            }\n+            self.write_vars(wr, ln, |idx| self.users[idx].reader);\n             write!(wr, \"  writes\");\n-            self.write_vars(wr, ln, |idx| self.users[idx].writer );\n+            self.write_vars(wr, ln, |idx| self.users[idx].writer);\n             write!(wr, \"  precedes {}]\", self.successors[*ln].to_str());\n         }))\n     }"}]}