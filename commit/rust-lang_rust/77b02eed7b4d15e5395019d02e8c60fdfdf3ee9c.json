{"sha": "77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YjAyZWVkN2I0ZDE1ZTUzOTUwMTlkMDJlOGM2MGZkZmRmM2VlOWM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-12T20:11:21Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-12T20:11:39Z"}, "message": "Prevent double panic when handling incremental fingerprint mismatch\n\nWhen an incremental fingerprint mismatch occurs, we debug-print\nour `DepNode` and query result. Unfortunately, the debug printing\nprocess may cause us to run additional queries, which can result\nin a re-entrant fingerprint mismatch error.\n\nTo avoid a double panic, this commit adds a thread-local variable\nto detect re-entrant calls.", "tree": {"sha": "9aeab22760b343459620094603a28e829dd3ea2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aeab22760b343459620094603a28e829dd3ea2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmEVgMoACgkQtAh+UQ6Y\nsWQxiA/8DAYnav0RVc5Rar8YhnkJ+65ATc5CMR/beoQOhLrgc+AEBOHipJV8bhl1\nVN9GVloU7k+tps1E1n2K95J2hi7q+QliUhoQPIYhuoGW2xp8Yg5O8UWRPohzGe/L\nkwgBVkE9wwN6Hx5VE7wI/YZS2lK47epMl5I4N2j81AcvAJYui8M/FghvvxASQZtR\n8Y8ggEoiUfRS7nGDPXBg84yc8iNvAIgz/FizNYn/6exErLrfU50KlENNd/4NOaHh\nqKwK1PdkUqHUDzEKdl6hvRRy9LFLp7n/Cd06OVvZRomt2Ev4+Ln83apII+LeH1uN\n7TtHm6bvdfr/WOvgpjmIGZn04iBvcJwuxzJEPWRByW+H2HtPD2U+sg6+odcpsVor\nI8pto5XHu7C9EOx8B/XkSvykJM5iVoPaAhvMiV5B9MODDre/1BGP9szjoUwt2L5r\niCGTkVIX0flEK6BsVX8FTSrICUCX/CELEwrHXE8+Kc2l6RfVrIVaokJicMkMnuR1\no4TZAh90YfuWu91znURbErBPVSQ7/UqA+r81wZJZ5HnSqSF2a7nFTfp9unP5NxUE\nRWjuMtiR47LMFJaNmT5EssbYHrYr9zq39bKP2tyow8l5DNkHNhp4Znu9+vwOhBF5\nLVaIaP8vYlbEwCt6oCqkohOxyOvRukVAjeTavUeaxgiFNCjFx6Y=\n=NMti\n-----END PGP SIGNATURE-----", "payload": "tree 9aeab22760b343459620094603a28e829dd3ea2a\nparent 4498e300e41f47c75abe4e49ec91ae949aaeea5f\nauthor Aaron Hill <aa1ronham@gmail.com> 1628799081 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1628799099 -0500\n\nPrevent double panic when handling incremental fingerprint mismatch\n\nWhen an incremental fingerprint mismatch occurs, we debug-print\nour `DepNode` and query result. Unfortunately, the debug printing\nprocess may cause us to run additional queries, which can result\nin a re-entrant fingerprint mismatch error.\n\nTo avoid a double panic, this commit adds a thread-local variable\nto detect re-entrant calls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "html_url": "https://github.com/rust-lang/rust/commit/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4498e300e41f47c75abe4e49ec91ae949aaeea5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4498e300e41f47c75abe4e49ec91ae949aaeea5f", "html_url": "https://github.com/rust-lang/rust/commit/4498e300e41f47c75abe4e49ec91ae949aaeea5f"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "c205f0fb531aec04ba6c82209b1f871a67227dc3", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "patch": "@@ -3,6 +3,7 @@\n #![feature(hash_raw_entry)]\n #![feature(iter_zip)]\n #![feature(min_specialization)]\n+#![feature(thread_local_const_init)]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "a7511846cadb61abc218b1278a9ecd62bd27a8cf", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=77b02eed7b4d15e5395019d02e8c60fdfdf3ee9c", "patch": "@@ -20,6 +20,7 @@ use rustc_data_structures::thin_vec::ThinVec;\n use rustc_errors::DiagnosticBuilder;\n use rustc_errors::{Diagnostic, FatalError};\n use rustc_span::{Span, DUMMY_SP};\n+use std::cell::Cell;\n use std::collections::hash_map::Entry;\n use std::fmt::Debug;\n use std::hash::{Hash, Hasher};\n@@ -618,12 +619,32 @@ fn incremental_verify_ich<CTX, K, V: Debug>(\n         } else {\n             \"`cargo clean`\".to_string()\n         };\n-        tcx.sess().struct_err(&format!(\"internal compiler error: encountered incremental compilation error with {:?}\", dep_node))\n-            .help(&format!(\"This is a known issue with the compiler. Run {} to allow your project to compile\", run_cmd))\n-            .note(&\"Please follow the instructions below to create a bug report with the provided information\")\n-            .note(&\"See <https://github.com/rust-lang/rust/issues/84970> for more information\")\n-            .emit();\n-        panic!(\"Found unstable fingerprints for {:?}: {:?}\", dep_node, result);\n+\n+        // When we emit an error message and panic, we try to debug-print the `DepNode`\n+        // and query result. Unforunately, this can cause us to run additional queries,\n+        // which may result in another fingerprint mismatch while we're in the middle\n+        // of processing this one. To avoid a double-panic (which kills the process\n+        // before we can print out the query static), we print out a terse\n+        // but 'safe' message if we detect a re-entrant call to this method.\n+        thread_local! {\n+            static INSIDE_VERIFY_PANIC: Cell<bool> = const { Cell::new(false) };\n+        };\n+\n+        let old_in_panic = INSIDE_VERIFY_PANIC.with(|in_panic| in_panic.replace(true));\n+\n+        if old_in_panic {\n+            tcx.sess().struct_err(\"internal compiler error: re-entrant incremental verify failure, suppressing message\")\n+                .emit();\n+        } else {\n+            tcx.sess().struct_err(&format!(\"internal compiler error: encountered incremental compilation error with {:?}\", dep_node))\n+                .help(&format!(\"This is a known issue with the compiler. Run {} to allow your project to compile\", run_cmd))\n+                .note(&\"Please follow the instructions below to create a bug report with the provided information\")\n+                .note(&\"See <https://github.com/rust-lang/rust/issues/84970> for more information\")\n+                .emit();\n+            panic!(\"Found unstable fingerprints for {:?}: {:?}\", dep_node, result);\n+        }\n+\n+        INSIDE_VERIFY_PANIC.with(|in_panic| in_panic.set(old_in_panic));\n     }\n }\n "}]}