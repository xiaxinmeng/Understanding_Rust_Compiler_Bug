{"sha": "c75a734a43546911f1365c604c5d2c7383d98a89", "node_id": "C_kwDOAAsO6NoAKGM3NWE3MzRhNDM1NDY5MTFmMTM2NWM2MDRjNWQyYzczODNkOThhODk", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-10-13T19:45:35Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-10-15T07:24:48Z"}, "message": "Remove redundant matching", "tree": {"sha": "80e399695385e41eb01759ffbe9b177d3890770d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80e399695385e41eb01759ffbe9b177d3890770d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c75a734a43546911f1365c604c5d2c7383d98a89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c75a734a43546911f1365c604c5d2c7383d98a89", "html_url": "https://github.com/rust-lang/rust/commit/c75a734a43546911f1365c604c5d2c7383d98a89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c75a734a43546911f1365c604c5d2c7383d98a89/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "313e71a2535196466b0bbdcfa3387bd6373e0f28", "url": "https://api.github.com/repos/rust-lang/rust/commits/313e71a2535196466b0bbdcfa3387bd6373e0f28", "html_url": "https://github.com/rust-lang/rust/commit/313e71a2535196466b0bbdcfa3387bd6373e0f28"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "145733ba985b05769d84b5e3881f12ef73ea43f7", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c75a734a43546911f1365c604c5d2c7383d98a89/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c75a734a43546911f1365c604c5d2c7383d98a89/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=c75a734a43546911f1365c604c5d2c7383d98a89", "patch": "@@ -1087,25 +1087,19 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n                 let MacCallStmt { mac, style, attrs, .. } = mac.into_inner();\n                 Ok((style == MacStmtStyle::Semicolon, mac, attrs.into()))\n             }\n-            StmtKind::Item(ref item) if matches!(item.kind, ItemKind::MacCall(..)) => {\n-                match stmt.kind {\n-                    StmtKind::Item(item) => match item.into_inner() {\n-                        ast::Item { kind: ItemKind::MacCall(mac), attrs, .. } => {\n-                            Ok((mac.args.need_semicolon(), mac, attrs))\n-                        }\n-                        _ => unreachable!(),\n-                    },\n+            StmtKind::Item(item) if matches!(item.kind, ItemKind::MacCall(..)) => {\n+                match item.into_inner() {\n+                    ast::Item { kind: ItemKind::MacCall(mac), attrs, .. } => {\n+                        Ok((mac.args.need_semicolon(), mac, attrs))\n+                    }\n                     _ => unreachable!(),\n                 }\n             }\n-            StmtKind::Semi(ref expr) if matches!(expr.kind, ast::ExprKind::MacCall(..)) => {\n-                match stmt.kind {\n-                    StmtKind::Semi(expr) => match expr.into_inner() {\n-                        ast::Expr { kind: ast::ExprKind::MacCall(mac), attrs, .. } => {\n-                            Ok((mac.args.need_semicolon(), mac, attrs.into()))\n-                        }\n-                        _ => unreachable!(),\n-                    },\n+            StmtKind::Semi(expr) if matches!(expr.kind, ast::ExprKind::MacCall(..)) => {\n+                match expr.into_inner() {\n+                    ast::Expr { kind: ast::ExprKind::MacCall(mac), attrs, .. } => {\n+                        Ok((mac.args.need_semicolon(), mac, attrs.into()))\n+                    }\n                     _ => unreachable!(),\n                 }\n             }"}]}