{"sha": "3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "node_id": "C_kwDOAAsO6NoAKDNjNmQ5ZWM3N2QwMGVlYjdlMjBkNWYyOGRmZjY4NGEwY2FiZTIxZWI", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-30T18:28:30Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-30T18:28:30Z"}, "message": "Use the full Fingerprint when stringifying Svh", "tree": {"sha": "adbe1c4167a440be835df201c0897612bdc1321a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adbe1c4167a440be835df201c0897612bdc1321a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "html_url": "https://github.com/rust-lang/rust/commit/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a78029b4f4d92978b8fde0a677ea300b113c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/43a78029b4f4d92978b8fde0a677ea300b113c41", "html_url": "https://github.com/rust-lang/rust/commit/43a78029b4f4d92978b8fde0a677ea300b113c41"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "9995c08345c2a4eed347111ec9e85349eb495f1a", "filename": "compiler/rustc_data_structures/src/fingerprint.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_data_structures%2Fsrc%2Ffingerprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_data_structures%2Fsrc%2Ffingerprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ffingerprint.rs?ref=3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "patch": "@@ -64,6 +64,11 @@ impl Fingerprint {\n         )\n     }\n \n+    #[inline]\n+    pub(crate) fn as_u128(self) -> u128 {\n+        u128::from(self.1) << 64 | u128::from(self.0)\n+    }\n+\n     // Combines two hashes in an order independent way. Make sure this is what\n     // you want.\n     #[inline]"}, {"sha": "71679086f16c385228d7e698b244f5933148bfcc", "filename": "compiler/rustc_data_structures/src/svh.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_data_structures%2Fsrc%2Fsvh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_data_structures%2Fsrc%2Fsvh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsvh.rs?ref=3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "patch": "@@ -23,18 +23,18 @@ impl Svh {\n         Svh { hash }\n     }\n \n-    pub fn as_u64(&self) -> u64 {\n-        self.hash.to_smaller_hash().as_u64()\n+    pub fn as_u128(self) -> u128 {\n+        self.hash.as_u128()\n     }\n \n-    pub fn to_string(&self) -> String {\n-        format!(\"{:016x}\", self.hash.to_smaller_hash())\n+    pub fn to_hex(self) -> String {\n+        format!(\"{:032x}\", self.hash.as_u128())\n     }\n }\n \n impl fmt::Display for Svh {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(&self.to_string())\n+        f.pad(&self.to_hex())\n     }\n }\n "}, {"sha": "e3c688b3e98cbe3a7cb17048e114b8acfcd4a878", "filename": "compiler/rustc_incremental/src/persist/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs?ref=3c6d9ec77d00eeb7e20d5f28dff684a0cabe21eb", "patch": "@@ -346,7 +346,7 @@ pub fn finalize_session_directory(sess: &Session, svh: Option<Svh>) {\n     let mut new_sub_dir_name = String::from(&old_sub_dir_name[..=dash_indices[2]]);\n \n     // Append the svh\n-    base_n::push_str(svh.as_u64() as u128, INT_ENCODE_BASE, &mut new_sub_dir_name);\n+    base_n::push_str(svh.as_u128(), INT_ENCODE_BASE, &mut new_sub_dir_name);\n \n     // Create the full path\n     let new_path = incr_comp_session_dir.parent().unwrap().join(new_sub_dir_name);"}]}