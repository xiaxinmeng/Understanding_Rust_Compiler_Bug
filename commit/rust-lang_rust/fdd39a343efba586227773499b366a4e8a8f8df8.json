{"sha": "fdd39a343efba586227773499b366a4e8a8f8df8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZDM5YTM0M2VmYmE1ODYyMjc3NzM0OTliMzY2YTRlOGE4ZjhkZjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-06T08:26:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-06T09:13:27Z"}, "message": "Add rust-analyzer to the build manifest", "tree": {"sha": "599339ccce3beb920d605bacc4a3be76aa9a44d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/599339ccce3beb920d605bacc4a3be76aa9a44d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdd39a343efba586227773499b366a4e8a8f8df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd39a343efba586227773499b366a4e8a8f8df8", "html_url": "https://github.com/rust-lang/rust/commit/fdd39a343efba586227773499b366a4e8a8f8df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdd39a343efba586227773499b366a4e8a8f8df8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "058c1b60a5407d1932babe2ee5c8b32e65868567", "url": "https://api.github.com/repos/rust-lang/rust/commits/058c1b60a5407d1932babe2ee5c8b32e65868567", "html_url": "https://github.com/rust-lang/rust/commit/058c1b60a5407d1932babe2ee5c8b32e65868567"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "a80f36d49699801d46581277d67e13d8f6473be6", "filename": "src/tools/build-manifest/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd39a343efba586227773499b366a4e8a8f8df8/src%2Ftools%2Fbuild-manifest%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/fdd39a343efba586227773499b366a4e8a8f8df8/src%2Ftools%2Fbuild-manifest%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FREADME.md?ref=fdd39a343efba586227773499b366a4e8a8f8df8", "patch": "@@ -22,7 +22,7 @@ Then, you can generate the manifest and all the packages from `path/to/dist` to\n ```\n $ BUILD_MANIFEST_DISABLE_SIGNING=1 cargo +nightly run \\\n     path/to/dist path/to/output 1970-01-01 \\\n-    nightly nightly nightly nightly nightly nightly nightly \\\n+    nightly nightly nightly nightly nightly nightly nightly nightly \\\n     http://example.com\n ```\n "}, {"sha": "5c50587ea973d7bcf89a05b5867da0f195d33ec7", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fdd39a343efba586227773499b366a4e8a8f8df8/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdd39a343efba586227773499b366a4e8a8f8df8/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=fdd39a343efba586227773499b366a4e8a8f8df8", "patch": "@@ -158,6 +158,8 @@ static DOCS_TARGETS: &[&str] = &[\n \n static MINGW: &[&str] = &[\"i686-pc-windows-gnu\", \"x86_64-pc-windows-gnu\"];\n \n+static NIGHTLY_ONLY_COMPONENTS: &[&str] = &[\"miri-preview\", \"rust-analyzer-preview\"];\n+\n #[derive(Serialize)]\n #[serde(rename_all = \"kebab-case\")]\n struct Manifest {\n@@ -222,6 +224,7 @@ struct Builder {\n     rust_release: String,\n     cargo_release: String,\n     rls_release: String,\n+    rust_analyzer_release: String,\n     clippy_release: String,\n     rustfmt_release: String,\n     llvm_tools_release: String,\n@@ -237,6 +240,7 @@ struct Builder {\n     rust_version: Option<String>,\n     cargo_version: Option<String>,\n     rls_version: Option<String>,\n+    rust_analyzer_version: Option<String>,\n     clippy_version: Option<String>,\n     rustfmt_version: Option<String>,\n     llvm_tools_version: Option<String>,\n@@ -245,6 +249,7 @@ struct Builder {\n     rust_git_commit_hash: Option<String>,\n     cargo_git_commit_hash: Option<String>,\n     rls_git_commit_hash: Option<String>,\n+    rust_analyzer_git_commit_hash: Option<String>,\n     clippy_git_commit_hash: Option<String>,\n     rustfmt_git_commit_hash: Option<String>,\n     llvm_tools_git_commit_hash: Option<String>,\n@@ -274,6 +279,7 @@ fn main() {\n     let s3_address = args.next().unwrap();\n     let cargo_release = args.next().unwrap();\n     let rls_release = args.next().unwrap();\n+    let rust_analyzer_release = args.next().unwrap();\n     let clippy_release = args.next().unwrap();\n     let miri_release = args.next().unwrap();\n     let rustfmt_release = args.next().unwrap();\n@@ -290,6 +296,7 @@ fn main() {\n         rust_release,\n         cargo_release,\n         rls_release,\n+        rust_analyzer_release,\n         clippy_release,\n         rustfmt_release,\n         llvm_tools_release,\n@@ -305,6 +312,7 @@ fn main() {\n         rust_version: None,\n         cargo_version: None,\n         rls_version: None,\n+        rust_analyzer_version: None,\n         clippy_version: None,\n         rustfmt_version: None,\n         llvm_tools_version: None,\n@@ -313,6 +321,7 @@ fn main() {\n         rust_git_commit_hash: None,\n         cargo_git_commit_hash: None,\n         rls_git_commit_hash: None,\n+        rust_analyzer_git_commit_hash: None,\n         clippy_git_commit_hash: None,\n         rustfmt_git_commit_hash: None,\n         llvm_tools_git_commit_hash: None,\n@@ -327,6 +336,7 @@ enum PkgType {\n     RustSrc,\n     Cargo,\n     Rls,\n+    RustAnalyzer,\n     Clippy,\n     Rustfmt,\n     LlvmTools,\n@@ -341,6 +351,7 @@ impl PkgType {\n             \"rust-src\" => RustSrc,\n             \"cargo\" => Cargo,\n             \"rls\" | \"rls-preview\" => Rls,\n+            \"rust-analyzer\" | \"rust-analyzer-preview\" => RustAnalyzer,\n             \"clippy\" | \"clippy-preview\" => Clippy,\n             \"rustfmt\" | \"rustfmt-preview\" => Rustfmt,\n             \"llvm-tools\" | \"llvm-tools-preview\" => LlvmTools,\n@@ -355,6 +366,7 @@ impl Builder {\n         self.rust_version = self.version(\"rust\", \"x86_64-unknown-linux-gnu\");\n         self.cargo_version = self.version(\"cargo\", \"x86_64-unknown-linux-gnu\");\n         self.rls_version = self.version(\"rls\", \"x86_64-unknown-linux-gnu\");\n+        self.rust_analyzer_version = self.version(\"rust-analyzer\", \"x86_64-unknown-linux-gnu\");\n         self.clippy_version = self.version(\"clippy\", \"x86_64-unknown-linux-gnu\");\n         self.rustfmt_version = self.version(\"rustfmt\", \"x86_64-unknown-linux-gnu\");\n         self.llvm_tools_version = self.version(\"llvm-tools\", \"x86_64-unknown-linux-gnu\");\n@@ -363,6 +375,8 @@ impl Builder {\n         self.rust_git_commit_hash = self.git_commit_hash(\"rust\", \"x86_64-unknown-linux-gnu\");\n         self.cargo_git_commit_hash = self.git_commit_hash(\"cargo\", \"x86_64-unknown-linux-gnu\");\n         self.rls_git_commit_hash = self.git_commit_hash(\"rls\", \"x86_64-unknown-linux-gnu\");\n+        self.rust_analyzer_git_commit_hash =\n+            self.git_commit_hash(\"rust-analyzer\", \"x86_64-unknown-linux-gnu\");\n         self.clippy_git_commit_hash = self.git_commit_hash(\"clippy\", \"x86_64-unknown-linux-gnu\");\n         self.rustfmt_git_commit_hash = self.git_commit_hash(\"rustfmt\", \"x86_64-unknown-linux-gnu\");\n         self.llvm_tools_git_commit_hash =\n@@ -436,6 +450,7 @@ impl Builder {\n         package(\"rust-docs\", DOCS_TARGETS);\n         package(\"rust-src\", &[\"*\"]);\n         package(\"rls-preview\", HOSTS);\n+        package(\"rust-analyzer-preview\", HOSTS);\n         package(\"clippy-preview\", HOSTS);\n         package(\"miri-preview\", HOSTS);\n         package(\"rustfmt-preview\", HOSTS);\n@@ -469,6 +484,7 @@ impl Builder {\n                 \"rustfmt-preview\",\n                 \"clippy-preview\",\n                 \"rls-preview\",\n+                \"rust-analyzer-preview\",\n                 \"rust-src\",\n                 \"llvm-tools-preview\",\n                 \"rust-analysis\",\n@@ -543,6 +559,7 @@ impl Builder {\n             host_component(\"clippy-preview\"),\n             host_component(\"miri-preview\"),\n             host_component(\"rls-preview\"),\n+            host_component(\"rust-analyzer-preview\"),\n             host_component(\"rustfmt-preview\"),\n             host_component(\"llvm-tools-preview\"),\n             host_component(\"rust-analysis\"),\n@@ -612,8 +629,8 @@ impl Builder {\n             .map(|version| (version, true))\n             .unwrap_or_default(); // `is_present` defaults to `false` here.\n \n-        // Miri is nightly-only; never ship it for other trains.\n-        if pkgname == \"miri-preview\" && self.rust_release != \"nightly\" {\n+        // Never ship nightly-only components for other trains.\n+        if self.rust_release != \"nightly\" && NIGHTLY_ONLY_COMPONENTS.contains(&pkgname) {\n             is_present = false; // Pretend the component is entirely missing.\n         }\n \n@@ -671,6 +688,9 @@ impl Builder {\n             RustSrc => format!(\"rust-src-{}.tar.gz\", self.rust_release),\n             Cargo => format!(\"cargo-{}-{}.tar.gz\", self.cargo_release, target),\n             Rls => format!(\"rls-{}-{}.tar.gz\", self.rls_release, target),\n+            RustAnalyzer => {\n+                format!(\"rust-analyzer-{}-{}.tar.gz\", self.rust_analyzer_release, target)\n+            }\n             Clippy => format!(\"clippy-{}-{}.tar.gz\", self.clippy_release, target),\n             Rustfmt => format!(\"rustfmt-{}-{}.tar.gz\", self.rustfmt_release, target),\n             LlvmTools => format!(\"llvm-tools-{}-{}.tar.gz\", self.llvm_tools_release, target),\n@@ -684,6 +704,7 @@ impl Builder {\n         match PkgType::from_component(component) {\n             Cargo => &self.cargo_version,\n             Rls => &self.rls_version,\n+            RustAnalyzer => &self.rust_analyzer_version,\n             Clippy => &self.clippy_version,\n             Rustfmt => &self.rustfmt_version,\n             LlvmTools => &self.llvm_tools_version,\n@@ -697,6 +718,7 @@ impl Builder {\n         match PkgType::from_component(component) {\n             Cargo => &self.cargo_git_commit_hash,\n             Rls => &self.rls_git_commit_hash,\n+            RustAnalyzer => &self.rust_analyzer_git_commit_hash,\n             Clippy => &self.clippy_git_commit_hash,\n             Rustfmt => &self.rustfmt_git_commit_hash,\n             LlvmTools => &self.llvm_tools_git_commit_hash,"}]}