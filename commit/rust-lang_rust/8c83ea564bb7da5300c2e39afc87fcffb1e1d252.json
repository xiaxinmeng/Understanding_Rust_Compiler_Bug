{"sha": "8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjODNlYTU2NGJiN2RhNTMwMGMyZTM5YWZjODdmY2ZmYjFlMWQyNTI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T08:59:06Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T08:59:06Z"}, "message": "More thorough check for (.. 10).x in pretty-printer\n\nCloses #919", "tree": {"sha": "b834c8c8460aacf31f568f2c0e1c09d8f7ee6000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b834c8c8460aacf31f568f2c0e1c09d8f7ee6000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "html_url": "https://github.com/rust-lang/rust/commit/8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c83ea564bb7da5300c2e39afc87fcffb1e1d252/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0d322ac9378ddda52a1c7112cd6809f1bbffa6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d322ac9378ddda52a1c7112cd6809f1bbffa6e", "html_url": "https://github.com/rust-lang/rust/commit/d0d322ac9378ddda52a1c7112cd6809f1bbffa6e"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "8ac8ccbdba21a53afb0da9057be479fb4efdd9e9", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8c83ea564bb7da5300c2e39afc87fcffb1e1d252/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c83ea564bb7da5300c2e39afc87fcffb1e1d252/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "patch": "@@ -882,13 +882,10 @@ fn print_expr(s: ps, expr: @ast::expr) {\n       }\n       ast::expr_field(expr, id) {\n         // Deal with '10.x'\n-        alt expr.node {\n-          ast::expr_lit(@{node: ast::lit_int(_), _}) {\n+        if ends_in_lit_int(expr) {\n             popen(s); print_expr(s, expr); pclose(s);\n-          }\n-          _ {\n+        } else {\n             print_expr_parens_if_unary_or_ret(s, expr);\n-          }\n         }\n         word(s.s, \".\");\n         word(s.s, id);\n@@ -1638,6 +1635,25 @@ fn ast_ty_constrs_str(constrs: [@ast::ty_constr]) -> str {\n     ret s;\n }\n \n+fn ends_in_lit_int(ex: @ast::expr) -> bool {\n+    alt ex.node {\n+      ast::expr_lit(@{node: ast::lit_int(_), _}) { true }\n+      ast::expr_binary(_, _, sub) | ast::expr_unary(_, sub) |\n+      ast::expr_ternary(_, _, sub) | ast::expr_move(_, sub) |\n+      ast::expr_copy(sub) | ast::expr_assign(_, sub) | ast::expr_be(sub) |\n+      ast::expr_assign_op(_, _, sub) | ast::expr_swap(_, sub) |\n+      ast::expr_log(_, sub) | ast::expr_assert(sub) | ast::expr_uniq(sub) |\n+      ast::expr_check(_, sub) { ends_in_lit_int(sub) }\n+      ast::expr_fail(osub) | ast::expr_ret(osub) | ast::expr_put(osub) {\n+        alt osub {\n+          some(ex) { ends_in_lit_int(ex) }\n+          _ { false }\n+        }\n+      }\n+      _ { false }\n+    }\n+}\n+\n //\n // Local Variables:\n // mode: rust"}]}