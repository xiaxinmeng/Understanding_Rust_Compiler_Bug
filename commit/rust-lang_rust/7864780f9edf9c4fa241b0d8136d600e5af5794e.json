{"sha": "7864780f9edf9c4fa241b0d8136d600e5af5794e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NjQ3ODBmOWVkZjljNGZhMjQxYjBkODEzNmQ2MDBlNWFmNTc5NGU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-11-09T01:15:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-09T01:15:05Z"}, "message": "Rollup merge of #55753 - ljedrz:borrow_set_insert_clone, r=oli-obk\n\nborrow_set: remove a helper function and a clone it uses\n\nThis clone doesn't seem necessary.\n\nr? @oli-obk", "tree": {"sha": "d5ebc0a75e457fd9ca1023728acc18f57fd61179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5ebc0a75e457fd9ca1023728acc18f57fd61179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7864780f9edf9c4fa241b0d8136d600e5af5794e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb5N+ZCRBK7hj4Ov3rIwAAdHIIAKwzQMhKxMdnMgmCAeCw4IOu\ni4se1sDRksDigvbN4McHE5DV8ovqXrbA6ILF2YLxwwSszYvu1GN7XPzO4iV4Phnm\nFdYykWmsYDJT+pDGYnEjffdpFvuTIinnhmvT28yaLXj0/A+DIGmRRL15KRrtjyhK\n0Hzy83kOkFPPr/t7dV9Hg62uDYMwnGljRmz6ky2BpmUItbvxNEHyIcPlMufoA+tJ\nF+0W6rVRfd1su9GRDHXUCHw47wmiIf6MmIq+qwwFaIVggv6VnhQLsBQ8p/P7Gy/Z\nWOU7a6nFE7lAqxHgsVaLFw4bO8IBRjxBy0mgZYoLAomcI5f797E/OF7XFRt2zTw=\n=JsMY\n-----END PGP SIGNATURE-----\n", "payload": "tree d5ebc0a75e457fd9ca1023728acc18f57fd61179\nparent 792476516f3faeafb873b63e00acebab70ab001d\nparent 2d7426bb5a55fa27555de658fca529d8b205ef66\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1541726105 -0700\ncommitter GitHub <noreply@github.com> 1541726105 -0700\n\nRollup merge of #55753 - ljedrz:borrow_set_insert_clone, r=oli-obk\n\nborrow_set: remove a helper function and a clone it uses\n\nThis clone doesn't seem necessary.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7864780f9edf9c4fa241b0d8136d600e5af5794e", "html_url": "https://github.com/rust-lang/rust/commit/7864780f9edf9c4fa241b0d8136d600e5af5794e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7864780f9edf9c4fa241b0d8136d600e5af5794e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "792476516f3faeafb873b63e00acebab70ab001d", "url": "https://api.github.com/repos/rust-lang/rust/commits/792476516f3faeafb873b63e00acebab70ab001d", "html_url": "https://github.com/rust-lang/rust/commit/792476516f3faeafb873b63e00acebab70ab001d"}, {"sha": "2d7426bb5a55fa27555de658fca529d8b205ef66", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7426bb5a55fa27555de658fca529d8b205ef66", "html_url": "https://github.com/rust-lang/rust/commit/2d7426bb5a55fa27555de658fca529d8b205ef66"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "c432826dca865de3a8cba3850b947966b462a1b1", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7864780f9edf9c4fa241b0d8136d600e5af5794e/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7864780f9edf9c4fa241b0d8136d600e5af5794e/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=7864780f9edf9c4fa241b0d8136d600e5af5794e", "patch": "@@ -21,7 +21,6 @@ use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::bit_set::BitSet;\n use std::fmt;\n-use std::hash::Hash;\n use std::ops::Index;\n \n crate struct BorrowSet<'tcx> {\n@@ -233,21 +232,13 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for GatherBorrows<'a, 'gcx, 'tcx> {\n \n             self.insert_as_pending_if_two_phase(location, &assigned_place, region, kind, idx);\n \n-            insert(&mut self.region_map, &region, idx);\n+            self.region_map.entry(region).or_default().insert(idx);\n             if let Some(local) = borrowed_place.root_local() {\n-                insert(&mut self.local_map, &local, idx);\n+                self.local_map.entry(local).or_default().insert(idx);\n             }\n         }\n \n-        return self.super_assign(block, assigned_place, rvalue, location);\n-\n-        fn insert<'a, K, V>(map: &'a mut FxHashMap<K, FxHashSet<V>>, k: &K, v: V)\n-        where\n-            K: Clone + Eq + Hash,\n-            V: Eq + Hash,\n-        {\n-            map.entry(k.clone()).or_default().insert(v);\n-        }\n+        self.super_assign(block, assigned_place, rvalue, location)\n     }\n \n     fn visit_place("}]}