{"sha": "eccd2ede3c1b11ddcdde7929e049c4773df690ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjY2QyZWRlM2MxYjExZGRjZGRlNzkyOWUwNDljNDc3M2RmNjkwYWU=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2018-06-07T05:11:37Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2018-06-07T05:11:37Z"}, "message": "Use Ord::cmp for auto traits since stable sort not needed", "tree": {"sha": "5533e92562788b168c2c5ce24fe050caf4c5987f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5533e92562788b168c2c5ce24fe050caf4c5987f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eccd2ede3c1b11ddcdde7929e049c4773df690ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eccd2ede3c1b11ddcdde7929e049c4773df690ae", "html_url": "https://github.com/rust-lang/rust/commit/eccd2ede3c1b11ddcdde7929e049c4773df690ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eccd2ede3c1b11ddcdde7929e049c4773df690ae/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ff9fa9c95b618605fad27bd752486c6259187b", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ff9fa9c95b618605fad27bd752486c6259187b", "html_url": "https://github.com/rust-lang/rust/commit/86ff9fa9c95b618605fad27bd752486c6259187b"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "da98dc5d14b4614956de77cb982f0fc804b71ebf", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eccd2ede3c1b11ddcdde7929e049c4773df690ae/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccd2ede3c1b11ddcdde7929e049c4773df690ae/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=eccd2ede3c1b11ddcdde7929e049c4773df690ae", "patch": "@@ -30,7 +30,7 @@ use util::common::ErrorReported;\n use util::nodemap::{FxHashSet, FxHashMap};\n use errors::FatalError;\n \n-use std::cmp::Ordering;\n+// use std::cmp::Ordering;\n use std::iter;\n use syntax::ast;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n@@ -646,7 +646,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                                             &mut vec![]);\n         }\n \n-        let (auto_traits, trait_bounds) = split_auto_traits(tcx, &trait_bounds[1..]);\n+        let (mut auto_traits, trait_bounds) = split_auto_traits(tcx, &trait_bounds[1..]);\n \n         if !trait_bounds.is_empty() {\n             let b = &trait_bounds[0];\n@@ -708,15 +708,13 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n         }\n \n         // Dedup auto traits so that `dyn Trait + Send + Send` is the same as `dyn Trait + Send`.\n-        let mut auto_traits =\n-            auto_traits.into_iter().map(ty::ExistentialPredicate::AutoTrait).collect::<Vec<_>>();\n-        auto_traits.sort_by(|a, b| a.cmp(tcx, b));\n-        auto_traits.dedup_by(|a, b| (&*a).cmp(tcx, b) == Ordering::Equal);\n+        auto_traits.sort();\n+        auto_traits.dedup();\n \n         // skip_binder is okay, because the predicates are re-bound.\n         let mut v =\n             iter::once(ty::ExistentialPredicate::Trait(*existential_principal.skip_binder()))\n-            .chain(auto_traits.into_iter())\n+            .chain(auto_traits.into_iter().map(ty::ExistentialPredicate::AutoTrait))\n             .chain(existential_projections\n                    .map(|x| ty::ExistentialPredicate::Projection(*x.skip_binder())))\n             .collect::<AccumulateVec<[_; 8]>>();"}]}