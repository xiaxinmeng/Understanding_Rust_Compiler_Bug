{"sha": "10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZTI4OWUxOTEzMWI1MzM5ZWYxYTJlMDAxYWUwY2ZjZjMzMGMxYjA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-16T12:43:36Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-16T12:44:40Z"}, "message": "Make debuginfo::UniqueTypeId use 128 bit hash.", "tree": {"sha": "16d51e7364642dc9235b20858221e519c26f495d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16d51e7364642dc9235b20858221e519c26f495d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "html_url": "https://github.com/rust-lang/rust/commit/10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10e289e19131b5339ef1a2e001ae0cfcf330c1b0/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ebad4b63ce2ccaa6051b60031a6597ee4468ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ebad4b63ce2ccaa6051b60031a6597ee4468ec", "html_url": "https://github.com/rust-lang/rust/commit/74ebad4b63ce2ccaa6051b60031a6597ee4468ec"}], "stats": {"total": 38, "additions": 3, "deletions": 35}, "files": [{"sha": "831e113016fd903728c5fe3a8c54301dea745f43", "filename": "src/librustc_data_structures/stable_hasher.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/10e289e19131b5339ef1a2e001ae0cfcf330c1b0/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e289e19131b5339ef1a2e001ae0cfcf330c1b0/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fstable_hasher.rs?ref=10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "patch": "@@ -61,37 +61,6 @@ impl<W: StableHasherResult> StableHasher<W> {\n     }\n }\n \n-impl StableHasherResult for [u8; 20] {\n-    fn finish(hasher: StableHasher<Self>) -> Self {\n-        let (_0, _1) = hasher.finalize();\n-\n-        [\n-            (_0 >>  0) as u8,\n-            (_0 >>  8) as u8,\n-            (_0 >> 16) as u8,\n-            (_0 >> 24) as u8,\n-            (_0 >> 32) as u8,\n-            (_0 >> 40) as u8,\n-            (_0 >> 48) as u8,\n-            (_0 >> 56) as u8,\n-\n-            17,\n-            33,\n-            47,\n-            3,\n-\n-            (_1 >>  0) as u8,\n-            (_1 >>  8) as u8,\n-            (_1 >> 16) as u8,\n-            (_1 >> 24) as u8,\n-            (_1 >> 32) as u8,\n-            (_1 >> 40) as u8,\n-            (_1 >> 48) as u8,\n-            (_1 >> 56) as u8,\n-        ]\n-    }\n-}\n-\n impl StableHasherResult for u128 {\n     fn finish(hasher: StableHasher<Self>) -> Self {\n         let (_0, _1) = hasher.finalize();"}, {"sha": "201d786776455483562ae6dd23976c3d0b3edf3e", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/10e289e19131b5339ef1a2e001ae0cfcf330c1b0/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e289e19131b5339ef1a2e001ae0cfcf330c1b0/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=10e289e19131b5339ef1a2e001ae0cfcf330c1b0", "patch": "@@ -30,7 +30,7 @@ use rustc::ty::fold::TypeVisitor;\n use rustc::ty::subst::Substs;\n use rustc::ty::util::TypeIdHasher;\n use rustc::hir;\n-use rustc_data_structures::ToHex;\n+use rustc::ich::Fingerprint;\n use {type_of, machine, monomorphize};\n use common::{self, CrateContext};\n use type_::Type;\n@@ -146,11 +146,10 @@ impl<'tcx> TypeMap<'tcx> {\n \n         // The hasher we are using to generate the UniqueTypeId. We want\n         // something that provides more than the 64 bits of the DefaultHasher.\n-\n-        let mut type_id_hasher = TypeIdHasher::<[u8; 20]>::new(cx.tcx());\n+        let mut type_id_hasher = TypeIdHasher::<Fingerprint>::new(cx.tcx());\n         type_id_hasher.visit_ty(type_);\n-\n         let unique_type_id = type_id_hasher.finish().to_hex();\n+\n         let key = self.unique_id_interner.intern(&unique_type_id);\n         self.type_to_unique_id.insert(type_, UniqueTypeId(key));\n "}]}