{"sha": "27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZTg2M2IzZGYyOGFlYjliMWNmZTY5M2IxYTZkMDlhMjg5YjdhZDI=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T03:16:03Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T12:54:49Z"}, "message": "functions marked with attr are not const", "tree": {"sha": "db8dd2dc549d8ca058778bb8fd38f7cf510bd870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db8dd2dc549d8ca058778bb8fd38f7cf510bd870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDpmJkACgkQZSV3NIU3\nbZL2ng/8CmbWSE3FGHzg8QOMckdXWcs7nkkWsdrqQfD3aqqrEsmuHmhPM25lrQzC\no7zuMy7QWRpQ4lXmyUfrQUSeJWRix2rAM16xcm3IWF3BiaBbIXshikV2HtGgtEbA\n0tNERgsaeWQMdX5nlVzUJIjavd8k4UpwqcaORtK9M/h0BJX83oQsKllB+juioFp0\nQBIGMNLluo5Y9DHipleKmUs6rMIA211xvckCRFaNMO9YI/xJHeCdieJyXWvBAjdS\n7M/K93J5oTb8GMbUTHIu3Y19aqwzPgKMhkxlFzwVkqWGaO+oXy5QHnQwx1Y5pyLz\ndMqApfJpQHpa7Wa1al+PnVg/3OSTiIJDlwUUoXj6E2HvxThwtn3G/415JiX/sOQr\nmN+ir0PeOSpWBXcs+6rA2VvuFSBjdouIq5qPwMK6R22l5V/LZNlaz5kW9SFIN1el\nAT4qAfXm37yvhHiCjUtHr+mUIdqC0W/Spn8O29uGOVGIL2lyGFVHGFyKebnUI8JA\nk/RVIgB8AWYw4dVAIanVokbKfIQ7/8+21h5y74B8Nw9r7XN3IK8uuwRfym4iMy7M\nO3Ary68l8OGiMAnKV4wBVhxWIoh5bUlo84a0TuJ7lS5qwss8EBgANa01LO4XY7og\n5ZbACoqfD4BYQJmVUVWohV2VXFZQKNqLkHTaeYqE8/YlaPdk6M8=\n=xkRm\n-----END PGP SIGNATURE-----", "payload": "tree db8dd2dc549d8ca058778bb8fd38f7cf510bd870\nparent 89d190f090c06cca830831158fc052f902ddc1df\nauthor Deadbeef <ent3rm4n@gmail.com> 1625886963 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1625921689 +0800\n\nfunctions marked with attr are not const\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "html_url": "https://github.com/rust-lang/rust/commit/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89d190f090c06cca830831158fc052f902ddc1df", "url": "https://api.github.com/repos/rust-lang/rust/commits/89d190f090c06cca830831158fc052f902ddc1df", "html_url": "https://github.com/rust-lang/rust/commit/89d190f090c06cca830831158fc052f902ddc1df"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "f37ccf1787dd67a17ea9f2d7660fe2b2b7495405", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "patch": "@@ -18,7 +18,7 @@ use rustc_index::vec::Idx;\n use rustc_span::def_id::StableCrateId;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::Spanned;\n-use rustc_span::symbol::{kw, Ident, Symbol};\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n@@ -457,6 +457,9 @@ impl<'hir> Map<'hir> {\n     /// Returns the `ConstContext` of the body associated with this `LocalDefId`.\n     ///\n     /// Panics if `LocalDefId` does not have an associated body.\n+    ///\n+    /// This should only be used for determining the context of a body, a return\n+    /// value of `Some` does not always suggest that the owner of the body is `const`.\n     pub fn body_const_context(&self, did: LocalDefId) -> Option<ConstContext> {\n         let hir_id = self.local_def_id_to_hir_id(did);\n         let ccx = match self.body_owner_kind(hir_id) {\n@@ -465,6 +468,11 @@ impl<'hir> Map<'hir> {\n \n             BodyOwnerKind::Fn if self.tcx.is_constructor(did.to_def_id()) => return None,\n             BodyOwnerKind::Fn if self.tcx.is_const_fn_raw(did.to_def_id()) => ConstContext::ConstFn,\n+            BodyOwnerKind::Fn\n+                if self.tcx.has_attr(did.to_def_id(), sym::default_method_body_is_const) =>\n+            {\n+                ConstContext::ConstFn\n+            }\n             BodyOwnerKind::Fn | BodyOwnerKind::Closure => return None,\n         };\n "}, {"sha": "1ff8df0884d10d035f709f35e9dcd207d654043b", "filename": "compiler/rustc_mir/src/const_eval/fn_queries.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ffn_queries.rs?ref=27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "patch": "@@ -60,9 +60,6 @@ fn is_const_fn_raw(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n             return true;\n         }\n \n-        if tcx.has_attr(def_id, sym::default_method_body_is_const) {\n-            return true;\n-        }\n         // If the function itself is not annotated with `const`, it may still be a `const fn`\n         // if it resides in a const trait impl.\n         is_parent_const_impl_raw(tcx, hir_id)"}]}