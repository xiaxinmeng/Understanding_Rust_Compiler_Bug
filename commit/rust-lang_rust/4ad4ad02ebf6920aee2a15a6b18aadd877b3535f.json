{"sha": "4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZDRhZDAyZWJmNjkyMGFlZTJhMTVhNmIxOGFhZGQ4NzdiMzUzNWY=", "commit": {"author": {"name": "Colin Finck", "email": "colin.finck@rwth-aachen.de", "date": "2018-07-31T07:49:10Z"}, "committer": {"name": "Colin Finck", "email": "colin.finck@rwth-aachen.de", "date": "2018-07-31T07:49:10Z"}, "message": "Fix coding style.", "tree": {"sha": "ee539f5123f608e40d1046c855ddd019a3ba0a6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee539f5123f608e40d1046c855ddd019a3ba0a6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "html_url": "https://github.com/rust-lang/rust/commit/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f/comments", "author": {"login": "ColinFinck", "id": 8110912, "node_id": "MDQ6VXNlcjgxMTA5MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/8110912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinFinck", "html_url": "https://github.com/ColinFinck", "followers_url": "https://api.github.com/users/ColinFinck/followers", "following_url": "https://api.github.com/users/ColinFinck/following{/other_user}", "gists_url": "https://api.github.com/users/ColinFinck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinFinck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinFinck/subscriptions", "organizations_url": "https://api.github.com/users/ColinFinck/orgs", "repos_url": "https://api.github.com/users/ColinFinck/repos", "events_url": "https://api.github.com/users/ColinFinck/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinFinck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ColinFinck", "id": 8110912, "node_id": "MDQ6VXNlcjgxMTA5MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/8110912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinFinck", "html_url": "https://github.com/ColinFinck", "followers_url": "https://api.github.com/users/ColinFinck/followers", "following_url": "https://api.github.com/users/ColinFinck/following{/other_user}", "gists_url": "https://api.github.com/users/ColinFinck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinFinck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinFinck/subscriptions", "organizations_url": "https://api.github.com/users/ColinFinck/orgs", "repos_url": "https://api.github.com/users/ColinFinck/repos", "events_url": "https://api.github.com/users/ColinFinck/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinFinck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e50f4eeaadcea0c1dcc28e15dfe91dd38393a6da", "url": "https://api.github.com/repos/rust-lang/rust/commits/e50f4eeaadcea0c1dcc28e15dfe91dd38393a6da", "html_url": "https://github.com/rust-lang/rust/commit/e50f4eeaadcea0c1dcc28e15dfe91dd38393a6da"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "8e30b0d5d5a17c23371e0945fbaf3872754afa27", "filename": "src/liballoc_system/lib.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f/src%2Fliballoc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f/src%2Fliballoc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_system%2Flib.rs?ref=4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "patch": "@@ -174,7 +174,10 @@ mod platform {\n         }\n     }\n \n-    #[cfg(any(target_os = \"android\", target_os = \"hermit\", target_os = \"redox\", target_os = \"solaris\"))]\n+    #[cfg(any(target_os = \"android\",\n+              target_os = \"hermit\",\n+              target_os = \"redox\",\n+              target_os = \"solaris\"))]\n     #[inline]\n     unsafe fn aligned_malloc(layout: &Layout) -> *mut u8 {\n         // On android we currently target API level 9 which unfortunately\n@@ -197,7 +200,10 @@ mod platform {\n         libc::memalign(layout.align(), layout.size()) as *mut u8\n     }\n \n-    #[cfg(not(any(target_os = \"android\", target_os = \"hermit\", target_os = \"redox\", target_os = \"solaris\")))]\n+    #[cfg(not(any(target_os = \"android\",\n+                  target_os = \"hermit\",\n+                  target_os = \"redox\",\n+                  target_os = \"solaris\")))]\n     #[inline]\n     unsafe fn aligned_malloc(layout: &Layout) -> *mut u8 {\n         let mut out = ptr::null_mut();"}, {"sha": "2007da7b1f6bec59b502a35fcf4cd2b80c9fbdf2", "filename": "src/libstd/sys/unix/condvar.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad4ad02ebf6920aee2a15a6b18aadd877b3535f/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs?ref=4ad4ad02ebf6920aee2a15a6b18aadd877b3535f", "patch": "@@ -85,7 +85,10 @@ impl Condvar {\n     // where we configure condition variable to use monotonic clock (instead of\n     // default system clock). This approach avoids all problems that result\n     // from changes made to the system time.\n-    #[cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"android\", target_os = \"hermit\")))]\n+    #[cfg(not(any(target_os = \"macos\",\n+                  target_os = \"ios\",\n+                  target_os = \"android\",\n+                  target_os = \"hermit\")))]\n     pub unsafe fn wait_timeout(&self, mutex: &Mutex, dur: Duration) -> bool {\n         use mem;\n "}]}