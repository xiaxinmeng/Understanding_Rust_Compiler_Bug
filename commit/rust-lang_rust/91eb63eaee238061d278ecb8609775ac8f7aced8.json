{"sha": "91eb63eaee238061d278ecb8609775ac8f7aced8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZWI2M2VhZWUyMzgwNjFkMjc4ZWNiODYwOTc3NWFjOGY3YWNlZDg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T22:06:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T22:07:04Z"}, "message": "rt: Add a stack check to upcall_get_type_desc", "tree": {"sha": "8a42a6cb705bcde49f17c9d3a114a36bf1d8bbf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a42a6cb705bcde49f17c9d3a114a36bf1d8bbf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91eb63eaee238061d278ecb8609775ac8f7aced8", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91eb63eaee238061d278ecb8609775ac8f7aced8", "html_url": "https://github.com/rust-lang/rust/commit/91eb63eaee238061d278ecb8609775ac8f7aced8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91eb63eaee238061d278ecb8609775ac8f7aced8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f7bc90514c650fca4947835998458c56439cf33", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7bc90514c650fca4947835998458c56439cf33", "html_url": "https://github.com/rust-lang/rust/commit/2f7bc90514c650fca4947835998458c56439cf33"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "85a6178ded75756f7f56bde2333d18d9c7ed74a4", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=91eb63eaee238061d278ecb8609775ac8f7aced8", "patch": "@@ -121,6 +121,17 @@ rust_kernel::log(uint32_t level, char const *fmt, ...) {\n     va_end(args);\n }\n \n+void\n+rust_kernel::fatal(char const *fmt, ...) {\n+    char buf[BUF_BYTES];\n+    va_list args;\n+    va_start(args, fmt);\n+    vsnprintf(buf, sizeof(buf), fmt, args);\n+    _log.trace_ln(NULL, (uint32_t)0, buf);\n+    exit(1);\n+    va_end(args);\n+}\n+\n void\n rust_kernel::pump_message_queues() {\n     for (size_t i = 0; i < message_queues.length(); i++) {"}, {"sha": "f61935c8c48ccffa6260856f368d4a87298c3617", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=91eb63eaee238061d278ecb8609775ac8f7aced8", "patch": "@@ -106,6 +106,7 @@ class rust_kernel : public rust_thread {\n \n     void log_all_scheduler_state();\n     void log(uint32_t level, char const *fmt, ...);\n+    void fatal(char const *fmt, ...);\n     virtual ~rust_kernel();\n \n     void *malloc(size_t size);"}, {"sha": "d8ff9236aa6c91e38727a84b781b08fc456a026f", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/91eb63eaee238061d278ecb8609775ac8f7aced8/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=91eb63eaee238061d278ecb8609775ac8f7aced8", "patch": "@@ -21,6 +21,22 @@\n extern \"C\" CDECL char const *\n str_buf(rust_task *task, rust_str *s);\n \n+#ifdef __i386__\n+void\n+check_stack(rust_task *task) {\n+    void *esp;\n+    asm volatile(\"movl %%esp,%0\" : \"=r\" (esp));\n+    if (esp < task->stk->data)\n+        task->kernel->fatal(\"Out of stack space, sorry\");\n+}\n+#else\n+#warning \"Stack checks are not supported on this architecture\"\n+void\n+check_stack(rust_task *task) {\n+    // TODO\n+}\n+#endif\n+\n extern \"C\" void\n upcall_grow_task(rust_task *task, size_t n_frame_bytes) {\n     I(task->sched, false);\n@@ -463,6 +479,7 @@ upcall_get_type_desc(rust_task *task,\n                      size_t align,\n                      size_t n_descs,\n                      type_desc const **descs) {\n+    check_stack(task);\n     LOG_UPCALL_ENTRY(task);\n     scoped_lock with(task->kernel->scheduler_lock);\n     LOG(task, cache, \"upcall get_type_desc with size=%\" PRIdPTR"}]}