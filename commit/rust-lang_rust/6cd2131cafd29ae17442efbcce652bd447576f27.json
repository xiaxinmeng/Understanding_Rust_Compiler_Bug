{"sha": "6cd2131cafd29ae17442efbcce652bd447576f27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZDIxMzFjYWZkMjlhZTE3NDQyZWZiY2NlNjUyYmQ0NDc1NzZmMjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T09:58:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T09:58:41Z"}, "message": "Rename Rename", "tree": {"sha": "4ceffb487f853772eeef77948bb7221949640a3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ceffb487f853772eeef77948bb7221949640a3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd2131cafd29ae17442efbcce652bd447576f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd2131cafd29ae17442efbcce652bd447576f27", "html_url": "https://github.com/rust-lang/rust/commit/6cd2131cafd29ae17442efbcce652bd447576f27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd2131cafd29ae17442efbcce652bd447576f27/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d09e5ed618b9b9d6e00b57b24db0b9c8a8c12d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d09e5ed618b9b9d6e00b57b24db0b9c8a8c12d7", "html_url": "https://github.com/rust-lang/rust/commit/7d09e5ed618b9b9d6e00b57b24db0b9c8a8c12d7"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "c05027eff1b30f8060b580638e1879988618f50d", "filename": "crates/ra_assists/src/utils/insert_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -215,7 +215,7 @@ fn walk_use_tree_for_best_action(\n     let prev_len = current_path_segments.len();\n \n     let tree_list = current_use_tree.use_tree_list();\n-    let alias = current_use_tree.alias();\n+    let alias = current_use_tree.rename();\n \n     let path = match current_use_tree.path() {\n         Some(path) => path,"}, {"sha": "6c58c637819fc4409f45dfaa42a9f54aba4f2168", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -501,7 +501,7 @@ impl Ctx {\n         extern_crate: &ast::ExternCrateItem,\n     ) -> Option<FileItemTreeId<ExternCrate>> {\n         let path = ModPath::from_name_ref(&extern_crate.name_ref()?);\n-        let alias = extern_crate.alias().map(|a| {\n+        let alias = extern_crate.rename().map(|a| {\n             a.name().map(|it| it.as_name()).map_or(ImportAlias::Underscore, ImportAlias::Alias)\n         });\n         let visibility = self.lower_visibility(extern_crate);"}, {"sha": "794be45e894c88bf08fbc70eeaee6dfe359d521b", "filename": "crates/ra_hir_def/src/path/lower/lower_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -31,7 +31,7 @@ pub(crate) fn lower_use_tree(\n             lower_use_tree(prefix.clone(), child_tree, hygiene, cb);\n         }\n     } else {\n-        let alias = tree.alias().map(|a| {\n+        let alias = tree.rename().map(|a| {\n             a.name().map(|it| it.as_name()).map_or(ImportAlias::Underscore, ImportAlias::Alias)\n         });\n         let is_glob = tree.star_token().is_some();"}, {"sha": "1464c5f2a2785b20a53f541052b27620d17a0e1d", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -119,7 +119,7 @@ pub fn classify_name(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Option\n \n     match_ast! {\n         match parent {\n-            ast::Alias(it) => {\n+            ast::Rename(it) => {\n                 let use_tree = it.syntax().parent().and_then(ast::UseTree::cast)?;\n                 let path = use_tree.path()?;\n                 let path_segment = path.segment()?;"}, {"sha": "7dfac2813e2c812b37d8062279e10ea7829d1e99", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -224,7 +224,7 @@ fn opt_alias(p: &mut Parser) {\n         if !p.eat(T![_]) {\n             name(p);\n         }\n-        m.complete(p, ALIAS);\n+        m.complete(p, RENAME);\n     }\n }\n "}, {"sha": "f14b60b654a35c3991ac1b204efee27a6fbb0b0e", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -221,7 +221,7 @@ pub enum SyntaxKind {\n     PATH,\n     PATH_SEGMENT,\n     LITERAL,\n-    ALIAS,\n+    RENAME,\n     VISIBILITY,\n     WHERE_CLAUSE,\n     WHERE_PRED,"}, {"sha": "99f4726bcc9e879459cfd3f71668c899f2bd78ac", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -318,7 +318,7 @@ impl ast::UseTree {\n             None => return self.clone(),\n         };\n         let use_tree =\n-            make::use_tree(suffix, self.use_tree_list(), self.alias(), self.star_token().is_some());\n+            make::use_tree(suffix, self.use_tree_list(), self.rename(), self.star_token().is_some());\n         let nested = make::use_tree_list(iter::once(use_tree));\n         return make::use_tree(prefix.clone(), Some(nested), None, false);\n "}, {"sha": "01e8111b04038c09c796985e2e3d13c3d8e0aecf", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -75,7 +75,7 @@ impl ExternCrateItem {\n     pub fn crate_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![crate]) }\n     pub fn name_ref(&self) -> Option<NameRef> { support::child(&self.syntax) }\n     pub fn self_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![self]) }\n-    pub fn alias(&self) -> Option<Alias> { support::child(&self.syntax) }\n+    pub fn rename(&self) -> Option<Rename> { support::child(&self.syntax) }\n     pub fn semicolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![;]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -1178,7 +1178,7 @@ impl UseTree {\n     pub fn coloncolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![::]) }\n     pub fn star_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![*]) }\n     pub fn use_tree_list(&self) -> Option<UseTreeList> { support::child(&self.syntax) }\n-    pub fn alias(&self) -> Option<Alias> { support::child(&self.syntax) }\n+    pub fn rename(&self) -> Option<Rename> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct UseTreeList {\n@@ -1190,11 +1190,11 @@ impl UseTreeList {\n     pub fn r_curly_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T!['}']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct Alias {\n+pub struct Rename {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl ast::NameOwner for Alias {}\n-impl Alias {\n+impl ast::NameOwner for Rename {}\n+impl Rename {\n     pub fn as_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![as]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -2683,8 +2683,8 @@ impl AstNode for UseTreeList {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for Alias {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == ALIAS }\n+impl AstNode for Rename {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == RENAME }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -4040,7 +4040,7 @@ impl std::fmt::Display for UseTreeList {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for Alias {\n+impl std::fmt::Display for Rename {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }"}, {"sha": "2b05ed2d4a2b34efc9ae3875adb8697c6158f72b", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -37,7 +37,7 @@ fn path_from_text(text: &str) -> ast::Path {\n pub fn use_tree(\n     path: ast::Path,\n     use_tree_list: Option<ast::UseTreeList>,\n-    alias: Option<ast::Alias>,\n+    alias: Option<ast::Rename>,\n     add_star: bool,\n ) -> ast::UseTree {\n     let mut buf = \"use \".to_string();"}, {"sha": "bcd92c3bcb192e95343f0b45ea27fe41ee6c055d", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -194,7 +194,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"PATH\",\n         \"PATH_SEGMENT\",\n         \"LITERAL\",\n-        \"ALIAS\",\n+        \"RENAME\",\n         \"VISIBILITY\",\n         \"WHERE_CLAUSE\",\n         \"WHERE_PRED\","}, {"sha": "76c070402fb45582d53ea16d6be63edc632bfe25", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6cd2131cafd29ae17442efbcce652bd447576f27/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/6cd2131cafd29ae17442efbcce652bd447576f27/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=6cd2131cafd29ae17442efbcce652bd447576f27", "patch": "@@ -396,16 +396,16 @@ UseItem =\n   Attr* Visibility? 'use' UseTree ';'\n \n UseTree =\n-  Path ('::' ('*' | UseTreeList))  Alias?\n+  Path ('::' ('*' | UseTreeList))  Rename?\n \n UseTreeList =\n   '{' UseTree* '}'\n \n-Alias =\n+Rename =\n   'as' Name\n \n ExternCrateItem =\n-  Attr* Visibility? 'extern' 'crate' (NameRef | 'self') Alias? ';'\n+  Attr* Visibility? 'extern' 'crate' (NameRef | 'self') Rename? ';'\n \n Path =\n   (qualifier:Path '::')? segment:PathSegment"}]}