{"sha": "61441cb12489faca4ee84f219b5ff9316befcb6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNDQxY2IxMjQ4OWZhY2E0ZWU4NGYyMTliNWZmOTMxNmJlZmNiNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-29T15:38:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-29T15:38:40Z"}, "message": "Auto merge of #31285 - Manishearth:rollup, r=Manishearth\n\n- Successful merges: #31252, #31256, #31264, #31269, #31272, #31275, #31276\n- Failed merges:", "tree": {"sha": "7759d1475a39564682eabaccfc7c2368d2202a0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7759d1475a39564682eabaccfc7c2368d2202a0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61441cb12489faca4ee84f219b5ff9316befcb6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61441cb12489faca4ee84f219b5ff9316befcb6c", "html_url": "https://github.com/rust-lang/rust/commit/61441cb12489faca4ee84f219b5ff9316befcb6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61441cb12489faca4ee84f219b5ff9316befcb6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebe92e55f7113c5e444c7b68802d296862cc51ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe92e55f7113c5e444c7b68802d296862cc51ef", "html_url": "https://github.com/rust-lang/rust/commit/ebe92e55f7113c5e444c7b68802d296862cc51ef"}, {"sha": "7a0e490bdd9a9c41a1293836e8bd826ddad90fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a0e490bdd9a9c41a1293836e8bd826ddad90fd0", "html_url": "https://github.com/rust-lang/rust/commit/7a0e490bdd9a9c41a1293836e8bd826ddad90fd0"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "efad43d25627d0e611e7a698e84befdfecdb0ba1", "filename": "mk/cfg/armv7s-apple-ios.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/mk%2Fcfg%2Farmv7s-apple-ios.mk", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/mk%2Fcfg%2Farmv7s-apple-ios.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farmv7s-apple-ios.mk?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -14,8 +14,8 @@ CFG_LIB_GLOB_armv7s-apple-ios = lib$(1)-*.a\n CFG_INSTALL_ONLY_RLIB_armv7s-apple-ios = 1\n CFG_STATIC_LIB_NAME_armv7s-apple-ios=lib$(1).a\n CFG_LIB_DSYM_GLOB_armv7s-apple-ios = lib$(1)-*.a.dSYM\n-CFG_JEMALLOC_CFLAGS_armv7s-apple-ios := -arch armv7s -mfpu=vfp4 $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios)\n-CFG_GCCISH_CFLAGS_armv7s-apple-ios := -Wall -Werror -g -fPIC $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios) -mfpu=vfp4 -arch armv7s\n+CFG_JEMALLOC_CFLAGS_armv7s-apple-ios := -arch armv7s $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios)\n+CFG_GCCISH_CFLAGS_armv7s-apple-ios := -Wall -Werror -g -fPIC $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios) -arch armv7s\n CFG_GCCISH_CXXFLAGS_armv7s-apple-ios := -fno-rtti $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios) -I$(CFG_IOS_SDK_armv7s-apple-ios)/usr/include/c++/4.2.1\n CFG_GCCISH_LINK_FLAGS_armv7s-apple-ios := -lpthread -syslibroot $(CFG_IOS_SDK_armv7s-apple-ios) -Wl,-no_compact_unwind\n CFG_GCCISH_DEF_FLAG_armv7s-apple-ios := -Wl,-exported_symbols_list,"}, {"sha": "cf49c711ba61fab9ea1baae078d16735473601e5", "filename": "mk/cfg/powerpc64-unknown-linux-gnu.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/mk%2Fcfg%2Fpowerpc64-unknown-linux-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/mk%2Fcfg%2Fpowerpc64-unknown-linux-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fpowerpc64-unknown-linux-gnu.mk?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -1,5 +1,5 @@\n # powerpc64-unknown-linux-gnu configuration\n-CROSS_PREFIX_powerpc64-unknown-linux-gnu=powerpc64-linux-gnu-\n+CROSS_PREFIX_powerpc64-unknown-linux-gnu=powerpc-linux-gnu-\n CC_powerpc64-unknown-linux-gnu=$(CC)\n CXX_powerpc64-unknown-linux-gnu=$(CXX)\n CPP_powerpc64-unknown-linux-gnu=$(CPP)"}, {"sha": "9c0538e6a3c7a141d81a95f71ee1a0202b137c0e", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -104,7 +104,7 @@ comments (`/** ... */`), are interpreted as a special syntax for `doc`\n `#[doc=\"...\"]` around the body of the comment, i.e., `/// Foo` turns into\n `#[doc=\"Foo\"]`.\n \n-Line comments beginning with `//!` and block comments `/*! ... !*/` are\n+Line comments beginning with `//!` and block comments `/*! ... */` are\n doc comments that apply to the parent of the comment, rather than the item\n that follows.  That is, they are equivalent to writing `#![doc=\"...\"]` around\n the body of the comment. `//!` comments are usually used to document"}, {"sha": "97c12043e763475a96cb5a509adf771abef0b53d", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -641,7 +641,7 @@ impl String {\n         Cow::Owned(res)\n     }\n \n-    /// Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\n+    /// Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\n     /// if `v` contains any invalid data.\n     ///\n     /// # Examples"}, {"sha": "91ff43c736de664f8d3cd351e148c09cdea6731e", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -1 +1 @@\n-Subproject commit af77843345ec6fc7e51113bfd692138d89024bc0\n+Subproject commit 91ff43c736de664f8d3cd351e148c09cdea6731e"}, {"sha": "9d5189cfd0b12f992f0766fdc0978ef883ba20f4", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -460,7 +460,7 @@ impl fmt::Display for clean::Type {\n                     [] => primitive_link(f, clean::PrimitiveTuple, \"()\"),\n                     [ref one] => {\n                         try!(primitive_link(f, clean::PrimitiveTuple, \"(\"));\n-                        try!(write!(f, \"{}\", one));\n+                        try!(write!(f, \"{},\", one));\n                         primitive_link(f, clean::PrimitiveTuple, \")\")\n                     }\n                     many => {"}, {"sha": "0faa1465c324ad4b4176ecc575adc19591edfcb4", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -15,7 +15,6 @@ use cmp;\n #[cfg(not(target_env = \"newlib\"))]\n use ffi::CString;\n use io;\n-use libc::PTHREAD_STACK_MIN;\n use libc;\n use mem;\n use ptr;\n@@ -339,14 +338,20 @@ fn min_stack_size(attr: *const libc::pthread_attr_t) -> usize {\n     });\n \n     match unsafe { __pthread_get_minstack } {\n-        None => PTHREAD_STACK_MIN as usize,\n+        None => libc::PTHREAD_STACK_MIN as usize,\n         Some(f) => unsafe { f(attr) as usize },\n     }\n }\n \n // No point in looking up __pthread_get_minstack() on non-glibc\n // platforms.\n-#[cfg(not(target_os = \"linux\"))]\n+#[cfg(all(not(target_os = \"linux\"),\n+          not(target_os = \"netbsd\")))]\n+fn min_stack_size(_: *const libc::pthread_attr_t) -> usize {\n+    libc::PTHREAD_STACK_MIN as usize\n+}\n+\n+#[cfg(target_os = \"netbsd\")]\n fn min_stack_size(_: *const libc::pthread_attr_t) -> usize {\n-    PTHREAD_STACK_MIN as usize\n+    2048 // just a guess\n }"}, {"sha": "6a0d7278b5e16481fd5c9c486730ee2cb846aabc", "filename": "src/test/run-pass/multi-panic.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmulti-panic.rs?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -17,7 +17,10 @@ fn main() {\n \n         panic!();\n     } else {\n-        let test = std::process::Command::new(&args[0]).arg(\"run_test\").output().unwrap();\n+        let test = std::process::Command::new(&args[0]).arg(\"run_test\")\n+                                                       .env_remove(\"RUST_BACKTRACE\")\n+                                                       .output()\n+                                                       .unwrap();\n         assert!(!test.status.success());\n         let err = String::from_utf8_lossy(&test.stderr);\n         let mut it = err.lines();"}, {"sha": "2269b38780df044dc71e847ef1825c2422948ac9", "filename": "src/test/rustdoc/tuples.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Ftest%2Frustdoc%2Ftuples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61441cb12489faca4ee84f219b5ff9316befcb6c/src%2Ftest%2Frustdoc%2Ftuples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftuples.rs?ref=61441cb12489faca4ee84f219b5ff9316befcb6c", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/fn.tuple0.html //pre 'pub fn tuple0(x: ())'\n+pub fn tuple0(x: ()) -> () { x }\n+// @has foo/fn.tuple1.html //pre 'pub fn tuple1(x: (i32,)) -> (i32,)'\n+pub fn tuple1(x: (i32,)) -> (i32,) { x }\n+// @has foo/fn.tuple2.html //pre 'pub fn tuple2(x: (i32, i32)) -> (i32, i32)'\n+pub fn tuple2(x: (i32, i32)) -> (i32, i32) { x }"}]}