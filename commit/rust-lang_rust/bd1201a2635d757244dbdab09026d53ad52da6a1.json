{"sha": "bd1201a2635d757244dbdab09026d53ad52da6a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMTIwMWEyNjM1ZDc1NzI0NGRiZGFiMDkwMjZkNTNhZDUyZGE2YTE=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-19T09:21:33Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-26T11:19:34Z"}, "message": "Fix inconsistent test names", "tree": {"sha": "4c3f38918a0c05a59100c201805b6b82d8fd8a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c3f38918a0c05a59100c201805b6b82d8fd8a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd1201a2635d757244dbdab09026d53ad52da6a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1201a2635d757244dbdab09026d53ad52da6a1", "html_url": "https://github.com/rust-lang/rust/commit/bd1201a2635d757244dbdab09026d53ad52da6a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd1201a2635d757244dbdab09026d53ad52da6a1/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "494bc8a30cf154eede2f22178c9a7ebc404302e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/494bc8a30cf154eede2f22178c9a7ebc404302e7", "html_url": "https://github.com/rust-lang/rust/commit/494bc8a30cf154eede2f22178c9a7ebc404302e7"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "2c3b25cd45e80552789e3f7c34de5cbf5fd7b43f", "filename": "tests/ui/linkedlist.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Flinkedlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Flinkedlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flinkedlist.rs?ref=bd1201a2635d757244dbdab09026d53ad52da6a1", "previous_filename": "tests/ui/dlist.rs"}, {"sha": "38ae71714d6624a638cdfc497e78c20667830e91", "filename": "tests/ui/linkedlist.stderr", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Flinkedlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Flinkedlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flinkedlist.stderr?ref=bd1201a2635d757244dbdab09026d53ad52da6a1", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:8:10\n+  --> $DIR/linkedlist.rs:8:10\n    |\n LL | const C: LinkedList<i32> = LinkedList::new();\n    |          ^^^^^^^^^^^^^^^\n@@ -8,55 +8,55 @@ LL | const C: LinkedList<i32> = LinkedList::new();\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:9:11\n+  --> $DIR/linkedlist.rs:9:11\n    |\n LL | static S: LinkedList<i32> = LinkedList::new();\n    |           ^^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:12:16\n+  --> $DIR/linkedlist.rs:12:16\n    |\n LL |     type Baz = LinkedList<u8>;\n    |                ^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:13:15\n+  --> $DIR/linkedlist.rs:13:15\n    |\n LL |     fn foo(_: LinkedList<u8>);\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:14:23\n+  --> $DIR/linkedlist.rs:14:23\n    |\n LL |     const BAR: Option<LinkedList<u8>>;\n    |                       ^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:25:15\n+  --> $DIR/linkedlist.rs:25:15\n    |\n LL |     fn foo(_: LinkedList<u8>) {}\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:28:39\n+  --> $DIR/linkedlist.rs:28:39\n    |\n LL | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n    |                                       ^^^^^^^^^^^^^^\n    |\n    = help: a `VecDeque` might work\n \n error: you seem to be using a `LinkedList`! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:32:29\n+  --> $DIR/linkedlist.rs:32:29\n    |\n LL | pub fn test_ret() -> Option<LinkedList<u8>> {\n    |                             ^^^^^^^^^^^^^^", "previous_filename": "tests/ui/dlist.stderr"}, {"sha": "383bbb49dbe88567b7b271fe7ce6a749b4a2c937", "filename": "tests/ui/type_complexity.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Ftype_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Ftype_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_complexity.rs?ref=bd1201a2635d757244dbdab09026d53ad52da6a1", "previous_filename": "tests/ui/complex_types.rs"}, {"sha": "7879233fdf28373f8afb40c6eef9c8548fa94c08", "filename": "tests/ui/type_complexity.stderr", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Ftype_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd1201a2635d757244dbdab09026d53ad52da6a1/tests%2Fui%2Ftype_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_complexity.stderr?ref=bd1201a2635d757244dbdab09026d53ad52da6a1", "patch": "@@ -1,91 +1,91 @@\n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:7:12\n+  --> $DIR/type_complexity.rs:7:12\n    |\n LL | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::type-complexity` implied by `-D warnings`\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:8:12\n+  --> $DIR/type_complexity.rs:8:12\n    |\n LL | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:11:8\n+  --> $DIR/type_complexity.rs:11:8\n    |\n LL |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:14:11\n+  --> $DIR/type_complexity.rs:14:11\n    |\n LL | struct Ts(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:17:11\n+  --> $DIR/type_complexity.rs:17:11\n    |\n LL |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:18:17\n+  --> $DIR/type_complexity.rs:18:17\n    |\n LL |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:22:14\n+  --> $DIR/type_complexity.rs:22:14\n    |\n LL |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:23:30\n+  --> $DIR/type_complexity.rs:23:30\n    |\n LL |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:27:14\n+  --> $DIR/type_complexity.rs:27:14\n    |\n LL |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:28:14\n+  --> $DIR/type_complexity.rs:28:14\n    |\n LL |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:29:25\n+  --> $DIR/type_complexity.rs:29:25\n    |\n LL |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:30:29\n+  --> $DIR/type_complexity.rs:30:29\n    |\n LL |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:33:15\n+  --> $DIR/type_complexity.rs:33:15\n    |\n LL | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:37:14\n+  --> $DIR/type_complexity.rs:37:14\n    |\n LL | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:40:13\n+  --> $DIR/type_complexity.rs:40:13\n    |\n LL |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "tests/ui/complex_types.stderr"}]}