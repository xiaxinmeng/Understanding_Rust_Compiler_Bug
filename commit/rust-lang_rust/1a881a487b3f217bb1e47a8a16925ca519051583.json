{"sha": "1a881a487b3f217bb1e47a8a16925ca519051583", "node_id": "C_kwDOAAsO6NoAKDFhODgxYTQ4N2IzZjIxN2JiMWU0N2E4YTE2OTI1Y2E1MTkwNTE1ODM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-19T19:25:26Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-10T18:16:45Z"}, "message": "Introduce opt_ident.", "tree": {"sha": "7ad64f26c3bda9d5c2de31eb01079cb1add1e49d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ad64f26c3bda9d5c2de31eb01079cb1add1e49d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a881a487b3f217bb1e47a8a16925ca519051583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a881a487b3f217bb1e47a8a16925ca519051583", "html_url": "https://github.com/rust-lang/rust/commit/1a881a487b3f217bb1e47a8a16925ca519051583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a881a487b3f217bb1e47a8a16925ca519051583/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64b6c32b219fc0294075b838c112af8a6eeece0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/64b6c32b219fc0294075b838c112af8a6eeece0f", "html_url": "https://github.com/rust-lang/rust/commit/64b6c32b219fc0294075b838c112af8a6eeece0f"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "f3cb9a16df5cf0231fc85dfabb50298c849ead68", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1a881a487b3f217bb1e47a8a16925ca519051583/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a881a487b3f217bb1e47a8a16925ca519051583/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=1a881a487b3f217bb1e47a8a16925ca519051583", "patch": "@@ -910,8 +910,10 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n-    pub(super) fn opt_ident_span(self, id: HirId) -> Option<Span> {\n-        let ident = match self.get(id) {\n+    #[inline]\n+    fn opt_ident(self, id: HirId) -> Option<Ident> {\n+        match self.get(id) {\n+            Node::Binding(&Pat { kind: PatKind::Binding(_, _, ident, _), .. }) => Some(ident),\n             // A `Ctor` doesn't have an identifier itself, but its parent\n             // struct/variant does. Compare with `hir::Map::opt_span`.\n             Node::Ctor(..) => match self.find(self.get_parent_node(id))? {\n@@ -920,20 +922,17 @@ impl<'hir> Map<'hir> {\n                 _ => unreachable!(),\n             },\n             node => node.ident(),\n-        };\n-        ident.map(|ident| ident.span)\n+        }\n     }\n \n+    #[inline]\n+    pub(super) fn opt_ident_span(self, id: HirId) -> Option<Span> {\n+        self.opt_ident(id).map(|ident| ident.span)\n+    }\n+\n+    #[inline]\n     pub fn opt_name(self, id: HirId) -> Option<Symbol> {\n-        match self.get(id) {\n-            Node::Binding(&Pat { kind: PatKind::Binding(_, _, l, _), .. }) => Some(l.name),\n-            Node::Ctor(..) => match self.find(self.get_parent_node(id))? {\n-                Node::Item(item) => Some(item.ident.name),\n-                Node::Variant(variant) => Some(variant.ident.name),\n-                _ => unreachable!(),\n-            },\n-            node => node.ident().map(|i| i.name),\n-        }\n+        self.opt_ident(id).map(|ident| ident.name)\n     }\n \n     pub fn name(self, id: HirId) -> Symbol {"}]}