{"sha": "a0fa0994695475bd50bae75291f9e7b222bae72a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZmEwOTk0Njk1NDc1YmQ1MGJhZTc1MjkxZjllN2IyMjJiYWU3MmE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-18T11:15:02Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-18T11:15:02Z"}, "message": "Add a needs_drop intrinsic\n\nCloses #2055", "tree": {"sha": "52802a1d38d74cc377445fae72b125b9d9fe74ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52802a1d38d74cc377445fae72b125b9d9fe74ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0fa0994695475bd50bae75291f9e7b222bae72a", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0fa0994695475bd50bae75291f9e7b222bae72a", "html_url": "https://github.com/rust-lang/rust/commit/a0fa0994695475bd50bae75291f9e7b222bae72a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0fa0994695475bd50bae75291f9e7b222bae72a/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35b8f87b897a1c97a72c456228e60e51cef38821", "url": "https://api.github.com/repos/rust-lang/rust/commits/35b8f87b897a1c97a72c456228e60e51cef38821", "html_url": "https://github.com/rust-lang/rust/commit/35b8f87b897a1c97a72c456228e60e51cef38821"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d0995befe7620bcdda7872c371f795ee236828d4", "filename": "src/rustc/middle/trans/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs?ref=a0fa0994695475bd50bae75291f9e7b222bae72a", "patch": "@@ -801,6 +801,10 @@ fn trans_intrinsic(ccx: @crate_ctxt, decl: ValueRef, item: @ast::native_item,\n       \"addr_of\" {\n         Store(bcx, get_param(decl, first_real_arg), fcx.llretptr);\n       }\n+      \"needs_drop\" {\n+        Store(bcx, C_bool(ty::type_needs_drop(ccx.tcx, tp_ty)),\n+              fcx.llretptr);\n+      }\n     }\n     build_return(bcx);\n     finish_fn(fcx, lltop);"}, {"sha": "232a8cda48f0b0457e1a8e9b31bd28268749cd9e", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=a0fa0994695475bd50bae75291f9e7b222bae72a", "patch": "@@ -78,7 +78,7 @@ fn type_uses_for(ccx: @crate_ctxt, fn_id: def_id, n_tps: uint)\n             let flags = alt check i.ident {\n               \"size_of\" | \"align_of\" | \"init\" |\n               \"reinterpret_cast\" { use_repr }\n-              \"get_tydesc\" { use_tydesc }\n+              \"get_tydesc\" | \"needs_drop\" { use_tydesc }\n               \"forget\" | \"addr_of\" { 0u }\n             };\n             uint::range(0u, n_tps) {|n| cx.uses[n] |= flags;}"}, {"sha": "bb01c879e0ad98baf7cf2b7e3135cfc80b696c65", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0fa0994695475bd50bae75291f9e7b222bae72a/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=a0fa0994695475bd50bae75291f9e7b222bae72a", "patch": "@@ -1899,6 +1899,7 @@ fn check_intrinsic_type(ccx: @crate_ctxt, it: @ast::native_item) {\n                             param(ccx, 1u)) }\n       \"addr_of\" { (1u, [arg(ast::by_ref, param(ccx, 0u))],\n                    ty::mk_imm_ptr(tcx, param(ccx, 0u))) }\n+      \"needs_drop\" { (1u, [], ty::mk_bool(tcx)) }\n       other {\n         tcx.sess.span_err(it.span, \"unrecognized intrinsic function: `\" +\n                           other + \"`\");"}]}