{"sha": "fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkY2U0N2JhN2Q5MDFiOTFjMjNjNWQwOTZhZWY0YTdmZGMxOGRjOGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-10T22:35:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-10T22:35:15Z"}, "message": "Auto merge of #5272 - jmeyers35:file_read_lint, r=flip1995\n\nadd lint on File::read_to_string and File::read_to_end\n\nAdds lint `verbose_file_reads` which checks for use of File::read_to_end and File::read_to_string.\n\nCloses https://github.com/rust-lang/rust-clippy/issues/4916\n\nchangelog: add lint on File::{read_to_end, read_to_string}", "tree": {"sha": "e6e8640a54825c1ea32d176fe449b8bc8e1ed9de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6e8640a54825c1ea32d176fe449b8bc8e1ed9de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "html_url": "https://github.com/rust-lang/rust/commit/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d5ffe81054890cafc1f4df20704ebdd597bd2a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d5ffe81054890cafc1f4df20704ebdd597bd2a4", "html_url": "https://github.com/rust-lang/rust/commit/9d5ffe81054890cafc1f4df20704ebdd597bd2a4"}, {"sha": "a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "html_url": "https://github.com/rust-lang/rust/commit/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0"}], "stats": {"total": 148, "additions": 146, "deletions": 2}, "files": [{"sha": "32cbbe8010170b6175e60e00b39b2f5439213161", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -1417,6 +1417,7 @@ Released 2018-09-13\n [`useless_vec`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n [`vec_box`]: https://rust-lang.github.io/rust-clippy/master/index.html#vec_box\n [`verbose_bit_mask`]: https://rust-lang.github.io/rust-clippy/master/index.html#verbose_bit_mask\n+[`verbose_file_reads`]: https://rust-lang.github.io/rust-clippy/master/index.html#verbose_file_reads\n [`while_immutable_condition`]: https://rust-lang.github.io/rust-clippy/master/index.html#while_immutable_condition\n [`while_let_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n [`while_let_on_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator"}, {"sha": "2181c296e9b25c04e481618b88f22759ea175e91", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -5,7 +5,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 360 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 361 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "1eac69678a64442d18250b17f0192a4dcacbd3a9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -310,6 +310,7 @@ pub mod unused_self;\n pub mod unwrap;\n pub mod use_self;\n pub mod vec;\n+pub mod verbose_file_reads;\n pub mod wildcard_dependencies;\n pub mod wildcard_imports;\n pub mod write;\n@@ -815,6 +816,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &unwrap::UNNECESSARY_UNWRAP,\n         &use_self::USE_SELF,\n         &vec::USELESS_VEC,\n+        &verbose_file_reads::VERBOSE_FILE_READS,\n         &wildcard_dependencies::WILDCARD_DEPENDENCIES,\n         &wildcard_imports::ENUM_GLOB_USE,\n         &wildcard_imports::WILDCARD_IMPORTS,\n@@ -1015,6 +1017,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box option_env_unwrap::OptionEnvUnwrap);\n     store.register_late_pass(|| box wildcard_imports::WildcardImports);\n     store.register_early_pass(|| box macro_use::MacroUseImports);\n+    store.register_late_pass(|| box verbose_file_reads::VerboseFileReads);\n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n@@ -1372,6 +1375,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&unwrap::PANICKING_UNWRAP),\n         LintId::of(&unwrap::UNNECESSARY_UNWRAP),\n         LintId::of(&vec::USELESS_VEC),\n+        LintId::of(&verbose_file_reads::VERBOSE_FILE_READS),\n         LintId::of(&write::PRINTLN_EMPTY_STRING),\n         LintId::of(&write::PRINT_LITERAL),\n         LintId::of(&write::PRINT_WITH_NEWLINE),\n@@ -1555,6 +1559,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::UNNECESSARY_CAST),\n         LintId::of(&types::VEC_BOX),\n         LintId::of(&unwrap::UNNECESSARY_UNWRAP),\n+        LintId::of(&verbose_file_reads::VERBOSE_FILE_READS),\n         LintId::of(&zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n     ]);\n "}, {"sha": "6cb1f694fd5e7e0299a23a57c33eb2d7faa087b5", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -31,6 +31,7 @@ pub const DROP_TRAIT: [&str; 4] = [\"core\", \"ops\", \"drop\", \"Drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n pub const EARLY_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"EarlyContext\"];\n pub const EXIT: [&str; 3] = [\"std\", \"process\", \"exit\"];\n+pub const FILE: [&str; 3] = [\"std\", \"fs\", \"File\"];\n pub const FILE_TYPE: [&str; 3] = [\"std\", \"fs\", \"FileType\"];\n pub const FMT_ARGUMENTS_NEW_V1: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1\"];\n pub const FMT_ARGUMENTS_NEW_V1_FORMATTED: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1_formatted\"];"}, {"sha": "37885317c58e095b38388e6f0bb3f55c8175347f", "filename": "clippy_lints/src/verbose_file_reads.rs", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fverbose_file_reads.rs?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -0,0 +1,83 @@\n+use crate::utils::{match_type, paths, span_lint_and_help};\n+use if_chain::if_chain;\n+use rustc_hir::{Expr, ExprKind, QPath};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for use of File::read_to_end and File::read_to_string.\n+    ///\n+    /// **Why is this bad?** `fs::{read, read_to_string}` provide the same functionality when `buf` is empty with fewer imports and no intermediate values.\n+    /// See also: [fs::read docs](https://doc.rust-lang.org/std/fs/fn.read.html), [fs::read_to_string docs](https://doc.rust-lang.org/std/fs/fn.read_to_string.html)\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust,no_run\n+    /// # use std::io::Read;\n+    /// # use std::fs::File;\n+    /// let mut f = File::open(\"foo.txt\").unwrap();\n+    /// let mut bytes = Vec::new();\n+    /// f.read_to_end(&mut bytes).unwrap();\n+    /// ```\n+    /// Can be written more concisely as\n+    /// ```rust,no_run\n+    /// # use std::fs;\n+    /// let mut bytes = fs::read(\"foo.txt\").unwrap();\n+    /// ```\n+    pub VERBOSE_FILE_READS,\n+    complexity,\n+    \"use of `File::read_to_end` or `File::read_to_string`\"\n+}\n+\n+declare_lint_pass!(VerboseFileReads => [VERBOSE_FILE_READS]);\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for VerboseFileReads {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'tcx>) {\n+        if is_file_read_to_end(cx, expr) {\n+            span_lint_and_help(\n+                cx,\n+                VERBOSE_FILE_READS,\n+                expr.span,\n+                \"use of `File::read_to_end`\",\n+                \"consider using `fs::read` instead\",\n+            );\n+        } else if is_file_read_to_string(cx, expr) {\n+            span_lint_and_help(\n+                cx,\n+                VERBOSE_FILE_READS,\n+                expr.span,\n+                \"use of `File::read_to_string`\",\n+                \"consider using `fs::read_to_string` instead\",\n+            )\n+        }\n+    }\n+}\n+\n+fn is_file_read_to_end<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'tcx>) -> bool {\n+    if_chain! {\n+        if let ExprKind::MethodCall(method_name, _, exprs) = expr.kind;\n+        if method_name.ident.as_str() == \"read_to_end\";\n+        if let ExprKind::Path(QPath::Resolved(None, _)) = &exprs[0].kind;\n+        let ty = cx.tables.expr_ty(&exprs[0]);\n+        if match_type(cx, ty, &paths::FILE);\n+        then {\n+            return true\n+        }\n+    }\n+    false\n+}\n+\n+fn is_file_read_to_string<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'tcx>) -> bool {\n+    if_chain! {\n+        if let ExprKind::MethodCall(method_name, _, exprs) = expr.kind;\n+        if method_name.ident.as_str() == \"read_to_string\";\n+        if let ExprKind::Path(QPath::Resolved(None, _)) = &exprs[0].kind;\n+        let ty = cx.tables.expr_ty(&exprs[0]);\n+        if match_type(cx, ty, &paths::FILE);\n+        then {\n+            return true\n+        }\n+    }\n+    false\n+}"}, {"sha": "fd948953ea231a372603e38995263a2d862bcc4d", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 360] = [\n+pub const ALL_LINTS: [Lint; 361] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -2401,6 +2401,13 @@ pub const ALL_LINTS: [Lint; 360] = [\n         deprecation: None,\n         module: \"bit_mask\",\n     },\n+    Lint {\n+        name: \"verbose_file_reads\",\n+        group: \"complexity\",\n+        desc: \"use of `File::read_to_end` or `File::read_to_string`\",\n+        deprecation: None,\n+        module: \"verbose_file_reads\",\n+    },\n     Lint {\n         name: \"while_immutable_condition\",\n         group: \"correctness\","}, {"sha": "e0065e05ade62d31ba9c21f7fe8b75f2b368d973", "filename": "tests/ui/verbose_file_reads.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/tests%2Fui%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/tests%2Fui%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fverbose_file_reads.rs?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -0,0 +1,28 @@\n+#![warn(clippy::verbose_file_reads)]\n+use std::env::temp_dir;\n+use std::fs::File;\n+use std::io::Read;\n+\n+struct Struct;\n+// To make sure we only warn on File::{read_to_end, read_to_string} calls\n+impl Struct {\n+    pub fn read_to_end(&self) {}\n+\n+    pub fn read_to_string(&self) {}\n+}\n+\n+fn main() -> std::io::Result<()> {\n+    let path = \"foo.txt\";\n+    // Lint shouldn't catch this\n+    let s = Struct;\n+    s.read_to_end();\n+    s.read_to_string();\n+    // Should catch this\n+    let mut f = File::open(&path)?;\n+    let mut buffer = Vec::new();\n+    f.read_to_end(&mut buffer)?;\n+    // ...and this\n+    let mut string_buffer = String::new();\n+    f.read_to_string(&mut string_buffer)?;\n+    Ok(())\n+}"}, {"sha": "550b6ab679f19c7ec09a3aa505a6e20713304c4d", "filename": "tests/ui/verbose_file_reads.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/tests%2Fui%2Fverbose_file_reads.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e/tests%2Fui%2Fverbose_file_reads.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fverbose_file_reads.stderr?ref=fdce47ba7d901b91c23c5d096aef4a7fdc18dc8e", "patch": "@@ -0,0 +1,19 @@\n+error: use of `File::read_to_end`\n+  --> $DIR/verbose_file_reads.rs:23:5\n+   |\n+LL |     f.read_to_end(&mut buffer)?;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::verbose-file-reads` implied by `-D warnings`\n+   = help: consider using `fs::read` instead\n+\n+error: use of `File::read_to_string`\n+  --> $DIR/verbose_file_reads.rs:26:5\n+   |\n+LL |     f.read_to_string(&mut string_buffer)?;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using `fs::read_to_string` instead\n+\n+error: aborting due to 2 previous errors\n+"}]}