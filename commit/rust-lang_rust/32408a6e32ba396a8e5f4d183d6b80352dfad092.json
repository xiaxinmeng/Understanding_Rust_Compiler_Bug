{"sha": "32408a6e32ba396a8e5f4d183d6b80352dfad092", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNDA4YTZlMzJiYTM5NmE4ZTVmNGQxODNkNmI4MDM1MmRmYWQwOTI=", "commit": {"author": {"name": "Alex Whitney", "email": "aw1209@ic.ac.uk", "date": "2014-01-17T11:04:05Z"}, "committer": {"name": "Alex Whitney", "email": "aw1209@ic.ac.uk", "date": "2014-01-17T12:07:32Z"}, "message": "Fixed bug when initialising bitv from bool=true", "tree": {"sha": "e2684adc4727a440d888d62b61f7c062cecfaeb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2684adc4727a440d888d62b61f7c062cecfaeb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32408a6e32ba396a8e5f4d183d6b80352dfad092", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32408a6e32ba396a8e5f4d183d6b80352dfad092", "html_url": "https://github.com/rust-lang/rust/commit/32408a6e32ba396a8e5f4d183d6b80352dfad092", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32408a6e32ba396a8e5f4d183d6b80352dfad092/comments", "author": null, "committer": null, "parents": [{"sha": "5fdc81262a5d44f10e335384b5d69b938d6d729c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fdc81262a5d44f10e335384b5d69b938d6d729c", "html_url": "https://github.com/rust-lang/rust/commit/5fdc81262a5d44f10e335384b5d69b938d6d729c"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "756c97ed4009ca309c4b952d6aca1c9f7d0d4bdd", "filename": "src/libextra/bitv.rs", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/32408a6e32ba396a8e5f4d183d6b80352dfad092/src%2Flibextra%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32408a6e32ba396a8e5f4d183d6b80352dfad092/src%2Flibextra%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbitv.rs?ref=32408a6e32ba396a8e5f4d183d6b80352dfad092", "patch": "@@ -269,14 +269,23 @@ impl Bitv {\n \n impl Bitv {\n     pub fn new(nbits: uint, init: bool) -> Bitv {\n-        let rep = if nbits <= uint::bits {\n+        let rep = if nbits < uint::bits {\n+            Small(SmallBitv::new(if init {(1<<nbits)-1} else {0}))\n+        } else if nbits == uint::bits {\n             Small(SmallBitv::new(if init {!0} else {0}))\n-        }\n-        else {\n-            let nelems = nbits/uint::bits +\n-                         if nbits % uint::bits == 0 {0} else {1};\n-            let elem = if init {!0u} else {0u};\n-            let s = vec::from_elem(nelems, elem);\n+        } else {\n+            let exact = nbits % uint::bits == 0;\n+            let nelems = nbits/uint::bits + if exact {0} else {1};\n+            let s =\n+                if init {\n+                    if exact {\n+                        vec::from_elem(nelems, !0u)\n+                    } else {\n+                        let mut v = vec::from_elem(nelems-1, !0u);\n+                        v.push((1<<nbits % uint::bits)-1);\n+                        v\n+                    }\n+                } else { vec::from_elem(nelems, 0u)};\n             Big(BigBitv::new(s))\n         };\n         Bitv {rep: rep, nbits: nbits}\n@@ -1329,6 +1338,20 @@ mod tests {\n         assert_eq!(idxs, ~[0, 2, 3]);\n     }\n \n+    #[test]\n+    fn test_bitv_set_frombitv_init() {\n+        let bools = [true, false];\n+        let lengths = [10, 64, 100];\n+        for &b in bools.iter() {\n+            for &l in lengths.iter() {\n+                let bitset = BitvSet::from_bitv(Bitv::new(l, b));\n+                assert_eq!(bitset.contains(&1u), b)\n+                assert_eq!(bitset.contains(&(l-1u)), b)\n+                assert!(!bitset.contains(&l))\n+            }\n+        }\n+    }\n+\n     #[test]\n     fn test_small_difference() {\n         let mut b1 = Bitv::new(3, false);"}]}