{"sha": "c0fd250c62abccc0b453677969fa69ddeb6f06d4", "node_id": "C_kwDOAAsO6NoAKGMwZmQyNTBjNjJhYmNjYzBiNDUzNjc3OTY5ZmE2OWRkZWI2ZjA2ZDQ", "commit": {"author": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-12-07T15:02:58Z"}, "committer": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-12-07T15:08:22Z"}, "message": "Fix grammar issues", "tree": {"sha": "cc1f25a1f3fe5d48a7a63d0c356f91a63db23d60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc1f25a1f3fe5d48a7a63d0c356f91a63db23d60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0fd250c62abccc0b453677969fa69ddeb6f06d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0fd250c62abccc0b453677969fa69ddeb6f06d4", "html_url": "https://github.com/rust-lang/rust/commit/c0fd250c62abccc0b453677969fa69ddeb6f06d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0fd250c62abccc0b453677969fa69ddeb6f06d4/comments", "author": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee0d71e103a7de8afe225ba5357c446b08a6fbe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee0d71e103a7de8afe225ba5357c446b08a6fbe3", "html_url": "https://github.com/rust-lang/rust/commit/ee0d71e103a7de8afe225ba5357c446b08a6fbe3"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "97f492e518a4b98e3185746d1c1928e4ae883a68", "filename": "clippy_lints/src/non_send_fields_in_send_ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0fd250c62abccc0b453677969fa69ddeb6f06d4/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fd250c62abccc0b453677969fa69ddeb6f06d4/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs?ref=c0fd250c62abccc0b453677969fa69ddeb6f06d4", "patch": "@@ -17,7 +17,7 @@ declare_clippy_lint! {\n     /// contains fields that are not safe to be sent across threads.\n     /// It tries to detect fields that can cause a soundness issue\n     /// when sent to another thread (e.g., `Rc`) while allowing `!Send` fields\n-    /// that are expected to exist in a `Send` type such as raw pointers.\n+    /// that are expected to exist in a `Send` type, such as raw pointers.\n     ///\n     /// ### Why is this bad?\n     /// Sending the struct to another thread effectively sends all of its fields,\n@@ -124,7 +124,7 @@ impl<'tcx> LateLintPass<'tcx> for NonSendFieldInSendTy {\n                         NON_SEND_FIELDS_IN_SEND_TY,\n                         item.span,\n                         &format!(\n-                            \"there are some fields in `{}` are not safe to be sent to another thread\",\n+                            \"some fields in `{}` are not safe to be sent to another thread\",\n                             snippet(cx, hir_impl.self_ty.span, \"Unknown\")\n                         ),\n                         |diag| {"}, {"sha": "49eecf18b4c4f83f5fadacb8f6ad593bc2969cac", "filename": "tests/ui-toml/strict_non_send_fields_in_send_ty/test.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0fd250c62abccc0b453677969fa69ddeb6f06d4/tests%2Fui-toml%2Fstrict_non_send_fields_in_send_ty%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0fd250c62abccc0b453677969fa69ddeb6f06d4/tests%2Fui-toml%2Fstrict_non_send_fields_in_send_ty%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fstrict_non_send_fields_in_send_ty%2Ftest.stderr?ref=c0fd250c62abccc0b453677969fa69ddeb6f06d4", "patch": "@@ -1,4 +1,4 @@\n-error: there are some fields in `NoGeneric` are not safe to be sent to another thread\n+error: some fields in `NoGeneric` are not safe to be sent to another thread\n   --> $DIR/test.rs:11:1\n    |\n LL | unsafe impl Send for NoGeneric {}\n@@ -12,7 +12,7 @@ LL |     rc_is_not_send: Rc<String>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n \n-error: there are some fields in `MultiField<T>` are not safe to be sent to another thread\n+error: some fields in `MultiField<T>` are not safe to be sent to another thread\n   --> $DIR/test.rs:19:1\n    |\n LL | unsafe impl<T> Send for MultiField<T> {}\n@@ -37,7 +37,7 @@ LL |     field3: T,\n    |     ^^^^^^^^^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `MyOption<T>` are not safe to be sent to another thread\n+error: some fields in `MyOption<T>` are not safe to be sent to another thread\n   --> $DIR/test.rs:26:1\n    |\n LL | unsafe impl<T> Send for MyOption<T> {}\n@@ -50,7 +50,7 @@ LL |     MySome(T),\n    |            ^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `HeuristicTest` are not safe to be sent to another thread\n+error: some fields in `HeuristicTest` are not safe to be sent to another thread\n   --> $DIR/test.rs:41:1\n    |\n LL | unsafe impl Send for HeuristicTest {}"}, {"sha": "60df4e226e4fa47078c43dc3bb66e1ff30e3e6e3", "filename": "tests/ui/non_send_fields_in_send_ty.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c0fd250c62abccc0b453677969fa69ddeb6f06d4/tests%2Fui%2Fnon_send_fields_in_send_ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0fd250c62abccc0b453677969fa69ddeb6f06d4/tests%2Fui%2Fnon_send_fields_in_send_ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_send_fields_in_send_ty.stderr?ref=c0fd250c62abccc0b453677969fa69ddeb6f06d4", "patch": "@@ -1,4 +1,4 @@\n-error: there are some fields in `RingBuffer<T>` are not safe to be sent to another thread\n+error: some fields in `RingBuffer<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:16:1\n    |\n LL | unsafe impl<T> Send for RingBuffer<T> {}\n@@ -12,7 +12,7 @@ LL |     data: Vec<UnsafeCell<T>>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: add bounds on type parameter `T` that satisfy `Vec<UnsafeCell<T>>: Send`\n \n-error: there are some fields in `MvccRwLock<T>` are not safe to be sent to another thread\n+error: some fields in `MvccRwLock<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:24:1\n    |\n LL | unsafe impl<T> Send for MvccRwLock<T> {}\n@@ -25,7 +25,7 @@ LL |     lock: Mutex<Box<T>>,\n    |     ^^^^^^^^^^^^^^^^^^^\n    = help: add bounds on type parameter `T` that satisfy `Mutex<Box<T>>: Send`\n \n-error: there are some fields in `ArcGuard<RC, T>` are not safe to be sent to another thread\n+error: some fields in `ArcGuard<RC, T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:32:1\n    |\n LL | unsafe impl<RC, T: Send> Send for ArcGuard<RC, T> {}\n@@ -38,7 +38,7 @@ LL |     head: Arc<RC>,\n    |     ^^^^^^^^^^^^^\n    = help: add bounds on type parameter `RC` that satisfy `Arc<RC>: Send`\n \n-error: there are some fields in `DeviceHandle<T>` are not safe to be sent to another thread\n+error: some fields in `DeviceHandle<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:48:1\n    |\n LL | unsafe impl<T: UsbContext> Send for DeviceHandle<T> {}\n@@ -51,7 +51,7 @@ LL |     context: T,\n    |     ^^^^^^^^^^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `NoGeneric` are not safe to be sent to another thread\n+error: some fields in `NoGeneric` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:55:1\n    |\n LL | unsafe impl Send for NoGeneric {}\n@@ -64,7 +64,7 @@ LL |     rc_is_not_send: Rc<String>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n \n-error: there are some fields in `MultiField<T>` are not safe to be sent to another thread\n+error: some fields in `MultiField<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:63:1\n    |\n LL | unsafe impl<T> Send for MultiField<T> {}\n@@ -89,7 +89,7 @@ LL |     field3: T,\n    |     ^^^^^^^^^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `MyOption<T>` are not safe to be sent to another thread\n+error: some fields in `MyOption<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:70:1\n    |\n LL | unsafe impl<T> Send for MyOption<T> {}\n@@ -102,7 +102,7 @@ LL |     MySome(T),\n    |            ^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `MultiParam<A, B>` are not safe to be sent to another thread\n+error: some fields in `MultiParam<A, B>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:82:1\n    |\n LL | unsafe impl<A, B> Send for MultiParam<A, B> {}\n@@ -115,7 +115,7 @@ LL |     vec: Vec<(A, B)>,\n    |     ^^^^^^^^^^^^^^^^\n    = help: add bounds on type parameters `A, B` that satisfy `Vec<(A, B)>: Send`\n \n-error: there are some fields in `HeuristicTest` are not safe to be sent to another thread\n+error: some fields in `HeuristicTest` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:100:1\n    |\n LL | unsafe impl Send for HeuristicTest {}\n@@ -128,7 +128,7 @@ LL |     field4: (*const NonSend, Rc<u8>),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n \n-error: there are some fields in `AttrTest3<T>` are not safe to be sent to another thread\n+error: some fields in `AttrTest3<T>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:119:1\n    |\n LL | unsafe impl<T> Send for AttrTest3<T> {}\n@@ -141,7 +141,7 @@ LL |     Enum2(T),\n    |           ^\n    = help: add `T: Send` bound in `Send` impl\n \n-error: there are some fields in `Complex<P, u32>` are not safe to be sent to another thread\n+error: some fields in `Complex<P, u32>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:127:1\n    |\n LL | unsafe impl<P> Send for Complex<P, u32> {}\n@@ -154,7 +154,7 @@ LL |     field1: A,\n    |     ^^^^^^^^^\n    = help: add `P: Send` bound in `Send` impl\n \n-error: there are some fields in `Complex<Q, MutexGuard<'static, bool>>` are not safe to be sent to another thread\n+error: some fields in `Complex<Q, MutexGuard<'static, bool>>` are not safe to be sent to another thread\n   --> $DIR/non_send_fields_in_send_ty.rs:130:1\n    |\n LL | unsafe impl<Q: Send> Send for Complex<Q, MutexGuard<'static, bool>> {}"}]}