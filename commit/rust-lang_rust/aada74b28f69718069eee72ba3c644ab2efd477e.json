{"sha": "aada74b28f69718069eee72ba3c644ab2efd477e", "node_id": "C_kwDOAAsO6NoAKGFhZGE3NGIyOGY2OTcxODA2OWVlZTcyYmEzYzY0NGFiMmVmZDQ3N2U", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-16T13:03:14Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-16T13:03:14Z"}, "message": "Make derefer work everwhere\n\nCo-Authored-By: Oli Scherer <332036+oli-obk@users.noreply.github.com>", "tree": {"sha": "db18cb6562ebf605de55dbad328acc251b687777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db18cb6562ebf605de55dbad328acc251b687777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aada74b28f69718069eee72ba3c644ab2efd477e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aada74b28f69718069eee72ba3c644ab2efd477e", "html_url": "https://github.com/rust-lang/rust/commit/aada74b28f69718069eee72ba3c644ab2efd477e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aada74b28f69718069eee72ba3c644ab2efd477e/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8422403f775126c40d558838d321c063554c822", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8422403f775126c40d558838d321c063554c822", "html_url": "https://github.com/rust-lang/rust/commit/c8422403f775126c40d558838d321c063554c822"}], "stats": {"total": 889, "additions": 613, "deletions": 276}, "files": [{"sha": "4adbe2516da59fde297c6c5fba6da98fe09ef622", "filename": "compiler/rustc_middle/src/mir/patch.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -2,6 +2,7 @@ use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::*;\n use rustc_middle::ty::Ty;\n use rustc_span::Span;\n+use std::collections::VecDeque;\n \n /// This struct represents a patch to MIR, which can add\n /// new statements and basic blocks and patch over block\n@@ -141,6 +142,9 @@ impl<'tcx> MirPatch<'tcx> {\n \n         let mut delta = 0;\n         let mut last_bb = START_BLOCK;\n+        let mut terminator_targets = Vec::new();\n+        let mut inf_and_stmt: VecDeque<(SourceInfo, StatementKind<'_>)> = VecDeque::new();\n+\n         for (mut loc, stmt) in new_statements {\n             if loc.block != last_bb {\n                 delta = 0;\n@@ -149,11 +153,33 @@ impl<'tcx> MirPatch<'tcx> {\n             debug!(\"MirPatch: adding statement {:?} at loc {:?}+{}\", stmt, loc, delta);\n             loc.statement_index += delta;\n             let source_info = Self::source_info_for_index(&body[loc.block], loc);\n+\n+            // For mir-opt `Derefer` to work in all cases we need to\n+            // get terminator's targets and apply the statement to all of them.\n+            if loc.statement_index > body[loc.block].statements.len() {\n+                let term = body[loc.block].terminator();\n+                let successors = term.successors().clone();\n+\n+                for i in successors {\n+                    inf_and_stmt.push_back((source_info, stmt.clone()));\n+                    terminator_targets.push(i.clone());\n+                }\n+                delta += 1;\n+                continue;\n+            }\n+\n             body[loc.block]\n                 .statements\n                 .insert(loc.statement_index, Statement { source_info, kind: stmt });\n             delta += 1;\n         }\n+\n+        for target in terminator_targets.iter() {\n+            let inf_and_stmt = inf_and_stmt.pop_front().unwrap();\n+            body[*target]\n+                .statements\n+                .insert(0, Statement { source_info: inf_and_stmt.0, kind: inf_and_stmt.1 });\n+        }\n     }\n \n     pub fn source_info_for_index(data: &BasicBlockData<'_>, loc: Location) -> SourceInfo {"}, {"sha": "6c06294d72b935e58e0d457494a425479e82f82e", "filename": "compiler/rustc_mir_transform/src/deref_separator.rs", "status": "modified", "additions": 76, "deletions": 55, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -1,68 +1,89 @@\n use crate::MirPass;\n+use rustc_index::vec::IndexVec;\n use rustc_middle::mir::patch::MirPatch;\n+use rustc_middle::mir::visit::{MutVisitor, PlaceContext};\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n pub struct Derefer;\n \n-pub fn deref_finder<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-    let mut patch = MirPatch::new(body);\n-    let (basic_blocks, local_decl) = body.basic_blocks_and_local_decls_mut();\n-    for (block, data) in basic_blocks.iter_enumerated_mut() {\n-        for (i, stmt) in data.statements.iter_mut().enumerate() {\n-            match stmt.kind {\n-                StatementKind::Assign(box (og_place, Rvalue::Ref(region, borrow_knd, place))) => {\n-                    let mut place_local = place.local;\n-                    let mut last_len = 0;\n-                    for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n-                        if p_elem == ProjectionElem::Deref && !p_ref.projection.is_empty() {\n-                            // The type that we are derefing.\n-                            let ty = p_ref.ty(local_decl, tcx).ty;\n-                            let temp = patch.new_temp(ty, stmt.source_info.span);\n-\n-                            // Because we are assigning this right before original statement\n-                            // we are using index i of statement.\n-                            let loc = Location { block: block, statement_index: i };\n-                            patch.add_statement(loc, StatementKind::StorageLive(temp));\n-\n-                            // We are adding current p_ref's projections to our\n-                            // temp value, excluding projections we already covered.\n-                            let deref_place = Place::from(place_local)\n-                                .project_deeper(&p_ref.projection[last_len..], tcx);\n-                            patch.add_assign(\n-                                loc,\n-                                Place::from(temp),\n-                                Rvalue::Use(Operand::Move(deref_place)),\n-                            );\n-\n-                            place_local = temp;\n-                            last_len = p_ref.projection.len();\n-\n-                            // We are creating a place by using our temp value's location\n-                            // and copying derefed values which we need to create new statement.\n-                            let temp_place =\n-                                Place::from(temp).project_deeper(&place.projection[idx..], tcx);\n-                            let new_stmt = Statement {\n-                                source_info: stmt.source_info,\n-                                kind: StatementKind::Assign(Box::new((\n-                                    og_place,\n-                                    Rvalue::Ref(region, borrow_knd, temp_place),\n-                                ))),\n-                            };\n-\n-                            // Replace current statement with newly created one.\n-                            *stmt = new_stmt;\n-\n-                            // Since our job with the temp is done it should be gone\n-                            let loc = Location { block: block, statement_index: i + 1 };\n-                            patch.add_statement(loc, StatementKind::StorageDead(temp));\n-                        }\n-                    }\n+pub struct DerefChecker<'tcx> {\n+    tcx: TyCtxt<'tcx>,\n+    patcher: MirPatch<'tcx>,\n+    local_decls: IndexVec<Local, LocalDecl<'tcx>>,\n+}\n+\n+impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n+    fn tcx(&self) -> TyCtxt<'tcx> {\n+        self.tcx\n+    }\n+\n+    fn visit_place(&mut self, place: &mut Place<'tcx>, _: PlaceContext, loc: Location) {\n+        let mut place_local = place.local;\n+        let mut last_len = 0;\n+        let mut last_deref_idx = 0;\n+\n+        let mut prev_temp: Option<Local> = None;\n+\n+        for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n+            if p_elem == ProjectionElem::Deref && !p_ref.projection.is_empty() {\n+                last_deref_idx = idx;\n+            }\n+        }\n+\n+        for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n+            if p_elem == ProjectionElem::Deref && !p_ref.projection.is_empty() {\n+                let ty = p_ref.ty(&self.local_decls, self.tcx).ty;\n+                let temp =\n+                    self.patcher.new_temp(ty, self.local_decls[p_ref.local].source_info.span);\n+\n+                self.patcher.add_statement(loc, StatementKind::StorageLive(temp));\n+\n+                // We are adding current p_ref's projections to our\n+                // temp value, excluding projections we already covered.\n+                let deref_place = Place::from(place_local)\n+                    .project_deeper(&p_ref.projection[last_len..], self.tcx);\n+                self.patcher.add_assign(\n+                    loc,\n+                    Place::from(temp),\n+                    Rvalue::Use(Operand::Move(deref_place)),\n+                );\n+\n+                place_local = temp;\n+                last_len = p_ref.projection.len();\n+\n+                // Change `Place` only if we are actually at the Place's last deref\n+                if idx == last_deref_idx {\n+                    let temp_place =\n+                        Place::from(temp).project_deeper(&place.projection[idx..], self.tcx);\n+                    *place = temp_place;\n+                }\n+\n+                // We are destroying last temp since it's no longer used.\n+                if prev_temp.is_some() {\n+                    self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp.unwrap()));\n                 }\n-                _ => (),\n+\n+                prev_temp = Some(temp);\n             }\n         }\n+\n+        // Since we won't be able to reach final temp, we destroy it outside the loop.\n+        if prev_temp.is_some() {\n+            let last_loc = Location { block: loc.block, statement_index: loc.statement_index + 1 };\n+            self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp.unwrap()));\n+        }\n     }\n-    patch.apply(body);\n+}\n+\n+pub fn deref_finder<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+    let patch = MirPatch::new(body);\n+    let mut checker = DerefChecker { tcx, patcher: patch, local_decls: body.local_decls.clone() };\n+\n+    for (bb, data) in body.basic_blocks_mut().iter_enumerated_mut() {\n+        checker.visit_basic_block_data(bb, data);\n+    }\n+\n+    checker.patcher.apply(body);\n }\n \n impl<'tcx> MirPass<'tcx> for Derefer {"}, {"sha": "fc20165009143bda79d98944662d1f6e89db6b3a", "filename": "src/test/mir-opt/derefer_complex_case.main.Derefer.diff", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -0,0 +1,111 @@\n+- // MIR for `main` before Derefer\n++ // MIR for `main` after Derefer\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_complex_case.rs:3:11: 3:11\n+      let mut _1: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _2: &[i32; 2];               // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let _3: [i32; 2];                    // in scope 0 at $DIR/derefer_complex_case.rs:4:18: 4:26\n+      let mut _4: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _5: ();                      // in scope 0 at $DIR/derefer_complex_case.rs:3:1: 5:2\n+      let _6: ();                          // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _7: std::option::Option<&i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _8: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _9: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _10: isize;                  // in scope 0 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+      let mut _11: !;                      // in scope 0 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+      let mut _13: i32;                    // in scope 0 at $DIR/derefer_complex_case.rs:4:34: 4:37\n+      let mut _14: &[i32; 2];              // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n++     let mut _15: &i32;                   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      scope 1 {\n+          debug iter => _4;                // in scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          let _12: i32;                    // in scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n+          scope 2 {\n+              debug foo => _12;            // in scope 2 at $DIR/derefer_complex_case.rs:4:10: 4:13\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _14 = const main::promoted[0];   // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[0])) }\n+          _2 = &(*_14);                    // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _1 = <&[i32; 2] as IntoIterator>::into_iter(move _2) -> bb1; // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + literal: Const { ty: fn(&[i32; 2]) -> <&[i32; 2] as IntoIterator>::IntoIter {<&[i32; 2] as IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:4:25: 4:26\n+          StorageLive(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _4 = move _1;                    // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+      }\n+  \n+      bb2: {\n+          StorageLive(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _9 = &mut _4;                    // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _8 = &mut (*_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _7 = <std::slice::Iter<i32> as Iterator>::next(move _8) -> bb3; // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + literal: Const { ty: for<'r> fn(&'r mut std::slice::Iter<i32>) -> Option<<std::slice::Iter<i32> as Iterator>::Item> {<std::slice::Iter<i32> as Iterator>::next}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb3: {\n+          StorageDead(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:4:25: 4:26\n+          _10 = discriminant(_7);          // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      }\n+  \n+      bb4: {\n+          StorageLive(_12);                // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n+-         _12 = (*((_7 as Some).0: &i32)); // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n++         StorageLive(_15);                // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n++         _15 = move ((_7 as Some).0: &i32); // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n++         _12 = (*_15);                    // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n++         StorageDead(_15);                // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n+          StorageLive(_13);                // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n+          _13 = _12;                       // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n+          _6 = std::mem::drop::<i32>(move _13) -> bb7; // scope 2 at $DIR/derefer_complex_case.rs:4:29: 4:38\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_complex_case.rs:4:29: 4:33\n+                                           // + literal: Const { ty: fn(i32) {std::mem::drop::<i32>}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb5: {\n+          unreachable;                     // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      }\n+  \n+      bb6: {\n+          _0 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          return;                          // scope 0 at $DIR/derefer_complex_case.rs:5:2: 5:2\n+      }\n+  \n+      bb7: {\n+          StorageDead(_13);                // scope 2 at $DIR/derefer_complex_case.rs:4:37: 4:38\n+          StorageDead(_12);                // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n+          _5 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n++     }\n++ \n++     bb8 (cleanup): {\n++         resume;                          // scope 0 at $DIR/derefer_complex_case.rs:3:1: 5:2\n+      }\n+  }\n+  "}, {"sha": "6abf49f9966cef98f5256f8539950752a0726b8f", "filename": "src/test/mir-opt/derefer_complex_case.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -0,0 +1,5 @@\n+// EMIT_MIR derefer_complex_case.main.Derefer.diff\n+\n+fn main() {\n+    for &foo in &[42, 43] { drop(foo) }\n+}"}, {"sha": "73b9ec4abc55a4a11944932c1f3e2372a2aca568", "filename": "src/test/mir-opt/derefer_terminator_test.main.Derefer.diff", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -0,0 +1,103 @@\n+- // MIR for `main` before Derefer\n++ // MIR for `main` after Derefer\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_terminator_test.rs:2:11: 2:11\n+      let _1: bool;                        // in scope 0 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n+      let _3: ();                          // in scope 0 at $DIR/derefer_terminator_test.rs:5:5: 8:6\n+      let mut _4: &&&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n+      let _5: &&&bool;                     // in scope 0 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n+      let _6: &&bool;                      // in scope 0 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n+      let _7: &bool;                       // in scope 0 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n++     let mut _10: &&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n++     let mut _11: &&bool;                 // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n++     let mut _12: &bool;                  // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n+      scope 1 {\n+          debug b => _1;                   // in scope 1 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n+          let _2: bool;                    // in scope 1 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n+          scope 2 {\n+              debug d => _2;               // in scope 2 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n+              let _8: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n+              let _9: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n+              scope 3 {\n+                  debug x => _8;           // in scope 3 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n+              }\n+              scope 4 {\n+                  debug y => _9;           // in scope 4 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n+              }\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n+          _1 = foo() -> bb1;               // scope 0 at $DIR/derefer_terminator_test.rs:3:13: 3:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_terminator_test.rs:3:13: 3:16\n+                                           // + literal: Const { ty: fn() -> bool {foo}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageLive(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n+          _2 = foo() -> bb2;               // scope 1 at $DIR/derefer_terminator_test.rs:4:13: 4:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_terminator_test.rs:4:13: 4:16\n+                                           // + literal: Const { ty: fn() -> bool {foo}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb2: {\n+          StorageLive(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 8:6\n+          StorageLive(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n+          StorageLive(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n+          StorageLive(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n+          StorageLive(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n+          _7 = &_1;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n+          _6 = &_7;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n+          _5 = &_6;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n+          _4 = &_5;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n+-         switchInt((*(*(*(*_4))))) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         StorageLive(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         _10 = move (*_4);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         StorageLive(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         _11 = move (*_10);               // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         StorageDead(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         StorageLive(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         _12 = move (*_11);               // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         StorageDead(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n++         switchInt((*_12)) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n+      }\n+  \n+      bb3: {\n++         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n+          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:20\n+          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:20\n+      }\n+  \n+      bb4: {\n++         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n+          StorageLive(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n+          _8 = const 5_i32;                // scope 2 at $DIR/derefer_terminator_test.rs:6:26: 6:27\n+          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:6:17: 6:29\n+          StorageDead(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:6:28: 6:29\n+          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:6:28: 6:29\n+      }\n+  \n+      bb5: {\n+          StorageDead(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n+          StorageDead(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n+          StorageDead(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n+          StorageDead(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n+          StorageDead(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n+          StorageLive(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n+          _9 = const 42_i32;               // scope 2 at $DIR/derefer_terminator_test.rs:9:13: 9:15\n+          _0 = const ();                   // scope 0 at $DIR/derefer_terminator_test.rs:2:11: 10:2\n+          StorageDead(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n+          StorageDead(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n+          StorageDead(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n+          return;                          // scope 0 at $DIR/derefer_terminator_test.rs:10:2: 10:2\n++     }\n++ \n++     bb6 (cleanup): {\n++         resume;                          // scope 0 at $DIR/derefer_terminator_test.rs:2:1: 10:2\n+      }\n+  }\n+  "}, {"sha": "11f5b20636d541301655b46b2da68b144c5f7604", "filename": "src/test/mir-opt/derefer_terminator_test.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -0,0 +1,14 @@\n+// EMIT_MIR derefer_terminator_test.main.Derefer.diff\n+fn main() {\n+    let b = foo();\n+    let d = foo();\n+    match ****(&&&&b) {\n+        true => {let x = 5;},\n+        false => {}\n+    }\n+    let y = 42;\n+}\n+\n+fn foo() -> bool {\n+    true\n+}"}, {"sha": "b2d4abce2947dd8c644d95c4b80d70065a7bd6da", "filename": "src/test/mir-opt/derefer_test.main.Derefer.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -5,8 +5,8 @@\n       let mut _0: ();                      // return place in scope 0 at $DIR/derefer_test.rs:2:11: 2:11\n       let mut _1: (i32, i32);              // in scope 0 at $DIR/derefer_test.rs:3:9: 3:14\n       let mut _3: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test.rs:4:22: 4:28\n-+     let mut _6: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test.rs:5:13: 5:26\n-+     let mut _7: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test.rs:6:13: 6:26\n++     let mut _6: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test.rs:4:9: 4:14\n++     let mut _7: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test.rs:4:9: 4:14\n       scope 1 {\n           debug a => _1;                   // in scope 1 at $DIR/derefer_test.rs:3:9: 3:14\n           let mut _2: (i32, &mut (i32, i32)); // in scope 1 at $DIR/derefer_test.rs:4:9: 4:14"}, {"sha": "c48f3ac12c4e13b76b1fb0335d05908ddc30ae85", "filename": "src/test/mir-opt/derefer_test_multiple.main.Derefer.diff", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_test_multiple.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fderefer_test_multiple.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_test_multiple.main.Derefer.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -7,12 +7,12 @@\n       let mut _3: &mut (i32, i32);         // in scope 0 at $DIR/derefer_test_multiple.rs:4:22: 4:28\n       let mut _5: &mut (i32, &mut (i32, i32)); // in scope 0 at $DIR/derefer_test_multiple.rs:5:22: 5:28\n       let mut _7: &mut (i32, &mut (i32, &mut (i32, i32))); // in scope 0 at $DIR/derefer_test_multiple.rs:6:22: 6:28\n-+     let mut _10: &mut (i32, &mut (i32, &mut (i32, i32))); // in scope 0 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n-+     let mut _11: &mut (i32, &mut (i32, i32)); // in scope 0 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n-+     let mut _12: &mut (i32, i32);        // in scope 0 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n-+     let mut _13: &mut (i32, &mut (i32, &mut (i32, i32))); // in scope 0 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n-+     let mut _14: &mut (i32, &mut (i32, i32)); // in scope 0 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n-+     let mut _15: &mut (i32, i32);        // in scope 0 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n++     let mut _10: &mut (i32, &mut (i32, &mut (i32, i32))); // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n++     let mut _11: &mut (i32, &mut (i32, i32)); // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n++     let mut _12: &mut (i32, i32);        // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n++     let mut _13: &mut (i32, &mut (i32, &mut (i32, i32))); // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n++     let mut _14: &mut (i32, &mut (i32, i32)); // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n++     let mut _15: &mut (i32, i32);        // in scope 0 at $DIR/derefer_test_multiple.rs:6:9: 6:14\n       scope 1 {\n           debug a => _1;                   // in scope 1 at $DIR/derefer_test_multiple.rs:3:9: 3:14\n           let mut _2: (i32, &mut (i32, i32)); // in scope 1 at $DIR/derefer_test_multiple.rs:4:9: 4:14\n@@ -69,23 +69,23 @@\n +         _10 = move (_6.1: &mut (i32, &mut (i32, &mut (i32, i32)))); // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n +         StorageLive(_11);                // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n +         _11 = move ((*_10).1: &mut (i32, &mut (i32, i32))); // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n++         StorageDead(_10);                // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n +         StorageLive(_12);                // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n +         _12 = move ((*_11).1: &mut (i32, i32)); // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n++         StorageDead(_11);                // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n +         _8 = &mut ((*_12).1: i32);       // scope 4 at $DIR/derefer_test_multiple.rs:7:13: 7:30\n-+         StorageDead(_10);                // scope 5 at $DIR/derefer_test_multiple.rs:8:9: 8:10\n-+         StorageDead(_11);                // scope 5 at $DIR/derefer_test_multiple.rs:8:9: 8:10\n +         StorageDead(_12);                // scope 5 at $DIR/derefer_test_multiple.rs:8:9: 8:10\n           StorageLive(_9);                 // scope 5 at $DIR/derefer_test_multiple.rs:8:9: 8:10\n -         _9 = &mut ((*((*((*(_6.1: &mut (i32, &mut (i32, &mut (i32, i32))))).1: &mut (i32, &mut (i32, i32)))).1: &mut (i32, i32))).1: i32); // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         StorageLive(_13);                // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         _13 = move (_6.1: &mut (i32, &mut (i32, &mut (i32, i32)))); // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         StorageLive(_14);                // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         _14 = move ((*_13).1: &mut (i32, &mut (i32, i32))); // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n++         StorageDead(_13);                // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         StorageLive(_15);                // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         _15 = move ((*_14).1: &mut (i32, i32)); // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n++         StorageDead(_14);                // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n +         _9 = &mut ((*_15).1: i32);       // scope 5 at $DIR/derefer_test_multiple.rs:8:13: 8:30\n-+         StorageDead(_13);                // scope 0 at $DIR/derefer_test_multiple.rs:2:12: 9:2\n-+         StorageDead(_14);                // scope 0 at $DIR/derefer_test_multiple.rs:2:12: 9:2\n +         StorageDead(_15);                // scope 0 at $DIR/derefer_test_multiple.rs:2:12: 9:2\n           _0 = const ();                   // scope 0 at $DIR/derefer_test_multiple.rs:2:12: 9:2\n           StorageDead(_9);                 // scope 5 at $DIR/derefer_test_multiple.rs:9:1: 9:2"}, {"sha": "d1520ec7ae6b7364d0dc2a55939bb3d58072a6a1", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "status": "modified", "additions": 159, "deletions": 137, "changes": 296, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -36,8 +36,19 @@\n       let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n       let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:14: 26:28\n       let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n-+     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      let mut _34: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _35: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _36: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _37: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _38: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _39: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _40: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _41: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _42: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _43: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _44: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _45: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _46: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n       scope 1 {\n -         debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n -         debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n@@ -81,27 +92,24 @@\n           StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n -         StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n-          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb11]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         _35 = Ne(_11, move _34);         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _34 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _11 = discriminant((*_34));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }\n   \n       bb1: {\n--         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n--     }\n-- \n--     bb2: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+          StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _35 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _7 = discriminant((*_35));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      }\n+  \n+      bb2: {\n           StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n-          Deinit(_0);                      // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n           discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n           StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:27: 26:28\n -         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n@@ -110,106 +118,46 @@\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n-  \n-+     bb2: {\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n-+         _15 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n-+         _16 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vw).0: f32) = Add(move _15, move _16); // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n-+         Deinit(((_0 as Ok).0: ViewportPercentageLength)); // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 0; // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+     }\n-+ \n+\n       bb3: {\n--         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-+         _20 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-+         _21 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vh).0: f32) = Add(move _20, move _21); // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-+         Deinit(((_0 as Ok).0: ViewportPercentageLength)); // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 1; // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+          StorageLive(_36);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _36 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _8 = discriminant((*_36));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_36);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }\n   \n       bb4: {\n--         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n-+         _25 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n-+         _26 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vmin).0: f32) = Add(move _25, move _26); // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n-+         Deinit(((_0 as Ok).0: ViewportPercentageLength)); // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 2; // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+          StorageLive(_37);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _37 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _9 = discriminant((*_37));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_37);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }\n   \n       bb5: {\n--         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-+         _30 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-+         _31 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vmax).0: f32) = Add(move _30, move _31); // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-+         Deinit(((_0 as Ok).0: ViewportPercentageLength)); // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 3; // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+          StorageLive(_38);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _38 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _10 = discriminant((*_38));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_38);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }\n   \n       bb6: {\n -         StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n--         _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          StorageLive(_39);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          _39 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+-         _12 = (((*_39) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n++         _15 = (((*_39) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          StorageDead(_39);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n -         StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n--         _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          StorageLive(_40);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          _40 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+-         _13 = (((*_40) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n++         _16 = (((*_40) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          StorageDead(_40);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n -         StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n -         StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n -         _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n@@ -224,14 +172,37 @@\n -         StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n -         StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n -         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n--     }\n-- \n--     bb7: {\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vw).0: f32) = Add(move _15, move _16); // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 0; // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+      }\n+  \n+      bb7: {\n -         StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n--         _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          StorageLive(_41);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          _41 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+-         _17 = (((*_41) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n++         _20 = (((*_41) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          StorageDead(_41);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n -         StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n--         _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          StorageLive(_42);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          _42 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+-         _18 = (((*_42) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n++         _21 = (((*_42) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          StorageDead(_42);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n -         StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n -         StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n -         _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n@@ -246,14 +217,37 @@\n -         StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n -         StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n -         StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--     }\n-- \n--     bb8: {\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vh).0: f32) = Add(move _20, move _21); // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 1; // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+      }\n+  \n+      bb8: {\n -         StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n--         _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          StorageLive(_43);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          _43 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+-         _22 = (((*_43) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n++         _25 = (((*_43) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          StorageDead(_43);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n -         StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n--         _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          StorageLive(_44);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          _44 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+-         _23 = (((*_44) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n++         _26 = (((*_44) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          StorageDead(_44);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n -         StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n -         StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n -         _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n@@ -268,14 +262,37 @@\n -         StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n -         StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n -         StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n--     }\n-- \n--     bb9: {\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vmin).0: f32) = Add(move _25, move _26); // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 2; // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+      }\n+  \n+      bb9: {\n -         StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n--         _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          StorageLive(_45);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          _45 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+-         _27 = (((*_45) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n++         _30 = (((*_45) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          StorageDead(_45);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n -         StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n--         _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          StorageLive(_46);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          _46 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+-         _28 = (((*_46) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n++         _31 = (((*_46) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          StorageDead(_46);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n -         StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n -         StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n -         _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n@@ -290,11 +307,23 @@\n -         StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n -         StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n -         StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--     }\n-- \n--     bb10: {\n-          Deinit(_0);                      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vmax).0: f32) = Add(move _30, move _31); // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 3; // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+      }\n+  \n+      bb10: {\n -         ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n           discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n@@ -304,12 +333,5 @@\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n-  \n--     bb11: {\n--         unreachable;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n-+     bb7: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-      }\n   }\n   "}, {"sha": "4e1a692f64e243096fc57c83fe0ae74bed1e230e", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 92, "deletions": 68, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -36,8 +36,19 @@\n       let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n       let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:14: 26:28\n       let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n-+     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      let mut _34: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _35: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _36: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _37: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _38: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _39: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _40: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _41: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _42: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _43: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _44: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _45: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _46: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n       scope 1 {\n           debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n           debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n@@ -67,55 +78,66 @@\n           (_4.1: &ViewportPercentageLength) = move _6; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n           StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n-          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb11]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         _35 = Ne(_11, move _34);         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _34 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _11 = discriminant((*_34));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }\n   \n       bb1: {\n--         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n--     }\n-- \n--     bb2: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+          StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _35 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _7 = discriminant((*_35));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      }\n+  \n+      bb2: {\n           StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n-          Deinit(_0);                      // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n           discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n           StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:27: 26:28\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n   \n--     bb3: {\n--         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n--     }\n-- \n--     bb4: {\n--         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n--     }\n-- \n--     bb5: {\n--         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n--     }\n-- \n--     bb6: {\n-+     bb2: {\n+      bb3: {\n+          StorageLive(_36);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _36 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _8 = discriminant((*_36));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_36);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      }\n+  \n+      bb4: {\n+          StorageLive(_37);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _37 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _9 = discriminant((*_37));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_37);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      }\n+  \n+      bb5: {\n+          StorageLive(_38);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _38 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          _10 = discriminant((*_38));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_38);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+          switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+      }\n+  \n+      bb6: {\n           StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n-          _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          StorageLive(_39);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          _39 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          _12 = (((*_39) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          StorageDead(_39);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n           StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n-          _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          StorageLive(_40);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          _40 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          _13 = (((*_40) as Vw).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          StorageDead(_40);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n           StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n           StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n           _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n@@ -130,16 +152,20 @@\n           StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n           StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n           StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n       }\n   \n--     bb7: {\n-+     bb3: {\n+      bb7: {\n           StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-          _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          StorageLive(_41);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          _41 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          _17 = (((*_41) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          StorageDead(_41);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n           StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-          _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          StorageLive(_42);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          _42 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          _18 = (((*_42) as Vh).0: f32);   // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          StorageDead(_42);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n           StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n           StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n           _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n@@ -154,16 +180,20 @@\n           StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n           StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n           StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n       }\n   \n--     bb8: {\n-+     bb4: {\n+      bb8: {\n           StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n-          _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          StorageLive(_43);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          _43 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          _22 = (((*_43) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          StorageDead(_43);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n           StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n-          _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          StorageLive(_44);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          _44 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          _23 = (((*_44) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          StorageDead(_44);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n           StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n           StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n           _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n@@ -178,16 +208,20 @@\n           StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n           StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n           StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n       }\n   \n--     bb9: {\n-+     bb5: {\n+      bb9: {\n           StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-          _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          StorageLive(_45);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          _45 = move (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          _27 = (((*_45) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          StorageDead(_45);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n           StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-          _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          StorageLive(_46);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          _46 = move (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          _28 = (((*_46) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          StorageDead(_46);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n           StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n           StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n           _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n@@ -202,25 +236,15 @@\n           StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n           StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n           StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+          goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n       }\n   \n--     bb10: {\n-+     bb6: {\n-          Deinit(_0);                      // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+      bb10: {\n           ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n           discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n-  \n--     bb11: {\n--         unreachable;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n-+     bb7: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-+         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n-      }\n   }\n   "}, {"sha": "3548dae037f285708c36466225e11ec85e7c9bdb", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -6,14 +6,18 @@\n       let mut _0: u32;                     // return place in scope 0 at $DIR/early_otherwise_branch_soundness.rs:12:26: 12:29\n       let mut _2: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:20: 13:30\n       let mut _3: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+      let mut _4: &E;                      // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:12:16: 12:17\n   \n       bb0: {\n           _3 = discriminant((*_1));        // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n           switchInt(move _3) -> [1_isize: bb1, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n       }\n   \n       bb1: {\n-          _2 = discriminant((*(((*_1) as Some).0: &E))); // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          StorageLive(_4);                 // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          _4 = move (((*_1) as Some).0: &E); // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          _2 = discriminant((*_4));        // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n           switchInt(move _2) -> [1_isize: bb2, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n       }\n   "}, {"sha": "b4053a400c2708a91fd76c01df737ef720221cd1", "filename": "src/test/mir-opt/inline/inline_closure_captures.foo.Inline.after.mir", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/aada74b28f69718069eee72ba3c644ab2efd477e/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir?ref=aada74b28f69718069eee72ba3c644ab2efd477e", "patch": "@@ -19,6 +19,8 @@ fn foo(_1: T, _2: i32) -> (i32, T) {\n             debug t => (*((*_6).1: &T)); // in scope 2 at $DIR/inline-closure-captures.rs:10:17: 10:18\n             let mut _10: i32;            // in scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n             let mut _11: T;              // in scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n+            let mut _12: &i32;           // in scope 2 at $DIR/inline-closure-captures.rs:11:13: 11:24\n+            let mut _13: &T;             // in scope 2 at $DIR/inline-closure-captures.rs:11:13: 11:24\n         }\n     }\n \n@@ -43,10 +45,15 @@ fn foo(_1: T, _2: i32) -> (i32, T) {\n         StorageLive(_9);                 // scope 1 at $DIR/inline-closure-captures.rs:12:5: 12:9\n         _9 = move (_7.0: i32);           // scope 1 at $DIR/inline-closure-captures.rs:12:5: 12:9\n         StorageLive(_10);                // scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n-        _10 = (*((*_6).0: &i32));        // scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n+        StorageLive(_12);                // scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n+        _12 = move ((*_6).0: &i32);      // scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n+        _10 = (*_12);                    // scope 2 at $DIR/inline-closure-captures.rs:11:19: 11:20\n+        StorageDead(_12);                // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n         StorageLive(_11);                // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n-        _11 = (*((*_6).1: &T));          // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n-        Deinit(_0);                      // scope 2 at $DIR/inline-closure-captures.rs:11:18: 11:24\n+        StorageLive(_13);                // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n+        _13 = move ((*_6).1: &T);        // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n+        _11 = (*_13);                    // scope 2 at $DIR/inline-closure-captures.rs:11:22: 11:23\n+        StorageDead(_13);                // scope 2 at $DIR/inline-closure-captures.rs:11:18: 11:24\n         (_0.0: i32) = move _10;          // scope 2 at $DIR/inline-closure-captures.rs:11:18: 11:24\n         (_0.1: T) = move _11;            // scope 2 at $DIR/inline-closure-captures.rs:11:18: 11:24\n         StorageDead(_11);                // scope 2 at $DIR/inline-closure-captures.rs:11:23: 11:24"}]}