{"sha": "c04563e1b00551bbc395d5366df3dc98227a05a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNDU2M2UxYjAwNTUxYmJjMzk1ZDUzNjZkZjNkYzk4MjI3YTA1YTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-19T15:56:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-02T22:35:06Z"}, "message": "add some comments about lifetimes etc", "tree": {"sha": "45122e4af296a7dc698b3ceb56c38bf7c99750ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45122e4af296a7dc698b3ceb56c38bf7c99750ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c04563e1b00551bbc395d5366df3dc98227a05a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c04563e1b00551bbc395d5366df3dc98227a05a5", "html_url": "https://github.com/rust-lang/rust/commit/c04563e1b00551bbc395d5366df3dc98227a05a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c04563e1b00551bbc395d5366df3dc98227a05a5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db7193162dc1058c11a0eb920bef91434bfe31c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db7193162dc1058c11a0eb920bef91434bfe31c", "html_url": "https://github.com/rust-lang/rust/commit/1db7193162dc1058c11a0eb920bef91434bfe31c"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "e50095c94d76bad9c3a91921712fee329c39535e", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c04563e1b00551bbc395d5366df3dc98227a05a5/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04563e1b00551bbc395d5366df3dc98227a05a5/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=c04563e1b00551bbc395d5366df3dc98227a05a5", "patch": "@@ -621,6 +621,13 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n }\n \n impl<'a, 'tcx> ty::TyS<'tcx> {\n+    /// Checks whether values of this type `T` are *moved* or *copied*\n+    /// when referenced -- this amounts to a check for whether `T:\n+    /// Copy`, but note that we **don't** consider lifetimes when\n+    /// doing this check. This means that we may generate MIR which\n+    /// does copies even when the type actually doesn't satisfy the\n+    /// full requirements for the `Copy` trait (cc #29149) -- this\n+    /// winds up being reported as an error during NLL borrow check.\n     pub fn moves_by_default(&'tcx self,\n                             tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                             param_env: ty::ParamEnv<'tcx>,\n@@ -629,13 +636,24 @@ impl<'a, 'tcx> ty::TyS<'tcx> {\n         !tcx.at(span).is_copy_raw(param_env.and(self))\n     }\n \n+    /// Checks whether values of this type `T` have a size known at\n+    /// compile time (i.e., whether `T: Sized`). Lifetimes are ignored\n+    /// for the purposes of this check, so it can be an\n+    /// over-approximation in generic contexts, where one can have\n+    /// strange rules like `<T as Foo<'static>>::Bar: Sized` that\n+    /// actually carry lifetime requirements.\n     pub fn is_sized(&'tcx self,\n                     tcx_at: TyCtxtAt<'a, 'tcx, 'tcx>,\n                     param_env: ty::ParamEnv<'tcx>)-> bool\n     {\n         tcx_at.is_sized_raw(param_env.and(self))\n     }\n \n+    /// Checks whether values of this type `T` implement the `Freeze`\n+    /// trait -- frozen types are those that do not contain a\n+    /// `UnsafeCell` anywhere.  This is a language concept used to\n+    /// determine how to handle `static` values, the trait itself is\n+    /// not exposed to end users.\n     pub fn is_freeze(&'tcx self,\n                      tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                      param_env: ty::ParamEnv<'tcx>,"}]}