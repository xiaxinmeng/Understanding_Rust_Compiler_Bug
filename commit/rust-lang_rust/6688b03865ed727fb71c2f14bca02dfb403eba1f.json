{"sha": "6688b03865ed727fb71c2f14bca02dfb403eba1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ODhiMDM4NjVlZDcyN2ZiNzFjMmYxNGJjYTAyZGZiNDAzZWJhMWY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-04-09T18:04:21Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-04-09T18:05:15Z"}, "message": "proc_macro: stop using LEB128 for RPC.", "tree": {"sha": "3bde08cb7ee5d27114c5d62f7997d2dd94b42917", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bde08cb7ee5d27114c5d62f7997d2dd94b42917"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6688b03865ed727fb71c2f14bca02dfb403eba1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6688b03865ed727fb71c2f14bca02dfb403eba1f", "html_url": "https://github.com/rust-lang/rust/commit/6688b03865ed727fb71c2f14bca02dfb403eba1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6688b03865ed727fb71c2f14bca02dfb403eba1f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "5018be74f89973930906a0f9a768186e0c2b57e9", "filename": "src/libproc_macro/bridge/rpc.rs", "status": "modified", "additions": 13, "deletions": 23, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6688b03865ed727fb71c2f14bca02dfb403eba1f/src%2Flibproc_macro%2Fbridge%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6688b03865ed727fb71c2f14bca02dfb403eba1f/src%2Flibproc_macro%2Fbridge%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fbridge%2Frpc.rs?ref=6688b03865ed727fb71c2f14bca02dfb403eba1f", "patch": "@@ -24,32 +24,22 @@ pub(super) trait DecodeMut<'a, 's, S>: Sized {\n }\n \n macro_rules! rpc_encode_decode {\n-    (uleb128 $ty:ty) => {\n+    (le $ty:ty) => {\n         impl<S> Encode<S> for $ty {\n-            fn encode(mut self, w: &mut Writer, s: &mut S) {\n-                let mut byte = 0x80;\n-                while byte & 0x80 != 0 {\n-                    byte = (self & 0x7f) as u8;\n-                    self >>= 7;\n-                    if self != 0 {\n-                        byte |= 0x80;\n-                    }\n-                    byte.encode(w, s);\n-                }\n+            fn encode(self, w: &mut Writer, _: &mut S) {\n+                w.write_all(&self.to_le_bytes()).unwrap();\n             }\n         }\n \n         impl<S> DecodeMut<'_, '_, S> for $ty {\n-            fn decode(r: &mut Reader<'_>, s: &mut S) -> Self {\n-                let mut byte = 0x80;\n-                let mut v = 0;\n-                let mut shift = 0;\n-                while byte & 0x80 != 0 {\n-                    byte = u8::decode(r, s);\n-                    v |= ((byte & 0x7f) as Self) << shift;\n-                    shift += 7;\n-                }\n-                v\n+            fn decode(r: &mut Reader<'_>, _: &mut S) -> Self {\n+                const N: usize = ::std::mem::size_of::<$ty>();\n+\n+                let mut bytes = [0; N];\n+                bytes.copy_from_slice(&r[..N]);\n+                *r = &r[N..];\n+\n+                Self::from_le_bytes(bytes)\n             }\n         }\n     };\n@@ -136,8 +126,8 @@ impl<S> DecodeMut<'_, '_, S> for u8 {\n     }\n }\n \n-rpc_encode_decode!(uleb128 u32);\n-rpc_encode_decode!(uleb128 usize);\n+rpc_encode_decode!(le u32);\n+rpc_encode_decode!(le usize);\n \n impl<S> Encode<S> for bool {\n     fn encode(self, w: &mut Writer, s: &mut S) {"}]}