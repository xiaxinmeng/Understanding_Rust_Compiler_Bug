{"sha": "eae36714dff92b1c149bb48d3f6ecb515c9c0470", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTM2NzE0ZGZmOTJiMWMxNDliYjQ4ZDNmNmVjYjUxNWM5YzA0NzA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T07:52:10Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T14:40:12Z"}, "message": "Rollup merge of #45682 - RalfJung:rwlock-guards, r=alexcrichton\n\nRwLock guards are Sync if T is\n\nCurrently, the compiler requires `T` to also be `Send`.  There is no reason for\nthat.  `&Rw{Read,Write}LockGuard` only provides a shared referenced to `T`, sending\nthat across threads is safe if `T` is `Sync`.\n\nCc @oconnor663", "tree": {"sha": "e9d93bb994ae6fb7db7c5cd59c18c28b905fbd4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d93bb994ae6fb7db7c5cd59c18c28b905fbd4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae36714dff92b1c149bb48d3f6ecb515c9c0470", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAloBxcwACgkQ/vbIBR0O\nATzytBAAnILeoRER6VZgimb7x4ZqMApXXBScIbnTn0i3ng+mE9mmVhE0+q5RaadH\nvkiFDuXirfQIX9sLvzu7nxsrCJDUt6xzbo/nv9bMlcP8gNAU0Hjq9RPa8oB/XPPG\nm6vrUvtV6EzWWLtZq8AC8eCZhe6qG+KgWA70IHe06hyw0BveLdQe/J24HMkLhwA9\nzZ7pb6617XopS89yK2rjwqYJFaIpQLKrOaNMINdO1Ef1WrW7tUoy4vpqicTKaCZ2\n/bPrTB3TS8rFtIZ4GX2+5r/Lp6db+MKyyON2ETOypt9yt7gxr7YLKeEch6mC6JE9\nX+Vp7NaE7EY43OMgebLZBbYKoD97VJVLXgvT54aGDIiA5JA94G0Oy/4gaibOCNo5\nzb/IVxdTJHYWTv5LGoOeX8bCbWNjBkaP4hGrGeuods/h66DwAzCxrN9OhkOEQP+N\nBtfP1R998S/5B0rmARG/7Z0I4pXHQJYYXTIYNbc65/T8OUJRjoGrpx2YjPt7krD3\nATVfSLOJjipFtmMNun4JdKa8630y+m6TtSB58vjMjJmh0X6kVUEu5n5JQ8BVqb9W\n6qkD/rU9HuKMqb83t/JJIHBCkDy3+9/Ie2iD3mUfz1fPADSSsiqlom1/uVkUAD5U\njPDbG3G0IVKAeKTR12alIHhjCbq/RCEKJ+XhXgXyeBmAauLGAhg=\n=lP95\n-----END PGP SIGNATURE-----", "payload": "tree e9d93bb994ae6fb7db7c5cd59c18c28b905fbd4a\nparent 843dc4bd76a337ae8fd49ea3edf619e781aa2cb1\nparent 71534c45cc4e850c4265bc1c2491a522583e1185\nauthor kennytm <kennytm@gmail.com> 1510041130 +0800\ncommitter kennytm <kennytm@gmail.com> 1510065612 +0800\n\nRollup merge of #45682 - RalfJung:rwlock-guards, r=alexcrichton\n\nRwLock guards are Sync if T is\n\nCurrently, the compiler requires `T` to also be `Send`.  There is no reason for\nthat.  `&Rw{Read,Write}LockGuard` only provides a shared referenced to `T`, sending\nthat across threads is safe if `T` is `Sync`.\n\nCc @oconnor663\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae36714dff92b1c149bb48d3f6ecb515c9c0470", "html_url": "https://github.com/rust-lang/rust/commit/eae36714dff92b1c149bb48d3f6ecb515c9c0470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae36714dff92b1c149bb48d3f6ecb515c9c0470/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "843dc4bd76a337ae8fd49ea3edf619e781aa2cb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/843dc4bd76a337ae8fd49ea3edf619e781aa2cb1", "html_url": "https://github.com/rust-lang/rust/commit/843dc4bd76a337ae8fd49ea3edf619e781aa2cb1"}, {"sha": "71534c45cc4e850c4265bc1c2491a522583e1185", "url": "https://api.github.com/repos/rust-lang/rust/commits/71534c45cc4e850c4265bc1c2491a522583e1185", "html_url": "https://github.com/rust-lang/rust/commit/71534c45cc4e850c4265bc1c2491a522583e1185"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d59a0b65a69408d02c50ec082a7c8118d64c3b9d", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eae36714dff92b1c149bb48d3f6ecb515c9c0470/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae36714dff92b1c149bb48d3f6ecb515c9c0470/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=eae36714dff92b1c149bb48d3f6ecb515c9c0470", "patch": "@@ -10,7 +10,6 @@\n \n use cell::UnsafeCell;\n use fmt;\n-use marker;\n use mem;\n use ops::{Deref, DerefMut};\n use ptr;\n@@ -102,7 +101,10 @@ pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: ?Sized> !marker::Send for RwLockReadGuard<'a, T> {}\n+impl<'a, T: ?Sized> !Send for RwLockReadGuard<'a, T> {}\n+\n+#[stable(feature = \"rwlock_guard_sync\", since = \"1.23.0\")]\n+unsafe impl<'a, T: ?Sized + Sync> Sync for RwLockReadGuard<'a, T> {}\n \n /// RAII structure used to release the exclusive write access of a lock when\n /// dropped.\n@@ -121,7 +123,10 @@ pub struct RwLockWriteGuard<'a, T: ?Sized + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: ?Sized> !marker::Send for RwLockWriteGuard<'a, T> {}\n+impl<'a, T: ?Sized> !Send for RwLockWriteGuard<'a, T> {}\n+\n+#[stable(feature = \"rwlock_guard_sync\", since = \"1.23.0\")]\n+unsafe impl<'a, T: ?Sized + Sync> Sync for RwLockWriteGuard<'a, T> {}\n \n impl<T> RwLock<T> {\n     /// Creates a new instance of an `RwLock<T>` which is unlocked."}]}