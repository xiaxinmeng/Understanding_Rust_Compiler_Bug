{"sha": "beb072a8938db93e694435e852510b79a0909fd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjA3MmE4OTM4ZGI5M2U2OTQ0MzVlODUyNTEwYjc5YTA5MDlmZDM=", "commit": {"author": {"name": "Tymoteusz Jankowski", "email": "tymoteusz.jankowski@gmail.com", "date": "2017-07-24T19:45:21Z"}, "committer": {"name": "Tymoteusz Jankowski", "email": "tymoteusz.jankowski@gmail.com", "date": "2017-07-24T19:45:21Z"}, "message": "empty lines", "tree": {"sha": "7425735a7ba21aa36efcadb1dc12182025647b62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7425735a7ba21aa36efcadb1dc12182025647b62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb072a8938db93e694435e852510b79a0909fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb072a8938db93e694435e852510b79a0909fd3", "html_url": "https://github.com/rust-lang/rust/commit/beb072a8938db93e694435e852510b79a0909fd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb072a8938db93e694435e852510b79a0909fd3/comments", "author": null, "committer": null, "parents": [{"sha": "82860753463314e6a1b94f1f97d4d9c4effc0742", "url": "https://api.github.com/repos/rust-lang/rust/commits/82860753463314e6a1b94f1f97d4d9c4effc0742", "html_url": "https://github.com/rust-lang/rust/commit/82860753463314e6a1b94f1f97d4d9c4effc0742"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "1e7c8dfce5b3bda9baec64634ed4dfc0440d7518", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/beb072a8938db93e694435e852510b79a0909fd3/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb072a8938db93e694435e852510b79a0909fd3/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=beb072a8938db93e694435e852510b79a0909fd3", "patch": "@@ -187,9 +187,12 @@ use ops::{Deref, DerefMut, CoerceUnsized};\n use ptr;\n \n /// A mutable memory location.\n+///\n /// # Examples\n+///\n /// Here you can see how using `Cell<T>` allows to use mutable field inside\n /// immutable struct (which is also called 'interior mutability').\n+///\n /// ```\n /// use std::cell::Cell;\n ///\n@@ -204,8 +207,10 @@ use ptr;\n /// };\n ///\n /// let new_value = 100;\n+///\n /// // ERROR, because my_struct is immutable\n /// // immutable.regular_field = new_value;\n+///\n /// // WORKS, although `my_struct` is immutable, field `special_field` is mutable because it is Cell\n /// immutable.special_field.set(new_value);\n /// assert_eq!(immutable.special_field.get(), new_value);"}]}