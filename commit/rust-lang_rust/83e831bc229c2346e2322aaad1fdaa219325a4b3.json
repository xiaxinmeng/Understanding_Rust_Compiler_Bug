{"sha": "83e831bc229c2346e2322aaad1fdaa219325a4b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZTgzMWJjMjI5YzIzNDZlMjMyMmFhYWQxZmRhYTIxOTMyNWE0YjM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T05:24:32Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:16Z"}, "message": "syntax: Remove deprecated expr_vstore_fixed", "tree": {"sha": "06c73c7692cb33eef2741e4b3a60b297190fa741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c73c7692cb33eef2741e4b3a60b297190fa741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83e831bc229c2346e2322aaad1fdaa219325a4b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83e831bc229c2346e2322aaad1fdaa219325a4b3", "html_url": "https://github.com/rust-lang/rust/commit/83e831bc229c2346e2322aaad1fdaa219325a4b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83e831bc229c2346e2322aaad1fdaa219325a4b3/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "html_url": "https://github.com/rust-lang/rust/commit/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae"}], "stats": {"total": 40, "additions": 4, "deletions": 36}, "files": [{"sha": "4bbedf5fc00388c658a20c4e17bc5d741246979f", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -156,7 +156,6 @@ pub fn check_expr(sess: Session,\n           expr_paren(e) => { check_expr(sess, def_map, method_map,\n                                          tcx, e, is_const, v); }\n           expr_vstore(_, expr_vstore_slice) |\n-          expr_vstore(_, expr_vstore_fixed(_)) |\n           expr_vec(_, m_imm) |\n           expr_addr_of(m_imm, _) |\n           expr_field(*) |"}, {"sha": "d610b007f3503429a2a8c2cd56a8b3ec6808dd2b", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -110,7 +110,6 @@ pub fn classify(e: @expr,\n \n               ast::expr_vstore(e, vstore) => {\n                   match vstore {\n-                      ast::expr_vstore_fixed(_) |\n                       ast::expr_vstore_slice => classify(e, tcx),\n                       ast::expr_vstore_uniq |\n                       ast::expr_vstore_box |"}, {"sha": "050fc0dd334ad87a31109ec5c073b9ef00462e68", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -466,9 +466,6 @@ fn const_expr_unadjusted(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n             let (v, _, _) = const_vec(cx, e, *es);\n             v\n           }\n-          ast::expr_vstore(e, ast::expr_vstore_fixed(_)) => {\n-            const_expr(cx, e)\n-          }\n           ast::expr_vstore(sub, ast::expr_vstore_slice) => {\n             match sub.node {\n               ast::expr_lit(ref lit) => {"}, {"sha": "5b66f4f3a6514f9322585a6b7dd9c2a5f695e2a1", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -714,9 +714,6 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n         ast::expr_vstore(contents, ast::expr_vstore_mut_slice) => {\n             return tvec::trans_slice_vstore(bcx, expr, contents, dest);\n         }\n-        ast::expr_vstore(contents, ast::expr_vstore_fixed(_)) => {\n-            return tvec::trans_fixed_vstore(bcx, expr, contents, dest);\n-        }\n         ast::expr_vec(*) | ast::expr_repeat(*) => {\n             return tvec::trans_fixed_vstore(bcx, expr, expr, dest);\n         }"}, {"sha": "475f2c7b13b90efd6282e67a89e0dfe9418afae2", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -3117,7 +3117,6 @@ pub fn expr_kind(tcx: ctxt,\n         ast::expr_lit(@codemap::spanned {node: lit_str(_), _}) |\n         ast::expr_vstore(_, ast::expr_vstore_slice) |\n         ast::expr_vstore(_, ast::expr_vstore_mut_slice) |\n-        ast::expr_vstore(_, ast::expr_vstore_fixed(_)) |\n         ast::expr_vec(*) => {\n             RvalueDpsExpr\n         }"}, {"sha": "8174899f55e775712752daf2944b2b87d662cb59", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -3337,14 +3337,6 @@ pub fn ast_expr_vstore_to_vstore(fcx: @mut FnCtxt,\n                                  v: ast::expr_vstore)\n                               -> ty::vstore {\n     match v {\n-        ast::expr_vstore_fixed(None) => ty::vstore_fixed(n),\n-        ast::expr_vstore_fixed(Some(u)) => {\n-            if n != u {\n-                let s = fmt!(\"fixed-size sequence mismatch: %u vs. %u\",u, n);\n-                fcx.ccx.tcx.sess.span_err(e.span,s);\n-            }\n-            ty::vstore_fixed(u)\n-        }\n         ast::expr_vstore_uniq => ty::vstore_uniq,\n         ast::expr_vstore_box | ast::expr_vstore_mut_box => ty::vstore_box,\n         ast::expr_vstore_slice | ast::expr_vstore_mut_slice => {"}, {"sha": "10b98ec3c08576a8dcd203ce0ca301cd325212e4", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -386,7 +386,6 @@ pub enum vstore {\n #[auto_decode]\n #[deriving(Eq)]\n pub enum expr_vstore {\n-    expr_vstore_fixed(Option<uint>),   // [1,2,3,4]\n     expr_vstore_uniq,                  // ~[1,2,3,4]\n     expr_vstore_box,                   // @[1,2,3,4]\n     expr_vstore_mut_box,               // @mut [1,2,3,4]"}, {"sha": "9499f95f0e76feef79e8b8ec2ec6641bfd525a2a", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -152,11 +152,6 @@ pub fn mk_slice_vec_e(cx: @ext_ctxt, sp: span, +exprs: ~[@ast::expr])\n     mk_vstore_e(cx, sp, mk_base_vec_e(cx, sp, exprs),\n                 ast::expr_vstore_slice)\n }\n-pub fn mk_fixed_vec_e(cx: @ext_ctxt, sp: span, +exprs: ~[@ast::expr])\n-                   -> @ast::expr {\n-    mk_vstore_e(cx, sp, mk_base_vec_e(cx, sp, exprs),\n-                ast::expr_vstore_fixed(None))\n-}\n pub fn mk_base_str(cx: @ext_ctxt, sp: span, +s: ~str) -> @ast::expr {\n     let lit = ast::lit_str(@s);\n     return mk_lit(cx, sp, lit);"}, {"sha": "754f12cc170b0b4b5e458c3b90895456a35afc56", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -28,7 +28,7 @@ use ast::{expr_lit, expr_log, expr_loop, expr_loop_body, expr_mac};\n use ast::{expr_method_call, expr_paren, expr_path, expr_repeat};\n use ast::{expr_ret, expr_swap, expr_struct, expr_tup, expr_unary};\n use ast::{expr_vec, expr_vstore, expr_vstore_mut_box, expr_inline_asm};\n-use ast::{expr_vstore_fixed, expr_vstore_slice, expr_vstore_box};\n+use ast::{expr_vstore_slice, expr_vstore_box};\n use ast::{expr_vstore_mut_slice, expr_while, extern_fn, field, fn_decl};\n use ast::{expr_vstore_uniq, TyClosure, TyBareFn, Onceness, Once, Many};\n use ast::{foreign_item, foreign_item_const, foreign_item_fn, foreign_mod};"}, {"sha": "d85b40537fa4b7b81e28a8813189e5abe9c8becc", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e831bc229c2346e2322aaad1fdaa219325a4b3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=83e831bc229c2346e2322aaad1fdaa219325a4b3", "patch": "@@ -1024,8 +1024,6 @@ pub fn print_vstore(s: @ps, t: ast::vstore) {\n \n pub fn print_expr_vstore(s: @ps, t: ast::expr_vstore) {\n     match t {\n-      ast::expr_vstore_fixed(Some(i)) => word(s.s, fmt!(\"%u\", i)),\n-      ast::expr_vstore_fixed(None) => word(s.s, ~\"_\"),\n       ast::expr_vstore_uniq => word(s.s, ~\"~\"),\n       ast::expr_vstore_box => word(s.s, ~\"@\"),\n       ast::expr_vstore_mut_box => {\n@@ -1100,16 +1098,9 @@ pub fn print_expr(s: @ps, &&expr: @ast::expr) {\n     let ann_node = node_expr(s, expr);\n     (s.ann.pre)(ann_node);\n     match expr.node {\n-        ast::expr_vstore(e, v) => match v {\n-            ast::expr_vstore_fixed(_) => {\n-                print_expr(s, e);\n-                word(s.s, ~\"/\");\n-                print_expr_vstore(s, v);\n-            }\n-            _ => {\n-                print_expr_vstore(s, v);\n-                print_expr(s, e);\n-            }\n+        ast::expr_vstore(e, v) => {\n+            print_expr_vstore(s, v);\n+            print_expr(s, e);\n         },\n       ast::expr_vec(ref exprs, mutbl) => {\n         ibox(s, indent_unit);"}]}