{"sha": "553ac5279ec8ff1eb77fe78d3e8f94b499aae306", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1M2FjNTI3OWVjOGZmMWViNzdmZTc4ZDNlOGY5NGI0OTlhYWUzMDY=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2017-08-03T13:56:25Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2017-08-03T14:04:05Z"}, "message": "Updated release notes for 1.20", "tree": {"sha": "6f6bd9196ba3cd51ce50c842c7b24f522b8428c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f6bd9196ba3cd51ce50c842c7b24f522b8428c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/553ac5279ec8ff1eb77fe78d3e8f94b499aae306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/553ac5279ec8ff1eb77fe78d3e8f94b499aae306", "html_url": "https://github.com/rust-lang/rust/commit/553ac5279ec8ff1eb77fe78d3e8f94b499aae306", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/553ac5279ec8ff1eb77fe78d3e8f94b499aae306/comments", "author": null, "committer": null, "parents": [{"sha": "12aad38ad40f489c5700747158426adee2b732c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/12aad38ad40f489c5700747158426adee2b732c0", "html_url": "https://github.com/rust-lang/rust/commit/12aad38ad40f489c5700747158426adee2b732c0"}], "stats": {"total": 138, "additions": 137, "deletions": 1}, "files": [{"sha": "d42d879f3d81ef350c16ee4d9d7ea9ae2a0a9b57", "filename": "RELEASES.md", "status": "modified", "additions": 137, "deletions": 1, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/553ac5279ec8ff1eb77fe78d3e8f94b499aae306/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/553ac5279ec8ff1eb77fe78d3e8f94b499aae306/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=553ac5279ec8ff1eb77fe78d3e8f94b499aae306", "patch": "@@ -1,3 +1,139 @@\n+Version 1.20.0 (2017-08-31)\n+===========================\n+\n+Language\n+--------\n+- [Associated constants in traits is now stabilised.][42809]\n+- [A lot of macro bugs are now fixed.][42913]\n+\n+Compiler\n+--------\n+\n+- [Struct fields are now properly to the expected field type.][42807]\n+- [Enabled wasm LLVM backend][42571] WASM can now be built with the\n+  `wasm32-experimental-emscripten` target.\n+- [Changed some of the error messages to be more helpful.][42033]\n+- [Add support for RELRO(RELocation Read-Only) for platforms that support\n+  it.][43170]\n+- [rustc now reports the total number of errors on compilation failure][43015]\n+  previously this was only the number of errors in the pass that failed.\n+- [Expansion in rustc has been sped up 29x.][42533]\n+- [added `msp430-none-elf` target.][43099]\n+- [rustc will now suggest one-argument enum variant to fix type mismatch when\n+  applicable][43178]\n+- [Fixes backtraces on Redox][43228]\n+- [rustc now identifies different versions of same crate when absolute paths of\n+  different types match in an error message.][42826]\n+\n+Libraries\n+---------\n+\n+- [`Ref`, `RefMut`, `MutexGuard`, `RwLockReadGuard`, `RwLockWriteGuard`\n+  now impl `fmt::Display` & `fmt::Debug`.][42822]\n+- [Relaxed Debug constraints on {HashMap,BTreeMap}::{Keys,Values}.][42854]\n+- [Implement `PartialEq`, `Eq`, `PartialOrd`, `Ord`, `Debug`, `Hash` for unsized\n+  tuples.][43011]\n+- [Impl `Clone` for `DefaultHasher`.][42799]\n+- [Implement `Sync` for `SyncSender`.][42397]\n+- [Fixed how `{f32, f64}::{is_sign_negative, is_sign_positive}` handles\n+  NaN.][42431]\n+- [allow messages in the `unimplemented!()` macro.][42155]\n+  ie. `unimplemented!(\"Waiting for 1.21 to be stable\")`\n+- [`char`now impls `FromStr`.][42271]\n+- [support pub(restricted) in thread_local! (round 2)][43185]\n+- [Upgrade to Unicode 10.0.0][42999]\n+- [Reimplemented `{f32, f64}::{min, max}` in Rust instead of using CMath.][42430]\n+- [Skip the main thread's manual stack guard on Linux][43072]\n+- [Iterator::nth for `ops::{Range, RangeFrom}` is now done in O(1) time][43077]\n+- [`#cfg[align(N)]` attribute max number is now 2^31 - 1.][43097] This was\n+  previously 2^15.\n+- [`{OsStr, Path}::Display` now avoids allocations where possible][42613]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`Chain::get_mut`]\n+- [`Chain::get_ref`]\n+- [`Chain::into_inner`]\n+- [`Take::get_mut`]\n+- [`Take::get_ref`]\n+- [`f32::from_bits`]\n+- [`f32::to_bits`]\n+- [`f64::from_bits`]\n+- [`f64::to_bits`]\n+- [`slice::sort_unstable`]\n+- [`slice::sort_unstable_by`]\n+- [`slice::sort_unstable_by_key`]\n+\n+Cargo\n+-----\n+- [Cargo API token location moved from `~/.cargo/config` to\n+  `~/cargo/credentials`.][cargo/3978]\n+- [Cargo will now build multiple `main.rs` binaries in different\n+  directories.][cargo/4214] ie. Having `src/server/main.rs` and\n+  `src/client/main.rs` generates `target/debug/server` and `target/debug/client`\n+- [You can now specify version of a binary when installed through\n+  `cargo install` using `--vers`.][cargo/4229]\n+- [Added `--no-fail-fast` flag to cargo to run all benchmarks regardless of\n+  failure.][cargo/4248]\n+- [Changed the convention around which file is the crate root.][cargo/4259]\n+- [The `include`/`exclude` property in `Cargo.toml` now accepts gitignore paths\n+  instead of glob patterns][cargo/4270]. Glob patterns are now deprecated.\n+\n+Compatibility Notes\n+-------------------\n+\n+- [Functions with `'static` in their return types will now not be as usable as\n+  if they were using lifetime parameters instead.][42417]\n+\n+[42033]: https://github.com/rust-lang/rust/pull/42033\n+[42155]: https://github.com/rust-lang/rust/pull/42155\n+[42271]: https://github.com/rust-lang/rust/pull/42271\n+[42397]: https://github.com/rust-lang/rust/pull/42397\n+[42417]: https://github.com/rust-lang/rust/pull/42417\n+[42430]: https://github.com/rust-lang/rust/pull/42430\n+[42431]: https://github.com/rust-lang/rust/pull/42431\n+[42533]: https://github.com/rust-lang/rust/pull/42533\n+[42571]: https://github.com/rust-lang/rust/pull/42571\n+[42613]: https://github.com/rust-lang/rust/pull/42613\n+[42799]: https://github.com/rust-lang/rust/pull/42799\n+[42807]: https://github.com/rust-lang/rust/pull/42807\n+[42809]: https://github.com/rust-lang/rust/pull/42809\n+[42822]: https://github.com/rust-lang/rust/pull/42822\n+[42826]: https://github.com/rust-lang/rust/pull/42826\n+[42854]: https://github.com/rust-lang/rust/pull/42854\n+[42913]: https://github.com/rust-lang/rust/pull/42913\n+[42999]: https://github.com/rust-lang/rust/pull/42999\n+[43011]: https://github.com/rust-lang/rust/pull/43011\n+[43015]: https://github.com/rust-lang/rust/pull/43015\n+[43072]: https://github.com/rust-lang/rust/pull/43072\n+[43077]: https://github.com/rust-lang/rust/pull/43077\n+[43097]: https://github.com/rust-lang/rust/pull/43097\n+[43099]: https://github.com/rust-lang/rust/pull/43099\n+[43170]: https://github.com/rust-lang/rust/pull/43170\n+[43178]: https://github.com/rust-lang/rust/pull/43178\n+[43185]: https://github.com/rust-lang/rust/pull/43185\n+[43228]: https://github.com/rust-lang/rust/pull/43228\n+[cargo/3978]: https://github.com/rust-lang/cargo/pull/3978\n+[cargo/4214]: https://github.com/rust-lang/cargo/pull/4214\n+[cargo/4229]: https://github.com/rust-lang/cargo/pull/4229\n+[cargo/4248]: https://github.com/rust-lang/cargo/pull/4248\n+[cargo/4259]: https://github.com/rust-lang/cargo/pull/4259\n+[cargo/4270]: https://github.com/rust-lang/cargo/pull/4270\n+[`Chain::get_mut`]: https://doc.rust-lang.org/std/io/struct.Chain.html#method.get_mut\n+[`Chain::get_ref`]: https://doc.rust-lang.org/std/io/struct.Chain.html#method.get_ref\n+[`Chain::into_inner`]: https://doc.rust-lang.org/std/io/struct.Chain.html#method.into_inner\n+[`Take::get_mut`]: https://doc.rust-lang.org/std/io/struct.Take.html#method.get_mut\n+[`Take::get_ref`]: https://doc.rust-lang.org/std/io/struct.Take.html#method.get_ref\n+[`f32::from_bits`]: https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits\n+[`f32::to_bits`]: https://doc.rust-lang.org/std/primitive.f32.html#method.to_bits\n+[`f64::from_bits`]: https://doc.rust-lang.org/std/primitive.f64.html#method.from_bits\n+[`f64::to_bits`]: https://doc.rust-lang.org/std/primitive.f64.html#method.to_bits\n+[`slice::sort_unstable_by_key`]: https://doc.rust-lang.org/std/primitive.slice.html#method.sort_unstable_by_key\n+[`slice::sort_unstable_by`]: https://doc.rust-lang.org/std/primitive.slice.html#method.sort_unstable_by\n+[`slice::sort_unstable`]: https://doc.rust-lang.org/std/primitive.slice.html#method.sort_unstable\n+\n+\n Version 1.19.0 (2017-07-20)\n ===========================\n \n@@ -1679,7 +1815,7 @@ Tooling\n \n * [Test binaries now support a `--test-threads` argument to specify the number\n   of threads used to run tests, and which acts the same as the\n-  `RUST_TEST_THREADS` environment variable](https://github.com/rust-lang/rust/pull/35414)  \n+  `RUST_TEST_THREADS` environment variable](https://github.com/rust-lang/rust/pull/35414)\n * [The test runner now emits a warning when tests run over 60 seconds](https://github.com/rust-lang/rust/pull/35405)\n * [rustdoc: Fix methods in search results](https://github.com/rust-lang/rust/pull/34752)\n * [`rust-lldb` warns about unsupported versions of LLDB](https://github.com/rust-lang/rust/pull/34646)"}]}