{"sha": "baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWFjMmY5YWMwZTY0ZWVmZTIyNzc5ZDI4YTQyMWM1ZjVlYWRiNTg=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-17T10:24:57Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-17T10:25:26Z"}, "message": "libsyntax: Long lines.", "tree": {"sha": "f36b691caf4152732e7ac8f13b88843155cba221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36b691caf4152732e7ac8f13b88843155cba221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "html_url": "https://github.com/rust-lang/rust/commit/baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baeac2f9ac0e64eefe22779d28a421c5f5eadb58/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de57bacf436499270e48db4820baa24f68f1542b", "url": "https://api.github.com/repos/rust-lang/rust/commits/de57bacf436499270e48db4820baa24f68f1542b", "html_url": "https://github.com/rust-lang/rust/commit/de57bacf436499270e48db4820baa24f68f1542b"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "6638a47ebf84af70e1ce15820eeb6f9a781de8e7", "filename": "src/libsyntax/ext/pipes/ast_builder.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/baeac2f9ac0e64eefe22779d28a421c5f5eadb58/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baeac2f9ac0e64eefe22779d28a421c5f5eadb58/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs?ref=baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "patch": "@@ -93,9 +93,12 @@ pub trait ext_ctxt_ast_builder {\n                         ty_params: ~[ast::ty_param]) -> @ast::item;\n     fn item_struct(&self, name: ident, span: span,\n                    struct_def: ast::struct_def) -> @ast::item;\n-    fn struct_expr(&self, path: @ast::path, fields: ~[ast::field]) -> @ast::expr;\n-    fn variant(&self, name: ident, span: span, +tys: ~[@ast::Ty]) -> ast::variant;\n-    fn item_mod(&self, name: ident, span: span, +items: ~[@ast::item]) -> @ast::item;\n+    fn struct_expr(&self, path: @ast::path,\n+                   fields: ~[ast::field]) -> @ast::expr;\n+    fn variant(&self, name: ident, span: span,\n+               +tys: ~[@ast::Ty]) -> ast::variant;\n+    fn item_mod(&self, name: ident, span: span,\n+                +items: ~[@ast::item]) -> @ast::item;\n     fn ty_path_ast_builder(&self, path: @ast::path) -> @ast::Ty;\n     fn item_ty_poly(&self, name: ident,\n                     span: span,\n@@ -282,7 +285,8 @@ pub impl ext_ctxt_ast_builder for ext_ctxt {\n         self.item(name, span, ast::item_struct(@struct_def, ty_params))\n     }\n \n-    fn struct_expr(&self, path: @ast::path, fields: ~[ast::field]) -> @ast::expr {\n+    fn struct_expr(&self, path: @ast::path,\n+                   fields: ~[ast::field]) -> @ast::expr {\n         @ast::expr {\n             id: self.next_id(),\n             callee_id: self.next_id(),"}, {"sha": "77164803caa610663e409a7af3e6aa3819349884", "filename": "src/libsyntax/ext/pipes/pipec.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/baeac2f9ac0e64eefe22779d28a421c5f5eadb58/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baeac2f9ac0e64eefe22779d28a421c5f5eadb58/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs?ref=baeac2f9ac0e64eefe22779d28a421c5f5eadb58", "patch": "@@ -33,7 +33,8 @@ pub trait gen_send {\n \n pub trait to_type_decls {\n     fn to_type_decls(&self, cx: ext_ctxt) -> ~[@ast::item];\n-    fn to_endpoint_decls(&self, cx: ext_ctxt, dir: direction) -> ~[@ast::item];\n+    fn to_endpoint_decls(&self, cx: ext_ctxt,\n+                         dir: direction) -> ~[@ast::item];\n }\n \n pub trait gen_init {\n@@ -253,7 +254,8 @@ pub impl to_type_decls for state {\n         ]\n     }\n \n-    fn to_endpoint_decls(&self, cx: ext_ctxt, dir: direction) -> ~[@ast::item] {\n+    fn to_endpoint_decls(&self, cx: ext_ctxt,\n+                         dir: direction) -> ~[@ast::item] {\n         debug!(\"pipec: to_endpoint_decls\");\n         let dir = match dir {\n           send => (*self).dir,"}]}