{"sha": "d0c1e6480c7d6e99118adf9f6aa2d25ac9625647", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYzFlNjQ4MGM3ZDZlOTkxMThhZGY5ZjZhYTJkMjVhYzk2MjU2NDc=", "commit": {"author": {"name": "Aidan Hobson Sayers", "email": "aidanhs@cantab.net", "date": "2017-06-14T23:19:21Z"}, "committer": {"name": "Aidan Hobson Sayers", "email": "aidanhs@cantab.net", "date": "2017-06-14T23:31:39Z"}, "message": "Use --depth to speed up pristine submodule cloning\n\nIn addition, remove all the unused cache stuff", "tree": {"sha": "acf944949d30a9de7b69c45a2a5d3c75427b291f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf944949d30a9de7b69c45a2a5d3c75427b291f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647", "html_url": "https://github.com/rust-lang/rust/commit/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647/comments", "author": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "554c685b0b3b25b7aa752717edf50b8d6bcab7a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/554c685b0b3b25b7aa752717edf50b8d6bcab7a0", "html_url": "https://github.com/rust-lang/rust/commit/554c685b0b3b25b7aa752717edf50b8d6bcab7a0"}], "stats": {"total": 39, "additions": 4, "deletions": 35}, "files": [{"sha": "817ed8dd55437e08338e54b1e00b8ac320609d14", "filename": "src/ci/init_repo.sh", "status": "modified", "additions": 4, "deletions": 35, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0c1e6480c7d6e99118adf9f6aa2d25ac9625647/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=d0c1e6480c7d6e99118adf9f6aa2d25ac9625647", "patch": "@@ -22,9 +22,6 @@ REPO_DIR=\"$1\"\n CACHE_DIR=\"$2\"\n \n cache_src_dir=\"$CACHE_DIR/src\"\n-# If the layout of the cache directory changes, bump the number here\n-# (and anywhere else this file is referenced) so the cache is wiped\n-cache_valid_file=\"$CACHE_DIR/cache_valid1\"\n \n if [ ! -d \"$REPO_DIR\" -o ! -d \"$REPO_DIR/.git\" ]; then\n     echo \"Error: $REPO_DIR does not exist or is not a git repo\"\n@@ -36,47 +33,19 @@ if [ ! -d \"$CACHE_DIR\" ]; then\n     exit 1\n fi\n \n-# Wipe the cache if it's not valid, or mark it as invalid while we update it\n-if [ ! -f \"$cache_valid_file\" ]; then\n-    echo \"Invalid cache, wiping ($cache_valid_file missing)\"\n-    rm -rf \"$CACHE_DIR\"\n-    mkdir \"$CACHE_DIR\"\n-else\n-    # Ignore errors while gathering information about the possible brokenness\n-    # of the git repo since our gathered info will tell us something is wrong\n-    set +o errexit\n-    stat_lines=$(cd \"$cache_src_dir\" && git status --porcelain | wc -l)\n-    stat_ec=$(cd \"$cache_src_dir\" && git status >/dev/null 2>&1; echo $?)\n-    set -o errexit\n-    if [ ! -d \"$cache_src_dir/.git\" -o $stat_lines != 0 -o $stat_ec != 0 ]; then\n-        # Something is badly wrong - the cache valid file is here, but something\n-        # about the git repo is fishy. Nuke it all, just in case\n-        echo \"WARNING: $cache_valid_file exists but bad repo: l:$stat_lines, ec:$stat_ec\"\n-        rm -rf \"$CACHE_DIR\"\n-        mkdir \"$CACHE_DIR\"\n-    else\n-        echo \"Valid cache ($cache_valid_file exists)\"\n-        rm \"$cache_valid_file\"\n-    fi\n-fi\n+rm -rf \"$CACHE_DIR\"\n+mkdir \"$CACHE_DIR\"\n \n travis_fold start update_cache\n travis_time_start\n \n # Update the cache (a pristine copy of the rust source master)\n-if [ ! -d \"$cache_src_dir/.git\" ]; then\n-    retry sh -c \"rm -rf $cache_src_dir && mkdir -p $cache_src_dir && \\\n-        git clone https://github.com/rust-lang/rust.git $cache_src_dir\"\n-fi\n-retry sh -c \"cd $cache_src_dir && git reset --hard && git pull\"\n+retry sh -c \"rm -rf $cache_src_dir && mkdir -p $cache_src_dir && \\\n+    git clone --depth 1 https://github.com/rust-lang/rust.git $cache_src_dir\"\n (cd $cache_src_dir && git rm src/llvm)\n retry sh -c \"cd $cache_src_dir && \\\n     git submodule deinit -f . && git submodule sync && git submodule update --init\"\n \n-# Cache was updated without errors, mark it as valid\n-echo \"Refreshed cache (touch $cache_valid_file)\"\n-touch \"$cache_valid_file\"\n-\n travis_fold end update_cache\n travis_time_finish\n "}]}