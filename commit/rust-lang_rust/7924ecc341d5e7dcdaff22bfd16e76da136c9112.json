{"sha": "7924ecc341d5e7dcdaff22bfd16e76da136c9112", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MjRlY2MzNDFkNWU3ZGNkYWZmMjJiZmQxNmU3NmRhMTM2YzkxMTI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-09T18:06:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T18:06:59Z"}, "message": "Rollup merge of #78830 - lcnr:mir-folder, r=oli-obk\n\nfix `super_visit_with` for `Terminator`\n\nfixes https://github.com/rust-lang/rust/pull/78182#discussion_r509265149\n\nr? `@oli-obk`\n\ncc `@LeSeulArtichaut`", "tree": {"sha": "655e42f94111b39e2447aef6346a82c869de8c95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/655e42f94111b39e2447aef6346a82c869de8c95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7924ecc341d5e7dcdaff22bfd16e76da136c9112", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqYVECRBK7hj4Ov3rIwAAdHIIAHqQEJeDjUdEcbBke+lQIJjb\nBaqssvsNASiWhjCxLLT/xCLVTD1LCWEQQKrR5kz96F3IS0u9JFVLbtuQQJdO3vad\nYOz+XQ6tcpJbcGRT+W3PGoi2TU6jUGUv1Orey2j5NiD3g/YE70WxITB9uCDRlZf8\nUgpOyIqAv00jGLj1rPGbNU54+7Mar1tPGp/keRpnN/Byh2iicxRy3fN1fNuG8vFG\nRWCyt0IlNmH0egt4eYU1yN03oLCH9DSkNz6gGDGxRvGHMHh1qId6kEz5WTTeFZqS\nJA7HYeCssXWhOu0pFdFoJRTpNtLwbB9ZxllOEqU4X5PD/2J427lNYUB0GtW7FX4=\n=eNqY\n-----END PGP SIGNATURE-----\n", "payload": "tree 655e42f94111b39e2447aef6346a82c869de8c95\nparent 4e0695b79fbe5acc5ef1df82166b283368a643ac\nparent 103f7a499b2eeff908ce9234c812262a9e87a16f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1604945219 +0100\ncommitter GitHub <noreply@github.com> 1604945219 +0100\n\nRollup merge of #78830 - lcnr:mir-folder, r=oli-obk\n\nfix `super_visit_with` for `Terminator`\n\nfixes https://github.com/rust-lang/rust/pull/78182#discussion_r509265149\n\nr? `@oli-obk`\n\ncc `@LeSeulArtichaut`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7924ecc341d5e7dcdaff22bfd16e76da136c9112", "html_url": "https://github.com/rust-lang/rust/commit/7924ecc341d5e7dcdaff22bfd16e76da136c9112", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7924ecc341d5e7dcdaff22bfd16e76da136c9112/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0695b79fbe5acc5ef1df82166b283368a643ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0695b79fbe5acc5ef1df82166b283368a643ac", "html_url": "https://github.com/rust-lang/rust/commit/4e0695b79fbe5acc5ef1df82166b283368a643ac"}, {"sha": "103f7a499b2eeff908ce9234c812262a9e87a16f", "url": "https://api.github.com/repos/rust-lang/rust/commits/103f7a499b2eeff908ce9234c812262a9e87a16f", "html_url": "https://github.com/rust-lang/rust/commit/103f7a499b2eeff908ce9234c812262a9e87a16f"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "0801188b27881c80d9c531a0d483da710e51f06a", "filename": "compiler/rustc_middle/src/mir/type_foldable.rs", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7924ecc341d5e7dcdaff22bfd16e76da136c9112/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7924ecc341d5e7dcdaff22bfd16e76da136c9112/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs?ref=7924ecc341d5e7dcdaff22bfd16e76da136c9112", "patch": "@@ -109,24 +109,21 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n                 args.visit_with(visitor)\n             }\n             Assert { ref cond, ref msg, .. } => {\n-                if cond.visit_with(visitor).is_break() {\n-                    use AssertKind::*;\n-                    match msg {\n-                        BoundsCheck { ref len, ref index } => {\n-                            len.visit_with(visitor)?;\n-                            index.visit_with(visitor)\n-                        }\n-                        Overflow(_, l, r) => {\n-                            l.visit_with(visitor)?;\n-                            r.visit_with(visitor)\n-                        }\n-                        OverflowNeg(op) | DivisionByZero(op) | RemainderByZero(op) => {\n-                            op.visit_with(visitor)\n-                        }\n-                        ResumedAfterReturn(_) | ResumedAfterPanic(_) => ControlFlow::CONTINUE,\n+                cond.visit_with(visitor)?;\n+                use AssertKind::*;\n+                match msg {\n+                    BoundsCheck { ref len, ref index } => {\n+                        len.visit_with(visitor)?;\n+                        index.visit_with(visitor)\n+                    }\n+                    Overflow(_, l, r) => {\n+                        l.visit_with(visitor)?;\n+                        r.visit_with(visitor)\n+                    }\n+                    OverflowNeg(op) | DivisionByZero(op) | RemainderByZero(op) => {\n+                        op.visit_with(visitor)\n                     }\n-                } else {\n-                    ControlFlow::CONTINUE\n+                    ResumedAfterReturn(_) | ResumedAfterPanic(_) => ControlFlow::CONTINUE,\n                 }\n             }\n             InlineAsm { ref operands, .. } => operands.visit_with(visitor),"}]}