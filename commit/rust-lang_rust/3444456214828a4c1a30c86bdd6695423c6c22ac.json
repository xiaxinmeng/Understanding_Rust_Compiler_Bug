{"sha": "3444456214828a4c1a30c86bdd6695423c6c22ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NDQ0NTYyMTQ4MjhhNGMxYTMwYzg2YmRkNjY5NTQyM2M2YzIyYWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-22T11:10:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-22T11:10:06Z"}, "message": "Auto merge of #1455 - RalfJung:rustup, r=RalfJung\n\nRustup\n\nalso stop testing with mir opts as they are currently broken", "tree": {"sha": "afbf9b40affe380758ec77fbc9734a2ffd8117b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afbf9b40affe380758ec77fbc9734a2ffd8117b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3444456214828a4c1a30c86bdd6695423c6c22ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3444456214828a4c1a30c86bdd6695423c6c22ac", "html_url": "https://github.com/rust-lang/rust/commit/3444456214828a4c1a30c86bdd6695423c6c22ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3444456214828a4c1a30c86bdd6695423c6c22ac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ad5f6b2b93f78d3366c0654609f4b685043ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ad5f6b2b93f78d3366c0654609f4b685043ec9", "html_url": "https://github.com/rust-lang/rust/commit/31ad5f6b2b93f78d3366c0654609f4b685043ec9"}, {"sha": "4788f775f85e1a40aef5893dac5b97e0c7a314ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/4788f775f85e1a40aef5893dac5b97e0c7a314ae", "html_url": "https://github.com/rust-lang/rust/commit/4788f775f85e1a40aef5893dac5b97e0c7a314ae"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "0625c25575726d40c5bcefb3860d3c0a310e2dc1", "filename": "ci.sh", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3444456214828a4c1a30c86bdd6695423c6c22ac/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3444456214828a4c1a30c86bdd6695423c6c22ac/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=3444456214828a4c1a30c86bdd6695423c6c22ac", "patch": "@@ -23,10 +23,11 @@ function run_tests {\n   fi\n \n   ./miri test --locked\n-  if ! [ -n \"${MIRI_TEST_TARGET+exists}\" ]; then\n+  #if ! [ -n \"${MIRI_TEST_TARGET+exists}\" ]; then\n     # Only for host architecture: tests with MIR optimizations\n-    MIRI_TEST_FLAGS=\"-Z mir-opt-level=3\" ./miri test --locked\n-  fi\n+    # FIXME: disabled because of <https://github.com/rust-lang/rust/issues/73609>.\n+    #MIRI_TEST_FLAGS=\"-Z mir-opt-level=3\" ./miri test --locked\n+  #fi\n   # \"miri test\" has built the sysroot for us, now this should pass without\n   # any interactive questions.\n   ${PYTHON:-python3} test-cargo-miri/run-test.py"}, {"sha": "9f71640a53f1d767cdf9b9cf905ee92d3fa5c5ae", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3444456214828a4c1a30c86bdd6695423c6c22ac/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/3444456214828a4c1a30c86bdd6695423c6c22ac/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=3444456214828a4c1a30c86bdd6695423c6c22ac", "patch": "@@ -1 +1 @@\n-033013cab3a861224fd55f494c8be1cb0349eb49\n+1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3"}, {"sha": "3a32d970d637a70f7d65ce6d8ee1e4defee4b270", "filename": "tests/run-pass/issue-73223.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3444456214828a4c1a30c86bdd6695423c6c22ac/tests%2Frun-pass%2Fissue-73223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3444456214828a4c1a30c86bdd6695423c6c22ac/tests%2Frun-pass%2Fissue-73223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-73223.rs?ref=3444456214828a4c1a30c86bdd6695423c6c22ac", "patch": "@@ -0,0 +1,22 @@\n+fn main() {\n+    let mut state = State { prev: None, next: Some(8) };\n+    let path = \"/nested/some/more\";\n+    assert_eq!(state.rest(path), \"some/more\");\n+}\n+\n+struct State {\n+    prev: Option<usize>,\n+    next: Option<usize>,\n+}\n+\n+impl State {\n+    fn rest<'r>(&mut self, path: &'r str) -> &'r str {\n+        let start = match self.next.take() {\n+            Some(v) => v,\n+            None => return \"\",\n+        };\n+\n+        self.prev = Some(start);\n+        &path[start..]\n+    }\n+}"}]}