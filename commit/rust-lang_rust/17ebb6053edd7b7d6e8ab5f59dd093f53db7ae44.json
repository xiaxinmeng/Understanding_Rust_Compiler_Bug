{"sha": "17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZWJiNjA1M2VkZDdiN2Q2ZThhYjVmNTlkZDA5M2Y1M2RiN2FlNDQ=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2014-12-25T07:01:24Z"}, "committer": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2015-01-21T13:31:09Z"}, "message": "fix fallout", "tree": {"sha": "aac84b1cca8e3549bb793813343f70a2c1a647ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac84b1cca8e3549bb793813343f70a2c1a647ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "html_url": "https://github.com/rust-lang/rust/commit/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52997408ec4265939c8017ef8de24babe4b73b7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/52997408ec4265939c8017ef8de24babe4b73b7f", "html_url": "https://github.com/rust-lang/rust/commit/52997408ec4265939c8017ef8de24babe4b73b7f"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "45b77ea2dddc4fc351285807fcb7b68e0df7d930", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "patch": "@@ -72,6 +72,13 @@ type blockcodefn = extern \"C\" fn(*mut hoedown_buffer, *const hoedown_buffer,\n type headerfn = extern \"C\" fn(*mut hoedown_buffer, *const hoedown_buffer,\n                               libc::c_int, *mut libc::c_void);\n \n+type linkfn = extern \"C\" fn (*mut hoedown_buffer, *const hoedown_buffer,\n+                             *const hoedown_buffer, *const hoedown_buffer,\n+                             *mut libc::c_void) -> libc::c_int;\n+\n+type normaltextfn = extern \"C\" fn(*mut hoedown_buffer, *const hoedown_buffer,\n+                                  *mut libc::c_void);\n+\n #[repr(C)]\n struct hoedown_renderer {\n     opaque: *mut libc::c_void,\n@@ -83,21 +90,18 @@ struct hoedown_renderer {\n                                     *mut libc::c_void)>,\n     header: Option<headerfn>,\n \n-    other_block_level_callbacks: [libc::size_t, ..9],\n+    other_block_level_callbacks: [libc::size_t; 9],\n \n     /* span level callbacks - NULL or return 0 prints the span verbatim */\n-    other_span_level_callbacks_1: [libc::size_t, ..9],\n-    link: Option<extern \"C\" fn (*mut hoedown_buffer, *const hoedown_buffer,\n-                                *const hoedown_buffer, *const hoedown_buffer,\n-                                *mut libc::c_void) -> libc::c_int>,\n-    other_span_level_callbacks_2: [libc::size_t, ..5],\n+    other_span_level_callbacks_1: [libc::size_t; 9],\n+    link: Option<linkfn>,\n+    other_span_level_callbacks_2: [libc::size_t; 5],\n     // hoedown will add `math` callback here, but we use an old version of it.\n \n     /* low level callbacks - NULL copies input directly into the output */\n     entity: Option<extern \"C\" fn(*mut hoedown_buffer, *const hoedown_buffer,\n                                  *mut libc::c_void)>,\n-    normal_text: Option<extern \"C\" fn(*mut hoedown_buffer, *const hoedown_buffer,\n-                                      *mut libc::c_void)>,\n+    normal_text: Option<normaltextfn>,\n \n     /* header and footer */\n     doc_header: Option<extern \"C\" fn(*mut hoedown_buffer, *mut libc::c_void)>,\n@@ -502,14 +506,18 @@ pub fn plain_summary_line(md: &str) -> String {\n         let mut plain_renderer: hoedown_renderer = ::std::mem::zeroed();\n         let renderer = &mut plain_renderer as *mut hoedown_renderer;\n         (*renderer).opaque = ob as *mut libc::c_void;\n-        (*renderer).link = Some(link);\n-        (*renderer).normal_text = Some(normal_text);\n+        (*renderer).link = Some(link as linkfn);\n+        (*renderer).normal_text = Some(normal_text as normaltextfn);\n \n         let document = hoedown_document_new(renderer, HOEDOWN_EXTENSIONS, 16);\n         hoedown_document_render(document, ob, md.as_ptr(),\n                                 md.len() as libc::size_t);\n         hoedown_document_free(document);\n-        let plain = String::from_raw_buf_len((*ob).data, (*ob).size as uint);\n+        let plain_slice = slice::from_raw_buf(&(*ob).data, (*ob).size as uint);\n+        let plain = match str::from_utf8(plain_slice) {\n+            Ok(s) => s.to_string(),\n+            Err(_) => \"\".to_string(),\n+        };\n         hoedown_buffer_free(ob);\n         plain\n     }"}, {"sha": "86c945125f624ef39ef9d7a085a4bffafac0860b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "patch": "@@ -67,7 +67,7 @@ use html::markdown;\n use stability_summary;\n \n /// A pair of name and its optional document.\n-#[deriving(Clone, Eq, Ord, PartialEq, PartialOrd)]\n+#[derive(Clone, Eq, Ord, PartialEq, PartialOrd)]\n pub struct NameDoc(String, Option<String>);\n \n /// Major driving force in all rustdoc rendering. This contains information"}, {"sha": "efb442dbe34046b58f50b53284b3d7ad96e68701", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=17ebb6053edd7b7d6e8ab5f59dd093f53db7ae44", "patch": "@@ -671,10 +671,7 @@\n \n         function plainSummaryLine(markdown) {\n             var str = markdown.replace(/\\n/g, ' ')\n-            str = str.replace(/</g, \"&lt;\")\n-            str = str.replace(/>/g, \"&gt;\")\n-            str = str.replace(/\"/g, \"&quot;\")\n-            str = str.replace(/'/g, \"&#39;\")\n+            str = str.replace(/'/g, \"\\'\")\n             str = str.replace(/^#+? (.+?)/, \"$1\")\n             str = str.replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\")\n             str = str.replace(/\\[(.*?)\\]\\[.*?\\]/g, \"$1\")"}]}