{"sha": "80b6850e34957d95b7606da01d229dc1e3e6e5b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYjY4NTBlMzQ5NTdkOTViNzYwNmRhMDFkMjI5ZGMxZTNlNmU1YjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-14T02:59:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-14T03:00:03Z"}, "message": "libsyntax: Implement [int*3] syntax for fixed length vector types", "tree": {"sha": "d0b0ddc9c43f8993af890c4a9dff12f91348a8ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0b0ddc9c43f8993af890c4a9dff12f91348a8ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80b6850e34957d95b7606da01d229dc1e3e6e5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80b6850e34957d95b7606da01d229dc1e3e6e5b5", "html_url": "https://github.com/rust-lang/rust/commit/80b6850e34957d95b7606da01d229dc1e3e6e5b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80b6850e34957d95b7606da01d229dc1e3e6e5b5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36883186ab88e7b39ea2cb0f47c2c8999840663e", "url": "https://api.github.com/repos/rust-lang/rust/commits/36883186ab88e7b39ea2cb0f47c2c8999840663e", "html_url": "https://github.com/rust-lang/rust/commit/36883186ab88e7b39ea2cb0f47c2c8999840663e"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "bc69edda1a28eedc85f96c0f2e9f6ea30f09aa9f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/80b6850e34957d95b7606da01d229dc1e3e6e5b5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80b6850e34957d95b7606da01d229dc1e3e6e5b5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=80b6850e34957d95b7606da01d229dc1e3e6e5b5", "patch": "@@ -472,7 +472,19 @@ class parser {\n             ty_rec(elems)\n         } else if self.token == token::LBRACKET {\n             self.expect(token::LBRACKET);\n-            let t = ty_vec(self.parse_mt());\n+            let mut t = ty_vec(self.parse_mt());\n+\n+            // Parse the `* 3` in `[ int * 3 ]`\n+            match self.maybe_parse_fixed_vstore_with_star() {\n+                none => {}\n+                some(suffix) => {\n+                    t = ty_fixed_length(@{\n+                        id: self.get_id(),\n+                        node: t,\n+                        span: mk_sp(lo, self.last_span.hi)\n+                    }, suffix)\n+                }\n+            }\n             self.expect(token::RBRACKET);\n             t\n         } else if self.token == token::BINOP(token::AND) {\n@@ -609,6 +621,22 @@ class parser {\n         }\n     }\n \n+    fn maybe_parse_fixed_vstore_with_star() -> option<option<uint>> {\n+        if self.eat(token::BINOP(token::STAR)) {\n+            match copy self.token {\n+              token::UNDERSCORE => {\n+                self.bump(); some(none)\n+              }\n+              token::LIT_INT_UNSUFFIXED(i) if i >= 0i64 => {\n+                self.bump(); some(some(i as uint))\n+              }\n+              _ => none\n+            }\n+        } else {\n+            none\n+        }\n+    }\n+\n     fn lit_from_token(tok: token::token) -> lit_ {\n         match tok {\n           token::LIT_INT(i, it) => lit_int(i, it),"}, {"sha": "41b2ae89535d4d0c6e36a31916166ca396e92b66", "filename": "src/test/run-pass/vec-fixed-length.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80b6850e34957d95b7606da01d229dc1e3e6e5b5/src%2Ftest%2Frun-pass%2Fvec-fixed-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80b6850e34957d95b7606da01d229dc1e3e6e5b5/src%2Ftest%2Frun-pass%2Fvec-fixed-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-fixed-length.rs?ref=80b6850e34957d95b7606da01d229dc1e3e6e5b5", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let x: [int*4] = [1, 2, 3, 4];\n+    io::println(fmt!(\"%d\", x[0]));\n+}\n+"}]}