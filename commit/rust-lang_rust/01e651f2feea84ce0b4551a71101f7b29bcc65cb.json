{"sha": "01e651f2feea84ce0b4551a71101f7b29bcc65cb", "node_id": "C_kwDOAAsO6NoAKDAxZTY1MWYyZmVlYTg0Y2UwYjQ1NTFhNzExMDFmN2IyOWJjYzY1Y2I", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2022-10-10T14:00:33Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-10-24T20:05:39Z"}, "message": "Don't lint if the let is already a let-else\n\nWe cannot apply the lint for 3-branches like in the added example.", "tree": {"sha": "a98dc069e04a67915a03eb7102f7407a9e3dd80c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a98dc069e04a67915a03eb7102f7407a9e3dd80c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01e651f2feea84ce0b4551a71101f7b29bcc65cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01e651f2feea84ce0b4551a71101f7b29bcc65cb", "html_url": "https://github.com/rust-lang/rust/commit/01e651f2feea84ce0b4551a71101f7b29bcc65cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01e651f2feea84ce0b4551a71101f7b29bcc65cb/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1db9311dc0ddb0dea68d2661442df2c6f4b382c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1db9311dc0ddb0dea68d2661442df2c6f4b382c", "html_url": "https://github.com/rust-lang/rust/commit/a1db9311dc0ddb0dea68d2661442df2c6f4b382c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "8a915127c3c6729d1655ae8c670bd8f16a72b6e0", "filename": "clippy_lints/src/manual_let_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01e651f2feea84ce0b4551a71101f7b29bcc65cb/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e651f2feea84ce0b4551a71101f7b29bcc65cb/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_let_else.rs?ref=01e651f2feea84ce0b4551a71101f7b29bcc65cb", "patch": "@@ -73,6 +73,7 @@ impl<'tcx> LateLintPass<'tcx> for ManualLetElse {\n             if !in_external_macro(cx.sess(), stmt.span);\n             if let StmtKind::Local(local) = stmt.kind;\n             if let Some(init) = local.init;\n+            if local.els.is_none();\n             if init.span.ctxt() == stmt.span.ctxt();\n             if let Some(if_let_or_match) = IfLetOrMatch::parse(cx, init);\n             then {"}, {"sha": "9e5df65b74d37938f84e1ebe7c79db5e01e73fe7", "filename": "tests/ui/manual_let_else.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01e651f2feea84ce0b4551a71101f7b29bcc65cb/tests%2Fui%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e651f2feea84ce0b4551a71101f7b29bcc65cb/tests%2Fui%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else.rs?ref=01e651f2feea84ce0b4551a71101f7b29bcc65cb", "patch": "@@ -194,4 +194,7 @@ fn not_fire() {\n         };\n     }\n     create_binding_if_some_nf!(v, g());\n+\n+    // Already a let-else\n+    let Some(a) = (if let Some(b) = Some(Some(())) { b } else { return }) else { panic!() };\n }"}]}