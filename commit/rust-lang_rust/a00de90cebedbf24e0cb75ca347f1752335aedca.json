{"sha": "a00de90cebedbf24e0cb75ca347f1752335aedca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMGRlOTBjZWJlZGJmMjRlMGNiNzVjYTM0N2YxNzUyMzM1YWVkY2E=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-05T04:09:13Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-05T04:09:13Z"}, "message": "Fix ICE in `missing_panics_doc`", "tree": {"sha": "3aa74be6f65bfacc318d4c1931211423127f696d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aa74be6f65bfacc318d4c1931211423127f696d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a00de90cebedbf24e0cb75ca347f1752335aedca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmBqjYQACgkQ2lnoZDo37QYt7wEAo95oWqFoisUbJa+FtLZfWggL\nqzCOdbbFtuwYaUEuxDcBAJeyAF4yKz8jqF7k0e54qPKatf506A/VuCtHkY8R7h8C\n=16Ur\n-----END PGP SIGNATURE-----", "payload": "tree 3aa74be6f65bfacc318d4c1931211423127f696d\nparent a15d987c8f9c0c9e911f112d21d55e36da3df370\nauthor Jason Newcomb <jsnewcomb@pm.me> 1617595753 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1617595753 -0400\n\nFix ICE in `missing_panics_doc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a00de90cebedbf24e0cb75ca347f1752335aedca", "html_url": "https://github.com/rust-lang/rust/commit/a00de90cebedbf24e0cb75ca347f1752335aedca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a00de90cebedbf24e0cb75ca347f1752335aedca/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a15d987c8f9c0c9e911f112d21d55e36da3df370", "url": "https://api.github.com/repos/rust-lang/rust/commits/a15d987c8f9c0c9e911f112d21d55e36da3df370", "html_url": "https://github.com/rust-lang/rust/commit/a15d987c8f9c0c9e911f112d21d55e36da3df370"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "69d478500915ba458acf5d4ae42e058a82eb86b4", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a00de90cebedbf24e0cb75ca347f1752335aedca/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a00de90cebedbf24e0cb75ca347f1752335aedca/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=a00de90cebedbf24e0cb75ca347f1752335aedca", "patch": "@@ -11,7 +11,7 @@ use rustc_errors::emitter::EmitterWriter;\n use rustc_errors::Handler;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc_hir::{Expr, ExprKind, QPath};\n+use rustc_hir::{AnonConst, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::in_external_macro;\n@@ -735,6 +735,9 @@ impl<'a, 'tcx> Visitor<'tcx> for FindPanicUnwrap<'a, 'tcx> {\n         intravisit::walk_expr(self, expr);\n     }\n \n+    // Panics in const blocks will cause compilation to fail.\n+    fn visit_anon_const(&mut self, _: &'tcx AnonConst) {}\n+\n     fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }"}, {"sha": "c946a047f1b0a88c56ef98d57428b1d8cd98b20e", "filename": "tests/ui/doc.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a00de90cebedbf24e0cb75ca347f1752335aedca/tests%2Fui%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a00de90cebedbf24e0cb75ca347f1752335aedca/tests%2Fui%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.rs?ref=a00de90cebedbf24e0cb75ca347f1752335aedca", "patch": "@@ -1,8 +1,8 @@\n //! This file tests for the `DOC_MARKDOWN` lint.\n \n-#![allow(dead_code)]\n+#![allow(dead_code, incomplete_features)]\n #![warn(clippy::doc_markdown)]\n-#![feature(custom_inner_attributes)]\n+#![feature(custom_inner_attributes, const_generics, const_evaluatable_checked, const_option)]\n #![rustfmt::skip]\n \n /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n@@ -202,3 +202,20 @@ fn issue_2343() {}\n /// This should not cause an ICE:\n /// __|_ _|__||_|\n fn pulldown_cmark_crash() {}\n+\n+// issue #7033 - const_evaluatable_checked ICE\n+struct S<T, const N: usize>\n+where [(); N.checked_next_power_of_two().unwrap()]: {\n+    arr: [T; N.checked_next_power_of_two().unwrap()],\n+    n: usize,\n+}\n+\n+impl<T: Copy + Default, const N: usize> S<T, N>\n+where [(); N.checked_next_power_of_two().unwrap()]: {\n+    fn new() -> Self {\n+        Self {\n+            arr: [T::default(); N.checked_next_power_of_two().unwrap()],\n+            n: 0,\n+        }\n+    }\n+}"}]}