{"sha": "913d1b48ad4e2dd909009aab93837cd596a235b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxM2QxYjQ4YWQ0ZTJkZDkwOTAwOWFhYjkzODM3Y2Q1OTZhMjM1YjI=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-03T18:00:32Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-03T18:06:45Z"}, "message": "rt::io: Rename Bytes to ByteIterator and add note about iteration", "tree": {"sha": "1d8dc2f84524e6414455ec726a42f5a9da3f2ee3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d8dc2f84524e6414455ec726a42f5a9da3f2ee3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/913d1b48ad4e2dd909009aab93837cd596a235b2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/913d1b48ad4e2dd909009aab93837cd596a235b2", "html_url": "https://github.com/rust-lang/rust/commit/913d1b48ad4e2dd909009aab93837cd596a235b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/913d1b48ad4e2dd909009aab93837cd596a235b2/comments", "author": null, "committer": null, "parents": [{"sha": "61026ae621ffbc6d7538cfb0add49b8fc5638e86", "url": "https://api.github.com/repos/rust-lang/rust/commits/61026ae621ffbc6d7538cfb0add49b8fc5638e86", "html_url": "https://github.com/rust-lang/rust/commit/61026ae621ffbc6d7538cfb0add49b8fc5638e86"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "15ac6544dee0e9ae18b293b9f0ef73b2c587c01b", "filename": "src/libstd/rt/io/extensions.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/913d1b48ad4e2dd909009aab93837cd596a235b2/src%2Flibstd%2Frt%2Fio%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913d1b48ad4e2dd909009aab93837cd596a235b2/src%2Flibstd%2Frt%2Fio%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fextensions.rs?ref=913d1b48ad4e2dd909009aab93837cd596a235b2", "patch": "@@ -71,7 +71,7 @@ pub trait ReaderUtil {\n     /// Raises the same conditions as the `read` method, for\n     /// each call to its `.next()` method.\n     /// Ends the iteration if the condition is handled.\n-    fn bytes(self) -> Bytes<Self>;\n+    fn bytes(self) -> ByteIterator<Self>;\n \n }\n \n@@ -349,30 +349,36 @@ impl<T: Reader> ReaderUtil for T {\n         return buf;\n     }\n \n-    fn bytes(self) -> Bytes<T> {\n-        Bytes{reader: self}\n+    fn bytes(self) -> ByteIterator<T> {\n+        ByteIterator{reader: self}\n     }\n }\n \n /// An iterator that reads a single byte on each iteration,\n-/// until EOF.\n+/// until `.read_byte()` returns `None`.\n+///\n+/// # Notes about the Iteration Protocol\n+///\n+/// The `ByteIterator` may yield `None` and thus terminate\n+/// an iteration, but continue to yield elements if iteration\n+/// is attempted again.\n ///\n /// # Failure\n ///\n /// Raises the same conditions as the `read` method, for\n /// each call to its `.next()` method.\n-/// Ends the iteration if the condition is handled.\n-pub struct Bytes<T> {\n+/// Yields `None` if the condition is handled.\n+pub struct ByteIterator<T> {\n     priv reader: T,\n }\n \n-impl<R> Decorator<R> for Bytes<R> {\n+impl<R> Decorator<R> for ByteIterator<R> {\n     fn inner(self) -> R { self.reader }\n     fn inner_ref<'a>(&'a self) -> &'a R { &self.reader }\n     fn inner_mut_ref<'a>(&'a mut self) -> &'a mut R { &mut self.reader }\n }\n \n-impl<'self, R: Reader> Iterator<u8> for Bytes<R> {\n+impl<'self, R: Reader> Iterator<u8> for ByteIterator<R> {\n     #[inline]\n     fn next(&mut self) -> Option<u8> {\n         self.reader.read_byte()"}]}