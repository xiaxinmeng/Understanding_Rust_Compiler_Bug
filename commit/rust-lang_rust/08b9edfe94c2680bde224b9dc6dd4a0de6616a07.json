{"sha": "08b9edfe94c2680bde224b9dc6dd4a0de6616a07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YjllZGZlOTRjMjY4MGJkZTIyNGI5ZGM2ZGQ0YTBkZTY2MTZhMDc=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2015-09-16T14:09:01Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2015-09-16T14:09:01Z"}, "message": "Remove inline attribute\n\nBe more conservative with inlining.", "tree": {"sha": "f7a209a0ff8a1247ca473516d2a688afc37239d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7a209a0ff8a1247ca473516d2a688afc37239d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08b9edfe94c2680bde224b9dc6dd4a0de6616a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08b9edfe94c2680bde224b9dc6dd4a0de6616a07", "html_url": "https://github.com/rust-lang/rust/commit/08b9edfe94c2680bde224b9dc6dd4a0de6616a07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08b9edfe94c2680bde224b9dc6dd4a0de6616a07/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "369a9dc302582145e37cf335c454fb6bd74906c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/369a9dc302582145e37cf335c454fb6bd74906c6", "html_url": "https://github.com/rust-lang/rust/commit/369a9dc302582145e37cf335c454fb6bd74906c6"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "dbebea37f6fc8a0e0a4d13f9b7b4c9636efa7612", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08b9edfe94c2680bde224b9dc6dd4a0de6616a07/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b9edfe94c2680bde224b9dc6dd4a0de6616a07/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=08b9edfe94c2680bde224b9dc6dd4a0de6616a07", "patch": "@@ -1558,7 +1558,6 @@ impl<T: Eq> Eq for [T] {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Ord> Ord for [T] {\n-    #[inline]\n     fn cmp(&self, other: &[T]) -> Ordering {\n         let l = cmp::min(self.len(), other.len());\n         let lhs = &self[..l];\n@@ -1577,7 +1576,6 @@ impl<T: Ord> Ord for [T] {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: PartialOrd> PartialOrd for [T] {\n-    #[inline]\n     fn partial_cmp(&self, other: &[T]) -> Option<Ordering> {\n         let l = cmp::min(self.len(), other.len());\n         let lhs = &self[..l];"}]}