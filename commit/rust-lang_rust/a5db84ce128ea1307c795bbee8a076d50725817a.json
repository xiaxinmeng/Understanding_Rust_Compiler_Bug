{"sha": "a5db84ce128ea1307c795bbee8a076d50725817a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZGI4NGNlMTI4ZWExMzA3Yzc5NWJiZWU4YTA3NmQ1MDcyNTgxN2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-20T03:21:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:28Z"}, "message": "librustc: De-`@mut` the `extern_const_statics` table in the type context", "tree": {"sha": "47b6e815311ebd25a74af7bc9514b31a3b02ec0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b6e815311ebd25a74af7bc9514b31a3b02ec0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5db84ce128ea1307c795bbee8a076d50725817a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5db84ce128ea1307c795bbee8a076d50725817a", "html_url": "https://github.com/rust-lang/rust/commit/a5db84ce128ea1307c795bbee8a076d50725817a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5db84ce128ea1307c795bbee8a076d50725817a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55a7b2feddfd54f5a4c5f4dd85d156a0da50428e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55a7b2feddfd54f5a4c5f4dd85d156a0da50428e", "html_url": "https://github.com/rust-lang/rust/commit/55a7b2feddfd54f5a4c5f4dd85d156a0da50428e"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "a81964aad82f0159596da3fa39389bfd363ed82e", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5db84ce128ea1307c795bbee8a076d50725817a/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5db84ce128ea1307c795bbee8a076d50725817a/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=a5db84ce128ea1307c795bbee8a076d50725817a", "patch": "@@ -154,9 +154,12 @@ pub fn lookup_const_by_id(tcx: ty::ctxt,\n             Some(_) => None\n         }\n     } else {\n-        match tcx.extern_const_statics.find(&def_id) {\n-            Some(&e) => return e,\n-            None => {}\n+        {\n+            let extern_const_statics = tcx.extern_const_statics.borrow();\n+            match extern_const_statics.get().find(&def_id) {\n+                Some(&e) => return e,\n+                None => {}\n+            }\n         }\n         let maps = astencode::Maps {\n             root_map: @mut HashMap::new(),\n@@ -173,8 +176,12 @@ pub fn lookup_const_by_id(tcx: ty::ctxt,\n             },\n             _ => None\n         };\n-        tcx.extern_const_statics.insert(def_id, e);\n-        return e;\n+        {\n+            let mut extern_const_statics = tcx.extern_const_statics\n+                                              .borrow_mut();\n+            extern_const_statics.get().insert(def_id, e);\n+            return e;\n+        }\n     }\n }\n "}, {"sha": "2acf37697d143f87ecc6f5ddb360642631a1ae38", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5db84ce128ea1307c795bbee8a076d50725817a/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5db84ce128ea1307c795bbee8a076d50725817a/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=a5db84ce128ea1307c795bbee8a076d50725817a", "patch": "@@ -368,7 +368,7 @@ struct ctxt_ {\n \n     // These two caches are used by const_eval when decoding external statics\n     // and variants that are found.\n-    extern_const_statics: @mut HashMap<ast::DefId, Option<@ast::Expr>>,\n+    extern_const_statics: RefCell<HashMap<ast::DefId, Option<@ast::Expr>>>,\n     extern_const_variants: @mut HashMap<ast::DefId, Option<@ast::Expr>>,\n }\n \n@@ -1014,7 +1014,7 @@ pub fn mk_ctxt(s: session::Session,\n         populated_external_types: @mut HashSet::new(),\n         populated_external_traits: @mut HashSet::new(),\n \n-        extern_const_statics: @mut HashMap::new(),\n+        extern_const_statics: RefCell::new(HashMap::new()),\n         extern_const_variants: @mut HashMap::new(),\n      }\n }"}]}