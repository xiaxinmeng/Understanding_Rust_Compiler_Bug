{"sha": "8e9106c531c559bf923de93cccbeb0fa0a47451f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOTEwNmM1MzFjNTU5YmY5MjNkZTkzY2NjYmViMGZhMGE0NzQ1MWY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-10-26T07:43:34Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-11-09T23:44:53Z"}, "message": "tests: fix fallout in pretty-printing output exact-match tests.", "tree": {"sha": "f89fd6557cbe03aa30ea086befa23aec18d00dc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f89fd6557cbe03aa30ea086befa23aec18d00dc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e9106c531c559bf923de93cccbeb0fa0a47451f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e9106c531c559bf923de93cccbeb0fa0a47451f", "html_url": "https://github.com/rust-lang/rust/commit/8e9106c531c559bf923de93cccbeb0fa0a47451f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e9106c531c559bf923de93cccbeb0fa0a47451f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ce1044bd5460260f15c63df6f7f537466800f7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce1044bd5460260f15c63df6f7f537466800f7d", "html_url": "https://github.com/rust-lang/rust/commit/9ce1044bd5460260f15c63df6f7f537466800f7d"}], "stats": {"total": 146, "additions": 80, "deletions": 66}, "files": [{"sha": "24b0f90d08e4d21cc56bf8c2e15e4ea142e8ce25", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 66, "deletions": 58, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/8e9106c531c559bf923de93cccbeb0fa0a47451f/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/8e9106c531c559bf923de93cccbeb0fa0a47451f/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=8e9106c531c559bf923de93cccbeb0fa0a47451f", "patch": "@@ -18,18 +18,18 @@\n \n // #4264 fixed-length vector types\n \n-pub fn foo(_: [i32; (3 as usize)]) { }\n+pub fn foo(_: [i32; (3 as usize)]) ({ } as ())\n \n-pub fn bar() {\n-    const FOO: usize = ((5 as usize) - (4 as usize) as usize);\n-    let _: [(); (FOO as usize)] = ([(() as ())] as [(); 1]);\n+pub fn bar() ({\n+                  const FOO: usize = ((5 as usize) - (4 as usize) as usize);\n+                  let _: [(); (FOO as usize)] = ([(() as ())] as [(); 1]);\n \n-    let _: [(); (1 as usize)] = ([(() as ())] as [(); 1]);\n+                  let _: [(); (1 as usize)] = ([(() as ())] as [(); 1]);\n \n-    let _ =\n-        (((&([(1 as i32), (2 as i32), (3 as i32)] as [i32; 3]) as &[i32; 3])\n-             as *const _ as *const [i32; 3]) as *const [i32; (3 as usize)] as\n-            *const [i32; 3]);\n+                  let _ =\n+                      (((&([(1 as i32), (2 as i32), (3 as i32)] as [i32; 3])\n+                            as &[i32; 3]) as *const _ as *const [i32; 3]) as\n+                          *const [i32; (3 as usize)] as *const [i32; 3]);\n \n \n \n@@ -38,58 +38,66 @@\n \n \n \n-    (($crate::fmt::format as\n-         fn(std::fmt::Arguments<'_>) -> std::string::String {std::fmt::format})(((::std::fmt::Arguments::new_v1\n-                                                                                     as\n-                                                                                     fn(&[&str], &[std::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments<'_>::new_v1})(({\n-                                                                                                                                                                                                 static __STATIC_FMTSTR:\n-                                                                                                                                                                                                        &'static [&'static str]\n-                                                                                                                                                                                                        =\n-                                                                                                                                                                                                     (&([(\"test\"\n-                                                                                                                                                                                                             as\n-                                                                                                                                                                                                             &'static str)]\n-                                                                                                                                                                                                           as\n-                                                                                                                                                                                                           [&'static str; 1])\n-                                                                                                                                                                                                         as\n-                                                                                                                                                                                                         &'static [&'static str; 1]);\n-                                                                                                                                                                                                 (__STATIC_FMTSTR\n-                                                                                                                                                                                                     as\n-                                                                                                                                                                                                     &'static [&'static str])\n-                                                                                                                                                                                             }\n-                                                                                                                                                                                                as\n-                                                                                                                                                                                                &[&str]),\n-                                                                                                                                                                                            (&(match (()\n-                                                                                                                                                                                                         as\n-                                                                                                                                                                                                         ())\n-                                                                                                                                                                                                   {\n-                                                                                                                                                                                                   ()\n-                                                                                                                                                                                                   =>\n-                                                                                                                                                                                                   ([]\n-                                                                                                                                                                                                       as\n-                                                                                                                                                                                                       [std::fmt::ArgumentV1<'_>; 0]),\n-                                                                                                                                                                                               }\n-                                                                                                                                                                                                  as\n-                                                                                                                                                                                                  [std::fmt::ArgumentV1<'_>; 0])\n-                                                                                                                                                                                                as\n-                                                                                                                                                                                                &[std::fmt::ArgumentV1<'_>; 0]))\n-                                                                                    as\n-                                                                                    std::fmt::Arguments<'_>))\n-        as std::string::String);\n-}\n+\n+                  (($crate::fmt::format as\n+                       fn(std::fmt::Arguments<'_>) -> std::string::String {std::fmt::format})(((::std::fmt::Arguments::new_v1\n+                                                                                                   as\n+                                                                                                   fn(&[&str], &[std::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments<'_>::new_v1})(({\n+                                                                                                                                                                                                               static __STATIC_FMTSTR:\n+                                                                                                                                                                                                                      &'static [&'static str]\n+                                                                                                                                                                                                                      =\n+                                                                                                                                                                                                                   (&([(\"test\"\n+                                                                                                                                                                                                                           as\n+                                                                                                                                                                                                                           &'static str)]\n+                                                                                                                                                                                                                         as\n+                                                                                                                                                                                                                         [&'static str; 1])\n+                                                                                                                                                                                                                       as\n+                                                                                                                                                                                                                       &'static [&'static str; 1]);\n+                                                                                                                                                                                                               (__STATIC_FMTSTR\n+                                                                                                                                                                                                                   as\n+                                                                                                                                                                                                                   &'static [&'static str])\n+                                                                                                                                                                                                           }\n+                                                                                                                                                                                                              as\n+                                                                                                                                                                                                              &[&str]),\n+                                                                                                                                                                                                          (&(match (()\n+                                                                                                                                                                                                                       as\n+                                                                                                                                                                                                                       ())\n+                                                                                                                                                                                                                 {\n+                                                                                                                                                                                                                 ()\n+                                                                                                                                                                                                                 =>\n+                                                                                                                                                                                                                 ([]\n+                                                                                                                                                                                                                     as\n+                                                                                                                                                                                                                     [std::fmt::ArgumentV1<'_>; 0]),\n+                                                                                                                                                                                                             }\n+                                                                                                                                                                                                                as\n+                                                                                                                                                                                                                [std::fmt::ArgumentV1<'_>; 0])\n+                                                                                                                                                                                                              as\n+                                                                                                                                                                                                              &[std::fmt::ArgumentV1<'_>; 0]))\n+                                                                                                  as\n+                                                                                                  std::fmt::Arguments<'_>))\n+                      as std::string::String);\n+              } as ())\n pub type Foo = [i32; (3 as usize)];\n pub struct Bar {\n     pub x: [i32; (3 as usize)],\n }\n pub struct TupleBar([i32; (4 as usize)]);\n pub enum Baz { BazVariant([i32; (5 as usize)]), }\n-pub fn id<T>(x: T) -> T { (x as T) }\n-pub fn use_id() {\n-    let _ =\n-        ((id::<[i32; (3 as usize)]> as\n-             fn([i32; 3]) -> [i32; 3] {id::<[i32; 3]>})(([(1 as i32),\n-                                                          (2 as i32),\n-                                                          (3 as i32)] as\n-                                                            [i32; 3])) as\n-            [i32; 3]);\n-}\n-fn main() { }\n+pub fn id<T>(x: T) -> T ({ (x as T) } as T)\n+pub fn use_id() ({\n+                     let _ =\n+                         ((id::<[i32; (3 as usize)]> as\n+                              fn([i32; 3]) -> [i32; 3] {id::<[i32; 3]>})(([(1\n+                                                                               as\n+                                                                               i32),\n+                                                                           (2\n+                                                                               as\n+                                                                               i32),\n+                                                                           (3\n+                                                                               as\n+                                                                               i32)]\n+                                                                             as\n+                                                                             [i32; 3]))\n+                             as [i32; 3]);\n+                 } as ())\n+fn main() ({ } as ())"}, {"sha": "1c443020d2e934970fef26d77a8b57fb318bdd82", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e9106c531c559bf923de93cccbeb0fa0a47451f/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e9106c531c559bf923de93cccbeb0fa0a47451f/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=8e9106c531c559bf923de93cccbeb0fa0a47451f", "patch": "@@ -198,14 +198,20 @@ fn _11() {\n                 };\n     let _ = #[attr] || #[attr] ();\n     let _ = #[attr] move || #[attr] ();\n-    let _ = #[attr] || {\n-        #![attr]\n-        #[attr]\n-        () };\n-    let _ = #[attr] move || {\n-        #![attr]\n-        #[attr]\n-        () };\n+    let _ =\n+        #[attr] ||\n+                    {\n+                        #![attr]\n+                        #[attr]\n+                        ()\n+                    };\n+    let _ =\n+        #[attr] move ||\n+                    {\n+                        #![attr]\n+                        #[attr]\n+                        ()\n+                    };\n     let _ =\n         #[attr] {\n                     #![attr]"}]}