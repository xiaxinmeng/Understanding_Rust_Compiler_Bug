{"sha": "3d445256fe56f4a7ead64514fb57b79079973d84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNDQ1MjU2ZmU1NmY0YTdlYWQ2NDUxNGZiNTdiNzkwNzk5NzNkODQ=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-17T17:38:50Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-17T17:38:50Z"}, "message": "code formatting", "tree": {"sha": "aabd84a5c3abe87bde1e09215b19c80055258e4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aabd84a5c3abe87bde1e09215b19c80055258e4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d445256fe56f4a7ead64514fb57b79079973d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d445256fe56f4a7ead64514fb57b79079973d84", "html_url": "https://github.com/rust-lang/rust/commit/3d445256fe56f4a7ead64514fb57b79079973d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d445256fe56f4a7ead64514fb57b79079973d84/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dec2f3fa657a2700f9db1962891e7be71c299543", "url": "https://api.github.com/repos/rust-lang/rust/commits/dec2f3fa657a2700f9db1962891e7be71c299543", "html_url": "https://github.com/rust-lang/rust/commit/dec2f3fa657a2700f9db1962891e7be71c299543"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "2038ef89b3ba35f97d6c08336c4a4fb52c28526a", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3d445256fe56f4a7ead64514fb57b79079973d84/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d445256fe56f4a7ead64514fb57b79079973d84/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=3d445256fe56f4a7ead64514fb57b79079973d84", "patch": "@@ -244,35 +244,35 @@ impl Config {\n     pub fn update_caps(&mut self, caps: &ClientCapabilities) {\n         if let Some(doc_caps) = caps.text_document.as_ref() {\n             if let Some(value) = doc_caps.definition.as_ref().and_then(|it| it.link_support) {\n-            self.client_caps.location_link = value;\n-        }\n+                self.client_caps.location_link = value;\n+            }\n             if let Some(value) = doc_caps.folding_range.as_ref().and_then(|it| it.line_folding_only)\n             {\n-            self.client_caps.line_folding_only = value\n-        }\n+                self.client_caps.line_folding_only = value\n+            }\n             if let Some(value) = doc_caps\n                 .document_symbol\n                 .as_ref()\n                 .and_then(|it| it.hierarchical_document_symbol_support)\n-        {\n-            self.client_caps.hierarchical_symbols = value\n-        }\n+            {\n+                self.client_caps.hierarchical_symbols = value\n+            }\n             if let Some(value) = doc_caps\n                 .code_action\n                 .as_ref()\n                 .and_then(|it| Some(it.code_action_literal_support.is_some()))\n-        {\n-            self.client_caps.code_action_literals = value;\n-        }\n-        self.completion.allow_snippets(false);\n+            {\n+                self.client_caps.code_action_literals = value;\n+            }\n+            self.completion.allow_snippets(false);\n             if let Some(completion) = &doc_caps.completion {\n-            if let Some(completion_item) = &completion.completion_item {\n-                if let Some(value) = completion_item.snippet_support {\n-                    self.completion.allow_snippets(value);\n+                if let Some(completion_item) = &completion.completion_item {\n+                    if let Some(value) = completion_item.snippet_support {\n+                        self.completion.allow_snippets(value);\n+                    }\n                 }\n             }\n         }\n-    }\n \n         if let Some(window_caps) = caps.window.as_ref() {\n             if let Some(value) = window_caps.work_done_progress {"}, {"sha": "e675567528591cde2242078c893c64e68516539d", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3d445256fe56f4a7ead64514fb57b79079973d84/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d445256fe56f4a7ead64514fb57b79079973d84/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=3d445256fe56f4a7ead64514fb57b79079973d84", "patch": "@@ -826,16 +826,18 @@ pub fn handle_code_lens(\n     if world.config.lens.runnable() {\n         // Gather runnables\n         for runnable in world.analysis().runnables(file_id)? {\n-            let (run_title, debugee ) = match &runnable.kind {\n-                RunnableKind::Test { .. } | RunnableKind::TestMod { .. } => (\"\u25b6\ufe0f\\u{fe0e}Run Test\", true),\n-                RunnableKind::DocTest { .. } => { \n+            let (run_title, debugee) = match &runnable.kind {\n+                RunnableKind::Test { .. } | RunnableKind::TestMod { .. } => {\n+                    (\"\u25b6\ufe0f\\u{fe0e}Run Test\", true)\n+                }\n+                RunnableKind::DocTest { .. } => {\n                     // cargo does not support -no-run for doctests\n                     (\"\u25b6\ufe0f\\u{fe0e}Run Doctest\", false)\n                 }\n                 RunnableKind::Bench { .. } => {\n                     // Nothing wrong with bench debugging\n                     (\"Run Bench\", true)\n-                },\n+                }\n                 RunnableKind::Bin => {\n                     // Do not suggest binary run on other target than binary\n                     match &cargo_spec {"}, {"sha": "0bd30fb077d7743f097d8632f224884780b01a35", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d445256fe56f4a7ead64514fb57b79079973d84/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3d445256fe56f4a7ead64514fb57b79079973d84/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=3d445256fe56f4a7ead64514fb57b79079973d84", "patch": "@@ -40,7 +40,7 @@ async function selectRunnable(ctx: Ctx, prevRunnable?: RunnableQuickPick, debugg\n         items.push(new RunnableQuickPick(r));\n     }\n \n-    if( items.length === 0 ) {\n+    if (items.length === 0) {\n         // it is the debug case, run always has at least 'cargo check ...'\n         // see crates\\rust-analyzer\\src\\main_loop\\handlers.rs, handle_runnables\n         vscode.window.showErrorMessage(\"There's no debug target!\");"}]}