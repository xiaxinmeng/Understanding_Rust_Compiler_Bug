{"sha": "082c03b0780b2de24b68be04e96d1596a7c5b3cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MmMwM2IwNzgwYjJkZTI0YjY4YmUwNGU5NmQxNTk2YTdjNWIzY2Y=", "commit": {"author": {"name": "Daan Sprenkels", "email": "dsprenkels@gmail.com", "date": "2016-01-06T22:58:45Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-25T15:22:53Z"}, "message": "libsyntax: note that `let a = (let b = something)` is invalid\nin parse_bottom_expr (parser.rs)", "tree": {"sha": "21feac4bc253129687ae9018886fa87904ac6870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21feac4bc253129687ae9018886fa87904ac6870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/082c03b0780b2de24b68be04e96d1596a7c5b3cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/082c03b0780b2de24b68be04e96d1596a7c5b3cf", "html_url": "https://github.com/rust-lang/rust/commit/082c03b0780b2de24b68be04e96d1596a7c5b3cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/082c03b0780b2de24b68be04e96d1596a7c5b3cf/comments", "author": {"login": "dsprenkels", "id": 439973, "node_id": "MDQ6VXNlcjQzOTk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/439973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsprenkels", "html_url": "https://github.com/dsprenkels", "followers_url": "https://api.github.com/users/dsprenkels/followers", "following_url": "https://api.github.com/users/dsprenkels/following{/other_user}", "gists_url": "https://api.github.com/users/dsprenkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsprenkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsprenkels/subscriptions", "organizations_url": "https://api.github.com/users/dsprenkels/orgs", "repos_url": "https://api.github.com/users/dsprenkels/repos", "events_url": "https://api.github.com/users/dsprenkels/events{/privacy}", "received_events_url": "https://api.github.com/users/dsprenkels/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6866f1361debf5857856ff95eeee806bb7bea738", "url": "https://api.github.com/repos/rust-lang/rust/commits/6866f1361debf5857856ff95eeee806bb7bea738", "html_url": "https://github.com/rust-lang/rust/commit/6866f1361debf5857856ff95eeee806bb7bea738"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "edb1f7eb926c1a36862e10b2a3947f06491087d2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/082c03b0780b2de24b68be04e96d1596a7c5b3cf/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/082c03b0780b2de24b68be04e96d1596a7c5b3cf/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=082c03b0780b2de24b68be04e96d1596a7c5b3cf", "patch": "@@ -2199,6 +2199,12 @@ impl<'a> Parser<'a> {\n                         UnsafeBlock(ast::UserProvided),\n                         attrs);\n                 }\n+                if self.eat_keyword(keywords::Let) {\n+                    return Err(self.span_fatal(self.span,\n+                                               \"`let` is not an expression, so it cannot \\\n+                                                be used in this way\"))\n+\n+                }\n                 if self.eat_keyword(keywords::Return) {\n                     if self.token.can_begin_expr() {\n                         let e = try!(self.parse_expr());"}]}