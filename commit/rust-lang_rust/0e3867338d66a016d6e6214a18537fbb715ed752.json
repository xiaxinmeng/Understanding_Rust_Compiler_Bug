{"sha": "0e3867338d66a016d6e6214a18537fbb715ed752", "node_id": "C_kwDOAAsO6NoAKDBlMzg2NzMzOGQ2NmEwMTZkNmU2MjE0YTE4NTM3ZmJiNzE1ZWQ3NTI", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-04T20:34:07Z"}, "committer": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-10-12T12:18:20Z"}, "message": "Add tidy directoy `tidy-alphabetical`\n\nIt can be used to ensure that a list of things is sorted alphabetically.\nIt goes off lines, but contains several heuristics to work with normal\nRust code (looking at indentation, ignoring comments and attributes).", "tree": {"sha": "211213a55e8d86da175a2ccc642804f7d75c56ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/211213a55e8d86da175a2ccc642804f7d75c56ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e3867338d66a016d6e6214a18537fbb715ed752", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e3867338d66a016d6e6214a18537fbb715ed752", "html_url": "https://github.com/rust-lang/rust/commit/0e3867338d66a016d6e6214a18537fbb715ed752", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e3867338d66a016d6e6214a18537fbb715ed752/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6ce5627a9e8af9ae4673a390954fffaf526e5cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ce5627a9e8af9ae4673a390954fffaf526e5cc", "html_url": "https://github.com/rust-lang/rust/commit/e6ce5627a9e8af9ae4673a390954fffaf526e5cc"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "e02b2d98f4215e38cc0368abae826aa350a01e29", "filename": "src/tools/tidy/src/alphabetical.rs", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Falphabetical.rs?ref=0e3867338d66a016d6e6214a18537fbb715ed752", "patch": "@@ -0,0 +1,98 @@\n+//! Checks that a list of items is in alphabetical order\n+//!\n+//! To use, use the following annotation in the code:\n+//! ```rust\n+//! // tidy-alphabetical-start\n+//! fn aaa() {}\n+//! fn eee() {}\n+//! fn z() {}\n+//! // tidy-alphabetical-end\n+//! ```\n+//!\n+//! The following lines are ignored:\n+//! - Lines that are indented with more or less spaces than the first line\n+//! - Lines starting with `//`, `#[`, `)`, `]`, `}` if the comment has the same indentation as\n+//!   the first line\n+//!\n+//! If a line ends with an opening bracket, the line is ignored and the next line will have\n+//! its extra indentation ignored.\n+\n+use std::{fmt::Display, path::Path};\n+\n+use crate::walk::{filter_dirs, walk};\n+\n+fn indentation(line: &str) -> usize {\n+    line.find(|c| c != ' ').unwrap_or(0)\n+}\n+\n+fn is_close_bracket(c: char) -> bool {\n+    matches!(c, ')' | ']' | '}')\n+}\n+\n+fn check_section<'a>(\n+    file: impl Display,\n+    lines: impl Iterator<Item = (usize, &'a str)>,\n+    bad: &mut bool,\n+) {\n+    let content_lines = lines.take_while(|(_, line)| !line.contains(\"// tidy-alphabetical-end\"));\n+\n+    let mut prev_line = String::new();\n+    let mut first_indent = None;\n+    let mut in_split_line = None;\n+\n+    for (line_idx, line) in content_lines {\n+        let indent = first_indent.unwrap_or_else(|| {\n+            let indent = indentation(line);\n+            first_indent = Some(indent);\n+            indent\n+        });\n+\n+        let line = if let Some(prev_split_line) = in_split_line {\n+            in_split_line = None;\n+            format!(\"{prev_split_line}{}\", line.trim_start())\n+        } else {\n+            line.to_string()\n+        };\n+\n+        if indentation(&line) != indent {\n+            continue;\n+        }\n+\n+        let trimmed_line = line.trim_start_matches(' ');\n+\n+        if trimmed_line.starts_with(\"//\")\n+            || trimmed_line.starts_with(\"#[\")\n+            || trimmed_line.starts_with(is_close_bracket)\n+        {\n+            continue;\n+        }\n+\n+        if line.trim_end().ends_with('(') {\n+            in_split_line = Some(line);\n+            continue;\n+        }\n+\n+        let prev_line_trimmed_lowercase = prev_line.trim_start_matches(' ').to_lowercase();\n+\n+        if trimmed_line.to_lowercase() < prev_line_trimmed_lowercase {\n+            tidy_error!(bad, \"{file}:{}: line not in alphabetical order\", line_idx + 1,);\n+        }\n+\n+        prev_line = line;\n+    }\n+}\n+\n+const START_COMMENT: &str = \"// tidy-alphabetical-start\";\n+\n+pub fn check(path: &Path, bad: &mut bool) {\n+    walk(path, &mut filter_dirs, &mut |entry, contents| {\n+        let file = &entry.path().display();\n+\n+        let mut lines = contents.lines().enumerate();\n+        while let Some((_, line)) = lines.next() {\n+            if line.contains(START_COMMENT) {\n+                check_section(file, &mut lines, bad);\n+            }\n+        }\n+    });\n+}"}, {"sha": "fc0bce585723329bbeb827803412fbbcbbb4e4b9", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=0e3867338d66a016d6e6214a18537fbb715ed752", "patch": "@@ -38,6 +38,7 @@ macro_rules! tidy_error {\n     });\n }\n \n+pub mod alphabetical;\n pub mod bins;\n pub mod debug_artifacts;\n pub mod deps;"}, {"sha": "8fe361c45a263fc8856f4b862be7dbb86083a7ca", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3867338d66a016d6e6214a18537fbb715ed752/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=0e3867338d66a016d6e6214a18537fbb715ed752", "patch": "@@ -90,6 +90,8 @@ fn main() {\n         check!(edition, &compiler_path);\n         check!(edition, &library_path);\n \n+        check!(alphabetical, &compiler_path);\n+\n         let collected = {\n             while handles.len() >= concurrency.get() {\n                 handles.pop_front().unwrap().join().unwrap();"}]}