{"sha": "5584c795975e9cc07884b479c7cb7aef2f47c231", "node_id": "C_kwDOAAsO6NoAKDU1ODRjNzk1OTc1ZTljYzA3ODg0YjQ3OWM3Y2I3YWVmMmY0N2MyMzE", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-07T04:43:40Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-07T04:43:40Z"}, "message": "Update to latest rustc and rustdoc styles", "tree": {"sha": "ed710152c2c54a982050c5e74eb0526a402294dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed710152c2c54a982050c5e74eb0526a402294dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5584c795975e9cc07884b479c7cb7aef2f47c231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5584c795975e9cc07884b479c7cb7aef2f47c231", "html_url": "https://github.com/rust-lang/rust/commit/5584c795975e9cc07884b479c7cb7aef2f47c231", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5584c795975e9cc07884b479c7cb7aef2f47c231/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed8e12fd242f2d35b4d1a72155c4f8f4eb05be43", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed8e12fd242f2d35b4d1a72155c4f8f4eb05be43", "html_url": "https://github.com/rust-lang/rust/commit/ed8e12fd242f2d35b4d1a72155c4f8f4eb05be43"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "ea8589116b92c7fca077c5c2fd1217559e3cb7ae", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=5584c795975e9cc07884b479c7cb7aef2f47c231", "patch": "@@ -455,3 +455,17 @@ Calculating code examples follows these rules:\n   * static\n   * typedef\n 2. If one of the previously listed items has a code example, then it'll be counted.\n+\n+### `--with-examples`: include examples of uses of items as documentation\n+\n+This option, combined with `--scrape-examples-target-crate` and `--scrape-examples-output-path`, is used to implement the functionality in [RFC #3123](https://github.com/rust-lang/rfcs/pull/3123). Uses of an item (currently functions / call-sites) are found in a crate and its reverse-dependencies, and then the uses are included as documentation for that item. This feature is intended to be used via `cargo doc --scrape-examples`, but the rustdoc-only workflow looks like:\n+\n+```bash\n+$ rustdoc examples/ex.rs -Z unstable-options \\\n+    --extern foobar=target/deps/libfoobar.rmeta\n+    --scrape-examples-target-crate foobar \\\n+    --scrape-examples-output-path output.calls\n+$ rustdoc src/lib.rs -Z unstable-options --with-examples output.calls\n+```\n+\n+First, the library must be checked to generate an `rmeta`. Then a reverse-dependency like `examples/ex.rs` is given to rustdoc with the target crate being documented (`foobar`) and a path to output the calls (`output.calls`). Then, the generated calls file can be passed via `--with-examples` to the subsequent documentation of `foobar`."}, {"sha": "d5e8d8b4906c7d0c9828bd4973e12516ea719805", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=5584c795975e9cc07884b479c7cb7aef2f47c231", "patch": "@@ -72,8 +72,8 @@ use crate::html::format::{\n     href, print_abi_with_space, print_constness_with_space, print_default_space,\n     print_generic_bounds, print_where_clause, Buffer, HrefError, PrintWithSpace,\n };\n-use crate::html::markdown::{HeadingOffset, Markdown, MarkdownHtml, MarkdownSummaryLine};\n use crate::html::highlight;\n+use crate::html::markdown::{HeadingOffset, Markdown, MarkdownHtml, MarkdownSummaryLine};\n use crate::html::sources;\n use crate::scrape_examples::CallData;\n \n@@ -2479,9 +2479,10 @@ fn render_call_locations(w: &mut Buffer, cx: &Context<'_>, def_id: DefId, item:\n     write!(\n         w,\n         \"<div class=\\\"docblock scraped-example-list\\\">\\\n-          <h1 id=\\\"scraped-examples\\\" class=\\\"small-section-header\\\">\\\n+          <span></span>\n+          <h5 id=\\\"scraped-examples\\\" class=\\\"section-header\\\">\\\n              <a href=\\\"#{}\\\">Examples found in repository</a>\\\n-          </h1>\",\n+          </h5>\",\n         id\n     );\n "}, {"sha": "7ebeffe85dd8c2d2ec172d87fe69a9292ff47cda", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=5584c795975e9cc07884b479c7cb7aef2f47c231", "patch": "@@ -2071,6 +2071,10 @@ details.undocumented[open] > summary::before {\n \tbackground: #f6fdb0;\n }\n \n+.more-examples-toggle {\n+\tmargin-top: 10px;\n+}\n+\n .more-examples-toggle summary {\n \tcolor: #999;\n \tfont-family: 'Fira Sans';\n@@ -2106,10 +2110,6 @@ details.undocumented[open] > summary::before {\n \theight: 100%;\n }\n \n-h1 + .scraped-example {\n-\tmargin-bottom: 10px;\n-}\n-\n .more-scraped-examples .scraped-example {\n \tmargin-bottom: 20px;\n }"}, {"sha": "3a8e5337f5bb900b5e8c04fa523817be8a8e1b42", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5584c795975e9cc07884b479c7cb7aef2f47c231/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=5584c795975e9cc07884b479c7cb7aef2f47c231", "patch": "@@ -216,7 +216,7 @@ crate fn run(\n         // Run call-finder on all items\n         let mut calls = FxHashMap::default();\n         let mut finder = FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates };\n-        tcx.hir().krate().visit_all_item_likes(&mut finder.as_deep_visitor());\n+        tcx.hir().visit_all_item_likes(&mut finder.as_deep_visitor());\n \n         // Save output to provided path\n         let mut encoder = FileEncoder::new(options.output_path).map_err(|e| e.to_string())?;"}]}