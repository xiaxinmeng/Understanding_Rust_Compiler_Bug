{"sha": "9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MThlMmY5ZDY5ZGJiNGE5ZGRkNGE4YmFiODdjZjE2YTQxZmNhMDM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-21T09:57:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-21T09:57:46Z"}, "message": "Merge #5451 #5463 #5465 #5466\n\n5451: Highlight more cases of SyntaxKind when it is a punctuation r=matklad a=GrayJack\n\nThis maybe closes #5406\r\nCloses  #5453\r\n\r\nSeparate what one expect to be a punctuation semantic token (like `,`, `;`, `(`, etc), and what is not (`&`, `::`, `+`, etc)\n\n5463: Bump lexer r=matklad a=kjeremy\n\nSince we're now on rust 1.45\n\n5465: Bump chalk r=matklad a=kjeremy\n\n\n\n5466: Do not show default types in function and closure return values r=matklad a=SomeoneToIgnore\n\nAvoid things like \r\n<img width=\"522\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/87985936-1bbe4f80-cae5-11ea-9b8a-5383d896c296.png\">\r\n\n\nCo-authored-by: GrayJack <gr41.j4ck@gmail.com>\nCo-authored-by: kjeremy <kjeremy@gmail.com>\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "456699a43e125642b459120c78e095d7c5745c28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/456699a43e125642b459120c78e095d7c5745c28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFrwaCRBK7hj4Ov3rIwAAdHIIAEXQ2Rm27taphP2p0DMZ6jtJ\nIyXQThAdFfk2re7DlspmstXTBvGCmVw5nGy8eyBZthaJeqIFDrFiQu//2hEGDKMi\nPs5Ovd5h36kHoFjj9Fs270SDyfeqdfmtbMiaCV8NX8HgGWe+hzcx7kCTH/uKJrjr\nDSUZrI/RU21+DjsC8mstE4CXUoJxF2PUYYoXczIaxhhjg2HEh+mQsIudrHN2fMzL\njW4g1gVraeqjSzT/+SB53j4hv9MqSs6Ayw9tm/LIuI7OcgI8uhexRbQKnvK5Kd/9\n7so3ZF/dC4aoRWQCpxPFG7AvjZtvktFhLqzbNT3EWPTimWgGQk4ngGl2rh4MTVw=\n=yhUc\n-----END PGP SIGNATURE-----\n", "payload": "tree 456699a43e125642b459120c78e095d7c5745c28\nparent 818aeb8a242bba5d8947ce2960e1af27d998f4fc\nparent 5ca3855c06b6e28aaa99f5fdda41b6b80ed871b7\nparent d8eec71dc921a5a20ce9b3abe5251781709fb0db\nparent 9cfb373665e25fac5412ac40a97664b82c9176a6\nparent 54cc3fee4550ec7e2e8b6f118de4b7ced546bc97\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595325466 +0000\ncommitter GitHub <noreply@github.com> 1595325466 +0000\n\nMerge #5451 #5463 #5465 #5466\n\n5451: Highlight more cases of SyntaxKind when it is a punctuation r=matklad a=GrayJack\n\nThis maybe closes #5406\r\nCloses  #5453\r\n\r\nSeparate what one expect to be a punctuation semantic token (like `,`, `;`, `(`, etc), and what is not (`&`, `::`, `+`, etc)\n\n5463: Bump lexer r=matklad a=kjeremy\n\nSince we're now on rust 1.45\n\n5465: Bump chalk r=matklad a=kjeremy\n\n\n\n5466: Do not show default types in function and closure return values r=matklad a=SomeoneToIgnore\n\nAvoid things like \r\n<img width=\"522\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/87985936-1bbe4f80-cae5-11ea-9b8a-5383d896c296.png\">\r\n\n\nCo-authored-by: GrayJack <gr41.j4ck@gmail.com>\nCo-authored-by: kjeremy <kjeremy@gmail.com>\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "html_url": "https://github.com/rust-lang/rust/commit/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818aeb8a242bba5d8947ce2960e1af27d998f4fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/818aeb8a242bba5d8947ce2960e1af27d998f4fc", "html_url": "https://github.com/rust-lang/rust/commit/818aeb8a242bba5d8947ce2960e1af27d998f4fc"}, {"sha": "5ca3855c06b6e28aaa99f5fdda41b6b80ed871b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca3855c06b6e28aaa99f5fdda41b6b80ed871b7", "html_url": "https://github.com/rust-lang/rust/commit/5ca3855c06b6e28aaa99f5fdda41b6b80ed871b7"}, {"sha": "d8eec71dc921a5a20ce9b3abe5251781709fb0db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8eec71dc921a5a20ce9b3abe5251781709fb0db", "html_url": "https://github.com/rust-lang/rust/commit/d8eec71dc921a5a20ce9b3abe5251781709fb0db"}, {"sha": "9cfb373665e25fac5412ac40a97664b82c9176a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cfb373665e25fac5412ac40a97664b82c9176a6", "html_url": "https://github.com/rust-lang/rust/commit/9cfb373665e25fac5412ac40a97664b82c9176a6"}, {"sha": "54cc3fee4550ec7e2e8b6f118de4b7ced546bc97", "url": "https://api.github.com/repos/rust-lang/rust/commits/54cc3fee4550ec7e2e8b6f118de4b7ced546bc97", "html_url": "https://github.com/rust-lang/rust/commit/54cc3fee4550ec7e2e8b6f118de4b7ced546bc97"}], "stats": {"total": 233, "additions": 141, "deletions": 92}, "files": [{"sha": "90a9f38220b03d3ca3e6ccfa903b470792e00c46", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -126,9 +126,9 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.17.0\"\n+version = \"0.18.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9396f12a23b1a40d5019aa81bc0cbd7ccd2c9736d6bc4afc95868533c2346dcb\"\n+checksum = \"eea3a22f0c30b2504ac4ab58934dac0d00b92a4d7788df32795cabca24c3f929\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -138,19 +138,19 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.17.0\"\n+version = \"0.18.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"87e9c67d500717d65ede27affb7ae40efe240d86fbefff1006fe0ffb62d4caf9\"\n+checksum = \"fb617b643e145e3b151502799e91a9625dd5daf1cf05dc2cb821bc75ae0c9cbd\"\n dependencies = [\n  \"chalk-derive\",\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-recursive\"\n-version = \"0.17.0\"\n+version = \"0.18.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a8fd2ac0fc06c857b95614d229bbe8ea317d1d94a7e8b9442a3f05c9a2c2d5f4\"\n+checksum = \"d280565c8eefbf9b2bc615df49c7dfd971faad37774bf65734e626fd23864bd6\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -161,9 +161,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.17.0\"\n+version = \"0.18.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2a79166f2405c1e51eadcc1344f5ee833c7b391532dd78f64a0731a9a123cc58\"\n+checksum = \"be906fbca3f3077dce0e76d9864771d0f450c946af0d86b569fb9504148a065a\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -1506,9 +1506,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"666.0.0\"\n+version = \"669.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4e00c526f9f8430ea4cd2178d25b02bfc7debe6677350c57292f92f50e65d2fe\"\n+checksum = \"456af5f09c006cf6c22c1a433ee0232c4bb74bdc6c647a010166a47c94ed2a63\"\n dependencies = [\n  \"unicode-xid\",\n ]"}, {"sha": "548a3fc1f4e7a6b9dcd0dd619742e2eb4f10aac1", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -28,9 +28,9 @@ test_utils = { path = \"../test_utils\" }\n \n scoped-tls = \"1\"\n \n-chalk-solve = { version = \"0.17.0\" }\n-chalk-ir = { version = \"0.17.0\" }\n-chalk-recursive = { version = \"0.17.0\" }\n+chalk-solve = { version = \"0.18.0\" }\n+chalk-ir = { version = \"0.18.0\" }\n+chalk-recursive = { version = \"0.18.0\" }\n \n [dev-dependencies]\n insta = \"0.16.0\""}, {"sha": "19770e609afd3115bcd31bbb23aaddbb70d4aa8d", "filename": "crates/ra_hir_ty/src/display.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -257,7 +257,12 @@ impl HirDisplay for ApplicationTy {\n                 write!(f, \")\")?;\n                 let ret = sig.ret();\n                 if *ret != Ty::unit() {\n-                    write!(f, \" -> {}\", ret.display(f.db))?;\n+                    let ret_display = if f.omit_verbose_types() {\n+                        ret.display_truncated(f.db, f.max_size)\n+                    } else {\n+                        ret.display(f.db)\n+                    };\n+                    write!(f, \" -> {}\", ret_display)?;\n                 }\n             }\n             TypeCtor::FnDef(def) => {\n@@ -288,7 +293,12 @@ impl HirDisplay for ApplicationTy {\n                 write!(f, \")\")?;\n                 let ret = sig.ret();\n                 if *ret != Ty::unit() {\n-                    write!(f, \" -> {}\", ret.display(f.db))?;\n+                    let ret_display = if f.omit_verbose_types() {\n+                        ret.display_truncated(f.db, f.max_size)\n+                    } else {\n+                        ret.display(f.db)\n+                    };\n+                    write!(f, \" -> {}\", ret_display)?;\n                 }\n             }\n             TypeCtor::Adt(def_id) => {\n@@ -397,7 +407,13 @@ impl HirDisplay for ApplicationTy {\n                         f.write_joined(sig.params(), \", \")?;\n                         write!(f, \"|\")?;\n                     };\n-                    write!(f, \" -> {}\", sig.ret().display(f.db))?;\n+\n+                    let ret_display = if f.omit_verbose_types() {\n+                        sig.ret().display_truncated(f.db, f.max_size)\n+                    } else {\n+                        sig.ret().display(f.db)\n+                    };\n+                    write!(f, \" -> {}\", ret_display)?;\n                 } else {\n                     write!(f, \"{{closure}}\")?;\n                 }"}, {"sha": "f2e4f7ee548514b641b75eacd711490fd766f17f", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -425,6 +425,8 @@ fn main() {\n       //^^ Test<i32>\n     let zz_ref = &zz;\n       //^^^^^^ &Test<i32>\n+    let test = || zz;\n+      //^^^^ || -> Test<i32>\n }\"#,\n         );\n     }"}, {"sha": "d456d5d362c919550c408c5195aa33e68aa9715e", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 45, "deletions": 14, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -539,21 +539,52 @@ fn highlight_element(\n                 _ => h,\n             }\n         }\n-        T![*] => {\n-            let prefix_expr = element.parent().and_then(ast::PrefixExpr::cast)?;\n-\n-            let expr = prefix_expr.expr()?;\n-            let ty = sema.type_of_expr(&expr)?;\n-            if !ty.is_raw_ptr() {\n-                return None;\n-            } else {\n-                HighlightTag::Operator | HighlightModifier::Unsafe\n+        p if p.is_punct() => match p {\n+            T![::] | T![->] | T![=>] | T![&] | T![..] | T![=] | T![@] => {\n+                HighlightTag::Operator.into()\n             }\n-        }\n-        T![!] if element.parent().and_then(ast::MacroCall::cast).is_some() => {\n-            Highlight::new(HighlightTag::Macro)\n-        }\n-        p if p.is_punct() => HighlightTag::Punctuation.into(),\n+            T![!] if element.parent().and_then(ast::MacroCall::cast).is_some() => {\n+                HighlightTag::Macro.into()\n+            }\n+            T![*] if element.parent().and_then(ast::PointerType::cast).is_some() => {\n+                HighlightTag::Keyword.into()\n+            }\n+            T![*] if element.parent().and_then(ast::PrefixExpr::cast).is_some() => {\n+                let prefix_expr = element.parent().and_then(ast::PrefixExpr::cast)?;\n+\n+                let expr = prefix_expr.expr()?;\n+                let ty = sema.type_of_expr(&expr)?;\n+                if ty.is_raw_ptr() {\n+                    HighlightTag::Operator | HighlightModifier::Unsafe\n+                } else if let Some(ast::PrefixOp::Deref) = prefix_expr.op_kind() {\n+                    HighlightTag::Operator.into()\n+                } else {\n+                    HighlightTag::Punctuation.into()\n+                }\n+            }\n+            T![-] if element.parent().and_then(ast::PrefixExpr::cast).is_some() => {\n+                HighlightTag::NumericLiteral.into()\n+            }\n+            _ if element.parent().and_then(ast::PrefixExpr::cast).is_some() => {\n+                HighlightTag::Operator.into()\n+            }\n+            _ if element.parent().and_then(ast::BinExpr::cast).is_some() => {\n+                HighlightTag::Operator.into()\n+            }\n+            _ if element.parent().and_then(ast::RangeExpr::cast).is_some() => {\n+                HighlightTag::Operator.into()\n+            }\n+            _ if element.parent().and_then(ast::RangePat::cast).is_some() => {\n+                HighlightTag::Operator.into()\n+            }\n+            _ if element.parent().and_then(ast::DotDotPat::cast).is_some() => {\n+                HighlightTag::Operator.into()\n+            }\n+            _ if element.parent().and_then(ast::Attr::cast).is_some() => {\n+                HighlightTag::Attribute.into()\n+            }\n+            _ => HighlightTag::Punctuation.into(),\n+        },\n \n         k if k.is_keyword() => {\n             let h = Highlight::new(HighlightTag::Keyword);"}, {"sha": "6322d404fba5c6c7cab62278eecce9b22af4b45c", "filename": "crates/ra_ide/test_data/highlight_doctest.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -36,24 +36,24 @@\n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"comment documentation\">/// ```</span>\n-<span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"string_literal injected\">\"early doctests should not go boom\"</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n+<span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"string_literal injected\">\"early doctests should not go boom\"</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span><span class=\"comment documentation\">/// ```</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"punctuation\">{</span>\n     <span class=\"field declaration\">bar</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">bool</span><span class=\"punctuation\">,</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"constant declaration\">bar</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">bool</span> <span class=\"punctuation\">=</span> <span class=\"bool_literal\">true</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"constant declaration\">bar</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">bool</span> <span class=\"operator\">=</span> <span class=\"bool_literal\">true</span><span class=\"punctuation\">;</span>\n \n     <span class=\"comment documentation\">/// Constructs a new `Foo`.</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">#</span><span class=\"punctuation injected\">!</span><span class=\"punctuation injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation injected\">(</span><span class=\"attribute injected\">unused_mut</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">]</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"punctuation injected\">:</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"punctuation injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n+    <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"attribute injected\">#</span><span class=\"attribute injected\">!</span><span class=\"attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation injected\">(</span><span class=\"attribute injected\">unused_mut</span><span class=\"punctuation injected\">)</span><span class=\"attribute injected\">]</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"punctuation injected\">:</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span>    <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n         <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">bar</span><span class=\"punctuation\">:</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">}</span>\n     <span class=\"punctuation\">}</span>\n \n@@ -62,32 +62,32 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">use</span><span class=\"generic injected\"> </span><span class=\"module injected\">x</span><span class=\"punctuation injected\">::</span><span class=\"module injected\">y</span><span class=\"punctuation injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">use</span><span class=\"generic injected\"> </span><span class=\"module injected\">x</span><span class=\"operator injected\">::</span><span class=\"module injected\">y</span><span class=\"punctuation injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">foo</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"punctuation injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">foo</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">// calls bar on foo</span>\n     <span class=\"comment documentation\">/// </span><span class=\"macro injected\">assert!</span><span class=\"punctuation injected\">(</span><span class=\"generic injected\">foo</span><span class=\"punctuation injected\">.</span><span class=\"generic injected\">bar</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">bar</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"variable injected\">foo</span><span class=\"punctuation injected\">.</span><span class=\"field injected\">bar</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">||</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"punctuation injected\">::</span><span class=\"constant injected\">bar</span><span class=\"punctuation injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">bar</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"variable injected\">foo</span><span class=\"punctuation injected\">.</span><span class=\"field injected\">bar</span><span class=\"generic injected\"> </span><span class=\"operator injected\">||</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"constant injected\">bar</span><span class=\"punctuation injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">/* multi-line\n     </span><span class=\"comment documentation\">/// </span><span class=\"comment injected\">       comment */</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">multi_line_string</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"string_literal injected\">\"Foo\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">multi_line_string</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"string_literal injected\">\"Foo\n     </span><span class=\"comment documentation\">/// </span><span class=\"string_literal injected\">  bar\n     </span><span class=\"comment documentation\">/// </span><span class=\"string_literal injected\">         \"</span><span class=\"punctuation injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```rust,no_run</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">foobar</span><span class=\"generic injected\"> </span><span class=\"punctuation injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"punctuation injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">.</span><span class=\"function injected\">bar</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected\">foobar</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">.</span><span class=\"function injected\">bar</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span>    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```sh</span>\n     <span class=\"comment documentation\">/// echo 1</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"punctuation\">{</span>\n         <span class=\"bool_literal\">true</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n@@ -96,7 +96,7 @@\n <span class=\"comment documentation\">/// </span><span class=\"macro injected\">noop!</span><span class=\"punctuation injected\">(</span><span class=\"numeric_literal injected\">1</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span><span class=\"comment documentation\">/// ```</span>\n <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">noop</span> <span class=\"punctuation\">{</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n         <span class=\"punctuation\">$</span>expr\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "18addd00d283c68b13aa8dbd99b5b964c3e1d0c1", "filename": "crates/ra_ide/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -35,7 +35,7 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"punctuation\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&</span><span class=\"builtin_type\">str</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"punctuation\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"punctuation\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n     <span class=\"function\">fixture</span><span class=\"punctuation\">(</span><span class=\"string_literal\">r#\"</span>"}, {"sha": "1b681b2c6b53b5e88c49766605429f4c832ff1c7", "filename": "crates/ra_ide/test_data/highlight_strings.html", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -36,14 +36,14 @@\n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">println</span> <span class=\"punctuation\">{</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>arg<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span>*<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">{</span>\n-        <span class=\"punctuation\">$</span><span class=\"keyword\">crate</span><span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>io<span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>_print<span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"keyword\">crate</span><span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>arg<span class=\"punctuation\">)</span>*<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>arg<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">{</span>\n+        <span class=\"punctuation\">$</span><span class=\"keyword\">crate</span><span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>io<span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>_print<span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"keyword\">crate</span><span class=\"punctuation\">:</span><span class=\"punctuation\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>arg<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>\n <span class=\"punctuation\">}</span>\n #[rustc_builtin_macro]\n <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">format_args_nl</span> <span class=\"punctuation\">{</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">,</span> <span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>args<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span>*<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">,</span> <span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>args<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n@@ -52,18 +52,18 @@\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"world\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>   <span class=\"comment\">// =&gt; \"Hello, world!\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"The number is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>   <span class=\"comment\">// =&gt; \"The number is 1\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">(</span><span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>          <span class=\"comment\">// =&gt; \"(3, 4)\"</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">value</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> value<span class=\"punctuation\">=</span><span class=\"numeric_literal\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>      <span class=\"comment\">// =&gt; \"4\"</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">value</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> value<span class=\"operator\">=</span><span class=\"numeric_literal\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>      <span class=\"comment\">// =&gt; \"4\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>           <span class=\"comment\">// =&gt; \"1 2\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">4</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">42</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>             <span class=\"comment\">// =&gt; \"0042\" with leading zerosV</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>   <span class=\"comment\">// =&gt; \"2 1 1 2\"</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">argument</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> argument <span class=\"punctuation\">=</span> <span class=\"string_literal\">\"test\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>   <span class=\"comment\">// =&gt; \"test\"</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">,</span> name <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>          <span class=\"comment\">// =&gt; \"2 1\"</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">a</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">c</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">b</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> a<span class=\"punctuation\">=</span><span class=\"string_literal\">\"a\"</span><span class=\"punctuation\">,</span> b<span class=\"punctuation\">=</span><span class=\"char_literal\">'b'</span><span class=\"punctuation\">,</span> c<span class=\"punctuation\">=</span><span class=\"numeric_literal\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">argument</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> argument <span class=\"operator\">=</span> <span class=\"string_literal\">\"test\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>   <span class=\"comment\">// =&gt; \"test\"</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">,</span> name <span class=\"operator\">=</span> <span class=\"numeric_literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>          <span class=\"comment\">// =&gt; \"2 1\"</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">a</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">c</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">b</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> a<span class=\"operator\">=</span><span class=\"string_literal\">\"a\"</span><span class=\"punctuation\">,</span> b<span class=\"operator\">=</span><span class=\"char_literal\">'b'</span><span class=\"punctuation\">,</span> c<span class=\"operator\">=</span><span class=\"numeric_literal\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"{{</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">}}\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>                       <span class=\"comment\">// =&gt; \"{2}\"</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">width</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> width <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">width</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> width <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">-</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">^</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n@@ -78,10 +78,10 @@\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span>    <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span>   <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"variable\">number</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"variable\">prec</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> prec <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> number <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"punctuation\">=</span><span class=\"numeric_literal\">1234.56</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 characters\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"punctuation\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"punctuation\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"variable\">number</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"variable\">prec</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"punctuation\">,</span> prec <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"punctuation\">,</span> number <span class=\"operator\">=</span> <span class=\"numeric_literal\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"operator\">=</span><span class=\"numeric_literal\">1234.56</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 characters\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span><span class=\"punctuation\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">3</span><span class=\"punctuation\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello {{}}\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"{{ Hello\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n@@ -91,6 +91,6 @@\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">World\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"escape_sequence\">\\x65</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6F</span><span class=\"string_literal\"> World\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> A <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> \u043d\u0438\u0447\u043e\u0441\u0438 <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> A <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"punctuation\">,</span> \u043d\u0438\u0447\u043e\u0441\u0438 <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "b81b6f1c3b9fe586ff276386818adbf8e1b4d647", "filename": "crates/ra_ide/test_data/highlight_unsafe.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -40,15 +40,15 @@\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"punctuation\">=</span> <span class=\"punctuation\">&</span><span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> *<span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> <span class=\"keyword\">*</span><span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span><span class=\"punctuation\">;</span>\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"punctuation\">{</span>\n         <span class=\"function unsafe\">unsafe_fn</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n         <span class=\"struct\">HasUnsafeFn</span><span class=\"punctuation\">.</span><span class=\"function unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"punctuation\">=</span> <span class=\"operator unsafe\">*</span><span class=\"punctuation\">(</span><span class=\"variable\">x</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"punctuation\">=</span> <span class=\"punctuation\">-</span><span class=\"variable\">x</span><span class=\"punctuation\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">*</span><span class=\"punctuation\">(</span><span class=\"variable\">x</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">-</span><span class=\"variable\">x</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "345a2f0231f26b5c034e20dff87e1cac43f2a343", "filename": "crates/ra_ide/test_data/highlighting.html", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -35,50 +35,50 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"punctuation\">#</span><span class=\"punctuation\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Clone</span><span class=\"punctuation\">,</span><span class=\"attribute\"> Debug</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span>\n+<pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Clone</span><span class=\"punctuation\">,</span><span class=\"attribute\"> Debug</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"punctuation\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n     <span class=\"keyword\">pub</span> <span class=\"field declaration\">y</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-        <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n-<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"punctuation\">,</span> <span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"punctuation\">{</span>\n-    <span class=\"function\">foo</span><span class=\"punctuation\">::</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"punctuation\">,</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"punctuation\">,</span> <span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"punctuation\">{</span>\n+    <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"punctuation\">,</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">def_fn</span> <span class=\"punctuation\">{</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span>*<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">)</span>*<span class=\"punctuation\">}</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"macro\">def_fn!</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-</span><span class=\"punctuation\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n         <span class=\"numeric_literal\">100</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">noop</span> <span class=\"punctuation\">{</span>\n-    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"punctuation\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n         <span class=\"punctuation\">$</span>expr\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n@@ -87,14 +87,14 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n     <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"punctuation\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"punctuation\">::</span><span class=\"unresolved_reference\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">;</span>\n         <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">push</span><span class=\"punctuation\">(</span><span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">1</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"punctuation\">{</span>\n         <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"static mutable\">STATIC_MUT</span> <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n+        <span class=\"static mutable\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n     <span class=\"keyword control\">for</span> <span class=\"variable declaration\">e</span> <span class=\"keyword control\">in</span> <span class=\"variable mutable\">vec</span> <span class=\"punctuation\">{</span>\n@@ -103,11 +103,11 @@\n \n     <span class=\"macro\">noop!</span><span class=\"punctuation\">(</span><span class=\"macro\">noop</span><span class=\"macro\">!</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"punctuation\">=</span> <span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"punctuation\">=</span> <span class=\"punctuation\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"punctuation\">=</span> <span class=\"punctuation\">&</span><span class=\"variable mutable\">y</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"variable mutable\">y</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable declaration\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable declaration\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n \n     <span class=\"variable\">y</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n@@ -116,13 +116,13 @@\n     <span class=\"enum_variant declaration\">Some</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n     <span class=\"enum_variant declaration\">None</span><span class=\"punctuation\">,</span>\n <span class=\"punctuation\">}</span>\n-<span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"punctuation\">::</span>*<span class=\"punctuation\">;</span>\n+<span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">impl</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n         <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"punctuation\">{</span>\n-            <span class=\"enum_variant\">None</span> <span class=\"punctuation\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n-            <span class=\"variable declaration\">Nope</span> <span class=\"punctuation\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"punctuation\">,</span>\n+            <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n+            <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"punctuation\">,</span>\n         <span class=\"punctuation\">}</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "08d83302cec9ea2ae39143748ea1eeb5e5aebaab", "filename": "crates/ra_ide/test_data/rainbow_highlighting.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -36,14 +36,14 @@\n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"punctuation\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(17,51%,74%);\">x</span> <span class=\"punctuation\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(127,76%,66%);\">y</span> <span class=\"punctuation\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(17,51%,74%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(127,76%,66%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span> <span class=\"punctuation\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(85,49%,84%);\">y</span> <span class=\"punctuation\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(85,49%,84%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"punctuation\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "670f04578a402e151fcf804545b3f1d94902db27", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=9518e2f9d69dbb4a9ddd4a8bab87cf16a41fca03", "patch": "@@ -13,7 +13,7 @@ doctest = false\n [dependencies]\n itertools = \"0.9.0\"\n rowan = \"0.10.0\"\n-rustc_lexer = { version = \"666.0.0\", package = \"rustc-ap-rustc_lexer\" }\n+rustc_lexer = { version = \"669.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n arrayvec = \"0.5.1\"\n once_cell = \"1.3.1\""}]}