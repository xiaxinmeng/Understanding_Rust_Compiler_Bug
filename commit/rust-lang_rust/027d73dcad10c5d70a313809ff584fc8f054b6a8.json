{"sha": "027d73dcad10c5d70a313809ff584fc8f054b6a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyN2Q3M2RjYWQxMGM1ZDcwYTMxMzgwOWZmNTg0ZmM4ZjA1NGI2YTg=", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-05-25T22:30:54Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-05-27T21:47:04Z"}, "message": "Restrict Fake Read precision", "tree": {"sha": "8f7bd6e587a327a3769c05f5645a3cb01ed88ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f7bd6e587a327a3769c05f5645a3cb01ed88ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/027d73dcad10c5d70a313809ff584fc8f054b6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/027d73dcad10c5d70a313809ff584fc8f054b6a8", "html_url": "https://github.com/rust-lang/rust/commit/027d73dcad10c5d70a313809ff584fc8f054b6a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/027d73dcad10c5d70a313809ff584fc8f054b6a8/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51830b90afd339332892a8f20db1957d43bf086", "url": "https://api.github.com/repos/rust-lang/rust/commits/e51830b90afd339332892a8f20db1957d43bf086", "html_url": "https://github.com/rust-lang/rust/commit/e51830b90afd339332892a8f20db1957d43bf086"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "6baa185406e207f7373f23588d010bbc40aaf16a", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/027d73dcad10c5d70a313809ff584fc8f054b6a8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/027d73dcad10c5d70a313809ff584fc8f054b6a8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=027d73dcad10c5d70a313809ff584fc8f054b6a8", "patch": "@@ -1588,6 +1588,11 @@ impl<'a, 'tcx> InferBorrowKind<'a, 'tcx> {\n impl<'a, 'tcx> euv::Delegate<'tcx> for InferBorrowKind<'a, 'tcx> {\n     fn fake_read(&mut self, place: Place<'tcx>, cause: FakeReadCause, diag_expr_id: hir::HirId) {\n         if let PlaceBase::Upvar(_) = place.base {\n+            // We need to restrict Fake Read precision to avoid fake reading unsafe code,\n+            // such as deref of a raw pointer.\n+            let place = restrict_capture_precision(place);\n+            let place =\n+                restrict_repr_packed_field_ref_capture(self.fcx.tcx, self.fcx.param_env, &place);\n             self.fake_reads.push((place, cause, diag_expr_id));\n         }\n     }"}]}