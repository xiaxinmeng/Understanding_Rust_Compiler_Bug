{"sha": "187c27e6b0c756db340e4acdb18b9aae7fd1a1df", "node_id": "C_kwDOAAsO6NoAKDE4N2MyN2U2YjBjNzU2ZGIzNDBlNGFjZGIxOGI5YWFlN2ZkMWExZGY", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-09-27T19:01:23Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-09-27T19:01:23Z"}, "message": "rename `and_only_expr_in_arm` -> `is_single_call_in_arm`", "tree": {"sha": "8e19ab86a33c7692f7973a9711a79285646347ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e19ab86a33c7692f7973a9711a79285646347ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/187c27e6b0c756db340e4acdb18b9aae7fd1a1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/187c27e6b0c756db340e4acdb18b9aae7fd1a1df", "html_url": "https://github.com/rust-lang/rust/commit/187c27e6b0c756db340e4acdb18b9aae7fd1a1df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/187c27e6b0c756db340e4acdb18b9aae7fd1a1df/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88a57963da0d55f5a27c7b3dfe899d972136659c", "url": "https://api.github.com/repos/rust-lang/rust/commits/88a57963da0d55f5a27c7b3dfe899d972136659c", "html_url": "https://github.com/rust-lang/rust/commit/88a57963da0d55f5a27c7b3dfe899d972136659c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "81d04935d89668aceb9d9a15a505bd186c89509a", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/187c27e6b0c756db340e4acdb18b9aae7fd1a1df/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/187c27e6b0c756db340e4acdb18b9aae7fd1a1df/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=187c27e6b0c756db340e4acdb18b9aae7fd1a1df", "patch": "@@ -204,11 +204,11 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n         {\n             let arg_ty = cx.typeck_results().expr_ty(arg);\n             let is_copy = is_copy(cx, arg_ty);\n-            let drop_is_only_expr_in_arm = and_only_expr_in_arm(cx, arg, expr);\n+            let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             let (lint, msg) = match fn_name {\n                 sym::mem_drop if arg_ty.is_ref() => (DROP_REF, DROP_REF_SUMMARY),\n                 sym::mem_forget if arg_ty.is_ref() => (FORGET_REF, FORGET_REF_SUMMARY),\n-                sym::mem_drop if is_copy && !drop_is_only_expr_in_arm => (DROP_COPY, DROP_COPY_SUMMARY),\n+                sym::mem_drop if is_copy && !drop_is_single_call_in_arm => (DROP_COPY, DROP_COPY_SUMMARY),\n                 sym::mem_forget if is_copy => (FORGET_COPY, FORGET_COPY_SUMMARY),\n                 sym::mem_drop if is_type_lang_item(cx, arg_ty, LangItem::ManuallyDrop) => {\n                     span_lint_and_help(\n@@ -225,7 +225,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n                     if !(arg_ty.needs_drop(cx.tcx, cx.param_env)\n                         || is_must_use_func_call(cx, arg)\n                         || is_must_use_ty(cx, arg_ty)\n-                        || drop_is_only_expr_in_arm\n+                        || drop_is_single_call_in_arm\n                         ) =>\n                 {\n                     (DROP_NON_DROP, DROP_NON_DROP_SUMMARY)\n@@ -252,7 +252,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n //     <pat> => drop(fn_with_side_effect_and_returning_some_value()),\n //     ..\n // }\n-fn and_only_expr_in_arm<'tcx>(cx: &LateContext<'tcx>, arg: &'tcx Expr<'_>, drop_expr: &'tcx Expr<'_>) -> bool {\n+fn is_single_call_in_arm<'tcx>(cx: &LateContext<'tcx>, arg: &'tcx Expr<'_>, drop_expr: &'tcx Expr<'_>) -> bool {\n     if matches!(arg.kind, ExprKind::Call(..) | ExprKind::MethodCall(..)) {\n         let parent_node = get_parent_node(cx.tcx, drop_expr.hir_id);\n         if let Some(Node::Arm(Arm { body, .. })) = &parent_node {"}]}