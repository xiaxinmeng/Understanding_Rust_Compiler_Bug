{"sha": "68e3292fd79230f00745dc7608f4d80329c776bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZTMyOTJmZDc5MjMwZjAwNzQ1ZGM3NjA4ZjRkODAzMjljNzc2YmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-28T03:47:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-28T03:47:15Z"}, "message": "auto merge of #10691 : g3xzh/rust/benchm, r=cmr\n\nI have written some benchmark tests to `push`, `push_many`, `join`,\r\n`join_many` and `ends_with_path`.\r\n\r\nLet me know what you think (@cmr).\r\nThanks in advance.", "tree": {"sha": "97b7e7ea2fe8aa4525d6bcfeef7ecf6e99d08261", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97b7e7ea2fe8aa4525d6bcfeef7ecf6e99d08261"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68e3292fd79230f00745dc7608f4d80329c776bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68e3292fd79230f00745dc7608f4d80329c776bb", "html_url": "https://github.com/rust-lang/rust/commit/68e3292fd79230f00745dc7608f4d80329c776bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68e3292fd79230f00745dc7608f4d80329c776bb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db5b51ae634830ac07b199a0842ef839d3809d8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/db5b51ae634830ac07b199a0842ef839d3809d8e", "html_url": "https://github.com/rust-lang/rust/commit/db5b51ae634830ac07b199a0842ef839d3809d8e"}, {"sha": "26ba64dca9486a910a6e191d27841ebff800928c", "url": "https://api.github.com/repos/rust-lang/rust/commits/26ba64dca9486a910a6e191d27841ebff800928c", "html_url": "https://github.com/rust-lang/rust/commit/26ba64dca9486a910a6e191d27841ebff800928c"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "9b6b82266a2af40005ad72819c5eba5103acea5c", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/68e3292fd79230f00745dc7608f4d80329c776bb/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68e3292fd79230f00745dc7608f4d80329c776bb/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=68e3292fd79230f00745dc7608f4d80329c776bb", "patch": "@@ -1319,3 +1319,89 @@ mod tests {\n         // the full set of tests\n     }\n }\n+\n+#[cfg(test)]\n+mod bench {\n+    use extra::test::BenchHarness;\n+    use super::*;\n+\n+    #[bench]\n+    fn join_home_dir(bh: &mut BenchHarness) {\n+        let posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.join(\"home\");\n+        });\n+    }\n+\n+    #[bench]\n+    fn join_abs_path_home_dir(bh: &mut BenchHarness) {\n+        let posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.join(\"/home\");\n+        });\n+    }\n+\n+    #[bench]\n+    fn join_many_home_dir(bh: &mut BenchHarness) {\n+        let posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.join_many(&[\"home\"]);\n+        });\n+    }\n+\n+    #[bench]\n+    fn join_many_abs_path_home_dir(bh: &mut BenchHarness) {\n+        let posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.join_many(&[\"/home\"]);\n+        });\n+    }\n+\n+    #[bench]\n+    fn push_home_dir(bh: &mut BenchHarness) {\n+        let mut posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.push(\"home\");\n+        });\n+    }\n+\n+    #[bench]\n+    fn push_abs_path_home_dir(bh: &mut BenchHarness) {\n+        let mut posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.push(\"/home\");\n+        });\n+    }\n+\n+    #[bench]\n+    fn push_many_home_dir(bh: &mut BenchHarness) {\n+        let mut posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.push_many(&[\"home\"]);\n+        });\n+    }\n+\n+    #[bench]\n+    fn push_many_abs_path_home_dir(bh: &mut BenchHarness) {\n+        let mut posix_path = Path::new(\"/\");\n+        bh.iter(|| {\n+            posix_path.push_many(&[\"/home\"]);\n+        });\n+    }\n+\n+    #[bench]\n+    fn ends_with_path_home_dir(bh: &mut BenchHarness) {\n+        let posix_home_path = Path::new(\"/home\");\n+        bh.iter(|| {\n+            posix_home_path.ends_with_path(&Path::new(\"home\"));\n+        });\n+    }\n+\n+    #[bench]\n+    fn ends_with_path_missmatch_jome_home(bh: &mut BenchHarness) {\n+        let posix_home_path = Path::new(\"/home\");\n+        bh.iter(|| {\n+            posix_home_path.ends_with_path(&Path::new(\"jome\"));\n+        });\n+    }\n+}"}]}