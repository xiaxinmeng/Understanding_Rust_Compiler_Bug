{"sha": "8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNGNmMGIzZWQxYTdjODNmNDBkZmM3MTdlZDJmYzAzYTYzMGExZDQ=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-10-21T12:27:32Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-10-30T11:27:45Z"}, "message": "TypeVisitor: use `ControlFlow` in clippy", "tree": {"sha": "ac7298aae38c1a68c846d3d64bafeac1ea76b015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac7298aae38c1a68c846d3d64bafeac1ea76b015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "html_url": "https://github.com/rust-lang/rust/commit/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61f8182cecd0451abaa0fabad1f96abf88742ba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/61f8182cecd0451abaa0fabad1f96abf88742ba6", "html_url": "https://github.com/rust-lang/rust/commit/61f8182cecd0451abaa0fabad1f96abf88742ba6"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e97fa543a093d286c19ff53e25bb04c98340b3fe", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "patch": "@@ -11,6 +11,7 @@\n #![feature(or_patterns)]\n #![feature(rustc_private)]\n #![feature(stmt_expr_attributes)]\n+#![feature(control_flow_enum)]\n #![recursion_limit = \"512\"]\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![allow(clippy::missing_docs_in_private_items, clippy::must_use_candidate)]"}, {"sha": "7f6627358a1861e020e747511c1a0d7a1275a64b", "filename": "src/tools/clippy/clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs?ref=8e4cf0b3ed1a7c83f40dfc717ed2fc03a630a1d4", "patch": "@@ -18,6 +18,7 @@ use rustc_mir::dataflow::{Analysis, AnalysisDomain, GenKill, GenKillAnalysis, Re\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n+use std::ops::ControlFlow;\n \n macro_rules! unwrap_or_continue {\n     ($x:expr) => {\n@@ -517,7 +518,7 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n                 self.possible_borrower.add(borrowed.local, lhs);\n             },\n             other => {\n-                if !ContainsRegion.visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty) {\n+                if ContainsRegion.visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty) == ControlFlow::CONTINUE {\n                     return;\n                 }\n                 rvalue_locals(other, |rhs| {\n@@ -539,7 +540,7 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n             // If the call returns something with lifetimes,\n             // let's conservatively assume the returned value contains lifetime of all the arguments.\n             // For example, given `let y: Foo<'a> = foo(x)`, `y` is considered to be a possible borrower of `x`.\n-            if !ContainsRegion.visit_ty(&self.body.local_decls[*dest].ty) {\n+            if ContainsRegion.visit_ty(&self.body.local_decls[*dest].ty) == ControlFlow::CONTINUE {\n                 return;\n             }\n \n@@ -558,8 +559,8 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n struct ContainsRegion;\n \n impl TypeVisitor<'_> for ContainsRegion {\n-    fn visit_region(&mut self, _: ty::Region<'_>) -> bool {\n-        true\n+    fn visit_region(&mut self, _: ty::Region<'_>) -> ControlFlow<(), ()> {\n+        ControlFlow::BREAK\n     }\n }\n "}]}