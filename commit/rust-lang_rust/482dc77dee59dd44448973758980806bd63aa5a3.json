{"sha": "482dc77dee59dd44448973758980806bd63aa5a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MmRjNzdkZWU1OWRkNDQ0NDg5NzM3NTg5ODA4MDZiZDYzYWE1YTM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-17T18:51:07Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-17T18:51:07Z"}, "message": "formatting", "tree": {"sha": "6d4f828fff5c557a490ae0c08de675745ce776f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d4f828fff5c557a490ae0c08de675745ce776f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/482dc77dee59dd44448973758980806bd63aa5a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/482dc77dee59dd44448973758980806bd63aa5a3", "html_url": "https://github.com/rust-lang/rust/commit/482dc77dee59dd44448973758980806bd63aa5a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/482dc77dee59dd44448973758980806bd63aa5a3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3094c3792bb0bffbaaa0688d02c970054c353d1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3094c3792bb0bffbaaa0688d02c970054c353d1f", "html_url": "https://github.com/rust-lang/rust/commit/3094c3792bb0bffbaaa0688d02c970054c353d1f"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "20a5a6c54984d0bed6dd310df67780dbdd35cc8e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/482dc77dee59dd44448973758980806bd63aa5a3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482dc77dee59dd44448973758980806bd63aa5a3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=482dc77dee59dd44448973758980806bd63aa5a3", "patch": "@@ -2121,27 +2121,25 @@ impl Clean<Vec<Item>> for doctree::Impl<'_> {\n             Some(DefKind::TyAlias) => Some(cx.tcx.type_of(did).clean(cx)),\n             _ => None,\n         });\n-        let make_item = |trait_: Option<Type>, for_: Type, items: Vec<Item>| {\n-            Item {\n-                name: None,\n-                attrs: self.attrs.clean(cx),\n-                source: self.whence.clean(cx),\n-                def_id,\n-                visibility: self.vis.clean(cx),\n-                stability: cx.stability(self.id).clean(cx),\n-                deprecation: cx.deprecation(self.id).clean(cx),\n-                inner: ImplItem(Impl {\n-                    unsafety: self.unsafety,\n-                    generics: self.generics.clean(cx),\n-                    provided_trait_methods: provided.clone(),\n-                    trait_,\n-                    for_,\n-                    items,\n-                    polarity: Some(cx.tcx.impl_polarity(def_id).clean(cx)),\n-                    synthetic: false,\n-                    blanket_impl: None,\n-                }),\n-            }\n+        let make_item = |trait_: Option<Type>, for_: Type, items: Vec<Item>| Item {\n+            name: None,\n+            attrs: self.attrs.clean(cx),\n+            source: self.whence.clean(cx),\n+            def_id,\n+            visibility: self.vis.clean(cx),\n+            stability: cx.stability(self.id).clean(cx),\n+            deprecation: cx.deprecation(self.id).clean(cx),\n+            inner: ImplItem(Impl {\n+                unsafety: self.unsafety,\n+                generics: self.generics.clean(cx),\n+                provided_trait_methods: provided.clone(),\n+                trait_,\n+                for_,\n+                items,\n+                polarity: Some(cx.tcx.impl_polarity(def_id).clean(cx)),\n+                synthetic: false,\n+                blanket_impl: None,\n+            }),\n         };\n         if let Some(type_alias) = type_alias {\n             ret.push(make_item(trait_.clone(), type_alias, items.clone()));"}]}