{"sha": "987ef784fd9cf4e9039f84e3a052e81349108b69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4N2VmNzg0ZmQ5Y2Y0ZTkwMzlmODRlM2EwNTJlODEzNDkxMDhiNjk=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-08-29T19:31:28Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-08-29T19:58:05Z"}, "message": "Fix the test_variadic_ptr fn on printf-less sys\n\nFixes #36076", "tree": {"sha": "85b5663a2b370f2cc0a8878e19dab1f1c3b58091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85b5663a2b370f2cc0a8878e19dab1f1c3b58091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/987ef784fd9cf4e9039f84e3a052e81349108b69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/987ef784fd9cf4e9039f84e3a052e81349108b69", "html_url": "https://github.com/rust-lang/rust/commit/987ef784fd9cf4e9039f84e3a052e81349108b69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/987ef784fd9cf4e9039f84e3a052e81349108b69/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "html_url": "https://github.com/rust-lang/rust/commit/eaf71f8d1034f16140791f566cab3f3c9a0bf96a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "f7fe61896f85e84e03ca00f2c81052a61fe71a31", "filename": "src/libcoretest/ptr.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/987ef784fd9cf4e9039f84e3a052e81349108b69/src%2Flibcoretest%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987ef784fd9cf4e9039f84e3a052e81349108b69/src%2Flibcoretest%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fptr.rs?ref=987ef784fd9cf4e9039f84e3a052e81349108b69", "patch": "@@ -173,12 +173,16 @@ fn test_unsized_unique() {\n }\n \n #[test]\n-fn test_variadic_fnptr() {\n+#[allow(warnings)]\n+// Have a symbol for the test below. It doesn\u2019t need to be an actual variadic function, match the\n+// ABI, or even point to an actual executable code, because the function itself is never invoked.\n+#[no_mangle]\n+pub fn test_variadic_fnptr() {\n     use core::hash::{Hash, SipHasher};\n-    extern \"C\" {\n-        fn printf(_: *const u8, ...);\n+    extern {\n+        fn test_variadic_fnptr(_: u64, ...) -> f64;\n     }\n-    let p: unsafe extern \"C\" fn(*const u8, ...) = printf;\n+    let p: unsafe extern fn(u64, ...) -> f64 = test_variadic_fnptr;\n     let q = p.clone();\n     assert_eq!(p, q);\n     assert!(!(p < q));"}]}