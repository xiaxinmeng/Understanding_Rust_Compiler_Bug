{"sha": "5d2a1daf8380585697b026ce2583c74454e9eef0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMmExZGFmODM4MDU4NTY5N2IwMjZjZTI1ODNjNzQ0NTRlOWVlZjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T10:10:33Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T10:10:33Z"}, "message": "Remove unused inline asm whitelist", "tree": {"sha": "945867afa3bbe061439f1fb221fdec2b164b6830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/945867afa3bbe061439f1fb221fdec2b164b6830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d2a1daf8380585697b026ce2583c74454e9eef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2a1daf8380585697b026ce2583c74454e9eef0", "html_url": "https://github.com/rust-lang/rust/commit/5d2a1daf8380585697b026ce2583c74454e9eef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d2a1daf8380585697b026ce2583c74454e9eef0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576aa7644570efef98b8453429cf1cd1dcf58fe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/576aa7644570efef98b8453429cf1cd1dcf58fe2", "html_url": "https://github.com/rust-lang/rust/commit/576aa7644570efef98b8453429cf1cd1dcf58fe2"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "4f369723dc43afdda5c3c997538485e8eb3809ac", "filename": "src/base.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d2a1daf8380585697b026ce2583c74454e9eef0/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2a1daf8380585697b026ce2583c74454e9eef0/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=5d2a1daf8380585697b026ce2583c74454e9eef0", "patch": "@@ -618,9 +618,6 @@ fn trans_stmt<'tcx>(\n \n                     crate::trap::trap_unimplemented(fx, \"_xgetbv arch intrinsic is not supported\");\n                 }\n-                _ if fx.tcx.symbol_name(fx.instance).name.as_str() == \"__rust_probestack\" => {\n-                    crate::trap::trap_unimplemented(fx, \"__rust_probestack is not supported\");\n-                }\n                 _ => unimpl!(\"Inline assembly is not supported\"),\n             }\n         }"}]}