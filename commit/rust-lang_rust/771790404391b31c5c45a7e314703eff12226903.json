{"sha": "771790404391b31c5c45a7e314703eff12226903", "node_id": "C_kwDOAAsO6NoAKDc3MTc5MDQwNDM5MWIzMWM1YzQ1YTdlMzE0NzAzZWZmMTIyMjY5MDM", "commit": {"author": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-10-04T04:07:12Z"}, "committer": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-10-12T22:47:49Z"}, "message": "Fix to_string_in_format_args in parens\n\nFix suggestions like\n\n```\nprint!(\"error: something failed at {}\", (Location::caller().to_string()));\n```\n\nwhere the parenthesis enclose some portion of the value.", "tree": {"sha": "17985f8225eedf9021b478ac7a983f4e606a77c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17985f8225eedf9021b478ac7a983f4e606a77c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/771790404391b31c5c45a7e314703eff12226903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/771790404391b31c5c45a7e314703eff12226903", "html_url": "https://github.com/rust-lang/rust/commit/771790404391b31c5c45a7e314703eff12226903", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/771790404391b31c5c45a7e314703eff12226903/comments", "author": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "887ba0c5a489e28b55ff84244e1dc153861d16ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/887ba0c5a489e28b55ff84244e1dc153861d16ad", "html_url": "https://github.com/rust-lang/rust/commit/887ba0c5a489e28b55ff84244e1dc153861d16ad"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "0bb9f2902aaee767fa653220192b168dd4a50098", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/771790404391b31c5c45a7e314703eff12226903/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/771790404391b31c5c45a7e314703eff12226903/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=771790404391b31c5c45a7e314703eff12226903", "patch": "@@ -250,7 +250,7 @@ fn check_format_in_format_args(cx: &LateContext<'_>, call_site: Span, name: Symb\n fn check_to_string_in_format_args(cx: &LateContext<'_>, name: Symbol, value: &Expr<'_>) {\n     if_chain! {\n         if !value.span.from_expansion();\n-        if let ExprKind::MethodCall(_, receiver, [], _) = value.kind;\n+        if let ExprKind::MethodCall(_, receiver, [], to_string_span) = value.kind;\n         if let Some(method_def_id) = cx.typeck_results().type_dependent_def_id(value.hir_id);\n         if is_diag_trait_item(cx, method_def_id, sym::ToString);\n         let receiver_ty = cx.typeck_results().expr_ty(receiver);\n@@ -266,7 +266,7 @@ fn check_to_string_in_format_args(cx: &LateContext<'_>, name: Symbol, value: &Ex\n                 span_lint_and_sugg(\n                     cx,\n                     TO_STRING_IN_FORMAT_ARGS,\n-                    value.span.with_lo(receiver.span.hi()),\n+                    to_string_span.with_lo(receiver.span.hi()),\n                     &format!(\n                         \"`to_string` applied to a type that implements `Display` in `{name}!` args\"\n                     ),"}, {"sha": "825e122be5a5f3d97b628c38833d1340235a63d4", "filename": "tests/ui/format_args.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.fixed?ref=771790404391b31c5c45a7e314703eff12226903", "patch": "@@ -3,6 +3,7 @@\n #![allow(unused)]\n #![allow(\n     clippy::assertions_on_constants,\n+    clippy::double_parens,\n     clippy::eq_op,\n     clippy::print_literal,\n     clippy::uninlined_format_args\n@@ -114,6 +115,8 @@ fn main() {\n     println!(\"error: something failed at {}\", my_other_macro!());\n     // https://github.com/rust-lang/rust-clippy/issues/7903\n     println!(\"{foo}{foo:?}\", foo = \"foo\".to_string());\n+    print!(\"{}\", (Location::caller()));\n+    print!(\"{}\", ((Location::caller())));\n }\n \n fn issue8643(vendor_id: usize, product_id: usize, name: &str) {"}, {"sha": "a41e53389e52a7b9f84a37f914217c4baa07d6c5", "filename": "tests/ui/format_args.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.rs?ref=771790404391b31c5c45a7e314703eff12226903", "patch": "@@ -3,6 +3,7 @@\n #![allow(unused)]\n #![allow(\n     clippy::assertions_on_constants,\n+    clippy::double_parens,\n     clippy::eq_op,\n     clippy::print_literal,\n     clippy::uninlined_format_args\n@@ -114,6 +115,8 @@ fn main() {\n     println!(\"error: something failed at {}\", my_other_macro!());\n     // https://github.com/rust-lang/rust-clippy/issues/7903\n     println!(\"{foo}{foo:?}\", foo = \"foo\".to_string());\n+    print!(\"{}\", (Location::caller().to_string()));\n+    print!(\"{}\", ((Location::caller()).to_string()));\n }\n \n fn issue8643(vendor_id: usize, product_id: usize, name: &str) {"}, {"sha": "f1832b970198a42cac9fa311b2ae00810818723d", "filename": "tests/ui/format_args.stderr", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/771790404391b31c5c45a7e314703eff12226903/tests%2Fui%2Fformat_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.stderr?ref=771790404391b31c5c45a7e314703eff12226903", "patch": "@@ -1,142 +1,154 @@\n error: `to_string` applied to a type that implements `Display` in `format!` args\n-  --> $DIR/format_args.rs:76:72\n+  --> $DIR/format_args.rs:77:72\n    |\n LL |     let _ = format!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                        ^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::to-string-in-format-args` implied by `-D warnings`\n \n error: `to_string` applied to a type that implements `Display` in `write!` args\n-  --> $DIR/format_args.rs:80:27\n+  --> $DIR/format_args.rs:81:27\n    |\n LL |         Location::caller().to_string()\n    |                           ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `writeln!` args\n-  --> $DIR/format_args.rs:85:27\n+  --> $DIR/format_args.rs:86:27\n    |\n LL |         Location::caller().to_string()\n    |                           ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `print!` args\n-  --> $DIR/format_args.rs:87:63\n+  --> $DIR/format_args.rs:88:63\n    |\n LL |     print!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                               ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:88:65\n+  --> $DIR/format_args.rs:89:65\n    |\n LL |     println!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                 ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `eprint!` args\n-  --> $DIR/format_args.rs:89:64\n+  --> $DIR/format_args.rs:90:64\n    |\n LL |     eprint!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `eprintln!` args\n-  --> $DIR/format_args.rs:90:66\n+  --> $DIR/format_args.rs:91:66\n    |\n LL |     eprintln!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                  ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `format_args!` args\n-  --> $DIR/format_args.rs:91:77\n+  --> $DIR/format_args.rs:92:77\n    |\n LL |     let _ = format_args!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                             ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert!` args\n-  --> $DIR/format_args.rs:92:70\n+  --> $DIR/format_args.rs:93:70\n    |\n LL |     assert!(true, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                      ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert_eq!` args\n-  --> $DIR/format_args.rs:93:73\n+  --> $DIR/format_args.rs:94:73\n    |\n LL |     assert_eq!(0, 0, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                         ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert_ne!` args\n-  --> $DIR/format_args.rs:94:73\n+  --> $DIR/format_args.rs:95:73\n    |\n LL |     assert_ne!(0, 0, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                         ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `panic!` args\n-  --> $DIR/format_args.rs:95:63\n+  --> $DIR/format_args.rs:96:63\n    |\n LL |     panic!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                               ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:96:20\n+  --> $DIR/format_args.rs:97:20\n    |\n LL |     println!(\"{}\", X(1).to_string());\n    |                    ^^^^^^^^^^^^^^^^ help: use this: `*X(1)`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:97:20\n+  --> $DIR/format_args.rs:98:20\n    |\n LL |     println!(\"{}\", Y(&X(1)).to_string());\n    |                    ^^^^^^^^^^^^^^^^^^^^ help: use this: `***Y(&X(1))`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:98:24\n+  --> $DIR/format_args.rs:99:24\n    |\n LL |     println!(\"{}\", Z(1).to_string());\n    |                        ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:99:20\n+  --> $DIR/format_args.rs:100:20\n    |\n LL |     println!(\"{}\", x.to_string());\n    |                    ^^^^^^^^^^^^^ help: use this: `**x`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:100:20\n+  --> $DIR/format_args.rs:101:20\n    |\n LL |     println!(\"{}\", x_ref.to_string());\n    |                    ^^^^^^^^^^^^^^^^^ help: use this: `***x_ref`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:102:39\n+  --> $DIR/format_args.rs:103:39\n    |\n LL |     println!(\"{foo}{bar}\", foo = \"foo\".to_string(), bar = \"bar\");\n    |                                       ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:103:52\n+  --> $DIR/format_args.rs:104:52\n    |\n LL |     println!(\"{foo}{bar}\", foo = \"foo\", bar = \"bar\".to_string());\n    |                                                    ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:104:39\n+  --> $DIR/format_args.rs:105:39\n    |\n LL |     println!(\"{foo}{bar}\", bar = \"bar\".to_string(), foo = \"foo\");\n    |                                       ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:105:52\n+  --> $DIR/format_args.rs:106:52\n    |\n LL |     println!(\"{foo}{bar}\", bar = \"bar\", foo = \"foo\".to_string());\n    |                                                    ^^^^^^^^^^^^ help: remove this\n \n+error: `to_string` applied to a type that implements `Display` in `print!` args\n+  --> $DIR/format_args.rs:118:37\n+   |\n+LL |     print!(\"{}\", (Location::caller().to_string()));\n+   |                                     ^^^^^^^^^^^^ help: remove this\n+\n+error: `to_string` applied to a type that implements `Display` in `print!` args\n+  --> $DIR/format_args.rs:119:39\n+   |\n+LL |     print!(\"{}\", ((Location::caller()).to_string()));\n+   |                                       ^^^^^^^^^^^^ help: remove this\n+\n error: `to_string` applied to a type that implements `Display` in `format!` args\n-  --> $DIR/format_args.rs:144:38\n+  --> $DIR/format_args.rs:147:38\n    |\n LL |         let x = format!(\"{} {}\", a, b.to_string());\n    |                                      ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:158:24\n+  --> $DIR/format_args.rs:161:24\n    |\n LL |         println!(\"{}\", original[..10].to_string());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use this: `&original[..10]`\n \n-error: aborting due to 23 previous errors\n+error: aborting due to 25 previous errors\n "}]}