{"sha": "2f120095b59320d8c0adc3ad8f9294560bdf5c07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMTIwMDk1YjU5MzIwZDhjMGFkYzNhZDhmOTI5NDU2MGJkZjVjMDc=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-09T13:50:09Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-09T13:50:40Z"}, "message": "Add a comment to `recover`.", "tree": {"sha": "6abff82ab3e3dfdba64883fbf38bbcd9d8377d13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6abff82ab3e3dfdba64883fbf38bbcd9d8377d13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f120095b59320d8c0adc3ad8f9294560bdf5c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f120095b59320d8c0adc3ad8f9294560bdf5c07", "html_url": "https://github.com/rust-lang/rust/commit/2f120095b59320d8c0adc3ad8f9294560bdf5c07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f120095b59320d8c0adc3ad8f9294560bdf5c07/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4450772ede7bc064d1727430acdb1b2dc851742", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4450772ede7bc064d1727430acdb1b2dc851742", "html_url": "https://github.com/rust-lang/rust/commit/f4450772ede7bc064d1727430acdb1b2dc851742"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "156f412e0902ec83aef1749f4063333701b9befb", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f120095b59320d8c0adc3ad8f9294560bdf5c07/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f120095b59320d8c0adc3ad8f9294560bdf5c07/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=2f120095b59320d8c0adc3ad8f9294560bdf5c07", "patch": "@@ -377,6 +377,12 @@ pub(crate) trait DepNodeParams<'tcx>: fmt::Debug + Sized {\n         format!(\"{:?}\", self)\n     }\n \n+    /// This method tries to recover the query key from the given `DepNode`,\n+    /// something which is needed when forcing `DepNode`s during red-green\n+    /// evaluation. The query system will only call this method if\n+    /// `CAN_RECONSTRUCT_QUERY_KEY` is `true`.\n+    /// It is always valid to return `None` here, in which case incremental\n+    /// compilation will treat the query as having changed instead of forcing it.\n     fn recover(tcx: TyCtxt<'tcx>, dep_node: &DepNode) -> Option<Self>;\n }\n "}]}