{"sha": "1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYjRhNTdiN2IyZmRhOGRiNmEyMjUyMDdjOWI5YzA5MGJhNTY1ZDE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T22:25:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T22:25:29Z"}, "message": "Re-classify some err / bug cases as unimpl. Ideally rustboot should never produce a backtrace.", "tree": {"sha": "d7219c8333973406ea5f2cb9d9fd848d189bede1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7219c8333973406ea5f2cb9d9fd848d189bede1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "html_url": "https://github.com/rust-lang/rust/commit/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f220ecae921f961f0c40395218de86cc2b33849", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f220ecae921f961f0c40395218de86cc2b33849", "html_url": "https://github.com/rust-lang/rust/commit/0f220ecae921f961f0c40395218de86cc2b33849"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "f828cc5fbb743ad05635d6856423e1d973e01787", "filename": "src/boot/fe/pexp.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Ffe%2Fpexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Ffe%2Fpexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fpexp.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -1011,7 +1011,7 @@ let expand_pexp_custom\n             [| spanner (Ast.STMT_init_str (dst_lval, r())) |]\n \n       | _ ->\n-          raise (err (\"unsupported syntax extension: \" ^ nstr) ps)\n+          raise (err (\"unknown syntax extension: \" ^ nstr) ps)\n ;;\n \n (* "}, {"sha": "cf75e5c5af3c7006d68fc323d68b2318a4b5d4bd", "filename": "src/boot/llvm/lltrans.ml", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fllvm%2Flltrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fllvm%2Flltrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Flltrans.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -397,7 +397,8 @@ let trans_crate\n     match ty with\n         Ast.TY_port _\n       | Ast.TY_chan _\n-      | Ast.TY_task -> bug () \"unimplemented ty in Lltrans.free_ty\"\n+      | Ast.TY_task ->\n+          Common.unimpl None \"ty %a in Lltrans.free_ty\" Ast.sprintf_ty ty\n       | _ -> trans_free llbuilder lltask ptr\n   in\n \n@@ -428,7 +429,8 @@ let trans_crate\n       | Ast.TY_iso _\n       | Ast.TY_fn _\n       | Ast.TY_obj _ ->\n-          bug () \"unimplemented ty in Lltrans.iter_ty_parts_full\"\n+          Common.unimpl None\n+            \"ty %a in Lltrans.iter_ty_parts_full\" Ast.sprintf_ty ty\n \n       | _ -> ()\n \n@@ -1006,8 +1008,8 @@ let trans_crate\n                         | Ast.TY_mach (TY_u32) | Ast.TY_mach (TY_i8)\n                         | Ast.TY_mach (TY_i16) | Ast.TY_mach (TY_i32) ->\n                             trans_log_int a\n-                        | _ -> Semant.bugi sem_cx head.id\n-                            \"unimplemented logging type\"\n+                        | _ -> Common.unimpl (Some head.id)\n+                            \"logging type\"\n                   end;\n                   trans_tail ()\n "}, {"sha": "d3fb81dec33085cad82c2292b89d6c441b93618f", "filename": "src/boot/me/dwarf.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Fdwarf.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Fdwarf.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fdwarf.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -2082,7 +2082,7 @@ let dwarf_visitor\n           | Ast.TY_mutable t -> mutable_type t\n           | Ast.TY_box t -> box_type t\n           | _ ->\n-              bug () \"unimplemented dwarf encoding for type %a\"\n+              unimpl None \"dwarf encoding for type %a\"\n                 Ast.sprintf_ty ty\n   in\n "}, {"sha": "4902c300640729454f7e78e11f56b764998498ca", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -2476,7 +2476,7 @@ let trans_visitor\n         end\n       else\n         begin\n-          bug () \"Unsupported form of seq iter: src != dst.\"\n+          unimpl None \"seq iter with src != dst.\"\n         end\n \n \n@@ -4390,7 +4390,7 @@ let trans_visitor\n       | Ast.TY_mach (TY_i8) | Ast.TY_mach (TY_i16)\n       | Ast.TY_mach (TY_i32) ->\n           trans_log_int a\n-      | _ -> bugi cx id \"unimplemented logging type\"\n+      | _ -> unimpl (Some id) \"logging type\"\n \n \n   and trans_stmt_full (stmt:Ast.stmt) : unit =\n@@ -5043,7 +5043,8 @@ let trans_visitor\n         Ast.MOD_ITEM_fn f -> trans_required_fn i.id f.Ast.fn_body.id\n       | Ast.MOD_ITEM_mod _ -> ()\n       | Ast.MOD_ITEM_type _ -> ()\n-      | _ -> bugi cx i.id \"unsupported type of require: %s\" (path_name())\n+      | _ -> unimpl (Some i.id)\n+          \"unsupported type of require: %s\" (path_name())\n   in\n \n   let visit_obj_drop_pre obj b ="}, {"sha": "45651ab0df64b242b8f099079065f9c914c65116", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -470,7 +470,7 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n             sprintf_ltype lty\n       | Some _, (LTYPE_poly _) ->\n           (* FIXME: auto-instantiate *)\n-          Common.err\n+          Common.unimpl\n             None\n             \"sorry, automatic polymorphic instantiation isn't supported yet; \\\n               please supply type parameters explicitly\""}, {"sha": "acdb93717b3b004d538c2e4dd6bdbbb9353c4b88", "filename": "src/boot/me/walk.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Fwalk.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1/src%2Fboot%2Fme%2Fwalk.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fwalk.ml?ref=1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "patch": "@@ -523,7 +523,7 @@ and walk_stmt\n       | Ast.STMT_note _\n       | Ast.STMT_alt_type _\n       | Ast.STMT_alt_port _ ->\n-          bug () \"unimplemented statement type in Walk.walk_stmt\"\n+          unimpl (Some s.id) \"statement type in Walk.walk_stmt\"\n   in\n     walk_bracketed\n       v.visit_stmt_pre"}]}