{"sha": "5c336e266fe09ae9ae6e634513d441cbcde63696", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMzM2ZTI2NmZlMDlhZTlhZTZlNjM0NTEzZDQ0MWNiY2RlNjM2OTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-09T17:20:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-09T17:20:39Z"}, "message": "Merge #5968\n\n5968: Lookup ADT and associated type names for chalk debugging / tweak chalk interner r=flodiebold a=nathanwhit\n\nThis PR improves the chalk program writing integration by looking up the names for ADTs and associated types, making the output much more readable.\r\n\r\nThere are also a few small changes to the interner, which gives some nice performance improvements. We clone `Ty`s and `ProgramClause`s relatively often in chalk, so wrapping them in `Arc`s is a perf win. This takes the time for performing type inference on the rust-analyzer codebase from 40s to 33s on my machine.\n\nCo-authored-by: Nathan Whitaker <nathan.whitaker01@gmail.com>", "tree": {"sha": "1572fa9047870f4fc092d74ec62231d7a8d6761d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1572fa9047870f4fc092d74ec62231d7a8d6761d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c336e266fe09ae9ae6e634513d441cbcde63696", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfWQ7nCRBK7hj4Ov3rIwAAdHIIACaixhOk5CxiMXeRYx0au2ll\nqO+1B3Yo9MeXYG3Sfj3OuCt+PuSE+yUcHV7fknmGmwD2Y+AAn96z6Z9uomqac02T\noPSzYokdKxgTMT5idrMDZKpLsxxObBVCVQUr5P9YUC7c43lrdeCyXGAU19/9ucIb\nAsXXwdDF5ei1YIFLP6fZHu7WupQPhAdr+8+nhvr8G5Ad6JsywF1JDINlHhF35TwL\nTgLde0qkJKcZdN/r107No7ejUouH0CeAT9r4jZSSYnGfI+QFoBW1mg+jCPX04VTi\nqvaSPazC+nzC0GBYFTcyksFa+fpMwAyQV5lnShKYQ2P3x8DoGl/WT5nqLZa5SSA=\n=Bcwj\n-----END PGP SIGNATURE-----\n", "payload": "tree 1572fa9047870f4fc092d74ec62231d7a8d6761d\nparent 60c8941097f3674ed4b583925603b5ec43833f0c\nparent bf0b194fed03d88b1217e921799638cb80bb9df8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1599672039 +0000\ncommitter GitHub <noreply@github.com> 1599672039 +0000\n\nMerge #5968\n\n5968: Lookup ADT and associated type names for chalk debugging / tweak chalk interner r=flodiebold a=nathanwhit\n\nThis PR improves the chalk program writing integration by looking up the names for ADTs and associated types, making the output much more readable.\r\n\r\nThere are also a few small changes to the interner, which gives some nice performance improvements. We clone `Ty`s and `ProgramClause`s relatively often in chalk, so wrapping them in `Arc`s is a perf win. This takes the time for performing type inference on the rust-analyzer codebase from 40s to 33s on my machine.\n\nCo-authored-by: Nathan Whitaker <nathan.whitaker01@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c336e266fe09ae9ae6e634513d441cbcde63696", "html_url": "https://github.com/rust-lang/rust/commit/5c336e266fe09ae9ae6e634513d441cbcde63696", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c336e266fe09ae9ae6e634513d441cbcde63696/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c8941097f3674ed4b583925603b5ec43833f0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c8941097f3674ed4b583925603b5ec43833f0c", "html_url": "https://github.com/rust-lang/rust/commit/60c8941097f3674ed4b583925603b5ec43833f0c"}, {"sha": "bf0b194fed03d88b1217e921799638cb80bb9df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0b194fed03d88b1217e921799638cb80bb9df8", "html_url": "https://github.com/rust-lang/rust/commit/bf0b194fed03d88b1217e921799638cb80bb9df8"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "01b5717a3ffef169a44a2f2f66ca2882c10583ee", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=5c336e266fe09ae9ae6e634513d441cbcde63696", "patch": "@@ -244,13 +244,17 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n         let id = from_chalk(self.db, trait_id);\n         self.db.trait_data(id).name.to_string()\n     }\n-    // FIXME: lookup names\n-    fn adt_name(&self, struct_id: chalk_ir::AdtId<Interner>) -> String {\n-        let datum = self.db.struct_datum(self.krate, struct_id);\n-        format!(\"{:?}\", datum.name(&Interner))\n+    fn adt_name(&self, adt_id: chalk_ir::AdtId<Interner>) -> String {\n+        let id = from_chalk(self.db, adt_id);\n+        match id {\n+            hir_def::AdtId::StructId(id) => self.db.struct_data(id).name.to_string(),\n+            hir_def::AdtId::EnumId(id) => self.db.enum_data(id).name.to_string(),\n+            hir_def::AdtId::UnionId(id) => self.db.union_data(id).name.to_string(),\n+        }\n     }\n     fn assoc_type_name(&self, assoc_ty_id: chalk_ir::AssocTypeId<Interner>) -> String {\n-        format!(\"Assoc_{}\", assoc_ty_id.0)\n+        let id = self.db.associated_ty_data(assoc_ty_id).name;\n+        self.db.type_alias_data(id).name.to_string()\n     }\n     fn opaque_type_name(&self, opaque_ty_id: chalk_ir::OpaqueTyId<Interner>) -> String {\n         format!(\"Opaque_{}\", opaque_ty_id.0)"}, {"sha": "eb35db3ffc14d06d262703741cdd939161eb8590", "filename": "crates/hir_ty/src/traits/chalk/interner.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs?ref=5c336e266fe09ae9ae6e634513d441cbcde63696", "patch": "@@ -26,15 +26,15 @@ pub type OpaqueTyId = chalk_ir::OpaqueTyId<Interner>;\n pub type OpaqueTyDatum = chalk_solve::rust_ir::OpaqueTyDatum<Interner>;\n \n impl chalk_ir::interner::Interner for Interner {\n-    type InternedType = Box<chalk_ir::TyData<Self>>; // FIXME use Arc?\n+    type InternedType = Arc<chalk_ir::TyData<Self>>;\n     type InternedLifetime = chalk_ir::LifetimeData<Self>;\n     type InternedConst = Arc<chalk_ir::ConstData<Self>>;\n     type InternedConcreteConst = ();\n     type InternedGenericArg = chalk_ir::GenericArgData<Self>;\n     type InternedGoal = Arc<GoalData<Self>>;\n     type InternedGoals = Vec<Goal<Self>>;\n     type InternedSubstitution = Vec<GenericArg<Self>>;\n-    type InternedProgramClause = chalk_ir::ProgramClauseData<Self>;\n+    type InternedProgramClause = Arc<chalk_ir::ProgramClauseData<Self>>;\n     type InternedProgramClauses = Arc<[chalk_ir::ProgramClause<Self>]>;\n     type InternedQuantifiedWhereClauses = Vec<chalk_ir::QuantifiedWhereClause<Self>>;\n     type InternedVariableKinds = Vec<chalk_ir::VariableKind<Self>>;\n@@ -197,11 +197,11 @@ impl chalk_ir::interner::Interner for Interner {\n         tls::with_current_program(|prog| Some(prog?.debug_quantified_where_clauses(clauses, fmt)))\n     }\n \n-    fn intern_ty(&self, ty: chalk_ir::TyData<Self>) -> Box<chalk_ir::TyData<Self>> {\n-        Box::new(ty)\n+    fn intern_ty(&self, ty: chalk_ir::TyData<Self>) -> Arc<chalk_ir::TyData<Self>> {\n+        Arc::new(ty)\n     }\n \n-    fn ty_data<'a>(&self, ty: &'a Box<chalk_ir::TyData<Self>>) -> &'a chalk_ir::TyData<Self> {\n+    fn ty_data<'a>(&self, ty: &'a Arc<chalk_ir::TyData<Self>>) -> &'a chalk_ir::TyData<Self> {\n         ty\n     }\n \n@@ -230,7 +230,7 @@ impl chalk_ir::interner::Interner for Interner {\n         constant\n     }\n \n-    fn const_eq(&self, _ty: &Box<chalk_ir::TyData<Self>>, _c1: &(), _c2: &()) -> bool {\n+    fn const_eq(&self, _ty: &Arc<chalk_ir::TyData<Self>>, _c1: &(), _c2: &()) -> bool {\n         true\n     }\n \n@@ -284,13 +284,13 @@ impl chalk_ir::interner::Interner for Interner {\n     fn intern_program_clause(\n         &self,\n         data: chalk_ir::ProgramClauseData<Self>,\n-    ) -> chalk_ir::ProgramClauseData<Self> {\n-        data\n+    ) -> Arc<chalk_ir::ProgramClauseData<Self>> {\n+        Arc::new(data)\n     }\n \n     fn program_clause_data<'a>(\n         &self,\n-        clause: &'a chalk_ir::ProgramClauseData<Self>,\n+        clause: &'a Arc<chalk_ir::ProgramClauseData<Self>>,\n     ) -> &'a chalk_ir::ProgramClauseData<Self> {\n         clause\n     }"}, {"sha": "d6bacba1d3d5fda0a352a8065ac1ea5dd358ab80", "filename": "crates/hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c336e266fe09ae9ae6e634513d441cbcde63696/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=5c336e266fe09ae9ae6e634513d441cbcde63696", "patch": "@@ -464,6 +464,18 @@ impl ToChalk for hir_def::ImplId {\n     }\n }\n \n+impl ToChalk for hir_def::AdtId {\n+    type Chalk = AdtId;\n+\n+    fn to_chalk(self, _db: &dyn HirDatabase) -> Self::Chalk {\n+        chalk_ir::AdtId(self.into())\n+    }\n+\n+    fn from_chalk(_db: &dyn HirDatabase, id: AdtId) -> Self {\n+        id.0\n+    }\n+}\n+\n impl ToChalk for CallableDefId {\n     type Chalk = FnDefId;\n "}]}