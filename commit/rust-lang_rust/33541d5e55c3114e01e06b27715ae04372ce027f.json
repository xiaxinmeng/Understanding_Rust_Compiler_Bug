{"sha": "33541d5e55c3114e01e06b27715ae04372ce027f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNTQxZDVlNTVjMzExNGUwMWUwNmIyNzcxNWFlMDQzNzJjZTAyN2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-27T12:45:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-27T12:45:37Z"}, "message": "clarify interaction of pin drop guarantee and panics", "tree": {"sha": "b68956e99cb39c11e959333edb6495dbe14d4641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b68956e99cb39c11e959333edb6495dbe14d4641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33541d5e55c3114e01e06b27715ae04372ce027f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33541d5e55c3114e01e06b27715ae04372ce027f", "html_url": "https://github.com/rust-lang/rust/commit/33541d5e55c3114e01e06b27715ae04372ce027f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33541d5e55c3114e01e06b27715ae04372ce027f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef71df106b957eb84c1f028240ba8e85b614d043", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef71df106b957eb84c1f028240ba8e85b614d043", "html_url": "https://github.com/rust-lang/rust/commit/ef71df106b957eb84c1f028240ba8e85b614d043"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6f5bf7ad9da52e1e40fae1383d77c813eb6f99fe", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33541d5e55c3114e01e06b27715ae04372ce027f/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33541d5e55c3114e01e06b27715ae04372ce027f/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=33541d5e55c3114e01e06b27715ae04372ce027f", "patch": "@@ -139,10 +139,12 @@\n //! otherwise invalidating the memory used to store the data is restricted, too.\n //! Concretely, for pinned data you have to maintain the invariant\n //! that *its memory will not get invalidated or repurposed from the moment it gets pinned until\n-//! when [`drop`] is called*. Memory can be invalidated by deallocation, but also by\n+//! when [`drop`] is called*.  Only once [`drop`] returns or panics, the memory may be reused.\n+//!\n+//! Memory can be \"invalidated\" by deallocation, but also by\n //! replacing a [`Some(v)`] by [`None`], or calling [`Vec::set_len`] to \"kill\" some elements\n //! off of a vector. It can be repurposed by using [`ptr::write`] to overwrite it without\n-//! calling the destructor first.\n+//! calling the destructor first. None of this is allowed for pinned data without calling [`drop`].\n //!\n //! This is exactly the kind of guarantee that the intrusive linked list from the previous\n //! section needs to function correctly."}]}