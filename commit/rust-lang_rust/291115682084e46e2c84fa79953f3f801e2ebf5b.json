{"sha": "291115682084e46e2c84fa79953f3f801e2ebf5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MTExNTY4MjA4NGU0NmUyYzg0ZmE3OTk1M2YzZjgwMWUyZWJmNWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T00:22:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T00:49:11Z"}, "message": "Pretty-print fn constraints more correctish", "tree": {"sha": "4917e5fdc59a08a29be80d042b83ba8e44ffdf6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4917e5fdc59a08a29be80d042b83ba8e44ffdf6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/291115682084e46e2c84fa79953f3f801e2ebf5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/291115682084e46e2c84fa79953f3f801e2ebf5b", "html_url": "https://github.com/rust-lang/rust/commit/291115682084e46e2c84fa79953f3f801e2ebf5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/291115682084e46e2c84fa79953f3f801e2ebf5b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637037f68cc988b201c0be2cbd38bbede685a588", "url": "https://api.github.com/repos/rust-lang/rust/commits/637037f68cc988b201c0be2cbd38bbede685a588", "html_url": "https://github.com/rust-lang/rust/commit/637037f68cc988b201c0be2cbd38bbede685a588"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "0442a6bb319f6553a8fedbfd1f5a2e25c4c8c07f", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=291115682084e46e2c84fa79953f3f801e2ebf5b", "patch": "@@ -1135,7 +1135,7 @@ fn print_fn_args_and_ret(s: &ps, decl: &ast::fn_decl,\n     }\n     commasep(s, inconsistent, decl.inputs, print_arg);\n     pclose(s);\n-    word(s.s, ast_constrs_str(constrs));\n+    word(s.s, ast_fn_constrs_str(decl, constrs));\n     maybe_print_comment(s, decl.output.span.lo);\n     if decl.output.node != ast::ty_nil {\n         space_if_not_bol(s);\n@@ -1290,7 +1290,7 @@ fn print_ty_fn(s: &ps, proto: &ast::proto, id: &option::t[str],\n         }\n         end(s);\n     }\n-    word(s.s, ast_constrs_str(constrs));\n+    word(s.s, ast_ty_fn_constrs_str(constrs));\n     end(s);\n }\n \n@@ -1498,18 +1498,40 @@ fn constr_arg_to_str[T](f: &fn(&T) -> str , c: &ast::constr_arg_general_[T])\n // (argh)\n fn uint_to_str(i: &uint) -> str { ret uint::str(i); }\n \n-fn ast_constr_to_str(c: &@ast::constr) -> str {\n+fn ast_ty_fn_constr_to_str(c: &@ast::constr) -> str {\n     ret path_to_str(c.node.path) +\n             constr_args_to_str(uint_to_str, c.node.args);\n }\n \n // FIXME: fix repeated code\n-fn ast_constrs_str(constrs: &(@ast::constr)[]) -> str {\n+fn ast_ty_fn_constrs_str(constrs: &(@ast::constr)[]) -> str {\n     let s = \"\";\n     let colon = true;\n     for c: @ast::constr  in constrs {\n         if colon { s += \" : \"; colon = false; } else { s += \", \"; }\n-        s += ast_constr_to_str(c);\n+        s += ast_ty_fn_constr_to_str(c);\n+    }\n+    ret s;\n+}\n+\n+fn fn_arg_idx_to_str(decl: &ast::fn_decl, idx: &uint) -> str {\n+    decl.inputs.(idx).ident\n+}\n+\n+fn ast_fn_constr_to_str(decl: &ast::fn_decl, c: &@ast::constr) -> str {\n+    let arg_to_str = bind fn_arg_idx_to_str(decl, _);\n+    ret path_to_str(c.node.path) +\n+            constr_args_to_str(arg_to_str, c.node.args);\n+}\n+\n+// FIXME: fix repeated code\n+fn ast_fn_constrs_str(decl: &ast::fn_decl,\n+                      constrs: &(@ast::constr)[]) -> str {\n+    let s = \"\";\n+    let colon = true;\n+    for c: @ast::constr  in constrs {\n+        if colon { s += \" : \"; colon = false; } else { s += \", \"; }\n+        s += ast_fn_constr_to_str(decl, c);\n     }\n     ret s;\n }"}, {"sha": "ca2432106479b70df06c943cad51714a5e62233c", "filename": "src/test/run-fail/fn-constraint-claim.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs?ref=291115682084e46e2c84fa79953f3f801e2ebf5b", "patch": "@@ -1,4 +1,3 @@\n-// xfail-pretty\n // error-pattern:quux\n use std;\n import std::str::*;"}, {"sha": "f2eda37e0d00a3243e1924c710c1537723b30968", "filename": "src/test/run-pass/typestate-transitive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Ftest%2Frun-pass%2Ftypestate-transitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291115682084e46e2c84fa79953f3f801e2ebf5b/src%2Ftest%2Frun-pass%2Ftypestate-transitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypestate-transitive.rs?ref=291115682084e46e2c84fa79953f3f801e2ebf5b", "patch": "@@ -1,5 +1,3 @@\n-// xfail-pretty\n-\n pred p(i: int) -> bool { true }\n \n fn f(i: int) : p(i) -> int { i }"}]}