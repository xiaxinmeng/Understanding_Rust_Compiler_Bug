{"sha": "8dfc47a4c9728ae7edcfb6a51515af00db994641", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZmM0N2E0Yzk3MjhhZTdlZGNmYjZhNTE1MTVhZjAwZGI5OTQ2NDE=", "commit": {"author": {"name": "Matti Niemenmaa", "email": "matti.niemenmaa+git@iki.fi", "date": "2017-12-20T12:54:50Z"}, "committer": {"name": "Matti Niemenmaa", "email": "matti.niemenmaa+git@iki.fi", "date": "2017-12-20T13:37:17Z"}, "message": "MIR: terminate unreachable blocks in construct_const\n\nFixes #46843.\n\n#45821 added unreachable blocks in matches, which were terminated in\nconstruct_fn but not in construct_const, causing a panic due to \"no\nterminator on block\" when constants involved matching on enums.\n\nThe \"unimplemented expression type\" error may go away in the future, the\nkey is that we see the E0015 about using a non-const function and then\ndon't ICE.", "tree": {"sha": "7a9143e43fce7bc93e5788a74f779ea504494106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a9143e43fce7bc93e5788a74f779ea504494106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dfc47a4c9728ae7edcfb6a51515af00db994641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfc47a4c9728ae7edcfb6a51515af00db994641", "html_url": "https://github.com/rust-lang/rust/commit/8dfc47a4c9728ae7edcfb6a51515af00db994641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dfc47a4c9728ae7edcfb6a51515af00db994641/comments", "author": {"login": "Deewiant", "id": 445326, "node_id": "MDQ6VXNlcjQ0NTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/445326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deewiant", "html_url": "https://github.com/Deewiant", "followers_url": "https://api.github.com/users/Deewiant/followers", "following_url": "https://api.github.com/users/Deewiant/following{/other_user}", "gists_url": "https://api.github.com/users/Deewiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deewiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deewiant/subscriptions", "organizations_url": "https://api.github.com/users/Deewiant/orgs", "repos_url": "https://api.github.com/users/Deewiant/repos", "events_url": "https://api.github.com/users/Deewiant/events{/privacy}", "received_events_url": "https://api.github.com/users/Deewiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Deewiant", "id": 445326, "node_id": "MDQ6VXNlcjQ0NTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/445326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deewiant", "html_url": "https://github.com/Deewiant", "followers_url": "https://api.github.com/users/Deewiant/followers", "following_url": "https://api.github.com/users/Deewiant/following{/other_user}", "gists_url": "https://api.github.com/users/Deewiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deewiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deewiant/subscriptions", "organizations_url": "https://api.github.com/users/Deewiant/orgs", "repos_url": "https://api.github.com/users/Deewiant/repos", "events_url": "https://api.github.com/users/Deewiant/events{/privacy}", "received_events_url": "https://api.github.com/users/Deewiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16212b93677eae6951974676b174247e6ad0ba48", "url": "https://api.github.com/repos/rust-lang/rust/commits/16212b93677eae6951974676b174247e6ad0ba48", "html_url": "https://github.com/rust-lang/rust/commit/16212b93677eae6951974676b174247e6ad0ba48"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "51ebb78c74ef8c80eff7961b12f0fefa6c705ce3", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dfc47a4c9728ae7edcfb6a51515af00db994641/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfc47a4c9728ae7edcfb6a51515af00db994641/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=8dfc47a4c9728ae7edcfb6a51515af00db994641", "patch": "@@ -472,6 +472,13 @@ fn construct_const<'a, 'gcx, 'tcx>(hir: Cx<'a, 'gcx, 'tcx>,\n     // Constants can't `return` so a return block should not be created.\n     assert_eq!(builder.cached_return_block, None);\n \n+    // Constants may be match expressions in which case an unreachable block may\n+    // be created, so terminate it properly.\n+    if let Some(unreachable_block) = builder.cached_unreachable_block {\n+        builder.cfg.terminate(unreachable_block, source_info,\n+                              TerminatorKind::Unreachable);\n+    }\n+\n     builder.finish(vec![], None)\n }\n "}, {"sha": "d88b4e568b0344bb2f844e425c3c3782a352bb05", "filename": "src/test/compile-fail/issue-46843.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8dfc47a4c9728ae7edcfb6a51515af00db994641/src%2Ftest%2Fcompile-fail%2Fissue-46843.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfc47a4c9728ae7edcfb6a51515af00db994641/src%2Ftest%2Fcompile-fail%2Fissue-46843.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-46843.rs?ref=8dfc47a4c9728ae7edcfb6a51515af00db994641", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Thing { This, That }\n+\n+fn non_const() -> Thing {\n+    Thing::This\n+}\n+\n+pub const Q: i32 = match non_const() { //~ ERROR E0015\n+    Thing::This => 1, //~ ERROR unimplemented expression type\n+    Thing::That => 0\n+};\n+\n+fn main() {}"}]}