{"sha": "61bad301f136fb6f4cb543014ed02034007e4bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYmFkMzAxZjEzNmZiNmY0Y2I1NDMwMTRlZDAyMDM0MDA3ZTRiZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-03T08:04:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-03T08:04:33Z"}, "message": "Auto merge of #44920 - vi:rustdoc_implementors_src_link, r=GuillaumeGomez\n\n rustdoc: Render [src] links for trait implementors\n\nShould close #43893.\n\n<s>No tests [yet].</s>\n\nr? @QuietMisdreavus", "tree": {"sha": "26b47f24b47c827d58783e115116c752d43cc181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26b47f24b47c827d58783e115116c752d43cc181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61bad301f136fb6f4cb543014ed02034007e4bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61bad301f136fb6f4cb543014ed02034007e4bd2", "html_url": "https://github.com/rust-lang/rust/commit/61bad301f136fb6f4cb543014ed02034007e4bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61bad301f136fb6f4cb543014ed02034007e4bd2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67ed4891db42841c7b7c00f5dce6effb7209a007", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ed4891db42841c7b7c00f5dce6effb7209a007", "html_url": "https://github.com/rust-lang/rust/commit/67ed4891db42841c7b7c00f5dce6effb7209a007"}, {"sha": "acef039de84d6a98a981a1be6c23f695173d98f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/acef039de84d6a98a981a1be6c23f695173d98f3", "html_url": "https://github.com/rust-lang/rust/commit/acef039de84d6a98a981a1be6c23f695173d98f3"}], "stats": {"total": 76, "additions": 61, "deletions": 15}, "files": [{"sha": "a3f446885f96e7270668ef5497bb17b6a4c96594", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=61bad301f136fb6f4cb543014ed02034007e4bd2", "patch": "@@ -2253,6 +2253,18 @@ fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     document(w, cx, it)\n }\n \n+fn implementor2item<'a>(cache: &'a Cache, imp : &Implementor) -> Option<&'a clean::Item> {\n+    if let Some(t_did) = imp.impl_.for_.def_id() {\n+        if let Some(impl_item) = cache.impls.get(&t_did).and_then(|i| i.iter()\n+            .find(|i| i.impl_item.def_id == imp.def_id))\n+        {\n+            let i = &impl_item.impl_item;\n+            return Some(i);\n+        }\n+    }\n+    None\n+}\n+\n fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n               t: &clean::Trait) -> fmt::Result {\n     let mut bounds = String::new();\n@@ -2463,27 +2475,30 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n             \")?;\n \n             for implementor in foreign {\n-                // need to get from a clean::Impl to a clean::Item so i can use render_impl\n-                if let Some(t_did) = implementor.impl_.for_.def_id() {\n-                    if let Some(impl_item) = cache.impls.get(&t_did).and_then(|i| i.iter()\n-                        .find(|i| i.impl_item.def_id == implementor.def_id))\n-                    {\n-                        let i = &impl_item.impl_item;\n-                        let impl_ = Impl { impl_item: i.clone() };\n-                        let assoc_link = AssocItemLink::GotoSource(\n-                            i.def_id, &implementor.impl_.provided_trait_methods\n-                        );\n-                        render_impl(w, cx, &impl_, assoc_link,\n-                                    RenderMode::Normal, i.stable_since(), false)?;\n-                    }\n+                if let Some(i) = implementor2item(&cache, implementor) {\n+                    let impl_ = Impl { impl_item: i.clone() };\n+                    let assoc_link = AssocItemLink::GotoSource(\n+                        i.def_id, &implementor.impl_.provided_trait_methods\n+                    );\n+                    render_impl(w, cx, &impl_, assoc_link,\n+                                RenderMode::Normal, i.stable_since(), false)?;\n                 }\n             }\n         }\n \n         write!(w, \"{}\", impl_header)?;\n \n         for implementor in local {\n-            write!(w, \"<li><code>\")?;\n+            write!(w, \"<li>\")?;\n+            if let Some(item) = implementor2item(&cache, implementor) {\n+                if let Some(l) = (Item { cx, item }).src_href() {\n+                    write!(w, \"<div class='out-of-band'>\")?;\n+                    write!(w, \"<a class='srclink' href='{}' title='{}'>[src]</a>\",\n+                                l, \"goto source code\")?;\n+                    write!(w, \"</div>\")?;\n+                }\n+            }\n+            write!(w, \"<code>\")?;\n             // If there's already another implementor that has the same abbridged name, use the\n             // full path, for example in `std::iter::ExactSizeIterator`\n             let use_absolute = match implementor.impl_.for_ {"}, {"sha": "27574e67bc87bef27ac9641103f56d4308cf82f2", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=61bad301f136fb6f4cb543014ed02034007e4bd2", "patch": "@@ -111,7 +111,10 @@ h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant {\n h3.impl, h3.method, h3.type {\n \tmargin-top: 15px;\n }\n-h1, h2, h3, h4, .sidebar, a.source, .search-input, .content table :not(code)>a, .collapse-toggle {\n+\n+h1, h2, h3, h4,\n+.sidebar, a.source, .search-input, .content table :not(code)>a,\n+.collapse-toggle, ul.item-list > li > .out-of-band {\n \tfont-family: \"Fira Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n }\n \n@@ -310,6 +313,10 @@ h4.method > .out-of-band {\n \tfont-size: 19px;\n }\n \n+ul.item-list > li > .out-of-band {\n+\tfont-size: 19px;\n+}\n+\n h4 > code, h3 > code, .invisible > code {\n \tposition: inherit;\n }"}, {"sha": "96bd9d7dc3cc539644947f187662535db5937c07", "filename": "src/test/rustdoc/issue-43893.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Ftest%2Frustdoc%2Fissue-43893.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61bad301f136fb6f4cb543014ed02034007e4bd2/src%2Ftest%2Frustdoc%2Fissue-43893.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-43893.rs?ref=61bad301f136fb6f4cb543014ed02034007e4bd2", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+pub trait SomeTrait {}\n+pub struct SomeStruct;\n+\n+// @has foo/trait.SomeTrait.html '//a/@href' '../src/foo/issue-43893.rs.html#19'\n+impl SomeTrait for usize {}\n+\n+// @has foo/trait.SomeTrait.html '//a/@href' '../src/foo/issue-43893.rs.html#22-24'\n+impl SomeTrait for SomeStruct {\n+    // deliberately multi-line impl\n+}"}]}