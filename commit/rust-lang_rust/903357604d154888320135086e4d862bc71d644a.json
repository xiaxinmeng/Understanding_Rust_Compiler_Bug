{"sha": "903357604d154888320135086e4d862bc71d644a", "node_id": "C_kwDOAAsO6NoAKDkwMzM1NzYwNGQxNTQ4ODgzMjAxMzUwODZlNGQ4NjJiYzcxZDY0NGE", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-06-22T12:48:49Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-06-22T12:48:49Z"}, "message": "Work around llvm 12's memory ordering restrictions.\n\nOlder llvm has the pre-C++17 restriction on success and failure memory\nordering, requiring the former to be at least as strong as the latter.\nSo, for llvm 12, this upgrades the success ordering to a stronger one if\nnecessary.", "tree": {"sha": "ce48061f5c69d7475e9a0b9d58b0db4846d7588d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce48061f5c69d7475e9a0b9d58b0db4846d7588d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/903357604d154888320135086e4d862bc71d644a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/903357604d154888320135086e4d862bc71d644a", "html_url": "https://github.com/rust-lang/rust/commit/903357604d154888320135086e4d862bc71d644a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/903357604d154888320135086e4d862bc71d644a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392d2728683f140f6125732240e462c43c5caff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/392d2728683f140f6125732240e462c43c5caff4", "html_url": "https://github.com/rust-lang/rust/commit/392d2728683f140f6125732240e462c43c5caff4"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "8c1e865762ccd30c6501d01d430de0b65a4e20a9", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/903357604d154888320135086e4d862bc71d644a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/903357604d154888320135086e4d862bc71d644a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=903357604d154888320135086e4d862bc71d644a", "patch": "@@ -1064,11 +1064,25 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         dst: &'ll Value,\n         cmp: &'ll Value,\n         src: &'ll Value,\n-        order: rustc_codegen_ssa::common::AtomicOrdering,\n+        mut order: rustc_codegen_ssa::common::AtomicOrdering,\n         failure_order: rustc_codegen_ssa::common::AtomicOrdering,\n         weak: bool,\n     ) -> &'ll Value {\n         let weak = if weak { llvm::True } else { llvm::False };\n+        if llvm_util::get_version() < (13, 0, 0) {\n+            use rustc_codegen_ssa::common::AtomicOrdering::*;\n+            // Older llvm has the pre-C++17 restriction on\n+            // success and failure memory ordering,\n+            // requiring the former to be at least as strong as the latter.\n+            // So, for llvm 12, we upgrade the success ordering to a stronger\n+            // one if necessary.\n+            match (order, failure_order) {\n+                (Relaxed, Acquire) => order = Acquire,\n+                (Release, Acquire) => order = AcquireRelease,\n+                (_, SequentiallyConsistent) => order = SequentiallyConsistent,\n+                _ => {}\n+            }\n+        }\n         unsafe {\n             llvm::LLVMRustBuildAtomicCmpXchg(\n                 self.llbuilder,"}]}