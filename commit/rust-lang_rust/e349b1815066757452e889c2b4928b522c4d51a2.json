{"sha": "e349b1815066757452e889c2b4928b522c4d51a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDliMTgxNTA2Njc1NzQ1MmU4ODljMmI0OTI4YjUyMmM0ZDUxYTI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-13T09:09:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-13T09:09:43Z"}, "message": "Rollup merge of #45914 - michaelwoerister:fix-test-header-parsing, r=alexcrichton\n\nFix test case header parsing code in presence of multiple revisions.\n\nThe previous code would parse the TestProps, and then parse them again with a revision set, adding some elements (like aux_builds) a second time to the existing TestProps.", "tree": {"sha": "6d8b7dd513167cf8bd2b5aec88b1fd814a6e3ee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d8b7dd513167cf8bd2b5aec88b1fd814a6e3ee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e349b1815066757452e889c2b4928b522c4d51a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e349b1815066757452e889c2b4928b522c4d51a2", "html_url": "https://github.com/rust-lang/rust/commit/e349b1815066757452e889c2b4928b522c4d51a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e349b1815066757452e889c2b4928b522c4d51a2/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331862ef1169734ed33469b662c48b050c7d65d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/331862ef1169734ed33469b662c48b050c7d65d6", "html_url": "https://github.com/rust-lang/rust/commit/331862ef1169734ed33469b662c48b050c7d65d6"}, {"sha": "6a9fa50f4abd60748ee17aeba8bc539a6eeefe41", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9fa50f4abd60748ee17aeba8bc539a6eeefe41", "html_url": "https://github.com/rust-lang/rust/commit/6a9fa50f4abd60748ee17aeba8bc539a6eeefe41"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "e03d9f89e5d8c61ca8713bd44b71126b2b65a249", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e349b1815066757452e889c2b4928b522c4d51a2/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e349b1815066757452e889c2b4928b522c4d51a2/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=e349b1815066757452e889c2b4928b522c4d51a2", "patch": "@@ -259,20 +259,20 @@ impl TestProps {\n         props\n     }\n \n-    pub fn from_file(testfile: &Path, config: &Config) -> Self {\n+    pub fn from_file(testfile: &Path, cfg: Option<&str>, config: &Config) -> Self {\n         let mut props = TestProps::new();\n-        props.load_from(testfile, None, config);\n+        props.load_from(testfile, cfg, config);\n         props\n     }\n \n     /// Load properties from `testfile` into `props`. If a property is\n     /// tied to a particular revision `foo` (indicated by writing\n     /// `//[foo]`), then the property is ignored unless `cfg` is\n     /// `Some(\"foo\")`.\n-    pub fn load_from(&mut self,\n-                     testfile: &Path,\n-                     cfg: Option<&str>,\n-                     config: &Config) {\n+    fn load_from(&mut self,\n+                 testfile: &Path,\n+                 cfg: Option<&str>,\n+                 config: &Config) {\n         iter_header(testfile,\n                     cfg,\n                     &mut |ln| {"}, {"sha": "2ff3eb7678f1a2970400de4b78a618b272f46e2d", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e349b1815066757452e889c2b4928b522c4d51a2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e349b1815066757452e889c2b4928b522c4d51a2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e349b1815066757452e889c2b4928b522c4d51a2", "patch": "@@ -69,7 +69,7 @@ pub fn run(config: Config, testpaths: &TestPaths) {\n         print!(\"\\n\\n\");\n     }\n     debug!(\"running {:?}\", testpaths.file.display());\n-    let base_props = TestProps::from_file(&testpaths.file, &config);\n+    let base_props = TestProps::from_file(&testpaths.file, None, &config);\n \n     let base_cx = TestCx { config: &config,\n                            props: &base_props,\n@@ -81,8 +81,9 @@ pub fn run(config: Config, testpaths: &TestPaths) {\n         base_cx.run_revision()\n     } else {\n         for revision in &base_props.revisions {\n-            let mut revision_props = base_props.clone();\n-            revision_props.load_from(&testpaths.file, Some(revision), &config);\n+            let revision_props = TestProps::from_file(&testpaths.file,\n+                                                      Some(revision),\n+                                                      &config);\n             let rev_cx = TestCx {\n                 config: &config,\n                 props: &revision_props,\n@@ -2614,4 +2615,4 @@ fn read2_abbreviated(mut child: Child) -> io::Result<Output> {\n         stdout: stdout.into_bytes(),\n         stderr: stderr.into_bytes(),\n     })\n-}\n\\ No newline at end of file\n+}"}]}