{"sha": "ed50cb133dd338d0e4a5ead4c0903b59d5a42dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNTBjYjEzM2RkMzM4ZDBlNGE1ZWFkNGMwOTAzYjU5ZDVhNDJkYWM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-24T13:16:21Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-24T13:16:21Z"}, "message": "dogfood", "tree": {"sha": "f0cf58fc6f3731a05faddfd17a24485d182c1540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0cf58fc6f3731a05faddfd17a24485d182c1540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYDgmlAAoJEFbW7qD8Z6xGPOUP/0m/GFba5wSbh//bqtuHgvWj\nd+/vqhOAyCtJgVonQ6sc7T5Zr2noeFkn/aOBvKS5dkt37Mg/GgOLDUJNtT9S1/eX\nIy9OHdw1O+7bHNer/Ih5ZABM6tPPAd/6iw1eWOFoy5hTBsHANQU9AszTJEUYCeah\nNIXPDEkCbf2/LOpkGa8AIJDO2kTcUUt5LuvEmTCKSPOPn0qmrdctl+/ALteLKWKw\n++o+n1c7cP0VxJPAS9n+C6SptbX2NCOnVmAgsBSDrjnDf7Otz0ZyNkGocZiWbK/M\nyubDCmcFhvZ2cLHC+c+L0Tv/BUG6y9lpr4qHyjse4vS11fTLeJUSHUPEb8mQhEC7\np3Nlk/2YCe28IE5Vf+S61hx0Pdn5HOIcSQh+AmMJi/lwDPAxFkoYef6UTD9TayGQ\n1uaokHHkhlLc/mDATjF50OO8ADMzBAU+fVI9pVuGc4XzofAzc/7SoW84Uw87fT4h\nDJzT8zF3eIHp6QYgobhydLM/Rjtr8FfdRLRa1Ko/0JktwVqQJ3l3FsBYPeDo0Guc\nP4y8x2Tx5ENG14wMnDnqVNh8f/DMUluwtxm2C6pHE2Q+HdHF6cm18konJZf0rhVk\nxqhGzM0ipgmMDClEPREiJt9run+LHCk7Me697oY0vGU+di3DGXDd7KwRsbe5sd4+\nhg5RwrjHe9FB3zQSXHWp\n=Fgz0\n-----END PGP SIGNATURE-----", "payload": "tree f0cf58fc6f3731a05faddfd17a24485d182c1540\nparent 6a6dfa59daa8be46df37a594ad0ffeeeccee97cb\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477314981 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477314981 +0200\n\ndogfood"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac", "html_url": "https://github.com/rust-lang/rust/commit/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a6dfa59daa8be46df37a594ad0ffeeeccee97cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a6dfa59daa8be46df37a594ad0ffeeeccee97cb", "html_url": "https://github.com/rust-lang/rust/commit/6a6dfa59daa8be46df37a594ad0ffeeeccee97cb"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "0ad216ba04dccdaf3ad5fc5f0fdc605edbbb6a77", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed50cb133dd338d0e4a5ead4c0903b59d5a42dac/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=ed50cb133dd338d0e4a5ead4c0903b59d5a42dac", "patch": "@@ -1,3 +1,5 @@\n+#![allow(print_stdout, use_debug)]\n+\n //! checks for attributes\n \n use rustc::lint::*;\n@@ -29,7 +31,6 @@ impl LintPass for Pass {\n     }\n }\n \n-#[allow(print_stdout, use_debug)]\n impl LateLintPass for Pass {\n     fn check_item(&mut self, cx: &LateContext, item: &hir::Item) {\n         if !has_attr(&item.attrs) {\n@@ -416,14 +417,14 @@ fn print_pat(cx: &LateContext, pat: &hir::Pat, indent: usize) {\n                 print_pat(cx, &field.node.pat, indent + 1);\n             }\n         },\n-        hir::PatKind::TupleStruct(ref path, ref pats, opt_dots_position) => {\n+        hir::PatKind::TupleStruct(ref path, ref fields, opt_dots_position) => {\n             println!(\"{}TupleStruct\", ind);\n             println!(\"{}path: {}\", ind, path);\n             if let Some(dot_position) = opt_dots_position {\n                 println!(\"{}dot position: {}\", ind, dot_position);\n             }\n-            for field in pats {\n-                print_pat(cx, &field, indent + 1);\n+            for field in fields {\n+                print_pat(cx, field, indent + 1);\n             }\n         },\n         hir::PatKind::Path(ref sel, ref path) => {\n@@ -437,7 +438,7 @@ fn print_pat(cx: &LateContext, pat: &hir::Pat, indent: usize) {\n                 println!(\"{}dot position: {}\", ind, dot_position);\n             }\n             for field in pats {\n-                print_pat(cx, &field, indent + 1);\n+                print_pat(cx, field, indent + 1);\n             }\n         },\n         hir::PatKind::Box(ref inner) => {\n@@ -458,18 +459,18 @@ fn print_pat(cx: &LateContext, pat: &hir::Pat, indent: usize) {\n             print_expr(cx, l, indent + 1);\n             print_expr(cx, r, indent + 1);\n         },\n-        hir::PatKind::Slice(ref start, ref range, ref end) => {\n+        hir::PatKind::Slice(ref first_pats, ref range, ref last_pats) => {\n             println!(\"{}Slice [a, b, ..i, y, z]\", ind);\n             println!(\"[a, b]:\");\n-            for pat in start {\n+            for pat in first_pats {\n                 print_pat(cx, pat, indent + 1);\n             }\n             println!(\"i:\");\n             if let Some(ref pat) = *range {\n                 print_pat(cx, pat, indent + 1);\n             }\n             println!(\"[y, z]:\");\n-            for pat in end {\n+            for pat in last_pats {\n                 print_pat(cx, pat, indent + 1);\n             }\n         },"}]}