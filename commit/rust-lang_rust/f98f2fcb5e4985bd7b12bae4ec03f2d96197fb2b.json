{"sha": "f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "node_id": "C_kwDOAAsO6NoAKGY5OGYyZmNiNWU0OTg1YmQ3YjEyYmFlNGVjMDNmMmQ5NjE5N2ZiMmI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-05T17:06:34Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-05T17:09:41Z"}, "message": "fix rebase", "tree": {"sha": "875604b1a550ef354e0b24b3e0221423ac27cd59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/875604b1a550ef354e0b24b3e0221423ac27cd59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "html_url": "https://github.com/rust-lang/rust/commit/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b182259d391a033a3a7017a7be7d5494405fc8e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b182259d391a033a3a7017a7be7d5494405fc8e9", "html_url": "https://github.com/rust-lang/rust/commit/b182259d391a033a3a7017a7be7d5494405fc8e9"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "cf070eb962f09bf46d0def52c36913a839a8116c", "filename": "compiler/rustc_hir_typeck/src/demand.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs?ref=f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "patch": "@@ -226,12 +226,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let [hir::PathSegment { ident, args: None, .. }] = p.segments else { return false; };\n         let hir::def::Res::Local(hir_id) = p.res else { return false; };\n         let Some(hir::Node::Pat(pat)) = map.find(hir_id) else { return false; };\n-        let parent = map.get_parent_node(pat.hir_id);\n         let Some(hir::Node::Local(hir::Local {\n             ty: None,\n             init: Some(init),\n             ..\n-        })) = map.find(parent) else { return false; };\n+        })) = map.find_parent(pat.hir_id) else { return false; };\n         let Some(ty) = self.node_ty_opt(init.hir_id) else { return false; };\n         if ty.is_closure() || init.span.overlaps(expr.span) || pat.span.from_expansion() {\n             return false;\n@@ -285,12 +284,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // In every expression where the binding is referenced, we will look at that\n             // expression's type and see if it is where the incorrect found type was fully\n             // \"materialized\" and point at it. We will also try to provide a suggestion there.\n-            let parent = map.get_parent_node(binding.hir_id);\n-            if let Some(hir::Node::Expr(expr))\n-            | Some(hir::Node::Stmt(hir::Stmt {\n+            if let Some(hir::Node::Expr(expr)\n+            | hir::Node::Stmt(hir::Stmt {\n                 kind: hir::StmtKind::Expr(expr) | hir::StmtKind::Semi(expr),\n                 ..\n-            })) = &map.find(parent)\n+            })) = &map.find_parent(binding.hir_id)\n                 && let hir::ExprKind::MethodCall(segment, rcvr, args, _span) = expr.kind\n                 && rcvr.hir_id == binding.hir_id\n                 && let Some(def_id) = self.typeck_results.borrow().type_dependent_def_id(expr.hir_id)"}, {"sha": "1a960133ceba9ab2f858ed0e099c792b91cb24c0", "filename": "src/test/ui/type/type-check/point-at-inference-3.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.fixed?ref=f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "patch": "@@ -6,7 +6,7 @@ fn main() {\n     v.push(0);\n     v.push(1i32); //~ ERROR mismatched types\n     //~^ NOTE expected `i32`, found `u32`\n-    //~| NOTE arguments to this function are incorrect\n+    //~| NOTE arguments to this method are incorrect\n     //~| NOTE associated function defined here\n     //~| HELP change the type of the numeric literal from `u32` to `i32`\n }"}, {"sha": "92910ae1a31141e82618bda673ae8ae6f55e1ae0", "filename": "src/test/ui/type/type-check/point-at-inference-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.rs?ref=f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "patch": "@@ -6,7 +6,7 @@ fn main() {\n     v.push(0);\n     v.push(1u32); //~ ERROR mismatched types\n     //~^ NOTE expected `i32`, found `u32`\n-    //~| NOTE arguments to this function are incorrect\n+    //~| NOTE arguments to this method are incorrect\n     //~| NOTE associated function defined here\n     //~| HELP change the type of the numeric literal from `u32` to `i32`\n }"}, {"sha": "999c3148362f615873293e4869fc2cea0682dd8c", "filename": "src/test/ui/type/type-check/point-at-inference-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-3.stderr?ref=f98f2fcb5e4985bd7b12bae4ec03f2d96197fb2b", "patch": "@@ -7,7 +7,7 @@ LL |     v.push(0i32);\n LL |     v.push(1u32);\n    |       ---- ^^^^ expected `i32`, found `u32`\n    |       |\n-   |       arguments to this function are incorrect\n+   |       arguments to this method are incorrect\n    |\n note: associated function defined here\n   --> $SRC_DIR/alloc/src/vec/mod.rs:LL:COL"}]}