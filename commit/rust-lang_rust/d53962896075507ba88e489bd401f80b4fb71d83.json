{"sha": "d53962896075507ba88e489bd401f80b4fb71d83", "node_id": "C_kwDOAAsO6NoAKGQ1Mzk2Mjg5NjA3NTUwN2JhODhlNDg5YmQ0MDFmODBiNGZiNzFkODM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-12T18:20:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-12T18:20:33Z"}, "message": "Rollup merge of #104405 - Mark-Simulacrum:relnotes, r=pietroalbini\n\n1.66.0 release notes\n\nr? ``@tmandry`` ``@rust-lang/release``", "tree": {"sha": "a42b06179cd57cc5fa27bd46e539d90cbd4dcd37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a42b06179cd57cc5fa27bd46e539d90cbd4dcd37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d53962896075507ba88e489bd401f80b4fb71d83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjl3DxCRBK7hj4Ov3rIwAAE4IIAJI9Q839Cob9KIn3mgPEPtRo\nxFo9IHfeaSx3w6ijneBGikZ8/AfL60VhJFKKB/REdAzHrf77J4uv0eGO1b+8gfv7\nUjmBtPKJm6c6w3SLUmOG9zixTxoUo7z/F3BQFisX/IQzNDpu0AmDHZ2krDWfNN80\n46P/n+YZKGaS0z3jyM8fzoZ0paAiH770TRJWchAMgBm81hbn9sspYpf6DmhSp6iQ\nXuWPh5UXks0J/fSasbGJDVoPCBgbesu643foIbMgahctjufh+jj1JVMDgR5vCnVH\n+l0D0JeqZ5tg/ERqTX7pgj0h5ItYrlPK4vpuvOcTvrEO/B5BoXyGbT3zK68l8eA=\n=qz3v\n-----END PGP SIGNATURE-----\n", "payload": "tree a42b06179cd57cc5fa27bd46e539d90cbd4dcd37\nparent 37d7de337903a558dbeb1e82c844fe915ab8ff25\nparent 4264f0850db130c35ee0fa2c6d0117d293648b4f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670869233 +0100\ncommitter GitHub <noreply@github.com> 1670869233 +0100\n\nRollup merge of #104405 - Mark-Simulacrum:relnotes, r=pietroalbini\n\n1.66.0 release notes\n\nr? ``@tmandry`` ``@rust-lang/release``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d53962896075507ba88e489bd401f80b4fb71d83", "html_url": "https://github.com/rust-lang/rust/commit/d53962896075507ba88e489bd401f80b4fb71d83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d53962896075507ba88e489bd401f80b4fb71d83/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d7de337903a558dbeb1e82c844fe915ab8ff25", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d7de337903a558dbeb1e82c844fe915ab8ff25", "html_url": "https://github.com/rust-lang/rust/commit/37d7de337903a558dbeb1e82c844fe915ab8ff25"}, {"sha": "4264f0850db130c35ee0fa2c6d0117d293648b4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4264f0850db130c35ee0fa2c6d0117d293648b4f", "html_url": "https://github.com/rust-lang/rust/commit/4264f0850db130c35ee0fa2c6d0117d293648b4f"}], "stats": {"total": 91, "additions": 91, "deletions": 0}, "files": [{"sha": "5b4d6ccd9b8b845b7f484e2d77dd835192a0793f", "filename": "RELEASES.md", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/d53962896075507ba88e489bd401f80b4fb71d83/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/d53962896075507ba88e489bd401f80b4fb71d83/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=d53962896075507ba88e489bd401f80b4fb71d83", "patch": "@@ -1,3 +1,94 @@\n+Version 1.66.0 (2022-12-15)\n+==========================\n+\n+Language\n+--------\n+- [Permit specifying explicit discriminants on all `repr(Int)` enums](https://github.com/rust-lang/rust/pull/95710/)\n+  ```rust\n+  #[repr(u8)]\n+  enum Foo {\n+      A(u8) = 0,\n+      B(i8) = 1,\n+      C(bool) = 42,\n+  }\n+  ```\n+- [Allow transmutes between the same type differing only in lifetimes](https://github.com/rust-lang/rust/pull/101520/)\n+- [Change constant evaluation errors from a deny-by-default lint to a hard error](https://github.com/rust-lang/rust/pull/102091/)\n+- [Trigger `must_use` on `impl Trait` for supertraits](https://github.com/rust-lang/rust/pull/102287/)\n+  This makes `impl ExactSizeIterator` respect the existing `#[must_use]` annotation on `Iterator`.\n+- [Allow `..X` and `..=X` in patterns](https://github.com/rust-lang/rust/pull/102275/)\n+- [Uplift `clippy::for_loops_over_fallibles` lint into rustc](https://github.com/rust-lang/rust/pull/99696/)\n+- [Stabilize `sym` operands in inline assembly](https://github.com/rust-lang/rust/pull/103168/)\n+- [Update to Unicode 15](https://github.com/rust-lang/rust/pull/101912/)\n+- [Opaque types no longer imply lifetime bounds](https://github.com/rust-lang/rust/pull/95474/)\n+  This is a soundness fix which may break code that was erroneously relying on this behavior.\n+\n+Compiler\n+--------\n+- [Add armv5te-none-eabi and thumbv5te-none-eabi tier 3 targets](https://github.com/rust-lang/rust/pull/101329/)\n+  - Refer to Rust's [platform support page][platform-support-doc] for more\n+    information on Rust's tiered platform support.\n+- [Add support for linking against macOS universal libraries](https://github.com/rust-lang/rust/pull/98736)\n+\n+Libraries\n+---------\n+- [Fix `#[derive(Default)]` on a generic `#[default]` enum adding unnecessary `Default` bounds](https://github.com/rust-lang/rust/pull/101040/)\n+- [Update to Unicode 15](https://github.com/rust-lang/rust/pull/101821/)\n+\n+Stabilized APIs\n+---------------\n+\n+- [`proc_macro::Span::source_text`](https://doc.rust-lang.org/stable/proc_macro/struct.Span.html#method.source_text)\n+- [`uX::{checked_add_signed, overflowing_add_signed, saturating_add_signed, wrapping_add_signed}`](https://doc.rust-lang.org/stable/std/primitive.u8.html#method.checked_add_signed)\n+- [`iX::{checked_add_unsigned, overflowing_add_unsigned, saturating_add_unsigned, wrapping_add_unsigned}`](https://doc.rust-lang.org/stable/std/primitive.i8.html#method.checked_add_unsigned)\n+- [`iX::{checked_sub_unsigned, overflowing_sub_unsigned, saturating_sub_unsigned, wrapping_sub_unsigned}`](https://doc.rust-lang.org/stable/std/primitive.i8.html#method.checked_sub_unsigned)\n+- [`BTreeSet::{first, last, pop_first, pop_last}`](https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html#method.first)\n+- [`BTreeMap::{first_key_value, last_key_value, first_entry, last_entry, pop_first, pop_last}`](https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html#method.first_key_value)\n+- [Add `AsFd` implementations for stdio lock types on WASI.](https://github.com/rust-lang/rust/pull/101768/)\n+- [`impl TryFrom<Vec<T>> for Box<[T; N]>`](https://doc.rust-lang.org/stable/std/boxed/struct.Box.html#impl-TryFrom%3CVec%3CT%2C%20Global%3E%3E-for-Box%3C%5BT%3B%20N%5D%2C%20Global%3E)\n+- [`core::hint::black_box`](https://doc.rust-lang.org/stable/std/hint/fn.black_box.html)\n+- [`Duration::try_from_secs_{f32,f64}`](https://doc.rust-lang.org/stable/std/time/struct.Duration.html#method.try_from_secs_f32)\n+- [`Option::unzip`](https://doc.rust-lang.org/stable/std/option/enum.Option.html#method.unzip)\n+- [`std::os::fd`](https://doc.rust-lang.org/stable/std/os/fd/index.html)\n+\n+\n+Rustdoc\n+-------\n+\n+- [Add Rustdoc warning for invalid HTML tags in the documentation](https://github.com/rust-lang/rust/pull/101720/)\n+\n+Cargo\n+-----\n+\n+- [Added `cargo remove` to remove dependencies from Cargo.toml](https://doc.rust-lang.org/nightly/cargo/commands/cargo-remove.html)\n+- [`cargo publish` now waits for the new version to be downloadable before exiting](https://github.com/rust-lang/cargo/pull/11062)\n+\n+See [detailed release notes](https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md#cargo-166-2022-12-15) for more.\n+\n+Compatibility Notes\n+-------------------\n+\n+- [Only apply `ProceduralMasquerade` hack to older versions of `rental`](https://github.com/rust-lang/rust/pull/94063/)\n+- [Don't export `__heap_base` and `__data_end` on wasm32-wasi.](https://github.com/rust-lang/rust/pull/102385/)\n+- [Don't export `__wasm_init_memory` on WebAssembly.](https://github.com/rust-lang/rust/pull/102426/)\n+- [Only export `__tls_*` on wasm32-unknown-unknown.](https://github.com/rust-lang/rust/pull/102440/)\n+- [Don't link to `libresolv` in libstd on Darwin](https://github.com/rust-lang/rust/pull/102766/)\n+- [Update libstd's libc to 0.2.135 (to make `libstd` no longer pull in `libiconv.dylib` on Darwin)](https://github.com/rust-lang/rust/pull/103277/)\n+- [Opaque types no longer imply lifetime bounds](https://github.com/rust-lang/rust/pull/95474/)\n+  This is a soundness fix which may break code that was erroneously relying on this behavior.\n+- [Make `order_dependent_trait_objects` show up in future-breakage reports](https://github.com/rust-lang/rust/pull/102635/)\n+- [Change std::process::Command spawning to default to inheriting the parent's signal mask](https://github.com/rust-lang/rust/pull/101077/)\n+\n+Internal Changes\n+----------------\n+\n+These changes do not affect any public interfaces of Rust, but they represent\n+significant improvements to the performance or internals of rustc and related\n+tools.\n+\n+- [Enable BOLT for LLVM compilation](https://github.com/rust-lang/rust/pull/94381/)\n+- [Enable LTO for rustc_driver.so](https://github.com/rust-lang/rust/pull/101403/)\n+\n Version 1.65.0 (2022-11-03)\n ==========================\n "}]}