{"sha": "c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "node_id": "C_kwDOAAsO6NoAKGMzZGIxODVjNTI0OTdlY2IxYjRlZTU3NThjOTlhMWMzZmUwMmM3OWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-08T06:25:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-08T06:25:09Z"}, "message": "Rollup merge of #101498 - petrochenkov:visparam, r=cjgillot\n\nrustc: Parameterize `ty::Visibility` over used ID\n\nIt allows using `LocalDefId` instead of `DefId` when possible, and also encode cheaper `Visibility<DefIndex>` into metadata.", "tree": {"sha": "e5620127522f5af613ea3fd281d244c43218e873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5620127522f5af613ea3fd281d244c43218e873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "html_url": "https://github.com/rust-lang/rust/commit/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "html_url": "https://github.com/rust-lang/rust/commit/567e1bbca7942c1f5353ca0b3b94210e4fc417c0"}, {"sha": "91360966297a4cf2008a56f727b03012d3d9e4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/91360966297a4cf2008a56f727b03012d3d9e4b3", "html_url": "https://github.com/rust-lang/rust/commit/91360966297a4cf2008a56f727b03012d3d9e4b3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4e68d6810e29b0101aca9f22d8c454f5bdc65c38", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "patch": "@@ -142,7 +142,7 @@ impl<'tcx> LateLintPass<'tcx> for Default {\n                 if adt.is_struct();\n                 let variant = adt.non_enum_variant();\n                 if adt.did().is_local() || !variant.is_field_list_non_exhaustive();\n-                let module_did = cx.tcx.parent_module(stmt.hir_id).to_def_id();\n+                let module_did = cx.tcx.parent_module(stmt.hir_id);\n                 if variant\n                     .fields\n                     .iter()"}, {"sha": "23c86482b46cb1186f9221d7c11f49c51cfea29d", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db185c52497ecb1b4ee5758c99a1c3fe02c79d/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=c3db185c52497ecb1b4ee5758c99a1c3fe02c79d", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::traits::Reveal;\n use rustc_middle::ty::{\n     self, Binder, BoundConstness, GenericParamDefKind, ImplPolarity, ParamEnv, PredicateKind, TraitPredicate, TraitRef,\n-    Ty, TyCtxt, Visibility,\n+    Ty, TyCtxt,\n };\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n@@ -464,7 +464,7 @@ impl<'tcx> Visitor<'tcx> for UnsafeVisitor<'_, 'tcx> {\n fn check_partial_eq_without_eq<'tcx>(cx: &LateContext<'tcx>, span: Span, trait_ref: &hir::TraitRef<'_>, ty: Ty<'tcx>) {\n     if_chain! {\n         if let ty::Adt(adt, substs) = ty.kind();\n-        if cx.tcx.visibility(adt.did()) == Visibility::Public;\n+        if cx.tcx.visibility(adt.did()).is_public();\n         if let Some(eq_trait_def_id) = cx.tcx.get_diagnostic_item(sym::Eq);\n         if let Some(def_id) = trait_ref.trait_def_id();\n         if cx.tcx.is_diagnostic_item(sym::PartialEq, def_id);"}]}