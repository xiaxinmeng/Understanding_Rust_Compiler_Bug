{"sha": "6781907444c0b80fb57a1a6ad971ed76ade90b16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ODE5MDc0NDRjMGI4MGZiNTdhMWE2YWQ5NzFlZDc2YWRlOTBiMTY=", "commit": {"author": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-11-06T15:57:05Z"}, "committer": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-11-12T15:38:18Z"}, "message": "fix tests and formatting", "tree": {"sha": "64fa581ea18be269ef51ea5b55e7e765f90e14d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64fa581ea18be269ef51ea5b55e7e765f90e14d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6781907444c0b80fb57a1a6ad971ed76ade90b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6781907444c0b80fb57a1a6ad971ed76ade90b16", "html_url": "https://github.com/rust-lang/rust/commit/6781907444c0b80fb57a1a6ad971ed76ade90b16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6781907444c0b80fb57a1a6ad971ed76ade90b16/comments", "author": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bce9af78c67395edab5cf2882d8c4621be86d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bce9af78c67395edab5cf2882d8c4621be86d7e", "html_url": "https://github.com/rust-lang/rust/commit/8bce9af78c67395edab5cf2882d8c4621be86d7e"}], "stats": {"total": 62, "additions": 19, "deletions": 43}, "files": [{"sha": "4d4d8a31eb4422ca501d0f8184b117ceed36b21f", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -6,10 +6,10 @@ use crate::interpret::{\n     ScalarMaybeUninit, StackPopCleanup,\n };\n \n+use rustc_errors::ErrorReported;\n use rustc_hir::def::DefKind;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::ErrorHandled;\n-use rustc_errors::ErrorReported;\n use rustc_middle::traits::Reveal;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, subst::Subst, TyCtxt};"}, {"sha": "129985543a0d826d8c49780c4ab45467e19777b0", "filename": "compiler/rustc_mir/src/transform/check_consts/qualifs.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -9,7 +9,11 @@ use rustc_trait_selection::traits;\n \n use super::ConstCx;\n \n-pub fn in_any_value_of_ty(cx: &ConstCx<'_, 'tcx>, ty: Ty<'tcx>, error_occured: bool) -> ConstQualifs {\n+pub fn in_any_value_of_ty(\n+    cx: &ConstCx<'_, 'tcx>,\n+    ty: Ty<'tcx>,\n+    error_occured: bool,\n+) -> ConstQualifs {\n     ConstQualifs {\n         has_mut_interior: HasMutInterior::in_any_value_of_ty(cx, ty),\n         needs_drop: NeedsDrop::in_any_value_of_ty(cx, ty),"}, {"sha": "ab65bc5a338beba4143948ffa8d1b73f812aabf8", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -123,7 +123,11 @@ impl Qualifs<'mir, 'tcx> {\n         has_mut_interior.get().contains(local) || self.indirectly_mutable(ccx, local, location)\n     }\n \n-    fn in_return_place(&mut self, ccx: &'mir ConstCx<'mir, 'tcx>, error_occured: bool) -> ConstQualifs {\n+    fn in_return_place(\n+        &mut self,\n+        ccx: &'mir ConstCx<'mir, 'tcx>,\n+        error_occured: bool,\n+    ) -> ConstQualifs {\n         // Find the `Return` terminator if one exists.\n         //\n         // If no `Return` terminator exists, this MIR is divergent. Just return the conservative"}, {"sha": "db642988971e0266d10968e32b7afca1bca8070b", "filename": "src/test/ui/consts/const-call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -5,5 +5,4 @@ fn f(x: usize) -> usize {\n fn main() {\n     let _ = [0; f(2)];\n     //~^ ERROR calls in constants are limited to constant functions\n-    //~| ERROR evaluation of constant value failed\n }"}, {"sha": "9761348bab824f77f70589ec67a437410a1b74fe", "filename": "src/test/ui/consts/const-call.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -4,13 +4,6 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL |     let _ = [0; f(2)];\n    |                 ^^^^\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-call.rs:6:17\n-   |\n-LL |     let _ = [0; f(2)];\n-   |                 ^^^^ calling non-const function `f`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0015, E0080.\n-For more information about an error, try `rustc --explain E0015`.\n+For more information about this error, try `rustc --explain E0015`."}, {"sha": "159b48d42b6c69e50fc146865244fbb3101ee721", "filename": "src/test/ui/consts/const-eval/issue-52442.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -1,5 +1,4 @@\n fn main() {\n     [();  { &loop { break } as *const _ as usize } ];\n     //~^ ERROR casting pointers to integers in constants is unstable\n-    //~| ERROR evaluation of constant value failed\n }"}, {"sha": "2a8f34279c3db67d9f114333de6a0b50b6b9e079", "filename": "src/test/ui/consts/const-eval/issue-52442.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -7,13 +7,6 @@ LL |     [();  { &loop { break } as *const _ as usize } ];\n    = note: see issue #51910 <https://github.com/rust-lang/rust/issues/51910> for more information\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-52442.rs:2:13\n-   |\n-LL |     [();  { &loop { break } as *const _ as usize } ];\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \"pointer-to-integer cast\" needs an rfc before being allowed inside constants\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0658.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "d980eb92a243e87f47020b8c2997f676d40b3ed3", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -5,7 +5,6 @@ fn main() {\n     let _: [u8; 0] = [4; {\n         match &1 as *const i32 as usize {\n             //~^ ERROR casting pointers to integers in constants\n-            //~| ERROR evaluation of constant value failed\n             0 => 42,\n             n => n,\n         }"}, {"sha": "22d6bb16944b57427eb83560c90df86b09492b43", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -7,13 +7,6 @@ LL |         match &1 as *const i32 as usize {\n    = note: see issue #51910 <https://github.com/rust-lang/rust/issues/51910> for more information\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/match-test-ptr-null.rs:6:15\n-   |\n-LL |         match &1 as *const i32 as usize {\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ \"pointer-to-integer cast\" needs an rfc before being allowed inside constants\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0658.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "d77fd9aa831bee8973e35b7a2be7073299421150", "filename": "src/test/ui/consts/issue-68542-closure-in-array-len.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -4,7 +4,6 @@\n \n struct Bug {\n     a: [(); (|| { 0 })()] //~ ERROR calls in constants are limited to\n-    //~^ ERROR evaluation of constant value failed\n }\n \n fn main() {}"}, {"sha": "74d70e18a24cb57d57369575c12b6e2eba359d67", "filename": "src/test/ui/consts/issue-68542-closure-in-array-len.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6781907444c0b80fb57a1a6ad971ed76ade90b16/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr?ref=6781907444c0b80fb57a1a6ad971ed76ade90b16", "patch": "@@ -4,13 +4,6 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL |     a: [(); (|| { 0 })()]\n    |             ^^^^^^^^^^^^\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-68542-closure-in-array-len.rs:6:13\n-   |\n-LL |     a: [(); (|| { 0 })()]\n-   |             ^^^^^^^^^^^^ calling non-const function `Bug::a::{constant#0}::{closure#0}`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0015, E0080.\n-For more information about an error, try `rustc --explain E0015`.\n+For more information about this error, try `rustc --explain E0015`."}]}