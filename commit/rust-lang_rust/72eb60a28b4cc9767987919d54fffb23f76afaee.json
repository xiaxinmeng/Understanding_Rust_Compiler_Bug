{"sha": "72eb60a28b4cc9767987919d54fffb23f76afaee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZWI2MGEyOGI0Y2M5NzY3OTg3OTE5ZDU0ZmZmYjIzZjc2YWZhZWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-01T15:09:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-01T15:09:46Z"}, "message": "Auto merge of #7013 - Y-Nak:fix-needless-paren, r=flip1995\n\nclippy_utils: fix needless parenthesis output from sugg::Sugg::maybe_par\n\nchangelog: clippy_utils: fix needless parenthesis output from `sugg::Sugg::maybe_par`\n\nfixes: #6767", "tree": {"sha": "68e911e01ab4db254e4c947e4fd6f88a40aa8303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68e911e01ab4db254e4c947e4fd6f88a40aa8303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72eb60a28b4cc9767987919d54fffb23f76afaee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72eb60a28b4cc9767987919d54fffb23f76afaee", "html_url": "https://github.com/rust-lang/rust/commit/72eb60a28b4cc9767987919d54fffb23f76afaee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72eb60a28b4cc9767987919d54fffb23f76afaee/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c4fc3cd802c9369bf2b6cd380abd7efa7013b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c4fc3cd802c9369bf2b6cd380abd7efa7013b1", "html_url": "https://github.com/rust-lang/rust/commit/92c4fc3cd802c9369bf2b6cd380abd7efa7013b1"}, {"sha": "6325fe1f5481f6dde2cabda173575a334a3cb8a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6325fe1f5481f6dde2cabda173575a334a3cb8a2", "html_url": "https://github.com/rust-lang/rust/commit/6325fe1f5481f6dde2cabda173575a334a3cb8a2"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "0633a19391f8633d281567ac0986bf088d25cb8d", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/72eb60a28b4cc9767987919d54fffb23f76afaee/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72eb60a28b4cc9767987919d54fffb23f76afaee/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=72eb60a28b4cc9767987919d54fffb23f76afaee", "patch": "@@ -267,17 +267,44 @@ impl<'a> Sugg<'a> {\n             Sugg::NonParen(..) => self,\n             // `(x)` and `(x).y()` both don't need additional parens.\n             Sugg::MaybeParen(sugg) => {\n-                if sugg.starts_with('(') && sugg.ends_with(')') {\n+                if has_enclosing_paren(&sugg) {\n                     Sugg::MaybeParen(sugg)\n                 } else {\n                     Sugg::NonParen(format!(\"({})\", sugg).into())\n                 }\n             },\n-            Sugg::BinOp(_, sugg) => Sugg::NonParen(format!(\"({})\", sugg).into()),\n+            Sugg::BinOp(_, sugg) => {\n+                if has_enclosing_paren(&sugg) {\n+                    Sugg::NonParen(sugg)\n+                } else {\n+                    Sugg::NonParen(format!(\"({})\", sugg).into())\n+                }\n+            },\n         }\n     }\n }\n \n+/// Return `true` if `sugg` is enclosed in parenthesis.\n+fn has_enclosing_paren(sugg: impl AsRef<str>) -> bool {\n+    let mut chars = sugg.as_ref().chars();\n+    if let Some('(') = chars.next() {\n+        let mut depth = 1;\n+        while let Some(c) = chars.next() {\n+            if c == '(' {\n+                depth += 1;\n+            } else if c == ')' {\n+                depth -= 1;\n+            }\n+            if depth == 0 {\n+                break;\n+            }\n+        }\n+        chars.next().is_none()\n+    } else {\n+        false\n+    }\n+}\n+\n // Copied from the rust standart library, and then edited\n macro_rules! forward_binop_impls_to_ref {\n     (impl $imp:ident, $method:ident for $t:ty, type Output = $o:ty) => {\n@@ -668,6 +695,8 @@ impl<T: LintContext> DiagnosticBuilderExt<T> for rustc_errors::DiagnosticBuilder\n #[cfg(test)]\n mod test {\n     use super::Sugg;\n+\n+    use rustc_ast::util::parser::AssocOp;\n     use std::borrow::Cow;\n \n     const SUGGESTION: Sugg<'static> = Sugg::NonParen(Cow::Borrowed(\"function_call()\"));\n@@ -681,4 +710,13 @@ mod test {\n     fn blockify_transforms_sugg_into_a_block() {\n         assert_eq!(\"{ function_call() }\", SUGGESTION.blockify().to_string());\n     }\n+\n+    #[test]\n+    fn binop_maybe_par() {\n+        let sugg = Sugg::BinOp(AssocOp::Add, \"(1 + 1)\".into());\n+        assert_eq!(\"(1 + 1)\", sugg.maybe_par().to_string());\n+\n+        let sugg = Sugg::BinOp(AssocOp::Add, \"(1 + 1) + (1 + 1)\".into());\n+        assert_eq!(\"((1 + 1) + (1 + 1))\", sugg.maybe_par().to_string());\n+    }\n }"}, {"sha": "5b487bb8fcf790cae0bb771ae964327b04036cc5", "filename": "tests/ui/floating_point_log.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffloating_point_log.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffloating_point_log.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_log.fixed?ref=72eb60a28b4cc9767987919d54fffb23f76afaee", "patch": "@@ -27,7 +27,7 @@ fn check_ln1p() {\n     let _ = (x / 2.0).ln_1p();\n     let _ = x.powi(3).ln_1p();\n     let _ = (x.powi(3) / 2.0).ln_1p();\n-    let _ = ((std::f32::consts::E - 1.0)).ln_1p();\n+    let _ = (std::f32::consts::E - 1.0).ln_1p();\n     let _ = x.ln_1p();\n     let _ = x.powi(3).ln_1p();\n     let _ = (x + 2.0).ln_1p();"}, {"sha": "96e5a15444170f4fd2d9453ac15774af596f86d7", "filename": "tests/ui/floating_point_log.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffloating_point_log.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffloating_point_log.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_log.stderr?ref=72eb60a28b4cc9767987919d54fffb23f76afaee", "patch": "@@ -90,7 +90,7 @@ error: ln(1 + x) can be computed more accurately\n   --> $DIR/floating_point_log.rs:30:13\n    |\n LL |     let _ = (1.0 + (std::f32::consts::E - 1.0)).ln();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `((std::f32::consts::E - 1.0)).ln_1p()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(std::f32::consts::E - 1.0).ln_1p()`\n \n error: ln(1 + x) can be computed more accurately\n   --> $DIR/floating_point_log.rs:31:13"}, {"sha": "da5c16f8d01a8a582c9537062fb6cbde9511a881", "filename": "tests/ui/from_str_radix_10.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffrom_str_radix_10.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Ffrom_str_radix_10.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_str_radix_10.stderr?ref=72eb60a28b4cc9767987919d54fffb23f76afaee", "patch": "@@ -28,7 +28,7 @@ error: this call to `from_str_radix` can be replaced with a call to `str::parse`\n   --> $DIR/from_str_radix_10.rs:32:5\n    |\n LL |     u16::from_str_radix(&(\"10\".to_owned() + \"5\"), 10)?;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `((\"10\".to_owned() + \"5\")).parse::<u16>()`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(\"10\".to_owned() + \"5\").parse::<u16>()`\n \n error: this call to `from_str_radix` can be replaced with a call to `str::parse`\n   --> $DIR/from_str_radix_10.rs:33:5"}, {"sha": "a2f2dfce168d5bd561450bc1a8eefda32e3b28da", "filename": "tests/ui/manual_memcpy/with_loop_counters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72eb60a28b4cc9767987919d54fffb23f76afaee/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr?ref=72eb60a28b4cc9767987919d54fffb23f76afaee", "patch": "@@ -43,7 +43,7 @@ LL | /     for i in 3..(3 + src.len()) {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..(3 + src.len())].clone_from_slice(&src[..((3 + src.len()) - 3)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:35:5"}]}