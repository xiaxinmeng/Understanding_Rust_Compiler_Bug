{"sha": "4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmZlMDgyOWQwY2E0NTc5YzIwYzUxMTAwYmI0M2M3MGY3YzhlMmQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T12:03:45Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T12:03:45Z"}, "message": "Fix chain with many try operators", "tree": {"sha": "3e0d6fbf9eaa53bfa15cc82fef7caa8edc81f4d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e0d6fbf9eaa53bfa15cc82fef7caa8edc81f4d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d", "html_url": "https://github.com/rust-lang/rust/commit/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d814c423db142575563e2c5126ca9cd0794b14", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d814c423db142575563e2c5126ca9cd0794b14", "html_url": "https://github.com/rust-lang/rust/commit/e6d814c423db142575563e2c5126ca9cd0794b14"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "429b9ceb96142bb787c331ecc6847161545cfe5a", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=4bbfe0829d0ca4579c20c51100bb43c70f7c8e2d", "patch": "@@ -335,6 +335,7 @@ impl Chain {\n             if handle_comment {\n                 let pre_comment_span = mk_sp(prev_span_end, chain_item.span.lo());\n                 let pre_comment_snippet = context.snippet(pre_comment_span);\n+                let pre_comment_snippet = pre_comment_snippet.trim().trim_matches('?');\n                 let (pre_comment, _) = extract_pre_comment(pre_comment_snippet);\n                 match pre_comment {\n                     Some(ref comment) if !comment.is_empty() => {"}]}