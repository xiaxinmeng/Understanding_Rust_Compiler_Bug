{"sha": "c086676657b7f7e422d0a7c0fed044e2d7251b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwODY2NzY2NTdiN2Y3ZTQyMmQwYTdjMGZlZDA0NGUyZDcyNTFiNjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-17T01:42:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-17T01:42:03Z"}, "message": "Auto merge of #85178 - cjgillot:local-crate, r=oli-obk\n\nRemove CrateNum parameter for queries that only work on local crate\n\nThe pervasive `CrateNum` parameter is a remnant of the multi-crate rustc idea.\n\nUsing `()` as query key in those cases avoids having to worry about the validity of the query key.", "tree": {"sha": "8c27cdd37dd1da270d52232b3398e42a46f2cafa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c27cdd37dd1da270d52232b3398e42a46f2cafa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c086676657b7f7e422d0a7c0fed044e2d7251b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c086676657b7f7e422d0a7c0fed044e2d7251b61", "html_url": "https://github.com/rust-lang/rust/commit/c086676657b7f7e422d0a7c0fed044e2d7251b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c086676657b7f7e422d0a7c0fed044e2d7251b61/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9013bf299ed296dd04c272f005a2495e0c9fea66", "url": "https://api.github.com/repos/rust-lang/rust/commits/9013bf299ed296dd04c272f005a2495e0c9fea66", "html_url": "https://github.com/rust-lang/rust/commit/9013bf299ed296dd04c272f005a2495e0c9fea66"}, {"sha": "44c1ef879773fa7893529bcd18f9024bc91bb8f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/44c1ef879773fa7893529bcd18f9024bc91bb8f6", "html_url": "https://github.com/rust-lang/rust/commit/44c1ef879773fa7893529bcd18f9024bc91bb8f6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e742cd626ab06352b58410721247e3f867090417", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=c086676657b7f7e422d0a7c0fed044e2d7251b61", "patch": "@@ -12,7 +12,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::map::Map;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use rustc_span::{def_id::LOCAL_CRATE, source_map::Span};\n+use rustc_span::{source_map::Span};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for deriving `Hash` but implementing `PartialEq`\n@@ -312,7 +312,7 @@ fn check_copy_clone<'tcx>(cx: &LateContext<'tcx>, item: &Item<'_>, trait_ref: &T\n         if ty_subs.non_erasable_generics().next().is_some() {\n             let has_copy_impl = cx\n                 .tcx\n-                .all_local_trait_impls(LOCAL_CRATE)\n+                .all_local_trait_impls(())\n                 .get(&copy_id)\n                 .map_or(false, |impls| {\n                     impls"}, {"sha": "4e0b1ae78dfe39886b6c7ce2f36e8da726619569", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=c086676657b7f7e422d0a7c0fed044e2d7251b61", "patch": "@@ -3,7 +3,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::in_macro;\n use rustc_hir::def_id::DefIdMap;\n-use rustc_hir::{def_id, Crate, Impl, Item, ItemKind};\n+use rustc_hir::{Crate, Impl, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n@@ -68,7 +68,7 @@ impl<'tcx> LateLintPass<'tcx> for MultipleInherentImpl {\n     fn check_crate_post(&mut self, cx: &LateContext<'tcx>, krate: &'tcx Crate<'_>) {\n         if !krate.items.is_empty() {\n             // Retrieve all inherent implementations from the crate, grouped by type\n-            for impls in cx.tcx.crate_inherent_impls(def_id::LOCAL_CRATE).inherent_impls.values() {\n+            for impls in cx.tcx.crate_inherent_impls(()).inherent_impls.values() {\n                 // Filter out implementations that have generic params (type or lifetime)\n                 let mut impl_spans = impls.iter().filter_map(|impl_def| self.impls.get(impl_def));\n                 if let Some(initial_span) = impl_spans.next() {"}, {"sha": "9ac9500b4eb7637208725e9633f18ff793534f02", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c086676657b7f7e422d0a7c0fed044e2d7251b61/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=c086676657b7f7e422d0a7c0fed044e2d7251b61", "patch": "@@ -60,7 +60,7 @@ use rustc_ast::ast::{self, Attribute, BorrowKind, LitKind};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, walk_expr, ErasedMap, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::LangItem::{ResultErr, ResultOk};\n use rustc_hir::{\n@@ -677,7 +677,7 @@ pub fn method_chain_args<'a>(expr: &'a Expr<'_>, methods: &[&str]) -> Option<Vec\n /// Returns `true` if the provided `def_id` is an entrypoint to a program.\n pub fn is_entrypoint_fn(cx: &LateContext<'_>, def_id: DefId) -> bool {\n     cx.tcx\n-        .entry_fn(LOCAL_CRATE)\n+        .entry_fn(())\n         .map_or(false, |(entry_fn_def_id, _)| def_id == entry_fn_def_id)\n }\n "}]}