{"sha": "b4c3b83f26641c3d868e84b991fe88c8c556688c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YzNiODNmMjY2NDFjM2Q4NjhlODRiOTkxZmU4OGM4YzU1NjY4OGM=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-06-22T22:41:39Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-06-22T22:41:39Z"}, "message": "Fix bug: globbed imports were importing everything visible from the other\nmodule, not just everything exported.", "tree": {"sha": "28f87f5b9a89ca468201a046e694da77de9c6dfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f87f5b9a89ca468201a046e694da77de9c6dfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4c3b83f26641c3d868e84b991fe88c8c556688c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3b83f26641c3d868e84b991fe88c8c556688c", "html_url": "https://github.com/rust-lang/rust/commit/b4c3b83f26641c3d868e84b991fe88c8c556688c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3b83f26641c3d868e84b991fe88c8c556688c/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adc18bb24ae6dacf6bfd9ca9742d47e6d4187a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/adc18bb24ae6dacf6bfd9ca9742d47e6d4187a6b", "html_url": "https://github.com/rust-lang/rust/commit/adc18bb24ae6dacf6bfd9ca9742d47e6d4187a6b"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "26273d18080eac4794bb8aa0f270fe0b298561e3", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -940,9 +940,9 @@ fn lookup_in_local_mod(&env e, node_id node_id, &span sp, &ident id,\n             }\n         }\n     }\n-    // not local or explicitly imported; try globs:\n \n-    ret lookup_glob_in_mod(e, info, sp, id, ns, dr);\n+    // not local or explicitly imported; try globs:\n+    ret lookup_glob_in_mod(e, info, sp, id, ns, outside);\n }\n \n fn lookup_glob_in_mod(&env e, @indexed_mod info, &span sp, &ident id,"}, {"sha": "d2f068ba5dc6d42046b1aa8bff3720a53ead910e", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -1,5 +1,6 @@\n \n import std::bitv;\n+import std::str;\n import std::vec;\n import std::vec::len;\n import std::vec::grow;\n@@ -12,6 +13,7 @@ import front::ast;\n import front::ast::*;\n import util::common;\n import util::common::span;\n+import util::common::spanned;\n import util::common::respan;\n import util::common::log_block;\n import util::common::new_int_hash;"}, {"sha": "03dd4ca231d0062104a5d5a1ca56ff7f0f67c0d3", "filename": "src/comp/middle/tstate/collect_locals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -3,7 +3,7 @@ import std::vec;\n import std::vec::plus_option;\n import front::ast;\n import front::ast::*;\n-import option::*;\n+import std::option::*;\n import middle::walk::walk_crate;\n import middle::walk::walk_fn;\n import middle::walk::ast_visitor;"}, {"sha": "a9f2388707529a5f0c7ff159cb61410ab65e5997", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -96,6 +96,7 @@ export mt;\n export node_type_table;\n export pat_node_id;\n export pat_ty;\n+export cname;\n export path_to_str;\n export rename;\n export ret_ty_of_fn;\n@@ -170,6 +171,7 @@ export type_is_tup_like;\n export type_is_str;\n export type_owns_heap_mem;\n export type_param;\n+export def_to_str;\n export unify;\n export variant_info;\n export walk_ty;\n@@ -273,7 +275,7 @@ tag sty {\n type constr_def = spanned[constr_general[uint]];\n \n type constr_general[T] =\n-    rec(path path, vec[@constr_arg_general[T]] args, def_id id);\n+    rec(ast::path path, vec[@constr_arg_general[T]] args, def_id id);\n \n \n // Data structures used in type unification"}, {"sha": "d8be2bf7712cc3b2826c3f486e441a7b357860e5", "filename": "src/comp/pretty/ppaux.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fpretty%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Fcomp%2Fpretty%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fppaux.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -1,13 +1,22 @@\n \n import std::io;\n+import std::vec;\n+import std::str;\n+import std::option;\n+import std::option::none;\n+import std::option::some;\n import middle::ty::*;\n import front::lexer;\n+import front::ast;\n import pp::word;\n import pp::eof;\n import pp::zerobreak;\n import pp::hardbreak;\n import front::codemap;\n import front::codemap::codemap;\n+import util::common::istr;\n+import util::common::uistr;\n+import util::common::ty_mach_to_str;\n \n fn ty_to_str(&ctxt cx, &t typ) -> str {\n     fn fn_input_to_str(&ctxt cx, &rec(middle::ty::mode mode, t ty) input) ->\n@@ -123,8 +132,8 @@ fn ty_to_str(&ctxt cx, &t typ) -> str {\n \n fn ty_to_short_str(&ctxt cx, t typ) -> str {\n     auto f = def_to_str;\n-    auto ecx = @rec(ds=f, tcx=cx, abbrevs=metadata::ac_no_abbrevs);\n-    auto s = metadata::Encode::ty_str(ecx, typ);\n+    auto ecx = @rec(ds=f, tcx=cx, abbrevs=middle::metadata::ac_no_abbrevs);\n+    auto s = middle::metadata::Encode::ty_str(ecx, typ);\n     if (str::byte_len(s) >= 32u) { s = str::substr(s, 0u, 32u); }\n     ret s;\n }"}, {"sha": "561d791464c663a38eb0baf3be88431fddc5f3d0", "filename": "src/test/compile-fail/import-glob-export.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-export.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -0,0 +1,14 @@\n+\n+// error-pattern:unresolved name\n+\n+import m1::*;\n+\n+mod m1 {\n+  export f1;\n+  fn f1() {}\n+  fn f2() {}\n+}\n+\n+fn main () {\n+  f2();\n+}\n\\ No newline at end of file"}, {"sha": "45e0dd52e5cf0ed48e5dd26daec7d147e572cbf6", "filename": "src/test/run-pass/import-glob-circular.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Ftest%2Frun-pass%2Fimport-glob-circular.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3b83f26641c3d868e84b991fe88c8c556688c/src%2Ftest%2Frun-pass%2Fimport-glob-circular.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-circular.rs?ref=b4c3b83f26641c3d868e84b991fe88c8c556688c", "patch": "@@ -33,8 +33,8 @@ mod test1 {\n     assert(f1() == 1u);\n     //make sure that cached lookups work...\n     assert(f1() == 1u);\n-    assert(f2() == 2u);\n-    assert(f2() == 2u);\n+    //assert(f2() == 2u);  //TODO: renable when 'reexport' is implemented\n+    //assert(f2() == 2u);\n     assert(common() == 1u);\n     assert(common() == 1u);\n   }\n@@ -43,9 +43,9 @@ mod test1 {\n mod test2 {\n   import circ2::*;\n   fn test2() {\n-    assert(f1() == 1u);\n-    //make sure that cached lookups work...\n-    assert(f1() == 1u);\n+    //assert(f1() == 1u);  //TODO: renable when 'reexport' is implemented\n+    ////make sure that cached lookups work...\n+    //assert(f1() == 1u);\n     assert(f2() == 2u);\n     assert(f2() == 2u);\n     assert(common() == 2u);    "}]}