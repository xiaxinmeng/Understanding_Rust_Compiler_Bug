{"sha": "55353137a64b186f15e7f7e7d714297b7a8b6b02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MzUzMTM3YTY0YjE4NmYxNWU3ZjdlN2Q3MTQyOTdiN2E4YjZiMDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-05T23:16:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-05T23:16:27Z"}, "message": "auto merge of #10562 : ongardie/rust/master, r=brson\n\nIt's useful to allow users to get at the internal std::rc::comm::Port,\r\nand other such fields, since they implement important traits like\r\nSelect.\r\n\r\nSee [rust-dev] \"select on std::comm::Port and different types\" at https://mail.mozilla.org/pipermail/rust-dev/2013-November/006735.html for background.", "tree": {"sha": "5813794ad45d3beeba336333c1bdf00a339834c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5813794ad45d3beeba336333c1bdf00a339834c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55353137a64b186f15e7f7e7d714297b7a8b6b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55353137a64b186f15e7f7e7d714297b7a8b6b02", "html_url": "https://github.com/rust-lang/rust/commit/55353137a64b186f15e7f7e7d714297b7a8b6b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55353137a64b186f15e7f7e7d714297b7a8b6b02/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6f6cb589f1b796598fcb0f1b95d71956d5e6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6f6cb589f1b796598fcb0f1b95d71956d5e6a5", "html_url": "https://github.com/rust-lang/rust/commit/ad6f6cb589f1b796598fcb0f1b95d71956d5e6a5"}, {"sha": "7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "html_url": "https://github.com/rust-lang/rust/commit/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "c5ed464de23c5a972c65ea83d808a87ebc063fea", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55353137a64b186f15e7f7e7d714297b7a8b6b02/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55353137a64b186f15e7f7e7d714297b7a8b6b02/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=55353137a64b186f15e7f7e7d714297b7a8b6b02", "patch": "@@ -81,16 +81,17 @@ pub trait Peekable<T> {\n     fn peek(&self) -> bool;\n }\n \n-pub struct PortOne<T> { priv x: rtcomm::PortOne<T> }\n-pub struct ChanOne<T> { priv x: rtcomm::ChanOne<T> }\n+/* priv is disabled to allow users to get at traits like Select. */\n+pub struct PortOne<T> { /* priv */ x: rtcomm::PortOne<T> }\n+pub struct ChanOne<T> { /* priv */ x: rtcomm::ChanOne<T> }\n \n pub fn oneshot<T: Send>() -> (PortOne<T>, ChanOne<T>) {\n     let (p, c) = rtcomm::oneshot();\n     (PortOne { x: p }, ChanOne { x: c })\n }\n \n-pub struct Port<T> { priv x: rtcomm::Port<T> }\n-pub struct Chan<T> { priv x: rtcomm::Chan<T> }\n+pub struct Port<T> { /* priv */ x: rtcomm::Port<T> }\n+pub struct Chan<T> { /* priv */ x: rtcomm::Chan<T> }\n \n pub fn stream<T: Send>() -> (Port<T>, Chan<T>) {\n     let (p, c) = rtcomm::stream();\n@@ -184,7 +185,7 @@ impl<T: Send> Peekable<T> for Port<T> {\n }\n \n \n-pub struct SharedChan<T> { priv x: rtcomm::SharedChan<T> }\n+pub struct SharedChan<T> { /* priv */ x: rtcomm::SharedChan<T> }\n \n impl<T: Send> SharedChan<T> {\n     pub fn new(c: Chan<T>) -> SharedChan<T> {\n@@ -226,7 +227,7 @@ impl<T: Send> Clone for SharedChan<T> {\n     }\n }\n \n-pub struct SharedPort<T> { priv x: rtcomm::SharedPort<T> }\n+pub struct SharedPort<T> { /* priv */ x: rtcomm::SharedPort<T> }\n \n impl<T: Send> SharedPort<T> {\n     pub fn new(p: Port<T>) -> SharedPort<T> {"}]}