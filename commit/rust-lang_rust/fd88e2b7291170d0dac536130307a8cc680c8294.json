{"sha": "fd88e2b7291170d0dac536130307a8cc680c8294", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkODhlMmI3MjkxMTcwZDBkYWM1MzYxMzAzMDdhOGNjNjgwYzgyOTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T03:28:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T03:28:00Z"}, "message": "syntax: Parse global paths in patterns\n\nCloses #6449", "tree": {"sha": "c35b662d096e00957887bfe920620c700ab4d651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35b662d096e00957887bfe920620c700ab4d651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd88e2b7291170d0dac536130307a8cc680c8294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd88e2b7291170d0dac536130307a8cc680c8294", "html_url": "https://github.com/rust-lang/rust/commit/fd88e2b7291170d0dac536130307a8cc680c8294", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd88e2b7291170d0dac536130307a8cc680c8294/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e546452727379f701f2104eb826141a29d4b39fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e546452727379f701f2104eb826141a29d4b39fd", "html_url": "https://github.com/rust-lang/rust/commit/e546452727379f701f2104eb826141a29d4b39fd"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "5829f63b2c531bff38cb09db77b1e15f38547dba", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd88e2b7291170d0dac536130307a8cc680c8294/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd88e2b7291170d0dac536130307a8cc680c8294/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=fd88e2b7291170d0dac536130307a8cc680c8294", "patch": "@@ -2920,7 +2920,7 @@ impl<'a> Parser<'a> {\n           _ => {}\n         }\n \n-        if !is_ident_or_path(&self.token)\n+        if (!is_ident_or_path(&self.token) && self.token != token::MOD_SEP)\n                 || self.is_keyword(keywords::True)\n                 || self.is_keyword(keywords::False) {\n             // Parse an expression pattern or exp .. exp."}, {"sha": "48e2890b2594fbd231f05f2e2af080b31a533826", "filename": "src/test/run-pass/issue-6449.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fd88e2b7291170d0dac536130307a8cc680c8294/src%2Ftest%2Frun-pass%2Fissue-6449.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd88e2b7291170d0dac536130307a8cc680c8294/src%2Ftest%2Frun-pass%2Fissue-6449.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6449.rs?ref=fd88e2b7291170d0dac536130307a8cc680c8294", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar(int),\n+    Baz,\n+}\n+\n+enum Other {\n+    Other1(Foo),\n+    Other2(Foo, Foo),\n+}\n+\n+fn main() {\n+    match Baz {\n+        ::Bar(3) => fail!(),\n+        ::Bar(_) if false => fail!(),\n+        ::Bar(..) if false => fail!(),\n+        ::Bar(_n) => fail!(),\n+        ::Baz => {}\n+    }\n+    match Bar(3) {\n+        ::Bar(3) => {}\n+        ::Bar(_) if false => fail!(),\n+        ::Bar(..) if false => fail!(),\n+        ::Bar(_n) => fail!(),\n+        ::Baz => fail!(),\n+    }\n+    match Bar(4) {\n+        ::Bar(3) => fail!(),\n+        ::Bar(_) if false => fail!(),\n+        ::Bar(..) if false => fail!(),\n+        ::Bar(n) => assert_eq!(n, 4),\n+        ::Baz => fail!(),\n+    }\n+\n+    match Other1(Baz) {\n+        ::Other1(::Baz) => {}\n+        ::Other1(::Bar(_)) => {}\n+        ::Other2(::Baz, ::Bar(_)) => {}\n+        ::Other2(::Bar(..), ::Baz) => {}\n+        ::Other2(..) => {}\n+    }\n+}"}]}