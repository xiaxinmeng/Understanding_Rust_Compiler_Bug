{"sha": "6b895b8267e72575d73055d5a64b19b7ba801a1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiODk1YjgyNjdlNzI1NzVkNzMwNTVkNWE2NGIxOWI3YmE4MDFhMWE=", "commit": {"author": {"name": "Maxwell Anderson", "email": "maxwell.brayden.anderson@gmail.com", "date": "2018-10-31T22:39:12Z"}, "committer": {"name": "Maxwell Anderson", "email": "maxwell.brayden.anderson@gmail.com", "date": "2018-10-31T22:39:12Z"}, "message": "Revert \"small fix\"\n\nThis reverts commit b1abc81a60e05bb2cf46850b977b7fa4ba34a6de.", "tree": {"sha": "1ccb642bc844ba3af0fd82418c44c440ab950e7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ccb642bc844ba3af0fd82418c44c440ab950e7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b895b8267e72575d73055d5a64b19b7ba801a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b895b8267e72575d73055d5a64b19b7ba801a1a", "html_url": "https://github.com/rust-lang/rust/commit/6b895b8267e72575d73055d5a64b19b7ba801a1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b895b8267e72575d73055d5a64b19b7ba801a1a/comments", "author": {"login": "Zaechus", "id": 19353212, "node_id": "MDQ6VXNlcjE5MzUzMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/19353212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zaechus", "html_url": "https://github.com/Zaechus", "followers_url": "https://api.github.com/users/Zaechus/followers", "following_url": "https://api.github.com/users/Zaechus/following{/other_user}", "gists_url": "https://api.github.com/users/Zaechus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zaechus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zaechus/subscriptions", "organizations_url": "https://api.github.com/users/Zaechus/orgs", "repos_url": "https://api.github.com/users/Zaechus/repos", "events_url": "https://api.github.com/users/Zaechus/events{/privacy}", "received_events_url": "https://api.github.com/users/Zaechus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zaechus", "id": 19353212, "node_id": "MDQ6VXNlcjE5MzUzMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/19353212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zaechus", "html_url": "https://github.com/Zaechus", "followers_url": "https://api.github.com/users/Zaechus/followers", "following_url": "https://api.github.com/users/Zaechus/following{/other_user}", "gists_url": "https://api.github.com/users/Zaechus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zaechus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zaechus/subscriptions", "organizations_url": "https://api.github.com/users/Zaechus/orgs", "repos_url": "https://api.github.com/users/Zaechus/repos", "events_url": "https://api.github.com/users/Zaechus/events{/privacy}", "received_events_url": "https://api.github.com/users/Zaechus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183e19a1c3de4b219b80c8871d83009d031d4b54", "url": "https://api.github.com/repos/rust-lang/rust/commits/183e19a1c3de4b219b80c8871d83009d031d4b54", "html_url": "https://github.com/rust-lang/rust/commit/183e19a1c3de4b219b80c8871d83009d031d4b54"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "357f344919fc39850658d25ed347fdf2c31cfe5c", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b895b8267e72575d73055d5a64b19b7ba801a1a/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b895b8267e72575d73055d5a64b19b7ba801a1a/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=6b895b8267e72575d73055d5a64b19b7ba801a1a", "patch": "@@ -229,8 +229,8 @@ impl<'a> DigitInfo<'a> {\n                 None => String::new(),\n             };\n             format!(\"{}.{}{}\", int_part_hint, frac_part_hint, suffix_hint)\n-        } else if self.float && (self.digits.contains('E') || self.digits.contains('e')) {\n-            let which_e = if self.digits.contains('E') { 'E' } else { 'e' };\n+        } else if self.float && (self.digits.contains(\"E\") || self.digits.contains(\"E\")) {\n+            let which_e = if self.digits.contains(\"E\") { \"E\" } else { \"e\" };\n             let parts: Vec<&str> = self.digits.split(which_e).collect();\n             let filtered_digits_vec_0 = parts[0].chars().filter(|&c| c != '_').rev().collect::<Vec<_>>();\n             let filtered_digits_vec_1 = parts[1].chars().filter(|&c| c != '_').rev().collect::<Vec<_>>();"}]}