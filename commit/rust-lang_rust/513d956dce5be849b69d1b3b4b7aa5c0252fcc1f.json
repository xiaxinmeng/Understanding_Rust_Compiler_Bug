{"sha": "513d956dce5be849b69d1b3b4b7aa5c0252fcc1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxM2Q5NTZkY2U1YmU4NDliNjlkMWIzYjRiN2FhNWMwMjUyZmNjMWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T23:01:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T01:16:25Z"}, "message": "rustdoc: Run pandoc in a way that won't deadlock waiting for IO", "tree": {"sha": "5943243f96d5b5893658c27a59c37bd5162b36d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5943243f96d5b5893658c27a59c37bd5162b36d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f", "html_url": "https://github.com/rust-lang/rust/commit/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc0b9f44e2731dec413d69997ad093962deb665e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0b9f44e2731dec413d69997ad093962deb665e", "html_url": "https://github.com/rust-lang/rust/commit/dc0b9f44e2731dec413d69997ad093962deb665e"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "c1a59453f889fcc527ddd53f88ff6c241d1ed0df", "filename": "src/rustdoc/markdown_writer.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f/src%2Frustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513d956dce5be849b69d1b3b4b7aa5c0252fcc1f/src%2Frustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_writer.rs?ref=513d956dce5be849b69d1b3b4b7aa5c0252fcc1f", "patch": "@@ -101,12 +101,19 @@ fn pandoc_writer(\n         os::close(pipe_err.out);\n         os::close(pipe_in.out);\n \n-        let stdout = result::get(task::try {||\n-            readclose(pipe_out.in)\n-        });\n-        let stderr = result::get(task::try {||\n-            readclose(pipe_err.in)\n-        });\n+        let stdout_po = comm::port();\n+        let stdout_ch = comm::chan(stdout_po);\n+        task::spawn_sched(task::single_threaded) {||\n+            comm::send(stdout_ch, readclose(pipe_out.in));\n+        }\n+        let stdout = comm::recv(stdout_po);\n+\n+        let stderr_po = comm::port();\n+        let stderr_ch = comm::chan(stderr_po);\n+        task::spawn_sched(task::single_threaded) {||\n+            comm::send(stderr_ch, readclose(pipe_err.in));\n+        }\n+        let stderr = comm::recv(stderr_po);\n \n         let status = run::waitpid(pid);\n         #debug(\"pandoc result: %i\", status);"}]}