{"sha": "4a219685ffd622421e5eb9609dda7a8508a478c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMjE5Njg1ZmZkNjIyNDIxZTVlYjk2MDlkZGE3YTg1MDhhNDc4YzY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-11T09:50:17Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-11T11:11:59Z"}, "message": "rustdoc: deny(unused_lifetimes).", "tree": {"sha": "ded07cb20ee6ea95b37980385c55e3e4db87a1dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded07cb20ee6ea95b37980385c55e3e4db87a1dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a219685ffd622421e5eb9609dda7a8508a478c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a219685ffd622421e5eb9609dda7a8508a478c6", "html_url": "https://github.com/rust-lang/rust/commit/4a219685ffd622421e5eb9609dda7a8508a478c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a219685ffd622421e5eb9609dda7a8508a478c6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ee1814062b4acfe11abb312c55a092ca694aef9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee1814062b4acfe11abb312c55a092ca694aef9", "html_url": "https://github.com/rust-lang/rust/commit/8ee1814062b4acfe11abb312c55a092ca694aef9"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "7b58312a5edef70ad55a04e8a2f76617ca901602", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=4a219685ffd622421e5eb9609dda7a8508a478c6", "patch": "@@ -341,7 +341,7 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n             .collect()\n     }\n \n-    fn make_final_bounds<'b, 'c, 'cx>(\n+    fn make_final_bounds(\n         &self,\n         ty_to_bounds: FxHashMap<Type, FxHashSet<GenericBound>>,\n         ty_to_fn: FxHashMap<Type, (Option<PolyTrait>, Option<Type>)>,"}, {"sha": "e44c35b55ffadca8325835d77034d3cfd98fe2e7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=4a219685ffd622421e5eb9609dda7a8508a478c6", "patch": "@@ -1298,7 +1298,7 @@ impl Clean<Constant> for hir::ConstArg {\n     }\n }\n \n-impl<'tcx> Clean<Lifetime> for ty::GenericParamDef {\n+impl Clean<Lifetime> for ty::GenericParamDef {\n     fn clean(&self, _cx: &DocContext<'_>) -> Lifetime {\n         Lifetime(self.name.to_string())\n     }\n@@ -2039,7 +2039,7 @@ impl<'a, A: Copy> Clean<FnDecl> for (&'a hir::FnDecl, A)\n     }\n }\n \n-impl<'a, 'tcx> Clean<FnDecl> for (DefId, ty::PolyFnSig<'tcx>) {\n+impl<'tcx> Clean<FnDecl> for (DefId, ty::PolyFnSig<'tcx>) {\n     fn clean(&self, cx: &DocContext<'_>) -> FnDecl {\n         let (did, sig) = *self;\n         let mut names = if cx.tcx.hir().as_local_hir_id(did).is_some() {\n@@ -2276,7 +2276,7 @@ impl Clean<Item> for hir::ImplItem {\n     }\n }\n \n-impl<'tcx> Clean<Item> for ty::AssocItem {\n+impl Clean<Item> for ty::AssocItem {\n     fn clean(&self, cx: &DocContext<'_>) -> Item {\n         let inner = match self.kind {\n             ty::AssocKind::Const => {\n@@ -3174,7 +3174,7 @@ impl Clean<Item> for hir::StructField {\n     }\n }\n \n-impl<'tcx> Clean<Item> for ty::FieldDef {\n+impl Clean<Item> for ty::FieldDef {\n     fn clean(&self, cx: &DocContext<'_>) -> Item {\n         Item {\n             name: Some(self.ident.name).clean(cx),\n@@ -3342,7 +3342,7 @@ impl Clean<Item> for doctree::Variant {\n     }\n }\n \n-impl<'tcx> Clean<Item> for ty::VariantDef {\n+impl Clean<Item> for ty::VariantDef {\n     fn clean(&self, cx: &DocContext<'_>) -> Item {\n         let kind = match self.ctor_kind {\n             CtorKind::Const => VariantKind::CLike,"}, {"sha": "362706820593e7137bd8ce982788c02045b916d9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=4a219685ffd622421e5eb9609dda7a8508a478c6", "patch": "@@ -1764,7 +1764,7 @@ impl DocFolder for Cache {\n     }\n }\n \n-impl<'a> Cache {\n+impl Cache {\n     fn generics(&mut self, generics: &clean::Generics) {\n         for param in &generics.params {\n             match param.kind {"}, {"sha": "3b4d65352a34c69c1540c662bd3a06d5b9f359d6", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a219685ffd622421e5eb9609dda7a8508a478c6/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=4a219685ffd622421e5eb9609dda7a8508a478c6", "patch": "@@ -1,5 +1,6 @@\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n+#![deny(unused_lifetimes)]\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\")]"}]}