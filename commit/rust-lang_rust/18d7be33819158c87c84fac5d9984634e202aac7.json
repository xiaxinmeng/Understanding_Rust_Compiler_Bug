{"sha": "18d7be33819158c87c84fac5d9984634e202aac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZDdiZTMzODE5MTU4Yzg3Yzg0ZmFjNWQ5OTg0NjM0ZTIwMmFhYzc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-10T16:53:05Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-10T16:53:05Z"}, "message": "Rollup merge of #48120 - matthiaskrgr:typos_src_1, r=alexcrichton\n\nfix typos in src/{bootstrap,ci,etc,lib{backtrace,core,fmt_macros}}\n\nvia codespell", "tree": {"sha": "824aeebcf4504eddbc4af366f2ca86e4d10ff233", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824aeebcf4504eddbc4af366f2ca86e4d10ff233"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18d7be33819158c87c84fac5d9984634e202aac7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlp/I4cACgkQ/vbIBR0O\nATy/7BAAv7uDoYKydGKHYtO8hWyxRhCMPk+h6eTm8n/EY4hlE5c3Ybo5yDpq3nkc\nifmj10zHZnxQwlAFj/jThUfyD706qOEf2+0B5tBdcYny1COSCj6eINIwhjq4LkYk\nJpBwKoWOwIERLP8g7XjGTOPjwIfjjO4fYXI/q7gSQh/Y5zK0fhW+qo4D6OhN6acy\njPFWodtYSyRPIG6qmuv8Jp6b/nCv+2pzDlTS1inQkcQOnF5l5L5k/VPR0nUM4VMc\nX+faF9TNC8TJoVktLmWVPzq6rHkW42BOIByex3sO1PYtU/4/8sPwDhzJrMBUAno7\nv/vcgWVALgPDYFMdPubonBJHMQGRwzh2ooQljHzfR0APsmqqRzBRsDN4jB0jxjiV\n8xOpjIA9eOwtc8nWHwSAPOZACGl3aPzAgWRF0YfOsjKUMFWybadWLjFvUpOT6TuV\nMfJLQrK0u7gp8QE8L3nDuMYe9S1N1IoeSVAdG44x+RsljjukUrjjdgfN1dMon6k7\njFlHtarVVkd4sIodtj5JilKyJRnKjqGQPJI82MZdQvtvWU388yglp1UMlKy5kJ57\nDG4rtX9ruw9e89Ryl4SnZxOFkeDnGZGF7mhq/5N0iIOSVdJ4P3DMYso0ia+2iGcV\nRKtAn698jDiB5Z3lwUM2WxWe2AQmUWNDvq4jK84xXHZ/Oa3F/Lc=\n=Rqr2\n-----END PGP SIGNATURE-----", "payload": "tree 824aeebcf4504eddbc4af366f2ca86e4d10ff233\nparent c888f723042c4f5d285e6c80acd9a18a343a2142\nparent 7ee3e39f640a9532842e1441bf6bc98893b6a3ba\nauthor kennytm <kennytm@gmail.com> 1518281585 +0800\ncommitter kennytm <kennytm@gmail.com> 1518281585 +0800\n\nRollup merge of #48120 - matthiaskrgr:typos_src_1, r=alexcrichton\n\nfix typos in src/{bootstrap,ci,etc,lib{backtrace,core,fmt_macros}}\n\nvia codespell\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18d7be33819158c87c84fac5d9984634e202aac7", "html_url": "https://github.com/rust-lang/rust/commit/18d7be33819158c87c84fac5d9984634e202aac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18d7be33819158c87c84fac5d9984634e202aac7/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c888f723042c4f5d285e6c80acd9a18a343a2142", "url": "https://api.github.com/repos/rust-lang/rust/commits/c888f723042c4f5d285e6c80acd9a18a343a2142", "html_url": "https://github.com/rust-lang/rust/commit/c888f723042c4f5d285e6c80acd9a18a343a2142"}, {"sha": "7ee3e39f640a9532842e1441bf6bc98893b6a3ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee3e39f640a9532842e1441bf6bc98893b6a3ba", "html_url": "https://github.com/rust-lang/rust/commit/7ee3e39f640a9532842e1441bf6bc98893b6a3ba"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "74dd4a6fa01442672ed0955a6d7933da4a35d2b3", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -570,7 +570,7 @@ impl<'a> Builder<'a> {\n         // build scripts in that situation.\n         //\n         // If LLVM support is disabled we need to use the snapshot compiler to compile\n-        // build scripts, as the new compiler doesnt support executables.\n+        // build scripts, as the new compiler doesn't support executables.\n         if mode == Mode::Libstd || !self.build.config.llvm_enabled {\n             cargo.env(\"RUSTC_SNAPSHOT\", &self.initial_rustc)\n                  .env(\"RUSTC_SNAPSHOT_LIBDIR\", self.rustc_snapshot_libdir());"}, {"sha": "83c270865c0b75cc0c55c36488aef06fbc501d34", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -666,7 +666,7 @@ impl Build {\n         }\n     }\n \n-    /// Returns the path to the linker for the given target if it needs to be overriden.\n+    /// Returns the path to the linker for the given target if it needs to be overridden.\n     fn linker(&self, target: Interned<String>) -> Option<&Path> {\n         if let Some(linker) = self.config.target_config.get(&target)\n                                                        .and_then(|c| c.linker.as_ref()) {"}, {"sha": "f6b95f0bf97441200d1dd7b46155704d6e2b1bf2", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -902,7 +902,7 @@ impl Step for Compiletest {\n             }\n         }\n         if suite == \"run-make\" && !build.config.llvm_enabled {\n-            println!(\"Ignoring run-make test suite as they generally dont work without LLVM\");\n+            println!(\"Ignoring run-make test suite as they generally don't work without LLVM\");\n             return;\n         }\n "}, {"sha": "e730dd86087fbd62d9b8526a4ff9251b53c89e0a", "filename": "src/ci/docker/dist-x86_64-netbsd/build-netbsd-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -54,7 +54,7 @@ cd usr/src\n # The options, in order, do the following\n # * this is an unprivileged build\n # * output to a predictable location\n-# * disable various uneeded stuff\n+# * disable various unneeded stuff\n MKUNPRIVED=yes TOOLDIR=/x-tools/x86_64-unknown-netbsd \\\n MKSHARE=no MKDOC=no MKHTML=no MKINFO=no MKKMOD=no MKLINT=no MKMAN=no MKNLS=no MKPROFILE=no \\\n hide_output ./build.sh -j10 -m amd64 tools"}, {"sha": "a471ccc6f5b48ef3748d8ec6fa840384758033de", "filename": "src/etc/installer/msi/rust.wxs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -18,7 +18,7 @@\n     <!-- Upgrade code should be different for each platform -->\n     <?if $(sys.BUILDARCH)=\"x64\" ?>\n         <?if $(env.CFG_ABI)=\"GNU\" ?>\n-            <!-- UpgradeCode shoud stay the same for all MSI versions in channel -->\n+            <!-- UpgradeCode should stay the same for all MSI versions in channel -->\n             <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n                 <?define UpgradeCode=\"B440B077-F8D1-4730-8E1D-D6D37702B4CE\" ?>\n             <?elseif $(env.CFG_CHANNEL)=\"beta\" ?>\n@@ -129,7 +129,7 @@\n \n         <!-- Path of cmd.exe for the shortcut -->\n         <Property Id=\"SHORTCUTTARGET\" Value=\"%windir%\\System32\\cmd.exe\" />\n-        <!-- Microsoft Installer will resolve any Enviroment Variables in the working directory at install time -->\n+        <!-- Microsoft Installer will resolve any Environment Variables in the working directory at install time -->\n         <Property Id=\"SHORTCUTWKDIR\" Value=\"%SystemDrive%\\\" />\n \n         <InstallUISequence>"}, {"sha": "d9f78978a251e078f55d8905f99f1e63b510d66f", "filename": "src/etc/platform-intrinsics/generator.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -591,7 +591,7 @@ def parse_args():\n         The X86 architecture is specified as multiple files (for the different\n         instruction sets that x86 supports). To generate the compiler\n         definitions one needs to pass the script a \"platform information file\"\n-        (with the -i flag) next to the files of the different intruction sets.\n+        (with the -i flag) next to the files of the different instruction sets.\n         For example, to generate the X86 compiler-definitions for SSE4.2, just:\n \n         python generator.py --format compiler-defs -i x86/info.json sse42.json"}, {"sha": "e9f5bba2312d823fe2f1d48ad9a3e0972c0482fc", "filename": "src/etc/test-float-parse/runtests.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fruntests.py?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -41,7 +41,7 @@\n (as a fraction, using the ``fractions`` module).\n \n Given an input string and the corresponding float computed via Rust, simply\n-decode the float into f * 2^k (for intergers f, k) and the ULP.\n+decode the float into f * 2^k (for integers f, k) and the ULP.\n We can now easily compute the error and check if it is within 0.5 ULP as it\n should be. Zero and infinites are handled similarly:\n "}, {"sha": "fd23815fc617a5cb8f77cdc4e95a3d177db97cbb", "filename": "src/libbacktrace/ltmain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibbacktrace%2Fltmain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibbacktrace%2Fltmain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fltmain.sh?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -487,7 +487,7 @@ func_mkdir_p ()\n       # While some portion of DIR does not yet exist...\n       while test ! -d \"$my_directory_path\"; do\n         # ...make a list in topmost first order.  Use a colon delimited\n-\t# list incase some portion of path contains whitespace.\n+\t# list in case some portion of path contains whitespace.\n         my_dir_list=\"$my_directory_path:$my_dir_list\"\n \n         # If the last portion added has no slash in it, the list is done"}, {"sha": "ba7f94c079f8a8e3c227093524d8a725b1978ae9", "filename": "src/libbacktrace/macho.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibbacktrace%2Fmacho.c", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibbacktrace%2Fmacho.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fmacho.c?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -327,7 +327,7 @@ macho_get_commands (struct backtrace_state *state, int descriptor,\n         goto end;\n       file_header_view_valid = 1;\n \n-      // The endianess of the slice may be different than the fat image\n+      // The endianness of the slice may be different than the fat image\n       switch (*(uint32_t *) file_header_view.data)\n         {\n           case MH_MAGIC:"}, {"sha": "cc5cf6523a9e74bce160fd2da89a6b510c9b3a0a", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -327,7 +327,7 @@ macro_rules! debug_assert_ne {\n ///     }\n /// }\n ///\n-/// // The prefered method of quick returning Errors\n+/// // The preferred method of quick returning Errors\n /// fn write_to_file_question() -> Result<(), MyError> {\n ///     let mut file = File::create(\"my_best_friends.txt\")?;\n ///     file.write_all(b\"This is a list of my best friends.\")?;"}, {"sha": "71519ab21fef99d60ae47e3f55a11b26d3f752d7", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d7be33819158c87c84fac5d9984634e202aac7/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=18d7be33819158c87c84fac5d9984634e202aac7", "patch": "@@ -73,7 +73,7 @@ pub struct FormatSpec<'a> {\n /// Enum describing where an argument for a format can be located.\n #[derive(Copy, Clone, PartialEq)]\n pub enum Position<'a> {\n-    /// The arugment is implied to be located at an index\n+    /// The argument is implied to be located at an index\n     ArgumentImplicitlyIs(usize),\n     /// The argument is located at a specific index given in the format\n     ArgumentIs(usize),"}]}