{"sha": "ba611d55f39909f4c4da43fe96a275c4746c38d1", "node_id": "C_kwDOAAsO6NoAKGJhNjExZDU1ZjM5OTA5ZjRjNGRhNDNmZTk2YTI3NWM0NzQ2YzM4ZDE", "commit": {"author": {"name": "Zachary S", "email": "zasample18+github@gmail.com", "date": "2022-03-16T16:36:31Z"}, "committer": {"name": "Zachary S", "email": "zasample18+github@gmail.com", "date": "2022-03-16T16:36:31Z"}, "message": "Derive Eq for std::cmp::Ordering, instead of using manual impl.\n\nThis allows consts of type Ordering to be used in patterns, and (with feature(adt_const_params)) allows using Orderings as const generic parameters.", "tree": {"sha": "7c0fcd28c56c6ce9aa76ed9bb932eabf89762d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0fcd28c56c6ce9aa76ed9bb932eabf89762d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba611d55f39909f4c4da43fe96a275c4746c38d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba611d55f39909f4c4da43fe96a275c4746c38d1", "html_url": "https://github.com/rust-lang/rust/commit/ba611d55f39909f4c4da43fe96a275c4746c38d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba611d55f39909f4c4da43fe96a275c4746c38d1/comments", "author": {"login": "zachs18", "id": 8355914, "node_id": "MDQ6VXNlcjgzNTU5MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8355914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachs18", "html_url": "https://github.com/zachs18", "followers_url": "https://api.github.com/users/zachs18/followers", "following_url": "https://api.github.com/users/zachs18/following{/other_user}", "gists_url": "https://api.github.com/users/zachs18/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachs18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachs18/subscriptions", "organizations_url": "https://api.github.com/users/zachs18/orgs", "repos_url": "https://api.github.com/users/zachs18/repos", "events_url": "https://api.github.com/users/zachs18/events{/privacy}", "received_events_url": "https://api.github.com/users/zachs18/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zachs18", "id": 8355914, "node_id": "MDQ6VXNlcjgzNTU5MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8355914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachs18", "html_url": "https://github.com/zachs18", "followers_url": "https://api.github.com/users/zachs18/followers", "following_url": "https://api.github.com/users/zachs18/following{/other_user}", "gists_url": "https://api.github.com/users/zachs18/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachs18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachs18/subscriptions", "organizations_url": "https://api.github.com/users/zachs18/orgs", "repos_url": "https://api.github.com/users/zachs18/repos", "events_url": "https://api.github.com/users/zachs18/events{/privacy}", "received_events_url": "https://api.github.com/users/zachs18/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "461e8078010433ff7de2db2aaae8a3cfb0847215", "url": "https://api.github.com/repos/rust-lang/rust/commits/461e8078010433ff7de2db2aaae8a3cfb0847215", "html_url": "https://github.com/rust-lang/rust/commit/461e8078010433ff7de2db2aaae8a3cfb0847215"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "74328a3607d6447da45a261e05f1d80b7a05dbbc", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba611d55f39909f4c4da43fe96a275c4746c38d1/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba611d55f39909f4c4da43fe96a275c4746c38d1/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=ba611d55f39909f4c4da43fe96a275c4746c38d1", "patch": "@@ -333,7 +333,7 @@ pub struct AssertParamIsEq<T: Eq + ?Sized> {\n /// let result = 2.cmp(&1);\n /// assert_eq!(Ordering::Greater, result);\n /// ```\n-#[derive(Clone, Copy, PartialEq, Debug, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[repr(i8)]\n pub enum Ordering {\n@@ -861,9 +861,6 @@ pub macro Ord($item:item) {\n     /* compiler built-in */\n }\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl Eq for Ordering {}\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ordering {\n     #[inline]"}]}