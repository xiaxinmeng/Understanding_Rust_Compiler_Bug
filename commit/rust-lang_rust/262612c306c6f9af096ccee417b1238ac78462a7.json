{"sha": "262612c306c6f9af096ccee417b1238ac78462a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MjYxMmMzMDZjNmY5YWYwOTZjY2VlNDE3YjEyMzhhYzc4NDYyYTc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-08T05:39:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-08T05:39:04Z"}, "message": "Rollup merge of #45083 - fhartwig:slice-read-to-end, r=bluss\n\nAdd read_to_end implementation to &[u8]'s Read impl\n\nThe default impl for read_to_end does a bunch of bookkeeping\nthat isn't necessary for slices and is about 4 times slower\non my machine.\n\nThe following benchmark takes about 30 ns before this change and about 7 ns after:\n\n```\n#[bench]\nfn bench_read_std(b: &mut Bencher) {\n    let data = vec![0u8; 100];\n    let mut v = Vec::with_capacity(200);\n    b.iter(|| {\n        let mut s = data.as_slice();\n        v.clear();\n        s.read_to_end(&mut v).unwrap();\n    });\n}\n```\n\nThis solves the easy part of  https://github.com/rust-lang/rust/issues/44819 (I think extending this to `Take<&[u8]> `would require specialization)", "tree": {"sha": "08d05385b7ace01dc86568ac71b578d719927c78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08d05385b7ace01dc86568ac71b578d719927c78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/262612c306c6f9af096ccee417b1238ac78462a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/262612c306c6f9af096ccee417b1238ac78462a7", "html_url": "https://github.com/rust-lang/rust/commit/262612c306c6f9af096ccee417b1238ac78462a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/262612c306c6f9af096ccee417b1238ac78462a7/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "html_url": "https://github.com/rust-lang/rust/commit/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0"}, {"sha": "d52acbe37f69a2ebc9d161c479ed628da1cbea4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d52acbe37f69a2ebc9d161c479ed628da1cbea4e", "html_url": "https://github.com/rust-lang/rust/commit/d52acbe37f69a2ebc9d161c479ed628da1cbea4e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fe1179a3b4a18ba56950ce8dab415970b9a801c5", "filename": "src/libstd/io/impls.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/262612c306c6f9af096ccee417b1238ac78462a7/src%2Flibstd%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/262612c306c6f9af096ccee417b1238ac78462a7/src%2Flibstd%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fimpls.rs?ref=262612c306c6f9af096ccee417b1238ac78462a7", "patch": "@@ -206,6 +206,14 @@ impl<'a> Read for &'a [u8] {\n         *self = b;\n         Ok(())\n     }\n+\n+    #[inline]\n+    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> io::Result<usize> {\n+        buf.extend_from_slice(*self);\n+        let len = self.len();\n+        *self = &self[len..];\n+        Ok(len)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}