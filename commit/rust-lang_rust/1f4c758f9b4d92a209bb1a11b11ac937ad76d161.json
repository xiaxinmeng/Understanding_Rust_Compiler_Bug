{"sha": "1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNGM3NThmOWI0ZDkyYTIwOWJiMWExMWIxMWFjOTM3YWQ3NmQxNjE=", "commit": {"author": {"name": "Seth Pink", "email": "sethpink@gmail.com", "date": "2013-02-16T22:54:34Z"}, "committer": {"name": "Seth Pink", "email": "sethpink@gmail.com", "date": "2013-02-17T01:02:23Z"}, "message": "Remove use of capture clause #4965", "tree": {"sha": "9cc46febef3e3566db434c5612aa65573a837505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc46febef3e3566db434c5612aa65573a837505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "html_url": "https://github.com/rust-lang/rust/commit/1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/comments", "author": {"login": "sp0", "id": 1902223, "node_id": "MDQ6VXNlcjE5MDIyMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1902223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp0", "html_url": "https://github.com/sp0", "followers_url": "https://api.github.com/users/sp0/followers", "following_url": "https://api.github.com/users/sp0/following{/other_user}", "gists_url": "https://api.github.com/users/sp0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp0/subscriptions", "organizations_url": "https://api.github.com/users/sp0/orgs", "repos_url": "https://api.github.com/users/sp0/repos", "events_url": "https://api.github.com/users/sp0/events{/privacy}", "received_events_url": "https://api.github.com/users/sp0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sp0", "id": 1902223, "node_id": "MDQ6VXNlcjE5MDIyMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1902223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp0", "html_url": "https://github.com/sp0", "followers_url": "https://api.github.com/users/sp0/followers", "following_url": "https://api.github.com/users/sp0/following{/other_user}", "gists_url": "https://api.github.com/users/sp0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp0/subscriptions", "organizations_url": "https://api.github.com/users/sp0/orgs", "repos_url": "https://api.github.com/users/sp0/repos", "events_url": "https://api.github.com/users/sp0/events{/privacy}", "received_events_url": "https://api.github.com/users/sp0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "945ac428b8d254368521ab3a3f7fb63482dc3aa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/945ac428b8d254368521ab3a3f7fb63482dc3aa0", "html_url": "https://github.com/rust-lang/rust/commit/945ac428b8d254368521ab3a3f7fb63482dc3aa0"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "b9dbe523fdd331ec06842bfb057ae91214f23ccb", "filename": "src/librustdoc/text_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftext_pass.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -76,7 +76,7 @@ fn apply_to_sections(\n     op: NominalOp<Op>,\n     sections: ~[doc::Section]\n ) -> ~[doc::Section] {\n-    sections.map(|section, copy op| doc::Section {\n+    sections.map(|section| doc::Section {\n         header: (op.op)(copy section.header),\n         body: (op.op)(copy section.body)\n     })\n@@ -89,7 +89,7 @@ fn fold_enum(\n     let fold_copy = copy *fold;\n \n     doc::EnumDoc {\n-        variants: do doc.variants.map |variant, copy fold_copy| {\n+        variants: do doc.variants.map |variant| {\n             doc::VariantDoc {\n                 desc: maybe_apply_op(copy fold_copy.ctxt, &variant.desc),\n                 .. copy *variant"}, {"sha": "b39cee875251aae0b188553b07ba2184b4450066", "filename": "src/librustdoc/tystr_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftystr_pass.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -137,7 +137,7 @@ fn fold_enum(\n         variants: do vec::map(doc.variants) |variant| {\n             let sig = {\n                 let variant = copy *variant;\n-                do astsrv::exec(srv.clone()) |copy variant, ctxt| {\n+                do astsrv::exec(srv.clone()) |ctxt| {\n                     match ctxt.ast_map.get(&doc_id) {\n                         ast_map::node_item(@ast::item {\n                             node: ast::item_enum(ref enum_definition, _), _\n@@ -198,7 +198,7 @@ fn get_method_sig(\n     item_id: doc::AstId,\n     method_name: ~str\n ) -> Option<~str> {\n-    do astsrv::exec(srv) |copy method_name, ctxt| {\n+    do astsrv::exec(srv) |ctxt| {\n         match ctxt.ast_map.get(&item_id) {\n           ast_map::node_item(@ast::item {\n             node: ast::item_trait(_, _, ref methods), _"}, {"sha": "cd479aadb256183be5d0b9f053c5640891107098", "filename": "src/librusti/rusti.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrusti%2Frusti.rc", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibrusti%2Frusti.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rc?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -368,7 +368,7 @@ fn run_line(repl: &mut Repl, in: io::Reader, out: io::Writer, line: ~str)\n     }\n \n     let r = *repl;\n-    let result = do task::try |copy r| {\n+    let result = do task::try {\n         run(r, line)\n     };\n "}, {"sha": "ff81393a914db527d90d1c8c191f92cd059e27c3", "filename": "src/libstd/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibstd%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Flibstd%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffuture.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -202,7 +202,7 @@ pub mod test {\n     #[test]\n     pub fn test_sendable_future() {\n         let expected = ~\"schlorf\";\n-        let f = do spawn |copy expected| { copy expected };\n+        let f = do spawn { copy expected };\n         do task::spawn || {\n             let actual = f.get();\n             assert actual == expected;"}, {"sha": "70a2b8f680a5c5f5025e7d3c1460d0dbeaff8d8e", "filename": "src/test/auxiliary/cci_capture_clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_capture_clause.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -12,7 +12,7 @@ use core::pipes::*;\n \n pub fn foo<T: Owned Copy>(x: T) -> Port<T> {\n     let (p, c) = stream();\n-    do task::spawn() |copy x| {\n+    do task::spawn() {\n         c.send(x);\n     }\n     p"}, {"sha": "b77e91c8d212c65ea828faf17ff63b3b366fefcf", "filename": "src/test/run-pass/capture_nil.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Frun-pass%2Fcapture_nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Frun-pass%2Fcapture_nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapture_nil.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -28,7 +28,7 @@ use core::pipes::*;\n \n fn foo(&&x: ()) -> Port<()> {\n     let (p, c) = stream::<()>();\n-    do task::spawn() |copy x| {\n+    do task::spawn() {\n         c.send(x);\n     }\n     p"}, {"sha": "6eb540c4737267fc0203bdebf24f9b3c363f7216", "filename": "src/test/run-pass/issue-3609.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4c758f9b4d92a209bb1a11b11ac937ad76d161/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3609.rs?ref=1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "patch": "@@ -12,7 +12,6 @@ enum Msg\n \n fn foo(name: ~str, samples_chan: Chan<Msg>) {\n     do task::spawn\n-    |copy name|\n     {\n         let callback: SamplesFn =\n             |buffer|"}]}