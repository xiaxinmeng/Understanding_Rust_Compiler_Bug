{"sha": "0f6e82db361b58d8332a1f793232cbe396d526c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNmU4MmRiMzYxYjU4ZDgzMzJhMWY3OTMyMzJjYmUzOTZkNTI2YzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-09T12:07:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-09T12:08:23Z"}, "message": "fix (un)likely intrinsics", "tree": {"sha": "e26f51259613a3c822fad86b48e37617e1830a32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e26f51259613a3c822fad86b48e37617e1830a32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f6e82db361b58d8332a1f793232cbe396d526c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6e82db361b58d8332a1f793232cbe396d526c5", "html_url": "https://github.com/rust-lang/rust/commit/0f6e82db361b58d8332a1f793232cbe396d526c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f6e82db361b58d8332a1f793232cbe396d526c5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c12ade3340d6eb411186503b604fbaa5bc69fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c12ade3340d6eb411186503b604fbaa5bc69fd", "html_url": "https://github.com/rust-lang/rust/commit/c4c12ade3340d6eb411186503b604fbaa5bc69fd"}], "stats": {"total": 72, "additions": 47, "deletions": 25}, "files": [{"sha": "09df91b3ab3885754eef9f7a00f36eb1ee24b206", "filename": "src/intrinsic.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e82db361b58d8332a1f793232cbe396d526c5/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e82db361b58d8332a1f793232cbe396d526c5/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=0f6e82db361b58d8332a1f793232cbe396d526c5", "patch": "@@ -245,7 +245,13 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                 this.binop_ignore_overflow(mir::BinOp::Div, a, b, dest)?;\n             },\n \n-            \"likely\" | \"unlikely\" | \"forget\" => {}\n+            \"forget\" => {}\n+\n+            \"likely\" | \"unlikely\" => {\n+                // These just return their argument\n+                let b = this.read_immediate(args[0])?;\n+                this.write_immediate(*b, dest)?;\n+            }\n \n             \"init\" => {\n                 // Check fast path: we don't want to force an allocation in case the destination is a simple value,"}, {"sha": "1bef21d83bda3c5e14a1bb172a02e9f278c8f70a", "filename": "tests/run-pass/iter.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e82db361b58d8332a1f793232cbe396d526c5/tests%2Frun-pass%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e82db361b58d8332a1f793232cbe396d526c5/tests%2Frun-pass%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fiter.rs?ref=0f6e82db361b58d8332a1f793232cbe396d526c5", "patch": "@@ -0,0 +1,40 @@\n+fn iter_empty_and_zst() {\n+    for _ in Vec::<u32>::new().iter() { // this iterates over a Unique::empty()\n+        panic!(\"We should never be here.\");\n+    }\n+\n+    // Iterate over a ZST (uses arith_offset internally)\n+    let mut count = 0;\n+    for _ in &[(), (), ()] {\n+        count += 1;\n+    }\n+    assert_eq!(count, 3);\n+}\n+\n+fn test_iterator_step_by_nth() {\n+    let mut it = (0..16).step_by(5);\n+    assert_eq!(it.nth(0), Some(0));\n+    assert_eq!(it.nth(0), Some(5));\n+    assert_eq!(it.nth(0), Some(10));\n+    assert_eq!(it.nth(0), Some(15));\n+    assert_eq!(it.nth(0), None);\n+}\n+\n+fn iter_any() {\n+    let f = |x: &u8| { 10u8 == *x };\n+    f(&1u8);\n+\n+    let g = |(), x: &u8| { 10u8 == *x };\n+    g((), &1u8);\n+\n+    let h = |(), (), x: &u8| { 10u8 == *x };\n+    h((), (), &1u8);\n+\n+    [1, 2, 3u8].into_iter().any(|elt| 10 == *elt);\n+}\n+\n+fn main() {\n+    test_iterator_step_by_nth();\n+    iter_any();\n+    iter_empty_and_zst();\n+}"}, {"sha": "b14eb074488b29244744dd496a86dff277c5955d", "filename": "tests/run-pass/iter_any.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c4c12ade3340d6eb411186503b604fbaa5bc69fd/tests%2Frun-pass%2Fiter_any.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4c12ade3340d6eb411186503b604fbaa5bc69fd/tests%2Frun-pass%2Fiter_any.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fiter_any.rs?ref=c4c12ade3340d6eb411186503b604fbaa5bc69fd", "patch": "@@ -1,12 +0,0 @@\n-pub fn main() {\n-    let f = |x: &u8| { 10u8 == *x };\n-    f(&1u8);\n-\n-    let g = |(), x: &u8| { 10u8 == *x };\n-    g((), &1u8);\n-\n-    let h = |(), (), x: &u8| { 10u8 == *x };\n-    h((), (), &1u8);\n-\n-    [1, 2, 3u8].into_iter().any(|elt| 10 == *elt);\n-}"}, {"sha": "fd7229c3455e4da6a491d289b056fad62c91282a", "filename": "tests/run-pass/iter_slice.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c4c12ade3340d6eb411186503b604fbaa5bc69fd/tests%2Frun-pass%2Fiter_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4c12ade3340d6eb411186503b604fbaa5bc69fd/tests%2Frun-pass%2Fiter_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fiter_slice.rs?ref=c4c12ade3340d6eb411186503b604fbaa5bc69fd", "patch": "@@ -1,12 +0,0 @@\n-fn main() {\n-    for _ in Vec::<u32>::new().iter() { // this iterates over a Unique::empty()\n-        panic!(\"We should never be here.\");\n-    }\n-\n-    // Iterate over a ZST (uses arith_offset internally)\n-    let mut count = 0;\n-    for _ in &[(), (), ()] {\n-        count += 1;\n-    }\n-    assert_eq!(count, 3);\n-}"}]}