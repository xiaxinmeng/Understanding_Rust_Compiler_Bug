{"sha": "3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNWY4YTFkYTA2MjA0YzllMjJmNTNhZDM5MzBmZGM1YzQ4ZTEzYTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T13:45:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T13:45:26Z"}, "message": "Rollup merge of #65102 - tmiasko:tsan-probe-stack, r=alexcrichton\n\nDisable stack probe when thread sanitizer is enabled\n\nWhen thread sanitizer instrumentation is enabled during compilation of\nstack probe function, the function will be miscompiled and trigger\nsegmentation fault at runtime. Disable stack probes when tsan is\nenabled.", "tree": {"sha": "1e713a8ce44d9ab18ce9d6c5ae473722ed592d98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e713a8ce44d9ab18ce9d6c5ae473722ed592d98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdnJL2CRBK7hj4Ov3rIwAAdHIIAAr1X+v/Obq+HCGSZAEOPQru\n0moTQ1DAC+BqG4veJS1bgnaxRK8U0aTiZE1PcRXjBCfXT1CGza53lqJyZJLdZA2g\nI8Qs+dS7YEVFBGREEbJsQUjYKfrftiiMOU2K9KZRVX6yyCxT7jGGLThCUy9MZb0u\nhRXB/jjNjJVrFsXX3Un1gTU453396tKb282rl5TPFVXzNYuWi7gBNy4XVuRpAL8t\n99cdIyRQ2jOsLw3ZkvihZmT+0pTtFSvSDtPs3jk2MkS30lUgGPk1aZZmSYGqu81d\n0M+rq6yc32rqdzBuxvG8R6+EBXeAoepzmoScD/2MLjTasdUGxwe6Wcud2Ua6cn0=\n=5V54\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e713a8ce44d9ab18ce9d6c5ae473722ed592d98\nparent 7153c9262a76a6464a4f5aef3d45ffcc41dd87b2\nparent 6c9f218f3e1f2bb9a6bc0cdf5a0aa16c220f1ee8\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570542326 +0200\ncommitter GitHub <noreply@github.com> 1570542326 +0200\n\nRollup merge of #65102 - tmiasko:tsan-probe-stack, r=alexcrichton\n\nDisable stack probe when thread sanitizer is enabled\n\nWhen thread sanitizer instrumentation is enabled during compilation of\nstack probe function, the function will be miscompiled and trigger\nsegmentation fault at runtime. Disable stack probes when tsan is\nenabled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5", "html_url": "https://github.com/rust-lang/rust/commit/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7153c9262a76a6464a4f5aef3d45ffcc41dd87b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7153c9262a76a6464a4f5aef3d45ffcc41dd87b2", "html_url": "https://github.com/rust-lang/rust/commit/7153c9262a76a6464a4f5aef3d45ffcc41dd87b2"}, {"sha": "6c9f218f3e1f2bb9a6bc0cdf5a0aa16c220f1ee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9f218f3e1f2bb9a6bc0cdf5a0aa16c220f1ee8", "html_url": "https://github.com/rust-lang/rust/commit/6c9f218f3e1f2bb9a6bc0cdf5a0aa16c220f1ee8"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "a0bef5b78156586ee195df67e5d807d698bd5002", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=3c5f8a1da06204c9e22f53ad3930fdc5c48e13a5", "patch": "@@ -96,10 +96,12 @@ pub fn set_probestack(cx: &CodegenCx<'ll, '_>, llfn: &'ll Value) {\n     }\n \n     // Currently stack probes seem somewhat incompatible with the address\n-    // sanitizer. With asan we're already protected from stack overflow anyway\n-    // so we don't really need stack probes regardless.\n-    if let Some(Sanitizer::Address) = cx.sess().opts.debugging_opts.sanitizer {\n-        return\n+    // sanitizer and thread sanitizer. With asan we're already protected from\n+    // stack overflow anyway so we don't really need stack probes regardless.\n+    match cx.sess().opts.debugging_opts.sanitizer {\n+        Some(Sanitizer::Address) |\n+        Some(Sanitizer::Thread) => return,\n+        _ => {},\n     }\n \n     // probestack doesn't play nice either with `-C profile-generate`."}]}