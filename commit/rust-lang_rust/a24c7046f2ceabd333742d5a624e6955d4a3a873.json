{"sha": "a24c7046f2ceabd333742d5a624e6955d4a3a873", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNGM3MDQ2ZjJjZWFiZDMzMzc0MmQ1YTYyNGU2OTU1ZDRhM2E4NzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-03T11:39:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-03T11:39:51Z"}, "message": "Auto merge of #4328 - phansch:rustup, r=phansch\n\nRustup to latest rustc master\n\nBroken due to:\n\n* https://github.com/rust-lang/rust/pull/63180 (`Existential` -> `OpaqueTy`)\n* https://github.com/rust-lang/rust/pull/63121 (New fields for `FormatSpec`)\n\nchangelog: none", "tree": {"sha": "39a52eca69457e9dfaef264833c3838e34d7ce7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a52eca69457e9dfaef264833c3838e34d7ce7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a24c7046f2ceabd333742d5a624e6955d4a3a873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a24c7046f2ceabd333742d5a624e6955d4a3a873", "html_url": "https://github.com/rust-lang/rust/commit/a24c7046f2ceabd333742d5a624e6955d4a3a873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a24c7046f2ceabd333742d5a624e6955d4a3a873/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43ef7aa3f5539210a73f9915c1c1d540387b814", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43ef7aa3f5539210a73f9915c1c1d540387b814", "html_url": "https://github.com/rust-lang/rust/commit/d43ef7aa3f5539210a73f9915c1c1d540387b814"}, {"sha": "ff59f4ad217af98421228dc6017ade6dab133648", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff59f4ad217af98421228dc6017ade6dab133648", "html_url": "https://github.com/rust-lang/rust/commit/ff59f4ad217af98421228dc6017ade6dab133648"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "eabb5ac5bf9987ddde800a5e0f46c874a2d3f5b7", "filename": "appveyor.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -22,7 +22,7 @@ install:\n     - del rust-toolchain\n     - cargo install rustup-toolchain-install-master --debug || echo \"rustup-toolchain-install-master already installed\"\n     - rustup-toolchain-install-master %RUSTC_HASH% -f -n master\n-    - rustup component add rustfmt --toolchain nightly || echo \"rustfmt nightly is unavailable\"\n+    - rustup component add rustfmt --toolchain nightly & exit 0 # Format test handles missing rustfmt\n     - rustup default master\n     - set PATH=%PATH%;C:\\Users\\appveyor\\.rustup\\toolchains\\master\\bin\n     - rustc -V"}, {"sha": "07fbc78f358b5914981f13ad86ea49f4cb3b06c8", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -348,7 +348,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             },\n             TyKind::Def(item, _) => {\n                 let map = self.cx.tcx.hir();\n-                if let ItemKind::Existential(ref exist_ty) = map.expect_item(item.id).node {\n+                if let ItemKind::OpaqueTy(ref exist_ty) = map.expect_item(item.id).node {\n                     for bound in &exist_ty.bounds {\n                         if let GenericBound::Outlives(_) = *bound {\n                             self.record(&None);"}, {"sha": "00f1cf9a5bd43067be11d97a27357ff7fe6949c0", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -148,7 +148,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemKind::TraitAlias(..) => \"a trait alias\",\n             hir::ItemKind::Ty(..) => \"a type alias\",\n             hir::ItemKind::Union(..) => \"a union\",\n-            hir::ItemKind::Existential(..) => \"an existential type\",\n+            hir::ItemKind::OpaqueTy(..) => \"an existential type\",\n             hir::ItemKind::ExternCrate(..)\n             | hir::ItemKind::ForeignMod(..)\n             | hir::ItemKind::GlobalAsm(..)\n@@ -185,7 +185,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ImplItemKind::Const(..) => \"an associated constant\",\n             hir::ImplItemKind::Method(..) => \"a method\",\n             hir::ImplItemKind::Type(_) => \"an associated type\",\n-            hir::ImplItemKind::Existential(_) => \"an existential type\",\n+            hir::ImplItemKind::OpaqueTy(_) => \"an existential type\",\n         };\n         self.check_missing_docs_attrs(cx, &impl_item.attrs, impl_item.span, desc);\n     }"}, {"sha": "c467f2fc388605a3521656e3f883a546d9d6b32d", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -121,7 +121,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n             | hir::ItemKind::GlobalAsm(..)\n             | hir::ItemKind::Ty(..)\n             | hir::ItemKind::Union(..)\n-            | hir::ItemKind::Existential(..)\n+            | hir::ItemKind::OpaqueTy(..)\n             | hir::ItemKind::ExternCrate(..)\n             | hir::ItemKind::ForeignMod(..)\n             | hir::ItemKind::Impl(..)\n@@ -142,7 +142,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n \n         let desc = match impl_item.node {\n             hir::ImplItemKind::Method(..) => \"a method\",\n-            hir::ImplItemKind::Const(..) | hir::ImplItemKind::Type(_) | hir::ImplItemKind::Existential(_) => return,\n+            hir::ImplItemKind::Const(..) | hir::ImplItemKind::Type(_) | hir::ImplItemKind::OpaqueTy(_) => return,\n         };\n \n         let def_id = cx.tcx.hir().local_def_id(impl_item.hir_id);"}, {"sha": "7f7466a1a5be4ccc61823196b71fe8b22d0ca255", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -64,7 +64,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DeepCodeInspector {\n             },\n             hir::ImplItemKind::Method(..) => println!(\"method\"),\n             hir::ImplItemKind::Type(_) => println!(\"associated type\"),\n-            hir::ImplItemKind::Existential(_) => println!(\"existential type\"),\n+            hir::ImplItemKind::OpaqueTy(_) => println!(\"existential type\"),\n         }\n     }\n     // fn check_trait_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx\n@@ -363,7 +363,7 @@ fn print_item(cx: &LateContext<'_, '_>, item: &hir::Item) {\n         hir::ItemKind::Ty(..) => {\n             println!(\"type alias for {:?}\", cx.tcx.type_of(did));\n         },\n-        hir::ItemKind::Existential(..) => {\n+        hir::ItemKind::OpaqueTy(..) => {\n             println!(\"existential type with real type {:?}\", cx.tcx.type_of(did));\n         },\n         hir::ItemKind::Enum(..) => {"}, {"sha": "9b30708b22c52eb8d5f4c89470b97c11dca9f42f", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c7046f2ceabd333742d5a624e6955d4a3a873/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=a24c7046f2ceabd333742d5a624e6955d4a3a873", "patch": "@@ -364,7 +364,9 @@ fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &TokenStream, is_write: bool) -> (O\n             align: AlignUnknown,\n             flags: 0,\n             precision: CountImplied,\n+            precision_span: None,\n             width: CountImplied,\n+            width_span: None,\n             ty: \"\",\n         };\n         if !parser.eat(&token::Comma) {"}]}