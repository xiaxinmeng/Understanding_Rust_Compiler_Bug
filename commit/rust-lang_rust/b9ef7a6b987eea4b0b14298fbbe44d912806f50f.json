{"sha": "b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZWY3YTZiOTg3ZWVhNGIwYjE0Mjk4ZmJiZTQ0ZDkxMjgwNmY1MGY=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T20:13:05Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T20:13:05Z"}, "message": "remove match statement, handle suffix", "tree": {"sha": "0f52557e781de0b355512c99935f94223a563517", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f52557e781de0b355512c99935f94223a563517"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "html_url": "https://github.com/rust-lang/rust/commit/b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ef7a6b987eea4b0b14298fbbe44d912806f50f/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0e282f6b1a8c698212f7f76de2ff122e36e17a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0e282f6b1a8c698212f7f76de2ff122e36e17a2", "html_url": "https://github.com/rust-lang/rust/commit/d0e282f6b1a8c698212f7f76de2ff122e36e17a2"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "06b09af82e2c277fd3521c2cb6a775b034422564", "filename": "crates/ra_hir_ty/src/infer/pat.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b9ef7a6b987eea4b0b14298fbbe44d912806f50f/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ef7a6b987eea4b0b14298fbbe44d912806f50f/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "patch": "@@ -185,21 +185,18 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 self.write_pat_ty(pat, bound_ty);\n                 return inner_ty;\n             }\n-            Pat::Slice { prefix, slice, suffix } => {\n-                if let Ty::Apply(ApplicationTy { ctor: TypeCtor::Slice, parameters }) = expected {\n-                    match (prefix.as_slice(), slice, suffix.as_slice()) {\n-                        (prefix_pat_ids, None, []) => {\n-                            for pat_id in prefix_pat_ids {\n-                                self.infer_pat(*pat_id, parameters.as_single(), default_bm);\n-                            }\n-\n-                            Ty::apply_one(TypeCtor::Slice, parameters.as_single().clone())\n-                        },\n-                        _ => Ty::Unknown,\n+            Pat::Slice { prefix, slice: _slice, suffix } => {\n+                let ty = if let Ty::Apply(ApplicationTy { ctor: TypeCtor::Slice, parameters }) = expected {\n+                    for pat_id in prefix.iter().chain(suffix) {\n+                        self.infer_pat(*pat_id, parameters.as_single(), default_bm);\n                     }\n+\n+                    parameters.as_single().clone()\n                 } else {\n                     Ty::Unknown\n-                }\n+                };\n+\n+                Ty::apply_one(TypeCtor::Slice, ty)\n             }\n             _ => Ty::Unknown,\n         };"}, {"sha": "d8e95112f1d808c98e6e78b61c40a55a26212987", "filename": "crates/ra_hir_ty/src/tests/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9ef7a6b987eea4b0b14298fbbe44d912806f50f/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ef7a6b987eea4b0b14298fbbe44d912806f50f/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=b9ef7a6b987eea4b0b14298fbbe44d912806f50f", "patch": "@@ -53,8 +53,8 @@ fn test(x: &i32) {\n     [140; 141) 'g': {unknown}\n     [144; 145) 'e': {unknown}\n     [158; 205) 'if let...     }': ()\n-    [165; 170) '[val]': {unknown}\n-    [173; 176) 'opt': {unknown}\n+    [165; 170) '[val]': [{unknown}]\n+    [173; 176) 'opt': [{unknown}]\n     [177; 205) '{     ...     }': ()\n     [191; 192) 'h': {unknown}\n     [195; 198) 'val': {unknown}"}]}