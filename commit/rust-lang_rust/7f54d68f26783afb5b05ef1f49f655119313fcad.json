{"sha": "7f54d68f26783afb5b05ef1f49f655119313fcad", "node_id": "C_kwDOAAsO6NoAKDdmNTRkNjhmMjY3ODNhZmI1YjA1ZWYxZjQ5ZjY1NTExOTMxM2ZjYWQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-04-10T07:36:08Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-04-11T02:00:39Z"}, "message": "Add a note for unsatisfied `~const Drop` bounds", "tree": {"sha": "681e67673d7950874047cd6b9c6ca2baa3d433cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681e67673d7950874047cd6b9c6ca2baa3d433cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f54d68f26783afb5b05ef1f49f655119313fcad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmJTi8cACgkQbQF6ltjm\nwvkBNhAAtpw3VMdqOW0T2tSkeq5rSY3i0CcajuzFNXLiUsRJhU8QLJhaoo2jikW8\nkB+/IrKy8YV9zvtRIZy5gO6kTmKpSNVLLUJAfG2ewnO+/bT9TBM5wzebCzmiIZFj\nwUqoGEQ49TMdiakOPap23TvClRub5Yugs2ShiFuVaSpkxcrQT/hNhQ6jqk//XHo2\nYTNh2GnLVI5CvIgbJIbe3t7NaLd0tB5Xfyw500QzPdD/tOOxQtPPlzeqIB4vBCk5\nPlsvGDS4Y5C2G0fQSgnlifIuJNPkhDmTrn9W/1HBPjGEFI9o+sycjj+DChsG8I4i\nX61ofxR7+VRWu12kPjFEu4DvWoK3wSN6xx+DM3233OfGQc5zSOfVYu+A20DjJPso\nTBIglqXWUpQb5MlasHjvnZqN8YoOX+fLj6ERmKCh6494uT58QBSJ0deUvFq0/P/Y\nxFBNUMM74hwyirpXYBntPHNCzed0FwzRwBXgDdTGb9GrMWLZfeP9Qdil7SjVxX/6\nWx4/o1I2n3SuvaSFcO0N38Ll5inXpHCvRx0o5Z+4A9XRCgmtiANplu0jH+PpYqeo\nt7bxgyh6zL6a6lOiP1eQPEBuyozT1RIDMhV3I/lLYDuINAlAfY5CEcIL024Coq5J\nvU9JXxcBf5+KHFETQ0pjUW1+vi9PwgLf795htaCfmbbu+TcI4yQ=\n=V/c5\n-----END PGP SIGNATURE-----", "payload": "tree 681e67673d7950874047cd6b9c6ca2baa3d433cd\nparent e745b4ddbd05026c75aae4506aef39fdfe1603c5\nauthor Deadbeef <ent3rm4n@gmail.com> 1649576168 +1000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1649642439 +1000\n\nAdd a note for unsatisfied `~const Drop` bounds\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f54d68f26783afb5b05ef1f49f655119313fcad", "html_url": "https://github.com/rust-lang/rust/commit/7f54d68f26783afb5b05ef1f49f655119313fcad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f54d68f26783afb5b05ef1f49f655119313fcad/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e745b4ddbd05026c75aae4506aef39fdfe1603c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e745b4ddbd05026c75aae4506aef39fdfe1603c5", "html_url": "https://github.com/rust-lang/rust/commit/e745b4ddbd05026c75aae4506aef39fdfe1603c5"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "b1d570f2ed420cdd3e054cd6f1cc8830755f85c5", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f54d68f26783afb5b05ef1f49f655119313fcad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f54d68f26783afb5b05ef1f49f655119313fcad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=7f54d68f26783afb5b05ef1f49f655119313fcad", "patch": "@@ -439,6 +439,13 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             }\n                         }\n \n+                        if Some(trait_ref.def_id()) == tcx.lang_items().drop_trait()\n+                            && predicate_is_const\n+                        {\n+                            err.note(\"`~const Drop` was renamed to `~const Destruct`\");\n+                            err.note(\"See <https://github.com/rust-lang/rust/pull/94901> for more details\");\n+                        }\n+\n                         let explanation = if let ObligationCauseCode::MainFunctionType =\n                             obligation.cause.code()\n                         {"}, {"sha": "85a3e05e8b2136005da7d24c17d0534baae0b77a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7f54d68f26783afb5b05ef1f49f655119313fcad/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f54d68f26783afb5b05ef1f49f655119313fcad/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7f54d68f26783afb5b05ef1f49f655119313fcad", "patch": "@@ -302,23 +302,13 @@ impl<'a> Clean<Option<WherePredicate>> for ty::Predicate<'a> {\n \n impl<'a> Clean<Option<WherePredicate>> for ty::PolyTraitPredicate<'a> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Option<WherePredicate> {\n-        // `T: ~const Drop` is not equivalent to `T: Drop`, and we don't currently document `~const` bounds\n-        // because of its experimental status, so just don't show these.\n         // `T: ~const Destruct` is hidden because `T: Destruct` is a no-op.\n         if self.skip_binder().constness == ty::BoundConstness::ConstIfConst\n-            && [cx.tcx.lang_items().drop_trait(), cx.tcx.lang_items().destruct_trait()]\n-                .iter()\n-                .any(|tr| *tr == Some(self.skip_binder().def_id()))\n+            && Some(self.skip_binder().def_id()) == cx.tcx.lang_items().destruct_trait()\n         {\n             return None;\n         }\n \n-        #[cfg(bootstrap)]\n-        {\n-            // FIXME: remove `lang_items().drop_trait()` from above logic,\n-            // as well as the comment about `~const Drop` because it was renamed to `Destruct`.\n-        }\n-\n         let poly_trait_ref = self.map_bound(|pred| pred.trait_ref);\n         Some(WherePredicate::BoundPredicate {\n             ty: poly_trait_ref.skip_binder().self_ty().clean(cx),"}, {"sha": "f9173feeeec81dd0e0ee13938765a3ba6bdb98a8", "filename": "src/test/rustdoc/rfc-2632-const-trait-impl.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7f54d68f26783afb5b05ef1f49f655119313fcad/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f54d68f26783afb5b05ef1f49f655119313fcad/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs?ref=7f54d68f26783afb5b05ef1f49f655119313fcad", "patch": "@@ -1,5 +1,5 @@\n // Test that we do not currently display `~const` in rustdoc\n-// as that syntax is currently provisional; `~const Drop` has\n+// as that syntax is currently provisional; `~const Destruct` has\n // no effect on stable code so it should be hidden as well.\n //\n // To future blessers: make sure that `const_trait_impl` is\n@@ -8,6 +8,8 @@\n #![feature(const_trait_impl)]\n #![crate_name = \"foo\"]\n \n+use std::marker::Destruct;\n+\n pub struct S<T>(T);\n \n // @!has foo/trait.Tr.html '//pre[@class=\"rust trait\"]/code/a[@class=\"trait\"]' '~const'\n@@ -20,22 +22,36 @@ pub trait Tr<T> {\n     // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n     // @has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n     #[default_method_body_is_const]\n-    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n+    fn a<A: ~const Clone + ~const Destruct>()\n+    where\n+        Option<A>: ~const Clone + ~const Destruct,\n+    {\n+    }\n }\n \n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]' '~const'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Clone'\n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where\"]' '~const'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-impl<T: ~const Clone> const Tr<T> for T where Option<T>: ~const Clone {\n-    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n+impl<T: ~const Clone + ~const Destruct> const Tr<T> for T\n+where\n+    Option<T>: ~const Clone + ~const Destruct,\n+{\n+    fn a<A: ~const Clone + ~const Destruct>()\n+    where\n+        Option<A>: ~const Clone + ~const Destruct,\n+    {\n+    }\n }\n \n // @!has foo/fn.foo.html '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' '~const'\n // @has - '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' 'Clone'\n // @!has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' '~const'\n // @has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' ': Clone'\n-pub const fn foo<F: ~const Clone>() where Option<F>: ~const Clone {\n+pub const fn foo<F: ~const Clone + ~const Destruct>()\n+where\n+    Option<F>: ~const Clone + ~const Destruct,\n+{\n     F::a()\n }\n \n@@ -44,7 +60,10 @@ impl<T> S<T> {\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Clone'\n     // @!has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-    pub const fn foo<B: ~const Clone>() where B: ~const Clone {\n+    pub const fn foo<B: ~const Clone + ~const Destruct>()\n+    where\n+        B: ~const Clone + ~const Destruct,\n+    {\n         B::a()\n     }\n }"}]}