{"sha": "e9360f76751b8b60ec14520d23f1edb8263963cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MzYwZjc2NzUxYjhiNjBlYzE0NTIwZDIzZjFlZGI4MjYzOTYzY2Q=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-09T21:05:48Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-09T21:34:19Z"}, "message": "Fix suggestions for `REVERSE_RANGE_LOOP`", "tree": {"sha": "d66cfcc3a855c9fb534c35fabc92e535e85b34ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d66cfcc3a855c9fb534c35fabc92e535e85b34ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9360f76751b8b60ec14520d23f1edb8263963cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXWeDdAAoJEF5CfHlMukXo4NMP/3mAtnttIPW3BXxAacd1mbNM\nt/2hOKYnEPv6S6ivV1aRU6BB6t2Jqp0biJJDQNc4sRSVhAJElrkQ7RALVbjxD3TS\n4KbRPIbojpkXIECE7Yqltl27ugqLOgzjGkn5FT3T08UM+2P+fnxEA0meTaQIJYOj\nQXZl2uF+Hskm10toUIr7+5PorfUMq3lad7vLmljS9QRfLKLCLspcEnM2f1hTtMFB\ncqdX7TMYNZWM5RKrKhdSYTL6FssxxrWYKESYIOwuQ4QiYcs1HieRjykfuAuXBZj0\n+kV/hmbXDloDpW/HEFM/RHis9SwgWnjBZWBJ4gFVMh0oheYE+nmEhV1gqbMNJZD7\nuJlIwgC33IOZmQKtRPDZPlmJsHCLAbOSM9dCGIGXCAzqS/VqWsZYHqzCqA56IIUY\nZjzP+5iAu5okzRzv7mhmB+G8/ISAZ5/ocBpit1mRUcci4vbj7GVlPFI/FVbKHUWo\n5+fic6aVr2+8RD5d63Kn2T5SaWgyMmUTWPDuNY8v4Uu+HVGbnaPaQwNPMCM6My1k\ne2dVMFp6lDiBjG53YEN8xhSNE2QnXX5xqr26icfRrlmXsLHnrBFO+cSH9dWtQ5ZC\naXzx5y1A3qh/MZUD6fj/CSnAL2Zr+fPAdjR7k1ZklyOq722MHVpvxM3Ps5Pmle5V\nmKOzeqTPYf8t1Bfrb+u0\n=LBcT\n-----END PGP SIGNATURE-----", "payload": "tree d66cfcc3a855c9fb534c35fabc92e535e85b34ce\nparent 3ae39145fc763a798404dd9301e8d8f045fdbf4e\nauthor mcarton <cartonmartin+git@gmail.com> 1465506348 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465508059 +0200\n\nFix suggestions for `REVERSE_RANGE_LOOP`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9360f76751b8b60ec14520d23f1edb8263963cd", "html_url": "https://github.com/rust-lang/rust/commit/e9360f76751b8b60ec14520d23f1edb8263963cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9360f76751b8b60ec14520d23f1edb8263963cd/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ae39145fc763a798404dd9301e8d8f045fdbf4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae39145fc763a798404dd9301e8d8f045fdbf4e", "html_url": "https://github.com/rust-lang/rust/commit/3ae39145fc763a798404dd9301e8d8f045fdbf4e"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5d431e47465f0934b9a6bce74b1477cfccf17aca", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9360f76751b8b60ec14520d23f1edb8263963cd/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9360f76751b8b60ec14520d23f1edb8263963cd/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e9360f76751b8b60ec14520d23f1edb8263963cd", "patch": "@@ -444,6 +444,11 @@ fn check_for_loop_reverse_range(cx: &LateContext, arg: &Expr, expr: &Expr) {\n                 if sup {\n                     let start_snippet = snippet(cx, start.span, \"_\");\n                     let end_snippet = snippet(cx, end.span, \"_\");\n+                    let dots = if limits == ast::RangeLimits::Closed {\n+                        \"...\"\n+                    } else {\n+                        \"..\"\n+                    };\n \n                     span_lint_and_then(cx,\n                                        REVERSE_RANGE_LOOP,\n@@ -454,7 +459,10 @@ fn check_for_loop_reverse_range(cx: &LateContext, arg: &Expr, expr: &Expr) {\n                                                               \"consider using the following if \\\n                                                                you are attempting to iterate \\\n                                                                over this range in reverse\",\n-                                                              format!(\"({}..{}).rev()\", end_snippet, start_snippet));\n+                                                              format!(\"({end}{dots}{start}).rev()\",\n+                                                                      end=end_snippet,\n+                                                                      dots=dots,\n+                                                                      start=start_snippet));\n                                        });\n                 } else if eq && limits != ast::RangeLimits::Closed {\n                     // if they are equal, it's also problematic - this loop"}, {"sha": "411a4b11c17a064a442461c96b694d81fd1f2987", "filename": "tests/compile-fail/for_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9360f76751b8b60ec14520d23f1edb8263963cd/tests%2Fcompile-fail%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9360f76751b8b60ec14520d23f1edb8263963cd/tests%2Fcompile-fail%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffor_loop.rs?ref=e9360f76751b8b60ec14520d23f1edb8263963cd", "patch": "@@ -169,7 +169,7 @@ fn main() {\n     for i in 10...0 {\n         //~^ERROR this range is empty so this for loop will never run\n         //~|HELP consider\n-        //~|SUGGESTION (0..10).rev()\n+        //~|SUGGESTION (0...10).rev()\n         println!(\"{}\", i);\n     }\n "}]}