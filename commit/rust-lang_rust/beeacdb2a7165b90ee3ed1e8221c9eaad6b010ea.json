{"sha": "beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZWFjZGIyYTcxNjViOTBlZTNlZDFlODIyMWM5ZWFhZDZiMDEwZWE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-10T20:54:06Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-11T22:18:51Z"}, "message": "Use custom trait instead of `Into`", "tree": {"sha": "f14bf4fb2066747be3a8433c0ba75f3e982f79b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f14bf4fb2066747be3a8433c0ba75f3e982f79b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "html_url": "https://github.com/rust-lang/rust/commit/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd8cf3c5e3adffc5ef147c8a55d3532481172c42", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8cf3c5e3adffc5ef147c8a55d3532481172c42", "html_url": "https://github.com/rust-lang/rust/commit/fd8cf3c5e3adffc5ef147c8a55d3532481172c42"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "9f04cff4d2fb9d591c917b463c441b67440cf02f", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "patch": "@@ -189,3 +189,23 @@ pub fn force_from_dep_node<'tcx>(tcx: TyCtxt<'tcx>, dep_node: &DepNode) -> bool\n pub(crate) fn try_load_from_on_disk_cache<'tcx>(tcx: TyCtxt<'tcx>, dep_node: &DepNode) {\n     rustc_dep_node_try_load_from_on_disk_cache!(dep_node, tcx)\n }\n+\n+/// An analogue of the `Into` trait that's intended only for query paramaters.\n+///\n+/// This exists to allow queries to accept either `DefId` or `LocalDefId` while requiring that the\n+/// user call `to_def_id` to convert between them everywhere else.\n+pub trait IntoQueryParam<P> {\n+    fn into_query_param(self) -> P;\n+}\n+\n+impl<P> IntoQueryParam<P> for P {\n+    fn into_query_param(self) -> P {\n+        self\n+    }\n+}\n+\n+impl IntoQueryParam<DefId> for LocalDefId {\n+    fn into_query_param(self) -> DefId {\n+        self.to_def_id()\n+    }\n+}"}, {"sha": "068322b08b7a31a4eef5c1b8350aacacf31a4577", "filename": "src/librustc_middle/ty/query/plumbing.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs?ref=beeacdb2a7165b90ee3ed1e8221c9eaad6b010ea", "patch": "@@ -243,7 +243,7 @@ macro_rules! define_queries {\n }\n \n macro_rules! query_helper_param_ty {\n-    (DefId) => { impl Into<DefId> };\n+    (DefId) => { impl IntoQueryParam<DefId> };\n     ($K:ty) => { $K };\n }\n \n@@ -386,7 +386,7 @@ macro_rules! define_queries_inner {\n             $($(#[$attr])*\n             #[inline(always)]\n             pub fn $name(self, key: query_helper_param_ty!($($K)*)) {\n-                ensure_query::<queries::$name<'_>, _>(self.tcx, key.into())\n+                ensure_query::<queries::$name<'_>, _>(self.tcx, key.into_query_param())\n             })*\n         }\n \n@@ -464,7 +464,7 @@ macro_rules! define_queries_inner {\n             $($(#[$attr])*\n             #[inline(always)]\n             pub fn $name(self, key: query_helper_param_ty!($($K)*)) -> $V {\n-                get_query::<queries::$name<'_>, _>(self.tcx, self.span, key.into())\n+                get_query::<queries::$name<'_>, _>(self.tcx, self.span, key.into_query_param())\n             })*\n         }\n "}]}