{"sha": "bca708ba4c5eb474448ef2f2882a66ec935f2fee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYTcwOGJhNGM1ZWI0NzQ0NDhlZjJmMjg4MmE2NmVjOTM1ZjJmZWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T13:19:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T13:19:08Z"}, "message": "cleanup", "tree": {"sha": "14d0a0de9eabc0197156594b032764f6171b2765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14d0a0de9eabc0197156594b032764f6171b2765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca708ba4c5eb474448ef2f2882a66ec935f2fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca708ba4c5eb474448ef2f2882a66ec935f2fee", "html_url": "https://github.com/rust-lang/rust/commit/bca708ba4c5eb474448ef2f2882a66ec935f2fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca708ba4c5eb474448ef2f2882a66ec935f2fee/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b6ecfab061396613c5f459fae43ea17b5675b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b6ecfab061396613c5f459fae43ea17b5675b8", "html_url": "https://github.com/rust-lang/rust/commit/99b6ecfab061396613c5f459fae43ea17b5675b8"}], "stats": {"total": 40, "additions": 16, "deletions": 24}, "files": [{"sha": "4f3e922c3c5c35057e62d9773dbd6ef59cafb259", "filename": "crates/ra_hir/src/debug.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir%2Fsrc%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir%2Fsrc%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdebug.rs?ref=bca708ba4c5eb474448ef2f2882a66ec935f2fee", "patch": "@@ -36,12 +36,6 @@ impl Module {\n     }\n }\n \n-// impl HirFileId {\n-//     pub fn debug(self, db: &impl HirDebugDatabase) -> impl fmt::Debug + '_ {\n-//         debug_fn(move |fmt| db.debug_hir_file_id(self, fmt))\n-//     }\n-// }\n-\n pub trait HirDebugHelper: HirDatabase {\n     fn crate_name(&self, _krate: CrateId) -> Option<String> {\n         None"}, {"sha": "0f2d233bb1b9ac6727d81c3dea903ff2cd376c88", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=bca708ba4c5eb474448ef2f2882a66ec935f2fee", "patch": "@@ -59,12 +59,13 @@ pub mod from_source;\n #[cfg(test)]\n mod marks;\n \n-use hir_expand::{ast_id_map::FileAstId, AstId};\n+use hir_expand::{\n+    ast_id_map::{AstIdMap, FileAstId},\n+    AstId,\n+};\n \n use crate::{ids::MacroFileKind, name::AsName, resolve::Resolver};\n \n-use hir_expand::ast_id_map::AstIdMap;\n-\n pub use crate::{\n     adt::VariantDef,\n     either::Either,"}, {"sha": "6b35386730c9c0f38b8fe263f21daa7d7d27cb4d", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=bca708ba4c5eb474448ef2f2882a66ec935f2fee", "patch": "@@ -14,19 +14,6 @@ use ra_syntax::ast::{self, AstNode};\n \n use crate::{ast_id_map::FileAstId, db::AstDatabase};\n \n-macro_rules! impl_intern_key {\n-    ($name:ident) => {\n-        impl salsa::InternKey for $name {\n-            fn from_intern_id(v: salsa::InternId) -> Self {\n-                $name(v)\n-            }\n-            fn as_intern_id(&self) -> salsa::InternId {\n-                self.0\n-            }\n-        }\n-    };\n-}\n-\n /// Input to the analyzer is a set of files, where each file is identified by\n /// `FileId` and contains source code. However, another source of source code in\n /// Rust are macros: each macro can be thought of as producing a \"temporary\n@@ -101,7 +88,14 @@ pub enum MacroFileKind {\n /// `println!(\"Hello, {}\", world)`.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct MacroCallId(salsa::InternId);\n-impl_intern_key!(MacroCallId);\n+impl salsa::InternKey for MacroCallId {\n+    fn from_intern_id(v: salsa::InternId) -> Self {\n+        MacroCallId(v)\n+    }\n+    fn as_intern_id(&self) -> salsa::InternId {\n+        self.0\n+    }\n+}\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct MacroDefId {"}, {"sha": "bf6ef12f3ffb2be621af8f9d9244002e755067ff", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bca708ba4c5eb474448ef2f2882a66ec935f2fee/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=bca708ba4c5eb474448ef2f2882a66ec935f2fee", "patch": "@@ -27,10 +27,13 @@ ra_db = { path = \"../ra_db\" }\n ra_cfg = { path = \"../ra_cfg\" }\n ra_fmt = { path = \"../ra_fmt\" }\n ra_prof = { path = \"../ra_prof\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }\n \n+# ra_ide_api should depend only on the top-level `hir` package. if you need\n+# something from some `hir_xxx` subpackage, reexport the API via `hir`.\n+hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+\n [dev-dependencies]\n insta = \"0.12.0\"\n "}]}