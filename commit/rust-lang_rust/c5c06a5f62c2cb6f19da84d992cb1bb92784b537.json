{"sha": "c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YzA2YTVmNjJjMmNiNmYxOWRhODRkOTkyY2IxYmI5Mjc4NGI1Mzc=", "commit": {"author": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-13T17:26:10Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-16T07:33:00Z"}, "message": "Replace to_bits by force_bits and move size as parameter", "tree": {"sha": "d1bee1a5358aa74bf9b06a72844421d6cc2350fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1bee1a5358aa74bf9b06a72844421d6cc2350fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "html_url": "https://github.com/rust-lang/rust/commit/c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "681bd83828fb10e27869b4e0476d87e7d90caced", "url": "https://api.github.com/repos/rust-lang/rust/commits/681bd83828fb10e27869b4e0476d87e7d90caced", "html_url": "https://github.com/rust-lang/rust/commit/681bd83828fb10e27869b4e0476d87e7d90caced"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "28dc0d37b36f4e0308fb0623b23e300b016a015f", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "patch": "@@ -775,7 +775,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n     }\n \n     #[inline(always)]\n-    pub fn force_bits(&self, scalar: Scalar<M::PointerTag>) -> InterpResult<'tcx, u128> {\n-        self.memory.force_bits(scalar)\n+    pub fn force_bits(\n+        &self,\n+        scalar: Scalar<M::PointerTag>,\n+        size: Size\n+    ) -> InterpResult<'tcx, u128> {\n+        self.memory.force_bits(scalar, size)\n     }\n }"}, {"sha": "a0a34df3a5ea47daf021025a4e46f6e67327f08b", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "patch": "@@ -885,8 +885,12 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         }\n     }\n \n-    pub fn force_bits(&self, scalar: Scalar<M::PointerTag>) -> InterpResult<'tcx, u128> {\n-        match scalar.to_bits_or_ptr(self.pointer_size(), self) {\n+    pub fn force_bits(\n+        &self,\n+        scalar: Scalar<M::PointerTag>,\n+        size: Size\n+    ) -> InterpResult<'tcx, u128> {\n+        match scalar.to_bits_or_ptr(size, self) {\n             Ok(bits) => Ok(bits),\n             Err(ptr) => Ok(M::ptr_to_int(ptr, &self.extra)? as u128)\n         }"}, {"sha": "029a440f34e7270c41da05c3b97d0643427b2427", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "patch": "@@ -347,7 +347,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n             }\n             _ => {\n                 assert!(layout.ty.is_integral());\n-                let val = val.to_bits(layout.size)?;\n+                let val = self.force_bits(val, layout.size)?;\n                 let res = match un_op {\n                     Not => !val,\n                     Neg => {"}, {"sha": "a8f88af3f38339810920b561862a89f685135c7d", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c06a5f62c2cb6f19da84d992cb1bb92784b537/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "patch": "@@ -473,7 +473,7 @@ where\n                 let layout = self.layout_of(self.tcx.types.usize)?;\n                 let n = self.access_local(self.frame(), local, Some(layout))?;\n                 let n = self.read_scalar(n)?;\n-                let n = n.to_bits(self.tcx.data_layout.pointer_size)?;\n+                let n = self.force_bits(n.not_undef()?, self.tcx.data_layout.pointer_size)?;\n                 self.mplace_field(base, u64::try_from(n).unwrap())?\n             }\n "}]}