{"sha": "aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYTBiYWMyOWY3ZDdlODZlZGZiNTg1MGNlZjFhYjliNWU0Nzk3ZjI=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-05-25T04:31:50Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-06-09T21:29:30Z"}, "message": "Convert libraries to use #[plugin_registrar]", "tree": {"sha": "789fc211a957d515b86cc1b99421cf17e975d9fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/789fc211a957d515b86cc1b99421cf17e975d9fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "html_url": "https://github.com/rust-lang/rust/commit/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed41b71fbe69cc920a3a021ac4e96dc4d5cc488c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed41b71fbe69cc920a3a021ac4e96dc4d5cc488c", "html_url": "https://github.com/rust-lang/rust/commit/ed41b71fbe69cc920a3a021ac4e96dc4d5cc488c"}], "stats": {"total": 58, "additions": 24, "deletions": 34}, "files": [{"sha": "35d356bb1b56cd8e4935a627d0a20b1f1134b072", "filename": "src/doc/rust.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "patch": "@@ -1819,9 +1819,8 @@ type int8_t = i8;\n \n ### Function-only attributes\n \n-- `macro_registrar` - when using loadable syntax extensions, mark this\n-  function as the registration point for the current crate's syntax\n-  extensions.\n+- `plugin_registrar` - mark this function as the registration point for\n+  compiler plugins, such as loadable syntax extensions.\n - `main` - indicates that this function should be passed to the entry point,\n   rather than the function in the crate root named `main`.\n - `start` - indicates that this function should be used as the entry point,"}, {"sha": "694fe7d0f48b08fa3e3fb9097f443c67e2379b50", "filename": "src/libfourcc/lib.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibfourcc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibfourcc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfourcc%2Flib.rs?ref=aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "patch": "@@ -48,29 +48,25 @@ fn main() {\n        html_root_url = \"http://doc.rust-lang.org/\")]\n \n #![deny(deprecated_owned_vector)]\n-#![feature(macro_registrar, managed_boxes)]\n+#![feature(plugin_registrar, managed_boxes)]\n \n extern crate syntax;\n+extern crate rustc;\n \n use syntax::ast;\n-use syntax::ast::Name;\n use syntax::attr::contains;\n use syntax::codemap::{Span, mk_sp};\n use syntax::ext::base;\n-use syntax::ext::base::{SyntaxExtension, BasicMacroExpander, NormalTT, ExtCtxt, MacExpr};\n+use syntax::ext::base::{ExtCtxt, MacExpr};\n use syntax::ext::build::AstBuilder;\n use syntax::parse;\n use syntax::parse::token;\n use syntax::parse::token::InternedString;\n+use rustc::plugin::Registry;\n \n-#[macro_registrar]\n-pub fn macro_registrar(register: |Name, SyntaxExtension|) {\n-    register(token::intern(\"fourcc\"),\n-        NormalTT(box BasicMacroExpander {\n-            expander: expand_syntax_ext,\n-            span: None,\n-        },\n-        None));\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"fourcc\", expand_syntax_ext);\n }\n \n pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])"}, {"sha": "54bc2802b09ac364cb92ab2b6f42d3dcc44abf62", "filename": "src/libhexfloat/lib.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibhexfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibhexfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibhexfloat%2Flib.rs?ref=aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "patch": "@@ -45,27 +45,23 @@ fn main() {\n        html_root_url = \"http://doc.rust-lang.org/\")]\n \n #![deny(deprecated_owned_vector)]\n-#![feature(macro_registrar, managed_boxes)]\n+#![feature(plugin_registrar, managed_boxes)]\n \n extern crate syntax;\n+extern crate rustc;\n \n use syntax::ast;\n-use syntax::ast::Name;\n use syntax::codemap::{Span, mk_sp};\n use syntax::ext::base;\n-use syntax::ext::base::{SyntaxExtension, BasicMacroExpander, NormalTT, ExtCtxt, MacExpr};\n+use syntax::ext::base::{ExtCtxt, MacExpr};\n use syntax::ext::build::AstBuilder;\n use syntax::parse;\n use syntax::parse::token;\n+use rustc::plugin::Registry;\n \n-#[macro_registrar]\n-pub fn macro_registrar(register: |Name, SyntaxExtension|) {\n-    register(token::intern(\"hexfloat\"),\n-        NormalTT(box BasicMacroExpander {\n-            expander: expand_syntax_ext,\n-            span: None,\n-        },\n-        None));\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"hexfloat\", expand_syntax_ext);\n }\n \n //Check if the literal is valid (as LLVM expects),"}, {"sha": "bbee09d0f38b37512ca502e9e2bdf95d0d0e47e4", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "patch": "@@ -19,24 +19,24 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/\")]\n \n-#![feature(macro_registrar, managed_boxes, quote)]\n+#![feature(plugin_registrar, managed_boxes, quote)]\n \n extern crate regex;\n extern crate syntax;\n+extern crate rustc;\n \n use std::rc::Rc;\n \n use syntax::ast;\n use syntax::codemap;\n use syntax::ext::build::AstBuilder;\n-use syntax::ext::base::{\n-    SyntaxExtension, ExtCtxt, MacResult, MacExpr, DummyResult,\n-    NormalTT, BasicMacroExpander,\n-};\n+use syntax::ext::base::{ExtCtxt, MacResult, MacExpr, DummyResult};\n use syntax::parse;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n+use rustc::plugin::Registry;\n+\n use regex::Regex;\n use regex::native::{\n     OneChar, CharClass, Any, Save, Jump, Split,\n@@ -46,11 +46,10 @@ use regex::native::{\n };\n \n /// For the `regex!` syntax extension. Do not use.\n-#[macro_registrar]\n+#[plugin_registrar]\n #[doc(hidden)]\n-pub fn macro_registrar(register: |ast::Name, SyntaxExtension|) {\n-    let expander = box BasicMacroExpander { expander: native, span: None };\n-    register(token::intern(\"regex\"), NormalTT(expander, None))\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"regex\", native);\n }\n \n /// Generates specialized code for the Pike VM for a particular regular"}]}