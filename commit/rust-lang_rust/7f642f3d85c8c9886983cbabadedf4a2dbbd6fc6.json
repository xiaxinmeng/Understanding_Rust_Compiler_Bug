{"sha": "7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNjQyZjNkODVjOGM5ODg2OTgzY2JhYmFkZWRmNGEyZGJiZDZmYzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-23T22:36:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-24T00:01:45Z"}, "message": "rustc: Give glue symbols meaningful names\n\nInstead of `glue_drop1234` it's `Type::<hash>::glue_drop1234`\n\nHaven't done any performance testing.", "tree": {"sha": "76679713ec98b9f0c332fd56d0fcc0d9987de7ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76679713ec98b9f0c332fd56d0fcc0d9987de7ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "html_url": "https://github.com/rust-lang/rust/commit/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bbbae625d249148ef95b00827f4f3b6859f9071", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbbae625d249148ef95b00827f4f3b6859f9071", "html_url": "https://github.com/rust-lang/rust/commit/4bbbae625d249148ef95b00827f4f3b6859f9071"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "6ae1893d37275da200fb62758e3ec6a438a401e8", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "patch": "@@ -721,6 +721,17 @@ pub fn mangle_internal_name_by_type_only(ccx: @CrateContext,\n           path_name(ccx.sess.ident_of(hash))]);\n }\n \n+pub fn mangle_internal_name_by_type_and_seq(ccx: @CrateContext,\n+                                         t: ty::t,\n+                                         name: &str) -> ~str {\n+    let s = ppaux::ty_to_str(ccx.tcx, t);\n+    let hash = get_symbol_hash(ccx, t);\n+    return mangle(ccx.sess,\n+        ~[path_name(ccx.sess.ident_of(s)),\n+          path_name(ccx.sess.ident_of(hash)),\n+          path_name((ccx.names)(name))]);\n+}\n+\n pub fn mangle_internal_name_by_path_and_seq(ccx: @CrateContext,\n                                             path: path,\n                                             flav: &str) -> ~str {"}, {"sha": "aa8e05235f0db4657540b018ede4f7e88d39b098", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=7f642f3d85c8c9886983cbabadedf4a2dbbd6fc6", "patch": "@@ -669,12 +669,7 @@ pub fn declare_tydesc(ccx: @CrateContext, t: ty::t) -> @mut tydesc_info {\n     let llsize = llsize_of(ccx, llty);\n     let llalign = llalign_of(ccx, llty);\n     let addrspace = declare_tydesc_addrspace(ccx, t);\n-    // FIXME #6574: this triggers duplicate LLVM symbols\n-    let name = @(if false /*ccx.sess.opts.debuginfo*/ {\n-        mangle_internal_name_by_type_only(ccx, t, \"tydesc\")\n-    } else {\n-        mangle_internal_name_by_seq(ccx, \"tydesc\")\n-    });\n+    let name = @mangle_internal_name_by_type_and_seq(ccx, t, \"tydesc\");\n     note_unique_llvm_symbol(ccx, name);\n     debug!(\"+++ declare_tydesc %s %s\", ppaux::ty_to_str(ccx.tcx, t), *name);\n     let gvar = str::as_c_str(*name, |buf| {\n@@ -703,12 +698,7 @@ pub fn declare_generic_glue(ccx: @CrateContext, t: ty::t, llfnty: TypeRef,\n                             name: ~str) -> ValueRef {\n     let _icx = ccx.insn_ctxt(\"declare_generic_glue\");\n     let name = name;\n-    // FIXME #6574 this triggers duplicate LLVM symbols\n-    let fn_nm = @(if false /*ccx.sess.opts.debuginfo*/ {\n-        mangle_internal_name_by_type_only(ccx, t, (~\"glue_\" + name))\n-    } else {\n-        mangle_internal_name_by_seq(ccx, (~\"glue_\" + name))\n-    });\n+    let fn_nm = @mangle_internal_name_by_type_and_seq(ccx, t, (~\"glue_\" + name));\n     debug!(\"%s is for type %s\", *fn_nm, ppaux::ty_to_str(ccx.tcx, t));\n     note_unique_llvm_symbol(ccx, fn_nm);\n     let llfn = decl_cdecl_fn(ccx.llmod, *fn_nm, llfnty);"}]}