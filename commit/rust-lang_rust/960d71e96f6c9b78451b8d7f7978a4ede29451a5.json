{"sha": "960d71e96f6c9b78451b8d7f7978a4ede29451a5", "node_id": "C_kwDOAAsO6NoAKDk2MGQ3MWU5NmY2YzliNzg0NTFiOGQ3Zjc5NzhhNGVkZTI5NDUxYTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-09T06:15:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-09T06:15:56Z"}, "message": "Rollup merge of #112395 - spastorino:smir-terminator-3, r=oli-obk\n\nAdd Terminator::InlineAsm conversion from MIR to SMIR\n\nThis is the last variant that needed to be covered for Terminator. As we've discussed with ``@oli-obk`` I've made a lot of it's fields be `String`s.\n\nr? ``@oli-obk``", "tree": {"sha": "6da62aa26fa1d2e13cead7e5a74935af98ff3c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da62aa26fa1d2e13cead7e5a74935af98ff3c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/960d71e96f6c9b78451b8d7f7978a4ede29451a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgsOcCRBK7hj4Ov3rIwAALG0IAFoLF3n4AJ9u5ANpCAgs1sC5\nPund1/pmsxlbioFSvbLsFW8ujwy+LEr/D3TYgWATSkBxSPJ8jxAkDtEQC/2XpFpg\nJkTccu3Q8YDZT3QJtvFb5wJxU+f81e1pOMldp8m+T+4nv+sb1gTklbyrsXl6nY8w\nVU1iB38nDSv+AwsUpseZG/R0peR2AbVvvmYDzxylT55ZBCRSTw4ty4Y61m4Szh6i\nOWUE7QJkUtdt3FmDCK70sAEdf5vQ09I7hYsdO+RiBMDk6qhKPxCMk9LvBhTpgdIj\ng+UY7phJVJGx1bgRaA9Rj6w4UeQ0xND/ygiB4Nem9zgDRxCt0i+U5Bm533VzxzA=\n=xJad\n-----END PGP SIGNATURE-----\n", "payload": "tree 6da62aa26fa1d2e13cead7e5a74935af98ff3c40\nparent 17cc282880fda5c92f734ae1f6d3ed746bc4c7a3\nparent 313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686291356 +0200\ncommitter GitHub <noreply@github.com> 1686291356 +0200\n\nRollup merge of #112395 - spastorino:smir-terminator-3, r=oli-obk\n\nAdd Terminator::InlineAsm conversion from MIR to SMIR\n\nThis is the last variant that needed to be covered for Terminator. As we've discussed with ``@oli-obk`` I've made a lot of it's fields be `String`s.\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/960d71e96f6c9b78451b8d7f7978a4ede29451a5", "html_url": "https://github.com/rust-lang/rust/commit/960d71e96f6c9b78451b8d7f7978a4ede29451a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/960d71e96f6c9b78451b8d7f7978a4ede29451a5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "html_url": "https://github.com/rust-lang/rust/commit/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3"}, {"sha": "313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "html_url": "https://github.com/rust-lang/rust/commit/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "6d8d99cfb5f1f7713656fbc37a6a07eb7af08e30", "filename": "compiler/rustc_smir/src/rustc_smir/mod.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/960d71e96f6c9b78451b8d7f7978a4ede29451a5/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/960d71e96f6c9b78451b8d7f7978a4ede29451a5/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs?ref=960d71e96f6c9b78451b8d7f7978a4ede29451a5", "patch": "@@ -287,6 +287,27 @@ fn rustc_generator_to_generator(\n     }\n }\n \n+fn rustc_inline_asm_operand_to_inline_asm_operand(\n+    operand: &rustc_middle::mir::InlineAsmOperand<'_>,\n+) -> stable_mir::mir::InlineAsmOperand {\n+    use rustc_middle::mir::InlineAsmOperand;\n+\n+    let (in_value, out_place) = match operand {\n+        InlineAsmOperand::In { value, .. } => (Some(rustc_op_to_op(value)), None),\n+        InlineAsmOperand::Out { place, .. } => {\n+            (None, place.map(|place| rustc_place_to_place(&place)))\n+        }\n+        InlineAsmOperand::InOut { in_value, out_place, .. } => {\n+            (Some(rustc_op_to_op(in_value)), out_place.map(|place| rustc_place_to_place(&place)))\n+        }\n+        InlineAsmOperand::Const { .. }\n+        | InlineAsmOperand::SymFn { .. }\n+        | InlineAsmOperand::SymStatic { .. } => (None, None),\n+    };\n+\n+    stable_mir::mir::InlineAsmOperand { in_value, out_place, raw_rpr: format!(\"{:?}\", operand) }\n+}\n+\n fn rustc_terminator_to_terminator(\n     terminator: &rustc_middle::mir::Terminator<'_>,\n ) -> stable_mir::mir::Terminator {\n@@ -330,7 +351,19 @@ fn rustc_terminator_to_terminator(\n             target: target.as_usize(),\n             unwind: rustc_unwind_to_unwind(unwind),\n         },\n-        InlineAsm { .. } => todo!(),\n+        InlineAsm { template, operands, options, line_spans, destination, unwind } => {\n+            Terminator::InlineAsm {\n+                template: format!(\"{:?}\", template),\n+                operands: operands\n+                    .iter()\n+                    .map(|operand| rustc_inline_asm_operand_to_inline_asm_operand(operand))\n+                    .collect(),\n+                options: format!(\"{:?}\", options),\n+                line_spans: format!(\"{:?}\", line_spans),\n+                destination: destination.map(|d| d.as_usize()),\n+                unwind: rustc_unwind_to_unwind(unwind),\n+            }\n+        }\n         Yield { .. } | GeneratorDrop | FalseEdge { .. } | FalseUnwind { .. } => unreachable!(),\n     }\n }"}, {"sha": "9df7b4945b70a34581f501e732405e17cc733da5", "filename": "compiler/rustc_smir/src/stable_mir/mir/body.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/960d71e96f6c9b78451b8d7f7978a4ede29451a5/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/960d71e96f6c9b78451b8d7f7978a4ede29451a5/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs?ref=960d71e96f6c9b78451b8d7f7978a4ede29451a5", "patch": "@@ -46,6 +46,23 @@ pub enum Terminator {\n         unwind: UnwindAction,\n     },\n     GeneratorDrop,\n+    InlineAsm {\n+        template: String,\n+        operands: Vec<InlineAsmOperand>,\n+        options: String,\n+        line_spans: String,\n+        destination: Option<usize>,\n+        unwind: UnwindAction,\n+    },\n+}\n+\n+#[derive(Clone, Debug)]\n+pub struct InlineAsmOperand {\n+    pub in_value: Option<Operand>,\n+    pub out_place: Option<Place>,\n+    // This field has a raw debug representation of MIR's InlineAsmOperand.\n+    // For now we care about place/operand + the rest in a debug format.\n+    pub raw_rpr: String,\n }\n \n #[derive(Clone, Debug)]"}]}