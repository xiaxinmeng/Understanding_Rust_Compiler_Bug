{"sha": "2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "node_id": "C_kwDOAAsO6NoAKDJiNGE1Mzc0ZWUxMmU4YzcwOTRjYzhjZDI2MTM2Njc1NmNmNmQ4MWM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-07T21:42:03Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-07T21:42:03Z"}, "message": "Properly use location links for type hints of impl Future and its assoc type", "tree": {"sha": "2cae55bc2372ff984468db59ebb5f9132747b316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cae55bc2372ff984468db59ebb5f9132747b316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "html_url": "https://github.com/rust-lang/rust/commit/2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b32b65ca6aee21f352d178eeb0b85e092a93177", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b32b65ca6aee21f352d178eeb0b85e092a93177", "html_url": "https://github.com/rust-lang/rust/commit/0b32b65ca6aee21f352d178eeb0b85e092a93177"}], "stats": {"total": 118, "additions": 106, "deletions": 12}, "files": [{"sha": "1d4bf9ecb74730bcbf959d13915fd9471225439d", "filename": "crates/hir-ty/src/display.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs?ref=2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "patch": "@@ -12,7 +12,7 @@ use hir_def::{\n     find_path,\n     generics::{TypeOrConstParamData, TypeParamProvenance},\n     item_scope::ItemInNs,\n-    lang_item::LangItem,\n+    lang_item::{LangItem, LangItemTarget},\n     path::{Path, PathKind},\n     type_ref::{ConstScalar, TraitBoundModifier, TypeBound, TypeRef},\n     visibility::Visibility,\n@@ -731,8 +731,30 @@ impl HirDisplay for Ty {\n                         )?;\n                         // FIXME: it would maybe be good to distinguish this from the alias type (when debug printing), and to show the substitution\n                     }\n-                    ImplTraitId::AsyncBlockTypeImplTrait(..) => {\n-                        write!(f, \"impl Future<Output = \")?;\n+                    ImplTraitId::AsyncBlockTypeImplTrait(body, ..) => {\n+                        let future_trait = db\n+                            .lang_item(body.module(db.upcast()).krate(), LangItem::Future)\n+                            .and_then(LangItemTarget::as_trait);\n+                        let output = future_trait.and_then(|t| {\n+                            db.trait_data(t).associated_type_by_name(&hir_expand::name!(Output))\n+                        });\n+                        write!(f, \"impl \")?;\n+                        if let Some(t) = future_trait {\n+                            f.start_location_link(t.into());\n+                        }\n+                        write!(f, \"Future\")?;\n+                        if let Some(_) = future_trait {\n+                            f.end_location_link();\n+                        }\n+                        write!(f, \"<\")?;\n+                        if let Some(t) = output {\n+                            f.start_location_link(t.into());\n+                        }\n+                        write!(f, \"Output\")?;\n+                        if let Some(_) = output {\n+                            f.end_location_link();\n+                        }\n+                        write!(f, \" = \")?;\n                         parameters.at(Interner, 0).hir_fmt(f)?;\n                         write!(f, \">\")?;\n                     }"}, {"sha": "ac477339ec23395233fea462333d73584792bec0", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "patch": "@@ -294,17 +294,20 @@ fn label_of_ty(\n     ) -> Result<(), HirDisplayError> {\n         let iter_item_type = hint_iterator(sema, famous_defs, &ty);\n         match iter_item_type {\n-            Some((iter_trait, ty)) => {\n+            Some((iter_trait, item, ty)) => {\n                 const LABEL_START: &str = \"impl \";\n                 const LABEL_ITERATOR: &str = \"Iterator\";\n-                const LABEL_MIDDLE: &str = \"<Item = \";\n+                const LABEL_MIDDLE: &str = \"<\";\n+                const LABEL_ITEM: &str = \"Item\";\n+                const LABEL_MIDDLE2: &str = \" = \";\n                 const LABEL_END: &str = \">\";\n \n                 max_length = max_length.map(|len| {\n                     len.saturating_sub(\n                         LABEL_START.len()\n                             + LABEL_ITERATOR.len()\n                             + LABEL_MIDDLE.len()\n+                            + LABEL_MIDDLE2.len()\n                             + LABEL_END.len(),\n                     )\n                 });\n@@ -314,6 +317,10 @@ fn label_of_ty(\n                 label_builder.write_str(LABEL_ITERATOR)?;\n                 label_builder.end_location_link();\n                 label_builder.write_str(LABEL_MIDDLE)?;\n+                label_builder.start_location_link(ModuleDef::from(item).into());\n+                label_builder.write_str(LABEL_ITEM)?;\n+                label_builder.end_location_link();\n+                label_builder.write_str(LABEL_MIDDLE2)?;\n                 rec(sema, famous_defs, max_length, ty, label_builder)?;\n                 label_builder.write_str(LABEL_END)?;\n                 Ok(())\n@@ -437,7 +444,7 @@ fn hint_iterator(\n     sema: &Semantics<'_, RootDatabase>,\n     famous_defs: &FamousDefs<'_, '_>,\n     ty: &hir::Type,\n-) -> Option<(hir::Trait, hir::Type)> {\n+) -> Option<(hir::Trait, hir::TypeAlias, hir::Type)> {\n     let db = sema.db;\n     let strukt = ty.strip_references().as_adt()?;\n     let krate = strukt.module(db).krate();\n@@ -460,7 +467,7 @@ fn hint_iterator(\n             _ => None,\n         })?;\n         if let Some(ty) = ty.normalize_trait_assoc_type(db, &[], assoc_type_item) {\n-            return Some((iter_trait, ty));\n+            return Some((iter_trait, assoc_type_item, ty));\n         }\n     }\n "}, {"sha": "f5b5c44737438987ab7a9a1674b152f89eedaf2a", "filename": "crates/ide/src/inlay_hints/bind_pat.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs?ref=2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "patch": "@@ -330,7 +330,20 @@ fn main(a: SliceIter<'_, Container>) {\n                                 ),\n                                 tooltip: \"\",\n                             },\n-                            \"<Item = impl \",\n+                            \"<\",\n+                            InlayHintLabelPart {\n+                                text: \"Item\",\n+                                linked_location: Some(\n+                                    FileRange {\n+                                        file_id: FileId(\n+                                            1,\n+                                        ),\n+                                        range: 2643..2647,\n+                                    },\n+                                ),\n+                                tooltip: \"\",\n+                            },\n+                            \" = impl \",\n                             InlayHintLabelPart {\n                                 text: \"Iterator\",\n                                 linked_location: Some(\n@@ -343,7 +356,20 @@ fn main(a: SliceIter<'_, Container>) {\n                                 ),\n                                 tooltip: \"\",\n                             },\n-                            \"<Item = &&str>>\",\n+                            \"<\",\n+                            InlayHintLabelPart {\n+                                text: \"Item\",\n+                                linked_location: Some(\n+                                    FileRange {\n+                                        file_id: FileId(\n+                                            1,\n+                                        ),\n+                                        range: 2643..2647,\n+                                    },\n+                                ),\n+                                tooltip: \"\",\n+                            },\n+                            \" = &&str>>\",\n                         ],\n                     },\n                     InlayHint {"}, {"sha": "0c54f084c19eb3396435d7cdba09eb455fe927be", "filename": "crates/ide/src/inlay_hints/chaining.rs", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4a5374ee12e8c7094cc8cd261366756cf6d81c/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs?ref=2b4a5374ee12e8c7094cc8cd261366756cf6d81c", "patch": "@@ -440,7 +440,20 @@ fn main() {\n                                 ),\n                                 tooltip: \"\",\n                             },\n-                            \"<Item = ()>\",\n+                            \"<\",\n+                            InlayHintLabelPart {\n+                                text: \"Item\",\n+                                linked_location: Some(\n+                                    FileRange {\n+                                        file_id: FileId(\n+                                            1,\n+                                        ),\n+                                        range: 2643..2647,\n+                                    },\n+                                ),\n+                                tooltip: \"\",\n+                            },\n+                            \" = ()>\",\n                         ],\n                     },\n                     InlayHint {\n@@ -460,7 +473,20 @@ fn main() {\n                                 ),\n                                 tooltip: \"\",\n                             },\n-                            \"<Item = ()>\",\n+                            \"<\",\n+                            InlayHintLabelPart {\n+                                text: \"Item\",\n+                                linked_location: Some(\n+                                    FileRange {\n+                                        file_id: FileId(\n+                                            1,\n+                                        ),\n+                                        range: 2643..2647,\n+                                    },\n+                                ),\n+                                tooltip: \"\",\n+                            },\n+                            \" = ()>\",\n                         ],\n                     },\n                     InlayHint {\n@@ -480,7 +506,20 @@ fn main() {\n                                 ),\n                                 tooltip: \"\",\n                             },\n-                            \"<Item = ()>\",\n+                            \"<\",\n+                            InlayHintLabelPart {\n+                                text: \"Item\",\n+                                linked_location: Some(\n+                                    FileRange {\n+                                        file_id: FileId(\n+                                            1,\n+                                        ),\n+                                        range: 2643..2647,\n+                                    },\n+                                ),\n+                                tooltip: \"\",\n+                            },\n+                            \" = ()>\",\n                         ],\n                     },\n                     InlayHint {"}]}