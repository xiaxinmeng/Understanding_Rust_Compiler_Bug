{"sha": "f510d98ad387f2da7be0ad137ef2a9fd80dc812e", "node_id": "C_kwDOAAsO6NoAKGY1MTBkOThhZDM4N2YyZGE3YmUwYWQxMzdlZjJhOWZkODBkYzgxMmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-23T10:08:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-23T10:08:13Z"}, "message": "Rollup merge of #99631 - jmqd:master, r=oli-obk\n\nUse span_bug in case of unexpected rib kind\n\nExtremely minor QOL change to improve the ICE compiler output in case\nthis default match case is encountered (an unexpected rib kind).\n\nI have limited experience in this area of the compiler; please let me know\nif a span more precise than `param.ident.span` is more applicable.", "tree": {"sha": "dfeed74d7edb969e344fca3d157104f22d3620d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfeed74d7edb969e344fca3d157104f22d3620d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f510d98ad387f2da7be0ad137ef2a9fd80dc812e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi28iNCRBK7hj4Ov3rIwAAWS0IAEa4nK5jpup4kdw3QaKWsXeU\nFjzvnjjNoySLw/IAvKfEsb8yIwcsvujk+QZb6nFPN2RqpaR6+EafgrdcqnnChNON\nNQm2Ui1wZUy2dMSgcw4dqeZNxSSaUUeugTG4HqH4932ZiqSNkAuNs9sgL8LI4Ld9\nJSHNZMDa1W128ZGl1IQazd9CUBotdFhAQ2l/iipMATnaJhqOK09ddia3pGxAhrlU\nRvFXvjuTD1IQiP/vKQ6E7AVyqaQnPyktF/0YPgPy97AH++i7eIyE5X8B1h0Sktx6\nXRsv6FraUVPbfYuUsXzrG7GKuc43Uropv9+uAxFF9A+3TaAYXKlbn33tubZ+8xw=\n=SgoV\n-----END PGP SIGNATURE-----\n", "payload": "tree dfeed74d7edb969e344fca3d157104f22d3620d5\nparent 539b8dd2e360118157fc35675cefbb1d1a519545\nparent e0c9be539a2129478b4d6246cda6a398738290a0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1658570893 +0200\ncommitter GitHub <noreply@github.com> 1658570893 +0200\n\nRollup merge of #99631 - jmqd:master, r=oli-obk\n\nUse span_bug in case of unexpected rib kind\n\nExtremely minor QOL change to improve the ICE compiler output in case\nthis default match case is encountered (an unexpected rib kind).\n\nI have limited experience in this area of the compiler; please let me know\nif a span more precise than `param.ident.span` is more applicable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f510d98ad387f2da7be0ad137ef2a9fd80dc812e", "html_url": "https://github.com/rust-lang/rust/commit/f510d98ad387f2da7be0ad137ef2a9fd80dc812e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f510d98ad387f2da7be0ad137ef2a9fd80dc812e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "539b8dd2e360118157fc35675cefbb1d1a519545", "url": "https://api.github.com/repos/rust-lang/rust/commits/539b8dd2e360118157fc35675cefbb1d1a519545", "html_url": "https://github.com/rust-lang/rust/commit/539b8dd2e360118157fc35675cefbb1d1a519545"}, {"sha": "e0c9be539a2129478b4d6246cda6a398738290a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c9be539a2129478b4d6246cda6a398738290a0", "html_url": "https://github.com/rust-lang/rust/commit/e0c9be539a2129478b4d6246cda6a398738290a0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e739ed678d8be8aa18f2256a0a3430ee22f028e5", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f510d98ad387f2da7be0ad137ef2a9fd80dc812e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f510d98ad387f2da7be0ad137ef2a9fd80dc812e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=f510d98ad387f2da7be0ad137ef2a9fd80dc812e", "patch": "@@ -2111,7 +2111,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             let res = match kind {\n                 ItemRibKind(..) | AssocItemRibKind => Res::Def(def_kind, def_id.to_def_id()),\n                 NormalRibKind => Res::Err,\n-                _ => bug!(\"Unexpected rib kind {:?}\", kind),\n+                _ => span_bug!(param.ident.span, \"Unexpected rib kind {:?}\", kind),\n             };\n             self.r.record_partial_res(param.id, PartialRes::new(res));\n             rib.bindings.insert(ident, res);"}]}