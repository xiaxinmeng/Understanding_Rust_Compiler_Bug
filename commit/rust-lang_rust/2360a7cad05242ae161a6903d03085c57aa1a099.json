{"sha": "2360a7cad05242ae161a6903d03085c57aa1a099", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNjBhN2NhZDA1MjQyYWUxNjFhNjkwM2QwMzA4NWM1N2FhMWEwOTk=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-18T17:01:45Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "cargo clippy dev: collecting one-line clippy warnings works now", "tree": {"sha": "2bbd70899a6bf0c22acd23dfb1cedb4d6a533ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bbd70899a6bf0c22acd23dfb1cedb4d6a533ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2360a7cad05242ae161a6903d03085c57aa1a099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2360a7cad05242ae161a6903d03085c57aa1a099", "html_url": "https://github.com/rust-lang/rust/commit/2360a7cad05242ae161a6903d03085c57aa1a099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2360a7cad05242ae161a6903d03085c57aa1a099/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69c0757334806f0cd0bf680428959723b042555b", "url": "https://api.github.com/repos/rust-lang/rust/commits/69c0757334806f0cd0bf680428959723b042555b", "html_url": "https://github.com/rust-lang/rust/commit/69c0757334806f0cd0bf680428959723b042555b"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "3ac62f7ebc760f3983b55dc0a6670c1d0ae4a00c", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2360a7cad05242ae161a6903d03085c57aa1a099/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2360a7cad05242ae161a6903d03085c57aa1a099/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=2360a7cad05242ae161a6903d03085c57aa1a099", "patch": "@@ -57,22 +57,26 @@ impl KrateSource {\n         Krate {\n             version: self.version.clone(),\n             name: self.name.clone(),\n-            path: extract_dir.join(format!(\"{}-{}/\", self.name, self.version))\n+            path: extract_dir.join(format!(\"{}-{}/\", self.name, self.version)),\n         }\n     }\n }\n \n impl Krate {\n-    fn run_clippy_lints(&self, cargo_clippy_path:  &PathBuf) -> String {\n+    fn run_clippy_lints(&self, cargo_clippy_path: &PathBuf) -> String {\n         let cargo_clippy_path = std::fs::canonicalize(cargo_clippy_path).unwrap();\n         let project_root = &self.path;\n         dbg!(&cargo_clippy_path);\n         dbg!(&project_root);\n \n-        let output = std::process::Command::new(cargo_clippy_path).current_dir(project_root).output();\n-        dbg!(&output);\n-        let output = String::from_utf8_lossy(&output.unwrap().stderr).into_owned();\n-        dbg!(&output);\n+        let output = std::process::Command::new(cargo_clippy_path)\n+            .args(&[\"--\", \"--message-format=short\",\"--\", \"--cap-lints=warn\",])\n+            .current_dir(project_root)\n+            .output();\n+        let output: String = String::from_utf8_lossy(&output.unwrap().stderr).lines().filter(|line|line.contains(\": warning: \")).collect();\n+       // output.lines().for_each(|l| println!(\"{}\", l));\n+        //dbg!(&output);\n+\n         output\n     }\n }\n@@ -90,7 +94,7 @@ pub fn run() {\n     let clippy_driver_path: PathBuf = PathBuf::from(\"target/debug/clippy-driver\");\n \n     // crates we want to check:\n-    let krates: Vec<KrateSource> = vec![KrateSource::new(\"regex\", \"1.4.2\"), KrateSource::new(\"cargo\", \"0.49.0\"), ];\n+    let krates: Vec<KrateSource> = vec![KrateSource::new(\"regex\", \"1.4.2\"), KrateSource::new(\"cargo\", \"0.49.0\")];\n \n     println!(\"Compiling clippy...\");\n     build_clippy();\n@@ -106,12 +110,13 @@ pub fn run() {\n         clippy_driver_path.is_file(),\n         \"target/debug/clippy-driver binary not found! {}\",\n         clippy_driver_path.display()\n-     );\n+    );\n \n     // download and extract the crates, then run clippy on them and collect clippys warnings\n-    let _clippy_lint_results: Vec<String> = krates\n+    let clippy_lint_results: Vec<String> = krates\n         .into_iter()\n         .map(|krate| krate.download_and_extract())\n         .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n         .collect::<Vec<String>>();\n+        dbg!(clippy_lint_results);\n }"}]}