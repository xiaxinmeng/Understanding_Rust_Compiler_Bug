{"sha": "ae6376d74cf354a71a83d8c1dcc93589acbce6ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNjM3NmQ3NGNmMzU0YTcxYTgzZDhjMWRjYzkzNTg5YWNiY2U2ZWE=", "commit": {"author": {"name": "GrayJack", "email": "gr41.j4ck@gmail.com", "date": "2020-10-26T20:23:29Z"}, "committer": {"name": "GrayJack", "email": "gr41.j4ck@gmail.com", "date": "2020-10-26T20:23:29Z"}, "message": "Fix test", "tree": {"sha": "a23a1d4e976b05458534fb0c8f5d33657f8d7022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a23a1d4e976b05458534fb0c8f5d33657f8d7022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae6376d74cf354a71a83d8c1dcc93589acbce6ea", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEcp2lmfLVC4NXZ3mZEsVOBKq5kx4FAl+XMEEACgkQEsVOBKq5\nkx5QmQ//V+q6mArZVD95HiLaynV+aRXNC5ajcDMP5Q4d+tK2kGGoJc/1goch1Smf\nuPvoAdbbI7Ec4HKY0sJJTGFTNqa0odwBOWK555XwG5ytzYeKlis8Vku10bLF6bNl\navw7i9SLg8j5QsaL8HlpRuRy+lxQWp1v7pCIM6FSTgVbegwyOSlqCXk3LB4i1XUt\nCnRjN6TCSsv6aEg3vmoySQtsVbmjqv5s0KY0G9kJOtMXZN6vtkHIciu1n87ucXj4\nLWwZLa54Kv8gPQNg0BFwwYoFDKHnxoUHeUX5eyZopWHEkJkAsCSNEWwwqydPnue0\nYw0YXxkH/xqoTGp/o8ihAoRQ8sxGrNJj+76mgsa12Esv7hez+4J3PoL6zpSxTZBs\nNOFPoAbkwaCRbThqULRibVd8AgkHr/qG7i2am2598YKXapWRpX/JlfQz+H2r3IJZ\nwhikjPP2cREsCYY2DZ3doRZAjOe1Bo6VRGoNF84fER+mJ11il+xCejp+vSJHUzWB\nXsw28Xfttm+AuDao+wPU8KkaNqWczpJYai8fVXjZicH80tD3LKK8vtvIQhE5osLw\nV5EkiJ99UfI/E4E5g1HlBe7OUhwjc40Kuk/fdBtgB09GV3eWPrVqhKpMgzl7oJi4\nhmyVZQeiezY3rAidK5Hp+iRZYD5x+XST5T82CQqZAF91jyuZqZE=\n=M9Ws\n-----END PGP SIGNATURE-----", "payload": "tree a23a1d4e976b05458534fb0c8f5d33657f8d7022\nparent 40a875ab7a65f21adae81414de48706b2b794687\nauthor GrayJack <gr41.j4ck@gmail.com> 1603743809 -0300\ncommitter GrayJack <gr41.j4ck@gmail.com> 1603743809 -0300\n\nFix test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6376d74cf354a71a83d8c1dcc93589acbce6ea", "html_url": "https://github.com/rust-lang/rust/commit/ae6376d74cf354a71a83d8c1dcc93589acbce6ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae6376d74cf354a71a83d8c1dcc93589acbce6ea/comments", "author": {"login": "GrayJack", "id": 17973728, "node_id": "MDQ6VXNlcjE3OTczNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/17973728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrayJack", "html_url": "https://github.com/GrayJack", "followers_url": "https://api.github.com/users/GrayJack/followers", "following_url": "https://api.github.com/users/GrayJack/following{/other_user}", "gists_url": "https://api.github.com/users/GrayJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrayJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrayJack/subscriptions", "organizations_url": "https://api.github.com/users/GrayJack/orgs", "repos_url": "https://api.github.com/users/GrayJack/repos", "events_url": "https://api.github.com/users/GrayJack/events{/privacy}", "received_events_url": "https://api.github.com/users/GrayJack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GrayJack", "id": 17973728, "node_id": "MDQ6VXNlcjE3OTczNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/17973728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrayJack", "html_url": "https://github.com/GrayJack", "followers_url": "https://api.github.com/users/GrayJack/followers", "following_url": "https://api.github.com/users/GrayJack/following{/other_user}", "gists_url": "https://api.github.com/users/GrayJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrayJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrayJack/subscriptions", "organizations_url": "https://api.github.com/users/GrayJack/orgs", "repos_url": "https://api.github.com/users/GrayJack/repos", "events_url": "https://api.github.com/users/GrayJack/events{/privacy}", "received_events_url": "https://api.github.com/users/GrayJack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40a875ab7a65f21adae81414de48706b2b794687", "url": "https://api.github.com/repos/rust-lang/rust/commits/40a875ab7a65f21adae81414de48706b2b794687", "html_url": "https://github.com/rust-lang/rust/commit/40a875ab7a65f21adae81414de48706b2b794687"}], "stats": {"total": 316, "additions": 158, "deletions": 158}, "files": [{"sha": "ee115972b0cb263f7eb26c960249173e8693eb3b", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 158, "deletions": 158, "changes": 316, "blob_url": "https://github.com/rust-lang/rust/blob/ae6376d74cf354a71a83d8c1dcc93589acbce6ea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/ae6376d74cf354a71a83d8c1dcc93589acbce6ea/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=ae6376d74cf354a71a83d8c1dcc93589acbce6ea", "patch": "@@ -1,203 +1,203 @@\n \n <style>\n-    body                { margin: 0; }\n-    pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-    .lifetime           { color: #DFAF8F; font-style: italic; }\n-    .comment            { color: #7F9F7F; }\n-    .documentation      { color: #629755; }\n-    .injected           { opacity: 0.65 ; }\n-    .struct, .enum      { color: #7CB8BB; }\n-    .enum_variant       { color: #BDE0F3; }\n-    .string_literal     { color: #CC9393; }\n-    .field              { color: #94BFF3; }\n-    .function           { color: #93E0E3; }\n-    .function.unsafe    { color: #BC8383; }\n-    .operator.unsafe    { color: #BC8383; }\n-    .parameter          { color: #94BFF3; }\n-    .text               { color: #DCDCCC; }\n-    .type               { color: #7CB8BB; }\n-    .builtin_type       { color: #8CD0D3; }\n-    .type_param         { color: #DFAF8F; }\n-    .attribute          { color: #94BFF3; }\n-    .numeric_literal    { color: #BFEBBF; }\n-    .bool_literal       { color: #BFE6EB; }\n-    .macro              { color: #94BFF3; }\n-    .module             { color: #AFD8AF; }\n-    .value_param        { color: #DCDCCC; }\n-    .variable           { color: #DCDCCC; }\n-    .format_specifier   { color: #CC696B; }\n-    .mutable            { text-decoration: underline; }\n-    .escape_sequence    { color: #94BFF3; }\n-    .keyword            { color: #F0DFAF; font-weight: bold; }\n-    .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n-    .control            { font-style: italic; }\n-\n-    .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n-    </style>\n-    <pre><code><span class=\"keyword\">use</span> <span class=\"module\">inner</span><span class=\"operator\">::</span><span class=\"punctuation\">{</span><span class=\"self_keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"module declaration\">inner_mod</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">mod</span> <span class=\"module declaration\">inner</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-\n-    <span class=\"comment\">// Needed for function consuming vs normal</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">marker</span> <span class=\"punctuation\">{</span>\n-        <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"copy\"</span><span class=\"attribute\">]</span>\n-        <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Copy</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n \n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">ops</span> <span class=\"punctuation\">{</span>\n-        <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_once\"</span><span class=\"attribute\">]</span>\n-        <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"keyword\">use</span> <span class=\"module\">inner</span><span class=\"operator\">::</span><span class=\"punctuation\">{</span><span class=\"self_keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"module declaration\">inner_mod</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">mod</span> <span class=\"module declaration\">inner</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n-        <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_mut\"</span><span class=\"attribute\">]</span>\n-        <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"comment\">// Needed for function consuming vs normal</span>\n+<span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">marker</span> <span class=\"punctuation\">{</span>\n+    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"copy\"</span><span class=\"attribute\">]</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Copy</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-        <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn\"</span><span class=\"attribute\">]</span>\n-        <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Fn</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">ops</span> <span class=\"punctuation\">{</span>\n+    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_once\"</span><span class=\"attribute\">]</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+\n+    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn_mut\"</span><span class=\"attribute\">]</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnOnce</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+\n+    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">lang</span><span class=\"attribute\"> </span><span class=\"operator\">=</span><span class=\"attribute\"> </span><span class=\"string_literal\">\"fn\"</span><span class=\"attribute\">]</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Fn</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">:</span> <span class=\"trait\">FnMut</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">Args</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n \n-    <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">pub</span> <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n-        <span class=\"keyword\">pub</span> <span class=\"field declaration\">y</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n+    <span class=\"keyword\">pub</span> <span class=\"field declaration\">y</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n+<span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n+<span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">Foo</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"punctuation\">)</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n-        <span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">Foo</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"punctuation\">)</span>\n-        <span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n+    <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-            <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n-        <span class=\"punctuation\">}</span>\n+<span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Copy</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"punctuation\">{</span>\n+    <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">u32</span><span class=\"punctuation\">,</span>\n+<span class=\"punctuation\">}</span>\n \n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n-        <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">impl</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">FooCopy</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Copy</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n-    <span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"punctuation\">{</span>\n-        <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">u32</span><span class=\"punctuation\">,</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">impl</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">FooCopy</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span>\n-        <span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n+    <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-            <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n-        <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"self_keyword\">self</span><span class=\"punctuation\">.</span><span class=\"field\">x</span>\n-        <span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"punctuation\">,</span> <span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"punctuation\">{</span>\n+    <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"punctuation\">,</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">use</span> <span class=\"module\">ops</span><span class=\"operator\">::</span><span class=\"trait\">Fn</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">F</span><span class=\"punctuation\">:</span> <span class=\"trait\">Fn</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"value_param declaration callable\">f</span><span class=\"punctuation\">:</span> <span class=\"type_param\">F</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+    <span class=\"value_param callable\">f</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"punctuation\">,</span> <span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"punctuation\">{</span>\n-        <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"punctuation\">,</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foobar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"keyword\">impl</span> <span class=\"unresolved_reference\">Copy</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">use</span> <span class=\"module\">ops</span><span class=\"operator\">::</span><span class=\"trait\">Fn</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">F</span><span class=\"punctuation\">:</span> <span class=\"trait\">Fn</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"value_param declaration callable\">f</span><span class=\"punctuation\">:</span> <span class=\"type_param\">F</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-        <span class=\"value_param callable\">f</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"function\">foobar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">foobar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"keyword\">impl</span> <span class=\"unresolved_reference\">Copy</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">def_fn</span> <span class=\"punctuation\">{</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"function\">foobar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+<span class=\"macro\">def_fn!</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"numeric_literal\">100</span>\n     <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">def_fn</span> <span class=\"punctuation\">{</span>\n-        <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">:</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">$</span><span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>tt<span class=\"punctuation\">)</span><span class=\"punctuation\">*</span><span class=\"punctuation\">}</span>\n+<span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">noop</span> <span class=\"punctuation\">{</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+        <span class=\"punctuation\">$</span>expr\n     <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"macro\">def_fn!</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n-            <span class=\"numeric_literal\">100</span>\n-        <span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">keyword_frag</span> <span class=\"punctuation\">{</span>\n+    <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>type<span class=\"punctuation\">:</span>ty<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>type<span class=\"punctuation\">)</span>\n+<span class=\"punctuation\">}</span>\n \n-    <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">noop</span> <span class=\"punctuation\">{</span>\n-        <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>expr<span class=\"punctuation\">:</span>expr<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-            <span class=\"punctuation\">$</span>expr\n-        <span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"comment\">// comment</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+    <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">keyword_frag</span> <span class=\"punctuation\">{</span>\n-        <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>type<span class=\"punctuation\">:</span>ty<span class=\"punctuation\">)</span> <span class=\"operator\">=</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">$</span>type<span class=\"punctuation\">)</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">{</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">;</span>\n+        <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">push</span><span class=\"punctuation\">(</span><span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">1</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"punctuation\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"punctuation\">{</span>\n+        <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+        <span class=\"static mutable unsafe\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"comment\">// comment</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-        <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-\n-        <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">{</span>\n-            <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"punctuation\">;</span>\n-            <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">push</span><span class=\"punctuation\">(</span><span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">1</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"punctuation\">}</span>\n-        <span class=\"keyword unsafe\">unsafe</span> <span class=\"punctuation\">{</span>\n-            <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-            <span class=\"static mutable unsafe\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n-        <span class=\"punctuation\">}</span>\n+    <span class=\"keyword control\">for</span> <span class=\"variable declaration\">e</span> <span class=\"keyword control\">in</span> <span class=\"variable mutable\">vec</span> <span class=\"punctuation\">{</span>\n+        <span class=\"comment\">// Do nothing</span>\n+    <span class=\"punctuation\">}</span>\n \n-        <span class=\"keyword control\">for</span> <span class=\"variable declaration\">e</span> <span class=\"keyword control\">in</span> <span class=\"variable mutable\">vec</span> <span class=\"punctuation\">{</span>\n-            <span class=\"comment\">// Do nothing</span>\n-        <span class=\"punctuation\">}</span>\n+    <span class=\"macro\">noop!</span><span class=\"punctuation\">(</span><span class=\"macro\">noop</span><span class=\"macro\">!</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"macro\">noop!</span><span class=\"punctuation\">(</span><span class=\"macro\">noop</span><span class=\"macro\">!</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"variable mutable\">y</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"variable mutable\">y</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable declaration\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable declaration\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">:</span> <span class=\"variable\">z</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable\">y</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"variable\">y</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">foo2</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"variable consuming\">foo2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">foo2</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">foo</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"variable consuming\">foo2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">copy</span> <span class=\"operator\">=</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"variable mutable\">copy</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">copy</span> <span class=\"operator\">=</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"variable mutable\">copy</span><span class=\"punctuation\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"variable mutable\">copy</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function\">baz</span><span class=\"punctuation\">;</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function\">baz</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">-</span><span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"variable\">baz</span><span class=\"punctuation\">;</span>\n+<span class=\"punctuation\">}</span>\n \n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">-</span><span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"variable\">baz</span><span class=\"punctuation\">;</span>\n-    <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">enum</span> <span class=\"enum declaration\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"enum_variant declaration\">Some</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n+    <span class=\"enum_variant declaration\">None</span><span class=\"punctuation\">,</span>\n+<span class=\"punctuation\">}</span>\n+<span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">enum</span> <span class=\"enum declaration\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-        <span class=\"enum_variant declaration\">Some</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n-        <span class=\"enum_variant declaration\">None</span><span class=\"punctuation\">,</span>\n-    <span class=\"punctuation\">}</span>\n-    <span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"punctuation\">;</span>\n-\n-    <span class=\"keyword\">impl</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-        <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-            <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"punctuation\">{</span>\n-                <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n-                <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"punctuation\">,</span>\n-            <span class=\"punctuation\">}</span>\n+<span class=\"keyword\">impl</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+        <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"punctuation\">{</span>\n+            <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n+            <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"punctuation\">,</span>\n         <span class=\"punctuation\">}</span>\n-    <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file\n+    <span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}]}