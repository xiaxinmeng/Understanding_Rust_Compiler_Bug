{"sha": "8c21920cc721de6a75c959168240c3cba4177df5", "node_id": "C_kwDOAAsO6NoAKDhjMjE5MjBjYzcyMWRlNmE3NWM5NTkxNjgyNDBjM2NiYTQxNzdkZjU", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-18T03:30:55Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-25T15:15:05Z"}, "message": "std: make internal-only items `pub(crate)`\n\nThis works around a weird problem that looks like a bug in the\n`exported_private_dependencies` lint.", "tree": {"sha": "5781293bad03658c103dbf439b20e7ba69b42ba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5781293bad03658c103dbf439b20e7ba69b42ba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c21920cc721de6a75c959168240c3cba4177df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c21920cc721de6a75c959168240c3cba4177df5", "html_url": "https://github.com/rust-lang/rust/commit/8c21920cc721de6a75c959168240c3cba4177df5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c21920cc721de6a75c959168240c3cba4177df5/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e52f4deb0544480b6aefe2c0cc1e6f3c893b081", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e52f4deb0544480b6aefe2c0cc1e6f3c893b081", "html_url": "https://github.com/rust-lang/rust/commit/2e52f4deb0544480b6aefe2c0cc1e6f3c893b081"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1b50c2ea6dd57c2e86b84d2882208be6158ec02a", "filename": "library/std/src/sys/wasi/fd.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c21920cc721de6a75c959168240c3cba4177df5/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c21920cc721de6a75c959168240c3cba4177df5/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs?ref=8c21920cc721de6a75c959168240c3cba4177df5", "patch": "@@ -96,7 +96,7 @@ impl WasiFd {\n         unsafe { wasi::fd_sync(self.as_raw_fd() as wasi::Fd).map_err(err2io) }\n     }\n \n-    pub fn advise(&self, offset: u64, len: u64, advice: wasi::Advice) -> io::Result<()> {\n+    pub(crate) fn advise(&self, offset: u64, len: u64, advice: wasi::Advice) -> io::Result<()> {\n         unsafe {\n             wasi::fd_advise(self.as_raw_fd() as wasi::Fd, offset, len, advice).map_err(err2io)\n         }\n@@ -179,7 +179,7 @@ impl WasiFd {\n         }\n     }\n \n-    pub fn filestat_get(&self) -> io::Result<wasi::Filestat> {\n+    pub(crate) fn filestat_get(&self) -> io::Result<wasi::Filestat> {\n         unsafe { wasi::fd_filestat_get(self.as_raw_fd() as wasi::Fd).map_err(err2io) }\n     }\n \n@@ -199,7 +199,7 @@ impl WasiFd {\n         unsafe { wasi::fd_filestat_set_size(self.as_raw_fd() as wasi::Fd, size).map_err(err2io) }\n     }\n \n-    pub fn path_filestat_get(\n+    pub(crate) fn path_filestat_get(\n         &self,\n         flags: wasi::Lookupflags,\n         path: &str,"}, {"sha": "437aae3ae7f7f5808dad81a9eb29d8207749ebce", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c21920cc721de6a75c959168240c3cba4177df5/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c21920cc721de6a75c959168240c3cba4177df5/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=8c21920cc721de6a75c959168240c3cba4177df5", "patch": "@@ -104,7 +104,7 @@ impl FileAttr {\n         Ok(SystemTime::from_wasi_timestamp(self.meta.ctim))\n     }\n \n-    pub fn as_wasi(&self) -> &wasi::Filestat {\n+    pub(crate) fn as_wasi(&self) -> &wasi::Filestat {\n         &self.meta\n     }\n }\n@@ -142,7 +142,7 @@ impl FileType {\n         self.bits == wasi::FILETYPE_SYMBOLIC_LINK\n     }\n \n-    pub fn bits(&self) -> wasi::Filetype {\n+    pub(crate) fn bits(&self) -> wasi::Filetype {\n         self.bits\n     }\n }"}]}