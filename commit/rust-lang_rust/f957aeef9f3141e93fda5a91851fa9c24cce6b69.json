{"sha": "f957aeef9f3141e93fda5a91851fa9c24cce6b69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NTdhZWVmOWYzMTQxZTkzZmRhNWE5MTg1MWZhOWMyNGNjZTZiNjk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T08:40:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-21T08:40:41Z"}, "message": "Rollup merge of #76959 - est31:write, r=oli-obk\n\nReplace write_fmt with write!\n\nLatter is simpler", "tree": {"sha": "c43da1f6d7a56025542710efe4fe86d7868bcfbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43da1f6d7a56025542710efe4fe86d7868bcfbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f957aeef9f3141e93fda5a91851fa9c24cce6b69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfaGcJCRBK7hj4Ov3rIwAAdHIIAKisfAMDGrmVpVMnEOYpFFCr\nrv40FKLMREeIN4lFCldhVckRM2l+LaKTbNJ2cm0H18BXWS/8lQDPKfMwZDZdG1m6\nf+Q4G5pzBQqnCfmK30ElPJlcNbGO4LdbDzFXM/ZnbfYlxpKmjZDAReY/QGtY8rTj\noSHBQ2sBQheGlCu7ynaP3P+Et9kLolblYV6czfPqKAzjRJlOjG38kVpf+gjZe0MS\niakGLxaJFMrTB27LjIRCIGT7WQ2ixhJ1eUCti20kzmTvu3a8ibxBWBiscWNz0nfC\n4PoNh17eD8ovaG5hM1i7lhHnUjztY6Ae/6cnKVsKTmPpUzLu1Uw8uuYKby5RF6Y=\n=OUWe\n-----END PGP SIGNATURE-----\n", "payload": "tree c43da1f6d7a56025542710efe4fe86d7868bcfbf\nparent 048866bd6b74ef34a8a2e1a3e89f9617834a5d05\nparent 4bc0e55ac4280be80d8cd0f9bc26bd0949f75494\nauthor Ralf Jung <post@ralfj.de> 1600677641 +0200\ncommitter GitHub <noreply@github.com> 1600677641 +0200\n\nRollup merge of #76959 - est31:write, r=oli-obk\n\nReplace write_fmt with write!\n\nLatter is simpler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f957aeef9f3141e93fda5a91851fa9c24cce6b69", "html_url": "https://github.com/rust-lang/rust/commit/f957aeef9f3141e93fda5a91851fa9c24cce6b69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f957aeef9f3141e93fda5a91851fa9c24cce6b69/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "048866bd6b74ef34a8a2e1a3e89f9617834a5d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/048866bd6b74ef34a8a2e1a3e89f9617834a5d05", "html_url": "https://github.com/rust-lang/rust/commit/048866bd6b74ef34a8a2e1a3e89f9617834a5d05"}, {"sha": "4bc0e55ac4280be80d8cd0f9bc26bd0949f75494", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc0e55ac4280be80d8cd0f9bc26bd0949f75494", "html_url": "https://github.com/rust-lang/rust/commit/4bc0e55ac4280be80d8cd0f9bc26bd0949f75494"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "a03cf9dd791156077329232a1be4e3e36ee7a96b", "filename": "library/test/src/bench.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f957aeef9f3141e93fda5a91851fa9c24cce6b69/library%2Ftest%2Fsrc%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f957aeef9f3141e93fda5a91851fa9c24cce6b69/library%2Ftest%2Fsrc%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fbench.rs?ref=f957aeef9f3141e93fda5a91851fa9c24cce6b69", "patch": "@@ -61,15 +61,15 @@ pub fn fmt_bench_samples(bs: &BenchSamples) -> String {\n     let median = bs.ns_iter_summ.median as usize;\n     let deviation = (bs.ns_iter_summ.max - bs.ns_iter_summ.min) as usize;\n \n-    output\n-        .write_fmt(format_args!(\n-            \"{:>11} ns/iter (+/- {})\",\n-            fmt_thousands_sep(median, ','),\n-            fmt_thousands_sep(deviation, ',')\n-        ))\n-        .unwrap();\n+    write!(\n+        output,\n+        \"{:>11} ns/iter (+/- {})\",\n+        fmt_thousands_sep(median, ','),\n+        fmt_thousands_sep(deviation, ',')\n+    )\n+    .unwrap();\n     if bs.mb_s != 0 {\n-        output.write_fmt(format_args!(\" = {} MB/s\", bs.mb_s)).unwrap();\n+        write!(output, \" = {} MB/s\", bs.mb_s).unwrap();\n     }\n     output\n }\n@@ -83,9 +83,9 @@ fn fmt_thousands_sep(mut n: usize, sep: char) -> String {\n         let base = 10_usize.pow(pow);\n         if pow == 0 || trailing || n / base != 0 {\n             if !trailing {\n-                output.write_fmt(format_args!(\"{}\", n / base)).unwrap();\n+                write!(output, \"{}\", n / base).unwrap();\n             } else {\n-                output.write_fmt(format_args!(\"{:03}\", n / base)).unwrap();\n+                write!(output, \"{:03}\", n / base).unwrap();\n             }\n             if pow != 0 {\n                 output.push(sep);"}, {"sha": "e10f72a47b2c427d73011f7024e0d8cd7fb33c01", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f957aeef9f3141e93fda5a91851fa9c24cce6b69/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f957aeef9f3141e93fda5a91851fa9c24cce6b69/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=f957aeef9f3141e93fda5a91851fa9c24cce6b69", "patch": "@@ -27,12 +27,12 @@ macro_rules! t {\n \n fn generate_stub_issue(path: &Path, name: &str, issue: u32) {\n     let mut file = t!(File::create(path));\n-    t!(file.write_fmt(format_args!(include_str!(\"stub-issue.md\"), name = name, issue = issue)));\n+    t!(write!(file, include_str!(\"stub-issue.md\"), name = name, issue = issue));\n }\n \n fn generate_stub_no_issue(path: &Path, name: &str) {\n     let mut file = t!(File::create(path));\n-    t!(file.write_fmt(format_args!(include_str!(\"stub-no-issue.md\"), name = name)));\n+    t!(write!(file, include_str!(\"stub-no-issue.md\"), name = name));\n }\n \n fn set_to_summary_str(set: &BTreeSet<String>, dir: &str) -> String {"}]}