{"sha": "79289b954505764d3b1fce55e1770586f116a3fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Mjg5Yjk1NDUwNTc2NGQzYjFmY2U1NWUxNzcwNTg2ZjExNmEzZmE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-07-30T22:59:41Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-08-04T11:31:30Z"}, "message": "cleanup: Remove `Def::GlobalAsm`", "tree": {"sha": "b9686924a8cef55d773f96d85fc9737cb27ab220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9686924a8cef55d773f96d85fc9737cb27ab220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79289b954505764d3b1fce55e1770586f116a3fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79289b954505764d3b1fce55e1770586f116a3fa", "html_url": "https://github.com/rust-lang/rust/commit/79289b954505764d3b1fce55e1770586f116a3fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79289b954505764d3b1fce55e1770586f116a3fa/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "579adf8c727861841b4819b4913385c2782977fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/579adf8c727861841b4819b4913385c2782977fb", "html_url": "https://github.com/rust-lang/rust/commit/579adf8c727861841b4819b4913385c2782977fb"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "b297accc75fd5a2a100df19f7525a62a6329ec73", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=79289b954505764d3b1fce55e1770586f116a3fa", "patch": "@@ -70,8 +70,6 @@ pub enum Def {\n     Macro(DefId, MacroKind),\n     NonMacroAttr, // e.g. `#[inline]` or `#[rustfmt::skip]`\n \n-    GlobalAsm(DefId),\n-\n     // Both namespaces\n     Err,\n }\n@@ -251,8 +249,7 @@ impl Def {\n             Def::AssociatedTy(id) | Def::TyParam(id) | Def::Struct(id) | Def::StructCtor(id, ..) |\n             Def::Union(id) | Def::Trait(id) | Def::Method(id) | Def::Const(id) |\n             Def::AssociatedConst(id) | Def::Macro(id, ..) |\n-            Def::Existential(id) | Def::AssociatedExistential(id) |\n-            Def::GlobalAsm(id) | Def::TyForeign(id) => {\n+            Def::Existential(id) | Def::AssociatedExistential(id) | Def::TyForeign(id) => {\n                 id\n             }\n \n@@ -302,7 +299,6 @@ impl Def {\n             Def::Label(..) => \"label\",\n             Def::SelfTy(..) => \"self type\",\n             Def::Macro(.., macro_kind) => macro_kind.descr(),\n-            Def::GlobalAsm(..) => \"global asm\",\n             Def::ToolMod => \"tool module\",\n             Def::NonMacroAttr => \"non-macro attribute\",\n             Def::Err => \"unresolved item\","}, {"sha": "b05bcadf82649daa57cb8573a60d2a613ce8263a", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=79289b954505764d3b1fce55e1770586f116a3fa", "patch": "@@ -432,7 +432,6 @@ impl<'hir> Map<'hir> {\n                     ItemKind::Const(..) => Some(Def::Const(def_id())),\n                     ItemKind::Fn(..) => Some(Def::Fn(def_id())),\n                     ItemKind::Mod(..) => Some(Def::Mod(def_id())),\n-                    ItemKind::GlobalAsm(..) => Some(Def::GlobalAsm(def_id())),\n                     ItemKind::Existential(..) => Some(Def::Existential(def_id())),\n                     ItemKind::Ty(..) => Some(Def::TyAlias(def_id())),\n                     ItemKind::Enum(..) => Some(Def::Enum(def_id())),\n@@ -445,6 +444,7 @@ impl<'hir> Map<'hir> {\n                     ItemKind::ExternCrate(_) |\n                     ItemKind::Use(..) |\n                     ItemKind::ForeignMod(..) |\n+                    ItemKind::GlobalAsm(..) |\n                     ItemKind::Impl(..) => None,\n                 }\n             }"}, {"sha": "923cd1e1f83974a21194c064aafc0dab221ebef7", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=79289b954505764d3b1fce55e1770586f116a3fa", "patch": "@@ -1015,7 +1015,6 @@ impl_stable_hash_for!(enum hir::def::Def {\n     Upvar(def_id, index, expr_id),\n     Label(node_id),\n     Macro(def_id, macro_kind),\n-    GlobalAsm(def_id),\n     ToolMod,\n     NonMacroAttr,\n     Err"}, {"sha": "cf034d9425759b19ac97c2cbe3d01dfbd79b6f71", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=79289b954505764d3b1fce55e1770586f116a3fa", "patch": "@@ -427,10 +427,10 @@ impl<'tcx> EntryKind<'tcx> {\n             EntryKind::Trait(_) => Def::Trait(did),\n             EntryKind::Enum(..) => Def::Enum(did),\n             EntryKind::MacroDef(_) => Def::Macro(did, MacroKind::Bang),\n-            EntryKind::GlobalAsm => Def::GlobalAsm(did),\n             EntryKind::ForeignType => Def::TyForeign(did),\n \n             EntryKind::ForeignMod |\n+            EntryKind::GlobalAsm |\n             EntryKind::Impl(_) |\n             EntryKind::Field |\n             EntryKind::Generator(_) |"}, {"sha": "f3b71f2641d41c47606edf872b9ec636e43eccf9", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79289b954505764d3b1fce55e1770586f116a3fa/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=79289b954505764d3b1fce55e1770586f116a3fa", "patch": "@@ -810,7 +810,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             HirDef::SelfTy(..) |\n             HirDef::Label(..) |\n             HirDef::Macro(..) |\n-            HirDef::GlobalAsm(..) |\n             HirDef::ToolMod |\n             HirDef::NonMacroAttr |\n             HirDef::Err => None,"}]}