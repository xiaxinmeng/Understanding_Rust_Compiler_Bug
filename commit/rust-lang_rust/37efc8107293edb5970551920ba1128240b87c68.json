{"sha": "37efc8107293edb5970551920ba1128240b87c68", "node_id": "C_kwDOAAsO6NoAKDM3ZWZjODEwNzI5M2VkYjU5NzA1NTE5MjBiYTExMjgyNDBiODdjNjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-18T16:03:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-18T16:03:46Z"}, "message": "Auto merge of #105714 - jyn514:tidy-first, r=Mark-Simulacrum\n\nRun `x test tidy` sooner in mingw-check\n\nIt takes less time to run than the other tests and is more likely to fail. `expand-yaml-anchors` is still run first to make sure the CI files are internally consistent.\n\nNote that changing to `--stage 0` doesn't actually do anything since bootstrap tools are always built with the bootstrap compiler, this just makes it less confusing.\n\ncc https://github.com/rust-lang/rust/pull/105058/commits/83bab41b5b2d4752d187dd91b05c88ac74cf3783", "tree": {"sha": "8a9b3b347f1ef98b29fd8ff4079cd5f38a6142f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a9b3b347f1ef98b29fd8ff4079cd5f38a6142f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37efc8107293edb5970551920ba1128240b87c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37efc8107293edb5970551920ba1128240b87c68", "html_url": "https://github.com/rust-lang/rust/commit/37efc8107293edb5970551920ba1128240b87c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37efc8107293edb5970551920ba1128240b87c68/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a99eef32a2b7b9d8e77dde539f869e522d181f", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a99eef32a2b7b9d8e77dde539f869e522d181f", "html_url": "https://github.com/rust-lang/rust/commit/35a99eef32a2b7b9d8e77dde539f869e522d181f"}, {"sha": "b8a84c2c53328757b407829da3049c6baa049a0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a84c2c53328757b407829da3049c6baa049a0e", "html_url": "https://github.com/rust-lang/rust/commit/b8a84c2c53328757b407829da3049c6baa049a0e"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "2906616ffad142958e4debc08d55472a7b348971", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37efc8107293edb5970551920ba1128240b87c68/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37efc8107293edb5970551920ba1128240b87c68/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=37efc8107293edb5970551920ba1128240b87c68", "patch": "@@ -638,6 +638,7 @@ define_config! {\n         dist_stage: Option<u32> = \"dist-stage\",\n         bench_stage: Option<u32> = \"bench-stage\",\n         patch_binaries_for_nix: Option<bool> = \"patch-binaries-for-nix\",\n+        // NOTE: only parsed by bootstrap.py, `--feature build-metrics` enables metrics unconditionally\n         metrics: Option<bool> = \"metrics\",\n     }\n }"}, {"sha": "9e2568af13f689d07688c03881cfd33cdbbd9f82", "filename": "src/ci/docker/host-x86_64/mingw-check/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37efc8107293edb5970551920ba1128240b87c68/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/37efc8107293edb5970551920ba1128240b87c68/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile?ref=37efc8107293edb5970551920ba1128240b87c68", "patch": "@@ -40,10 +40,10 @@ COPY host-x86_64/mingw-check/validate-error-codes.sh /scripts/\n \n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n ENV SCRIPT python3 ../x.py --stage 2 test src/tools/expand-yaml-anchors && \\\n+           python3 ../x.py test --stage 0 src/tools/tidy && \\\n            python3 ../x.py check --target=i686-pc-windows-gnu --host=i686-pc-windows-gnu --all-targets && \\\n            python3 ../x.py build --stage 0 src/tools/build-manifest && \\\n            python3 ../x.py test --stage 0 src/tools/compiletest && \\\n-           python3 ../x.py test --stage 2 src/tools/tidy && \\\n            python3 ../x.py test --stage 0 core alloc std test proc_macro && \\\n            # Build both public and internal documentation.\n            RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 library/test && \\"}, {"sha": "f05bb81d4a1e3b31ba260b357e237911979d8f17", "filename": "src/ci/run.sh", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/37efc8107293edb5970551920ba1128240b87c68/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/37efc8107293edb5970551920ba1128240b87c68/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=37efc8107293edb5970551920ba1128240b87c68", "patch": "@@ -56,6 +56,7 @@ fi\n if ! isCI || isCiBranch auto || isCiBranch beta || isCiBranch try || isCiBranch try-perf; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set build.print-step-timings --enable-verbose-tests\"\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set build.metrics\"\n+    HAS_METRICS=1\n fi\n \n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n@@ -157,13 +158,6 @@ trap datecheck EXIT\n # sccache server at the start of the build, but no need to worry if this fails.\n SCCACHE_IDLE_TIMEOUT=10800 sccache --start-server || true\n \n-if [ \"$RUN_CHECK_WITH_PARALLEL_QUERIES\" != \"\" ]; then\n-  $SRC/configure --set rust.parallel-compiler\n-  CARGO_INCREMENTAL=0 $PYTHON ../x.py check\n-  rm -f config.toml\n-  rm -rf build\n-fi\n-\n $SRC/configure $RUST_CONFIGURE_ARGS\n \n retry make prepare\n@@ -193,4 +187,21 @@ else\n   do_make \"$RUST_CHECK_TARGET\"\n fi\n \n+if [ \"$RUN_CHECK_WITH_PARALLEL_QUERIES\" != \"\" ]; then\n+  rm -f config.toml\n+  $SRC/configure --set rust.parallel-compiler\n+\n+  # Save the build metrics before we wipe the directory\n+  if [ $HAS_METRICS = 1 ]; then\n+    mv build/metrics.json .\n+  fi\n+  rm -rf build\n+  if [ $HAS_METRICS = 1 ]; then\n+    mkdir build\n+    mv metrics.json build\n+  fi\n+\n+  CARGO_INCREMENTAL=0 $PYTHON ../x.py check\n+fi\n+\n sccache --show-stats || true"}]}