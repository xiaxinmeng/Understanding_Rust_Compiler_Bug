{"sha": "dceec3eb80f3f2d064536ef8272522f65ec1a76c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZWVjM2ViODBmM2YyZDA2NDUzNmVmODI3MjUyMmY2NWVjMWE3NmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-04T13:55:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-04T13:55:49Z"}, "message": "Merge #9136\n\n9136: feat: Add function references hover action r=Veykril a=Veykril\n\n![image](https://user-images.githubusercontent.com/3757771/120811670-8422ed80-c54c-11eb-87f5-dd65c1f8ef7d.png)\r\nThis is off by default as this can slow down hover messages significantly for very big projects I believe.\r\nFixes #6590\r\nbors r+\r\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "43dc7fa25956c233f6a2b3384c134eb48a243a36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43dc7fa25956c233f6a2b3384c134eb48a243a36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dceec3eb80f3f2d064536ef8272522f65ec1a76c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgujDlCRBK7hj4Ov3rIwAAY1cIADeop4XaouTjCFNjAn8+QIjF\n3vn6EgaPkOHPgqM5dQv3nofvToMLjlZDI4doXgQtAlspUkspRioZFAfLiOi+Pp2V\nz1Pt5DyTXU3pkln0XQkcjmMwMshMUiRw16sAufw803xHLveRKMwMHgzM7L76tkvo\nFXH3R/4jhsZSxS70KhJGlAaA7PYeVcMFHsg5492KNSYf2tSoXu99JEyDF4XxIcOz\n3YRT5hLp80erNdjoI6Lkv7ACSLlazlZwb2dT9FU8H4SN71cw9P9tIx578UTw9Aot\nqkTqu4xj1E9kyS19a9P/RDjmVV34xMIPc2uzMvZ8lfW3cCbA0tPfhOQFb3sQtdo=\n=thek\n-----END PGP SIGNATURE-----\n", "payload": "tree 43dc7fa25956c233f6a2b3384c134eb48a243a36\nparent cd46255d7e8bb59b93a32d5cb50581f418ca5f3b\nparent 07394316ff0c5454b3a9e854945ebd29b90259ec\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622814949 +0000\ncommitter GitHub <noreply@github.com> 1622814949 +0000\n\nMerge #9136\n\n9136: feat: Add function references hover action r=Veykril a=Veykril\n\n![image](https://user-images.githubusercontent.com/3757771/120811670-8422ed80-c54c-11eb-87f5-dd65c1f8ef7d.png)\r\nThis is off by default as this can slow down hover messages significantly for very big projects I believe.\r\nFixes #6590\r\nbors r+\r\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dceec3eb80f3f2d064536ef8272522f65ec1a76c", "html_url": "https://github.com/rust-lang/rust/commit/dceec3eb80f3f2d064536ef8272522f65ec1a76c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dceec3eb80f3f2d064536ef8272522f65ec1a76c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd46255d7e8bb59b93a32d5cb50581f418ca5f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd46255d7e8bb59b93a32d5cb50581f418ca5f3b", "html_url": "https://github.com/rust-lang/rust/commit/cd46255d7e8bb59b93a32d5cb50581f418ca5f3b"}, {"sha": "07394316ff0c5454b3a9e854945ebd29b90259ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/07394316ff0c5454b3a9e854945ebd29b90259ec", "html_url": "https://github.com/rust-lang/rust/commit/07394316ff0c5454b3a9e854945ebd29b90259ec"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "455a27e4882adb36933007db6763f789458f7449", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -28,6 +28,7 @@ use crate::{\n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct HoverConfig {\n     pub implementations: bool,\n+    pub references: bool,\n     pub run: bool,\n     pub debug: bool,\n     pub goto_type_def: bool,\n@@ -38,6 +39,7 @@ pub struct HoverConfig {\n impl HoverConfig {\n     pub const NO_ACTIONS: Self = Self {\n         implementations: false,\n+        references: false,\n         run: false,\n         debug: false,\n         goto_type_def: false,\n@@ -46,7 +48,7 @@ impl HoverConfig {\n     };\n \n     pub fn any(&self) -> bool {\n-        self.implementations || self.runnable() || self.goto_type_def\n+        self.implementations || self.references || self.runnable() || self.goto_type_def\n     }\n \n     pub fn none(&self) -> bool {\n@@ -62,6 +64,7 @@ impl HoverConfig {\n pub enum HoverAction {\n     Runnable(Runnable),\n     Implementation(FilePosition),\n+    Reference(FilePosition),\n     GoToType(Vec<HoverGotoTypeData>),\n }\n \n@@ -148,6 +151,10 @@ pub(crate) fn hover(\n                 res.actions.push(action);\n             }\n \n+            if let Some(action) = show_fn_references_action(db, definition) {\n+                res.actions.push(action);\n+            }\n+\n             if let Some(action) = runnable_action(&sema, definition, position.file_id) {\n                 res.actions.push(action);\n             }\n@@ -211,6 +218,18 @@ fn show_implementations_action(db: &RootDatabase, def: Definition) -> Option<Hov\n     adt.try_to_nav(db).map(to_action)\n }\n \n+fn show_fn_references_action(db: &RootDatabase, def: Definition) -> Option<HoverAction> {\n+    match def {\n+        Definition::ModuleDef(ModuleDef::Function(it)) => it.try_to_nav(db).map(|nav_target| {\n+            HoverAction::Reference(FilePosition {\n+                file_id: nav_target.file_id,\n+                offset: nav_target.focus_or_full_range().start(),\n+            })\n+        }),\n+        _ => None,\n+    }\n+}\n+\n fn runnable_action(\n     sema: &Semantics<RootDatabase>,\n     def: Definition,\n@@ -2377,6 +2396,14 @@ fn foo_$0test() {}\n \"#,\n             expect![[r#\"\n                 [\n+                    Reference(\n+                        FilePosition {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            offset: 11,\n+                        },\n+                    ),\n                     Runnable(\n                         Runnable {\n                             nav: NavigationTarget {"}, {"sha": "3b20d741a0d8220bbd63bd162cc73b11da798419", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -152,6 +152,9 @@ config_data! {\n         /// Whether to show `Implementations` action. Only applies when\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n         hoverActions_implementations: bool = \"true\",\n+        /// Whether to show `References` action. Only applies when\n+        /// `#rust-analyzer.hoverActions.enable#` is set.\n+        hoverActions_references: bool      = \"false\",\n         /// Whether to show `Run` action. Only applies when\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n         hoverActions_run: bool             = \"true\",\n@@ -719,6 +722,7 @@ impl Config {\n         HoverConfig {\n             implementations: self.data.hoverActions_enable\n                 && self.data.hoverActions_implementations,\n+            references: self.data.hoverActions_enable && self.data.hoverActions_references,\n             run: self.data.hoverActions_enable && self.data.hoverActions_run,\n             debug: self.data.hoverActions_enable && self.data.hoverActions_debug,\n             goto_type_def: self.data.hoverActions_enable && self.data.hoverActions_gotoTypeDef,"}, {"sha": "70511c5caf6d2cd8d9320fa6828fe08ab7b2df22", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -1506,6 +1506,36 @@ fn show_impl_command_link(\n     None\n }\n \n+fn show_ref_command_link(\n+    snap: &GlobalStateSnapshot,\n+    position: &FilePosition,\n+) -> Option<lsp_ext::CommandLinkGroup> {\n+    if snap.config.hover().implementations {\n+        if let Some(ref_search_res) = snap.analysis.find_all_refs(*position, None).unwrap_or(None) {\n+            let uri = to_proto::url(snap, position.file_id);\n+            let line_index = snap.file_line_index(position.file_id).ok()?;\n+            let position = to_proto::position(&line_index, position.offset);\n+            let locations: Vec<_> = ref_search_res\n+                .references\n+                .into_iter()\n+                .flat_map(|(file_id, ranges)| {\n+                    ranges.into_iter().filter_map(move |(range, _)| {\n+                        to_proto::location(snap, FileRange { file_id, range }).ok()\n+                    })\n+                })\n+                .collect();\n+            let title = to_proto::reference_title(locations.len());\n+            let command = to_proto::command::show_references(title, &uri, position, locations);\n+\n+            return Some(lsp_ext::CommandLinkGroup {\n+                commands: vec![to_command_link(command, \"Go to references\".into())],\n+                ..Default::default()\n+            });\n+        }\n+    }\n+    None\n+}\n+\n fn runnable_action_links(\n     snap: &GlobalStateSnapshot,\n     runnable: Runnable,\n@@ -1566,6 +1596,7 @@ fn prepare_hover_actions(\n         .iter()\n         .filter_map(|it| match it {\n             HoverAction::Implementation(position) => show_impl_command_link(snap, position),\n+            HoverAction::Reference(position) => show_ref_command_link(snap, position),\n             HoverAction::Runnable(r) => runnable_action_links(snap, r.clone()),\n             HoverAction::GoToType(targets) => goto_type_action_links(snap, targets),\n         })"}, {"sha": "34a91486b3fe35bbcbd09235531add4043133418", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -228,6 +228,12 @@ Whether to show `Go to Type Definition` action. Only applies when\n Whether to show `Implementations` action. Only applies when\n `#rust-analyzer.hoverActions.enable#` is set.\n --\n+[[rust-analyzer.hoverActions.references]]rust-analyzer.hoverActions.references (default: `false`)::\n++\n+--\n+Whether to show `References` action. Only applies when\n+`#rust-analyzer.hoverActions.enable#` is set.\n+--\n [[rust-analyzer.hoverActions.run]]rust-analyzer.hoverActions.run (default: `true`)::\n +\n --"}, {"sha": "0f3ed48a0e3a21b7434dcdafb5c434a138ced1c4", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -660,6 +660,11 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.hoverActions.references\": {\n+                    \"markdownDescription\": \"Whether to show `References` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.hoverActions.run\": {\n                     \"markdownDescription\": \"Whether to show `Run` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,"}, {"sha": "1f1fe59a4123537f6f89720721cdfffa7388ccbb", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dceec3eb80f3f2d064536ef8272522f65ec1a76c/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/dceec3eb80f3f2d064536ef8272522f65ec1a76c/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=dceec3eb80f3f2d064536ef8272522f65ec1a76c", "patch": "@@ -165,6 +165,7 @@ export class Config {\n         return {\n             enable: this.get<boolean>(\"hoverActions.enable\"),\n             implementations: this.get<boolean>(\"hoverActions.implementations\"),\n+            references: this.get<boolean>(\"hoverActions.references\"),\n             run: this.get<boolean>(\"hoverActions.run\"),\n             debug: this.get<boolean>(\"hoverActions.debug\"),\n             gotoTypeDef: this.get<boolean>(\"hoverActions.gotoTypeDef\"),"}]}