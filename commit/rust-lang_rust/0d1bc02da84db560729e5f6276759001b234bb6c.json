{"sha": "0d1bc02da84db560729e5f6276759001b234bb6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMWJjMDJkYTg0ZGI1NjA3MjllNWY2Mjc2NzU5MDAxYjIzNGJiNmM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-18T00:57:05Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-27T03:53:26Z"}, "message": "Avoid recomputing the target module for an import directive.", "tree": {"sha": "746d232c196bb2cb8466609ab188cf58656d4fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/746d232c196bb2cb8466609ab188cf58656d4fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d1bc02da84db560729e5f6276759001b234bb6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1bc02da84db560729e5f6276759001b234bb6c", "html_url": "https://github.com/rust-lang/rust/commit/0d1bc02da84db560729e5f6276759001b234bb6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d1bc02da84db560729e5f6276759001b234bb6c/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b83739af4e4687469638f760bba60c9ad362ec34", "url": "https://api.github.com/repos/rust-lang/rust/commits/b83739af4e4687469638f760bba60c9ad362ec34", "html_url": "https://github.com/rust-lang/rust/commit/b83739af4e4687469638f760bba60c9ad362ec34"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "6e527545ece04921cc1789a7b3d8c05fcb1519c4", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0d1bc02da84db560729e5f6276759001b234bb6c/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1bc02da84db560729e5f6276759001b234bb6c/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=0d1bc02da84db560729e5f6276759001b234bb6c", "patch": "@@ -430,15 +430,18 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                names_to_string(&directive.module_path),\n                module_to_string(self.resolver.current_module));\n \n-        let target_module = match self.resolver.resolve_module_path(&directive.module_path,\n-                                                                    DontUseLexicalScope,\n-                                                                    directive.span) {\n-            Success(module) => module,\n-            Indeterminate => return Indeterminate,\n-            Failed(err) => return Failed(err),\n+        let target_module = match directive.target_module.get() {\n+            Some(module) => module,\n+            _ => match self.resolver.resolve_module_path(&directive.module_path,\n+                                                         DontUseLexicalScope,\n+                                                         directive.span) {\n+                Success(module) => module,\n+                Indeterminate => return Indeterminate,\n+                Failed(err) => return Failed(err),\n+            },\n         };\n-        directive.target_module.set(Some(target_module));\n \n+        directive.target_module.set(Some(target_module));\n         let (source, target, value_determined, type_determined) = match directive.subclass {\n             SingleImport { source, target, ref value_determined, ref type_determined } =>\n                 (source, target, value_determined, type_determined),"}]}