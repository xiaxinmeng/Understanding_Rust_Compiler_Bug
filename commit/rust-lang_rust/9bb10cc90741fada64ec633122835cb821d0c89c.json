{"sha": "9bb10cc90741fada64ec633122835cb821d0c89c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYjEwY2M5MDc0MWZhZGE2NGVjNjMzMTIyODM1Y2I4MjFkMGM4OWM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-09-10T11:57:40Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-09-10T11:58:41Z"}, "message": "use push(char) instead of push_str(&str) to add single chars to strings\n\nclippy::single-char-push-str", "tree": {"sha": "214e30403e2dc1b106a06573c338c975e8fc383b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/214e30403e2dc1b106a06573c338c975e8fc383b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bb10cc90741fada64ec633122835cb821d0c89c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb10cc90741fada64ec633122835cb821d0c89c", "html_url": "https://github.com/rust-lang/rust/commit/9bb10cc90741fada64ec633122835cb821d0c89c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bb10cc90741fada64ec633122835cb821d0c89c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11c667e4af17ddebc47df803d6ea641cef7359b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11c667e4af17ddebc47df803d6ea641cef7359b", "html_url": "https://github.com/rust-lang/rust/commit/e11c667e4af17ddebc47df803d6ea641cef7359b"}], "stats": {"total": 60, "additions": 31, "deletions": 29}, "files": [{"sha": "b39423b86e7b59b13a8d93f0291ce7b7faa0f0cf", "filename": "compiler/rustc_builtin_macros/src/format_foreign.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat_foreign.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -166,14 +166,14 @@ pub mod printf {\n             let cap = self.span.len() + if has_options { 2 } else { 0 };\n             let mut s = String::with_capacity(cap);\n \n-            s.push_str(\"{\");\n+            s.push('{');\n \n             if let Some(arg) = self.parameter {\n                 write!(s, \"{}\", arg.checked_sub(1)?).ok()?;\n             }\n \n             if has_options {\n-                s.push_str(\":\");\n+                s.push(':');\n \n                 let align = if let Some(fill) = fill {\n                     s.push_str(fill);\n@@ -191,19 +191,19 @@ pub mod printf {\n                 }\n \n                 if alt {\n-                    s.push_str(\"#\");\n+                    s.push('#');\n                 }\n \n                 if zero_fill {\n-                    s.push_str(\"0\");\n+                    s.push('0');\n                 }\n \n                 if let Some(width) = width {\n                     width.translate(&mut s).ok()?;\n                 }\n \n                 if let Some(precision) = precision {\n-                    s.push_str(\".\");\n+                    s.push('.');\n                     precision.translate(&mut s).ok()?;\n                 }\n \n@@ -212,7 +212,7 @@ pub mod printf {\n                 }\n             }\n \n-            s.push_str(\"}\");\n+            s.push('}');\n             Some(s)\n         }\n     }"}, {"sha": "faeb727202cd6832e342d365ce80a4a0bc56c97f", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -1076,7 +1076,7 @@ fn exec_linker(\n             }\n             .to_string(),\n         );\n-        args.push_str(\"\\n\");\n+        args.push('\\n');\n     }\n     let file = tmpdir.join(\"linker-arguments\");\n     let bytes = if sess.target.target.options.is_like_msvc {"}, {"sha": "0c0f1bc681cf85dc4db99eaec05de5f21489f6d8", "filename": "compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -37,7 +37,7 @@ pub fn push_debuginfo_type_name<'tcx>(\n         ty::Bool => output.push_str(\"bool\"),\n         ty::Char => output.push_str(\"char\"),\n         ty::Str => output.push_str(\"str\"),\n-        ty::Never => output.push_str(\"!\"),\n+        ty::Never => output.push('!'),\n         ty::Int(int_ty) => output.push_str(int_ty.name_str()),\n         ty::Uint(uint_ty) => output.push_str(uint_ty.name_str()),\n         ty::Float(float_ty) => output.push_str(float_ty.name_str()),"}, {"sha": "1225776db4590e24a58e182335a4711f628a1f2f", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -2093,7 +2093,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 _ => String::new(),\n             };\n             if !s.is_empty() {\n-                s.push_str(\" \");\n+                s.push(' ');\n             }\n             s\n         };"}, {"sha": "3cee32834beb7579b54382b5a14d19929d6b837a", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -150,8 +150,8 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             Some(mut descr) => {\n                 // Surround descr with `backticks`.\n                 descr.reserve(2);\n-                descr.insert_str(0, \"`\");\n-                descr.push_str(\"`\");\n+                descr.insert(0, '`');\n+                descr.push('`');\n                 descr\n             }\n             None => \"value\".to_string(),\n@@ -222,7 +222,8 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             if self.upvars[var_index].by_ref {\n                                 buf.push_str(&name);\n                             } else {\n-                                buf.push_str(&format!(\"*{}\", &name));\n+                                buf.push('*');\n+                                buf.push_str(&name);\n                             }\n                         } else {\n                             if autoderef {\n@@ -234,7 +235,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                     &including_downcast,\n                                 )?;\n                             } else {\n-                                buf.push_str(&\"*\");\n+                                buf.push('*');\n                                 self.append_place_to_string(\n                                     PlaceRef { local, projection: proj_base },\n                                     buf,\n@@ -272,7 +273,8 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 autoderef,\n                                 &including_downcast,\n                             )?;\n-                            buf.push_str(&format!(\".{}\", field_name));\n+                            buf.push('.');\n+                            buf.push_str(&field_name);\n                         }\n                     }\n                     ProjectionElem::Index(index) => {\n@@ -284,11 +286,11 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             autoderef,\n                             &including_downcast,\n                         )?;\n-                        buf.push_str(\"[\");\n+                        buf.push('[');\n                         if self.append_local_to_string(*index, buf).is_err() {\n-                            buf.push_str(\"_\");\n+                            buf.push('_');\n                         }\n-                        buf.push_str(\"]\");\n+                        buf.push(']');\n                     }\n                     ProjectionElem::ConstantIndex { .. } | ProjectionElem::Subslice { .. } => {\n                         autoderef = true;\n@@ -301,7 +303,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             autoderef,\n                             &including_downcast,\n                         )?;\n-                        buf.push_str(&\"[..]\");\n+                        buf.push_str(\"[..]\");\n                     }\n                 };\n             }\n@@ -648,7 +650,7 @@ impl UseSpans {\n                     \" in closure\".to_string()\n                 }\n             }\n-            _ => \"\".to_string(),\n+            _ => String::new(),\n         }\n     }\n "}, {"sha": "f247d07e1f05e66bad3fbd20bcc1c209751583af", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -417,7 +417,7 @@ crate fn location_set_str(\n \n fn region_value_str(elements: impl IntoIterator<Item = RegionElement>) -> String {\n     let mut result = String::new();\n-    result.push_str(\"{\");\n+    result.push('{');\n \n     // Set to Some(l1, l2) when we have observed all the locations\n     // from l1..=l2 (inclusive) but not yet printed them. This\n@@ -478,7 +478,7 @@ fn region_value_str(elements: impl IntoIterator<Item = RegionElement>) -> String\n         push_location_range(&mut result, location1, location2);\n     }\n \n-    result.push_str(\"}\");\n+    result.push('}');\n \n     return result;\n "}, {"sha": "0f6f078d9686f07e6163c8cd6175120353a21159", "filename": "compiler/rustc_mir/src/monomorphize/partitioning/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -382,7 +382,7 @@ fn collect_and_partition_mono_items<'tcx>(\n                 cgus.sort_by_key(|(name, _)| *name);\n                 cgus.dedup();\n                 for &(ref cgu_name, (linkage, _)) in cgus.iter() {\n-                    output.push_str(\" \");\n+                    output.push(' ');\n                     output.push_str(&cgu_name.as_str());\n \n                     let linkage_abbrev = match linkage {\n@@ -399,9 +399,9 @@ fn collect_and_partition_mono_items<'tcx>(\n                         Linkage::Common => \"Common\",\n                     };\n \n-                    output.push_str(\"[\");\n+                    output.push('[');\n                     output.push_str(linkage_abbrev);\n-                    output.push_str(\"]\");\n+                    output.push(']');\n                 }\n                 output\n             })"}, {"sha": "75567181b69164d9f4519eb2a9e4ee95adfff689", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -514,7 +514,7 @@ fn write_scope_tree(\n                 write!(indented_decl, \" as {:?}\", user_ty).unwrap();\n             }\n         }\n-        indented_decl.push_str(\";\");\n+        indented_decl.push(';');\n \n         let local_name =\n             if local == RETURN_PLACE { \" return place\".to_string() } else { String::new() };"}, {"sha": "032d7cb3ed6b76dfbca625333fe090a534e5be64", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -438,7 +438,7 @@ impl<'tcx> SaveContext<'tcx> {\n                                     .next()\n                                     .map(|item| item.def_id);\n                             }\n-                            qualname.push_str(\">\");\n+                            qualname.push('>');\n \n                             (qualname, trait_id, decl_id, docs, attrs)\n                         }"}, {"sha": "747e198cd9324f0baa39ee546a9e189552f35206", "filename": "compiler/rustc_save_analysis/src/sig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -497,7 +497,7 @@ impl<'hir> Sig for hir::Item<'hir> {\n                     sig.text.push_str(&bounds_to_string(bounds));\n                 }\n                 // FIXME where clause\n-                sig.text.push_str(\";\");\n+                sig.text.push(';');\n \n                 Ok(sig)\n             }"}, {"sha": "4aecb35294a07b603432db71fd37933d3bf06ffd", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb10cc90741fada64ec633122835cb821d0c89c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=9bb10cc90741fada64ec633122835cb821d0c89c", "patch": "@@ -581,9 +581,9 @@ impl OutputFilenames {\n \n         if !ext.is_empty() {\n             if !extension.is_empty() {\n-                extension.push_str(\".\");\n+                extension.push('.');\n                 extension.push_str(RUST_CGU_EXT);\n-                extension.push_str(\".\");\n+                extension.push('.');\n             }\n \n             extension.push_str(ext);"}]}