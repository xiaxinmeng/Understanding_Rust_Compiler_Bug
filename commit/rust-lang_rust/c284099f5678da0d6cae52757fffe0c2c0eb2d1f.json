{"sha": "c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyODQwOTlmNTY3OGRhMGQ2Y2FlNTI3NTdmZmZlMGMyYzBlYjJkMWY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-17T07:11:46Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-09T14:45:28Z"}, "message": "trans: Remove unused ref_id from monomorphic_fn.", "tree": {"sha": "259e194ac3e945f0929f548834a6ba029ca99db1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/259e194ac3e945f0929f548834a6ba029ca99db1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "html_url": "https://github.com/rust-lang/rust/commit/c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c01f6e14912edc35296aa4b7558a0b36790561b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c01f6e14912edc35296aa4b7558a0b36790561b", "html_url": "https://github.com/rust-lang/rust/commit/0c01f6e14912edc35296aa4b7558a0b36790561b"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "7afd096348506a019a93ed7faf4c419012dd4aaf", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "patch": "@@ -446,14 +446,9 @@ pub fn trans_fn_ref_with_substs<'a, 'tcx>(\n         // Should be either intra-crate or inlined.\n         assert_eq!(def_id.krate, LOCAL_CRATE);\n \n-        let opt_ref_id = match node {\n-            ExprId(id) => if id != 0 { Some(id) } else { None },\n-            MethodCallKey(_) => None,\n-        };\n-\n         let substs = tcx.mk_substs(substs);\n         let (val, fn_ty, must_cast) =\n-            monomorphize::monomorphic_fn(ccx, def_id, substs, opt_ref_id);\n+            monomorphize::monomorphic_fn(ccx, def_id, substs);\n         if must_cast && node != ExprId(0) {\n             // Monotype of the REFERENCE to the function (type params\n             // are subst'd)"}, {"sha": "5b6af4757197f999bf152eb16a6f85783cd30605", "filename": "src/librustc_trans/trans/mir/did.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs?ref=c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "patch": "@@ -79,7 +79,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n         let did = inline::maybe_instantiate_inline(bcx.ccx(), did);\n \n         if !substs.types.is_empty() || is_named_tuple_constructor(bcx.tcx(), did) {\n-            let (val, fn_ty, _) = monomorphize::monomorphic_fn(bcx.ccx(), did, substs, None);\n+            let (val, fn_ty, _) = monomorphize::monomorphic_fn(bcx.ccx(), did, substs);\n             // FIXME: cast fnptr to proper type if necessary\n             OperandRef {\n                 ty: fn_ty,"}, {"sha": "c6119416e47eda2fffee413336498b212bc2d42d", "filename": "src/librustc_trans/trans/monomorphize.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c284099f5678da0d6cae52757fffe0c2c0eb2d1f/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs?ref=c284099f5678da0d6cae52757fffe0c2c0eb2d1f", "patch": "@@ -37,16 +37,9 @@ use std::hash::{Hasher, Hash, SipHasher};\n \n pub fn monomorphic_fn<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n                                 fn_id: DefId,\n-                                psubsts: &'tcx subst::Substs<'tcx>,\n-                                ref_id: Option<ast::NodeId>)\n+                                psubsts: &'tcx subst::Substs<'tcx>)\n                                 -> (ValueRef, Ty<'tcx>, bool) {\n-    debug!(\"monomorphic_fn(\\\n-            fn_id={:?}, \\\n-            real_substs={:?}, \\\n-            ref_id={:?})\",\n-           fn_id,\n-           psubsts,\n-           ref_id);\n+    debug!(\"monomorphic_fn(fn_id={:?}, real_substs={:?})\", fn_id, psubsts);\n \n     assert!(!psubsts.types.needs_infer() && !psubsts.types.has_param_types());\n "}]}