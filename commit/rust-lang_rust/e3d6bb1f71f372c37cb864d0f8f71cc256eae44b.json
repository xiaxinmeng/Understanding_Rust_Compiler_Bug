{"sha": "e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZDZiYjFmNzFmMzcyYzM3Y2I4NjRkMGY4ZjcxY2MyNTZlYWU0NGI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-15T21:59:20Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-16T00:39:44Z"}, "message": "Rollup merge of #34270 - gkoz:error_file_exists, r=alexcrichton\n\nAdd ERROR_FILE_EXISTS to ErrorKind conversion on Windows\n\nBug report: https://users.rust-lang.org/t/detecting-error-kind-for-opening-file/6215\nReference: https://msdn.microsoft.com/en-us/library/windows/desktop/ms681382(v=vs.85).aspx#error_file_exists", "tree": {"sha": "0e6332f48ca979ef4f7279af9e3b202a2c456091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e6332f48ca979ef4f7279af9e3b202a2c456091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "html_url": "https://github.com/rust-lang/rust/commit/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2675a55a8fc9dcd13ed824c82fe7a921ae050d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/2675a55a8fc9dcd13ed824c82fe7a921ae050d64", "html_url": "https://github.com/rust-lang/rust/commit/2675a55a8fc9dcd13ed824c82fe7a921ae050d64"}, {"sha": "552afd30d075f3c7ecc8918f088c3aa805f6cef7", "url": "https://api.github.com/repos/rust-lang/rust/commits/552afd30d075f3c7ecc8918f088c3aa805f6cef7", "html_url": "https://github.com/rust-lang/rust/commit/552afd30d075f3c7ecc8918f088c3aa805f6cef7"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "668fa1fb303601cefa74c819c7a9d2cf974fb5f0", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "patch": "@@ -512,7 +512,7 @@ impl OpenOptions {\n     /// No file is allowed to exist at the target location, also no (dangling)\n     /// symlink.\n     ///\n-    /// This option is useful because it as atomic. Otherwise between checking\n+    /// This option is useful because it is atomic. Otherwise between checking\n     /// whether a file exists and creating a new one, the file may have been\n     /// created by another process (a TOCTOU race condition / attack).\n     ///\n@@ -1770,6 +1770,15 @@ mod tests {\n         check!(fs::remove_dir(dir));\n     }\n \n+    #[test]\n+    fn file_create_new_already_exists_error() {\n+        let tmpdir = tmpdir();\n+        let file = &tmpdir.join(\"file_create_new_error_exists\");\n+        check!(fs::File::create(file));\n+        let e = fs::OpenOptions::new().write(true).create_new(true).open(file).unwrap_err();\n+        assert_eq!(e.kind(), ErrorKind::AlreadyExists);\n+    }\n+\n     #[test]\n     fn mkdir_path_already_exists_error() {\n         let tmpdir = tmpdir();"}, {"sha": "ce563dc7b16d3e4fe31c3b6ab343bd82dfc0d484", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "patch": "@@ -181,6 +181,7 @@ pub const ERROR_ACCESS_DENIED: DWORD = 5;\n pub const ERROR_INVALID_HANDLE: DWORD = 6;\n pub const ERROR_NO_MORE_FILES: DWORD = 18;\n pub const ERROR_HANDLE_EOF: DWORD = 38;\n+pub const ERROR_FILE_EXISTS: DWORD = 80;\n pub const ERROR_BROKEN_PIPE: DWORD = 109;\n pub const ERROR_CALL_NOT_IMPLEMENTED: DWORD = 120;\n pub const ERROR_INSUFFICIENT_BUFFER: DWORD = 122;"}, {"sha": "6dd4f4c3e750e8b2df17d3e5941c9f97bce901f7", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d6bb1f71f372c37cb864d0f8f71cc256eae44b/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=e3d6bb1f71f372c37cb864d0f8f71cc256eae44b", "patch": "@@ -68,6 +68,7 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n     match errno as c::DWORD {\n         c::ERROR_ACCESS_DENIED => return ErrorKind::PermissionDenied,\n         c::ERROR_ALREADY_EXISTS => return ErrorKind::AlreadyExists,\n+        c::ERROR_FILE_EXISTS => return ErrorKind::AlreadyExists,\n         c::ERROR_BROKEN_PIPE => return ErrorKind::BrokenPipe,\n         c::ERROR_FILE_NOT_FOUND => return ErrorKind::NotFound,\n         c::ERROR_PATH_NOT_FOUND => return ErrorKind::NotFound,"}]}