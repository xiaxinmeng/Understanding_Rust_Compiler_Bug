{"sha": "0150448f1b5474bb0c5fe3297eed0c51dae44dc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNTA0NDhmMWI1NDc0YmIwYzVmZTMyOTdlZWQwYzUxZGFlNDRkYzg=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-12T04:13:48Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-12T04:13:48Z"}, "message": "Remove the questionably-useful example", "tree": {"sha": "0557e2308eb6f6c38bd2a1a7eacfed2dacc5e8bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0557e2308eb6f6c38bd2a1a7eacfed2dacc5e8bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0150448f1b5474bb0c5fe3297eed0c51dae44dc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0150448f1b5474bb0c5fe3297eed0c51dae44dc8", "html_url": "https://github.com/rust-lang/rust/commit/0150448f1b5474bb0c5fe3297eed0c51dae44dc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0150448f1b5474bb0c5fe3297eed0c51dae44dc8/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5168f5d220d0b30d322f254f51142931a9054056", "url": "https://api.github.com/repos/rust-lang/rust/commits/5168f5d220d0b30d322f254f51142931a9054056", "html_url": "https://github.com/rust-lang/rust/commit/5168f5d220d0b30d322f254f51142931a9054056"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "71faf672962b3312bd7052ae44c117ca9b321de2", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0150448f1b5474bb0c5fe3297eed0c51dae44dc8/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0150448f1b5474bb0c5fe3297eed0c51dae44dc8/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=0150448f1b5474bb0c5fe3297eed0c51dae44dc8", "patch": "@@ -2714,28 +2714,6 @@ impl<T> From<Vec<T>> for VecDeque<T> {\n     /// This avoids reallocating where possible, but the conditions for that are\n     /// strict, and subject to change, and so shouldn't be relied upon unless the\n     /// `Vec<T>` came from `From<VecDeque<T>>` and hasn't been reallocated.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// use std::collections::VecDeque;\n-    ///\n-    /// // Start with a `VecDeque<i32>`.\n-    /// let deque: VecDeque<_> = (1..5).collect();\n-    ///\n-    /// // Turn it into a `Vec<i32>` with no allocation needed.\n-    /// let mut vec = Vec::from(deque);\n-    ///\n-    /// // Modify it, being careful not to trigger reallocation.\n-    /// vec.pop();\n-    /// vec.push(100);\n-    ///\n-    /// // Turn it back into a `VecDeque<i32>` with no allocation needed.\n-    /// let ptr = vec.as_ptr();\n-    /// let deque = VecDeque::from(vec);\n-    /// assert_eq!(deque, [1, 2, 3, 100]);\n-    /// assert_eq!(deque.as_slices().0.as_ptr(), ptr);\n-    /// ```\n     fn from(mut other: Vec<T>) -> Self {\n         unsafe {\n             let other_buf = other.as_mut_ptr();"}]}