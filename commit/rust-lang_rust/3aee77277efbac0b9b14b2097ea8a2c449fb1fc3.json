{"sha": "3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZWU3NzI3N2VmYmFjMGI5YjE0YjIwOTdlYThhMmM0NDlmYjFmYzM=", "commit": {"author": {"name": "Denis Merigoux", "email": "denis.merigoux@gmail.com", "date": "2018-08-29T14:40:47Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T12:11:59Z"}, "message": "Split CommonMethods to accomodate for use in back/write.rs", "tree": {"sha": "665945d226ace05cc576c73fbde486c37d249c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/665945d226ace05cc576c73fbde486c37d249c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "html_url": "https://github.com/rust-lang/rust/commit/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/comments", "author": {"login": "denismerigoux", "id": 1766128, "node_id": "MDQ6VXNlcjE3NjYxMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1766128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismerigoux", "html_url": "https://github.com/denismerigoux", "followers_url": "https://api.github.com/users/denismerigoux/followers", "following_url": "https://api.github.com/users/denismerigoux/following{/other_user}", "gists_url": "https://api.github.com/users/denismerigoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismerigoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismerigoux/subscriptions", "organizations_url": "https://api.github.com/users/denismerigoux/orgs", "repos_url": "https://api.github.com/users/denismerigoux/repos", "events_url": "https://api.github.com/users/denismerigoux/events{/privacy}", "received_events_url": "https://api.github.com/users/denismerigoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e07f9fe9b7237fd48f79112686b886ae56a920", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e07f9fe9b7237fd48f79112686b886ae56a920", "html_url": "https://github.com/rust-lang/rust/commit/83e07f9fe9b7237fd48f79112686b886ae56a920"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "5d23ff27c49b611958b74bf008c05a5892b89eba", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -46,7 +46,7 @@ use syntax_pos::MultiSpan;\n use syntax_pos::symbol::Symbol;\n use type_::Type;\n use context::{is_pie_binary, get_reloc_model, CodegenCx};\n-use interfaces::CommonMethods;\n+use interfaces::CommonWriteMethods;\n use jobserver::{Client, Acquired};\n use rustc_demangle;\n "}, {"sha": "2a4d549adcbdf0f4d841b2c8b2c5e059475da43d", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -74,7 +74,7 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::indexed_vec::Idx;\n \n-use interfaces::{BuilderMethods, CommonMethods};\n+use interfaces::{BuilderMethods, CommonMethods, CommonWriteMethods};\n \n use std::any::Any;\n use std::cmp;"}, {"sha": "8a6cf1335cdcde996a709c4d8990a62af881a900", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -19,7 +19,7 @@ use rustc::ty::TyCtxt;\n use rustc::ty::layout::{Align, Size};\n use rustc::session::{config, Session};\n use rustc_data_structures::small_c_str::SmallCStr;\n-use interfaces::{BuilderMethods, Backend, CommonMethods};\n+use interfaces::{BuilderMethods, Backend, CommonMethods, CommonWriteMethods};\n use syntax;\n \n use std::borrow::Cow;"}, {"sha": "a593cd64efe2ff8776c1443362a3bf4533f0cfe1", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -22,7 +22,7 @@ use llvm;\n use monomorphize::Instance;\n use type_of::LayoutLlvmExt;\n use value::Value;\n-use interfaces::CommonMethods;\n+use interfaces::CommonWriteMethods;\n \n use rustc::hir::def_id::DefId;\n use rustc::ty::{self, TypeFoldable};"}, {"sha": "cf88a97316216e0b32a298d4ad56c6b54a4525cf", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -24,7 +24,7 @@ use declare;\n use type_::Type;\n use type_of::LayoutLlvmExt;\n use value::Value;\n-use interfaces::{Backend, CommonMethods};\n+use interfaces::{Backend, CommonMethods, CommonWriteMethods};\n \n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{HasDataLayout, LayoutOf};\n@@ -201,11 +201,6 @@ impl Backend for CodegenCx<'ll, 'tcx> {\n }\n \n impl<'ll, 'tcx : 'll> CommonMethods for CodegenCx<'ll, 'tcx> {\n-    fn val_ty(v: &'ll Value) -> &'ll Type {\n-        unsafe {\n-            llvm::LLVMTypeOf(v)\n-        }\n-    }\n \n     // LLVM constant constructors.\n     fn c_null(&self, t: &'ll Type) -> &'ll Value {\n@@ -354,13 +349,6 @@ impl<'ll, 'tcx : 'll> CommonMethods for CodegenCx<'ll, 'tcx> {\n         Self::c_bytes_in_context(&self.llcx, bytes)\n     }\n \n-    fn c_bytes_in_context(llcx: &'ll llvm::Context, bytes: &[u8]) -> &'ll Value {\n-        unsafe {\n-            let ptr = bytes.as_ptr() as *const c_char;\n-            return llvm::LLVMConstStringInContext(llcx, ptr, bytes.len() as c_uint, True);\n-        }\n-    }\n-\n     fn const_get_elt(v: &'ll Value, idx: u64) -> &'ll Value {\n         unsafe {\n             assert_eq!(idx as c_uint as u64, idx);\n@@ -501,3 +489,18 @@ pub fn shift_mask_val(\n         _ => bug!(\"shift_mask_val: expected Integer or Vector, found {:?}\", kind),\n     }\n }\n+\n+impl<'ll, 'tcx : 'll> CommonWriteMethods for CodegenCx<'ll, 'tcx> {\n+    fn val_ty(v: &'ll Value) -> &'ll Type {\n+        unsafe {\n+            llvm::LLVMTypeOf(v)\n+        }\n+    }\n+\n+    fn c_bytes_in_context(llcx: &'ll llvm::Context, bytes: &[u8]) -> &'ll Value {\n+        unsafe {\n+            let ptr = bytes.as_ptr() as *const c_char;\n+            return llvm::LLVMConstStringInContext(llcx, ptr, bytes.len() as c_uint, True);\n+        }\n+    }\n+}"}, {"sha": "a97614e4e50da619cb5fd289ab3f638b0d48f277", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -24,7 +24,7 @@ use type_::Type;\n use type_of::LayoutLlvmExt;\n use value::Value;\n use rustc::ty::{self, Ty};\n-use interfaces::CommonMethods;\n+use interfaces::CommonWriteMethods;\n \n use rustc::ty::layout::{Align, LayoutOf};\n "}, {"sha": "f58338f384f95aeac3391f468cc956995c663c66", "filename": "src/librustc_codegen_llvm/interfaces/common.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fcommon.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -11,9 +11,7 @@\n use super::Backend;\n use syntax::symbol::LocalInternedString;\n \n-pub trait CommonMethods : Backend {\n-    fn val_ty(v: Self::Value) -> Self::Type;\n-\n+pub trait CommonMethods : Backend + CommonWriteMethods {\n     // Constant constructors\n     fn c_null(&self, t: Self::Type) -> Self::Value;\n     fn c_undef(&self, t: Self::Type) -> Self::Value;\n@@ -50,7 +48,6 @@ pub trait CommonMethods : Backend {\n     fn c_array(ty: Self::Type, elts: &[Self::Value]) -> Self::Value;\n     fn c_vector(elts: &[Self::Value]) -> Self::Value;\n     fn c_bytes(&self, bytes: &[u8]) -> Self::Value;\n-    fn c_bytes_in_context(llcx: Self::Context, bytes: &[u8]) -> Self::Value;\n \n     fn const_get_elt(v: Self::Value, idx: u64) -> Self::Value;\n     fn const_get_real(v: Self::Value) -> Option<(f64, bool)>;\n@@ -59,3 +56,8 @@ pub trait CommonMethods : Backend {\n     fn is_const_real(v: Self::Value) -> bool;\n     fn const_to_opt_u128(v: Self::Value, sign_ext: bool) -> Option<u128>;\n }\n+\n+pub trait CommonWriteMethods : Backend {\n+        fn val_ty(v: Self::Value) -> Self::Type;\n+        fn c_bytes_in_context(llcx: Self::Context, bytes: &[u8]) -> Self::Value;\n+}"}, {"sha": "e8ece54718efe32422c0b3906fa63a1f8bbf10da", "filename": "src/librustc_codegen_llvm/interfaces/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -14,4 +14,4 @@ mod common;\n \n pub use self::builder::BuilderMethods;\n pub use self::backend::Backend;\n-pub use self::common::CommonMethods;\n+pub use self::common::{CommonMethods, CommonWriteMethods};"}, {"sha": "889bfeeb8cabea3d1733b0aed364b7595f17e098", "filename": "src/librustc_codegen_llvm/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aee77277efbac0b9b14b2097ea8a2c449fb1fc3/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs?ref=3aee77277efbac0b9b14b2097ea8a2c449fb1fc3", "patch": "@@ -27,7 +27,7 @@ use type_::Type;\n use type_of::LayoutLlvmExt;\n use value::Value;\n \n-use interfaces::{BuilderMethods, CommonMethods};\n+use interfaces::{BuilderMethods, CommonMethods, CommonWriteMethods};\n \n use super::{FunctionCx, LocalRef};\n use super::operand::{OperandRef, OperandValue};"}]}