{"sha": "de1bc0008be096cf7ed67b93402250d3b3e480d0", "node_id": "C_kwDOAAsO6NoAKGRlMWJjMDAwOGJlMDk2Y2Y3ZWQ2N2I5MzQwMjI1MGQzYjNlNDgwZDA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-21T18:31:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-21T18:31:57Z"}, "message": "Auto merge of #96260 - Kobzol:rustdoc-idmap, r=petrochenkov\n\nrustdoc: Optimize IdMap\n\nSlightly optimizes `IdMap`, which is hot in `markdown_links` (context [here](https://github.com/rust-lang/rust/pull/96135#issuecomment-1103539052)). There are more improvements that can be made near this place, but this seemed like an easy win locally (although I tried it on top of https://github.com/rust-lang/rust/pull/94857, so let's see what happens without that PR).\n\nr? `@petrochenkov`", "tree": {"sha": "b5a4c4d3efe54f39a955e9898b12f021fa32d1d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a4c4d3efe54f39a955e9898b12f021fa32d1d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de1bc0008be096cf7ed67b93402250d3b3e480d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de1bc0008be096cf7ed67b93402250d3b3e480d0", "html_url": "https://github.com/rust-lang/rust/commit/de1bc0008be096cf7ed67b93402250d3b3e480d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de1bc0008be096cf7ed67b93402250d3b3e480d0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b04c5329e1e145fb2fb46c5a7e775638712b03aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b04c5329e1e145fb2fb46c5a7e775638712b03aa", "html_url": "https://github.com/rust-lang/rust/commit/b04c5329e1e145fb2fb46c5a7e775638712b03aa"}, {"sha": "34e2d3bab8905df4ad154f8fa8cdb5fe2dc769da", "url": "https://api.github.com/repos/rust-lang/rust/commits/34e2d3bab8905df4ad154f8fa8cdb5fe2dc769da", "html_url": "https://github.com/rust-lang/rust/commit/34e2d3bab8905df4ad154f8fa8cdb5fe2dc769da"}], "stats": {"total": 98, "additions": 52, "deletions": 46}, "files": [{"sha": "30175ae3561ab7b3ff6b9630855f1bc3b2e0759a", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de1bc0008be096cf7ed67b93402250d3b3e480d0/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/de1bc0008be096cf7ed67b93402250d3b3e480d0/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=de1bc0008be096cf7ed67b93402250d3b3e480d0", "patch": "@@ -2531,9 +2531,9 @@ dependencies = [\n \n [[package]]\n name = \"once_cell\"\n-version = \"1.7.2\"\n+version = \"1.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"af8b08b04175473088b46763e51ee54da5f9a164bc162f615b91bc179dbf15a3\"\n+checksum = \"87f3e037eac156d1775da914196f0f37741a274155e34a0b7e427c35d2a2ecb9\"\n \n [[package]]\n name = \"opaque-debug\"\n@@ -4536,6 +4536,7 @@ dependencies = [\n  \"expect-test\",\n  \"itertools\",\n  \"minifier\",\n+ \"once_cell\",\n  \"pulldown-cmark\",\n  \"rayon\",\n  \"regex\","}, {"sha": "21efd040663b8aa9e848aa6ff3456f1fa864fa89", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de1bc0008be096cf7ed67b93402250d3b3e480d0/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/de1bc0008be096cf7ed67b93402250d3b3e480d0/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=de1bc0008be096cf7ed67b93402250d3b3e480d0", "patch": "@@ -22,6 +22,7 @@ regex = \"1\"\n rustdoc-json-types = { path = \"../rustdoc-json-types\" }\n tracing = \"0.1\"\n tracing-tree = \"0.2.0\"\n+once_cell = \"1.10.0\"\n \n [dependencies.tracing-subscriber]\n version = \"0.3.3\""}, {"sha": "9e76af982985416563472f544b8f21c13c89e443", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 48, "deletions": 44, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/de1bc0008be096cf7ed67b93402250d3b3e480d0/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1bc0008be096cf7ed67b93402250d3b3e480d0/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=de1bc0008be096cf7ed67b93402250d3b3e480d0", "patch": "@@ -32,6 +32,7 @@ use rustc_middle::ty::TyCtxt;\n use rustc_span::edition::Edition;\n use rustc_span::Span;\n \n+use once_cell::sync::Lazy;\n use std::borrow::Cow;\n use std::cell::RefCell;\n use std::collections::VecDeque;\n@@ -1429,62 +1430,65 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_>) -> Vec<RustCodeB\n \n #[derive(Clone, Default, Debug)]\n pub struct IdMap {\n-    map: FxHashMap<String, usize>,\n+    map: FxHashMap<Cow<'static, str>, usize>,\n }\n \n-fn init_id_map() -> FxHashMap<String, usize> {\n+// The map is pre-initialized and cloned each time to avoid reinitializing it repeatedly.\n+static DEFAULT_ID_MAP: Lazy<FxHashMap<Cow<'static, str>, usize>> = Lazy::new(|| init_id_map());\n+\n+fn init_id_map() -> FxHashMap<Cow<'static, str>, usize> {\n     let mut map = FxHashMap::default();\n     // This is the list of IDs used in Javascript.\n-    map.insert(\"help\".to_owned(), 1);\n+    map.insert(\"help\".into(), 1);\n     // This is the list of IDs used in HTML generated in Rust (including the ones\n     // used in tera template files).\n-    map.insert(\"mainThemeStyle\".to_owned(), 1);\n-    map.insert(\"themeStyle\".to_owned(), 1);\n-    map.insert(\"theme-picker\".to_owned(), 1);\n-    map.insert(\"theme-choices\".to_owned(), 1);\n-    map.insert(\"settings-menu\".to_owned(), 1);\n-    map.insert(\"help-button\".to_owned(), 1);\n-    map.insert(\"main-content\".to_owned(), 1);\n-    map.insert(\"search\".to_owned(), 1);\n-    map.insert(\"crate-search\".to_owned(), 1);\n-    map.insert(\"render-detail\".to_owned(), 1);\n-    map.insert(\"toggle-all-docs\".to_owned(), 1);\n-    map.insert(\"all-types\".to_owned(), 1);\n-    map.insert(\"default-settings\".to_owned(), 1);\n-    map.insert(\"rustdoc-vars\".to_owned(), 1);\n-    map.insert(\"sidebar-vars\".to_owned(), 1);\n-    map.insert(\"copy-path\".to_owned(), 1);\n-    map.insert(\"TOC\".to_owned(), 1);\n+    map.insert(\"mainThemeStyle\".into(), 1);\n+    map.insert(\"themeStyle\".into(), 1);\n+    map.insert(\"theme-picker\".into(), 1);\n+    map.insert(\"theme-choices\".into(), 1);\n+    map.insert(\"settings-menu\".into(), 1);\n+    map.insert(\"help-button\".into(), 1);\n+    map.insert(\"main-content\".into(), 1);\n+    map.insert(\"search\".into(), 1);\n+    map.insert(\"crate-search\".into(), 1);\n+    map.insert(\"render-detail\".into(), 1);\n+    map.insert(\"toggle-all-docs\".into(), 1);\n+    map.insert(\"all-types\".into(), 1);\n+    map.insert(\"default-settings\".into(), 1);\n+    map.insert(\"rustdoc-vars\".into(), 1);\n+    map.insert(\"sidebar-vars\".into(), 1);\n+    map.insert(\"copy-path\".into(), 1);\n+    map.insert(\"TOC\".into(), 1);\n     // This is the list of IDs used by rustdoc sections (but still generated by\n     // rustdoc).\n-    map.insert(\"fields\".to_owned(), 1);\n-    map.insert(\"variants\".to_owned(), 1);\n-    map.insert(\"implementors-list\".to_owned(), 1);\n-    map.insert(\"synthetic-implementors-list\".to_owned(), 1);\n-    map.insert(\"foreign-impls\".to_owned(), 1);\n-    map.insert(\"implementations\".to_owned(), 1);\n-    map.insert(\"trait-implementations\".to_owned(), 1);\n-    map.insert(\"synthetic-implementations\".to_owned(), 1);\n-    map.insert(\"blanket-implementations\".to_owned(), 1);\n-    map.insert(\"required-associated-types\".to_owned(), 1);\n-    map.insert(\"provided-associated-types\".to_owned(), 1);\n-    map.insert(\"provided-associated-consts\".to_owned(), 1);\n-    map.insert(\"required-associated-consts\".to_owned(), 1);\n-    map.insert(\"required-methods\".to_owned(), 1);\n-    map.insert(\"provided-methods\".to_owned(), 1);\n-    map.insert(\"implementors\".to_owned(), 1);\n-    map.insert(\"synthetic-implementors\".to_owned(), 1);\n-    map.insert(\"implementations-list\".to_owned(), 1);\n-    map.insert(\"trait-implementations-list\".to_owned(), 1);\n-    map.insert(\"synthetic-implementations-list\".to_owned(), 1);\n-    map.insert(\"blanket-implementations-list\".to_owned(), 1);\n-    map.insert(\"deref-methods\".to_owned(), 1);\n+    map.insert(\"fields\".into(), 1);\n+    map.insert(\"variants\".into(), 1);\n+    map.insert(\"implementors-list\".into(), 1);\n+    map.insert(\"synthetic-implementors-list\".into(), 1);\n+    map.insert(\"foreign-impls\".into(), 1);\n+    map.insert(\"implementations\".into(), 1);\n+    map.insert(\"trait-implementations\".into(), 1);\n+    map.insert(\"synthetic-implementations\".into(), 1);\n+    map.insert(\"blanket-implementations\".into(), 1);\n+    map.insert(\"required-associated-types\".into(), 1);\n+    map.insert(\"provided-associated-types\".into(), 1);\n+    map.insert(\"provided-associated-consts\".into(), 1);\n+    map.insert(\"required-associated-consts\".into(), 1);\n+    map.insert(\"required-methods\".into(), 1);\n+    map.insert(\"provided-methods\".into(), 1);\n+    map.insert(\"implementors\".into(), 1);\n+    map.insert(\"synthetic-implementors\".into(), 1);\n+    map.insert(\"implementations-list\".into(), 1);\n+    map.insert(\"trait-implementations-list\".into(), 1);\n+    map.insert(\"synthetic-implementations-list\".into(), 1);\n+    map.insert(\"blanket-implementations-list\".into(), 1);\n+    map.insert(\"deref-methods\".into(), 1);\n     map\n }\n \n impl IdMap {\n     pub fn new() -> Self {\n-        IdMap { map: init_id_map() }\n+        IdMap { map: DEFAULT_ID_MAP.clone() }\n     }\n \n     crate fn derive<S: AsRef<str> + ToString>(&mut self, candidate: S) -> String {\n@@ -1497,7 +1501,7 @@ impl IdMap {\n             }\n         };\n \n-        self.map.insert(id.clone(), 1);\n+        self.map.insert(id.clone().into(), 1);\n         id\n     }\n }"}]}