{"sha": "52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzUwYmEyNzZmZmJkYmU5YzFhNTZlNGYwYjdkNDI0ZjZiYzIyY2M=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-28T00:53:34Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-28T00:53:34Z"}, "message": "Add doc examples for std::fs::Metadata", "tree": {"sha": "3a3c5c5c6e5d66f9c1dc54dd81a96e40460e7b84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a3c5c5c6e5d66f9c1dc54dd81a96e40460e7b84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc", "html_url": "https://github.com/rust-lang/rust/commit/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5d79521ae1bd53d90e820e9f8c78494fb3a102d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d79521ae1bd53d90e820e9f8c78494fb3a102d", "html_url": "https://github.com/rust-lang/rust/commit/f5d79521ae1bd53d90e820e9f8c78494fb3a102d"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "38fd93501a528520f7b1ea951780f5209b966dba", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=52c50ba276ffbdbe9c1a56e4f0b7d424f6bc22cc", "patch": "@@ -694,6 +694,23 @@ impl Metadata {\n     ///\n     /// This field may not be available on all platforms, and will return an\n     /// `Err` on platforms where it is not available.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// use std::fs;\n+    ///\n+    /// let metadata = try!(fs::metadata(\"foo.txt\"));\n+    ///\n+    /// if let Ok(time) = metadata.modified() {\n+    ///     println!(\"{:?}\", time);\n+    /// } else {\n+    ///     println!(\"Not supported on this platform\");\n+    /// }\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     #[stable(feature = \"fs_time\", since = \"1.10.0\")]\n     pub fn modified(&self) -> io::Result<SystemTime> {\n         self.0.modified().map(FromInner::from_inner)\n@@ -712,6 +729,23 @@ impl Metadata {\n     ///\n     /// This field may not be available on all platforms, and will return an\n     /// `Err` on platforms where it is not available.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// use std::fs;\n+    ///\n+    /// let metadata = try!(fs::metadata(\"foo.txt\"));\n+    ///\n+    /// if let Ok(time) = metadata.accessed() {\n+    ///     println!(\"{:?}\", time);\n+    /// } else {\n+    ///     println!(\"Not supported on this platform\");\n+    /// }\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     #[stable(feature = \"fs_time\", since = \"1.10.0\")]\n     pub fn accessed(&self) -> io::Result<SystemTime> {\n         self.0.accessed().map(FromInner::from_inner)\n@@ -726,6 +760,23 @@ impl Metadata {\n     ///\n     /// This field may not be available on all platforms, and will return an\n     /// `Err` on platforms where it is not available.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// use std::fs;\n+    ///\n+    /// let metadata = try!(fs::metadata(\"foo.txt\"));\n+    ///\n+    /// if let Ok(time) = metadata.created() {\n+    ///     println!(\"{:?}\", time);\n+    /// } else {\n+    ///     println!(\"Not supported on this platform\");\n+    /// }\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     #[stable(feature = \"fs_time\", since = \"1.10.0\")]\n     pub fn created(&self) -> io::Result<SystemTime> {\n         self.0.created().map(FromInner::from_inner)"}]}