{"sha": "e030aa801583ec7ce250088bb180d65b760eedec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMzBhYTgwMTU4M2VjN2NlMjUwMDg4YmIxODBkNjViNzYwZWVkZWM=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-01T21:22:37Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-03T22:34:53Z"}, "message": "Revert \"fix stupid bug\"\n\nThis reverts commit 6e4b2b3ae79770c7ccfcdbfc90dc34fe47ec5f09.", "tree": {"sha": "4e3d65101b0f3d9f0a090a2345aab05911d33bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e3d65101b0f3d9f0a090a2345aab05911d33bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e030aa801583ec7ce250088bb180d65b760eedec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e030aa801583ec7ce250088bb180d65b760eedec", "html_url": "https://github.com/rust-lang/rust/commit/e030aa801583ec7ce250088bb180d65b760eedec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e030aa801583ec7ce250088bb180d65b760eedec/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "391a7ebd830bc8118a9d92979d2660bfc63b0315", "url": "https://api.github.com/repos/rust-lang/rust/commits/391a7ebd830bc8118a9d92979d2660bfc63b0315", "html_url": "https://github.com/rust-lang/rust/commit/391a7ebd830bc8118a9d92979d2660bfc63b0315"}], "stats": {"total": 86, "additions": 38, "deletions": 48}, "files": [{"sha": "0fe8e0b1d1b5795d69752d0558d72a946d32ae03", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 38, "deletions": 48, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/e030aa801583ec7ce250088bb180d65b760eedec/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e030aa801583ec7ce250088bb180d65b760eedec/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=e030aa801583ec7ce250088bb180d65b760eedec", "patch": "@@ -88,38 +88,12 @@ impl<'a, 'tcx> InherentOverlapChecker<'a, 'tcx> {\n \n         for (i, &impl1_def_id) in impls.iter().enumerate() {\n             for &impl2_def_id in &impls[(i + 1)..] {\n-                // First, check if the impl was forbidden under the\n-                // old rules. In that case, just have an error.\n-                let used_to_be_allowed = traits::overlapping_impls(\n+                let mut used_to_be_allowed = traits::overlapping_impls(\n                     self.tcx,\n                     impl1_def_id,\n                     impl2_def_id,\n                     IntercrateMode::Issue43355,\n                     TraitObjectMode::NoSquash,\n-                    |overlap| {\n-                        self.check_for_common_items_in_impls(\n-                            impl1_def_id,\n-                            impl2_def_id,\n-                            overlap,\n-                            None,\n-                        );\n-                        false\n-                    },\n-                    || true,\n-                );\n-\n-                if !used_to_be_allowed {\n-                    continue;\n-                }\n-\n-                // Then, check if the impl was forbidden under only\n-                // #43355. In that case, emit an #43355 error.\n-                let used_to_be_allowed = traits::overlapping_impls(\n-                    self.tcx,\n-                    impl1_def_id,\n-                    impl2_def_id,\n-                    IntercrateMode::Fixed,\n-                    TraitObjectMode::NoSquash,\n                     |overlap| {\n                         self.check_for_common_items_in_impls(\n                             impl1_def_id,\n@@ -132,29 +106,45 @@ impl<'a, 'tcx> InherentOverlapChecker<'a, 'tcx> {\n                     || true,\n                 );\n \n-                if !used_to_be_allowed {\n-                    continue;\n+                if used_to_be_allowed {\n+                    used_to_be_allowed = traits::overlapping_impls(\n+                        self.tcx,\n+                        impl1_def_id,\n+                        impl2_def_id,\n+                        IntercrateMode::Fixed,\n+                        TraitObjectMode::NoSquash,\n+                        |overlap| {\n+                            self.check_for_common_items_in_impls(\n+                                impl1_def_id,\n+                                impl2_def_id,\n+                                overlap,\n+                                None,\n+                            );\n+                            false\n+                        },\n+                        || true,\n+                    );\n                 }\n \n-                // Then, check if the impl was forbidden under\n-                // #33140. In that case, emit a #33140 error.\n-                traits::overlapping_impls(\n-                    self.tcx,\n-                    impl1_def_id,\n-                    impl2_def_id,\n-                    IntercrateMode::Fixed,\n-                    TraitObjectMode::SquashAutoTraitsIssue33140,\n-                    |overlap| {\n-                        self.check_for_common_items_in_impls(\n-                            impl1_def_id,\n-                            impl2_def_id,\n-                            overlap,\n-                            Some(FutureCompatOverlapErrorKind::Issue33140),\n-                        );\n-                        false\n-                    },\n-                    || true,\n-                );\n+                if used_to_be_allowed {\n+                    traits::overlapping_impls(\n+                        self.tcx,\n+                        impl1_def_id,\n+                        impl2_def_id,\n+                        IntercrateMode::Fixed,\n+                        TraitObjectMode::SquashAutoTraitsIssue33140,\n+                        |overlap| {\n+                            self.check_for_common_items_in_impls(\n+                                impl1_def_id,\n+                                impl2_def_id,\n+                                overlap,\n+                                Some(FutureCompatOverlapErrorKind::Issue33140),\n+                            );\n+                            false\n+                        },\n+                        || true,\n+                    );\n+                }\n             }\n         }\n     }"}]}