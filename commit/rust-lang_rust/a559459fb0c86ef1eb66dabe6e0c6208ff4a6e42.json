{"sha": "a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTk0NTlmYjBjODZlZjFlYjY2ZGFiZTZlMGM2MjA4ZmY0YTZlNDI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-04T13:38:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T13:38:55Z"}, "message": "Merge #4300\n\n4300: Cleanup attribute completion r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d064e7f9d185257fffcb769db2ffc8a28c2db2b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d064e7f9d185257fffcb769db2ffc8a28c2db2b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesBrvCRBK7hj4Ov3rIwAAdHIIALNPgYzWLDm5p8/ZxtfhyWa/\n4oieEvv1PrR/k+zJGXxQ98zg5P69CJ0o8rB50YLnrgV8VkzBMggXHWIHMkbGtH3c\n5Gt8XXDisxGuEj2dxVy/0zI0elKxQGywQsjeWusNXrUTHGqYdTVeId2f+I/m18TY\nriSbMmAwCqafQAoz4XfNkcJAsGg3tqv1lv8hLAhtGHq/1l+3TkX3c7CIeKWU4X6D\n/enGTnfS/olHVAXA9IGT6WRAwLlQGJisNszdV/kTbt+mFuFOVhy39QxLRH5Gkavl\nCyRuNX1uzXo+Co/+2/bp0TBj/h5Z2IHFO9HolhMnfJ7Y+BRDMYkzKN4+5m6vld0=\n=OPHL\n-----END PGP SIGNATURE-----\n", "payload": "tree d064e7f9d185257fffcb769db2ffc8a28c2db2b5\nparent ea098fdbd2ac9f93e5501235fa4fa8e0f68b3cc4\nparent 8f4478390e29f34c5530a25bd0338b689218677f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588599535 +0000\ncommitter GitHub <noreply@github.com> 1588599535 +0000\n\nMerge #4300\n\n4300: Cleanup attribute completion r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "html_url": "https://github.com/rust-lang/rust/commit/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea098fdbd2ac9f93e5501235fa4fa8e0f68b3cc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea098fdbd2ac9f93e5501235fa4fa8e0f68b3cc4", "html_url": "https://github.com/rust-lang/rust/commit/ea098fdbd2ac9f93e5501235fa4fa8e0f68b3cc4"}, {"sha": "8f4478390e29f34c5530a25bd0338b689218677f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4478390e29f34c5530a25bd0338b689218677f", "html_url": "https://github.com/rust-lang/rust/commit/8f4478390e29f34c5530a25bd0338b689218677f"}], "stats": {"total": 50, "additions": 24, "deletions": 26}, "files": [{"sha": "8bdc43b1a03d7e1a274c77939ff2e33a92facad5", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "patch": "@@ -65,23 +65,20 @@ pub(crate) fn completions(\n     let ctx = CompletionContext::new(db, position, config)?;\n \n     let mut acc = Completions::default();\n-    if ctx.attribute_under_caret.is_some() {\n-        complete_attribute::complete_attribute(&mut acc, &ctx);\n-    } else {\n-        complete_fn_param::complete_fn_param(&mut acc, &ctx);\n-        complete_keyword::complete_expr_keyword(&mut acc, &ctx);\n-        complete_keyword::complete_use_tree_keyword(&mut acc, &ctx);\n-        complete_snippet::complete_expr_snippet(&mut acc, &ctx);\n-        complete_snippet::complete_item_snippet(&mut acc, &ctx);\n-        complete_qualified_path::complete_qualified_path(&mut acc, &ctx);\n-        complete_unqualified_path::complete_unqualified_path(&mut acc, &ctx);\n-        complete_dot::complete_dot(&mut acc, &ctx);\n-        complete_record::complete_record(&mut acc, &ctx);\n-        complete_pattern::complete_pattern(&mut acc, &ctx);\n-        complete_postfix::complete_postfix(&mut acc, &ctx);\n-        complete_macro_in_item_position::complete_macro_in_item_position(&mut acc, &ctx);\n-        complete_trait_impl::complete_trait_impl(&mut acc, &ctx);\n-    }\n+    complete_attribute::complete_attribute(&mut acc, &ctx);\n+    complete_fn_param::complete_fn_param(&mut acc, &ctx);\n+    complete_keyword::complete_expr_keyword(&mut acc, &ctx);\n+    complete_keyword::complete_use_tree_keyword(&mut acc, &ctx);\n+    complete_snippet::complete_expr_snippet(&mut acc, &ctx);\n+    complete_snippet::complete_item_snippet(&mut acc, &ctx);\n+    complete_qualified_path::complete_qualified_path(&mut acc, &ctx);\n+    complete_unqualified_path::complete_unqualified_path(&mut acc, &ctx);\n+    complete_dot::complete_dot(&mut acc, &ctx);\n+    complete_record::complete_record(&mut acc, &ctx);\n+    complete_pattern::complete_pattern(&mut acc, &ctx);\n+    complete_postfix::complete_postfix(&mut acc, &ctx);\n+    complete_macro_in_item_position::complete_macro_in_item_position(&mut acc, &ctx);\n+    complete_trait_impl::complete_trait_impl(&mut acc, &ctx);\n \n     Some(acc)\n }"}, {"sha": "f17266221fd637a458cd134c246544970d0ac736", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=a559459fb0c86ef1eb66dabe6e0c6208ff4a6e42", "patch": "@@ -3,20 +3,21 @@\n //! This module uses a bit of static metadata to provide completions\n //! for built-in attributes.\n \n-use super::completion_context::CompletionContext;\n-use super::completion_item::{CompletionItem, CompletionItemKind, CompletionKind, Completions};\n-use ast::AttrInput;\n-use ra_syntax::{\n-    ast::{self, AttrKind},\n-    AstNode, SyntaxKind,\n-};\n+use ra_syntax::{ast, AstNode, SyntaxKind};\n use rustc_hash::FxHashSet;\n \n+use crate::completion::{\n+    completion_context::CompletionContext,\n+    completion_item::{CompletionItem, CompletionItemKind, CompletionKind, Completions},\n+};\n+\n pub(super) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let attribute = ctx.attribute_under_caret.as_ref()?;\n \n     match (attribute.path(), attribute.input()) {\n-        (Some(path), Some(AttrInput::TokenTree(token_tree))) if path.to_string() == \"derive\" => {\n+        (Some(path), Some(ast::AttrInput::TokenTree(token_tree)))\n+            if path.to_string() == \"derive\" =>\n+        {\n             complete_derive(acc, ctx, token_tree)\n         }\n         _ => complete_attribute_start(acc, ctx, attribute),\n@@ -40,7 +41,7 @@ fn complete_attribute_start(acc: &mut Completions, ctx: &CompletionContext, attr\n             _ => {}\n         }\n \n-        if attribute.kind() == AttrKind::Inner || !attr_completion.should_be_inner {\n+        if attribute.kind() == ast::AttrKind::Inner || !attr_completion.should_be_inner {\n             acc.add(item);\n         }\n     }"}]}