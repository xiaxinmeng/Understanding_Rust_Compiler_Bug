{"sha": "0d8a0c56fee71dac218eb949817669ab8bb00c5e", "node_id": "C_kwDOAAsO6NoAKDBkOGEwYzU2ZmVlNzFkYWMyMThlYjk0OTgxNzY2OWFiOGJiMDBjNWU", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2022-08-09T07:07:29Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2022-10-06T16:04:48Z"}, "message": "Rename LinesAnyMap to LinesMap\n\nlines_any method was replaced with lines method, so it\nmakes sense to rename this structure to match new name.\n\nCo-authored-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "e04bd2b8f3d64b8a0fe6880bca2ff947481f0274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e04bd2b8f3d64b8a0fe6880bca2ff947481f0274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d8a0c56fee71dac218eb949817669ab8bb00c5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8a0c56fee71dac218eb949817669ab8bb00c5e", "html_url": "https://github.com/rust-lang/rust/commit/0d8a0c56fee71dac218eb949817669ab8bb00c5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d8a0c56fee71dac218eb949817669ab8bb00c5e/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d46584fae1acc74566bf49fce976fe509a38f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d46584fae1acc74566bf49fce976fe509a38f5f", "html_url": "https://github.com/rust-lang/rust/commit/2d46584fae1acc74566bf49fce976fe509a38f5f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "660a3b091b3d1516be90dad5b975f2671243a566", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d8a0c56fee71dac218eb949817669ab8bb00c5e/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8a0c56fee71dac218eb949817669ab8bb00c5e/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=0d8a0c56fee71dac218eb949817669ab8bb00c5e", "patch": "@@ -13,7 +13,7 @@ use super::from_utf8_unchecked;\n use super::pattern::Pattern;\n use super::pattern::{DoubleEndedSearcher, ReverseSearcher, Searcher};\n use super::validations::{next_code_point, next_code_point_reverse};\n-use super::LinesAnyMap;\n+use super::LinesMap;\n use super::{BytesIsNotEmpty, UnsafeBytesToStr};\n use super::{CharEscapeDebugContinue, CharEscapeDefault, CharEscapeUnicode};\n use super::{IsAsciiWhitespace, IsNotEmpty, IsWhitespace};\n@@ -1091,7 +1091,7 @@ generate_pattern_iterators! {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[derive(Clone, Debug)]\n-pub struct Lines<'a>(pub(super) Map<SplitTerminator<'a, char>, LinesAnyMap>);\n+pub struct Lines<'a>(pub(super) Map<SplitTerminator<'a, char>, LinesMap>);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Iterator for Lines<'a> {"}, {"sha": "434c1598ee4890e5b9c81c0f68ec5313e2d5f50f", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d8a0c56fee71dac218eb949817669ab8bb00c5e/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8a0c56fee71dac218eb949817669ab8bb00c5e/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=0d8a0c56fee71dac218eb949817669ab8bb00c5e", "patch": "@@ -997,7 +997,7 @@ impl str {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn lines(&self) -> Lines<'_> {\n-        Lines(self.split_terminator('\\n').map(LinesAnyMap))\n+        Lines(self.split_terminator('\\n').map(LinesMap))\n     }\n \n     /// An iterator over the lines of a string.\n@@ -2590,7 +2590,7 @@ impl Default for &mut str {\n impl_fn_for_zst! {\n     /// A nameable, cloneable fn type\n     #[derive(Clone)]\n-    struct LinesAnyMap impl<'a> Fn = |line: &'a str| -> &'a str {\n+    struct LinesMap impl<'a> Fn = |line: &'a str| -> &'a str {\n         let l = line.len();\n         if l > 0 && line.as_bytes()[l - 1] == b'\\r' { &line[0 .. l - 1] }\n         else { line }"}]}