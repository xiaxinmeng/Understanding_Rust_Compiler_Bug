{"sha": "5648add9ef770de7311e9127421ac8a7038a07e1", "node_id": "C_kwDOAAsO6NoAKDU2NDhhZGQ5ZWY3NzBkZTczMTFlOTEyNzQyMWFjOGE3MDM4YTA3ZTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-07T19:10:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-07T19:10:26Z"}, "message": "Rollup merge of #100230 - cjgillot:noice-multibyte-amp, r=compiler-errors\n\nUse start_point instead of next_point to point to elided lifetime amp\u2026\n\nUsing `next_point` creates a span which points inside the multibyte token, ICEing.\n\nFixes https://github.com/rust-lang/rust/issues/100224", "tree": {"sha": "522332121c49b470f70eab7cbedbd2b074a05f16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/522332121c49b470f70eab7cbedbd2b074a05f16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5648add9ef770de7311e9127421ac8a7038a07e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi8A4iCRBK7hj4Ov3rIwAAwdsIABfGAuULJfvr9pdySrODK71D\n/2sgsJv2i2KB4AlCzeeN8H2caAKo7LTRUUivB6IJjjLJIwIHqAX3qwI9B0uUaq1v\nbSb12o67lKGNIl6GkLcPGGGAvJLbwNqcKUlyVv0oXdjn73no4MrvTRYgvFe5KGC5\nHlLhR4/T84DytK10uoHaW1RzashEEdA5j92Fabt4cCG+GlcquLQI5lBRdkcC3Jqg\n9BDNKxNm6IfR5iyJL6vTg0h3YWmKubJulTj9m91f887/p+WChP8KWD1i1f6tzgGe\n2tKuLJwo0+bBhaGp4qiECDe+ti+bv7NtmDM24WGUnRyTMNS4VCHVWMHyKXHVMTM=\n=epA7\n-----END PGP SIGNATURE-----\n", "payload": "tree 522332121c49b470f70eab7cbedbd2b074a05f16\nparent 07315fe970c849ec712393720306a82bd5b4e75f\nparent f6af4efec579edc8d10f8c2ba5d3c43331130b39\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659899426 +0200\ncommitter GitHub <noreply@github.com> 1659899426 +0200\n\nRollup merge of #100230 - cjgillot:noice-multibyte-amp, r=compiler-errors\n\nUse start_point instead of next_point to point to elided lifetime amp\u2026\n\nUsing `next_point` creates a span which points inside the multibyte token, ICEing.\n\nFixes https://github.com/rust-lang/rust/issues/100224\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5648add9ef770de7311e9127421ac8a7038a07e1", "html_url": "https://github.com/rust-lang/rust/commit/5648add9ef770de7311e9127421ac8a7038a07e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5648add9ef770de7311e9127421ac8a7038a07e1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07315fe970c849ec712393720306a82bd5b4e75f", "url": "https://api.github.com/repos/rust-lang/rust/commits/07315fe970c849ec712393720306a82bd5b4e75f", "html_url": "https://github.com/rust-lang/rust/commit/07315fe970c849ec712393720306a82bd5b4e75f"}, {"sha": "f6af4efec579edc8d10f8c2ba5d3c43331130b39", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6af4efec579edc8d10f8c2ba5d3c43331130b39", "html_url": "https://github.com/rust-lang/rust/commit/f6af4efec579edc8d10f8c2ba5d3c43331130b39"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "0562f7b88a3b0a7d8f4bac5f2d4015a857374aea", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5648add9ef770de7311e9127421ac8a7038a07e1/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5648add9ef770de7311e9127421ac8a7038a07e1/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=5648add9ef770de7311e9127421ac8a7038a07e1", "patch": "@@ -1228,7 +1228,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     } else {\n                         self.next_node_id()\n                     };\n-                    let span = self.tcx.sess.source_map().next_point(t.span.shrink_to_lo());\n+                    let span = self.tcx.sess.source_map().start_point(t.span);\n                     Lifetime { ident: Ident::new(kw::UnderscoreLifetime, span), id }\n                 });\n                 let lifetime = self.lower_lifetime(&region);"}, {"sha": "ac8d26fb0724a0a36a8ca210ac517c7c463f6c0c", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5648add9ef770de7311e9127421ac8a7038a07e1/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5648add9ef770de7311e9127421ac8a7038a07e1/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=5648add9ef770de7311e9127421ac8a7038a07e1", "patch": "@@ -629,7 +629,7 @@ impl<'a: 'ast, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n                 // Elided lifetime in reference: we resolve as if there was some lifetime `'_` with\n                 // NodeId `ty.id`.\n                 // This span will be used in case of elision failure.\n-                let span = self.r.session.source_map().next_point(ty.span.shrink_to_lo());\n+                let span = self.r.session.source_map().start_point(ty.span);\n                 self.resolve_elided_lifetime(ty.id, span);\n                 visit::walk_ty(self, ty);\n             }"}, {"sha": "7d8948bd844cf03832e4417e26e46d5fef71c656", "filename": "src/test/ui/lifetimes/fullwidth-ampersand.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5648add9ef770de7311e9127421ac8a7038a07e1/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5648add9ef770de7311e9127421ac8a7038a07e1/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs?ref=5648add9ef770de7311e9127421ac8a7038a07e1", "patch": "@@ -0,0 +1,7 @@\n+// Verify that we do not ICE when the user uses a multubyte ampersand.\n+\n+fn f(_: &\uff06()) -> &() { todo!() }\n+//~^ ERROR unknown start of token: \\u{ff06}\n+//~| ERROR missing lifetime specifier [E0106]\n+\n+fn main() {}"}, {"sha": "4645254f4b70d2f6709459da29cd2063d2a47da5", "filename": "src/test/ui/lifetimes/fullwidth-ampersand.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5648add9ef770de7311e9127421ac8a7038a07e1/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5648add9ef770de7311e9127421ac8a7038a07e1/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr?ref=5648add9ef770de7311e9127421ac8a7038a07e1", "patch": "@@ -0,0 +1,26 @@\n+error: unknown start of token: \\u{ff06}\n+  --> $DIR/fullwidth-ampersand.rs:3:10\n+   |\n+LL | fn f(_: &\uff06()) -> &() { todo!() }\n+   |          ^^\n+   |\n+help: Unicode character '\uff06' (Fullwidth Ampersand) looks like '&' (Ampersand), but it is not\n+   |\n+LL | fn f(_: &&()) -> &() { todo!() }\n+   |          ~\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/fullwidth-ampersand.rs:3:18\n+   |\n+LL | fn f(_: &\uff06()) -> &() { todo!() }\n+   |         -----     ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say which one of argument 1's 2 lifetimes it is borrowed from\n+help: consider introducing a named lifetime parameter\n+   |\n+LL | fn f<'a>(_: &'a \uff06'a ()) -> &'a () { todo!() }\n+   |     ++++     ++   ++         ++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0106`."}]}