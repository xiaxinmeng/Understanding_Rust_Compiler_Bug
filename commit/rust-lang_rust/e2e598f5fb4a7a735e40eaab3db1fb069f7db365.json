{"sha": "e2e598f5fb4a7a735e40eaab3db1fb069f7db365", "node_id": "C_kwDOAAsO6NoAKGUyZTU5OGY1ZmI0YTdhNzM1ZTQwZWFhYjNkYjFmYjA2OWY3ZGIzNjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-31T08:50:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-31T08:50:35Z"}, "message": "Auto merge of #98112 - saethlin:mir-alignment-checks, r=oli-obk\n\nInsert alignment checks for pointer dereferences when debug assertions are enabled\n\nCloses https://github.com/rust-lang/rust/issues/54915\n\n- [x] Jake tells me this sounds like a place to use `MirPatch`, but I can't figure out how to insert a new basic block with a new terminator in the middle of an existing basic block, using `MirPatch`. (if nobody else backs up this point I'm checking this as \"not actually a good idea\" because the code looks pretty clean to me after rearranging it a bit)\n- [x] Using `CastKind::PointerExposeAddress` is definitely wrong, we don't want to expose. Calling a function to get the pointer address seems quite excessive. ~I'll see if I can add a new `CastKind`.~ `CastKind::Transmute` to the rescue!\n- [x] Implement a more helpful panic message like slice bounds checking.\n\nr? `@oli-obk`", "tree": {"sha": "26c2610a4e0b20193fdf408b0ed21102994b9b33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26c2610a4e0b20193fdf408b0ed21102994b9b33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2e598f5fb4a7a735e40eaab3db1fb069f7db365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e598f5fb4a7a735e40eaab3db1fb069f7db365", "html_url": "https://github.com/rust-lang/rust/commit/e2e598f5fb4a7a735e40eaab3db1fb069f7db365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2e598f5fb4a7a735e40eaab3db1fb069f7db365/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69b57c2db5e8718525aa1cd5b954708387a5e594", "url": "https://api.github.com/repos/rust-lang/rust/commits/69b57c2db5e8718525aa1cd5b954708387a5e594", "html_url": "https://github.com/rust-lang/rust/commit/69b57c2db5e8718525aa1cd5b954708387a5e594"}, {"sha": "8b18860677a84778478deed4408586ebaaac868b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b18860677a84778478deed4408586ebaaac868b", "html_url": "https://github.com/rust-lang/rust/commit/8b18860677a84778478deed4408586ebaaac868b"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "98112fe08305ebbec63546ac07b61a1aa7eb2f06", "filename": "src/base.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2e598f5fb4a7a735e40eaab3db1fb069f7db365/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e598f5fb4a7a735e40eaab3db1fb069f7db365/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e2e598f5fb4a7a735e40eaab3db1fb069f7db365", "patch": "@@ -379,6 +379,18 @@ fn codegen_fn_body(fx: &mut FunctionCx<'_, '_, '_>, start_block: Block) {\n                             source_info.span,\n                         );\n                     }\n+                    AssertKind::MisalignedPointerDereference { ref required, ref found } => {\n+                        let required = codegen_operand(fx, required).load_scalar(fx);\n+                        let found = codegen_operand(fx, found).load_scalar(fx);\n+                        let location = fx.get_caller_location(source_info).load_scalar(fx);\n+\n+                        codegen_panic_inner(\n+                            fx,\n+                            rustc_hir::LangItem::PanicBoundsCheck,\n+                            &[required, found, location],\n+                            source_info.span,\n+                        );\n+                    }\n                     _ => {\n                         let msg_str = msg.description();\n                         codegen_panic(fx, msg_str, source_info);"}]}