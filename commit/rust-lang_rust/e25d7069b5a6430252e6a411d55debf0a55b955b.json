{"sha": "e25d7069b5a6430252e6a411d55debf0a55b955b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNWQ3MDY5YjVhNjQzMDI1MmU2YTQxMWQ1NWRlYmYwYTU1Yjk1NWI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-13T11:08:28Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-13T11:34:50Z"}, "message": "rustc: make error messages containing generic more self-explanatory.\n\nUnsuffixed literals like 1 and 1.1, and free type parameters sometimes\nhave to be printed in error messages, which ended up with <V0>, <VI0>\nand <VF0>. This change puts the words \"generic\" and \"integer\"/\"float\"\ninto the message so it's not a completely black box.", "tree": {"sha": "93e42779b620d0a56f1f49467bd7948364d4a0f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93e42779b620d0a56f1f49467bd7948364d4a0f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e25d7069b5a6430252e6a411d55debf0a55b955b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e25d7069b5a6430252e6a411d55debf0a55b955b", "html_url": "https://github.com/rust-lang/rust/commit/e25d7069b5a6430252e6a411d55debf0a55b955b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e25d7069b5a6430252e6a411d55debf0a55b955b/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b93a4dac2e52b67faf778957ba7a997e805d103b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b93a4dac2e52b67faf778957ba7a997e805d103b", "html_url": "https://github.com/rust-lang/rust/commit/b93a4dac2e52b67faf778957ba7a997e805d103b"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "daa5312229e15e97e734c989091eed8d52e0435f", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=e25d7069b5a6430252e6a411d55debf0a55b955b", "patch": "@@ -810,23 +810,23 @@ impl Vid for TyVid {\n }\n \n impl ToStr for TyVid {\n-    fn to_str(&self) -> ~str { format!(\"<V{}>\", self.to_uint()) }\n+    fn to_str(&self) -> ~str { format!(\"<generic \\\\#{}>\", self.to_uint()) }\n }\n \n impl Vid for IntVid {\n     fn to_uint(&self) -> uint { let IntVid(v) = *self; v }\n }\n \n impl ToStr for IntVid {\n-    fn to_str(&self) -> ~str { format!(\"<VI{}>\", self.to_uint()) }\n+    fn to_str(&self) -> ~str { format!(\"<generic integer \\\\#{}>\", self.to_uint()) }\n }\n \n impl Vid for FloatVid {\n     fn to_uint(&self) -> uint { let FloatVid(v) = *self; v }\n }\n \n impl ToStr for FloatVid {\n-    fn to_str(&self) -> ~str { format!(\"<VF{}>\", self.to_uint()) }\n+    fn to_str(&self) -> ~str { format!(\"<generic float \\\\#{}>\", self.to_uint()) }\n }\n \n impl Vid for RegionVid {"}, {"sha": "de2165ff633c111833d73a3c424ebe78481456df", "filename": "src/test/compile-fail/issue-3680.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs?ref=e25d7069b5a6430252e6a411d55debf0a55b955b", "patch": "@@ -10,6 +10,6 @@\n \n fn main() {\n     match None {\n-        Err(_) => () //~ ERROR mismatched types: expected `std::option::Option<<V1>>` but found `std::result::Result<<V2>,<V3>>`\n+        Err(_) => () //~ ERROR mismatched types: expected `std::option::Option<<generic #1>>` but found `std::result::Result<<generic #2>,<generic #3>>`\n     }\n }"}, {"sha": "5739f3dc46b909dd96a2cae57c1e89d1a19b44de", "filename": "src/test/compile-fail/issue-4968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs?ref=e25d7069b5a6430252e6a411d55debf0a55b955b", "patch": "@@ -12,5 +12,5 @@\n \n static A: (int,int) = (4,2);\n fn main() {\n-    match 42 { A => () } //~ ERROR mismatched types: expected `<VI0>` but found `(int,int)` (expected integral variable but found tuple)\n+    match 42 { A => () } //~ ERROR mismatched types: expected `<generic integer #0>` but found `(int,int)` (expected integral variable but found tuple)\n }"}, {"sha": "6e5dc7cc102ccca1f78ea9a9b124bb4a49e1ff71", "filename": "src/test/compile-fail/slightly-nice-generic-literal-messages.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e25d7069b5a6430252e6a411d55debf0a55b955b/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs?ref=e25d7069b5a6430252e6a411d55debf0a55b955b", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo<T,U>(T);\n+\n+fn main() {\n+    match Foo(1.1) {\n+        1 => {}\n+        //~^ ERROR expected `Foo<<generic float #0>,<generic #2>>` but found `<generic integer #0>`\n+    }\n+\n+}"}]}