{"sha": "9c111dd209d06d472e26398f0eed15b3cdccaaac", "node_id": "C_kwDOAAsO6NoAKDljMTExZGQyMDlkMDZkNDcyZTI2Mzk4ZjBlZWQxNWIzY2RjY2FhYWM", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-28T02:03:57Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-05-06T15:55:15Z"}, "message": "remove VarianceTest\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "406142ae431b096a20782ed5ae60d96d435fc3cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/406142ae431b096a20782ed5ae60d96d435fc3cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c111dd209d06d472e26398f0eed15b3cdccaaac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c111dd209d06d472e26398f0eed15b3cdccaaac", "html_url": "https://github.com/rust-lang/rust/commit/9c111dd209d06d472e26398f0eed15b3cdccaaac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c111dd209d06d472e26398f0eed15b3cdccaaac/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03e955d812db04e7d6883e04406ca372e123008c", "url": "https://api.github.com/repos/rust-lang/rust/commits/03e955d812db04e7d6883e04406ca372e123008c", "html_url": "https://github.com/rust-lang/rust/commit/03e955d812db04e7d6883e04406ca372e123008c"}], "stats": {"total": 28, "additions": 7, "deletions": 21}, "files": [{"sha": "f96c8b46b86b68fd0e7fc02d3f4b0c3f8b509afc", "filename": "compiler/rustc_typeck/src/variance/terms.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c111dd209d06d472e26398f0eed15b3cdccaaac/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c111dd209d06d472e26398f0eed15b3cdccaaac/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fterms.rs?ref=9c111dd209d06d472e26398f0eed15b3cdccaaac", "patch": "@@ -185,4 +185,3 @@ impl<'a, 'tcx> TermsContext<'a, 'tcx> {\n         }\n     }\n }\n-"}, {"sha": "5cd083062160efdc09ca40e4c9a88cd9b169e08d", "filename": "compiler/rustc_typeck/src/variance/test.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9c111dd209d06d472e26398f0eed15b3cdccaaac/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c111dd209d06d472e26398f0eed15b3cdccaaac/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Ftest.rs?ref=9c111dd209d06d472e26398f0eed15b3cdccaaac", "patch": "@@ -1,28 +1,15 @@\n use rustc_errors::struct_span_err;\n-use rustc_hir as hir;\n-use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n pub fn test_variance(tcx: TyCtxt<'_>) {\n-    tcx.hir().visit_all_item_likes(&mut VarianceTest { tcx });\n-}\n-\n-struct VarianceTest<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-}\n-\n-impl<'tcx> ItemLikeVisitor<'tcx> for VarianceTest<'tcx> {\n-    fn visit_item(&mut self, item: &'tcx hir::Item<'tcx>) {\n-        // For unit testing: check for a special \"rustc_variance\"\n-        // attribute and report an error with various results if found.\n-        if self.tcx.has_attr(item.def_id.to_def_id(), sym::rustc_variance) {\n-            let variances_of = self.tcx.variances_of(item.def_id);\n-            struct_span_err!(self.tcx.sess, item.span, E0208, \"{:?}\", variances_of).emit();\n+    // For unit testing: check for a special \"rustc_variance\"\n+    // attribute and report an error with various results if found.\n+    for id in tcx.hir().items() {\n+        if tcx.has_attr(id.def_id.to_def_id(), sym::rustc_variance) {\n+            let variances_of = tcx.variances_of(id.def_id);\n+            struct_span_err!(tcx.sess, tcx.hir().span(id.hir_id()), E0208, \"{:?}\", variances_of)\n+                .emit();\n         }\n     }\n-\n-    fn visit_trait_item(&mut self, _: &'tcx hir::TraitItem<'tcx>) {}\n-    fn visit_impl_item(&mut self, _: &'tcx hir::ImplItem<'tcx>) {}\n-    fn visit_foreign_item(&mut self, _: &'tcx hir::ForeignItem<'tcx>) {}\n }"}]}