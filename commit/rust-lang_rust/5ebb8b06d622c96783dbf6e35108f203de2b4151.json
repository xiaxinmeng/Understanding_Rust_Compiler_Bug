{"sha": "5ebb8b06d622c96783dbf6e35108f203de2b4151", "node_id": "C_kwDOAAsO6NoAKDVlYmI4YjA2ZDYyMmM5Njc4M2RiZjZlMzUxMDhmMjAzZGUyYjQxNTE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-21T18:55:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-21T18:55:21Z"}, "message": "Rollup merge of #96289 - aDotInTheVoid:redundant-fmt, r=jackh726\n\nRemove redundant `format!`s", "tree": {"sha": "3b3e6a99e2f46da86ad4821d3f174283b046708c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3e6a99e2f46da86ad4821d3f174283b046708c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ebb8b06d622c96783dbf6e35108f203de2b4151", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYaiaCRBK7hj4Ov3rIwAAEx4IAELhh5wW8V7ShlBDamyo0adI\nIuAf+3tm5H1/dT1GbwQZrO0PTM6iw6VmoVW1G9km4LH4G//FNKmJChRqfs5nP+vf\nV4R66GYRm08ybfMOsDy1YhceZI1nSCbrdJRa0EQZC0jPOxS/EzPl4taKvmME7k69\n9SSaWPs+Xcm8LVWlzfAyLCUfrqQB1RdR/YM5dTlaWFUnysgpeZohI0b2tTf2LbMs\nLw0z9ggdmmlbucw7iArtItX86h9jMdh/LbOtCHhELOZ/WaSLWEpMgKcVY97UaVkI\nayukdtMnmC4UkkseJFm9ERdGsWEg24LZ+YWBbtSPEZ8ZfHeup4f2WIhEudPOkaE=\n=IJOr\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b3e6a99e2f46da86ad4821d3f174283b046708c\nparent 35ef5c6e4cda6a59445cf210b14b68ce5a7c96c2\nparent 8fa20e01a5f85e8152b1a771e06d743b4e3d0017\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650567321 +0200\ncommitter GitHub <noreply@github.com> 1650567321 +0200\n\nRollup merge of #96289 - aDotInTheVoid:redundant-fmt, r=jackh726\n\nRemove redundant `format!`s\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ebb8b06d622c96783dbf6e35108f203de2b4151", "html_url": "https://github.com/rust-lang/rust/commit/5ebb8b06d622c96783dbf6e35108f203de2b4151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ebb8b06d622c96783dbf6e35108f203de2b4151/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35ef5c6e4cda6a59445cf210b14b68ce5a7c96c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/35ef5c6e4cda6a59445cf210b14b68ce5a7c96c2", "html_url": "https://github.com/rust-lang/rust/commit/35ef5c6e4cda6a59445cf210b14b68ce5a7c96c2"}, {"sha": "8fa20e01a5f85e8152b1a771e06d743b4e3d0017", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fa20e01a5f85e8152b1a771e06d743b4e3d0017", "html_url": "https://github.com/rust-lang/rust/commit/8fa20e01a5f85e8152b1a771e06d743b4e3d0017"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9bbecf104e55e897964cc1838e9e31bb3a39154a", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=5ebb8b06d622c96783dbf6e35108f203de2b4151", "patch": "@@ -1014,7 +1014,7 @@ impl<'a> Resolver<'a> {\n             }\n             ResolutionError::InvalidAsmSym => {\n                 let mut err = self.session.struct_span_err(span, \"invalid `sym` operand\");\n-                err.span_label(span, &format!(\"is a local variable\"));\n+                err.span_label(span, \"is a local variable\");\n                 err.help(\"`sym` operands must refer to either a function or a static\");\n                 err\n             }"}, {"sha": "7635ad9bd87bf145a752cf87c004b0e74f723115", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=5ebb8b06d622c96783dbf6e35108f203de2b4151", "patch": "@@ -1696,7 +1696,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     \"invalid lifetime parameter name: `{}`\",\n                     param.ident,\n                 )\n-                .span_label(param.ident.span, format!(\"'static is a reserved lifetime name\"))\n+                .span_label(param.ident.span, \"'static is a reserved lifetime name\")\n                 .emit();\n                 continue;\n             }"}, {"sha": "616aa11f00a6b638870cfa61e6f9bf4c7463ee9f", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ebb8b06d622c96783dbf6e35108f203de2b4151/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=5ebb8b06d622c96783dbf6e35108f203de2b4151", "patch": "@@ -968,9 +968,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 SuggestionText::Remove(plural) => {\n                     Some(format!(\"remove the extra argument{}\", if plural { \"s\" } else { \"\" }))\n                 }\n-                SuggestionText::Swap => Some(format!(\"swap these arguments\")),\n-                SuggestionText::Reorder => Some(format!(\"reorder these arguments\")),\n-                SuggestionText::DidYouMean => Some(format!(\"did you mean\")),\n+                SuggestionText::Swap => Some(\"swap these arguments\".to_string()),\n+                SuggestionText::Reorder => Some(\"reorder these arguments\".to_string()),\n+                SuggestionText::DidYouMean => Some(\"did you mean\".to_string()),\n             };\n             if let Some(suggestion_text) = suggestion_text {\n                 let source_map = self.sess().source_map();"}]}