{"sha": "4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmN2ZmYmYzNTFjNzMyZmNkYmUxMzc0YzY3ODJlOTRmNjZkYTlhMjM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T15:26:11Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-22T16:41:35Z"}, "message": "Fix const core::panic!(non_literal_str).", "tree": {"sha": "cf1d3075772ad330913fe53425cc2aaa5443b738", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf1d3075772ad330913fe53425cc2aaa5443b738"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "html_url": "https://github.com/rust-lang/rust/commit/4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "500ddc5efda9d4b0c8f90b654d220ffc9e24ecb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/500ddc5efda9d4b0c8f90b654d220ffc9e24ecb5", "html_url": "https://github.com/rust-lang/rust/commit/500ddc5efda9d4b0c8f90b654d220ffc9e24ecb5"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "3e4eb9eafd7f99a0a9124e8d43d65d8b740b27a0", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -263,6 +263,7 @@ language_item_table! {\n     // is required to define it somewhere. Additionally, there are restrictions on crates that use\n     // a weak lang item, but do not have it defined.\n     Panic,                   sym::panic,               panic_fn,                   Target::Fn;\n+    PanicStr,                sym::panic_str,           panic_str,                  Target::Fn;\n     PanicBoundsCheck,        sym::panic_bounds_check,  panic_bounds_check_fn,      Target::Fn;\n     PanicInfo,               sym::panic_info,          panic_info,                 Target::Struct;\n     PanicLocation,           sym::panic_location,      panic_location,             Target::Struct;"}, {"sha": "7e2cae094811a07ccc69b533b764917ce63891ae", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -70,9 +70,10 @@ impl<'mir, 'tcx> InterpCx<'mir, 'tcx, CompileTimeInterpreter<'mir, 'tcx>> {\n     ) -> InterpResult<'tcx> {\n         let def_id = instance.def_id();\n         if Some(def_id) == self.tcx.lang_items().panic_fn()\n+            || Some(def_id) == self.tcx.lang_items().panic_str()\n             || Some(def_id) == self.tcx.lang_items().begin_panic_fn()\n         {\n-            // &'static str\n+            // &str\n             assert!(args.len() == 1);\n \n             let msg_place = self.deref_operand(args[0])?;"}, {"sha": "b93d63b4fddb9335d2bdf731f3bce6e1b0e073b0", "filename": "compiler/rustc_mir/src/transform/check_consts/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -74,7 +74,9 @@ impl ConstCx<'mir, 'tcx> {\n \n /// Returns `true` if this `DefId` points to one of the official `panic` lang items.\n pub fn is_lang_panic_fn(tcx: TyCtxt<'tcx>, def_id: DefId) -> bool {\n-    Some(def_id) == tcx.lang_items().panic_fn() || Some(def_id) == tcx.lang_items().begin_panic_fn()\n+    Some(def_id) == tcx.lang_items().panic_fn()\n+        || Some(def_id) == tcx.lang_items().panic_str()\n+        || Some(def_id) == tcx.lang_items().begin_panic_fn()\n }\n \n pub fn allow_internal_unstable(tcx: TyCtxt<'tcx>, def_id: DefId, feature_gate: Symbol) -> bool {"}, {"sha": "3133090575e36e0dc6adde677303c88aee11fa97", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -777,6 +777,7 @@ symbols! {\n         panic_info,\n         panic_location,\n         panic_runtime,\n+        panic_str,\n         panic_unwind,\n         param_attrs,\n         parent_trait,"}, {"sha": "ac45e819cf67a23a82186b45adb3942606ea6b0f", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -10,7 +10,7 @@ macro_rules! panic {\n         $crate::panicking::panic($msg)\n     );\n     ($msg:expr) => (\n-        $crate::panic!(\"{}\", $crate::convert::identity::<&str>($msg))\n+        $crate::panicking::panic_str($msg)\n     );\n     ($msg:expr,) => (\n         $crate::panic!($msg)"}, {"sha": "09dd19b8f5f9385450fa7dc6ce4e5c85eeacf52f", "filename": "library/core/src/panicking.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/library%2Fcore%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7ffbf351c732fcdbe1374c6782e94f66da9a23/library%2Fcore%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanicking.rs?ref=4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "patch": "@@ -50,6 +50,13 @@ pub fn panic(expr: &'static str) -> ! {\n     panic_fmt(fmt::Arguments::new_v1(&[expr], &[]));\n }\n \n+#[inline]\n+#[track_caller]\n+#[cfg_attr(not(bootstrap), lang = \"panic_str\")] // needed for const-evaluated panics\n+pub fn panic_str(expr: &str) -> ! {\n+    panic_fmt(format_args!(\"{}\", expr));\n+}\n+\n #[cold]\n #[cfg_attr(not(feature = \"panic_immediate_abort\"), inline(never))]\n #[track_caller]"}]}