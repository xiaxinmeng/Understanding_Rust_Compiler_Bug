{"sha": "1ef077af70921e9691e45352cf90c43e370c748f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZjA3N2FmNzA5MjFlOTY5MWU0NTM1MmNmOTBjNDNlMzcwYzc0OGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-05T12:40:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-05T12:40:02Z"}, "message": "Merge #9494\n\n9494: feat: show 'as' or 'use' before label traits r=matklad a=mahdi-frms\n\nbased on #9478 discussions: showing 'as' before already imported traits and 'use' on auto-import cased\r\n\r\n![Screenshot from 2021-07-05 16-54-59](https://user-images.githubusercontent.com/62165556/124471905-b5dcdd80-ddb2-11eb-8852-1d703ef6023f.png)\r\n\r\n![Screenshot from 2021-07-05 16-55-20](https://user-images.githubusercontent.com/62165556/124471923-bffedc00-ddb2-11eb-9571-31b8b95499f1.png)\r\n\r\n\r\n\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>", "tree": {"sha": "5bd0df585759f05297a27c830770d37f2ff32835", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd0df585759f05297a27c830770d37f2ff32835"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ef077af70921e9691e45352cf90c43e370c748f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4v2iCRBK7hj4Ov3rIwAA0ooIAF49JgKPQRvexlfBg6PNiIh4\nXSJCtQjnXZb3TsvegnB3fZKN02R2kZ+iXlXxddiJKNQxEPQoWvzD/j3Z8u3zc+1X\nq8fxC5WAcUuiefI+7MdKi6T2snFj+qE7HjVXowrD1I/Q5QR7Mi23GczgIewM9Zqg\nOEH6/H555T30ZU4y8+KImu39W5cC+tMG/JP2hX2oXS8We6UbWfxmKrS9UWX7DeZl\nTgC/pUO9A39qFV/XCsvGAAmLGN2qQNZCsUSfJwGkHedzXodjXyEUCTdEXPYfqbWH\nud4iSC69KZMmPStm+/WwsbQyilwW4fp6/ysCF988m53ehdP1Ax6cz70kkJ+UcRE=\n=ZNU2\n-----END PGP SIGNATURE-----\n", "payload": "tree 5bd0df585759f05297a27c830770d37f2ff32835\nparent 2bc4f9e371e8cf5e49b265217003800a6bd19344\nparent 6ac54319eac0433268a036cf5b65aebf3659d0c3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625488802 +0000\ncommitter GitHub <noreply@github.com> 1625488802 +0000\n\nMerge #9494\n\n9494: feat: show 'as' or 'use' before label traits r=matklad a=mahdi-frms\n\nbased on #9478 discussions: showing 'as' before already imported traits and 'use' on auto-import cased\r\n\r\n![Screenshot from 2021-07-05 16-54-59](https://user-images.githubusercontent.com/62165556/124471905-b5dcdd80-ddb2-11eb-8852-1d703ef6023f.png)\r\n\r\n![Screenshot from 2021-07-05 16-55-20](https://user-images.githubusercontent.com/62165556/124471923-bffedc00-ddb2-11eb-9571-31b8b95499f1.png)\r\n\r\n\r\n\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef077af70921e9691e45352cf90c43e370c748f", "html_url": "https://github.com/rust-lang/rust/commit/1ef077af70921e9691e45352cf90c43e370c748f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ef077af70921e9691e45352cf90c43e370c748f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc4f9e371e8cf5e49b265217003800a6bd19344", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc4f9e371e8cf5e49b265217003800a6bd19344", "html_url": "https://github.com/rust-lang/rust/commit/2bc4f9e371e8cf5e49b265217003800a6bd19344"}, {"sha": "6ac54319eac0433268a036cf5b65aebf3659d0c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac54319eac0433268a036cf5b65aebf3659d0c3", "html_url": "https://github.com/rust-lang/rust/commit/6ac54319eac0433268a036cf5b65aebf3659d0c3"}], "stats": {"total": 74, "additions": 37, "deletions": 37}, "files": [{"sha": "a2913015f63872046442d7eb21b6ed73bd37bbe5", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -250,7 +250,7 @@ impl Trait for A {}\n fn foo(a: A) { a.$0 }\n \"#,\n             expect![[r#\"\n-                me the_method() (Trait) fn(&self)\n+                me the_method() (as Trait) fn(&self)\n             \"#]],\n         );\n     }\n@@ -265,7 +265,7 @@ impl<T> Trait for T {}\n fn foo(a: &A) { a.$0 }\n \",\n             expect![[r#\"\n-                me the_method() (Trait) fn(&self)\n+                me the_method() (as Trait) fn(&self)\n             \"#]],\n         );\n     }\n@@ -283,7 +283,7 @@ impl Trait for A {}\n fn foo(a: A) { a.$0 }\n \",\n             expect![[r#\"\n-                me the_method() (Trait) fn(&self)\n+                me the_method() (as Trait) fn(&self)\n             \"#]],\n         );\n     }"}, {"sha": "af4fa82f4453112b48cd5c80b6479fbc4799c7c9", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -404,7 +404,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-                fn weird_function() (dep::test_mod::TestTrait) fn()\n+                fn weird_function() (use dep::test_mod::TestTrait) fn()\n             \"#]],\n         );\n \n@@ -450,7 +450,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-            ct SPECIAL_CONST (dep::test_mod::TestTrait)\n+            ct SPECIAL_CONST (use dep::test_mod::TestTrait)\n         \"#]],\n         );\n \n@@ -497,7 +497,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-                me random_method() (dep::test_mod::TestTrait) fn(&self)\n+                me random_method() (use dep::test_mod::TestTrait) fn(&self)\n             \"#]],\n         );\n \n@@ -667,7 +667,7 @@ fn main() {\n }\n         \"#,\n             expect![[r#\"\n-                me random_method() (dep::test_mod::TestTrait) fn(&self) DEPRECATED\n+                me random_method() (use dep::test_mod::TestTrait) fn(&self) DEPRECATED\n             \"#]],\n         );\n \n@@ -697,8 +697,8 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                ct SPECIAL_CONST (dep::test_mod::TestTrait) DEPRECATED\n-                fn weird_function() (dep::test_mod::TestTrait) fn() DEPRECATED\n+                ct SPECIAL_CONST (use dep::test_mod::TestTrait) DEPRECATED\n+                fn weird_function() (use dep::test_mod::TestTrait) fn() DEPRECATED\n             \"#]],\n         );\n     }\n@@ -859,7 +859,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-        ct TEST_ASSOC (foo::Item)\n+        ct TEST_ASSOC (use foo::Item)\n         \"#]],\n         );\n \n@@ -903,7 +903,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-        ct TEST_ASSOC (foo::bar::Item)\n+        ct TEST_ASSOC (use foo::bar::Item)\n     \"#]],\n         );\n \n@@ -1015,7 +1015,7 @@ fn main() {\n }\"#,\n             expect![[r#\"\n         ct foo::TEST_CONST\n-        fn test_function() (foo::test_function) fn() -> i32\n+        fn test_function() (use foo::test_function) fn() -> i32\n     \"#]],\n         );\n \n@@ -1072,7 +1072,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                fn some_fn() (m::some_fn) fn() -> i32\n+                fn some_fn() (use m::some_fn) fn() -> i32\n             \"#]],\n         );\n     }"}, {"sha": "4875ed65a0169f77676cde990175affc25d6971a", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -333,7 +333,7 @@ trait Trait { fn m(); }\n fn foo() { let _ = Trait::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() (Trait) fn()\n+                fn m() (as Trait) fn()\n             \"#]],\n         );\n     }\n@@ -350,7 +350,7 @@ impl Trait for S {}\n fn foo() { let _ = S::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() (Trait) fn()\n+                fn m() (as Trait) fn()\n             \"#]],\n         );\n     }\n@@ -367,7 +367,7 @@ impl Trait for S {}\n fn foo() { let _ = <S as Trait>::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() (Trait) fn()\n+                fn m() (as Trait) fn()\n             \"#]],\n         );\n     }\n@@ -393,14 +393,14 @@ trait Sub: Super {\n fn foo<T: Sub>() { T::$0 }\n \"#,\n             expect![[r#\"\n-                ta SubTy (Sub)        type SubTy;\n-                ta Ty (Super)         type Ty;\n-                ct C2 (Sub)           const C2: ();\n-                fn subfunc() (Sub)    fn()\n-                me submethod(\u2026) (Sub) fn(&self)\n-                ct CONST (Super)      const CONST: u8;\n-                fn func() (Super)     fn()\n-                me method(\u2026) (Super)  fn(&self)\n+                ta SubTy (as Sub)        type SubTy;\n+                ta Ty (as Super)         type Ty;\n+                ct C2 (as Sub)           const C2: ();\n+                fn subfunc() (as Sub)    fn()\n+                me submethod(\u2026) (as Sub) fn(&self)\n+                ct CONST (as Super)      const CONST: u8;\n+                fn func() (as Super)     fn()\n+                me method(\u2026) (as Super)  fn(&self)\n             \"#]],\n         );\n     }\n@@ -433,14 +433,14 @@ impl<T> Sub for Wrap<T> {\n }\n \"#,\n             expect![[r#\"\n-                ta SubTy (Sub)        type SubTy;\n-                ta Ty (Super)         type Ty;\n-                ct CONST (Super)      const CONST: u8 = 0;\n-                fn func() (Super)     fn()\n-                me method(\u2026) (Super)  fn(&self)\n-                ct C2 (Sub)           const C2: () = ();\n-                fn subfunc() (Sub)    fn()\n-                me submethod(\u2026) (Sub) fn(&self)\n+                ta SubTy (as Sub)        type SubTy;\n+                ta Ty (as Super)         type Ty;\n+                ct CONST (as Super)      const CONST: u8 = 0;\n+                fn func() (as Super)     fn()\n+                me method(\u2026) (as Super)  fn(&self)\n+                ct C2 (as Sub)           const C2: () = ();\n+                fn subfunc() (as Sub)    fn()\n+                me submethod(\u2026) (as Sub) fn(&self)\n             \"#]],\n         );\n     }"}, {"sha": "29bc3d3727fb02cb8d1d74a36971b24e48189c7c", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -434,10 +434,10 @@ impl Builder {\n             if original_path_label.ends_with(&label) {\n                 label = original_path_label;\n             } else {\n-                format_to!(label, \" ({})\", original_path)\n+                format_to!(label, \" (use {})\", original_path)\n             }\n         } else if let Some(trait_name) = self.trait_name {\n-            format_to!(label, \" ({})\", trait_name)\n+            format_to!(label, \" (as {})\", trait_name)\n         }\n \n         let text_edit = match self.text_edit {"}, {"sha": "6585b1cc8ae02dfdf13bd2875d89e2c6f72ff761", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -1379,7 +1379,7 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 sn not [snippet]\n-                me not() (ops::Not) [type_could_unify]\n+                me not() (use ops::Not) [type_could_unify]\n                 sn if []\n                 sn while []\n                 sn ref []"}, {"sha": "1b76c5bd399fbec038f84e8109a896f75e28a417", "filename": "crates/ide_completion/src/tests/type_pos.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef077af70921e9691e45352cf90c43e370c748f/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs?ref=1ef077af70921e9691e45352cf90c43e370c748f", "patch": "@@ -140,7 +140,7 @@ trait Trait2 {\n fn foo<'lt, T: Trait2<$0>, const CONST_PARAM: usize>(_: T) {}\n \"#,\n         expect![[r#\"\n-            ta Foo =  (Trait2) type Foo;\n+            ta Foo =  (as Trait2) type Foo;\n             tp T\n             cp CONST_PARAM\n             tt Trait\n@@ -151,7 +151,7 @@ fn foo<'lt, T: Trait2<$0>, const CONST_PARAM: usize>(_: T) {}\n             md module\n             st Unit\n             ct CONST\n-            ma makro!(\u2026)       macro_rules! makro\n+            ma makro!(\u2026)          macro_rules! makro\n             bt u32\n         \"#]],\n     );"}]}