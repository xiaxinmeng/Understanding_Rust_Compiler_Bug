{"sha": "91655428f905b35c4a14d38562113eb768252fdf", "node_id": "C_kwDOAAsO6NoAKDkxNjU1NDI4ZjkwNWIzNWM0YTE0ZDM4NTYyMTEzZWI3NjgyNTJmZGY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T10:04:40Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T10:04:49Z"}, "message": "Ensure Cranelift errors are reported deterministically\n\nThis may also have been the root cause of #1310.", "tree": {"sha": "0ae979e9d31fbc56203fe7cb6f6ac60a9e7547af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ae979e9d31fbc56203fe7cb6f6ac60a9e7547af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91655428f905b35c4a14d38562113eb768252fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91655428f905b35c4a14d38562113eb768252fdf", "html_url": "https://github.com/rust-lang/rust/commit/91655428f905b35c4a14d38562113eb768252fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91655428f905b35c4a14d38562113eb768252fdf/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec92c3e5dca69cf0ed02d11fb7a3bfae9f41c0ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec92c3e5dca69cf0ed02d11fb7a3bfae9f41c0ca", "html_url": "https://github.com/rust-lang/rust/commit/ec92c3e5dca69cf0ed02d11fb7a3bfae9f41c0ca"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d4494a9e45de49981df3dcf679809e225132d054", "filename": "src/driver/aot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91655428f905b35c4a14d38562113eb768252fdf/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91655428f905b35c4a14d38562113eb768252fdf/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=91655428f905b35c4a14d38562113eb768252fdf", "patch": "@@ -108,6 +108,8 @@ impl OngoingCodegen {\n \n         self.concurrency_limiter.finished();\n \n+        sess.abort_if_errors();\n+\n         (\n             CodegenResults {\n                 modules,\n@@ -411,8 +413,6 @@ pub(crate) fn run_aot(\n             .collect::<Vec<_>>()\n     });\n \n-    tcx.sess.abort_if_errors();\n-\n     let mut allocator_module = make_module(tcx.sess, &backend_config, \"allocator_shim\".to_string());\n     let mut allocator_unwind_context = UnwindContext::new(allocator_module.isa(), true);\n     let created_alloc_shim ="}]}