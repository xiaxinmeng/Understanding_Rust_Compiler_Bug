{"sha": "3b383a4c220ac0a0f10d1ed72dbdffd486444615", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMzgzYTRjMjIwYWMwYTBmMTBkMWVkNzJkYmRmZmQ0ODY0NDQ2MTU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-11T22:03:25Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-11T22:03:25Z"}, "message": "Merge branch 'single-import' of https://github.com/mattyhall/rustfmt into mattyhall-single-import\n\nRebased:\n\tsrc/imports.rs", "tree": {"sha": "4f95074aa760e39b2c94f01e7f626af424cc6bf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f95074aa760e39b2c94f01e7f626af424cc6bf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b383a4c220ac0a0f10d1ed72dbdffd486444615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b383a4c220ac0a0f10d1ed72dbdffd486444615", "html_url": "https://github.com/rust-lang/rust/commit/3b383a4c220ac0a0f10d1ed72dbdffd486444615", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b383a4c220ac0a0f10d1ed72dbdffd486444615/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2a5d94e3f8b2b036d788ce06115a6393ad57612", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a5d94e3f8b2b036d788ce06115a6393ad57612", "html_url": "https://github.com/rust-lang/rust/commit/e2a5d94e3f8b2b036d788ce06115a6393ad57612"}, {"sha": "59352172b3539c1ecd3a03919fc7e06a7c06af4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/59352172b3539c1ecd3a03919fc7e06a7c06af4a", "html_url": "https://github.com/rust-lang/rust/commit/59352172b3539c1ecd3a03919fc7e06a7c06af4a"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "9c0b81cc902043e3f82f3b9d3c1b90eba289df4d", "filename": "src/imports.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3b383a4c220ac0a0f10d1ed72dbdffd486444615/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b383a4c220ac0a0f10d1ed72dbdffd486444615/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=3b383a4c220ac0a0f10d1ed72dbdffd486444615", "patch": "@@ -15,10 +15,29 @@ use syntax::ast;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n-// TODO change import lists with one item to a single import\n-//      remove empty lists (if they're even possible)\n+\n+// TODO remove empty lists (if they're even possible)\n // TODO (some day) remove unused imports, expand globs, compress many single imports into a list import\n \n+fn rewrite_single_use_list(path_str: String, vpi: ast::PathListItem, vis: &str) -> String {\n+    if let ast::PathListItem_::PathListIdent{ name, .. } = vpi.node {\n+        let name_str = token::get_ident(name).to_string();\n+        if path_str.len() == 0 {\n+            format!(\"{}use {};\", vis, name_str)\n+        } else {\n+            format!(\"{}use {}::{};\", vis, path_str, name_str)\n+        }\n+    } else {\n+        if path_str.len() != 0 {\n+            format!(\"{}use {};\", vis, path_str)\n+        } else {\n+            // This catches the import: use {self}, which is a compiler error, so we just\n+            // leave it alone.\n+            format!(\"{}use {{self}};\", vis)\n+        }\n+    }\n+}\n+\n impl<'a> FmtVisitor<'a> {\n     // Basically just pretty prints a multi-item import.\n     pub fn rewrite_use_list(&mut self,\n@@ -35,10 +54,15 @@ impl<'a> FmtVisitor<'a> {\n             _ => \"\"\n         };\n \n+        if path_list.len() == 1 {\n+            return rewrite_single_use_list(path_str, path_list[0], vis);\n+        }\n+\n         // 2 = ::\n         let path_separation_w = if path_str.len() > 0 { 2 } else { 0 };\n         // 5 = \"use \" + {\n         let indent = path_str.len() + 5 + path_separation_w + vis.len();\n+\n         // 2 = } + ;\n         let used_width = indent + 2;\n "}]}