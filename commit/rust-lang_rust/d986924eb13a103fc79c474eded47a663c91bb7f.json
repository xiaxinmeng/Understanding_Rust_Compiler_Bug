{"sha": "d986924eb13a103fc79c474eded47a663c91bb7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ODY5MjRlYjEzYTEwM2ZjNzljNDc0ZWRlZDQ3YTY2M2M5MWJiN2Y=", "commit": {"author": {"name": "William Woodruff", "email": "william@trailofbits.com", "date": "2020-12-11T15:09:40Z"}, "committer": {"name": "William Woodruff", "email": "william@trailofbits.com", "date": "2020-12-11T15:09:40Z"}, "message": "doc: apply suggestions", "tree": {"sha": "c700d0c817b2e197bc109683ecef7a2a7a2bfc6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c700d0c817b2e197bc109683ecef7a2a7a2bfc6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d986924eb13a103fc79c474eded47a663c91bb7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/eIgxqeZJjOKNfzocPcKOXndztMFAl/Ti7sACgkQcPcKOXnd\nztPI3A//Q6JkpObT0c/9vVdvG/U0EO6l6ztBPChCzJdOgO9rqZwxqKQJgVIeJllG\nDGJBXwqssu+d1hypvNlfgEEtH/Ulwd33/zB9LrJDixwV2pKTHXZCV1xPOhyM5TdJ\nPdKcC2TL1eVmdNwIJoIEZ6WuzNVxwb/pQghoPDyZM+/GGo8f0GJcqRQjv7MVTUR2\ngsKy6Tx8asTkHOAknDFk0tghj0L0N+/zK2OrFZkRqtGTiA/YfI5oQC7VzIIvv1IV\nb8baVauvsbC7YpMeJmlMZWdxVSHLhyp3DZTT5pzBOxQ9FXc+W/yIX7YlLU1SpD9n\nT1c4fMwbkb0I2QczG6GOq6jjmSF2GOp5uG304o2FRtJtyb8Ir9uAcv5GrB3nuAaM\n+VyKZ9YU9lmTR4gwRLVpyB/mpVhPF+vv9Q8lzjFlLj73v1n+VYIjqJoLM0x118s9\nM9mTEhjkDVk1qvleIJFPWbDqsOraEm1NwJOOBhWOw1OikvW41MzVXnidcJUDEyaK\njgfED+h3bNcNqT7+BK3MQA0VKVU4q5pvPJMbff7A4HvLSYuGXcbg9UZrwEG1XXH9\n5LsB/Ekxi2h7E+uMpLvSbkHHsJgXK9v6AyHOudzgKcrTNIPVd+Iuocpo2wyMxQO3\nASYaSy9zuLUG0jyPYvt1nmwNetJ4M92DH2CV3OELXpeHUmcACsI=\n=G1LZ\n-----END PGP SIGNATURE-----", "payload": "tree c700d0c817b2e197bc109683ecef7a2a7a2bfc6d\nparent 9cf2516251c5379d3e8429342e8a392df81b9aaa\nauthor William Woodruff <william@trailofbits.com> 1607699380 -0500\ncommitter William Woodruff <william@trailofbits.com> 1607699380 -0500\n\ndoc: apply suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d986924eb13a103fc79c474eded47a663c91bb7f", "html_url": "https://github.com/rust-lang/rust/commit/d986924eb13a103fc79c474eded47a663c91bb7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d986924eb13a103fc79c474eded47a663c91bb7f/comments", "author": {"login": "woodruffw", "id": 3059210, "node_id": "MDQ6VXNlcjMwNTkyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3059210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodruffw", "html_url": "https://github.com/woodruffw", "followers_url": "https://api.github.com/users/woodruffw/followers", "following_url": "https://api.github.com/users/woodruffw/following{/other_user}", "gists_url": "https://api.github.com/users/woodruffw/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodruffw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodruffw/subscriptions", "organizations_url": "https://api.github.com/users/woodruffw/orgs", "repos_url": "https://api.github.com/users/woodruffw/repos", "events_url": "https://api.github.com/users/woodruffw/events{/privacy}", "received_events_url": "https://api.github.com/users/woodruffw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "woodruffw", "id": 3059210, "node_id": "MDQ6VXNlcjMwNTkyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3059210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodruffw", "html_url": "https://github.com/woodruffw", "followers_url": "https://api.github.com/users/woodruffw/followers", "following_url": "https://api.github.com/users/woodruffw/following{/other_user}", "gists_url": "https://api.github.com/users/woodruffw/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodruffw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodruffw/subscriptions", "organizations_url": "https://api.github.com/users/woodruffw/orgs", "repos_url": "https://api.github.com/users/woodruffw/repos", "events_url": "https://api.github.com/users/woodruffw/events{/privacy}", "received_events_url": "https://api.github.com/users/woodruffw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cf2516251c5379d3e8429342e8a392df81b9aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf2516251c5379d3e8429342e8a392df81b9aaa", "html_url": "https://github.com/rust-lang/rust/commit/9cf2516251c5379d3e8429342e8a392df81b9aaa"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "7d4eff6185dbe440aef85fa35315461f5ae662ae", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d986924eb13a103fc79c474eded47a663c91bb7f/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d986924eb13a103fc79c474eded47a663c91bb7f/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=d986924eb13a103fc79c474eded47a663c91bb7f", "patch": "@@ -29,8 +29,9 @@\n /// to the same boxed integer value, not five references pointing to independently\n /// boxed integers.\n ///\n-/// Also, note that `[T; 0]` is a valid initializer. This will initialize (or call)\n-/// `T` but not populate the vector with it, so be mindful of side effects.\n+/// Also, note that `vec![expr; 0]` is allowed, and produces an empty vector.\n+/// This will still evaluate `expr`, however, and immediately drop the resulting value, so\n+/// be mindful of side effects.\n ///\n /// [`Vec`]: crate::vec::Vec\n #[cfg(not(test))]"}, {"sha": "7aca5451ebc2084d37cd0f6c8cfee39cddc7b9aa", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d986924eb13a103fc79c474eded47a663c91bb7f/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d986924eb13a103fc79c474eded47a663c91bb7f/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=d986924eb13a103fc79c474eded47a663c91bb7f", "patch": "@@ -489,8 +489,9 @@ mod prim_pointer {}\n /// * A repeat expression `[x; N]`, which produces an array with `N` copies of `x`.\n ///   The type of `x` must be [`Copy`].\n ///\n-/// Note that `[x; 0]` is a valid repeat expression. This will produce an empty array\n-/// but will also initialize (or call) `x`, which may produce side effects.\n+/// Note that `[expr; 0]` is allowed, and produces an empty array.\n+/// This will still evaluate `expr`, however, and immediately drop the resulting value, so\n+/// be mindful of side effects.\n ///\n /// Arrays of *any* size implement the following traits if the element type allows it:\n ///"}]}