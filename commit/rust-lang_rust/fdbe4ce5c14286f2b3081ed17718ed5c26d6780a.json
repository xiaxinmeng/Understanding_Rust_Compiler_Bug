{"sha": "fdbe4ce5c14286f2b3081ed17718ed5c26d6780a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYmU0Y2U1YzE0Mjg2ZjJiMzA4MWVkMTc3MThlZDVjMjZkNjc4MGE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-09-24T06:20:49Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-09T21:44:24Z"}, "message": "Add docstring", "tree": {"sha": "96c89ba6da0800f050fc04dd4eff38046370cbcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96c89ba6da0800f050fc04dd4eff38046370cbcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a", "html_url": "https://github.com/rust-lang/rust/commit/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e23cc49601776e97aed012fdbe268206df11c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e23cc49601776e97aed012fdbe268206df11c3e", "html_url": "https://github.com/rust-lang/rust/commit/5e23cc49601776e97aed012fdbe268206df11c3e"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "219517b4ab2e2d013afbc6b1292d63478b909956", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe4ce5c14286f2b3081ed17718ed5c26d6780a/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=fdbe4ce5c14286f2b3081ed17718ed5c26d6780a", "patch": "@@ -385,6 +385,8 @@ struct DiagnosticMetadata<'ast> {\n     /// Used to detect possible `if let` written without `let` and to provide structured suggestion.\n     in_if_condition: Option<&'ast Expr>,\n \n+    /// If we are currently in a trait object definition. Used to point at the bounds when\n+    /// encountering a struct or enum.\n     current_trait_object: Option<&'ast [ast::GenericBound]>,\n \n     /// Given `where <T as Bar>::Baz: String`, suggest `where T: Bar<Baz = String>`."}]}