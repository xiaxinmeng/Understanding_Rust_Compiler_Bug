{"sha": "65cdc21f06fba564d161db9d49f07dfe867f741e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1Y2RjMjFmMDZmYmE1NjRkMTYxZGI5ZDQ5ZjA3ZGZlODY3Zjc0MWU=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-11-14T20:46:39Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-11-14T20:46:39Z"}, "message": "Set the default `BreakTy` to `!`", "tree": {"sha": "b7f50717a2a855780b6d9df892195bbfcb6b3c8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f50717a2a855780b6d9df892195bbfcb6b3c8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65cdc21f06fba564d161db9d49f07dfe867f741e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65cdc21f06fba564d161db9d49f07dfe867f741e", "html_url": "https://github.com/rust-lang/rust/commit/65cdc21f06fba564d161db9d49f07dfe867f741e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65cdc21f06fba564d161db9d49f07dfe867f741e/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df6e87cc850a2d3a7510f1e89335dc73d34abc26", "url": "https://api.github.com/repos/rust-lang/rust/commits/df6e87cc850a2d3a7510f1e89335dc73d34abc26", "html_url": "https://github.com/rust-lang/rust/commit/df6e87cc850a2d3a7510f1e89335dc73d34abc26"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "1607b53d10cbe84d152e750e5dd10d01a0da49e3", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -1135,6 +1135,8 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n         };\n \n         impl<'a, 'tcx> ty::fold::TypeVisitor<'tcx> for ProhibitOpaqueTypes<'a, 'tcx> {\n+            type BreakTy = ();\n+\n             fn visit_ty(&mut self, ty: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n                 match ty.kind() {\n                     ty::Opaque(..) => {"}, {"sha": "605bdbcc0d2fcc33091556647e267ee7725effff", "filename": "compiler/rustc_middle/src/ty/fold.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -148,6 +148,7 @@ pub trait TypeFoldable<'tcx>: fmt::Debug + Clone {\n         pub struct Visitor<F>(F);\n \n         impl<'tcx, F: FnMut(Ty<'tcx>) -> ControlFlow<()>> TypeVisitor<'tcx> for Visitor<F> {\n+            type BreakTy = ();\n             fn visit_ty(&mut self, ty: Ty<'tcx>) -> ControlFlow<()> {\n                 self.0(ty)\n             }\n@@ -195,7 +196,7 @@ pub trait TypeFolder<'tcx>: Sized {\n }\n \n pub trait TypeVisitor<'tcx>: Sized {\n-    type BreakTy = ();\n+    type BreakTy = !;\n \n     fn visit_binder<T: TypeFoldable<'tcx>>(&mut self, t: &Binder<T>) -> ControlFlow<Self::BreakTy> {\n         t.super_visit_with(self)\n@@ -331,6 +332,8 @@ impl<'tcx> TyCtxt<'tcx> {\n         where\n             F: FnMut(ty::Region<'tcx>) -> bool,\n         {\n+            type BreakTy = ();\n+\n             fn visit_binder<T: TypeFoldable<'tcx>>(\n                 &mut self,\n                 t: &Binder<T>,"}, {"sha": "e49b1c9f64d44ef3f06480a59f5149fcff71af81", "filename": "compiler/rustc_mir/src/interpret/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Futil.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -18,6 +18,8 @@ where\n     };\n \n     impl<'tcx> TypeVisitor<'tcx> for UsedParamsNeedSubstVisitor<'tcx> {\n+        type BreakTy = ();\n+\n         fn visit_const(&mut self, c: &'tcx ty::Const<'tcx>) -> ControlFlow<Self::BreakTy> {\n             if !c.needs_subst() {\n                 return ControlFlow::CONTINUE;"}, {"sha": "0ce1c5a04893bcfa46156f0cfbf93456ab86d77a", "filename": "compiler/rustc_mir/src/monomorphize/polymorphize.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -318,6 +318,8 @@ struct HasUsedGenericParams<'a> {\n }\n \n impl<'a, 'tcx> TypeVisitor<'tcx> for HasUsedGenericParams<'a> {\n+    type BreakTy = ();\n+\n     fn visit_const(&mut self, c: &'tcx Const<'tcx>) -> ControlFlow<Self::BreakTy> {\n         debug!(\"visit_const: c={:?}\", c);\n         if !c.has_param_types_or_consts() {"}, {"sha": "97253da051c41f3c52ac1cec702e2397a983f38b", "filename": "compiler/rustc_trait_selection/src/traits/object_safety.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -771,6 +771,8 @@ fn contains_illegal_self_type_reference<'tcx, T: TypeFoldable<'tcx>>(\n     }\n \n     impl<'tcx> TypeVisitor<'tcx> for IllegalSelfTypeVisitor<'tcx> {\n+        type BreakTy = ();\n+\n         fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n             match t.kind() {\n                 ty::Param(_) => {"}, {"sha": "7d58f2cf34c0ddf677064bef1c2f7d15de8753ab", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -800,6 +800,8 @@ fn check_where_clauses<'tcx, 'fcx>(\n                 params: FxHashSet<u32>,\n             }\n             impl<'tcx> ty::fold::TypeVisitor<'tcx> for CountParams {\n+                type BreakTy = ();\n+\n                 fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n                     if let ty::Param(param) = t.kind() {\n                         self.params.insert(param.index);"}, {"sha": "602facbe062ac31ccfa4fa27d80def21317dd39a", "filename": "src/tools/clippy/clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65cdc21f06fba564d161db9d49f07dfe867f741e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cdc21f06fba564d161db9d49f07dfe867f741e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs?ref=65cdc21f06fba564d161db9d49f07dfe867f741e", "patch": "@@ -563,6 +563,8 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n struct ContainsRegion;\n \n impl TypeVisitor<'_> for ContainsRegion {\n+    type BreakTy = ();\n+\n     fn visit_region(&mut self, _: ty::Region<'_>) -> ControlFlow<Self::BreakTy> {\n         ControlFlow::BREAK\n     }"}]}