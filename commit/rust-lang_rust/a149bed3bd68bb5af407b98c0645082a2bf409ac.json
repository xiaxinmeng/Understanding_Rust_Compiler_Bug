{"sha": "a149bed3bd68bb5af407b98c0645082a2bf409ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDliZWQzYmQ2OGJiNWFmNDA3Yjk4YzA2NDUwODJhMmJmNDA5YWM=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-09-09T12:31:19Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-09-11T15:13:30Z"}, "message": "Ensure that crates are linked with compatible panic-in-drop settings", "tree": {"sha": "d3493de082157854d634c97e3b310cfd7815d3a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3493de082157854d634c97e3b310cfd7815d3a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a149bed3bd68bb5af407b98c0645082a2bf409ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a149bed3bd68bb5af407b98c0645082a2bf409ac", "html_url": "https://github.com/rust-lang/rust/commit/a149bed3bd68bb5af407b98c0645082a2bf409ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a149bed3bd68bb5af407b98c0645082a2bf409ac/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007bd17a68a502aef3df4799c7fa7c07985d7747", "url": "https://api.github.com/repos/rust-lang/rust/commits/007bd17a68a502aef3df4799c7fa7c07985d7747", "html_url": "https://github.com/rust-lang/rust/commit/007bd17a68a502aef3df4799c7fa7c07985d7747"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "b8d22560618162bdbdf6a88b047b96b88b1cdc9a", "filename": "compiler/rustc_metadata/src/dependency_format.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs?ref=a149bed3bd68bb5af407b98c0645082a2bf409ac", "patch": "@@ -400,21 +400,35 @@ fn verify_ok(tcx: TyCtxt<'_>, list: &[Linkage]) {\n                 continue;\n             }\n             let cnum = CrateNum::new(i + 1);\n-            let found_strategy = tcx.panic_strategy(cnum);\n-            let is_compiler_builtins = tcx.is_compiler_builtins(cnum);\n-            if is_compiler_builtins || desired_strategy == found_strategy {\n+            if tcx.is_compiler_builtins(cnum) {\n                 continue;\n             }\n \n-            sess.err(&format!(\n-                \"the crate `{}` is compiled with the \\\n+            let found_strategy = tcx.panic_strategy(cnum);\n+            if desired_strategy != found_strategy {\n+                sess.err(&format!(\n+                    \"the crate `{}` is compiled with the \\\n                                panic strategy `{}` which is \\\n                                incompatible with this crate's \\\n                                strategy of `{}`\",\n-                tcx.crate_name(cnum),\n-                found_strategy.desc(),\n-                desired_strategy.desc()\n-            ));\n+                    tcx.crate_name(cnum),\n+                    found_strategy.desc(),\n+                    desired_strategy.desc()\n+                ));\n+            }\n+\n+            let found_drop_strategy = tcx.panic_in_drop_strategy(cnum);\n+            if tcx.sess.opts.debugging_opts.panic_in_drop != found_drop_strategy {\n+                sess.err(&format!(\n+                    \"the crate `{}` is compiled with the \\\n+                               panic-in-drop strategy `{}` which is \\\n+                               incompatible with this crate's \\\n+                               strategy of `{}`\",\n+                    tcx.crate_name(cnum),\n+                    found_drop_strategy.desc(),\n+                    tcx.sess.opts.debugging_opts.panic_in_drop.desc()\n+                ));\n+            }\n         }\n     }\n }"}, {"sha": "2d707d619c9368030e660ab888c34a29a92e776d", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=a149bed3bd68bb5af407b98c0645082a2bf409ac", "patch": "@@ -160,6 +160,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     has_panic_handler => { cdata.root.has_panic_handler }\n     is_profiler_runtime => { cdata.root.profiler_runtime }\n     panic_strategy => { cdata.root.panic_strategy }\n+    panic_in_drop_strategy => { cdata.root.panic_in_drop_strategy }\n     extern_crate => {\n         let r = *cdata.extern_crate.lock();\n         r.map(|c| &*tcx.arena.alloc(c))"}, {"sha": "4944bfe57fad9fb9134aeb81a06415f7b19935a8", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=a149bed3bd68bb5af407b98c0645082a2bf409ac", "patch": "@@ -691,6 +691,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             hash: tcx.crate_hash(LOCAL_CRATE),\n             stable_crate_id: tcx.def_path_hash(LOCAL_CRATE.as_def_id()).stable_crate_id(),\n             panic_strategy: tcx.sess.panic_strategy(),\n+            panic_in_drop_strategy: tcx.sess.opts.debugging_opts.panic_in_drop,\n             edition: tcx.sess.edition(),\n             has_global_allocator: tcx.has_global_allocator(LOCAL_CRATE),\n             has_panic_handler: tcx.has_panic_handler(LOCAL_CRATE),"}, {"sha": "3024552aec4f2c76aea0d0d6995d8dbbc127a283", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=a149bed3bd68bb5af407b98c0645082a2bf409ac", "patch": "@@ -204,6 +204,7 @@ crate struct CrateRoot<'tcx> {\n     hash: Svh,\n     stable_crate_id: StableCrateId,\n     panic_strategy: PanicStrategy,\n+    panic_in_drop_strategy: PanicStrategy,\n     edition: Edition,\n     has_global_allocator: bool,\n     has_panic_handler: bool,"}, {"sha": "ed64f50a6f02f1ea05319c7647e49c1aed4b78b0", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a149bed3bd68bb5af407b98c0645082a2bf409ac/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=a149bed3bd68bb5af407b98c0645082a2bf409ac", "patch": "@@ -1159,6 +1159,10 @@ rustc_queries! {\n         fatal_cycle\n         desc { \"query a crate's configured panic strategy\" }\n     }\n+    query panic_in_drop_strategy(_: CrateNum) -> PanicStrategy {\n+        fatal_cycle\n+        desc { \"query a crate's configured panic-in-drop strategy\" }\n+    }\n     query is_no_builtins(_: CrateNum) -> bool {\n         fatal_cycle\n         desc { \"test whether a crate has `#![no_builtins]`\" }"}]}