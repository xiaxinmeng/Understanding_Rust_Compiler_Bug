{"sha": "f53c2179ba2ae35bd241a28027fb703aec89139b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1M2MyMTc5YmEyYWUzNWJkMjQxYTI4MDI3ZmI3MDNhZWM4OTEzOWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-01T17:49:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-01T17:49:07Z"}, "message": "review comments", "tree": {"sha": "afcd9f61049afe0e20cfcbe1382a07ef52aad8d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afcd9f61049afe0e20cfcbe1382a07ef52aad8d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f53c2179ba2ae35bd241a28027fb703aec89139b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f53c2179ba2ae35bd241a28027fb703aec89139b", "html_url": "https://github.com/rust-lang/rust/commit/f53c2179ba2ae35bd241a28027fb703aec89139b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f53c2179ba2ae35bd241a28027fb703aec89139b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aae2b245e4c3958ca37d6eaa58b89d955d0b66e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae2b245e4c3958ca37d6eaa58b89d955d0b66e7", "html_url": "https://github.com/rust-lang/rust/commit/aae2b245e4c3958ca37d6eaa58b89d955d0b66e7"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "7427ae9ce8de36efaf5ebed3bbae7e66a2efc215", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f53c2179ba2ae35bd241a28027fb703aec89139b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c2179ba2ae35bd241a28027fb703aec89139b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=f53c2179ba2ae35bd241a28027fb703aec89139b", "patch": "@@ -117,14 +117,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 &arms[0].body,\n                 &mut coercion,\n             ) {\n-                    tcx.types.err\n+                tcx.types.err\n             } else {\n                 // Only call this if this is not an `if` expr with an expected type and no `else`\n                 // clause to avoid duplicated type errors. (#60254)\n-                let arm_ty = self.check_expr_with_expectation(&arm.body, expected);\n-                all_arms_diverge &= self.diverges.get();\n-                arm_ty\n+                self.check_expr_with_expectation(&arm.body, expected)\n             };\n+            all_arms_diverge &= self.diverges.get();\n             if source_if {\n                 let then_expr = &arms[0].body;\n                 match (i, if_no_else) {\n@@ -188,6 +187,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     }\n \n     /// Handle the fallback arm of a desugared if(-let) like a missing else.\n+    ///\n+    /// Returns `true` if there was an error forcing the coercion to the `()` type.\n     fn if_fallback_coercion(\n         &self,\n         span: Span,"}]}