{"sha": "10caca24f0052a033cac648884d2393125bc24a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwY2FjYTI0ZjAwNTJhMDMzY2FjNjQ4ODg0ZDIzOTMxMjViYzI0YTM=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2016-03-31T09:15:36Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2016-03-31T09:15:36Z"}, "message": "Improve E0277 error message in a generic context\n\nThis now mentions that you can restrict type parameters to be able to\ncall functions of traits.", "tree": {"sha": "b1e981887ae6618c642929690e36cb678072348d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1e981887ae6618c642929690e36cb678072348d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10caca24f0052a033cac648884d2393125bc24a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10caca24f0052a033cac648884d2393125bc24a3", "html_url": "https://github.com/rust-lang/rust/commit/10caca24f0052a033cac648884d2393125bc24a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10caca24f0052a033cac648884d2393125bc24a3/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a3849f228833f9dc280120126d16aef3a292ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a3849f228833f9dc280120126d16aef3a292ba", "html_url": "https://github.com/rust-lang/rust/commit/30a3849f228833f9dc280120126d16aef3a292ba"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "6f06efd0f9f2659a272b1b4b0eb14037e3202fe4", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/10caca24f0052a033cac648884d2393125bc24a3/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10caca24f0052a033cac648884d2393125bc24a3/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=10caca24f0052a033cac648884d2393125bc24a3", "patch": "@@ -1033,6 +1033,47 @@ fn main() {\n     some_func(5i32); // ok!\n }\n ```\n+\n+Or in a generic context, an erroneous code example would look like:\n+```compile_fail\n+fn some_func<T>(foo: T) {\n+    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n+                           //        implemented for the type `T`\n+}\n+\n+fn main() {\n+    // We now call the method with the i32 type,\n+    // which *does* implement the Debug trait.\n+    some_func(5i32);\n+}\n+```\n+\n+Note that the error here is in the definition of the generic function: Although\n+we only call it with a parameter that does implement `Debug`, the compiler\n+still rejects the function: It must work with all possible input types. In\n+order to make this example compile, we need to restrict the generic type we're\n+accepting:\n+```\n+use std::fmt;\n+\n+// Restrict the input type to types that implement Debug.\n+fn some_func<T: fmt::Debug>(foo: T) {\n+    println!(\"{:?}\", foo);\n+}\n+\n+fn main() {\n+    // Calling the method is still fine, as i32 implements Debug.\n+    some_func(5i32);\n+\n+    // This would fail to compile now:\n+    // struct WithoutDebug;\n+    // some_func(WithoutDebug);\n+}\n+\n+Rust only looks at the signature of the called function, as such it must\n+already specify all requirements that will be used for every type parameter.\n+```\n+\n \"##,\n \n E0281: r##\""}]}