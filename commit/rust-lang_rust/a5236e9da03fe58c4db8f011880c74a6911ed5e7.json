{"sha": "a5236e9da03fe58c4db8f011880c74a6911ed5e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MjM2ZTlkYTAzZmU1OGM0ZGI4ZjAxMTg4MGM3NGE2OTExZWQ1ZTc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-05T21:39:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-06T16:42:46Z"}, "message": "add some comments", "tree": {"sha": "7032c082dbcc107bb542ab4da673505b5ce28b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7032c082dbcc107bb542ab4da673505b5ce28b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5236e9da03fe58c4db8f011880c74a6911ed5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5236e9da03fe58c4db8f011880c74a6911ed5e7", "html_url": "https://github.com/rust-lang/rust/commit/a5236e9da03fe58c4db8f011880c74a6911ed5e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5236e9da03fe58c4db8f011880c74a6911ed5e7/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068142a2e6d8a72e52091ccebd3368ffaf267643", "url": "https://api.github.com/repos/rust-lang/rust/commits/068142a2e6d8a72e52091ccebd3368ffaf267643", "html_url": "https://github.com/rust-lang/rust/commit/068142a2e6d8a72e52091ccebd3368ffaf267643"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "95e09400016395e34fccef4ad3305e64b033c81b", "filename": "src/librustc_incremental/persist/README.md", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a5236e9da03fe58c4db8f011880c74a6911ed5e7/src%2Flibrustc_incremental%2Fpersist%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/a5236e9da03fe58c4db8f011880c74a6911ed5e7/src%2Flibrustc_incremental%2Fpersist%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2FREADME.md?ref=a5236e9da03fe58c4db8f011880c74a6911ed5e7", "patch": "@@ -0,0 +1,13 @@\n+This is the code to load/save the dependency graph. Loading is assumed\n+to run early in compilation, and saving at the very end. When loading,\n+the basic idea is that we will load up the dependency graph from the\n+previous compilation and compare the hashes of our HIR nodes to the\n+hashes of the HIR nodes that existed at the time. For each node whose\n+hash has changed, or which no longer exists in the new HIR, we can\n+remove that node from the old graph along with any nodes that depend\n+on it. Then we add what's left to the new graph (if any such nodes or\n+edges already exist, then there would be no effect, but since we do\n+this first thing, they do not).\n+\n+\n+"}, {"sha": "69251270994470ba8bed4309487e8d6748086843", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5236e9da03fe58c4db8f011880c74a6911ed5e7/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5236e9da03fe58c4db8f011880c74a6911ed5e7/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=a5236e9da03fe58c4db8f011880c74a6911ed5e7", "patch": "@@ -10,7 +10,6 @@\n \n //! Code to save/load the dep-graph from files.\n \n-\n use calculate_svh::SvhCalculate;\n use rbml::{self, Doc};\n use rbml::reader::{self, DecodeResult, Decoder};\n@@ -32,6 +31,12 @@ type DirtyNodes = FnvHashSet<DepNode<DefId>>;\n \n type CleanEdges = Vec<(DepNode<DefId>, DepNode<DefId>)>;\n \n+/// If we are in incremental mode, and a previous dep-graph exists,\n+/// then load up those nodes/edges that are still valid into the\n+/// dep-graph for this session. (This is assumed to be running very\n+/// early in compilation, before we've really done any work, but\n+/// actually it doesn't matter all that much.) See `README.md` for\n+/// more general overview.\n pub fn load_dep_graph<'tcx>(tcx: &ty::TyCtxt<'tcx>) {\n     let _ignore = tcx.dep_graph.in_ignore();\n "}]}