{"sha": "675aa7692dd1b75e63b11cd991be5efddbdb2acd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NWFhNzY5MmRkMWI3NWU2M2IxMWNkOTkxYmU1ZWZkZGJkYjJhY2Q=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-04T23:09:18Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-10-05T03:09:09Z"}, "message": "Add tests for intrinsics::unreachable", "tree": {"sha": "aabf6f26f36a42d0e35aa344492d20c4fb1e0309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aabf6f26f36a42d0e35aa344492d20c4fb1e0309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/675aa7692dd1b75e63b11cd991be5efddbdb2acd", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/675aa7692dd1b75e63b11cd991be5efddbdb2acd", "html_url": "https://github.com/rust-lang/rust/commit/675aa7692dd1b75e63b11cd991be5efddbdb2acd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/675aa7692dd1b75e63b11cd991be5efddbdb2acd/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401aeaf6d3a6ec712ee46151faf574adaa5ff3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/401aeaf6d3a6ec712ee46151faf574adaa5ff3c6", "html_url": "https://github.com/rust-lang/rust/commit/401aeaf6d3a6ec712ee46151faf574adaa5ff3c6"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "305e8a7ddc96894d79c54ebedbed52a666f8dc11", "filename": "src/test/run-make/intrinsic-unreachable/Makefile", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2FMakefile?ref=675aa7692dd1b75e63b11cd991be5efddbdb2acd", "patch": "@@ -0,0 +1,15 @@\n+-include ../tools.mk\n+\n+ifndef IS_WINDOWS\n+# The assembly for exit-unreachable.rs should be shorter because it's missing\n+# (at minimum) a return instruction.\n+\n+all:\n+\t$(RUSTC) -O --emit asm exit-ret.rs\n+\t$(RUSTC) -O --emit asm exit-unreachable.rs\n+\ttest `wc -l < $(TMPDIR)/exit-unreachable.s` -lt `wc -l < $(TMPDIR)/exit-ret.s`\n+else\n+# Because of Windows exception handling, the code is not necessarily any shorter.\n+# https://github.com/llvm-mirror/llvm/commit/64b2297786f7fd6f5fa24cdd4db0298fbf211466\n+all:\n+endif"}, {"sha": "02c03445ef4e6d804773e8c3fa300dd40353f15e", "filename": "src/test/run-make/intrinsic-unreachable/exit-ret.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs?ref=675aa7692dd1b75e63b11cd991be5efddbdb2acd", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(asm)]\n+#![crate_type=\"lib\"]\n+\n+pub fn exit(n: uint) {\n+    unsafe {\n+        // Pretend this asm is an exit() syscall.\n+        asm!(\"\" :: \"r\"(n) :: \"volatile\");\n+        // Can't actually reach this point, but rustc doesn't know that.\n+    }\n+}"}, {"sha": "835e068c15cfd2b468e3d851a069de3f692f7d67", "filename": "src/test/run-make/intrinsic-unreachable/exit-unreachable.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs?ref=675aa7692dd1b75e63b11cd991be5efddbdb2acd", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(asm)]\n+#![crate_type=\"lib\"]\n+\n+use std::intrinsics;\n+\n+pub fn exit(n: uint) -> ! {\n+    unsafe {\n+        // Pretend this asm is an exit() syscall.\n+        asm!(\"\" :: \"r\"(n) :: \"volatile\");\n+        intrinsics::unreachable()\n+    }\n+}"}, {"sha": "5e8b758cdf68f873dec08f8ff88690caa65a7c99", "filename": "src/test/run-pass/intrinsic-unreachable.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-pass%2Fintrinsic-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675aa7692dd1b75e63b11cd991be5efddbdb2acd/src%2Ftest%2Frun-pass%2Fintrinsic-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-unreachable.rs?ref=675aa7692dd1b75e63b11cd991be5efddbdb2acd", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::intrinsics;\n+\n+// See also src/test/run-make/intrinsic-unreachable.\n+\n+unsafe fn f(x: uint) -> uint {\n+    match x {\n+        17 => 23,\n+        _ => intrinsics::unreachable(),\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(unsafe { f(17) }, 23);\n+}"}]}