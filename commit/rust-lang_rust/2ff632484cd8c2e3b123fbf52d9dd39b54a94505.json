{"sha": "2ff632484cd8c2e3b123fbf52d9dd39b54a94505", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZjYzMjQ4NGNkOGMyZTNiMTIzZmJmNTJkOWRkMzliNTRhOTQ1MDU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-05-08T01:17:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-05-21T08:43:25Z"}, "message": "Optimize seen Predicate filtering.\n\nThis speeds up a few rustc-perf benchmark runs, most notably ones\ninvolving 'coercions', the best by 2%.", "tree": {"sha": "5907f35e22ebfd61e00feacc67bccb9e1cd9f75d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5907f35e22ebfd61e00feacc67bccb9e1cd9f75d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ff632484cd8c2e3b123fbf52d9dd39b54a94505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff632484cd8c2e3b123fbf52d9dd39b54a94505", "html_url": "https://github.com/rust-lang/rust/commit/2ff632484cd8c2e3b123fbf52d9dd39b54a94505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ff632484cd8c2e3b123fbf52d9dd39b54a94505/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c26e2e3fba61f18caca8bd43c57e1f1d799f07b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c26e2e3fba61f18caca8bd43c57e1f1d799f07b", "html_url": "https://github.com/rust-lang/rust/commit/4c26e2e3fba61f18caca8bd43c57e1f1d799f07b"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "da9ac85639f9c19d0acab3d9e261ce685dad2ba6", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2ff632484cd8c2e3b123fbf52d9dd39b54a94505/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff632484cd8c2e3b123fbf52d9dd39b54a94505/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=2ff632484cd8c2e3b123fbf52d9dd39b54a94505", "patch": "@@ -3356,13 +3356,28 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                     predicate: predicate.value\n                 }))\n         }).collect();\n+\n         // We are performing deduplication here to avoid exponential blowups\n         // (#38528) from happening, but the real cause of the duplication is\n         // unknown. What we know is that the deduplication avoids exponential\n-        // amount of predicates being propogated when processing deeply nested\n+        // amount of predicates being propagated when processing deeply nested\n         // types.\n-        let mut seen = FxHashSet();\n-        predicates.retain(|i| seen.insert(i.clone()));\n+        //\n+        // This code is hot enough that it's worth avoiding the allocation\n+        // required for the FxHashSet when possible. Special-casing lengths 0,\n+        // 1 and 2 covers roughly 75--80% of the cases.\n+        if predicates.len() <= 1 {\n+            // No possibility of duplicates.\n+        } else if predicates.len() == 2 {\n+            // Only two elements. Drop the second if they are equal.\n+            if predicates[0] == predicates[1] {\n+                predicates.truncate(1);\n+            }\n+        } else {\n+            // Three or more elements. Use a general deduplication process.\n+            let mut seen = FxHashSet();\n+            predicates.retain(|i| seen.insert(i.clone()));\n+        }\n         self.infcx().plug_leaks(skol_map, snapshot, predicates)\n     }\n }"}]}