{"sha": "dd19bf0843113904e9763d55207e3be9120756df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMTliZjA4NDMxMTM5MDRlOTc2M2Q1NTIwN2UzYmU5MTIwNzU2ZGY=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-07T07:35:43Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-07T07:39:00Z"}, "message": "Support importing inaccessible `extern crate`s with a warning again.", "tree": {"sha": "7e44b780c536e44156fa6ed2aaa12e8f9d9d042e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e44b780c536e44156fa6ed2aaa12e8f9d9d042e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd19bf0843113904e9763d55207e3be9120756df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd19bf0843113904e9763d55207e3be9120756df", "html_url": "https://github.com/rust-lang/rust/commit/dd19bf0843113904e9763d55207e3be9120756df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd19bf0843113904e9763d55207e3be9120756df/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75c155b834e3bd667ca50187741c1b7abbf9e3df", "url": "https://api.github.com/repos/rust-lang/rust/commits/75c155b834e3bd667ca50187741c1b7abbf9e3df", "html_url": "https://github.com/rust-lang/rust/commit/75c155b834e3bd667ca50187741c1b7abbf9e3df"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e33668b6fe94021c4c189578b7cf11214a5170e7", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd19bf0843113904e9763d55207e3be9120756df/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd19bf0843113904e9763d55207e3be9120756df/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=dd19bf0843113904e9763d55207e3be9120756df", "patch": "@@ -197,7 +197,8 @@ impl<'a> Resolver<'a> {\n         // If the resolution doesn't depend on glob definability, check privacy and return.\n         if let Some(result) = self.try_result(&resolution, ns) {\n             return result.and_then(|binding| {\n-                if self.is_accessible(binding.vis) && !is_disallowed_private_import(binding) {\n+                if self.is_accessible(binding.vis) && !is_disallowed_private_import(binding) ||\n+                   binding.is_extern_crate() { // c.f. issue #37020\n                     Success(binding)\n                 } else {\n                     Failed(None)"}]}