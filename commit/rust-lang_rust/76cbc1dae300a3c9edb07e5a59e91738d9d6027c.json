{"sha": "76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "node_id": "C_kwDOAAsO6NoAKDc2Y2JjMWRhZTMwMGEzYzllZGIwN2U1YTU5ZTkxNzM4ZDlkNjAyN2M", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-05T10:33:45Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-16T06:16:43Z"}, "message": "Support lint expectations for `--force-warn` lints (RFC 2383)", "tree": {"sha": "60bc2b0940013de381d1081a5be0f3c3ef29616f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60bc2b0940013de381d1081a5be0f3c3ef29616f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "html_url": "https://github.com/rust-lang/rust/commit/76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76cbc1dae300a3c9edb07e5a59e91738d9d6027c/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "html_url": "https://github.com/rust-lang/rust/commit/9b697d0b90f2e6e021564454c5481e2b1b3c0df4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8b706b8bcb49ab278d57761da741f7f01128fca1", "filename": "src/parse/session.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/76cbc1dae300a3c9edb07e5a59e91738d9d6027c/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76cbc1dae300a3c9edb07e5a59e91738d9d6027c/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "patch": "@@ -433,7 +433,7 @@ mod tests {\n                 Some(ignore_list),\n             );\n             let span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n-            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(span));\n+            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(span));\n             emitter.emit_diagnostic(&non_fatal_diagnostic);\n             assert_eq!(num_emitted_errors.load(Ordering::Acquire), 0);\n             assert_eq!(can_reset_errors.load(Ordering::Acquire), true);\n@@ -457,7 +457,7 @@ mod tests {\n                 None,\n             );\n             let span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n-            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(span));\n+            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(span));\n             emitter.emit_diagnostic(&non_fatal_diagnostic);\n             assert_eq!(num_emitted_errors.load(Ordering::Acquire), 1);\n             assert_eq!(can_reset_errors.load(Ordering::Acquire), false);\n@@ -494,8 +494,8 @@ mod tests {\n             );\n             let bar_span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n             let foo_span = MultiSpan::from_span(mk_sp(BytePos(21), BytePos(22)));\n-            let bar_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(bar_span));\n-            let foo_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(foo_span));\n+            let bar_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(bar_span));\n+            let foo_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(foo_span));\n             let fatal_diagnostic = build_diagnostic(DiagnosticLevel::Fatal, None);\n             emitter.emit_diagnostic(&bar_diagnostic);\n             emitter.emit_diagnostic(&foo_diagnostic);"}]}