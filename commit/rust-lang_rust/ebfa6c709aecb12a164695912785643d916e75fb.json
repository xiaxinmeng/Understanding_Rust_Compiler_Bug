{"sha": "ebfa6c709aecb12a164695912785643d916e75fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZmE2YzcwOWFlY2IxMmExNjQ2OTU5MTI3ODU2NDNkOTE2ZTc1ZmI=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-15T03:11:40Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-19T03:50:50Z"}, "message": "Change the --unpretty flag to -Z unpretty\n\n-Z unpretty no longer requires -Z unstable-options. Also, I mildly\nchanged the syntax of the flag to match the other -Z flags. All uses of\nthe flag take the form `unpretty=something` where something can either\n`string` or `string=string` (see the help messages of the CLI).", "tree": {"sha": "63a83c74cb74970d40cf24a0d4afb7457c4ed01f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63a83c74cb74970d40cf24a0d4afb7457c4ed01f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebfa6c709aecb12a164695912785643d916e75fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebfa6c709aecb12a164695912785643d916e75fb", "html_url": "https://github.com/rust-lang/rust/commit/ebfa6c709aecb12a164695912785643d916e75fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebfa6c709aecb12a164695912785643d916e75fb/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4", "html_url": "https://github.com/rust-lang/rust/commit/3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4"}], "stats": {"total": 65, "additions": 38, "deletions": 27}, "files": [{"sha": "8efd6b458e9cbf1c0251a9e5c2c591d951025b78", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -778,6 +778,8 @@ macro_rules! options {\n             Some(::rustc_back::LinkerFlavor::one_of());\n         pub const parse_optimization_fuel: Option<&'static str> =\n             Some(\"crate=integer\");\n+        pub const parse_unpretty: Option<&'static str> =\n+            Some(\"`string` or `string=string`\");\n     }\n \n     #[allow(dead_code)]\n@@ -965,6 +967,17 @@ macro_rules! options {\n                 }\n             }\n         }\n+\n+        fn parse_unpretty(slot: &mut Option<String>, v: Option<&str>) -> bool {\n+            match v {\n+                None => false,\n+                Some(s) if s.split('=').count() <= 2 => {\n+                    *slot = Some(s.to_string());\n+                    true\n+                }\n+                _ => false,\n+            }\n+        }\n     }\n ) }\n \n@@ -1102,13 +1115,13 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"write syntax and type analysis (in JSON format) information, in \\\n          addition to normal output\"),\n     flowgraph_print_loans: bool = (false, parse_bool, [UNTRACKED],\n-        \"include loan analysis data in --unpretty flowgraph output\"),\n+        \"include loan analysis data in -Z unpretty flowgraph output\"),\n     flowgraph_print_moves: bool = (false, parse_bool, [UNTRACKED],\n-        \"include move analysis data in --unpretty flowgraph output\"),\n+        \"include move analysis data in -Z unpretty flowgraph output\"),\n     flowgraph_print_assigns: bool = (false, parse_bool, [UNTRACKED],\n-        \"include assignment analysis data in --unpretty flowgraph output\"),\n+        \"include assignment analysis data in -Z unpretty flowgraph output\"),\n     flowgraph_print_all: bool = (false, parse_bool, [UNTRACKED],\n-        \"include all dataflow analysis data in --unpretty flowgraph output\"),\n+        \"include all dataflow analysis data in -Z unpretty flowgraph output\"),\n     print_region_graph: bool = (false, parse_bool, [UNTRACKED],\n          \"prints region inference graph. \\\n           Use with RUST_REGION_GRAPH=help for more info\"),\n@@ -1239,6 +1252,13 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     dep_info_omit_d_target: bool = (false, parse_bool, [TRACKED],\n         \"in dep-info output, omit targets for tracking dependencies of the dep-info files \\\n          themselves\"),\n+    unpretty: Option<String> = (None, parse_unpretty, [UNTRACKED],\n+        \"Present the input source, unstable (and less-pretty) variants;\n+        valid types are any of the types for `--pretty`, as well as:\n+        `flowgraph=<nodeid>` (graphviz formatted flowgraph for node),\n+        `everybody_loops` (all function bodies replaced with `loop {}`),\n+        `hir` (the HIR), `hir,identified`, or\n+        `hir,typed` (HIR with types for each node).\"),\n }\n \n pub fn default_lib_output() -> CrateType {\n@@ -1512,14 +1532,6 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n                   `expanded` (crates expanded), or\n                   `expanded,identified` (fully parenthesized, AST nodes with IDs).\",\n                  \"TYPE\"),\n-        opt::opt(\"\", \"unpretty\",\n-                 \"Present the input source, unstable (and less-pretty) variants;\n-                  valid types are any of the types for `--pretty`, as well as:\n-                  `flowgraph=<nodeid>` (graphviz formatted flowgraph for node),\n-                  `everybody_loops` (all function bodies replaced with `loop {}`),\n-                  `hir` (the HIR), `hir,identified`, or\n-                  `hir,typed` (HIR with types for each node).\",\n-                 \"TYPE\"),\n     ]);\n     opts\n }"}, {"sha": "a985fa073ef8ceca9320640a39c7574fd279fc6a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -292,8 +292,9 @@ fn parse_pretty(sess: &Session,\n     } else {\n         None\n     };\n-    if pretty.is_none() && sess.unstable_options() {\n-        matches.opt_str(\"unpretty\").map(|a| {\n+\n+    if pretty.is_none() {\n+        sess.opts.debugging_opts.unpretty.as_ref().map(|a| {\n             // extended with unstable pretty-print variants\n             pretty::parse_pretty(sess, &a, true)\n         })"}, {"sha": "a771cdad70ff68a13b5c124bc62f570ca903687c", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -66,7 +66,7 @@ pub enum PpSourceMode {\n pub enum PpFlowGraphMode {\n     Default,\n     /// Drops the labels from the edges in the flowgraph output. This\n-    /// is mostly for use in the --unpretty flowgraph run-make tests,\n+    /// is mostly for use in the -Z unpretty flowgraph run-make tests,\n     /// since the labels are largely uninteresting in those cases and\n     /// have become a pain to maintain.\n     UnlabelledEdges,\n@@ -1006,7 +1006,7 @@ pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n                                            move |annotation, _| {\n                     debug!(\"pretty printing source code {:?}\", s);\n                     let sess = annotation.sess();\n-                    let hir_map = annotation.hir_map().expect(\"--unpretty missing HIR map\");\n+                    let hir_map = annotation.hir_map().expect(\"-Z unpretty missing HIR map\");\n                     let mut pp_state = pprust_hir::State::new_from_input(sess.codemap(),\n                                                                          &sess.parse_sess,\n                                                                          src_name,\n@@ -1019,7 +1019,7 @@ pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n                         pp_state.print_node(node)?;\n                         pp_state.s.space()?;\n                         let path = annotation.node_path(node_id)\n-                            .expect(\"--unpretty missing node paths\");\n+                            .expect(\"-Z unpretty missing node paths\");\n                         pp_state.synth_comment(path)?;\n                         pp_state.s.hardbreak()?;\n                     }\n@@ -1071,7 +1071,7 @@ fn print_with_analysis<'tcx, 'a: 'tcx>(sess: &'a Session,\n                                        ofile: Option<&Path>) {\n     let nodeid = if let Some(uii) = uii {\n         debug!(\"pretty printing for {:?}\", uii);\n-        Some(uii.to_one_node_id(\"--unpretty\", sess, &hir_map))\n+        Some(uii.to_one_node_id(\"-Z unpretty\", sess, &hir_map))\n     } else {\n         debug!(\"pretty printing for whole crate\");\n         None"}, {"sha": "81ed4375e77938d55d8330e2a909f9b94eb7f439", "filename": "src/test/compile-fail/issue-37665.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z unstable-options --unpretty=mir\n+// compile-flags: -Z unpretty=mir\n // ignore-cloudabi no std::path\n \n use std::path::MAIN_SEPARATOR;"}, {"sha": "fa9365021575fde84f60864853ef7b58abb68cc7", "filename": "src/test/compile-fail/mir-unpretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z unstable-options --unpretty=mir\n+// compile-flags: -Z unpretty=mir\n \n fn main() {\n     let x: () = 0; //~ ERROR: mismatched types"}, {"sha": "2e100b269e14bfa440f429d84050a3ad0be50256", "filename": "src/test/run-make/hir-tree/Makefile", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Frun-make%2Fhir-tree%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Frun-make%2Fhir-tree%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fhir-tree%2FMakefile?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -4,6 +4,5 @@\n # the string constant we would expect to see.\n \n all:\n-\t$(RUSTC) -o $(TMPDIR)/input.hir -Z unstable-options \\\n-\t\t--unpretty=hir-tree input.rs\n+\t$(RUSTC) -o $(TMPDIR)/input.hir -Z unpretty=hir-tree input.rs\n \t$(CGREP) '\"Hello, Rustaceans!\\n\"' < $(TMPDIR)/input.hir"}, {"sha": "899457fc7486e5cb9d1689a7d2ba20467782c0a8", "filename": "src/test/run-make/pretty-print-path-suffix/Makefile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Frun-make%2Fpretty-print-path-suffix%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftest%2Frun-make%2Fpretty-print-path-suffix%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-print-path-suffix%2FMakefile?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -1,9 +1,9 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) -o $(TMPDIR)/foo.out -Z unstable-options --unpretty hir=foo input.rs\n-\t$(RUSTC) -o $(TMPDIR)/nest_foo.out -Z unstable-options --unpretty hir=nest::foo input.rs\n-\t$(RUSTC) -o $(TMPDIR)/foo_method.out -Z unstable-options --unpretty hir=foo_method input.rs\n+\t$(RUSTC) -o $(TMPDIR)/foo.out -Z unpretty=hir=foo input.rs\n+\t$(RUSTC) -o $(TMPDIR)/nest_foo.out -Z unpretty=hir=nest::foo input.rs\n+\t$(RUSTC) -o $(TMPDIR)/foo_method.out -Z unpretty=hir=foo_method input.rs\n \tdiff -u $(TMPDIR)/foo.out foo.pp\n \tdiff -u $(TMPDIR)/nest_foo.out nest_foo.pp\n \tdiff -u $(TMPDIR)/foo_method.out foo_method.pp"}, {"sha": "bf5fc00428df2cad5558c4527ba9c08f8887d1c3", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebfa6c709aecb12a164695912785643d916e75fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ebfa6c709aecb12a164695912785643d916e75fb", "patch": "@@ -466,8 +466,7 @@ impl<'test> TestCx<'test> {\n         let mut rustc = Command::new(&self.config.rustc_path);\n         rustc\n             .arg(\"-\")\n-            .arg(\"-Zunstable-options\")\n-            .args(&[\"--unpretty\", &pretty_type])\n+            .args(&[\"-Z\", &format!(\"unpretty={}\", pretty_type)])\n             .args(&[\"--target\", &self.config.target])\n             .arg(\"-L\")\n             .arg(&aux_dir)"}]}