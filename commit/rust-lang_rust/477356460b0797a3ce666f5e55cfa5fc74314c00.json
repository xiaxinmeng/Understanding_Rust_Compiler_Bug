{"sha": "477356460b0797a3ce666f5e55cfa5fc74314c00", "node_id": "C_kwDOAAsO6NoAKDQ3NzM1NjQ2MGIwNzk3YTNjZTY2NmY1ZTU1Y2ZhNWZjNzQzMTRjMDA", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-07-25T12:41:12Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-07-25T13:28:49Z"}, "message": "check macro statements in non_copy_const.rs", "tree": {"sha": "11ba0b380107d4ac3da3d6bb08ccc00c5d1bc7e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ba0b380107d4ac3da3d6bb08ccc00c5d1bc7e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477356460b0797a3ce666f5e55cfa5fc74314c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477356460b0797a3ce666f5e55cfa5fc74314c00", "html_url": "https://github.com/rust-lang/rust/commit/477356460b0797a3ce666f5e55cfa5fc74314c00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477356460b0797a3ce666f5e55cfa5fc74314c00/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a5b7e266a4b3c10b38fcb107e737fd5d7f510c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a5b7e266a4b3c10b38fcb107e737fd5d7f510c1", "html_url": "https://github.com/rust-lang/rust/commit/4a5b7e266a4b3c10b38fcb107e737fd5d7f510c1"}], "stats": {"total": 60, "additions": 47, "deletions": 13}, "files": [{"sha": "699e68b86f7665bdf422499367aaa42294f9e5b4", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/477356460b0797a3ce666f5e55cfa5fc74314c00/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/477356460b0797a3ce666f5e55cfa5fc74314c00/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=477356460b0797a3ce666f5e55cfa5fc74314c00", "patch": "@@ -52,7 +52,7 @@ serde = { version = \"1.0.125\", features = [\"derive\"] }\n syn = { version = \"1.0\", features = [\"full\"] }\n futures = \"0.3\"\n parking_lot = \"0.12\"\n-tokio = { version = \"1\", features = [\"io-util\"] }\n+tokio = { version = \"1\", features = [\"full\"] }\n rustc-semver = \"1.1\"\n \n [build-dependencies]"}, {"sha": "72c86f28bbc6c4e4193894a6cbf4dedf09f2ea54", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/477356460b0797a3ce666f5e55cfa5fc74314c00/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477356460b0797a3ce666f5e55cfa5fc74314c00/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=477356460b0797a3ce666f5e55cfa5fc74314c00", "patch": "@@ -251,14 +251,7 @@ impl<'tcx> LateLintPass<'tcx> for NonCopyConst {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx Item<'_>) {\n         if let ItemKind::Const(hir_ty, body_id) = it.kind {\n             let ty = hir_ty_to_ty(cx.tcx, hir_ty);\n-            if !macro_backtrace(it.span).last().map_or(false, |macro_call| {\n-                matches!(\n-                    cx.tcx.get_diagnostic_name(macro_call.def_id),\n-                    Some(sym::thread_local_macro)\n-                )\n-            }) && is_unfrozen(cx, ty)\n-                && is_value_unfrozen_poly(cx, body_id, ty)\n-            {\n+            if !ignored_macro(cx, it) && is_unfrozen(cx, ty) && is_value_unfrozen_poly(cx, body_id, ty) {\n                 lint(cx, Source::Item { item: it.span });\n             }\n         }\n@@ -445,3 +438,12 @@ impl<'tcx> LateLintPass<'tcx> for NonCopyConst {\n         }\n     }\n }\n+\n+fn ignored_macro(cx: &LateContext<'_>, it: &rustc_hir::Item<'_>) -> bool {\n+    macro_backtrace(it.span).any(|macro_call| {\n+        matches!(\n+            cx.tcx.get_diagnostic_name(macro_call.def_id),\n+            Some(sym::thread_local_macro)\n+        )\n+    })\n+}"}, {"sha": "f46d3499f4e9100f8b28d6640129438fb6775281", "filename": "tests/ui/declare_interior_mutable_const/others.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/477356460b0797a3ce666f5e55cfa5fc74314c00/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477356460b0797a3ce666f5e55cfa5fc74314c00/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs?ref=477356460b0797a3ce666f5e55cfa5fc74314c00", "patch": "@@ -31,9 +31,30 @@ const NO_ANN: &dyn Display = &70;\n static STATIC_TUPLE: (AtomicUsize, String) = (ATOMIC, STRING);\n //^ there should be no lints on this line\n \n-// issue #8493\n-thread_local! {\n-    static THREAD_LOCAL: Cell<i32> = const { Cell::new(0) };\n+mod issue_8493 {\n+    use std::cell::Cell;\n+\n+    // https://github.com/rust-lang/rust-clippy/issues/9224\n+    tokio::task_local! {\n+        pub static _FOO: String;\n+    }\n+\n+    thread_local! {\n+        static _BAR: Cell<i32> = const { Cell::new(0) };\n+    }\n+\n+    macro_rules! issue_8493 {\n+        () => {\n+            const _BAZ: Cell<usize> = Cell::new(0); //~ ERROR interior mutable\n+            static _FOOBAR: () = {\n+                thread_local! {\n+                    static _VAR: Cell<i32> = const { Cell::new(0) };\n+                }\n+            };\n+        };\n+    }\n+\n+    issue_8493!();\n }\n \n fn main() {}"}, {"sha": "6cba9491ef4e8d1b6d30b78e1c48e9cea61a01c4", "filename": "tests/ui/declare_interior_mutable_const/others.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/477356460b0797a3ce666f5e55cfa5fc74314c00/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/477356460b0797a3ce666f5e55cfa5fc74314c00/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr?ref=477356460b0797a3ce666f5e55cfa5fc74314c00", "patch": "@@ -35,5 +35,16 @@ LL | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n    |\n    = note: this error originates in the macro `declare_const` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 4 previous errors\n+error: a `const` item should never be interior mutable\n+  --> $DIR/others.rs:48:13\n+   |\n+LL |             const _BAZ: Cell<usize> = Cell::new(0); //~ ERROR interior mutable\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     issue_8493!();\n+   |     ------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `issue_8493` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 5 previous errors\n "}]}