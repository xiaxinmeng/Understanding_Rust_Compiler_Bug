{"sha": "3d54e56ed4898c2b01dd008f12ab41cf54710f43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNTRlNTZlZDQ4OThjMmIwMWRkMDA4ZjEyYWI0MWNmNTQ3MTBmNDM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-26T06:51:27Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-29T09:03:53Z"}, "message": "Add workaround for hidden outer attribute\n\nIf the snippet is empty, it's an attribute that was inserted during macro\nexpansion and we want to ignore those, because they could come from external\nsources that the user has no control over.\nFor some reason these attributes don't have any expansion info on them, so\nwe have to check it this way until there is a better way.", "tree": {"sha": "2f0ea126c403edd7a19961a04e1f7b53142d373c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f0ea126c403edd7a19961a04e1f7b53142d373c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d54e56ed4898c2b01dd008f12ab41cf54710f43", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJabuN5AAoJEGZ8j0taaYpg/NEP/1uEfNUz1CDogMQMPnyEp2zM\ngsFmAZfSB9/TqEzaaOoFomJmj2a2UJIcgnlMchhwlcuzAw2p/dTT/4wpu15VUNF+\neUUj2jKcjWTbSmL9At1VH+Z5SsKbdZQb07ZqPzO1QSlGmUy7kjgsSG6Iq5A3bvRs\n1SDhE4Uas5s6t74Vs74C60Av7aIez4ogItzpYqVAbG7XGS8vDxBsoIQB/WppKHQC\nh2kWXP8J4eVlXz/zmUQQNe1I60tTS3iasGFU4+2KhfPi9TN+R0nLFIJB6eMm3kNF\nTc6av4Z4SZIG5IN0WDNin/+pIGJPakhnf9Wf9dX1MNDokktK2TfwphsnRNpN6E5b\nCYlCicRX18Pl46yCLVDZ9CEK0NBgNZ4u8dmhNq+gibP8lVAO3Ul2mignubyjSwkk\nSl2uPTVgqTOCc0MNFX47I5D7F8hYkJCznOp5a/khSp7Df5djtFtXYMYk+XU2aj78\n0NvxF1U/BI5RKUh46aHb/eIbRrvdxvJ/mZ+mIAv3pyQwMNb1XKMTwc/oe//CNuxp\nz5lo8XEs6usJbJLMGlB0J+qyGMk6ognu/49+s63Pk0HBIK2Hko5S+ftMbVzlHTfq\nCrdjPznm1JfeCnEQYjqRJcqXd19g5hIStePF7FYSTpDVFZxL8Il/NOTonC1eMnyH\nwqo77p8J2vThJIVeERXY\n=eDyZ\n-----END PGP SIGNATURE-----", "payload": "tree 2f0ea126c403edd7a19961a04e1f7b53142d373c\nparent aade0d563e1eb668566872d4c300a734b67f6600\nauthor Philipp Hansch <dev@phansch.net> 1516949487 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1517216633 +0100\n\nAdd workaround for hidden outer attribute\n\nIf the snippet is empty, it's an attribute that was inserted during macro\nexpansion and we want to ignore those, because they could come from external\nsources that the user has no control over.\nFor some reason these attributes don't have any expansion info on them, so\nwe have to check it this way until there is a better way.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d54e56ed4898c2b01dd008f12ab41cf54710f43", "html_url": "https://github.com/rust-lang/rust/commit/3d54e56ed4898c2b01dd008f12ab41cf54710f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d54e56ed4898c2b01dd008f12ab41cf54710f43/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aade0d563e1eb668566872d4c300a734b67f6600", "url": "https://api.github.com/repos/rust-lang/rust/commits/aade0d563e1eb668566872d4c300a734b67f6600", "html_url": "https://github.com/rust-lang/rust/commit/aade0d563e1eb668566872d4c300a734b67f6600"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "939fdf1fae99ae23aa175f21fcc64e3cc236e399", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3d54e56ed4898c2b01dd008f12ab41cf54710f43/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d54e56ed4898c2b01dd008f12ab41cf54710f43/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=3d54e56ed4898c2b01dd008f12ab41cf54710f43", "patch": "@@ -263,6 +263,10 @@ fn check_attrs(cx: &LateContext, span: Span, name: &Name, attrs: &[Attribute]) {\n \n     for attr in attrs {\n         if attr.style == AttrStyle::Outer {\n+            if !is_present_in_source(cx, attr.span) {\n+                return;\n+            }\n+\n             let attr_to_item_span = Span::new(attr.span.lo(), span.lo(), span.ctxt());\n \n             if let Some(snippet) = snippet_opt(cx, attr_to_item_span) {\n@@ -319,3 +323,17 @@ fn is_word(nmi: &NestedMetaItem, expected: &str) -> bool {\n         false\n     }\n }\n+\n+// If the snippet is empty, it's an attribute that was inserted during macro\n+// expansion and we want to ignore those, because they could come from external\n+// sources that the user has no control over.\n+// For some reason these attributes don't have any expansion info on them, so\n+// we have to check it this way until there is a better way.\n+fn is_present_in_source(cx: &LateContext, span: Span) -> bool {\n+    if let Some(snippet) = snippet_opt(cx, span) {\n+        if snippet.is_empty() {\n+            return false;\n+        }\n+    }\n+    true\n+}"}]}