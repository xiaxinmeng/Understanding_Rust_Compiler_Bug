{"sha": "d631f29d47578c46bfc01e1a8cc021b295866e0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MzFmMjlkNDc1NzhjNDZiZmMwMWUxYThjYzAyMWIyOTU4NjZlMGM=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-01T00:29:59Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-01T03:15:11Z"}, "message": "Add block_to_str and expr_to_str methods to the pprust module.\n\nSince pprust is authed impure these can be used for debug logging.", "tree": {"sha": "5c219e2ce30fecadf033d6c710bc32ba1f58e7dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c219e2ce30fecadf033d6c710bc32ba1f58e7dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d631f29d47578c46bfc01e1a8cc021b295866e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d631f29d47578c46bfc01e1a8cc021b295866e0c", "html_url": "https://github.com/rust-lang/rust/commit/d631f29d47578c46bfc01e1a8cc021b295866e0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d631f29d47578c46bfc01e1a8cc021b295866e0c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2490cd327514471c8e7fb56a9fba2c2304c04552", "url": "https://api.github.com/repos/rust-lang/rust/commits/2490cd327514471c8e7fb56a9fba2c2304c04552", "html_url": "https://github.com/rust-lang/rust/commit/2490cd327514471c8e7fb56a9fba2c2304c04552"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "f3b0f3fe9793908505899ea64186672c43aac0d6", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d631f29d47578c46bfc01e1a8cc021b295866e0c/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d631f29d47578c46bfc01e1a8cc021b295866e0c/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=d631f29d47578c46bfc01e1a8cc021b295866e0c", "patch": "@@ -32,6 +32,24 @@ fn ty_to_str(&@ast.ty ty) -> str {\n     ret writer.get_str();\n }\n \n+fn block_to_str(&ast.block blk) -> str {\n+    auto writer = io.string_writer();\n+    auto s = @rec(s=pp.mkstate(writer.get_writer(), 78u),\n+                  comments=option.none[vec[lexer.cmnt]],\n+                  mutable cur_cmnt=0u);\n+    print_block(s, blk);\n+    ret writer.get_str();\n+}\n+\n+fn expr_to_str(&@ast.expr e) -> str {\n+    auto writer = io.string_writer();\n+    auto s = @rec(s=pp.mkstate(writer.get_writer(), 78u),\n+                  comments=option.none[vec[lexer.cmnt]],\n+                  mutable cur_cmnt=0u);\n+    print_expr(s, e);\n+    ret writer.get_str();\n+}\n+\n impure fn hbox(ps s) {\n     pp.hbox(s.s, indent_unit);\n }"}]}