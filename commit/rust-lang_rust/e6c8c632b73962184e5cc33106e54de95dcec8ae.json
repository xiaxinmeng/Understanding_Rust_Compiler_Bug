{"sha": "e6c8c632b73962184e5cc33106e54de95dcec8ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YzhjNjMyYjczOTYyMTg0ZTVjYzMzMTA2ZTU0ZGU5NWRjZWM4YWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T10:49:05Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T10:49:20Z"}, "message": "use query boilerplate for prove-predicate -- slightly inefficient\n\nThis requires us to allocate a single entry vector we didn't use to\nallocate. I doubt this makes a difference in practice, as this only\noccurs for cache misses.", "tree": {"sha": "89d5ce779fe128021c1050518ca49c00920dfaff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89d5ce779fe128021c1050518ca49c00920dfaff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6c8c632b73962184e5cc33106e54de95dcec8ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c8c632b73962184e5cc33106e54de95dcec8ae", "html_url": "https://github.com/rust-lang/rust/commit/e6c8c632b73962184e5cc33106e54de95dcec8ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6c8c632b73962184e5cc33106e54de95dcec8ae/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac40d73c6ff360fa260f842bf66c848c0ec81eec", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac40d73c6ff360fa260f842bf66c848c0ec81eec", "html_url": "https://github.com/rust-lang/rust/commit/ac40d73c6ff360fa260f842bf66c848c0ec81eec"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "7210d43d9f75ed6de4c830ca1dbbdecfd7225dce", "filename": "src/librustc_traits/type_op_prove_predicate.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e6c8c632b73962184e5cc33106e54de95dcec8ae/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6c8c632b73962184e5cc33106e54de95dcec8ae/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs?ref=e6c8c632b73962184e5cc33106e54de95dcec8ae", "patch": "@@ -8,25 +8,31 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use rustc::infer::InferOk;\n use rustc::infer::canonical::{Canonical, QueryResult};\n use rustc::traits::query::type_op::prove_predicate::ProvePredicate;\n use rustc::traits::query::NoSolution;\n-use rustc::traits::{FulfillmentContext, Obligation, ObligationCause, TraitEngine};\n+use rustc::traits::{Obligation, ObligationCause};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::sync::Lrc;\n-use syntax::codemap::DUMMY_SP;\n \n crate fn type_op_prove_predicate<'tcx>(\n     tcx: TyCtxt<'_, 'tcx, 'tcx>,\n     canonicalized: Canonical<'tcx, ProvePredicate<'tcx>>,\n ) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n-    let tcx = tcx.global_tcx();\n-    tcx.infer_ctxt().enter(|ref infcx| {\n-        let (ProvePredicate { param_env, predicate }, canonical_inference_vars) =\n-            infcx.instantiate_canonical_with_fresh_inference_vars(DUMMY_SP, &canonicalized);\n-        let fulfill_cx = &mut FulfillmentContext::new();\n-        let obligation = Obligation::new(ObligationCause::dummy(), param_env, predicate);\n-        fulfill_cx.register_predicate_obligation(infcx, obligation);\n-        infcx.make_canonicalized_query_result(canonical_inference_vars, (), fulfill_cx)\n-    })\n+    tcx.infer_ctxt()\n+        .enter_canonical_trait_query(&canonicalized, |_infcx, key| {\n+            let ProvePredicate {\n+                param_env,\n+                predicate,\n+            } = key;\n+            Ok(InferOk {\n+                value: (),\n+                obligations: vec![Obligation::new(\n+                    ObligationCause::dummy(),\n+                    param_env,\n+                    predicate,\n+                )],\n+            })\n+        })\n }"}]}