{"sha": "df3cc0c55f2f5f40564517accd27294c0d159187", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmM2NjMGM1NWYyZjVmNDA1NjQ1MTdhY2NkMjcyOTRjMGQxNTkxODc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-29T11:58:27Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-02-16T15:13:47Z"}, "message": "rustc: categorize rvalue borrows based on their const-qualification.", "tree": {"sha": "18047415835282f19af143cb45ddd5231f0b77bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18047415835282f19af143cb45ddd5231f0b77bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df3cc0c55f2f5f40564517accd27294c0d159187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df3cc0c55f2f5f40564517accd27294c0d159187", "html_url": "https://github.com/rust-lang/rust/commit/df3cc0c55f2f5f40564517accd27294c0d159187", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df3cc0c55f2f5f40564517accd27294c0d159187/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08967c7a7fc00d19029751f8a0d1780dcb7413f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/08967c7a7fc00d19029751f8a0d1780dcb7413f8", "html_url": "https://github.com/rust-lang/rust/commit/08967c7a7fc00d19029751f8a0d1780dcb7413f8"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "6c295142c9f326d485a817ad646d4baacbc69d87", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/df3cc0c55f2f5f40564517accd27294c0d159187/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df3cc0c55f2f5f40564517accd27294c0d159187/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=df3cc0c55f2f5f40564517accd27294c0d159187", "patch": "@@ -71,6 +71,7 @@ pub use self::Note::*;\n pub use self::deref_kind::*;\n pub use self::categorization::*;\n \n+use middle::check_const;\n use middle::def;\n use middle::region;\n use middle::ty::{self, Ty};\n@@ -808,17 +809,29 @@ impl<'t,'tcx,TYPER:Typer<'tcx>> MemCategorizationContext<'t,TYPER> {\n                            span: Span,\n                            expr_ty: Ty<'tcx>)\n                            -> cmt<'tcx> {\n-        match self.typer.temporary_scope(id) {\n-            Some(scope) => {\n-                match expr_ty.sty {\n-                    ty::ty_vec(_, Some(0)) => self.cat_rvalue(id, span, ty::ReStatic, expr_ty),\n-                    _ => self.cat_rvalue(id, span, ty::ReScope(scope), expr_ty)\n-                }\n+        let qualif = self.tcx().const_qualif_map.borrow().get(&id).cloned()\n+                               .unwrap_or(check_const::NOT_CONST);\n+\n+        // Only promote `[T; 0]` before an RFC for rvalue promotions\n+        // is accepted.\n+        let qualif = match expr_ty.sty {\n+            ty::ty_vec(_, Some(0)) => qualif,\n+            _ => check_const::NOT_CONST\n+        };\n+\n+        let re = match qualif & check_const::NON_STATIC_BORROWS {\n+            check_const::PURE_CONST => {\n+                // Constant rvalues get promoted to 'static.\n+                ty::ReStatic\n             }\n-            None => {\n-                self.cat_rvalue(id, span, ty::ReStatic, expr_ty)\n+            _ => {\n+                match self.typer.temporary_scope(id) {\n+                    Some(scope) => ty::ReScope(scope),\n+                    None => ty::ReStatic\n+                }\n             }\n-        }\n+        };\n+        self.cat_rvalue(id, span, re, expr_ty)\n     }\n \n     pub fn cat_rvalue(&self,"}]}