{"sha": "a6d3c77bdd998499941a6aceccde85f7a94b804d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZDNjNzdiZGQ5OTg0OTk5NDFhNmFjZWNjZGU4NWY3YTk0YjgwNGQ=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-03T18:43:57Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-03T18:43:57Z"}, "message": "Fixed tests", "tree": {"sha": "63161fbc9fd1764507a46e6c58c6e67ea562386e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63161fbc9fd1764507a46e6c58c6e67ea562386e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6d3c77bdd998499941a6aceccde85f7a94b804d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d3c77bdd998499941a6aceccde85f7a94b804d", "html_url": "https://github.com/rust-lang/rust/commit/a6d3c77bdd998499941a6aceccde85f7a94b804d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6d3c77bdd998499941a6aceccde85f7a94b804d/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eefa10bc6bff3624ddd0bbb6bc89d8beb4bed186", "url": "https://api.github.com/repos/rust-lang/rust/commits/eefa10bc6bff3624ddd0bbb6bc89d8beb4bed186", "html_url": "https://github.com/rust-lang/rust/commit/eefa10bc6bff3624ddd0bbb6bc89d8beb4bed186"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "2b1951aff5552fa16f62175a3710c429514abf32", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=a6d3c77bdd998499941a6aceccde85f7a94b804d", "patch": "@@ -18,9 +18,9 @@ use ra_db::FileId;\n use ra_fmt::leading_indent;\n use rustc_hash::FxHashSet;\n \n-// Assist extract_struct_from_enum\n+// Assist: extract_struct_from_enum_variant\n //\n-// Extracts a struct from enum variant\n+// Extracts a struct from enum variant.\n //\n // ```\n // enum A { <|>One(u32, u32) }\n@@ -29,9 +29,12 @@ use rustc_hash::FxHashSet;\n // ```\n // struct One(pub u32, pub u32);\n //\n-// enum A { One(One) }\"\n+// enum A { One(One) }\n // ```\n-pub(crate) fn extract_struct_from_enum(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n+pub(crate) fn extract_struct_from_enum_variant(\n+    acc: &mut Assists,\n+    ctx: &AssistContext,\n+) -> Option<()> {\n     let variant = ctx.find_node_at_offset::<ast::EnumVariant>()?;\n     let field_list = match variant.kind() {\n         ast::StructKind::Tuple(field_list) => field_list,\n@@ -221,7 +224,7 @@ mod tests {\n     #[test]\n     fn test_extract_struct_several_fields() {\n         check_assist(\n-            extract_struct_from_enum,\n+            extract_struct_from_enum_variant,\n             \"enum A { <|>One(u32, u32) }\",\n             r#\"struct One(pub u32, pub u32);\n \n@@ -232,7 +235,7 @@ enum A { One(One) }\"#,\n     #[test]\n     fn test_extract_struct_one_field() {\n         check_assist(\n-            extract_struct_from_enum,\n+            extract_struct_from_enum_variant,\n             \"enum A { <|>One(u32) }\",\n             r#\"struct One(pub u32);\n \n@@ -243,7 +246,7 @@ enum A { One(One) }\"#,\n     #[test]\n     fn test_extract_struct_pub_visibility() {\n         check_assist(\n-            extract_struct_from_enum,\n+            extract_struct_from_enum_variant,\n             \"pub enum A { <|>One(u32, u32) }\",\n             r#\"pub struct One(pub u32, pub u32);\n \n@@ -254,7 +257,7 @@ pub enum A { One(One) }\"#,\n     #[test]\n     fn test_extract_struct_with_complex_imports() {\n         check_assist(\n-            extract_struct_from_enum,\n+            extract_struct_from_enum_variant,\n             r#\"mod my_mod {\n     fn another_fn() {\n         let m = my_other_mod::MyEnum::MyField(1, 1);\n@@ -305,7 +308,7 @@ fn another_fn() {\n     fn check_not_applicable(ra_fixture: &str) {\n         let fixture =\n             format!(\"//- main.rs crate:main deps:core\\n{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);\n-        check_assist_not_applicable(extract_struct_from_enum, &fixture)\n+        check_assist_not_applicable(extract_struct_from_enum_variant, &fixture)\n     }\n \n     #[test]"}, {"sha": "185428bd5593c75c4dc241e0707c7bdedd36fdc5", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=a6d3c77bdd998499941a6aceccde85f7a94b804d", "patch": "@@ -156,7 +156,7 @@ mod handlers {\n             change_return_type_to_result::change_return_type_to_result,\n             change_visibility::change_visibility,\n             early_return::convert_to_guarded_return,\n-            extract_struct_from_enum_variant::extract_struct_from_enum,\n+            extract_struct_from_enum_variant::extract_struct_from_enum_variant,\n             fill_match_arms::fill_match_arms,\n             fix_visibility::fix_visibility,\n             flip_binexpr::flip_binexpr,"}, {"sha": "40a223727c1fa580dd3e15acd7df94581cf856e4", "filename": "crates/ra_assists/src/tests/generated.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d3c77bdd998499941a6aceccde85f7a94b804d/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=a6d3c77bdd998499941a6aceccde85f7a94b804d", "patch": "@@ -337,6 +337,21 @@ fn main() {\n     )\n }\n \n+#[test]\n+fn doctest_extract_struct_from_enum_variant() {\n+    check_doc_test(\n+        \"extract_struct_from_enum_variant\",\n+        r#####\"\n+enum A { <|>One(u32, u32) }\n+\"#####,\n+        r#####\"\n+struct One(pub u32, pub u32);\n+\n+enum A { One(One) }\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_fill_match_arms() {\n     check_doc_test("}]}