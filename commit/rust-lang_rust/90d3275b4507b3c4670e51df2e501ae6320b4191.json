{"sha": "90d3275b4507b3c4670e51df2e501ae6320b4191", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZDMyNzViNDUwN2IzYzQ2NzBlNTFkZjJlNTAxYWU2MzIwYjQxOTE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-18T18:09:12Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-18T23:14:43Z"}, "message": "lintcheck: parallelize\n\nUse rayon to figure out the threadcount and half that for core count.\nFor each core, create a target dir that is used.\nOtherwise, when running multiple clippys with the same target-dir, cargo would lock the dir and prevent parallelism.\nThis way we can run multiple clippys at the same time (on root crates) but we sacrifice cache-hits (when we already cargo-checked crate-deps).", "tree": {"sha": "35fd036aa9971afc1d44ca9423c410a3d3464b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35fd036aa9971afc1d44ca9423c410a3d3464b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90d3275b4507b3c4670e51df2e501ae6320b4191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90d3275b4507b3c4670e51df2e501ae6320b4191", "html_url": "https://github.com/rust-lang/rust/commit/90d3275b4507b3c4670e51df2e501ae6320b4191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90d3275b4507b3c4670e51df2e501ae6320b4191/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f815ecd00d1862b94297eb5225a688db8ebf4ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f815ecd00d1862b94297eb5225a688db8ebf4ad", "html_url": "https://github.com/rust-lang/rust/commit/2f815ecd00d1862b94297eb5225a688db8ebf4ad"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "ebf157b80acf1c3aaf8236d145cb16c1977a22a5", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90d3275b4507b3c4670e51df2e501ae6320b4191/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/90d3275b4507b3c4670e51df2e501ae6320b4191/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=90d3275b4507b3c4670e51df2e501ae6320b4191", "patch": "@@ -19,8 +19,9 @@ shell-escape = \"0.1\"\n tar = { version = \"0.4.30\", optional = true }\n toml = { version = \"0.5\", optional = true }\n ureq = { version = \"2.0.0-rc3\", optional = true }\n+rayon = { version = \"1.5.0\", optional = true }\n walkdir = \"2\"\n \n [features]\n-lintcheck = [\"flate2\", \"serde_json\", \"tar\", \"toml\", \"ureq\", \"serde\", \"fs_extra\"]\n+lintcheck = [\"flate2\", \"serde_json\", \"tar\", \"toml\", \"ureq\", \"serde\", \"fs_extra\", \"rayon\"]\n deny-warnings = []"}, {"sha": "92cb43079f8868609b1a83088359190916f9d0a8", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/90d3275b4507b3c4670e51df2e501ae6320b4191/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90d3275b4507b3c4670e51df2e501ae6320b4191/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=90d3275b4507b3c4670e51df2e501ae6320b4191", "patch": "@@ -11,9 +11,11 @@ use crate::clippy_project_root;\n \n use std::collections::HashMap;\n use std::process::Command;\n+use std::sync::atomic::{AtomicUsize, Ordering};\n use std::{env, fmt, fs::write, path::PathBuf};\n \n use clap::ArgMatches;\n+use rayon::prelude::*;\n use serde::{Deserialize, Serialize};\n use serde_json::Value;\n \n@@ -215,11 +217,20 @@ impl CrateSource {\n impl Crate {\n     /// Run `cargo clippy` on the `Crate` and collect and return all the lint warnings that clippy\n     /// issued\n-    fn run_clippy_lints(&self, cargo_clippy_path: &PathBuf) -> Vec<ClippyWarning> {\n-        println!(\"Linting {} {}...\", &self.name, &self.version);\n+    fn run_clippy_lints(\n+        &self,\n+        cargo_clippy_path: &PathBuf,\n+        target_dir_index: &AtomicUsize,\n+        thread_limit: usize,\n+    ) -> Vec<ClippyWarning> {\n+        // advance the atomic index by one\n+        let idx = target_dir_index.fetch_add(1, Ordering::SeqCst);\n+        // \"loop\" the index within 0..thread_limit\n+        let idx = idx % thread_limit;\n+        println!(\"Linting {} {} in target dir {:?}\", &self.name, &self.version, idx);\n         let cargo_clippy_path = std::fs::canonicalize(cargo_clippy_path).unwrap();\n \n-        let shared_target_dir = clippy_project_root().join(\"target/lintcheck/shared_target_dir/\");\n+        let shared_target_dir = clippy_project_root().join(\"target/lintcheck/shared_target_dir\");\n \n         let mut args = vec![\"--\", \"--message-format=json\", \"--\", \"--cap-lints=warn\"];\n \n@@ -232,7 +243,8 @@ impl Crate {\n         }\n \n         let all_output = std::process::Command::new(&cargo_clippy_path)\n-            .env(\"CARGO_TARGET_DIR\", shared_target_dir)\n+            // use the looping index to create individual target dirs\n+            .env(\"CARGO_TARGET_DIR\", shared_target_dir.join(format!(\"_{:?}\", idx)))\n             // lint warnings will look like this:\n             // src/cargo/ops/cargo_compile.rs:127:35: warning: usage of `FromIterator::from_iter`\n             .args(&args)\n@@ -454,15 +466,27 @@ pub fn run(clap_config: &ArgMatches) {\n             .into_iter()\n             .map(|krate| krate.download_and_extract())\n             .filter(|krate| krate.name == only_one_crate)\n-            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n+            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path, &AtomicUsize::new(0), 1))\n             .flatten()\n             .collect()\n     } else {\n+        let counter = std::sync::atomic::AtomicUsize::new(0);\n+\n+        // Ask rayon for cpu (actually thread)count.\n+        // Use one target dir for each cpu so that we can run N clippys in parallel.\n+        // We need to use different target dirs because cargo would lock them for a single build otherwise,\n+        // killing the parallelism. However this also means that deps will only be reused half/a\n+        // quarter of the time which might result in a longer wall clock runtime\n+\n+        // Rayon seems to return thread count so half that for core count\n+\n+        let num_threads: usize = rayon::current_num_threads() / 2;\n+\n         // check all crates (default)\n         crates\n-            .into_iter()\n+            .into_par_iter()\n             .map(|krate| krate.download_and_extract())\n-            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n+            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path, &counter, num_threads))\n             .flatten()\n             .collect()\n     };"}, {"sha": "b8618256c89cf2fe60db9f581c8806caf6836c0a", "filename": "lintcheck-logs/lintcheck_crates_logs.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90d3275b4507b3c4670e51df2e501ae6320b4191/lintcheck-logs%2Flintcheck_crates_logs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/90d3275b4507b3c4670e51df2e501ae6320b4191/lintcheck-logs%2Flintcheck_crates_logs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flintcheck_crates_logs.txt?ref=90d3275b4507b3c4670e51df2e501ae6320b4191", "patch": "@@ -1,4 +1,4 @@\n-clippy 0.1.52 (bed115d55 2021-02-15)\n+clippy 0.1.52 (2f815ecd0 2021-02-18)\n \n cargo-0.49.0/build.rs:1:null clippy::cargo_common_metadata \"package `cargo` is missing `package.categories` metadata\"\n cargo-0.49.0/build.rs:1:null clippy::cargo_common_metadata \"package `cargo` is missing `package.keywords` metadata\""}]}