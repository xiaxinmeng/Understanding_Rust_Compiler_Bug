{"sha": "08f28f94479d09ae5f7d2cf1d3c018b714751c35", "node_id": "C_kwDOAAsO6NoAKDA4ZjI4Zjk0NDc5ZDA5YWU1ZjdkMmNmMWQzYzAxOGI3MTQ3NTFjMzU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-20T03:52:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-23T20:33:02Z"}, "message": "Use `List::empty()` instead of `mk_substs(&[])`.", "tree": {"sha": "96caebadb102273cb989c2208c1de98661ae56d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96caebadb102273cb989c2208c1de98661ae56d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08f28f94479d09ae5f7d2cf1d3c018b714751c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08f28f94479d09ae5f7d2cf1d3c018b714751c35", "html_url": "https://github.com/rust-lang/rust/commit/08f28f94479d09ae5f7d2cf1d3c018b714751c35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08f28f94479d09ae5f7d2cf1d3c018b714751c35/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09f5b6a6b82f785165c68546d323011fad052c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c09f5b6a6b82f785165c68546d323011fad052c0", "html_url": "https://github.com/rust-lang/rust/commit/c09f5b6a6b82f785165c68546d323011fad052c0"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "457006319afb8c315bc37ebf378fd23cb31bf5c1", "filename": "compiler/rustc_codegen_gcc/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcontext.rs?ref=08f28f94479d09ae5f7d2cf1d3c018b714751c35", "patch": "@@ -383,7 +383,7 @@ impl<'gcc, 'tcx> MiscMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                     tcx,\n                     ty::ParamEnv::reveal_all(),\n                     def_id,\n-                    tcx.mk_substs(&[]),\n+                    ty::List::empty(),\n                 )\n                 .unwrap().unwrap(),\n             ),"}, {"sha": "3d29968d5d688c9f63a309db2131f5cc8c122e7a", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=08f28f94479d09ae5f7d2cf1d3c018b714751c35", "patch": "@@ -520,7 +520,7 @@ impl<'ll, 'tcx> MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let tcx = self.tcx;\n         let llfn = match tcx.lang_items().eh_personality() {\n             Some(def_id) if !wants_msvc_seh(self.sess()) => self.get_fn_addr(\n-                ty::Instance::resolve(tcx, ty::ParamEnv::reveal_all(), def_id, tcx.mk_substs(&[]))\n+                ty::Instance::resolve(tcx, ty::ParamEnv::reveal_all(), def_id, ty::List::empty())\n                     .unwrap()\n                     .unwrap(),\n             ),"}, {"sha": "59540aaf18fc5b778af3386cf16ae4e05c73fc68", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=08f28f94479d09ae5f7d2cf1d3c018b714751c35", "patch": "@@ -677,21 +677,21 @@ impl<'tcx> LateLintPass<'tcx> for MissingCopyImplementations {\n                     return;\n                 }\n                 let def = cx.tcx.adt_def(item.owner_id);\n-                (def, cx.tcx.mk_adt(def, cx.tcx.mk_substs(&[])))\n+                (def, cx.tcx.mk_adt(def, ty::List::empty()))\n             }\n             hir::ItemKind::Union(_, ref ast_generics) => {\n                 if !ast_generics.params.is_empty() {\n                     return;\n                 }\n                 let def = cx.tcx.adt_def(item.owner_id);\n-                (def, cx.tcx.mk_adt(def, cx.tcx.mk_substs(&[])))\n+                (def, cx.tcx.mk_adt(def, ty::List::empty()))\n             }\n             hir::ItemKind::Enum(_, ref ast_generics) => {\n                 if !ast_generics.params.is_empty() {\n                     return;\n                 }\n                 let def = cx.tcx.adt_def(item.owner_id);\n-                (def, cx.tcx.mk_adt(def, cx.tcx.mk_substs(&[])))\n+                (def, cx.tcx.mk_adt(def, ty::List::empty()))\n             }\n             _ => return,\n         };"}, {"sha": "0d78c6135b3369c3011a1e16b0c1c5c1c083cd0b", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f28f94479d09ae5f7d2cf1d3c018b714751c35/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=08f28f94479d09ae5f7d2cf1d3c018b714751c35", "patch": "@@ -2530,7 +2530,7 @@ impl<'tcx> ConstantKind<'tcx> {\n         {\n             InternalSubsts::identity_for_item(tcx, parent_did.to_def_id())\n         } else {\n-            tcx.mk_substs(&[])\n+            List::empty()\n         };\n         debug!(?parent_substs);\n "}, {"sha": "bb8890dcaf988876713c5457019850de2b5c64c7", "filename": "src/tools/clippy/clippy_utils/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08f28f94479d09ae5f7d2cf1d3c018b714751c35/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f28f94479d09ae5f7d2cf1d3c018b714751c35/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs?ref=08f28f94479d09ae5f7d2cf1d3c018b714751c35", "patch": "@@ -237,7 +237,7 @@ pub fn constant<'tcx>(\n         typeck_results,\n         param_env: lcx.param_env,\n         needed_resolution: false,\n-        substs: lcx.tcx.mk_substs(&[]),\n+        substs: ty::List::empty(),\n     };\n     cx.expr(e).map(|cst| (cst, cx.needed_resolution))\n }\n@@ -306,7 +306,7 @@ pub fn constant_context<'a, 'tcx>(\n         typeck_results,\n         param_env: lcx.param_env,\n         needed_resolution: false,\n-        substs: lcx.tcx.mk_substs(&[]),\n+        substs: ty::List::empty(),\n     }\n }\n "}]}