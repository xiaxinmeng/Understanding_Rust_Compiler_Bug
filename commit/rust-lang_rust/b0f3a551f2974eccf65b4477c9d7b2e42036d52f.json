{"sha": "b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "node_id": "C_kwDOAAsO6NoAKGIwZjNhNTUxZjI5NzRlY2NmNjViNDQ3N2M5ZDdiMmU0MjAzNmQ1MmY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-02T02:17:44Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-03T05:54:13Z"}, "message": "Shrink suggestion span of argument mismatch error", "tree": {"sha": "770446913e6afcd5455fb7d2a005bd0af75ba037", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/770446913e6afcd5455fb7d2a005bd0af75ba037"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "html_url": "https://github.com/rust-lang/rust/commit/b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0209485578807b8084127f12d57771300edff87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0209485578807b8084127f12d57771300edff87a", "html_url": "https://github.com/rust-lang/rust/commit/0209485578807b8084127f12d57771300edff87a"}], "stats": {"total": 239, "additions": 125, "deletions": 114}, "files": [{"sha": "ce0e59d062266ffccfb1d15d2a3e4229350ceb9e", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -1056,11 +1056,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         };\n         if let Some(suggestion_text) = suggestion_text {\n             let source_map = self.sess().source_map();\n-            let mut suggestion = format!(\n-                \"{}(\",\n-                source_map.span_to_snippet(full_call_span).unwrap_or_else(|_| fn_def_id\n-                    .map_or(\"\".to_string(), |fn_def_id| tcx.item_name(fn_def_id).to_string()))\n-            );\n+            let (mut suggestion, suggestion_span) =\n+                if let Some(call_span) = full_call_span.find_ancestor_inside(error_span) {\n+                    (\"(\".to_string(), call_span.shrink_to_hi().to(error_span.shrink_to_hi()))\n+                } else {\n+                    (\n+                        format!(\n+                            \"{}(\",\n+                            source_map.span_to_snippet(full_call_span).unwrap_or_else(|_| {\n+                                fn_def_id.map_or(\"\".to_string(), |fn_def_id| {\n+                                    tcx.item_name(fn_def_id).to_string()\n+                                })\n+                            })\n+                        ),\n+                        error_span,\n+                    )\n+                };\n             let mut needs_comma = false;\n             for (expected_idx, provided_idx) in matched_inputs.iter_enumerated() {\n                 if needs_comma {\n@@ -1088,7 +1099,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             suggestion += \")\";\n             err.span_suggestion_verbose(\n-                error_span,\n+                suggestion_span,\n                 &suggestion_text,\n                 suggestion,\n                 Applicability::HasPlaceholders,"}, {"sha": "b118ce1bd0ea95e433aa1a4e7824b87d0a632bb5", "filename": "src/test/ui/argument-suggestions/basic.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -26,7 +26,7 @@ LL | fn extra() {}\n help: remove the extra argument\n    |\n LL |     extra();\n-   |     ~~~~~~~\n+   |          ~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/basic.rs:22:5\n@@ -42,7 +42,7 @@ LL | fn missing(_i: u32) {}\n help: provide the argument\n    |\n LL |     missing(/* u32 */);\n-   |     ~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/basic.rs:23:5\n@@ -60,7 +60,7 @@ LL | fn swapped(_i: u32, _s: &str) {}\n help: swap these arguments\n    |\n LL |     swapped(1, \"\");\n-   |     ~~~~~~~~~~~~~~\n+   |            ~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/basic.rs:24:5\n@@ -79,7 +79,7 @@ LL | fn permuted(_x: X, _y: Y, _z: Z) {}\n help: reorder these arguments\n    |\n LL |     permuted(X {}, Y {}, Z {});\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/basic.rs:27:5\n@@ -95,7 +95,7 @@ LL |     let closure = |x| x;\n help: provide the argument\n    |\n LL |     closure(/* value */);\n-   |     ~~~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "205a852983a3b0379213d9bcb084cea03231b696", "filename": "src/test/ui/argument-suggestions/complex.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn complex(_i: u32, _s: &str, _e: E, _f: F, _g: G, _x: X, _y: Y, _z: Z ) {}\n help: did you mean\n    |\n LL |   complex(/* u32 */, &\"\", /* E */, F::X2, G{}, X {}, Y {}, Z {});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "0580e53c510af5ed3f8d4b0af8d0ba22a7c9d0be", "filename": "src/test/ui/argument-suggestions/exotic-calls.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn foo<T: Fn()>(t: T) {\n help: remove the extra argument\n    |\n LL |     t();\n-   |     ~~~\n+   |      ~~\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:7:5\n@@ -28,7 +28,7 @@ LL | fn bar(t: impl Fn()) {\n help: remove the extra argument\n    |\n LL |     t();\n-   |     ~~~\n+   |      ~~\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:16:5\n@@ -44,7 +44,7 @@ LL | fn baz() -> impl Fn() {\n help: remove the extra argument\n    |\n LL |     baz()()\n-   |\n+   |          ~~\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:22:5\n@@ -60,7 +60,7 @@ LL |     let x = || {};\n help: remove the extra argument\n    |\n LL |     x();\n-   |     ~~~\n+   |      ~~\n \n error: aborting due to 4 previous errors\n "}, {"sha": "48787b0c352cee8e3ccb2f42a2120bbfb475f994", "filename": "src/test/ui/argument-suggestions/extra_arguments.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn empty() {}\n help: remove the extra argument\n    |\n LL |   empty();\n-   |   ~~~~~~~\n+   |        ~~\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:9:3\n@@ -28,7 +28,7 @@ LL | fn one_arg(_a: i32) {}\n help: remove the extra argument\n    |\n LL |   one_arg(1);\n-   |   ~~~~~~~~~~\n+   |          ~~~\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:10:3\n@@ -44,7 +44,7 @@ LL | fn one_arg(_a: i32) {}\n help: remove the extra argument\n    |\n LL |   one_arg(1);\n-   |   ~~~~~~~~~~\n+   |          ~~~\n \n error[E0061]: this function takes 1 argument but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:11:3\n@@ -62,7 +62,7 @@ LL | fn one_arg(_a: i32) {}\n help: remove the extra arguments\n    |\n LL |   one_arg(1);\n-   |   ~~~~~~~~~~\n+   |          ~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:13:3\n@@ -78,7 +78,7 @@ LL | fn two_arg_same(_a: i32, _b: i32) {}\n help: remove the extra argument\n    |\n LL |   two_arg_same(1, 1);\n-   |   ~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:14:3\n@@ -94,7 +94,7 @@ LL | fn two_arg_same(_a: i32, _b: i32) {}\n help: remove the extra argument\n    |\n LL |   two_arg_same(1, 1);\n-   |   ~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:16:3\n@@ -110,7 +110,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra argument\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:17:3\n@@ -126,7 +126,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra argument\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 4 arguments were supplied\n   --> $DIR/extra_arguments.rs:18:3\n@@ -144,7 +144,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra arguments\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 4 arguments were supplied\n   --> $DIR/extra_arguments.rs:19:3\n@@ -162,7 +162,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra arguments\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:22:3\n@@ -178,7 +178,7 @@ LL | fn two_arg_same(_a: i32, _b: i32) {}\n help: remove the extra argument\n    |\n LL |   two_arg_same(1, 1);\n-   |   ~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:23:3\n@@ -194,7 +194,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra argument\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:24:3\n@@ -213,7 +213,7 @@ LL | fn two_arg_same(_a: i32, _b: i32) {}\n help: remove the extra argument\n    |\n LL |   two_arg_same(1, 1);\n-   |   ~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:30:3\n@@ -232,7 +232,7 @@ LL | fn two_arg_diff(_a: i32, _b: &str) {}\n help: remove the extra argument\n    |\n LL |   two_arg_diff(1, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~\n+   |               ~~~~~~~\n \n error: aborting due to 14 previous errors\n "}, {"sha": "4d18b97c98be1ade8db2c463fad3fc38bd5a9bf2", "filename": "src/test/ui/argument-suggestions/issue-96638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -14,7 +14,7 @@ LL | fn f(_: usize, _: &usize, _: usize) {}\n help: provide the argument\n    |\n LL |     f(/* usize */, &x, /* usize */);\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "de221ba1fe18078b8b99b979944a8acab579f2fc", "filename": "src/test/ui/argument-suggestions/issue-97197.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | pub fn g(a1: (), a2: bool, a3: bool, a4: bool, a5: bool, a6: ()) -> () {}\n help: provide the arguments\n    |\n LL |     g((), /* bool */, /* bool */, /* bool */, /* bool */, ());\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "caa50f14b43e1e56da9df7e49a7f3016558532ad", "filename": "src/test/ui/argument-suggestions/issue-97484.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -20,7 +20,7 @@ LL |     foo(&&A, B, C, D, &E, F, G);\n help: remove the extra arguments\n    |\n LL |     foo(&&A, D, /* &E */, G);\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~\n+   |        ~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "f64a83ab710674baad01999f437823940b1ff90a", "filename": "src/test/ui/argument-suggestions/issue-98894.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98894.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98894.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98894.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     (|_, ()| ())(if true {} else {return;});\n help: provide the argument\n    |\n LL |     (|_, ()| ())(if true {} else {return;}, ());\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "f2c47d353efad2b3636eef5462866affae985254", "filename": "src/test/ui/argument-suggestions/issue-98897.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-98897.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     (|_, ()| ())([return, ()]);\n help: provide the argument\n    |\n LL |     (|_, ()| ())([return, ()], ());\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                 ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "bcf36e37cdccfdbf372713a39f535cf5a814e46a", "filename": "src/test/ui/argument-suggestions/issue-99482.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-99482.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-99482.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-99482.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     let f = |_: (), f: fn()| f;\n help: provide the argument\n    |\n LL |     let _f = f((), main);\n-   |              ~~~~~~~~~~~\n+   |               ~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "ba9ece040bec7a8a4e5494ef1f5fd0e8f19e9832", "filename": "src/test/ui/argument-suggestions/missing_arguments.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn one_arg(_a: i32) {}\n help: provide the argument\n    |\n LL |   one_arg(/* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:14:3\n@@ -28,7 +28,7 @@ LL | fn two_same(_a: i32, _b: i32) {}\n help: provide the arguments\n    |\n LL |   two_same(/* i32 */, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:15:3\n@@ -44,7 +44,7 @@ LL | fn two_same(_a: i32, _b: i32) {}\n help: provide the argument\n    |\n LL |   two_same(1, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:16:3\n@@ -60,7 +60,7 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n help: provide the arguments\n    |\n LL |   two_diff(/* i32 */, /* f32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:17:3\n@@ -76,7 +76,7 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n help: provide the argument\n    |\n LL |   two_diff(1, /* f32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:18:3\n@@ -92,7 +92,7 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n help: provide the argument\n    |\n LL |   two_diff(/* i32 */, 1.0);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:21:3\n@@ -108,7 +108,7 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n help: provide the arguments\n    |\n LL |   three_same(/* i32 */, /* i32 */, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:22:3\n@@ -124,7 +124,7 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n help: provide the arguments\n    |\n LL |   three_same(1, /* i32 */, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:23:3\n@@ -140,7 +140,7 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n help: provide the argument\n    |\n LL |   three_same(1, 1, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:26:3\n@@ -156,7 +156,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the argument\n    |\n LL |   three_diff(/* i32 */, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:27:3\n@@ -172,7 +172,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the argument\n    |\n LL |   three_diff(1, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:28:3\n@@ -188,7 +188,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the argument\n    |\n LL |   three_diff(1, 1.0, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:29:3\n@@ -204,7 +204,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the arguments\n    |\n LL |   three_diff(/* i32 */, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:30:3\n@@ -223,7 +223,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the arguments\n    |\n LL |   three_diff(/* i32 */, 1.0, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:31:3\n@@ -239,7 +239,7 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n help: provide the arguments\n    |\n LL |   three_diff(1, /* f32 */, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 4 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:34:3\n@@ -255,7 +255,7 @@ LL | fn four_repeated(_a: i32, _b: f32, _c: f32, _d: &str) {}\n help: provide the arguments\n    |\n LL |   four_repeated(/* i32 */, /* f32 */, /* f32 */, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 4 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:35:3\n@@ -271,7 +271,7 @@ LL | fn four_repeated(_a: i32, _b: f32, _c: f32, _d: &str) {}\n help: provide the arguments\n    |\n LL |   four_repeated(1, /* f32 */, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 5 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:38:3\n@@ -287,7 +287,7 @@ LL | fn complex(_a: i32, _b: f32, _c: i32, _d: f32, _e: &str) {}\n help: provide the arguments\n    |\n LL |   complex(/* i32 */, /* f32 */, /* i32 */, /* f32 */, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 5 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:39:3\n@@ -303,7 +303,7 @@ LL | fn complex(_a: i32, _b: f32, _c: i32, _d: f32, _e: &str) {}\n help: provide the arguments\n    |\n LL |   complex(1, /* f32 */, /* i32 */, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 19 previous errors\n "}, {"sha": "8c525db1ac66ca03528993dad5a055d464a3520d", "filename": "src/test/ui/argument-suggestions/mixed_cases.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -14,7 +14,7 @@ LL | fn two_args(_a: i32, _b: f32) {}\n help: remove the extra argument\n    |\n LL |   two_args(1, /* f32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> $DIR/mixed_cases.rs:11:3\n@@ -33,7 +33,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: did you mean\n    |\n LL |   three_args(1, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/mixed_cases.rs:14:3\n@@ -52,7 +52,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: provide the argument\n    |\n LL |   three_args(1, /* f32 */, /* &str */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/mixed_cases.rs:17:3\n@@ -70,7 +70,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: did you mean\n    |\n LL |   three_args(1, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/mixed_cases.rs:20:3\n@@ -89,7 +89,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: swap these arguments\n    |\n LL |   three_args(1, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/mixed_cases.rs:23:3\n@@ -109,7 +109,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: did you mean\n    |\n LL |   three_args(1, /* f32 */, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "655807a7f382f41f2b471537e074963233a4733e", "filename": "src/test/ui/argument-suggestions/permuted_arguments.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fpermuted_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fpermuted_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fpermuted_arguments.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -15,7 +15,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: reorder these arguments\n    |\n LL |   three_args(1, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/permuted_arguments.rs:12:3\n@@ -36,7 +36,7 @@ LL | fn many_args(_a: i32, _b: f32, _c: &str, _d: X, _e: Y) {}\n help: reorder these arguments\n    |\n LL |   many_args(1, 1.0, \"\", X {}, Y {});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "dabf5e952b26bd754bf94b374c719701d71afb1a", "filename": "src/test/ui/argument-suggestions/swapped_arguments.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fswapped_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fargument-suggestions%2Fswapped_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fswapped_arguments.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -14,7 +14,7 @@ LL | fn two_args(_a: i32, _b: f32) {}\n help: swap these arguments\n    |\n LL |   two_args(1, 1.0);\n-   |   ~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/swapped_arguments.rs:9:3\n@@ -32,7 +32,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: swap these arguments\n    |\n LL |   three_args(1, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/swapped_arguments.rs:10:3\n@@ -50,7 +50,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: swap these arguments\n    |\n LL |   three_args(1, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/swapped_arguments.rs:11:3\n@@ -68,7 +68,7 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n help: swap these arguments\n    |\n LL |   three_args(1, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/swapped_arguments.rs:13:3\n@@ -88,7 +88,7 @@ LL | fn four_args(_a: i32, _b: f32, _c: &str, _d: X) {}\n help: did you mean\n    |\n LL |   four_args(1, 1.0, \"\", X {});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 5 previous errors\n "}, {"sha": "2ffb80f7ef6149c34dd547484318f72eaccbd3d1", "filename": "src/test/ui/c-variadic/variadic-ffi-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -18,7 +18,7 @@ LL |     fn foo(f: isize, x: u8, ...);\n help: provide the arguments\n    |\n LL |         foo(/* isize */, /* u8 */);\n-   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0060]: this function takes at least 2 arguments but 1 argument was supplied\n   --> $DIR/variadic-ffi-1.rs:21:9\n@@ -34,7 +34,7 @@ LL |     fn foo(f: isize, x: u8, ...);\n help: provide the argument\n    |\n LL |         foo(1, /* u8 */);\n-   |         ~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/variadic-ffi-1.rs:23:56"}, {"sha": "bea226f09dcb9186bba62843099c1aac454b889e", "filename": "src/test/ui/error-codes/E0057.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     let f = |x| x * 3;\n help: provide the argument\n    |\n LL |     let a = f(/* value */);\n-   |             ~~~~~~~~~~~~~~\n+   |              ~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/E0057.rs:5:13\n@@ -28,7 +28,7 @@ LL |     let f = |x| x * 3;\n help: remove the extra argument\n    |\n LL |     let c = f(2);\n-   |             ~~~~\n+   |              ~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "934a18d896dc6a0ab7a8517c831a0d63fbe25de1", "filename": "src/test/ui/error-codes/E0060.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     fn printf(_: *const u8, ...) -> u32;\n help: provide the argument\n    |\n LL |     unsafe { printf(/* *const u8 */); }\n-   |              ~~~~~~~~~~~~~~~~~~~~~~~\n+   |                    ~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "fa4ccbe6677c033c63957e41c6086965f3d85b08", "filename": "src/test/ui/error-codes/E0061.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn f(a: u16, b: &str) {}\n help: provide the argument\n    |\n LL |     f(0, /* &str */);\n-   |     ~~~~~~~~~~~~~~~~\n+   |      ~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/E0061.rs:9:5\n@@ -28,7 +28,7 @@ LL | fn f2(a: u16) {}\n help: provide the argument\n    |\n LL |     f2(/* u16 */);\n-   |     ~~~~~~~~~~~~~\n+   |       ~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "09e25f4dc9668eb226a675d56e09e3c637c945a2", "filename": "src/test/ui/higher-rank-trait-bounds/issue-58451.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-58451.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-58451.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-58451.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn f<I>(i: I)\n help: provide the argument\n    |\n LL |     f(&[f(/* value */)]);\n-   |         ~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "76645645464ed37eb3999091a2d55dc01fcca994", "filename": "src/test/ui/issues/issue-16939.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-16939.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-16939.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16939.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn _foo<F: Fn()> (f: F) {\n help: remove the extra argument\n    |\n LL |     |t| f();\n-   |         ~~~\n+   |          ~~\n \n error: aborting due to previous error\n "}, {"sha": "767fdd5caf06a2136b4dbe907d8044d3285e0cde", "filename": "src/test/ui/issues/issue-18819.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -23,7 +23,7 @@ LL |     print_x(&X);\n help: provide the argument\n    |\n LL |     print_x(/* &dyn Foo<Item = bool> */, /* &str */);\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "bb45fa083381bf75ba6fafe0daf2fbd5d11187cf", "filename": "src/test/ui/issues/issue-4935.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-4935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fissues%2Fissue-4935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4935.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn foo(a: usize) {}\n help: remove the extra argument\n    |\n LL | fn main() { foo(5) }\n-   |             ~~~~~~\n+   |                ~~~\n \n error: aborting due to previous error\n "}, {"sha": "98d39d614d0e9647e98036a3e0e357f13dd0e691", "filename": "src/test/ui/lifetimes/issue-26638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Flifetimes%2Fissue-26638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Flifetimes%2Fissue-26638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-26638.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -54,7 +54,7 @@ LL | fn parse_type_2(iter: fn(&u8)->&u8) -> &str { iter() }\n help: provide the argument\n    |\n LL | fn parse_type_2(iter: fn(&u8)->&u8) -> &str { iter(/* &u8 */) }\n-   |                                               ~~~~~~~~~~~~~~~\n+   |                                                   ~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/issue-26638.rs:5:47"}, {"sha": "a4ffb864dad9cb3848684ef77fa542e1ef4a386d", "filename": "src/test/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     fn zero(self) -> Foo { self }\n help: remove the extra argument\n    |\n LL |     x.zero()\n-   |       ~~~~~~\n+   |           ~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/method-call-err-msg.rs:14:7\n@@ -28,7 +28,7 @@ LL |     fn one(self, _: isize) -> Foo { self }\n help: provide the argument\n    |\n LL |      .one(/* isize */)\n-   |       ~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/method-call-err-msg.rs:15:7\n@@ -44,7 +44,7 @@ LL |     fn two(self, _: isize, _: isize) -> Foo { self }\n help: provide the argument\n    |\n LL |      .two(0, /* isize */);\n-   |       ~~~~~~~~~~~~~~~~~~~\n+   |          ~~~~~~~~~~~~~~~~\n \n error[E0599]: `Foo` is not an iterator\n   --> $DIR/method-call-err-msg.rs:19:7\n@@ -84,7 +84,7 @@ LL |     fn three<T>(self, _: T, _: T, _: T) -> Foo { self }\n help: provide the arguments\n    |\n LL |     y.three::<usize>(/* usize */, /* usize */, /* usize */);\n-   |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 5 previous errors\n "}, {"sha": "fb3597aa853008dad5a56443e7ba40c6c43f187a", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -26,7 +26,7 @@ LL | impl FnMut<(isize,)> for S {\n help: provide the argument\n    |\n LL |     let ans = s(/* isize */);\n-   |               ~~~~~~~~~~~~~~\n+   |                ~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/overloaded-calls-bad.rs:31:15\n@@ -44,7 +44,7 @@ LL | impl FnMut<(isize,)> for S {\n help: remove the extra argument\n    |\n LL |     let ans = s(/* isize */);\n-   |               ~~~~~~~~~~~~~~\n+   |                ~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8b2dafb4e1d034443dfcdef861cb4047240fc25b", "filename": "src/test/ui/not-enough-arguments.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn foo(a: isize, b: isize, c: isize, d:isize) {\n help: provide the argument\n    |\n LL |   foo(1, 2, 3, /* isize */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |      ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 6 arguments but 3 arguments were supplied\n   --> $DIR/not-enough-arguments.rs:29:3\n@@ -40,7 +40,7 @@ LL |     f: i32,\n help: provide the arguments\n    |\n LL |   bar(1, 2, 3, /* i32 */, /* i32 */, /* i32 */);\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6d5d5bad9fe1a342f67b5b581035203fccda800d", "filename": "src/test/ui/resolve/resolve-primitive-fallback.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -34,7 +34,7 @@ LL | pub const fn size_of<T>() -> usize {\n help: remove the extra argument\n    |\n LL |     std::mem::size_of();\n-   |     ~~~~~~~~~~~~~~~~~~~\n+   |                      ~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "15179954adcd927da4b352383e350edafca24ca1", "filename": "src/test/ui/span/issue-34264.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -64,7 +64,7 @@ LL | fn foo(Option<i32>, String) {}\n help: remove the extra argument\n    |\n LL |     foo(Some(42), 2);\n-   |     ~~~~~~~~~~~~~~~~\n+   |        ~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/issue-34264.rs:8:13\n@@ -94,7 +94,7 @@ LL | fn bar(x, y: usize) {}\n help: remove the extra argument\n    |\n LL |     bar(1, 2);\n-   |     ~~~~~~~~~\n+   |        ~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "b76a3ab307ae458bc091ec8a5b0f22099e82a962", "filename": "src/test/ui/span/missing-unit-argument.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: provide the argument\n    |\n LL |     let _: Result<(), String> = Ok(());\n-   |                                 ~~~~~~\n+   |                                   ~~~~\n \n error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n   --> $DIR/missing-unit-argument.rs:12:5\n@@ -28,7 +28,7 @@ LL | fn foo(():(), ():()) {}\n help: provide the arguments\n    |\n LL |     foo((), ());\n-   |     ~~~~~~~~~~~\n+   |        ~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing-unit-argument.rs:13:5\n@@ -44,7 +44,7 @@ LL | fn foo(():(), ():()) {}\n help: provide the argument\n    |\n LL |     foo((), ());\n-   |     ~~~~~~~~~~~\n+   |        ~~~~~~~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/missing-unit-argument.rs:14:5\n@@ -60,7 +60,7 @@ LL | fn bar(():()) {}\n help: provide the argument\n    |\n LL |     bar(());\n-   |     ~~~~~~~\n+   |        ~~~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/missing-unit-argument.rs:15:7\n@@ -76,7 +76,7 @@ LL |     fn baz(self, (): ()) { }\n help: provide the argument\n    |\n LL |     S.baz(());\n-   |       ~~~~~~~\n+   |          ~~~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/missing-unit-argument.rs:16:7\n@@ -92,7 +92,7 @@ LL |     fn generic<T>(self, _: T) { }\n help: provide the argument\n    |\n LL |     S.generic::<()>(());\n-   |       ~~~~~~~~~~~~~~~~~\n+   |                    ~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "0a91c442d2c6f0e45dd21bc6d8212c9dc8b7265e", "filename": "src/test/ui/suggestions/args-instead-of-tuple-errors.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -19,7 +19,7 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: remove the extra argument\n    |\n LL |     let _: Option<(i32, bool)> = Some(/* (i32, bool) */);\n-   |                                  ~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                      ~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:8:5\n@@ -42,7 +42,7 @@ LL | fn int_bool(_: (i32, bool)) {\n help: remove the extra argument\n    |\n LL |     int_bool(/* (i32, bool) */);\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:11:28\n@@ -58,7 +58,7 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: provide the argument\n    |\n LL |     let _: Option<(i8,)> = Some(/* (i8,) */);\n-   |                            ~~~~~~~~~~~~~~~~~\n+   |                                ~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/args-instead-of-tuple-errors.rs:14:34"}, {"sha": "20f9e5259a4e2c050427970dec7b033a07d699ba", "filename": "src/test/ui/suggestions/args-instead-of-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -44,7 +44,7 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: provide the argument\n    |\n LL |     let _: Option<()> = Some(());\n-   |                         ~~~~~~~~\n+   |                             ~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/args-instead-of-tuple.rs:14:34"}, {"sha": "f3a547fa238273c4cdd26ec2a6f21bba0c75b673", "filename": "src/test/ui/tuple/wrong_argument_ice-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -19,7 +19,7 @@ LL |     pub fn push(&mut self, value: T) {\n help: remove the extra argument\n    |\n LL |         groups.push(/* (Vec<String>, Vec<Process>) */);\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "a2686ab9440e8b5e2587c335979e639ebc1da2ac", "filename": "src/test/ui/tuple/wrong_argument_ice-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -16,7 +16,7 @@ LL |     (|| {})(|| {\n help: remove the extra argument\n    |\n LL |     (|| {})();\n-   |     ~~~~~~~~~\n+   |            ~~\n \n error: aborting due to previous error\n "}, {"sha": "eb58ee73ca21b4f3eb8f9d9ce83c2a6b71fff389", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-priority-higher-than-other-inherent.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     V(u8)\n help: provide the argument\n    |\n LL |     <E>::V(/* u8 */);\n-   |     ~~~~~~~~~~~~~~~~\n+   |           ~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/enum-variant-priority-higher-than-other-inherent.rs:22:17"}, {"sha": "de578ca93ed59b827d3ab48bb0086eb619d77c03", "filename": "src/test/ui/type/type-ascription-instead-of-initializer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -21,7 +21,7 @@ LL |     pub fn with_capacity(capacity: usize) -> Self {\n help: remove the extra argument\n    |\n LL |     let x: Vec::with_capacity(10);\n-   |            ~~~~~~~~~~~~~~~~~~~~~~\n+   |                              ~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b734bcd4eb0485cda5c519c6bd479fd1b2cad936", "filename": "src/test/ui/typeck/remove-extra-argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fremove-extra-argument.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL | fn l(_a: Vec<u8>) {}\n help: remove the extra argument\n    |\n LL |     l(vec![])\n-   |\n+   |      ~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "ea94bcbc2903058476c441be1bab37ab14807f52", "filename": "src/test/ui/typeck/struct-enum-wrong-args.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f3a551f2974eccf65b4477c9d7b2e42036d52f/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr?ref=b0f3a551f2974eccf65b4477c9d7b2e42036d52f", "patch": "@@ -12,7 +12,7 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: remove the extra argument\n    |\n LL |     let _ = Some(3);\n-   |             ~~~~~~~\n+   |                 ~~~\n \n error[E0061]: this enum variant takes 1 argument but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:7:13\n@@ -30,7 +30,7 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: remove the extra arguments\n    |\n LL |     let _ = Ok(3);\n-   |             ~~~~~\n+   |               ~~~\n \n error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:8:13\n@@ -46,7 +46,7 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n help: provide the argument\n    |\n LL |     let _ = Ok(/* value */);\n-   |             ~~~~~~~~~~~~~~~\n+   |               ~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 1 argument but 0 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:9:13\n@@ -62,7 +62,7 @@ LL | struct Wrapper(i32);\n help: provide the argument\n    |\n LL |     let _ = Wrapper(/* i32 */);\n-   |             ~~~~~~~~~~~~~~~~~~\n+   |                    ~~~~~~~~~~~\n \n error[E0061]: this struct takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:10:13\n@@ -78,7 +78,7 @@ LL | struct Wrapper(i32);\n help: remove the extra argument\n    |\n LL |     let _ = Wrapper(5);\n-   |             ~~~~~~~~~~\n+   |                    ~~~\n \n error[E0061]: this struct takes 2 arguments but 0 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:11:13\n@@ -94,7 +94,7 @@ LL | struct DoubleWrapper(i32, i32);\n help: provide the arguments\n    |\n LL |     let _ = DoubleWrapper(/* i32 */, /* i32 */);\n-   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                          ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 2 arguments but 1 argument was supplied\n   --> $DIR/struct-enum-wrong-args.rs:12:13\n@@ -110,7 +110,7 @@ LL | struct DoubleWrapper(i32, i32);\n help: provide the argument\n    |\n LL |     let _ = DoubleWrapper(5, /* i32 */);\n-   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                          ~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 2 arguments but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:13:13\n@@ -126,7 +126,7 @@ LL | struct DoubleWrapper(i32, i32);\n help: remove the extra argument\n    |\n LL |     let _ = DoubleWrapper(5, 2);\n-   |             ~~~~~~~~~~~~~~~~~~~\n+   |                          ~~~~~~\n \n error: aborting due to 8 previous errors\n "}]}