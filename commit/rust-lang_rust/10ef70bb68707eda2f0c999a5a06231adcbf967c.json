{"sha": "10ef70bb68707eda2f0c999a5a06231adcbf967c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZWY3MGJiNjg3MDdlZGEyZjBjOTk5YTVhMDYyMzFhZGNiZjk2N2M=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T21:45:46Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:49Z"}, "message": "Update stability_index, all_crate_nums and features_query", "tree": {"sha": "5752eb639a763bcd45bd321d145a04607c8a4915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5752eb639a763bcd45bd321d145a04607c8a4915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10ef70bb68707eda2f0c999a5a06231adcbf967c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10ef70bb68707eda2f0c999a5a06231adcbf967c", "html_url": "https://github.com/rust-lang/rust/commit/10ef70bb68707eda2f0c999a5a06231adcbf967c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10ef70bb68707eda2f0c999a5a06231adcbf967c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dcc60b08171c1c10379595df8b6a379b0007c0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dcc60b08171c1c10379595df8b6a379b0007c0b", "html_url": "https://github.com/rust-lang/rust/commit/9dcc60b08171c1c10379595df8b6a379b0007c0b"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "b9126b619cd66b9a3bbcda8f99ad11b939d61a85", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=10ef70bb68707eda2f0c999a5a06231adcbf967c", "patch": "@@ -79,6 +79,8 @@ macro_rules! arena_types {\n             [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n             [decode] generic_predicates: rustc::ty::GenericPredicates<'tcx>,\n             [few] lint_levels: rustc::lint::LintLevelMap,\n+            [few] stability_index: rustc::middle::stability::Index<'tcx>,\n+            [few] features: syntax::feature_gate::Features,\n         ], $tcx);\n     )\n }"}, {"sha": "759ee41f0e0b84d152362d525891871e8a5103ac", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=10ef70bb68707eda2f0c999a5a06231adcbf967c", "patch": "@@ -838,11 +838,11 @@ rustc_queries! {\n             eval_always\n         }\n \n-        query stability_index(_: CrateNum) -> Lrc<stability::Index<'tcx>> {\n+        query stability_index(_: CrateNum) -> &'tcx stability::Index<'tcx> {\n             eval_always\n             desc { \"calculating the stability index for the local crate\" }\n         }\n-        query all_crate_nums(_: CrateNum) -> Lrc<Vec<CrateNum>> {\n+        query all_crate_nums(_: CrateNum) -> &'tcx [CrateNum] {\n             eval_always\n             desc { \"fetching all foreign CrateNum instances\" }\n         }\n@@ -1062,7 +1062,7 @@ rustc_queries! {\n             desc { |tcx| \"estimating size for `{}`\", tcx.def_path_str(def.def_id()) }\n         }\n \n-        query features_query(_: CrateNum) -> Lrc<feature_gate::Features> {\n+        query features_query(_: CrateNum) -> &'tcx feature_gate::Features {\n             eval_always\n             desc { \"looking up enabled feature gates\" }\n         }"}, {"sha": "ad5fb53370a3a278289706e1cb423eadd6abf50d", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=10ef70bb68707eda2f0c999a5a06231adcbf967c", "patch": "@@ -1420,15 +1420,15 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         else { None }\n     }\n \n-    pub fn stability(self) -> Lrc<stability::Index<'tcx>> {\n+    pub fn stability(self) -> &'gcx stability::Index<'gcx> {\n         self.stability_index(LOCAL_CRATE)\n     }\n \n-    pub fn crates(self) -> Lrc<Vec<CrateNum>> {\n+    pub fn crates(self) -> &'gcx [CrateNum] {\n         self.all_crate_nums(LOCAL_CRATE)\n     }\n \n-    pub fn features(self) -> Lrc<feature_gate::Features> {\n+    pub fn features(self) -> &'gcx feature_gate::Features {\n         self.features_query(LOCAL_CRATE)\n     }\n \n@@ -3083,7 +3083,7 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n \n     providers.stability_index = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(stability::Index::new(tcx))\n+        tcx.arena.alloc(stability::Index::new(tcx))\n     };\n     providers.lookup_stability = |tcx, id| {\n         assert_eq!(id.krate, LOCAL_CRATE);\n@@ -3101,7 +3101,7 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n     };\n     providers.all_crate_nums = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(tcx.cstore.crates_untracked())\n+        tcx.arena.alloc_slice(&tcx.cstore.crates_untracked())\n     };\n     providers.postorder_cnums = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n@@ -3113,7 +3113,7 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n     };\n     providers.features_query = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(tcx.sess.features_untracked().clone())\n+        tcx.arena.alloc(tcx.sess.features_untracked().clone())\n     };\n     providers.is_panic_runtime = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);"}, {"sha": "bdb29006a0e0f3141ed3ed6c521f3aa3095b379d", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ef70bb68707eda2f0c999a5a06231adcbf967c/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=10ef70bb68707eda2f0c999a5a06231adcbf967c", "patch": "@@ -322,7 +322,7 @@ pub fn provide<'tcx>(providers: &mut Providers<'tcx>) {\n             // which is to say, its not deterministic in general. But\n             // we believe that libstd is consistently assigned crate\n             // num 1, so it should be enough to resolve #46112.\n-            let mut crates: Vec<CrateNum> = (*tcx.crates()).clone();\n+            let mut crates: Vec<CrateNum> = (*tcx.crates()).to_owned();\n             crates.sort();\n \n             for &cnum in crates.iter() {"}]}