{"sha": "542d56ea91f403c5d7eb9511848509e5ddb8e05e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MmQ1NmVhOTFmNDAzYzVkN2ViOTUxMTg0ODUwOWU1ZGRiOGUwNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T03:11:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T03:11:48Z"}, "message": "Auto merge of #27615 - GuillaumeGomez:send_sync, r=huonw\n\nPart of #22709.\r\ncc @Veedrac\r\n\r\nr? @bluss", "tree": {"sha": "9c381964f45cd941dc48d642e0e1af240638cff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c381964f45cd941dc48d642e0e1af240638cff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/542d56ea91f403c5d7eb9511848509e5ddb8e05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/542d56ea91f403c5d7eb9511848509e5ddb8e05e", "html_url": "https://github.com/rust-lang/rust/commit/542d56ea91f403c5d7eb9511848509e5ddb8e05e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/542d56ea91f403c5d7eb9511848509e5ddb8e05e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b0aa5e420643d454cf141263652a8bcb6a35f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b0aa5e420643d454cf141263652a8bcb6a35f1", "html_url": "https://github.com/rust-lang/rust/commit/58b0aa5e420643d454cf141263652a8bcb6a35f1"}, {"sha": "f2f4a5c8621811c81d98f567e2505017aea94bce", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f4a5c8621811c81d98f567e2505017aea94bce", "html_url": "https://github.com/rust-lang/rust/commit/f2f4a5c8621811c81d98f567e2505017aea94bce"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "8a822057bbff7f037bed645f334bdf4a076e40ae", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/542d56ea91f403c5d7eb9511848509e5ddb8e05e/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/542d56ea91f403c5d7eb9511848509e5ddb8e05e/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=542d56ea91f403c5d7eb9511848509e5ddb8e05e", "patch": "@@ -818,6 +818,9 @@ pub struct Iter<'a, K: 'a, V: 'a> {\n     elems_left: usize,\n }\n \n+unsafe impl<'a, K: Sync, V: Sync> Sync for Iter<'a, K, V> {}\n+unsafe impl<'a, K: Sync, V: Sync> Send for Iter<'a, K, V> {}\n+\n // FIXME(#19839) Remove in favor of `#[derive(Clone)]`\n impl<'a, K, V> Clone for Iter<'a, K, V> {\n     fn clone(&self) -> Iter<'a, K, V> {\n@@ -835,18 +838,29 @@ pub struct IterMut<'a, K: 'a, V: 'a> {\n     elems_left: usize,\n }\n \n+unsafe impl<'a, K: Sync, V: Sync> Sync for IterMut<'a, K, V> {}\n+// Both K: Sync and K: Send are correct for IterMut's Send impl,\n+// but Send is the more useful bound\n+unsafe impl<'a, K: Send, V: Send> Send for IterMut<'a, K, V> {}\n+\n /// Iterator over the entries in a table, consuming the table.\n pub struct IntoIter<K, V> {\n     table: RawTable<K, V>,\n     iter: RawBuckets<'static, K, V>\n }\n \n+unsafe impl<K: Sync, V: Sync> Sync for IntoIter<K, V> {}\n+unsafe impl<K: Send, V: Send> Send for IntoIter<K, V> {}\n+\n /// Iterator over the entries in a table, clearing the table.\n pub struct Drain<'a, K: 'a, V: 'a> {\n     table: &'a mut RawTable<K, V>,\n     iter: RawBuckets<'static, K, V>,\n }\n \n+unsafe impl<'a, K: Sync, V: Sync> Sync for Drain<'a, K, V> {}\n+unsafe impl<'a, K: Send, V: Send> Send for Drain<'a, K, V> {}\n+\n impl<'a, K, V> Iterator for Iter<'a, K, V> {\n     type Item = (&'a K, &'a V);\n "}, {"sha": "cdfc4d32027bb1220f96e5a1d9a13fc2d7675411", "filename": "src/test/run-pass/sync-send-iterators-in-libcollections.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/542d56ea91f403c5d7eb9511848509e5ddb8e05e/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/542d56ea91f403c5d7eb9511848509e5ddb8e05e/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs?ref=542d56ea91f403c5d7eb9511848509e5ddb8e05e", "patch": "@@ -25,6 +25,8 @@ use collections::String;\n use collections::Vec;\n use collections::VecDeque;\n use collections::VecMap;\n+use std::collections::HashMap;\n+use std::collections::HashSet;\n \n use collections::Bound::Included;\n use collections::enum_set::CLike;\n@@ -77,6 +79,13 @@ fn main() {\n     is_sync_send!(BTreeSet::<usize>::new(), intersection(&BTreeSet::<usize>::new()));\n     is_sync_send!(BTreeSet::<usize>::new(), union(&BTreeSet::<usize>::new()));\n \n+    all_sync_send!(HashMap::<usize, usize>::new(), iter, iter_mut, drain, into_iter, keys, values);\n+    all_sync_send!(HashSet::<usize>::new(), iter, drain, into_iter);\n+    is_sync_send!(HashSet::<usize>::new(), difference(&HashSet::<usize>::new()));\n+    is_sync_send!(HashSet::<usize>::new(), symmetric_difference(&HashSet::<usize>::new()));\n+    is_sync_send!(HashSet::<usize>::new(), intersection(&HashSet::<usize>::new()));\n+    is_sync_send!(HashSet::<usize>::new(), union(&HashSet::<usize>::new()));\n+\n     all_sync_send!(LinkedList::<usize>::new(), iter, iter_mut, into_iter);\n \n     #[derive(Copy, Clone)]"}]}