{"sha": "d0a23e613d7b932ee7e29489afce15580fa5cb66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYTIzZTYxM2Q3YjkzMmVlN2UyOTQ4OWFmY2UxNTU4MGZhNWNiNjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-24T15:23:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-26T07:56:54Z"}, "message": "ensure we intern all promoteds as InternKind::Promoted", "tree": {"sha": "74f1af2017bc8c6279f727ec5e1a8d2ddead4d3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74f1af2017bc8c6279f727ec5e1a8d2ddead4d3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0a23e613d7b932ee7e29489afce15580fa5cb66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a23e613d7b932ee7e29489afce15580fa5cb66", "html_url": "https://github.com/rust-lang/rust/commit/d0a23e613d7b932ee7e29489afce15580fa5cb66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0a23e613d7b932ee7e29489afce15580fa5cb66/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cd97cad6e5f85bed455f505f330ead1d5cd8432", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd97cad6e5f85bed455f505f330ead1d5cd8432", "html_url": "https://github.com/rust-lang/rust/commit/1cd97cad6e5f85bed455f505f330ead1d5cd8432"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "2c92c8e2a68d64a064e5d327eb478d5cf0c78a92", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d0a23e613d7b932ee7e29489afce15580fa5cb66/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a23e613d7b932ee7e29489afce15580fa5cb66/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=d0a23e613d7b932ee7e29489afce15580fa5cb66", "patch": "@@ -59,16 +59,13 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     ecx.run()?;\n \n     // Intern the result\n-    // FIXME: since the DefId of a promoted is the DefId of its owner, this\n-    // means that promoteds in statics are actually interned like statics!\n-    // However, this is also currently crucial because we promote mutable\n-    // non-empty slices in statics to extend their lifetime, and this\n-    // ensures that they are put into a mutable allocation.\n-    // For other kinds of promoteds in statics (like array initializers), this is rather silly.\n-    let intern_kind = match tcx.static_mutability(cid.instance.def_id()) {\n-        Some(m) => InternKind::Static(m),\n-        None if cid.promoted.is_some() => InternKind::Promoted,\n-        _ => InternKind::Constant,\n+    let intern_kind = if cid.promoted.is_some() {\n+        InternKind::Promoted\n+    } else {\n+        match tcx.static_mutability(cid.instance.def_id()) {\n+            Some(m) => InternKind::Static(m),\n+            None => InternKind::Constant,\n+        }\n     };\n     intern_const_alloc_recursive(\n         ecx,"}]}