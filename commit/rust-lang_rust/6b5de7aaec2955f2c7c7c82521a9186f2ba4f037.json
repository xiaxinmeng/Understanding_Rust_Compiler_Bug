{"sha": "6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNWRlN2FhZWMyOTU1ZjJjN2M3YzgyNTIxYTkxODZmMmJhNGYwMzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-02T19:46:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-02T19:46:10Z"}, "message": "Auto merge of #84754 - GuillaumeGomez:toggle-migration, r=jsha\n\nMigrate trait and impl blocks' toggles into\n\nPart of #83332\n\nAfter this, I think only the \"global\" doc comment will be used as JS toggle. Once this PR is merged, I check what remains and remove them.\n\nThere is one change that this PR brings:\n\n![Screenshot from 2021-04-30 15-39-04](https://user-images.githubusercontent.com/3050060/116713412-0f9ce200-a9d5-11eb-979c-2e7a73d16706.png)\n![Screenshot from 2021-04-30 15-39-07](https://user-images.githubusercontent.com/3050060/116713415-10357880-a9d5-11eb-9868-1ba9e5ebf65e.png)\n\nAs you can see, I had to move the \"undocumented\" items below, they're not mixed with the others anymore. Unfortunately, I don't see a way to keep the current appearance without JS. As a a reminder, currently it looks like this:\n\n![Screenshot from 2021-04-30 15-39-12](https://user-images.githubusercontent.com/3050060/116713547-31966480-a9d5-11eb-90bb-686042eefeec.png)\n![Screenshot from 2021-04-30 15-39-15](https://user-images.githubusercontent.com/3050060/116713549-322efb00-a9d5-11eb-94a9-cfea073120db.png)\n\nr? `@jsha`", "tree": {"sha": "d9c6bbabdb3bbac42693c3090826455f487d36c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9c6bbabdb3bbac42693c3090826455f487d36c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "html_url": "https://github.com/rust-lang/rust/commit/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e10cbc33c1fd2fcd446cab5cdcc57332d154721c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e10cbc33c1fd2fcd446cab5cdcc57332d154721c", "html_url": "https://github.com/rust-lang/rust/commit/e10cbc33c1fd2fcd446cab5cdcc57332d154721c"}, {"sha": "0d52eb9de81a5fa8989edfd3db8fcc82c49c29fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d52eb9de81a5fa8989edfd3db8fcc82c49c29fc", "html_url": "https://github.com/rust-lang/rust/commit/0d52eb9de81a5fa8989edfd3db8fcc82c49c29fc"}], "stats": {"total": 418, "additions": 186, "deletions": 232}, "files": [{"sha": "a556fdba2f3f623dcb24cb7dd1c66033c3a5c001", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -678,10 +678,6 @@ impl ItemKind {\n             | KeywordItem(_) => [].iter(),\n         }\n     }\n-\n-    crate fn is_type_alias(&self) -> bool {\n-        matches!(self, ItemKind::TypedefItem(..) | ItemKind::AssocTypeItem(..))\n-    }\n }\n \n #[derive(Clone, Debug)]"}, {"sha": "811c4233386029bdc3ef173eb225f4143ee9c68d", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 89, "deletions": 98, "changes": 187, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -508,23 +508,16 @@ fn document(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, parent: Option\n     if let Some(ref name) = item.name {\n         info!(\"Documenting {}\", name);\n     }\n-    document_item_info(w, cx, item, false, parent);\n-    document_full(w, item, cx, false);\n+    document_item_info(w, cx, item, parent);\n+    document_full(w, item, cx);\n }\n \n /// Render md_text as markdown.\n-fn render_markdown(\n-    w: &mut Buffer,\n-    cx: &Context<'_>,\n-    md_text: &str,\n-    links: Vec<RenderedLink>,\n-    is_hidden: bool,\n-) {\n+fn render_markdown(w: &mut Buffer, cx: &Context<'_>, md_text: &str, links: Vec<RenderedLink>) {\n     let mut ids = cx.id_map.borrow_mut();\n     write!(\n         w,\n-        \"<div class=\\\"docblock{}\\\">{}</div>\",\n-        if is_hidden { \" hidden\" } else { \"\" },\n+        \"<div class=\\\"docblock\\\">{}</div>\",\n         Markdown(\n             md_text,\n             &links,\n@@ -544,11 +537,10 @@ fn document_short(\n     item: &clean::Item,\n     cx: &Context<'_>,\n     link: AssocItemLink<'_>,\n-    is_hidden: bool,\n     parent: &clean::Item,\n     show_def_docs: bool,\n ) {\n-    document_item_info(w, cx, item, is_hidden, Some(parent));\n+    document_item_info(w, cx, item, Some(parent));\n     if !show_def_docs {\n         return;\n     }\n@@ -565,19 +557,14 @@ fn document_short(\n             }\n         }\n \n-        write!(\n-            w,\n-            \"<div class='docblock{}'>{}</div>\",\n-            if is_hidden { \" hidden\" } else { \"\" },\n-            summary_html,\n-        );\n+        write!(w, \"<div class='docblock'>{}</div>\", summary_html,);\n     }\n }\n \n-fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, is_hidden: bool) {\n+fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>) {\n     if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n-        render_markdown(w, cx, &s, item.links(cx), is_hidden);\n+        render_markdown(w, cx, &s, item.links(cx));\n     }\n }\n \n@@ -590,16 +577,11 @@ fn document_item_info(\n     w: &mut Buffer,\n     cx: &Context<'_>,\n     item: &clean::Item,\n-    is_hidden: bool,\n     parent: Option<&clean::Item>,\n ) {\n     let item_infos = short_item_info(item, cx, parent);\n     if !item_infos.is_empty() {\n-        if is_hidden {\n-            w.write_str(\"<div class=\\\"item-info hidden\\\">\");\n-        } else {\n-            w.write_str(\"<div class=\\\"item-info\\\">\");\n-        }\n+        w.write_str(\"<div class=\\\"item-info\\\">\");\n         for info in item_infos {\n             w.write_str(&info);\n         }\n@@ -1282,8 +1264,12 @@ fn render_impl(\n     let trait_ = i.trait_did_full(cache).map(|did| &traits[&did]);\n     let mut close_tags = String::new();\n \n+    // For trait implementations, the `interesting` output contains all methods that have doc\n+    // comments, and the `boring` output contains all methods that do not. The distinction is\n+    // used to allow hiding the boring methods.\n     fn doc_impl_item(\n-        w: &mut Buffer,\n+        boring: &mut Buffer,\n+        interesting: &mut Buffer,\n         cx: &Context<'_>,\n         item: &clean::Item,\n         parent: &clean::Item,\n@@ -1306,15 +1292,46 @@ fn render_impl(\n             }\n         };\n \n-        let (is_hidden, extra_class) =\n-            if (trait_.is_none() || item.doc_value().is_some() || item.kind.is_type_alias())\n-                && !is_default_item\n-            {\n-                (false, \"\")\n-            } else {\n-                (true, \" hidden\")\n-            };\n         let in_trait_class = if trait_.is_some() { \" trait-impl\" } else { \"\" };\n+\n+        let mut doc_buffer = Buffer::empty_from(boring);\n+        let mut info_buffer = Buffer::empty_from(boring);\n+        let mut short_documented = true;\n+\n+        if render_method_item {\n+            if !is_default_item {\n+                if let Some(t) = trait_ {\n+                    // The trait item may have been stripped so we might not\n+                    // find any documentation or stability for it.\n+                    if let Some(it) = t.items.iter().find(|i| i.name == item.name) {\n+                        // We need the stability of the item from the trait\n+                        // because impls can't have a stability.\n+                        if item.doc_value().is_some() {\n+                            document_item_info(&mut info_buffer, cx, it, Some(parent));\n+                            document_full(&mut doc_buffer, item, cx);\n+                            short_documented = false;\n+                        } else {\n+                            // In case the item isn't documented,\n+                            // provide short documentation from the trait.\n+                            document_short(&mut doc_buffer, it, cx, link, parent, show_def_docs);\n+                        }\n+                    }\n+                } else {\n+                    document_item_info(&mut info_buffer, cx, item, Some(parent));\n+                    if show_def_docs {\n+                        document_full(&mut doc_buffer, item, cx);\n+                        short_documented = false;\n+                    }\n+                }\n+            } else {\n+                document_short(&mut doc_buffer, item, cx, link, parent, show_def_docs);\n+            }\n+        }\n+        let w = if short_documented && trait_.is_some() { interesting } else { boring };\n+\n+        if !doc_buffer.is_empty() {\n+            w.write_str(\"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n+        }\n         match *item.kind {\n             clean::MethodItem(..) | clean::TyMethodItem(_) => {\n                 // Only render when the method is not static or we allow static methods\n@@ -1327,11 +1344,7 @@ fn render_impl(\n                             })\n                         })\n                         .map(|item| format!(\"{}.{}\", item.type_(), name));\n-                    write!(\n-                        w,\n-                        \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\">\",\n-                        id, item_type, extra_class, in_trait_class,\n-                    );\n+                    write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class,);\n                     w.write_str(\"<code>\");\n                     render_assoc_item(\n                         w,\n@@ -1356,11 +1369,7 @@ fn render_impl(\n             clean::TypedefItem(ref tydef, _) => {\n                 let source_id = format!(\"{}.{}\", ItemType::AssocType, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(\n-                    w,\n-                    \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\",\n-                    id, item_type, extra_class, in_trait_class\n-                );\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n                 assoc_type(\n                     w,\n                     item,\n@@ -1377,11 +1386,7 @@ fn render_impl(\n             clean::AssocConstItem(ref ty, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(\n-                    w,\n-                    \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\",\n-                    id, item_type, extra_class, in_trait_class\n-                );\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n                 assoc_const(\n                     w,\n                     item,\n@@ -1406,11 +1411,7 @@ fn render_impl(\n             clean::AssocTypeItem(ref bounds, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(\n-                    w,\n-                    \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\",\n-                    id, item_type, extra_class, in_trait_class\n-                );\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n                 assoc_type(\n                     w,\n                     item,\n@@ -1428,38 +1429,20 @@ fn render_impl(\n             _ => panic!(\"can't make docs for trait item with name {:?}\", item.name),\n         }\n \n-        if render_method_item {\n-            if !is_default_item {\n-                if let Some(t) = trait_ {\n-                    // The trait item may have been stripped so we might not\n-                    // find any documentation or stability for it.\n-                    if let Some(it) = t.items.iter().find(|i| i.name == item.name) {\n-                        // We need the stability of the item from the trait\n-                        // because impls can't have a stability.\n-                        if item.doc_value().is_some() {\n-                            document_item_info(w, cx, it, is_hidden, Some(parent));\n-                            document_full(w, item, cx, is_hidden);\n-                        } else {\n-                            // In case the item isn't documented,\n-                            // provide short documentation from the trait.\n-                            document_short(w, it, cx, link, is_hidden, parent, show_def_docs);\n-                        }\n-                    }\n-                } else {\n-                    document_item_info(w, cx, item, is_hidden, Some(parent));\n-                    if show_def_docs {\n-                        document_full(w, item, cx, is_hidden);\n-                    }\n-                }\n-            } else {\n-                document_short(w, item, cx, link, is_hidden, parent, show_def_docs);\n-            }\n+        w.push_buffer(info_buffer);\n+        if !doc_buffer.is_empty() {\n+            w.write_str(\"</summary>\");\n+            w.push_buffer(doc_buffer);\n+            w.push_str(\"</details>\");\n         }\n     }\n \n     let mut impl_items = Buffer::empty_from(w);\n+    let mut default_impl_items = Buffer::empty_from(w);\n+\n     for trait_item in &i.inner_impl().items {\n         doc_impl_item(\n+            &mut default_impl_items,\n             &mut impl_items,\n             cx,\n             trait_item,\n@@ -1475,7 +1458,8 @@ fn render_impl(\n     }\n \n     fn render_default_items(\n-        w: &mut Buffer,\n+        boring: &mut Buffer,\n+        interesting: &mut Buffer,\n         cx: &Context<'_>,\n         t: &clean::Trait,\n         i: &clean::Impl,\n@@ -1495,7 +1479,8 @@ fn render_impl(\n             let assoc_link = AssocItemLink::GotoSource(did, &provided_methods);\n \n             doc_impl_item(\n-                w,\n+                boring,\n+                interesting,\n                 cx,\n                 trait_item,\n                 parent,\n@@ -1517,6 +1502,7 @@ fn render_impl(\n     if show_default_items {\n         if let Some(t) = trait_ {\n             render_default_items(\n+                &mut default_impl_items,\n                 &mut impl_items,\n                 cx,\n                 &t.trait_,\n@@ -1529,10 +1515,14 @@ fn render_impl(\n             );\n         }\n     }\n-    let details_str = if impl_items.is_empty() {\n-        \"\"\n-    } else {\n-        \"<details class=\\\"rustdoc-toggle implementors-toggle\\\" open><summary>\"\n+    let toggled = !impl_items.is_empty() || !default_impl_items.is_empty();\n+    let open_details = |close_tags: &mut String| {\n+        if toggled {\n+            close_tags.insert_str(0, \"</details>\");\n+            \"<details class=\\\"rustdoc-toggle implementors-toggle\\\" open><summary>\"\n+        } else {\n+            \"\"\n+        }\n     };\n     if render_mode == RenderMode::Normal {\n         let id = cx.derive_id(match i.inner_impl().trait_ {\n@@ -1554,11 +1544,10 @@ fn render_impl(\n             write!(\n                 w,\n                 \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">\",\n-                details_str, id, aliases\n+                open_details(&mut close_tags),\n+                id,\n+                aliases\n             );\n-            if !impl_items.is_empty() {\n-                close_tags.insert_str(0, \"</details>\");\n-            }\n             write!(w, \"{}\", i.inner_impl().print(use_absolute, cx));\n             if show_def_docs {\n                 for it in &i.inner_impl().items {\n@@ -1582,14 +1571,11 @@ fn render_impl(\n             write!(\n                 w,\n                 \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">{}</code>\",\n-                details_str,\n+                open_details(&mut close_tags),\n                 id,\n                 aliases,\n                 i.inner_impl().print(false, cx)\n             );\n-            if !impl_items.is_empty() {\n-                close_tags.insert_str(0, \"</details>\");\n-            }\n         }\n         write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n         render_stability_since_raw(\n@@ -1600,7 +1586,7 @@ fn render_impl(\n             outer_const_version,\n         );\n         write_srclink(cx, &i.impl_item, w);\n-        if impl_items.is_empty() {\n+        if !toggled {\n             w.write_str(\"</h3>\");\n         } else {\n             w.write_str(\"</h3></summary>\");\n@@ -1629,8 +1615,13 @@ fn render_impl(\n             );\n         }\n     }\n-    if !impl_items.is_empty() {\n+    if toggled {\n         w.write_str(\"<div class=\\\"impl-items\\\">\");\n+        w.push_buffer(default_impl_items);\n+        if trait_.is_some() && !impl_items.is_empty() {\n+            w.write_str(\"<details class=\\\"undocumented\\\"><summary></summary>\");\n+            close_tags.insert_str(0, \"</details>\");\n+        }\n         w.push_buffer(impl_items);\n         close_tags.insert_str(0, \"</div>\");\n     }"}, {"sha": "1bc5362592494d7b70048af27823ff5232535e4f", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 10, "deletions": 87, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -1156,8 +1156,6 @@ function hideThemeButtonState() {\n         var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n         var hideImplementors = getSettingValue(\"auto-collapse-implementors\") !== \"false\";\n         var hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n-        var hideTraitImplementations =\n-            getSettingValue(\"auto-hide-trait-implementations\") !== \"false\";\n \n         var impl_list = document.getElementById(\"trait-implementations-list\");\n         if (impl_list !== null) {\n@@ -1173,100 +1171,25 @@ function hideThemeButtonState() {\n             });\n         }\n \n-        var func = function(e) {\n-            var next = e.nextElementSibling;\n-            if (next && hasClass(next, \"item-info\")) {\n-              next = next.nextElementSibling;\n-            }\n-            if (!next) {\n-                return;\n-            }\n-            if (hasClass(next, \"docblock\")) {\n-                var newToggle = toggle.cloneNode(true);\n-                insertAfter(newToggle, e.childNodes[e.childNodes.length - 1]);\n-                if (hideMethodDocs === true && hasClass(e, \"method\") === true) {\n-                    collapseDocs(newToggle, \"hide\");\n+        if (hideMethodDocs === true) {\n+            onEachLazy(document.getElementsByClassName(\"method\"), function(e) {\n+                var toggle = e.parentNode;\n+                if (toggle) {\n+                    toggle = toggle.parentNode;\n                 }\n-            }\n-        };\n-\n-        var funcImpl = function(e) {\n-            var next = e.nextElementSibling;\n-            if (next && hasClass(next, \"item-info\")) {\n-                next = next.nextElementSibling;\n-            }\n-            if (next && hasClass(next, \"docblock\")) {\n-                next = next.nextElementSibling;\n-            }\n-            if (!next) {\n-                return;\n-            }\n-        };\n+                if (toggle && toggle.tagName === \"DETAILS\") {\n+                    toggle.open = false;\n+                }\n+            });\n+        }\n \n-        onEachLazy(document.getElementsByClassName(\"method\"), func);\n-        onEachLazy(document.getElementsByClassName(\"associatedconstant\"), func);\n-        var impl_call = function() {};\n         onEachLazy(document.getElementsByTagName(\"details\"), function (e) {\n             var showLargeItem = !hideLargeItemContents && hasClass(e, \"type-contents-toggle\");\n             var showImplementor = !hideImplementors && hasClass(e, \"implementors-toggle\");\n             if (showLargeItem || showImplementor) {\n                 e.open = true;\n             }\n         });\n-        if (hideMethodDocs === true) {\n-            impl_call = function(e, newToggle) {\n-                if (e.id.match(/^impl(?:-\\d+)?$/) === null) {\n-                    // Automatically minimize all non-inherent impls\n-                    if (hasClass(e, \"impl\") === true) {\n-                        collapseDocs(newToggle, \"hide\");\n-                    }\n-                }\n-            };\n-        }\n-        var newToggle = document.createElement(\"a\");\n-        newToggle.href = \"javascript:void(0)\";\n-        newToggle.className = \"collapse-toggle hidden-default collapsed\";\n-        newToggle.innerHTML = \"[<span class=\\\"inner\\\">\" + labelForToggleButton(true) +\n-                              \"</span>] Show hidden undocumented items\";\n-        function toggleClicked() {\n-            if (hasClass(this, \"collapsed\")) {\n-                removeClass(this, \"collapsed\");\n-                onEachLazy(this.parentNode.getElementsByClassName(\"hidden\"), function(x) {\n-                    if (hasClass(x, \"content\") === false) {\n-                        removeClass(x, \"hidden\");\n-                        addClass(x, \"x\");\n-                    }\n-                }, true);\n-                this.innerHTML = \"[<span class=\\\"inner\\\">\" + labelForToggleButton(false) +\n-                                 \"</span>] Hide undocumented items\";\n-            } else {\n-                addClass(this, \"collapsed\");\n-                onEachLazy(this.parentNode.getElementsByClassName(\"x\"), function(x) {\n-                    if (hasClass(x, \"content\") === false) {\n-                        addClass(x, \"hidden\");\n-                        removeClass(x, \"x\");\n-                    }\n-                }, true);\n-                this.innerHTML = \"[<span class=\\\"inner\\\">\" + labelForToggleButton(true) +\n-                                 \"</span>] Show hidden undocumented items\";\n-            }\n-        }\n-        onEachLazy(document.getElementsByClassName(\"impl-items\"), function(e) {\n-            onEachLazy(e.getElementsByClassName(\"associatedconstant\"), func);\n-            // We transform the DOM iterator into a vec of DOM elements to prevent performance\n-            // issues on webkit browsers.\n-            var hiddenElems = Array.prototype.slice.call(e.getElementsByClassName(\"hidden\"));\n-            var needToggle = hiddenElems.some(function(hiddenElem) {\n-                return hasClass(hiddenElem, \"content\") === false &&\n-                    hasClass(hiddenElem, \"docblock\") === false;\n-            });\n-            if (needToggle === true) {\n-                var inner_toggle = newToggle.cloneNode(true);\n-                inner_toggle.onclick = toggleClicked;\n-                e.insertBefore(inner_toggle, e.firstChild);\n-                impl_call(e.previousSibling, inner_toggle);\n-            }\n-        });\n \n         var currentType = document.getElementsByClassName(\"type-decl\")[0];\n         var className = null;"}, {"sha": "d3fe59e8d0b01d7b97d3073aacec4a9f3196da5d", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 39, "deletions": 10, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -110,7 +110,7 @@ h3 {\n \tfont-size: 1.3em;\n }\n h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod):not(.notable),\n-h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant):not(.associatedtype) {\n \tfont-weight: 500;\n \tmargin: 20px 0 15px 0;\n \tpadding-bottom: 6px;\n@@ -128,33 +128,35 @@ h1.fqn > .in-band > a:hover {\n \ttext-decoration: underline;\n }\n h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant):not(.associatedtype) {\n \tborder-bottom: 1px solid;\n }\n-h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant {\n+h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant, h4.associatedtype {\n \tflex-basis: 100%;\n \tfont-weight: 600;\n \tmargin-top: 16px;\n \tmargin-bottom: 10px;\n \tposition: relative;\n }\n h3.impl, h3.method, h4.method.trait-impl, h3.type,\n-h4.type.trait-impl, h4.associatedconstant.trait-impl {\n+h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-impl {\n \tpadding-left: 15px;\n }\n \n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .content table td:first-child > a,\n .collapse-toggle, div.item-list .out-of-band,\n #source-sidebar, #sidebar-toggle,\n+details.rustdoc-toggle > summary::before,\n+details.undocumented > summary::before,\n+.content ul.crate a.crate,\n /* This selector is for the items listed in the \"all items\" page. */\n #main > ul.docblock > li > a {\n \tfont-family: \"Fira Sans\", Arial, sans-serif;\n }\n \n .content ul.crate a.crate {\n \tfont-size: 16px/1.6;\n-\tfont-family: \"Fira Sans\", Arial, sans-serif;\n }\n \n ol, ul {\n@@ -596,7 +598,10 @@ h4 > code, h3 > code, .invisible > code {\n \tleft: -19px;\n }\n \n-.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant {\n+.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant,\n+.impl-items > .associatedtype, .content .impl-items details > summary > .type,\n+.impl-items details > summary > .associatedconstant,\n+.impl-items details > summary > .associatedtype {\n \tmargin-left: 20px;\n }\n \n@@ -656,7 +661,8 @@ a {\n }\n \n .in-band:hover > .anchor, .impl:hover > .anchor, .method.trait-impl:hover > .anchor,\n-.type.trait-impl:hover > .anchor, .associatedconstant.trait-impl:hover > .anchor {\n+.type.trait-impl:hover > .anchor, .associatedconstant.trait-impl:hover > .anchor,\n+.associatedtype.trait-impl:hover > .anchor {\n \tdisplay: inline-block;\n \tposition: absolute;\n }\n@@ -1466,7 +1472,8 @@ h4 > .notable-traits {\n \t\tmargin-left: 0;\n \t}\n \n-\t.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant {\n+\t.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant,\n+\t.impl-items > .associatedtype {\n \t\tdisplay: flex;\n \t}\n \n@@ -1764,7 +1771,10 @@ details.rustdoc-toggle > summary.hideme {\n \tcursor: pointer;\n }\n \n-details.rustdoc-toggle > summary::-webkit-details-marker {\n+details.rustdoc-toggle > summary::-webkit-details-marker,\n+details.rustdoc-toggle > summary::marker,\n+details.undocumented > summary::-webkit-details-marker,\n+details.undocumented > summary::marker {\n \tdisplay: none;\n }\n \n@@ -1787,6 +1797,14 @@ details.rustdoc-toggle > summary.hideme::before {\n details.rustdoc-toggle > summary:not(.hideme)::before {\n \tposition: absolute;\n \tleft: -23px;\n+\ttop: initial;\n+}\n+\n+.impl-items > details.rustdoc-toggle > summary:not(.hideme)::before,\n+.undocumented > details.rustdoc-toggle > summary:not(.hideme)::before {\n+\tposition: absolute;\n+\ttop: 3px;\n+\tleft: -2px;\n }\n \n /* When a \"hideme\" summary is open and the \"Expand description\" or \"Show\n@@ -1798,7 +1816,7 @@ details.rustdoc-toggle[open] > summary.hideme {\n \tposition: absolute;\n }\n \n-details.rustdoc-toggle[open] {\n+details.rustdoc-toggle, details.undocumented {\n \tposition: relative;\n }\n \n@@ -1810,3 +1828,14 @@ details.rustdoc-toggle[open] > summary::before {\n \tcontent: \"[\u2212]\";\n \tdisplay: inline;\n }\n+\n+details.undocumented > summary::before {\n+\tcontent: \"[+] Show hidden undocumented items\";\n+\tcursor: pointer;\n+\tfont-size: 16px;\n+\tfont-weight: 300;\n+}\n+\n+details.undocumented[open] > summary::before {\n+\tcontent: \"[-] Hide undocumented items\";\n+}"}, {"sha": "aace0b3c037caf6be61d86ed5f3b9485ef0d0dec", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -226,7 +226,8 @@ a {\n \n .collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n-details.rustdoc-toggle > summary::before {\n+details.rustdoc-toggle > summary::before,\n+details.undocumented > summary::before {\n \tcolor: #999;\n }\n "}, {"sha": "c23e95ce107a9431410efedb309d947a72225d65", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -188,7 +188,8 @@ a.test-arrow {\n \n .collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n-details.rustdoc-toggle > summary::before {\n+details.rustdoc-toggle > summary::before,\n+details.undocumented > summary::before {\n \tcolor: #999;\n }\n "}, {"sha": "9330972121073b31b29705c793f806748b94af38", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -186,7 +186,8 @@ a.test-arrow {\n \n .collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n-details.rustdoc-toggle > summary::before {\n+details.rustdoc-toggle > summary::before,\n+details.undocumented > summary::before {\n \tcolor: #999;\n }\n "}, {"sha": "7bfa922185b77cfd436cade0dc3db9e718723ece", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -88,12 +88,14 @@ impl Qux for Bar {\n     /// Docs for QUX1 in impl.\n     const QUX1: i8 = 5;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT0\"]' 'const QUX_DEFAULT0: u16'\n-    // @has - '//*[@class=\"docblock hidden\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n+    // @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n+    // @has - '//div[@class=\"impl-items\"]/details//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n     const QUX_DEFAULT0: u16 = 6;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT1\"]' 'const QUX_DEFAULT1: i16'\n     // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT1 in impl.\"\n     /// Docs for QUX_DEFAULT1 in impl.\n     const QUX_DEFAULT1: i16 = 7;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT2\"]' 'const QUX_DEFAULT2: u32'\n-    // @has - '//*[@class=\"docblock hidden\"]' \"Docs for QUX_DEFAULT2 in trait.\"\n+    // @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT2 in trait.\"\n+    // @has - '//div[@class=\"impl-items\"]/details//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT2 in trait.\"\n }"}, {"sha": "8fc01c3f04cda4be143634107d39ec87481d566c", "filename": "src/test/rustdoc/inline_cross/assoc-items.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -16,15 +16,18 @@ extern crate assoc_items;\n // @has - '//*[@id=\"associatedconstant.ConstNoDefault\"]' 'const ConstNoDefault: i16'\n // @has - '//*[@class=\"docblock\"]' 'dox for ConstNoDefault'\n // @has - '//*[@id=\"associatedconstant.ConstWithDefault\"]' 'const ConstWithDefault: u16'\n-// @has - '//*[@class=\"docblock hidden\"]' 'docs for ConstWithDefault'\n+// @!has - '//details[@open=\"\"]/details/div[@class=\"docblock\"]' 'docs for ConstWithDefault'\n+// @has - '//details/details/div[@class=\"docblock\"]' 'docs for ConstWithDefault'\n // @has - '//*[@id=\"associatedtype.TypeNoDefault\"]' 'type TypeNoDefault = i32'\n // @has - '//*[@class=\"docblock\"]' 'dox for TypeNoDefault'\n // @has - '//*[@id=\"associatedtype.TypeWithDefault\"]' 'type TypeWithDefault = u32'\n-// @has - '//*[@class=\"docblock hidden\"]' 'docs for TypeWithDefault'\n+// @!has - '//details[@open=\"\"]/details/div[@class=\"docblock\"]' 'docs for TypeWithDefault'\n+// @has - '//details/details/div[@class=\"docblock\"]' 'docs for TypeWithDefault'\n // @has - '//*[@id=\"method.method_no_default\"]' 'fn method_no_default()'\n // @has - '//*[@class=\"docblock\"]' 'dox for method_no_default'\n // @has - '//*[@id=\"method.method_with_default\"]' 'fn method_with_default()'\n-// @has - '//*[@class=\"docblock hidden\"]' 'docs for method_with_default'\n+// @!has - '//details[@open=\"\"]/details/div[@class=\"docblock\"]' 'docs for method_with_default'\n+// @has - '//details/details/div[@class=\"docblock\"]' 'docs for method_with_default'\n pub use assoc_items::MyStruct;\n \n // @has foo/trait.MyTrait.html"}, {"sha": "cc0596c70ced736fafb76bf0a67535ec436c1a00", "filename": "src/test/rustdoc/inline_cross/impl-inline-without-trait.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -8,5 +8,6 @@ extern crate impl_inline_without_trait;\n \n // @has 'foo/struct.MyStruct.html'\n // @has - '//*[@id=\"method.my_trait_method\"]' 'fn my_trait_method()'\n-// @has - '//*[@class=\"docblock hidden\"]' 'docs for my_trait_method'\n+// @!has - '//details[@open=\"\"]/details/div[@class=\"docblock\"]' 'docs for my_trait_method'\n+// @has - '//details/details/div[@class=\"docblock\"]' 'docs for my_trait_method'\n pub use impl_inline_without_trait::MyStruct;"}, {"sha": "776a191ceefb35308268ed23c6379b35883feefe", "filename": "src/test/rustdoc/manual_impl.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmanual_impl.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -24,10 +24,13 @@ pub trait T {\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S1 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S1 trait a_method implementation.'\n // @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n-// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait b_method definition.'\n-// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait c_method definition.'\n+// @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//div[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @has - '//div[@class=\"impl-items\"]/details//div[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//div[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n+// @has - '//div[@class=\"impl-items\"]/details//div[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n // @!has - '//*[@class=\"docblock\"]' 'There is another line'\n-// @has - '//*[@class=\"docblock hidden\"]' 'Read more'\n+// @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//div[@class=\"docblock\"]' 'Read more'\n+// @has - '//div[@class=\"impl-items\"]/details//div[@class=\"docblock\"]' 'Read more'\n pub struct S1(usize);\n \n /// Docs associated with the S1 trait implementation.\n@@ -42,9 +45,10 @@ impl T for S1 {\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait a_method implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait c_method implementation.'\n-// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n-// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n-// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait b_method definition.'\n+// @!has - '//details[open=\"\"]/div[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n+// @!has - '//details[open=\"\"]/div[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n+// @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//div[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @has - '//div[@class=\"impl-items\"]/details//div[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n pub struct S2(usize);\n \n /// Docs associated with the S2 trait implementation.\n@@ -61,9 +65,10 @@ impl T for S2 {\n }\n \n // @has manual_impl/struct.S3.html '//*[@class=\"trait\"]' 'T'\n-// @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait implementation.'\n-// @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait b_method implementation.'\n-// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait a_method definition.'\n+// @has  - '//details[@open=\"\"]/div[@class=\"docblock\"]' 'Docs associated with the S3 trait implementation.'\n+// @has  - '//details[@open=\"\"]/div[@class=\"docblock\"]' 'Docs associated with the S3 trait b_method implementation.'\n+// @!has - '//div[@class=\"impl-items\"]/details[@open=\"\"]//div[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n+// @has - '//div[@class=\"impl-items\"]/details//div[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n pub struct S3(usize);\n \n /// Docs associated with the S3 trait implementation."}, {"sha": "931691db3e6d9a3d7fa5e4c379a82f8f2da6d1c4", "filename": "src/test/rustdoc/trait-impl.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5de7aaec2955f2c7c7c82521a9186f2ba4f037/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl.rs?ref=6b5de7aaec2955f2c7c7c82521a9186f2ba4f037", "patch": "@@ -21,26 +21,27 @@ pub trait Trait {\n pub struct Struct;\n \n impl Trait for Struct {\n-    // @has trait_impl/struct.Struct.html '//*[@id=\"method.a\"]/../div/p' 'Some long docs'\n-    // @!has - '//*[@id=\"method.a\"]/../div/p' 'link will be added'\n-    // @has - '//*[@id=\"method.a\"]/../div/p/a' 'Read more'\n-    // @has - '//*[@id=\"method.a\"]/../div/p/a/@href' 'trait.Trait.html'\n+    // @has trait_impl/struct.Struct.html '//*[@id=\"method.a\"]/../../div[@class=\"docblock\"]/p' 'Some long docs'\n+    // @!has - '//*[@id=\"method.a\"]/../../div[@class=\"docblock\"]/p' 'link will be added'\n+    // @has - '//*[@id=\"method.a\"]/../../div[@class=\"docblock\"]/p/a' 'Read more'\n+    // @has - '//*[@id=\"method.a\"]/../../div[@class=\"docblock\"]/p/a/@href' 'trait.Trait.html#tymethod.a'\n     fn a() {}\n \n-    // @has trait_impl/struct.Struct.html '//*[@id=\"method.b\"]/../div/p' 'These docs contain'\n-    // @has - '//*[@id=\"method.b\"]/../div/p/a' 'reference link'\n-    // @has - '//*[@id=\"method.b\"]/../div/p/a/@href' 'https://example.com'\n-    // @has - '//*[@id=\"method.b\"]/../div/p/a' 'Read more'\n-    // @has - '//*[@id=\"method.b\"]/../div/p/a/@href' 'trait.Trait.html'\n+    // @has - '//*[@id=\"method.b\"]/../../div[@class=\"docblock\"]/p' 'These docs contain'\n+    // @has - '//*[@id=\"method.b\"]/../../div[@class=\"docblock\"]/p/a' 'reference link'\n+    // @has - '//*[@id=\"method.b\"]/../../div[@class=\"docblock\"]/p/a/@href' 'https://example.com'\n+    // @has - '//*[@id=\"method.b\"]/../../div[@class=\"docblock\"]/p/a' 'Read more'\n+    // @has - '//*[@id=\"method.b\"]/../../div[@class=\"docblock\"]/p/a/@href' 'trait.Trait.html#tymethod.b'\n     fn b() {}\n \n-    // @!has trait_impl/struct.Struct.html '//*[@id=\"method.c\"]/../div/p' 'code block'\n-    // @has - '//*[@id=\"method.c\"]/../div/p/a' 'Read more'\n-    // @has - '//*[@id=\"method.c\"]/../div/p/a/@href' 'trait.Trait.html'\n+    // @!has - '//*[@id=\"method.c\"]/../../div[@class=\"docblock\"]/p' 'code block'\n+    // @has - '//*[@id=\"method.c\"]/../../div[@class=\"docblock\"]/a' 'Read more'\n+    // @has - '//*[@id=\"method.c\"]/../../div[@class=\"docblock\"]/a/@href' 'trait.Trait.html#tymethod.c'\n     fn c() {}\n \n-    // @has trait_impl/struct.Struct.html '//*[@id=\"method.d\"]/../div/p' \\\n-    //   'Escaped formatting a*b*c* works'\n-    // @!has trait_impl/struct.Struct.html '//*[@id=\"method.d\"]/../div/p/em'\n+    // @has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p' 'Escaped formatting a*b*c* works'\n+    // @!has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p/em'\n     fn d() {}\n+\n+    // @has - '//*[@id=\"impl-Trait\"]/code/a/@href' 'trait.Trait.html'\n }"}]}