{"sha": "5ab213a464710d8477fdaaae692fb79e1a91c1d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYjIxM2E0NjQ3MTBkODQ3N2ZkYWFhZTY5MmZiNzllMWE5MWMxZDY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T00:35:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T00:35:40Z"}, "message": "Correct input coordinate tracking on block-opening brace.", "tree": {"sha": "a27ebf5423f62d57ab00d87f642c8acb96d0c682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a27ebf5423f62d57ab00d87f642c8acb96d0c682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ab213a464710d8477fdaaae692fb79e1a91c1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab213a464710d8477fdaaae692fb79e1a91c1d6", "html_url": "https://github.com/rust-lang/rust/commit/5ab213a464710d8477fdaaae692fb79e1a91c1d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ab213a464710d8477fdaaae692fb79e1a91c1d6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f639085a420084f44ce83f9a1d9c5e271017131f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f639085a420084f44ce83f9a1d9c5e271017131f", "html_url": "https://github.com/rust-lang/rust/commit/f639085a420084f44ce83f9a1d9c5e271017131f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "cd082869c5d71009e6f86b8b233bc2ec83657c11", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ab213a464710d8477fdaaae692fb79e1a91c1d6/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab213a464710d8477fdaaae692fb79e1a91c1d6/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=5ab213a464710d8477fdaaae692fb79e1a91c1d6", "patch": "@@ -821,7 +821,7 @@ fn parse_bottom_expr(&parser p) -> @ast::expr {\n             expect(p, token::RBRACE);\n             ex = ast::expr_rec(fields, base);\n         } else {\n-            auto blk = parse_block_tail(p);\n+            auto blk = parse_block_tail(p, lo);\n             ret mk_expr(p, blk.span.lo, blk.span.hi, ast::expr_block(blk));\n         }\n     } else if (eat_word(p, \"if\")) {\n@@ -862,7 +862,7 @@ fn parse_bottom_expr(&parser p) -> @ast::expr {\n         ret mk_mac_expr(p, lo, p.get_hi_pos(), ast::mac_embed_type(ty))\n     } else if (p.peek() == token::POUND_LBRACE) {\n         p.bump();\n-        auto blk = ast::mac_embed_block(parse_block_tail(p));\n+        auto blk = ast::mac_embed_block(parse_block_tail(p, lo));\n         ret mk_mac_expr(p, lo, p.get_hi_pos(), blk);\n     } else if (p.peek() == token::ELLIPSIS) {\n         p.bump();\n@@ -1755,13 +1755,13 @@ fn stmt_ends_with_semi(&ast::stmt stmt) -> bool {\n }\n \n fn parse_block(&parser p) -> ast::blk {\n+    auto lo = p.get_lo_pos();\n     expect(p, token::LBRACE);\n-    be parse_block_tail(p);\n+    be parse_block_tail(p, lo);\n }\n \n // some blocks start with \"#{\"...\n-fn parse_block_tail(&parser p) -> ast::blk {\n-    auto lo = p.get_lo_pos();\n+fn parse_block_tail(&parser p, uint lo) -> ast::blk {\n     let (@ast::stmt)[] stmts = ~[];\n     let option::t[@ast::expr] expr = none;\n     while (p.peek() != token::RBRACE) {"}]}