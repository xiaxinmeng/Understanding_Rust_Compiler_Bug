{"sha": "b59d98ccb9de56a49768586961ce745d462e0697", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OWQ5OGNjYjlkZTU2YTQ5NzY4NTg2OTYxY2U3NDVkNDYyZTA2OTc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-11T02:58:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-11T02:58:58Z"}, "message": "Parse effects and layers in a couple contexts; drop on floor as we have nowhere to put them yet.", "tree": {"sha": "fe2afd135e5cd2d2209b5b8489c73468e08ce0ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe2afd135e5cd2d2209b5b8489c73468e08ce0ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59d98ccb9de56a49768586961ce745d462e0697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59d98ccb9de56a49768586961ce745d462e0697", "html_url": "https://github.com/rust-lang/rust/commit/b59d98ccb9de56a49768586961ce745d462e0697", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59d98ccb9de56a49768586961ce745d462e0697/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c25fb5628c398b79b9293b6b31d62936dcba613", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c25fb5628c398b79b9293b6b31d62936dcba613", "html_url": "https://github.com/rust-lang/rust/commit/7c25fb5628c398b79b9293b6b31d62936dcba613"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "97e86b7fe5ae0cd5ae00b2e55999a69c684e3ad1", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b59d98ccb9de56a49768586961ce745d462e0697/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59d98ccb9de56a49768586961ce745d462e0697/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=b59d98ccb9de56a49768586961ce745d462e0697", "patch": "@@ -173,6 +173,10 @@ impure fn parse_ty_obj(parser p, &mutable ast.span hi) -> ast.ty_ {\n     expect(p, token.OBJ);\n     impure fn parse_method_sig(parser p) -> ast.ty_method {\n         auto flo = p.get_span();\n+\n+        // FIXME: do something with this, currently it's dropped on the floor.\n+        let ast.effect eff = parse_effect(p);\n+\n         expect(p, token.FN);\n         auto ident = parse_ident(p);\n         auto f = parse_ty_fn(p, flo);\n@@ -204,6 +208,12 @@ impure fn parse_ty(parser p) -> @ast.ty {\n     auto lo = p.get_span();\n     auto hi = lo;\n     let ast.ty_ t;\n+\n+    // FIXME: do something with these; currently they're\n+    // dropped on the floor.\n+    let ast.effect eff = parse_effect(p);\n+    let ast.layer lyr = parse_layer(p);\n+\n     alt (p.peek()) {\n         case (token.BOOL) { p.bump(); t = ast.ty_bool; }\n         case (token.INT) { p.bump(); t = ast.ty_int; }"}]}