{"sha": "0a7f28620a7002f47890c2030862052bcbf25cdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhN2YyODYyMGE3MDAyZjQ3ODkwYzIwMzA4NjIwNTJiY2JmMjVjZGI=", "commit": {"author": {"name": "Kevin Mehall", "email": "km@kevinmehall.net", "date": "2021-03-20T23:43:51Z"}, "committer": {"name": "Kevin Mehall", "email": "km@kevinmehall.net", "date": "2021-03-20T23:54:57Z"}, "message": "Fix and test edge cases of `_` as ident", "tree": {"sha": "de1a04ded1589c0a3fa504cba606bfc8d89b3aa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de1a04ded1589c0a3fa504cba606bfc8d89b3aa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a7f28620a7002f47890c2030862052bcbf25cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a7f28620a7002f47890c2030862052bcbf25cdb", "html_url": "https://github.com/rust-lang/rust/commit/0a7f28620a7002f47890c2030862052bcbf25cdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a7f28620a7002f47890c2030862052bcbf25cdb/comments", "author": {"login": "kevinmehall", "id": 119951, "node_id": "MDQ6VXNlcjExOTk1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinmehall", "html_url": "https://github.com/kevinmehall", "followers_url": "https://api.github.com/users/kevinmehall/followers", "following_url": "https://api.github.com/users/kevinmehall/following{/other_user}", "gists_url": "https://api.github.com/users/kevinmehall/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinmehall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinmehall/subscriptions", "organizations_url": "https://api.github.com/users/kevinmehall/orgs", "repos_url": "https://api.github.com/users/kevinmehall/repos", "events_url": "https://api.github.com/users/kevinmehall/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinmehall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevinmehall", "id": 119951, "node_id": "MDQ6VXNlcjExOTk1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinmehall", "html_url": "https://github.com/kevinmehall", "followers_url": "https://api.github.com/users/kevinmehall/followers", "following_url": "https://api.github.com/users/kevinmehall/following{/other_user}", "gists_url": "https://api.github.com/users/kevinmehall/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinmehall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinmehall/subscriptions", "organizations_url": "https://api.github.com/users/kevinmehall/orgs", "repos_url": "https://api.github.com/users/kevinmehall/repos", "events_url": "https://api.github.com/users/kevinmehall/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinmehall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a0e22235b7ad222be1aaa7765b580f4096c9aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0e22235b7ad222be1aaa7765b580f4096c9aeb", "html_url": "https://github.com/rust-lang/rust/commit/0a0e22235b7ad222be1aaa7765b580f4096c9aeb"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "1682b21b081060711e5011f58464e16644b0e7b1", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=0a7f28620a7002f47890c2030862052bcbf25cdb", "patch": "@@ -710,7 +710,6 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n             let tt_result = match kind {\n                 \"ident\" => input\n                     .expect_ident()\n-                    .and_then(|ident| if ident.text == \"_\" { Err(()) } else { Ok(ident) })\n                     .map(|ident| Some(tt::Leaf::from(ident.clone()).into()))\n                     .map_err(|()| err!(\"expected ident\")),\n                 \"tt\" => input.expect_tt().map(Some).map_err(|()| err!()),\n@@ -763,7 +762,7 @@ impl<'a> TtIter<'a> {\n     fn expect_separator(&mut self, separator: &Separator, idx: usize) -> bool {\n         let mut fork = self.clone();\n         let ok = match separator {\n-            Separator::Ident(lhs) if idx == 0 => match fork.expect_ident() {\n+            Separator::Ident(lhs) if idx == 0 => match fork.expect_ident_or_underscore() {\n                 Ok(rhs) => rhs.text == lhs.text,\n                 _ => false,\n             },\n@@ -853,7 +852,7 @@ impl<'a> TtIter<'a> {\n         if punct.char != '\\'' {\n             return Err(());\n         }\n-        let ident = self.expect_ident()?;\n+        let ident = self.expect_ident_or_underscore()?;\n \n         Ok(tt::Subtree {\n             delimiter: None,"}, {"sha": "bf48112b3a38c65ff75ce1add2f3212ebd851023", "filename": "crates/mbe/src/tests/rule.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Ftests%2Frule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Ftests%2Frule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Frule.rs?ref=0a7f28620a7002f47890c2030862052bcbf25cdb", "patch": "@@ -12,6 +12,9 @@ fn test_valid_arms() {\n     }\n \n     check(\"($i:ident) => ()\");\n+    check(\"($(x),*) => ()\");\n+    check(\"($(x)_*) => ()\");\n+    check(\"($(x)i*) => ()\");\n     check(\"($($i:ident)*) => ($_)\");\n     check(\"($($true:ident)*) => ($true)\");\n     check(\"($($false:ident)*) => ($false)\");\n@@ -32,6 +35,7 @@ fn test_invalid_arms() {\n \n     check(\"($i) => ($i)\", ParseError::UnexpectedToken(\"bad fragment specifier 1\".into()));\n     check(\"($i:) => ($i)\", ParseError::UnexpectedToken(\"bad fragment specifier 1\".into()));\n+    check(\"($i:_) => ()\", ParseError::UnexpectedToken(\"bad fragment specifier 1\".into()));\n }\n \n fn parse_macro_arm(arm_definition: &str) -> Result<crate::MacroRules, ParseError> {"}, {"sha": "319a40f2aab4105280f5197145e8dd1c4f4e5635", "filename": "crates/mbe/src/tt_iter.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a7f28620a7002f47890c2030862052bcbf25cdb/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftt_iter.rs?ref=0a7f28620a7002f47890c2030862052bcbf25cdb", "patch": "@@ -49,6 +49,13 @@ impl<'a> TtIter<'a> {\n     }\n \n     pub(crate) fn expect_ident(&mut self) -> Result<&'a tt::Ident, ()> {\n+        match self.expect_leaf()? {\n+            tt::Leaf::Ident(it) if it.text != \"_\" => Ok(it),\n+            _ => Err(()),\n+        }\n+    }\n+\n+    pub(crate) fn expect_ident_or_underscore(&mut self) -> Result<&'a tt::Ident, ()> {\n         match self.expect_leaf()? {\n             tt::Leaf::Ident(it) => Ok(it),\n             _ => Err(()),"}]}