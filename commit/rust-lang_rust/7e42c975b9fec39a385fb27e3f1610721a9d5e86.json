{"sha": "7e42c975b9fec39a385fb27e3f1610721a9d5e86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNDJjOTc1YjlmZWMzOWEzODVmYjI3ZTNmMTYxMDcyMWE5ZDVlODY=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-22T11:04:28Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-22T11:11:47Z"}, "message": "Add default implementation for `enforce_abi()`", "tree": {"sha": "689006ec22ea3a2a67226ba9a9be4b924c9b461d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/689006ec22ea3a2a67226ba9a9be4b924c9b461d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e42c975b9fec39a385fb27e3f1610721a9d5e86", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYKjm8xUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhElwD/ayMnAx+7ut2wq9jZYFZfbnurpz9p\nEZ2TdlT4xGCRcS0A/iFgSm5NvAleu9/JB9c9kCf01Xk9O+zgDLjcIm++2QAK\n=YF1u\n-----END PGP SIGNATURE-----", "payload": "tree 689006ec22ea3a2a67226ba9a9be4b924c9b461d\nparent c69fba929bba757a4ec97564cd4e78e988c11950\nauthor hyd-dev <yd-huang@outlook.com> 1621681468 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1621681907 +0800\n\nAdd default implementation for `enforce_abi()`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e42c975b9fec39a385fb27e3f1610721a9d5e86", "html_url": "https://github.com/rust-lang/rust/commit/7e42c975b9fec39a385fb27e3f1610721a9d5e86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e42c975b9fec39a385fb27e3f1610721a9d5e86/comments", "author": null, "committer": null, "parents": [{"sha": "c69fba929bba757a4ec97564cd4e78e988c11950", "url": "https://api.github.com/repos/rust-lang/rust/commits/c69fba929bba757a4ec97564cd4e78e988c11950", "html_url": "https://github.com/rust-lang/rust/commit/c69fba929bba757a4ec97564cd4e78e988c11950"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "0ca99da7304b3550b15dcb91eaa15f50b031645c", "filename": "compiler/rustc_mir/src/interpret/machine.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7e42c975b9fec39a385fb27e3f1610721a9d5e86/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e42c975b9fec39a385fb27e3f1610721a9d5e86/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs?ref=7e42c975b9fec39a385fb27e3f1610721a9d5e86", "patch": "@@ -133,7 +133,9 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     fn enforce_validity(ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n \n     /// Whether function calls should be [ABI](Abi)-checked.\n-    fn enforce_abi(ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n+    fn enforce_abi(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool {\n+        true\n+    }\n \n     /// Entry point for obtaining the MIR of anything that should get evaluated.\n     /// So not just functions and shims, but also const/static initializers, anonymous\n@@ -447,11 +449,6 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n         false // for now, we don't enforce validity\n     }\n \n-    #[inline(always)]\n-    fn enforce_abi(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n-        true\n-    }\n-\n     #[inline(always)]\n     fn call_extra_fn(\n         _ecx: &mut InterpCx<$mir, $tcx, Self>,"}]}