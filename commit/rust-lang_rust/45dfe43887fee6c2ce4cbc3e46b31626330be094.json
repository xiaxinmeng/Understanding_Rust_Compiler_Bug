{"sha": "45dfe43887fee6c2ce4cbc3e46b31626330be094", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZGZlNDM4ODdmZWU2YzJjZTRjYmMzZTQ2YjMxNjI2MzMwYmUwOTQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-26T16:32:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-26T16:32:47Z"}, "message": "Emit one diagnostic for multiple misplaced lifetimes", "tree": {"sha": "93a79fafb7d26f4a3264778a7077abd2f23e14e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93a79fafb7d26f4a3264778a7077abd2f23e14e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45dfe43887fee6c2ce4cbc3e46b31626330be094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45dfe43887fee6c2ce4cbc3e46b31626330be094", "html_url": "https://github.com/rust-lang/rust/commit/45dfe43887fee6c2ce4cbc3e46b31626330be094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45dfe43887fee6c2ce4cbc3e46b31626330be094/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "234d043d18175aff37200a91df2a1b7c3064fc80", "url": "https://api.github.com/repos/rust-lang/rust/commits/234d043d18175aff37200a91df2a1b7c3064fc80", "html_url": "https://github.com/rust-lang/rust/commit/234d043d18175aff37200a91df2a1b7c3064fc80"}], "stats": {"total": 53, "additions": 38, "deletions": 15}, "files": [{"sha": "ab5afaf3d99fe4f19578e692dceaf2d6dbad5f94", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=45dfe43887fee6c2ce4cbc3e46b31626330be094", "patch": "@@ -5182,6 +5182,8 @@ impl<'a> Parser<'a> {\n         let mut params = Vec::new();\n         let mut seen_ty_param: Option<Span> = None;\n         let mut last_comma_span = None;\n+        let mut bad_lifetime_pos = vec![];\n+        let mut suggestions = vec![];\n         loop {\n             let attrs = self.parse_outer_attributes()?;\n             if self.check_lifetime() {\n@@ -5207,20 +5209,12 @@ impl<'a> Parser<'a> {\n                     } else {\n                         last_comma_span.unwrap_or(param_span).to(param_span)\n                     };\n-                    let mut err = self.struct_span_err(\n-                        self.prev_span,\n-                        \"lifetime parameters must be declared prior to type parameters\",\n-                    );\n+                    bad_lifetime_pos.push(param_span);\n+\n                     if let Ok(snippet) = self.sess.source_map().span_to_snippet(param_span) {\n-                        err.multipart_suggestion(\n-                            \"move the lifetime parameter prior to the first type parameter\",\n-                            vec![\n-                                (remove_sp, String::new()),\n-                                (sp.shrink_to_lo(), format!(\"{}, \", snippet)),\n-                            ],\n-                        );\n+                        suggestions.push((remove_sp, String::new()));\n+                        suggestions.push((sp.shrink_to_lo(), format!(\"{}, \", snippet)));\n                     }\n-                    err.emit();\n                     if ate_comma {\n                         last_comma_span = Some(self.prev_span);\n                         continue\n@@ -5247,6 +5241,19 @@ impl<'a> Parser<'a> {\n             }\n             last_comma_span = Some(self.prev_span);\n         }\n+        if !bad_lifetime_pos.is_empty() {\n+            let mut err = self.struct_span_err(\n+                bad_lifetime_pos,\n+                \"lifetime parameters must be declared prior to type parameters\",\n+            );\n+            if !suggestions.is_empty() {\n+                err.multipart_suggestion(\n+                    \"move the lifetime parameter prior to the first type parameter\",\n+                    suggestions,\n+                );\n+            }\n+            err.emit();\n+        }\n         lifetimes.extend(params);  // ensure the correct order of lifetimes and type params\n         Ok(lifetimes)\n     }"}, {"sha": "5051a406078aa74eb6961d01e65e84147674cacb", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs?ref=45dfe43887fee6c2ce4cbc3e46b31626330be094", "patch": "@@ -12,4 +12,10 @@ struct C<T, U, 'a> {\n     u: U,\n }\n \n+struct D<T, U, 'a, 'b, V, 'c> {\n+    t: &'a T,\n+    u: &'b U,\n+    v: &'c V,\n+}\n+\n fn main() {}"}, {"sha": "f3d6469b5125501752128afcd05a02aed2f3c7d7", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.stderr", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45dfe43887fee6c2ce4cbc3e46b31626330be094/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr?ref=45dfe43887fee6c2ce4cbc3e46b31626330be094", "patch": "@@ -9,10 +9,10 @@ LL | struct A<'a, T> {\n    |          ^^^ --\n \n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/suggest-move-lifetimes.rs:5:15\n+  --> $DIR/suggest-move-lifetimes.rs:5:13\n    |\n LL | struct B<T, 'a, U> {\n-   |               ^\n+   |             ^^\n help: move the lifetime parameter prior to the first type parameter\n    |\n LL | struct B<'a, T, U> {\n@@ -28,5 +28,15 @@ help: move the lifetime parameter prior to the first type parameter\n LL | struct C<'a, T, U> {\n    |          ^^^    --\n \n-error: aborting due to 3 previous errors\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/suggest-move-lifetimes.rs:15:16\n+   |\n+LL | struct D<T, U, 'a, 'b, V, 'c> {\n+   |                ^^  ^^     ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | struct D<'a, 'b, 'c, T, U, V> {\n+   |          ^^^ ^^^ ^^^      ---\n+\n+error: aborting due to 4 previous errors\n "}]}