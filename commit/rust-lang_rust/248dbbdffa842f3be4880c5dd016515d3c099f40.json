{"sha": "248dbbdffa842f3be4880c5dd016515d3c099f40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OGRiYmRmZmE4NDJmM2JlNDg4MGM1ZGQwMTY1MTVkM2MwOTlmNDA=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-12-13T16:46:34Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-12-26T21:40:22Z"}, "message": "Added tests for enums & enum aliases with various combinations of generic args.", "tree": {"sha": "4dbb5879d4cd8b197482937df43b64bb321ba535", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dbb5879d4cd8b197482937df43b64bb321ba535"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/248dbbdffa842f3be4880c5dd016515d3c099f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/248dbbdffa842f3be4880c5dd016515d3c099f40", "html_url": "https://github.com/rust-lang/rust/commit/248dbbdffa842f3be4880c5dd016515d3c099f40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/248dbbdffa842f3be4880c5dd016515d3c099f40/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edabad64b022a53c1166ba226d5ce1b3dbd53220", "url": "https://api.github.com/repos/rust-lang/rust/commits/edabad64b022a53c1166ba226d5ce1b3dbd53220", "html_url": "https://github.com/rust-lang/rust/commit/edabad64b022a53c1166ba226d5ce1b3dbd53220"}], "stats": {"total": 139, "additions": 139, "deletions": 0}, "files": [{"sha": "f8cac550b41b628a7d019dfa4d3505522fbe408c", "filename": "src/test/run-pass/enum-generic-args.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Frun-pass%2Fenum-generic-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Frun-pass%2Fenum-generic-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-generic-args.rs?ref=248dbbdffa842f3be4880c5dd016515d3c099f40", "patch": "@@ -0,0 +1,34 @@\n+#![feature(irrefutable_let_patterns)]\n+#![feature(type_alias_enum_variants)]\n+\n+#![allow(irrefutable_let_patterns)]\n+\n+enum Enum<T> { Variant(T) }\n+type Alias<T> = Enum<T>;\n+type AliasFixed = Enum<()>;\n+\n+macro_rules! is_variant {\n+    ($expr:expr) => (\n+        assert!(if let Enum::Variant::<()>(_) = $expr { true } else { false },\n+                \"expr does not have correct type\");\n+    )\n+}\n+\n+impl<T> Enum<T> {\n+    fn foo() {\n+        is_variant!(Self::Variant(()));\n+    }\n+}\n+\n+fn main() {\n+    is_variant!(Enum::Variant(()));\n+    is_variant!(Enum::Variant::<()>(()));\n+    is_variant!(Enum::<()>::Variant(()));\n+\n+    is_variant!(Alias::Variant(()));\n+    is_variant!(Alias::<()>::Variant(()));\n+\n+    is_variant!(AliasFixed::Variant(()));\n+\n+    Enum::<()>::foo();\n+}"}, {"sha": "21378b044e1b6be376e71049030f6f54a31ae324", "filename": "src/test/ui/enum-generic-args.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Fui%2Fenum-generic-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Fui%2Fenum-generic-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-generic-args.rs?ref=248dbbdffa842f3be4880c5dd016515d3c099f40", "patch": "@@ -0,0 +1,35 @@\n+#![feature(type_alias_enum_variants)]\n+\n+enum Enum<T> { Variant(T) }\n+type Alias<T> = Enum<T>;\n+type AliasFixed = Enum<()>;\n+\n+impl<T> Enum<T> {\n+    fn foo() {\n+        Self::Variant::<()>(());\n+        //~^ ERROR type parameters are not allowed on this type [E0109]\n+        Self::<()>::Variant(());\n+        //~^ ERROR type parameters are not allowed on this type [E0109]\n+        Self::<()>::Variant::<()>(());\n+        //~^ ERROR type parameters are not allowed on this type [E0109]\n+        //~^^ ERROR type parameters are not allowed on this type [E0109]\n+    }\n+}\n+\n+fn main() {\n+    Enum::<()>::Variant::<()>(());\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+\n+    Alias::Variant::<()>(());\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+    Alias::<()>::Variant::<()>(());\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+\n+    AliasFixed::Variant::<()>(());\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+    AliasFixed::<()>::Variant(());\n+    //~^ ERROR wrong number of type arguments: expected 0, found 1 [E0107]\n+    AliasFixed::<()>::Variant::<()>(());\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+    //~^^ ERROR wrong number of type arguments: expected 0, found 1 [E0107]\n+}"}, {"sha": "0807ee15dc75717a1ea125cfed7e4b6de130ca3d", "filename": "src/test/ui/enum-generic-args.stderr", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Fui%2Fenum-generic-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/248dbbdffa842f3be4880c5dd016515d3c099f40/src%2Ftest%2Fui%2Fenum-generic-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-generic-args.stderr?ref=248dbbdffa842f3be4880c5dd016515d3c099f40", "patch": "@@ -0,0 +1,70 @@\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:9:25\n+   |\n+LL |         Self::Variant::<()>(());\n+   |                         ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:11:16\n+   |\n+LL |         Self::<()>::Variant(());\n+   |                ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:13:16\n+   |\n+LL |         Self::<()>::Variant::<()>(());\n+   |                ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:13:31\n+   |\n+LL |         Self::<()>::Variant::<()>(());\n+   |                               ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:20:27\n+   |\n+LL |     Enum::<()>::Variant::<()>(());\n+   |                           ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:23:22\n+   |\n+LL |     Alias::Variant::<()>(());\n+   |                      ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:25:28\n+   |\n+LL |     Alias::<()>::Variant::<()>(());\n+   |                            ^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:28:27\n+   |\n+LL |     AliasFixed::Variant::<()>(());\n+   |                           ^^ type parameter not allowed\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/enum-generic-args.rs:30:18\n+   |\n+LL |     AliasFixed::<()>::Variant(());\n+   |                  ^^ unexpected type argument\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/enum-generic-args.rs:32:18\n+   |\n+LL |     AliasFixed::<()>::Variant::<()>(());\n+   |                  ^^ unexpected type argument\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/enum-generic-args.rs:32:33\n+   |\n+LL |     AliasFixed::<()>::Variant::<()>(());\n+   |                                 ^^ type parameter not allowed\n+\n+error: aborting due to 11 previous errors\n+\n+Some errors occurred: E0107, E0109.\n+For more information about an error, try `rustc --explain E0107`."}]}