{"sha": "a3c4ce444470af4e372d08e98f7df2daf5e2363a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYzRjZTQ0NDQ3MGFmNGUzNzJkMDhlOThmN2RmMmRhZjVlMjM2M2E=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-05-20T18:26:53Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-05-21T08:46:30Z"}, "message": "Fix ICE trying to pass DST to C functions\n\nFixes #25581", "tree": {"sha": "a29409f04b2df88642b542defec982a4365a69af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a29409f04b2df88642b542defec982a4365a69af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3c4ce444470af4e372d08e98f7df2daf5e2363a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3c4ce444470af4e372d08e98f7df2daf5e2363a", "html_url": "https://github.com/rust-lang/rust/commit/a3c4ce444470af4e372d08e98f7df2daf5e2363a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3c4ce444470af4e372d08e98f7df2daf5e2363a/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec980a1a706fd6afc27dd54c1eed7c51800d753", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec980a1a706fd6afc27dd54c1eed7c51800d753", "html_url": "https://github.com/rust-lang/rust/commit/cec980a1a706fd6afc27dd54c1eed7c51800d753"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "027f2dbc717b5f1e77fad680efd0dac20414a196", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=a3c4ce444470af4e372d08e98f7df2daf5e2363a", "patch": "@@ -846,7 +846,7 @@ pub fn trans_call_inner<'a, 'blk, 'tcx, F>(bcx: Block<'blk, 'tcx>,\n \n         let mut llargs = Vec::new();\n         let arg_tys = match args {\n-            ArgExprs(a) => a.iter().map(|x| common::expr_ty(bcx, &**x)).collect(),\n+            ArgExprs(a) => a.iter().map(|x| common::expr_ty_adjusted(bcx, &**x)).collect(),\n             _ => panic!(\"expected arg exprs.\")\n         };\n         bcx = trans_args(bcx,"}, {"sha": "ea6971853fe998aa42fc23e3d7421f300a71ef9f", "filename": "src/test/run-make/issue-25581/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-25581%2FMakefile?ref=a3c4ce444470af4e372d08e98f7df2daf5e2363a", "patch": "@@ -0,0 +1,7 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(CC) -std=c99 test.c -c -o $(TMPDIR)/test.o\n+\t$(AR) rcs $(TMPDIR)/libtest.a $(TMPDIR)/test.o\n+\t$(RUSTC) test.rs -L $(TMPDIR)\n+\t$(call RUN,test) || exit 1"}, {"sha": "5736b1730216d4bd87775c16036a7b687cc35076", "filename": "src/test/run-make/issue-25581/test.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.c", "raw_url": "https://github.com/rust-lang/rust/raw/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.c?ref=a3c4ce444470af4e372d08e98f7df2daf5e2363a", "patch": "@@ -0,0 +1,16 @@\n+// ignore-license\n+#include <stddef.h>\n+#include <stdint.h>\n+\n+struct ByteSlice {\n+        uint8_t *data;\n+        size_t len;\n+};\n+\n+size_t slice_len(struct ByteSlice bs) {\n+        return bs.len;\n+}\n+\n+uint8_t slice_elem(struct ByteSlice bs, size_t idx) {\n+        return bs.data[idx];\n+}"}, {"sha": "e2e86df59cd380419237df357f0625120825c935", "filename": "src/test/run-make/issue-25581/test.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3c4ce444470af4e372d08e98f7df2daf5e2363a/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-25581%2Ftest.rs?ref=a3c4ce444470af4e372d08e98f7df2daf5e2363a", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(libc)]\n+\n+extern crate libc;\n+\n+#[link(name = \"test\")]\n+extern {\n+    fn slice_len(s: &[u8]) -> libc::size_t;\n+    fn slice_elem(s: &[u8], idx: libc::size_t) -> u8;\n+}\n+\n+fn main() {\n+    let data = [1,2,3,4,5];\n+\n+    unsafe {\n+        assert_eq!(data.len(), slice_len(&data) as usize);\n+        assert_eq!(data[0], slice_elem(&data, 0));\n+        assert_eq!(data[1], slice_elem(&data, 1));\n+        assert_eq!(data[2], slice_elem(&data, 2));\n+        assert_eq!(data[3], slice_elem(&data, 3));\n+        assert_eq!(data[4], slice_elem(&data, 4));\n+    }\n+}"}]}