{"sha": "0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNGViZjlmMGEzMTk2NDIwZTI1Y2YxNTU4YjQ5ZWEzZjM4NjQzYzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-03T03:37:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-03T03:37:47Z"}, "message": "Auto merge of #47146 - ereslibre:issue-42106, r=estebank\n\nOnly bump error count when we are sure that the diagnostic is not a repetition\n\nThis ensures that if we emit the same diagnostic twice, the error count will\nmatch the real number of errors shown to the user.\n\nFixes #42106\n\nThis is a followup of https://github.com/rust-lang/rust/pull/45603 as stated in https://github.com/rust-lang/rust/issues/42106#issuecomment-345218473.\n\nThis program, for example:\n\n```rust\nfn do_something<T>(collection: &mut Vec<T>) {\n    let _a = &collection;\n    collection.swap(1, 2);\n}\n\nfn main() {}\n```\n\nwithout this patch, produces:\n\n```\nerror[E0502]: cannot borrow `*collection` as mutable because `collection` is also borrowed as immutable\n  --> $DIR/issue-42106.rs:13:5\n   |\n12 |     let _a = &collection;\n   |               ---------- immutable borrow occurs here\n13 |     collection.swap(1, 2); //~ ERROR also borrowed as immutable\n   |     ^^^^^^^^^^ mutable borrow occurs here\n14 | }\n   | - immutable borrow ends here\n\nerror: aborting due to 2 previous errors\n```\n\nThe number of errors do not match the diagnostics reported. This PR fixes this problem. The output is now in this case:\n\n```\nerror[E0502]: cannot borrow `*collection` as mutable because `collection` is also borrowed as immutable\n  --> $DIR/issue-42106.rs:13:5\n   |\n12 |     let _a = &collection;\n   |               ---------- immutable borrow occurs here\n13 |     collection.swap(1, 2); //~ ERROR also borrowed as immutable\n   |     ^^^^^^^^^^ mutable borrow occurs here\n14 | }\n   | - immutable borrow ends here\n\nerror: aborting due to previous error\n```\n\nAlso, some other tests outputs have been adapted because their count didn't really match the number of diagnostics reported.\n\nAs an aside, an outdated comment has been removed (`Handler::cancel` will only call to the `Diagnostic::cancel` method and will not decrease the count of errors).\n\nAll tests are passing with this PR (`x.py test` is successful).", "tree": {"sha": "b9afbec5a28b4b2165f8895e7211ed369ae84d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9afbec5a28b4b2165f8895e7211ed369ae84d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "html_url": "https://github.com/rust-lang/rust/commit/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687d3d15ba726dbb1ac6b85223ebe0e98c6820cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/687d3d15ba726dbb1ac6b85223ebe0e98c6820cc", "html_url": "https://github.com/rust-lang/rust/commit/687d3d15ba726dbb1ac6b85223ebe0e98c6820cc"}, {"sha": "063607eecbbdff53ee0cbc4b3f9a8ff49448f741", "url": "https://api.github.com/repos/rust-lang/rust/commits/063607eecbbdff53ee0cbc4b3f9a8ff49448f741", "html_url": "https://github.com/rust-lang/rust/commit/063607eecbbdff53ee0cbc4b3f9a8ff49448f741"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "8da4321fa5b71018db4a2240996b93d7d0a08d76", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -100,9 +100,6 @@ impl Diagnostic {\n \n     /// Cancel the diagnostic (a structured diagnostic must either be emitted or\n     /// canceled or it will panic when dropped).\n-    /// BEWARE: if this DiagnosticBuilder is an error, then creating it will\n-    /// bump the error count on the Handler and canceling it won't undo that.\n-    /// If you want to decrement the error count you should use `Handler::cancel`.\n     pub fn cancel(&mut self) {\n         self.level = Level::Cancelled;\n     }"}, {"sha": "61674ada6fa63c1bc37a7ff3e7b09d92a57801e7", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -83,7 +83,12 @@ impl<'a> DiagnosticBuilder<'a> {\n             return;\n         }\n \n-        let is_error = match self.level {\n+        self.handler.emit_db(&self);\n+        self.cancel();\n+    }\n+\n+    pub fn is_error(&self) -> bool {\n+        match self.level {\n             Level::Bug |\n             Level::Fatal |\n             Level::PhaseFatal |\n@@ -97,18 +102,7 @@ impl<'a> DiagnosticBuilder<'a> {\n             Level::Cancelled => {\n                 false\n             }\n-        };\n-\n-        self.handler.emit_db(&self);\n-        self.cancel();\n-\n-        if is_error {\n-            self.handler.bump_err_count();\n         }\n-\n-        // if self.is_fatal() {\n-        //     panic!(FatalError);\n-        // }\n     }\n \n     /// Convenience function for internal use, clients should use one of the"}, {"sha": "c4db39fae86197965db25448d8211e2a6642bfbf", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -588,6 +588,9 @@ impl Handler {\n         // one:\n         if self.emitted_diagnostics.borrow_mut().insert(diagnostic_hash) {\n             self.emitter.borrow_mut().emit(db);\n+            if db.is_error() {\n+                self.bump_err_count();\n+            }\n         }\n     }\n }"}, {"sha": "5de3204f931826b3d426ab37eb4cb372d43abe95", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-rustc_deprecated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.stderr?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -42,5 +42,5 @@ error: stability attributes may not be used outside of the standard library\n 35 |     #[rustc_deprecated = \"1500\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "eace1dc413a6b74a9325e3b7af88e3a29b1c77e4", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-stable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-stable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-stable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-stable.stderr?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -42,5 +42,5 @@ error: stability attributes may not be used outside of the standard library\n 35 |     #[stable = \"1300\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "59068279fde193ddbfd39569ffcd7250de8a73f0", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-unstable.stderr?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -42,5 +42,5 @@ error: stability attributes may not be used outside of the standard library\n 35 |     #[unstable = \"1200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "138f7693ebee1e17b414816cc3efd8895fdb3494", "filename": "src/test/ui/issue-42106.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Fissue-42106.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Fissue-42106.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-42106.stderr?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -8,5 +8,5 @@ error[E0502]: cannot borrow `*collection` as mutable because `collection` is als\n 14 | }\n    | - immutable borrow ends here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "2ac132f708c0f5bbd147fd74e305411e80e6209c", "filename": "src/test/ui/span/macro-ty-params.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ebf9f0a3196420e25cf1558b49ea3f38643c4/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr?ref=0f4ebf9f0a3196420e25cf1558b49ea3f38643c4", "patch": "@@ -22,5 +22,5 @@ error: generic arguments in macro path\n 20 |     m!(MyTrait<>); //~ ERROR generic arguments in macro path\n    |               ^^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n "}]}