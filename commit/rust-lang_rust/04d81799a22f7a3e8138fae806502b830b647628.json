{"sha": "04d81799a22f7a3e8138fae806502b830b647628", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZDgxNzk5YTIyZjdhM2U4MTM4ZmFlODA2NTAyYjgzMGI2NDc2Mjg=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-12T20:23:35Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-12T20:23:56Z"}, "message": "Dogfood", "tree": {"sha": "08e33ca0c6283d82678e6447d91fb6d4573036fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08e33ca0c6283d82678e6447d91fb6d4573036fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04d81799a22f7a3e8138fae806502b830b647628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04d81799a22f7a3e8138fae806502b830b647628", "html_url": "https://github.com/rust-lang/rust/commit/04d81799a22f7a3e8138fae806502b830b647628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04d81799a22f7a3e8138fae806502b830b647628/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba41430ce04ef64689acd1b991610076a3305db", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba41430ce04ef64689acd1b991610076a3305db", "html_url": "https://github.com/rust-lang/rust/commit/eba41430ce04ef64689acd1b991610076a3305db"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ee2e2d7206f8d6c0b1b117725f17d9b2a6eeaf84", "filename": "src/utils/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/04d81799a22f7a3e8138fae806502b830b647628/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04d81799a22f7a3e8138fae806502b830b647628/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=04d81799a22f7a3e8138fae806502b830b647628", "patch": "@@ -383,14 +383,14 @@ fn trim_multiline_inner(s: Cow<str>, ignore_first: bool, ch: char) -> Cow<str> {\n     let x = s.lines()\n              .skip(ignore_first as usize)\n              .filter_map(|l| {\n-                 if l.len() > 0 {\n+                 if l.is_empty() {\n+                     None\n+                 } else {\n                      // ignore empty lines\n                      Some(l.char_indices()\n                            .find(|&(_, x)| x != ch)\n                            .unwrap_or((l.len(), ch))\n                            .0)\n-                 } else {\n-                     None\n                  }\n              })\n              .min()\n@@ -399,7 +399,7 @@ fn trim_multiline_inner(s: Cow<str>, ignore_first: bool, ch: char) -> Cow<str> {\n         Cow::Owned(s.lines()\n                     .enumerate()\n                     .map(|(i, l)| {\n-                        if (ignore_first && i == 0) || l.len() == 0 {\n+                        if (ignore_first && i == 0) || l.is_empty() {\n                             l\n                         } else {\n                             l.split_at(x).1"}]}