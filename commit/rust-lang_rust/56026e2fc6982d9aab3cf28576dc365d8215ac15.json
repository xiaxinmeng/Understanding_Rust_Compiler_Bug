{"sha": "56026e2fc6982d9aab3cf28576dc365d8215ac15", "node_id": "C_kwDOAAsO6NoAKDU2MDI2ZTJmYzY5ODJkOWFhYjNjZjI4NTc2ZGMzNjVkODIxNWFjMTU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-29T23:25:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-29T23:25:02Z"}, "message": "Rollup merge of #97493 - compiler-errors:issue-97490, r=oli-obk\n\nUse `type_is_copy_modulo_regions` check in intrisicck\n\nThis one canoncalizes region variables correctly, preventing an ICE\n\nFixes #97490", "tree": {"sha": "886e0452dbbae2ec8381acc87e366cfafedc2c68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/886e0452dbbae2ec8381acc87e366cfafedc2c68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56026e2fc6982d9aab3cf28576dc365d8215ac15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilADOCRBK7hj4Ov3rIwAAW5YIADela8kUiEyNgdnxvrQ3J+tv\nbPlDKRauckmIMwTDZ89J3m6Py9OjQu3OhFV7+GLuTiVAx5D6/AfRk4XCHGG/K8Ct\nHmZzPyk77pUhjgZZOttCMSoMgtQjYxDsOybGGk8XoOhm4z01vvpb+Abf2qQwl8kF\nJtDAi+gOnFQi6Oronftv7xOSID+MlZ2qnanHpnymmAhsxBF7REySo4vkGP6KnVKa\nl7+tTs+EcGEj1Q4jgH/Gpodf7/cz2JSe2NPvzJNvfDa1K8fCYAzuO1DUFruJawls\n++qVpaDyEjp1bwxU9GL3kd/s23PbkhV4ol2b/i+xC+07gEUtjUFM5NITtcvY5rE=\n=xOLM\n-----END PGP SIGNATURE-----\n", "payload": "tree 886e0452dbbae2ec8381acc87e366cfafedc2c68\nparent 28b891916d4c85cd10fb2e9cfa8bc836a2c459f3\nparent 46d34cc9225fd11810d143ba3c78476bfe30e63d\nauthor Michael Goulet <michael@errs.io> 1653866702 -0700\ncommitter GitHub <noreply@github.com> 1653866702 -0700\n\nRollup merge of #97493 - compiler-errors:issue-97490, r=oli-obk\n\nUse `type_is_copy_modulo_regions` check in intrisicck\n\nThis one canoncalizes region variables correctly, preventing an ICE\n\nFixes #97490\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56026e2fc6982d9aab3cf28576dc365d8215ac15", "html_url": "https://github.com/rust-lang/rust/commit/56026e2fc6982d9aab3cf28576dc365d8215ac15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56026e2fc6982d9aab3cf28576dc365d8215ac15/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b891916d4c85cd10fb2e9cfa8bc836a2c459f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b891916d4c85cd10fb2e9cfa8bc836a2c459f3", "html_url": "https://github.com/rust-lang/rust/commit/28b891916d4c85cd10fb2e9cfa8bc836a2c459f3"}, {"sha": "46d34cc9225fd11810d143ba3c78476bfe30e63d", "url": "https://api.github.com/repos/rust-lang/rust/commits/46d34cc9225fd11810d143ba3c78476bfe30e63d", "html_url": "https://github.com/rust-lang/rust/commit/46d34cc9225fd11810d143ba3c78476bfe30e63d"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "469e6118575d2ffe6c255c04c5f818f0c19be156", "filename": "compiler/rustc_typeck/src/check/intrinsicck.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56026e2fc6982d9aab3cf28576dc365d8215ac15/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56026e2fc6982d9aab3cf28576dc365d8215ac15/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs?ref=56026e2fc6982d9aab3cf28576dc365d8215ac15", "patch": "@@ -9,6 +9,7 @@ use rustc_session::lint;\n use rustc_span::{Span, Symbol, DUMMY_SP};\n use rustc_target::abi::{Pointer, VariantIdx};\n use rustc_target::asm::{InlineAsmReg, InlineAsmRegClass, InlineAsmRegOrRegClass, InlineAsmType};\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n use super::FnCtxt;\n \n@@ -210,7 +211,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Check that the type implements Copy. The only case where this can\n         // possibly fail is for SIMD types which don't #[derive(Copy)].\n-        if !ty.is_copy_modulo_regions(self.tcx.at(DUMMY_SP), self.param_env) {\n+        if !self.infcx.type_is_copy_modulo_regions(self.param_env, ty, DUMMY_SP) {\n             let msg = \"arguments for inline assembly must be copyable\";\n             let mut err = self.tcx.sess.struct_span_err(expr.span, msg);\n             err.note(&format!(\"`{ty}` does not implement the Copy trait\"));"}, {"sha": "37862cf349cfce572a4e69f49e21de6374b920ef", "filename": "src/test/ui/asm/issue-97490.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/56026e2fc6982d9aab3cf28576dc365d8215ac15/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56026e2fc6982d9aab3cf28576dc365d8215ac15/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-97490.rs?ref=56026e2fc6982d9aab3cf28576dc365d8215ac15", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+// only-x86_64\n+// needs-asm-support\n+\n+pub type Yes = extern \"sysv64\" fn(&'static u8) -> !;\n+\n+fn main() {\n+    unsafe {\n+        let yes = &6 as *const _ as *const Yes;\n+        core::arch::asm!(\"call {}\", in(reg) yes, options(noreturn));\n+    }\n+}"}]}