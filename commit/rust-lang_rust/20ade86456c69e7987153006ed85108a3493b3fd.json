{"sha": "20ade86456c69e7987153006ed85108a3493b3fd", "node_id": "C_kwDOAAsO6NoAKDIwYWRlODY0NTZjNjllNzk4NzE1MzAwNmVkODUxMDhhMzQ5M2IzZmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-07T20:44:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-07T20:44:44Z"}, "message": "Rollup merge of #96822 - GuillaumeGomez:js-quote-rule, r=notriddle\n\nEnforce quote rule for JS source code\n\nWe mostly used double quotes but still had a weird mix. This eslint rule will now enforce it.\n\nr? `@notriddle`", "tree": {"sha": "7dd8945761380c031d87c4dd0923885979c72857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dd8945761380c031d87c4dd0923885979c72857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20ade86456c69e7987153006ed85108a3493b3fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJidto8CRBK7hj4Ov3rIwAAJFkIAFkO6Jb7ig8smFAt/RIaJGd3\nJO/+UpDrjp11NejeoruFrKaWwms+sXuMc4Jfz3rPJ3j1O7AM6xq6g+Wkc8KOpwkS\nPxsPphXT75lo95drWWm5M6BSTLhJUkX/MdOCYkju+pC72DcWUXN8TKo5zz9i+odM\nHA7jFLLtfYSvkLCSy7+iMPoIfYn2fXAs0rxky6Ay6qNo9nS3Jyli4Luq4wuPUFcy\nvxXcLzVltyrZkqY1OB6mfO9FT8tyEUx+vE29wbOhpItfy19Q8qps5b/EXSi7nJDI\nA0tV8QtlOlfBh+KiNd5PLhwEKzLOZnDnfBLg+gOSOdC+7rCxwLG5JIZRM68ulqk=\n=ljpG\n-----END PGP SIGNATURE-----\n", "payload": "tree 7dd8945761380c031d87c4dd0923885979c72857\nparent d6c9254cac0009ba3d497cfa859572c4df21f5b9\nparent 14897180ae6a0506a5ad0a9f6a30ae1f75916179\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1651956284 +0200\ncommitter GitHub <noreply@github.com> 1651956284 +0200\n\nRollup merge of #96822 - GuillaumeGomez:js-quote-rule, r=notriddle\n\nEnforce quote rule for JS source code\n\nWe mostly used double quotes but still had a weird mix. This eslint rule will now enforce it.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20ade86456c69e7987153006ed85108a3493b3fd", "html_url": "https://github.com/rust-lang/rust/commit/20ade86456c69e7987153006ed85108a3493b3fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20ade86456c69e7987153006ed85108a3493b3fd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c9254cac0009ba3d497cfa859572c4df21f5b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c9254cac0009ba3d497cfa859572c4df21f5b9", "html_url": "https://github.com/rust-lang/rust/commit/d6c9254cac0009ba3d497cfa859572c4df21f5b9"}, {"sha": "14897180ae6a0506a5ad0a9f6a30ae1f75916179", "url": "https://api.github.com/repos/rust-lang/rust/commits/14897180ae6a0506a5ad0a9f6a30ae1f75916179", "html_url": "https://github.com/rust-lang/rust/commit/14897180ae6a0506a5ad0a9f6a30ae1f75916179"}], "stats": {"total": 108, "additions": 56, "deletions": 52}, "files": [{"sha": "5fcffe715b12fe971d86edc6ad68c627a74d3211", "filename": "src/librustdoc/html/static/.eslintrc.js", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -17,6 +17,10 @@ module.exports = {\n             \"error\",\n             \"always\"\n         ],\n+        \"quotes\": [\n+            \"error\",\n+            \"double\"\n+        ],\n         \"no-var\": [\"error\"],\n         \"prefer-const\": [\"error\"],\n         \"prefer-arrow-callback\": [\"error\"],"}, {"sha": "336223ad28f329b02fc32cbad6ad895bf546d7e3", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -291,7 +291,7 @@ function loadCss(cssFileName) {\n \n (function() {\n     function loadScript(url) {\n-        const script = document.createElement('script');\n+        const script = document.createElement(\"script\");\n         script.src = url;\n         document.head.append(script);\n     }\n@@ -344,7 +344,7 @@ function loadCss(cssFileName) {\n             searchState.input.blur();\n         },\n         showResults: search => {\n-            if (search === null || typeof search === 'undefined') {\n+            if (search === null || typeof search === \"undefined\") {\n                 search = searchState.outputElement();\n             }\n             switchDisplayedElement(search);\n@@ -390,7 +390,7 @@ function loadCss(cssFileName) {\n                 loadSearch();\n             });\n \n-            if (search_input.value !== '') {\n+            if (search_input.value !== \"\") {\n                 loadSearch();\n             }\n \n@@ -968,7 +968,7 @@ function loadCss(cssFileName) {\n \n     onEachLazy(document.getElementsByClassName(\"notable-traits\"), e => {\n         e.onclick = function() {\n-            this.getElementsByClassName('notable-traits-tooltiptext')[0]\n+            this.getElementsByClassName(\"notable-traits-tooltiptext\")[0]\n                 .classList.toggle(\"force-tooltip\");\n         };\n     });\n@@ -1070,29 +1070,29 @@ function loadCss(cssFileName) {\n         const path = [];\n \n         onEach(parent.childNodes, child => {\n-            if (child.tagName === 'A') {\n+            if (child.tagName === \"A\") {\n                 path.push(child.textContent);\n             }\n         });\n \n-        const el = document.createElement('textarea');\n-        el.value = path.join('::');\n-        el.setAttribute('readonly', '');\n+        const el = document.createElement(\"textarea\");\n+        el.value = path.join(\"::\");\n+        el.setAttribute(\"readonly\", \"\");\n         // To not make it appear on the screen.\n-        el.style.position = 'absolute';\n-        el.style.left = '-9999px';\n+        el.style.position = \"absolute\";\n+        el.style.left = \"-9999px\";\n \n         document.body.appendChild(el);\n         el.select();\n-        document.execCommand('copy');\n+        document.execCommand(\"copy\");\n         document.body.removeChild(el);\n \n         // There is always one children, but multiple childNodes.\n-        but.children[0].style.display = 'none';\n+        but.children[0].style.display = \"none\";\n \n         let tmp;\n         if (but.childNodes.length < 2) {\n-            tmp = document.createTextNode('\u2713');\n+            tmp = document.createTextNode(\"\u2713\");\n             but.appendChild(tmp);\n         } else {\n             onEachLazy(but.childNodes, e => {\n@@ -1101,15 +1101,15 @@ function loadCss(cssFileName) {\n                     return true;\n                 }\n             });\n-            tmp.textContent = '\u2713';\n+            tmp.textContent = \"\u2713\";\n         }\n \n         if (reset_button_timeout !== null) {\n             window.clearTimeout(reset_button_timeout);\n         }\n \n         function reset_button() {\n-            tmp.textContent = '';\n+            tmp.textContent = \"\";\n             reset_button_timeout = null;\n             but.children[0].style.display = \"\";\n         }"}, {"sha": "408b7e19feadd0cd09d72aa63e64c636200c5aca", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -8,7 +8,7 @@\n \n     // Scroll code block to the given code location\n     function scrollToLoc(elt, loc) {\n-        const lines = elt.querySelector('.line-numbers');\n+        const lines = elt.querySelector(\".line-numbers\");\n         let scrollOffset;\n \n         // If the block is greater than the size of the viewer,\n@@ -32,16 +32,16 @@\n     function updateScrapedExample(example) {\n         const locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n         let locIndex = 0;\n-        const highlights = Array.prototype.slice.call(example.querySelectorAll('.highlight'));\n-        const link = example.querySelector('.scraped-example-title a');\n+        const highlights = Array.prototype.slice.call(example.querySelectorAll(\".highlight\"));\n+        const link = example.querySelector(\".scraped-example-title a\");\n \n         if (locs.length > 1) {\n             // Toggle through list of examples in a given file\n             const onChangeLoc = changeIndex => {\n-                removeClass(highlights[locIndex], 'focus');\n+                removeClass(highlights[locIndex], \"focus\");\n                 changeIndex();\n                 scrollToLoc(example, locs[locIndex][0]);\n-                addClass(highlights[locIndex], 'focus');\n+                addClass(highlights[locIndex], \"focus\");\n \n                 const url = locs[locIndex][1];\n                 const title = locs[locIndex][2];\n@@ -50,24 +50,24 @@\n                 link.innerHTML = title;\n             };\n \n-            example.querySelector('.prev')\n-                .addEventListener('click', () => {\n+            example.querySelector(\".prev\")\n+                .addEventListener(\"click\", () => {\n                     onChangeLoc(() => {\n                         locIndex = (locIndex - 1 + locs.length) % locs.length;\n                     });\n                 });\n \n-            example.querySelector('.next')\n-                .addEventListener('click', () => {\n+            example.querySelector(\"next\")\n+                .addEventListener(\"click\", () => {\n                     onChangeLoc(() => {\n                         locIndex = (locIndex + 1) % locs.length;\n                     });\n                 });\n         }\n \n-        const expandButton = example.querySelector('.expand');\n+        const expandButton = example.querySelector(\".expand\");\n         if (expandButton) {\n-            expandButton.addEventListener('click', () => {\n+            expandButton.addEventListener(\"click\", () => {\n                 if (hasClass(example, \"expanded\")) {\n                     removeClass(example, \"expanded\");\n                     scrollToLoc(example, locs[0][0]);\n@@ -81,19 +81,19 @@\n         scrollToLoc(example, locs[0][0]);\n     }\n \n-    const firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n+    const firstExamples = document.querySelectorAll(\".scraped-example-list > .scraped-example\");\n     onEachLazy(firstExamples, updateScrapedExample);\n-    onEachLazy(document.querySelectorAll('.more-examples-toggle'), toggle => {\n+    onEachLazy(document.querySelectorAll(\".more-examples-toggle\"), toggle => {\n         // Allow users to click the left border of the <details> section to close it,\n         // since the section can be large and finding the [+] button is annoying.\n-        onEachLazy(toggle.querySelectorAll('.toggle-line, .hide-more'), button => {\n-            button.addEventListener('click', () => {\n+        onEachLazy(toggle.querySelectorAll(\".toggle-line, .hide-more\"), button => {\n+            button.addEventListener(\"click\", () => {\n                 toggle.open = false;\n             });\n         });\n \n-        const moreExamples = toggle.querySelectorAll('.scraped-example');\n-        toggle.querySelector('summary').addEventListener('click', () => {\n+        const moreExamples = toggle.querySelectorAll(\".scraped-example\");\n+        toggle.querySelector(\"summary\").addEventListener(\"click\", () => {\n             // Wrapping in setTimeout ensures the update happens after the elements are actually\n             // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n             // depends on offsetHeight, a property that requires an element to be visible to"}, {"sha": "1e3894c1fcd276fcdec297936a9ae9b1c68dc79d", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -204,7 +204,7 @@ window.initSearch = rawSearchIndex => {\n      * @return {boolean}\n      */\n     function isPathStart(parserState) {\n-        return parserState.userQuery.slice(parserState.pos, parserState.pos + 2) == '::';\n+        return parserState.userQuery.slice(parserState.pos, parserState.pos + 2) == \"::\";\n     }\n \n     /**\n@@ -215,7 +215,7 @@ window.initSearch = rawSearchIndex => {\n      * @return {boolean}\n      */\n     function isReturnArrow(parserState) {\n-        return parserState.userQuery.slice(parserState.pos, parserState.pos + 2) == '->';\n+        return parserState.userQuery.slice(parserState.pos, parserState.pos + 2) == \"->\";\n     }\n \n     /**\n@@ -227,10 +227,10 @@ window.initSearch = rawSearchIndex => {\n      */\n     function isIdentCharacter(c) {\n         return (\n-            c === '_' ||\n-            (c >= '0' && c <= '9') ||\n-            (c >= 'a' && c <= 'z') ||\n-            (c >= 'A' && c <= 'Z'));\n+            c === \"_\" ||\n+            (c >= \"0\" && c <= \"9\") ||\n+            (c >= \"a\" && c <= \"z\") ||\n+            (c >= \"A\" && c <= \"Z\"));\n     }\n \n     /**\n@@ -264,7 +264,7 @@ window.initSearch = rawSearchIndex => {\n      * @return {QueryElement}                - The newly created `QueryElement`.\n      */\n     function createQueryElement(query, parserState, name, generics, isInGenerics) {\n-        if (name === '*' || (name.length === 0 && generics.length === 0)) {\n+        if (name === \"*\" || (name.length === 0 && generics.length === 0)) {\n             return;\n         }\n         if (query.literalSearch && parserState.totalElems - parserState.genericsElems > 0) {\n@@ -1708,29 +1708,30 @@ window.initSearch = rawSearchIndex => {\n \n         let crates = \"\";\n         if (window.ALL_CRATES.length > 1) {\n-            crates = ` in <select id=\"crate-search\"><option value=\"All crates\">All crates</option>`;\n+            crates = \" in <select id=\\\"crate-search\\\"><option value=\\\"All crates\\\">\" +\n+                \"All crates</option>\";\n             for (const c of window.ALL_CRATES) {\n                 crates += `<option value=\"${c}\" ${c == filterCrates && \"selected\"}>${c}</option>`;\n             }\n-            crates += `</select>`;\n+            crates += \"</select>\";\n         }\n \n         let typeFilter = \"\";\n         if (results.query.typeFilter !== NO_TYPE_FILTER) {\n             typeFilter = \" (type: \" + escape(itemTypes[results.query.typeFilter]) + \")\";\n         }\n \n-        let output = `<div id=\"search-settings\">` +\n+        let output = \"<div id=\\\"search-settings\\\">\" +\n             `<h1 class=\"search-results-title\">Results for ${escape(results.query.userQuery)}` +\n             `${typeFilter}</h1> in ${crates} </div>`;\n         if (results.query.error !== null) {\n             output += `<h3>Query parser error: \"${results.query.error}\".</h3>`;\n-            output += '<div id=\"titles\">' +\n+            output += \"<div id=\\\"titles\\\">\" +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 \"</div>\";\n             currentTab = 0;\n         } else if (results.query.foundElems <= 1 && results.query.returned.length === 0) {\n-            output += `<div id=\"titles\">` +\n+            output += \"<div id=\\\"titles\\\">\" +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 makeTabHeader(1, \"In Parameters\", ret_in_args[1]) +\n                 makeTabHeader(2, \"In Return Types\", ret_returned[1]) +\n@@ -1740,7 +1741,7 @@ window.initSearch = rawSearchIndex => {\n                 results.query.elems.length === 0 ? \"In Function Return Types\" :\n                 results.query.returned.length === 0 ? \"In Function Parameters\" :\n                 \"In Function Signatures\";\n-            output += '<div id=\"titles\">' +\n+            output += \"<div id=\\\"titles\\\">\" +\n                 makeTabHeader(0, signatureTabTitle, ret_others[1]) +\n                 \"</div>\";\n             currentTab = 0;"}, {"sha": "ad32a193893896a6be5ea62162f6b863fde22544", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -108,7 +108,7 @@\n         let output = \"\";\n \n         for (const setting of settings) {\n-            output += `<div class=\"setting-line\">`;\n+            output += \"<div class=\\\"setting-line\\\">\";\n             const js_data_name = setting[\"js_name\"];\n             const setting_name = setting[\"name\"];\n \n@@ -217,11 +217,10 @@\n \n         if (isSettingsPage) {\n             innerHTML +=\n-                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"history.back();\">Back</a>`;\n+                \"<a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">Back</a>\";\n         } else {\n-            innerHTML +=\n-                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"switchDisplayedElement(null);\">\\\n-                    Back</a>`;\n+            innerHTML += \"<a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" \" +\n+                \"onclick=\\\"switchDisplayedElement(null);\\\">Back</a>\";\n         }\n         innerHTML += `</span>\n             </div>"}, {"sha": "21de7d77d64e7f60a3b449051e1758539d64e337", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/20ade86456c69e7987153006ed85108a3493b3fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=20ade86456c69e7987153006ed85108a3493b3fd", "patch": "@@ -24,7 +24,7 @@ function getSettingValue(settingName) {\n     if (settingsDataset !== null) {\n         // See the comment for `default_settings.into_iter()` etc. in\n         // `Options::from_matches` in `librustdoc/config.rs`.\n-        const def = settingsDataset[settingName.replace(/-/g,'_')];\n+        const def = settingsDataset[settingName.replace(/-/g,\"_\")];\n         if (def !== undefined) {\n             return def;\n         }\n@@ -173,7 +173,7 @@ const updateSystemTheme = (function () {\n         // fallback to the CSS computed value\n         return () => {\n             const cssTheme = getComputedStyle(document.documentElement)\n-                .getPropertyValue('content');\n+                .getPropertyValue(\"content\");\n \n             switchTheme(\n                 window.currentTheme,"}]}