{"sha": "69aaed872cec119b1034c52151d00fb5308e7407", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YWFlZDg3MmNlYzExOWIxMDM0YzUyMTUxZDAwZmI1MzA4ZTc0MDc=", "commit": {"author": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2020-03-06T09:37:23Z"}, "committer": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2020-03-10T17:11:36Z"}, "message": "Make Point `Copy` in arithmetic documentation\n\nSmall composite types like `Point { x: i32, y: i32}` are plain\nold data and we should encourage users to derive `Copy` on them.\n\nThis changes the semantics of the edited examples slightly: instead\nof consuming the operands during addition, it will copy them. This\nis desired behaviour.\n\nCo-Authored-By: Jake Goulding <shepmaster@mac.com>", "tree": {"sha": "6ac81703f47f4965c2e44bf8b3fa1fc8a0e55bdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ac81703f47f4965c2e44bf8b3fa1fc8a0e55bdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69aaed872cec119b1034c52151d00fb5308e7407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69aaed872cec119b1034c52151d00fb5308e7407", "html_url": "https://github.com/rust-lang/rust/commit/69aaed872cec119b1034c52151d00fb5308e7407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69aaed872cec119b1034c52151d00fb5308e7407/comments", "author": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "committer": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1b69d53aeb59a83de192ea67dbe4707b9a7b73", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1b69d53aeb59a83de192ea67dbe4707b9a7b73", "html_url": "https://github.com/rust-lang/rust/commit/4a1b69d53aeb59a83de192ea67dbe4707b9a7b73"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e9ec81394e32d8c528cc41c1864f992014f9bd11", "filename": "src/libcore/ops/arith.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/69aaed872cec119b1034c52151d00fb5308e7407/src%2Flibcore%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69aaed872cec119b1034c52151d00fb5308e7407/src%2Flibcore%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Farith.rs?ref=69aaed872cec119b1034c52151d00fb5308e7407", "patch": "@@ -13,7 +13,7 @@\n /// ```\n /// use std::ops::Add;\n ///\n-/// #[derive(Debug, PartialEq)]\n+/// #[derive(Debug, Copy, Clone, PartialEq)]\n /// struct Point {\n ///     x: i32,\n ///     y: i32,\n@@ -42,7 +42,7 @@\n /// ```\n /// use std::ops::Add;\n ///\n-/// #[derive(Debug, PartialEq)]\n+/// #[derive(Debug, Copy, Clone, PartialEq)]\n /// struct Point<T> {\n ///     x: T,\n ///     y: T,\n@@ -115,7 +115,7 @@ add_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n /// ```\n /// use std::ops::Sub;\n ///\n-/// #[derive(Debug, PartialEq)]\n+/// #[derive(Debug, Copy, Clone, PartialEq)]\n /// struct Point {\n ///     x: i32,\n ///     y: i32,\n@@ -657,7 +657,7 @@ neg_impl_numeric! { isize i8 i16 i32 i64 i128 f32 f64 }\n /// ```\n /// use std::ops::AddAssign;\n ///\n-/// #[derive(Debug, PartialEq)]\n+/// #[derive(Debug, Copy, Clone, PartialEq)]\n /// struct Point {\n ///     x: i32,\n ///     y: i32,\n@@ -715,7 +715,7 @@ add_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n /// ```\n /// use std::ops::SubAssign;\n ///\n-/// #[derive(Debug, PartialEq)]\n+/// #[derive(Debug, Copy, Clone, PartialEq)]\n /// struct Point {\n ///     x: i32,\n ///     y: i32,"}, {"sha": "e3e5934b44be1f0732913ce89568a556dc3d4e19", "filename": "src/libcore/ops/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/69aaed872cec119b1034c52151d00fb5308e7407/src%2Flibcore%2Fops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69aaed872cec119b1034c52151d00fb5308e7407/src%2Flibcore%2Fops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fmod.rs?ref=69aaed872cec119b1034c52151d00fb5308e7407", "patch": "@@ -42,7 +42,7 @@\n //! ```rust\n //! use std::ops::{Add, Sub};\n //!\n-//! #[derive(Debug, PartialEq)]\n+//! #[derive(Debug, Copy, Clone, PartialEq)]\n //! struct Point {\n //!     x: i32,\n //!     y: i32,"}]}