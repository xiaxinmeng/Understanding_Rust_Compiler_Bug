{"sha": "d8e309320d55e08f5bbda2f18b20a3a64198061e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZTMwOTMyMGQ1NWUwOGY1YmJkYTJmMThiMjBhM2E2NDE5ODA2MWU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-31T23:32:41Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-01T20:34:26Z"}, "message": "added unary_negate feature gate.", "tree": {"sha": "cac34b14bcbbdcbbfda8714d6d9ba68062570e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cac34b14bcbbdcbbfda8714d6d9ba68062570e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8e309320d55e08f5bbda2f18b20a3a64198061e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8e309320d55e08f5bbda2f18b20a3a64198061e", "html_url": "https://github.com/rust-lang/rust/commit/d8e309320d55e08f5bbda2f18b20a3a64198061e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8e309320d55e08f5bbda2f18b20a3a64198061e/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d528aa9960cb9b937d8ef6c09905a6a8076d5f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d528aa9960cb9b937d8ef6c09905a6a8076d5f3a", "html_url": "https://github.com/rust-lang/rust/commit/d528aa9960cb9b937d8ef6c09905a6a8076d5f3a"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "d6b14e84d919fde7a755cd2e52ca1282101106b5", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8e309320d55e08f5bbda2f18b20a3a64198061e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8e309320d55e08f5bbda2f18b20a3a64198061e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d8e309320d55e08f5bbda2f18b20a3a64198061e", "patch": "@@ -120,6 +120,7 @@ use syntax::attr::AttrMetaMethods;\n use syntax::ast::{self, DefId, Visibility};\n use syntax::ast_util::{self, local_def};\n use syntax::codemap::{self, Span};\n+use syntax::feature_gate;\n use syntax::owned_slice::OwnedSlice;\n use syntax::parse::token;\n use syntax::print::pprust;\n@@ -3258,6 +3259,15 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n                                                       tcx.lang_items.neg_trait(),\n                                                       expr, &**oprnd, oprnd_t, unop);\n                     }\n+                    if let ty::ty_uint(_) = oprnd_t.sty {\n+                        if !tcx.sess.features.borrow().negate_unsigned {\n+                            feature_gate::emit_feature_err(\n+                                &tcx.sess.parse_sess.span_diagnostic,\n+                                \"negate_unsigned\",\n+                                expr.span,\n+                                \"unary negation of unsigned integers may be removed in the future\");\n+                        }\n+                    }\n                 }\n             }\n         }"}, {"sha": "adcef07e19032b5cc421783cb79616232066731c", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d8e309320d55e08f5bbda2f18b20a3a64198061e/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8e309320d55e08f5bbda2f18b20a3a64198061e/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d8e309320d55e08f5bbda2f18b20a3a64198061e", "patch": "@@ -150,6 +150,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // #23121. Array patterns have some hazards yet.\n     (\"slice_patterns\", \"1.0.0\", Active),\n+\n+    // Allows use of unary negate on unsigned integers, e.g. -e for e: u8\n+    (\"negate_unsigned\", \"1.0.0\", Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -319,6 +322,7 @@ pub struct Features {\n     pub allow_custom_derive: bool,\n     pub simd_ffi: bool,\n     pub unmarked_api: bool,\n+    pub negate_unsigned: bool,\n     /// spans of #![feature] attrs for stable language features. for error reporting\n     pub declared_stable_lang_features: Vec<Span>,\n     /// #![feature] attrs for non-language (library) features\n@@ -340,6 +344,7 @@ impl Features {\n             allow_custom_derive: false,\n             simd_ffi: false,\n             unmarked_api: false,\n+            negate_unsigned: false,\n             declared_stable_lang_features: Vec::new(),\n             declared_lib_features: Vec::new()\n         }\n@@ -712,6 +717,7 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler,\n         allow_custom_derive: cx.has_feature(\"custom_derive\"),\n         simd_ffi: cx.has_feature(\"simd_ffi\"),\n         unmarked_api: cx.has_feature(\"unmarked_api\"),\n+        negate_unsigned: cx.has_feature(\"negate_unsigned\"),\n         declared_stable_lang_features: accepted_features,\n         declared_lib_features: unknown_features\n     }"}]}