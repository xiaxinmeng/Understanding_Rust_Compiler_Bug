{"sha": "788840612e9da529158ada25d2160ca07d5a8dc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODg0MDYxMmU5ZGE1MjkxNThhZGEyNWQyMTYwY2EwN2Q1YThkYzk=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-21T15:10:03Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-21T15:19:06Z"}, "message": "Fix wrong names when inlining", "tree": {"sha": "49bc72e935c71329057d2d4918c7b5358059436b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49bc72e935c71329057d2d4918c7b5358059436b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/788840612e9da529158ada25d2160ca07d5a8dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/788840612e9da529158ada25d2160ca07d5a8dc9", "html_url": "https://github.com/rust-lang/rust/commit/788840612e9da529158ada25d2160ca07d5a8dc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/788840612e9da529158ada25d2160ca07d5a8dc9/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c94f8be992719a6e6652018e39a653366b4227f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c94f8be992719a6e6652018e39a653366b4227f", "html_url": "https://github.com/rust-lang/rust/commit/8c94f8be992719a6e6652018e39a653366b4227f"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "d58a88957df22294e2021cf39f1fce04e03c8284", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=788840612e9da529158ada25d2160ca07d5a8dc9", "patch": "@@ -1922,13 +1922,17 @@ impl Clean<BareFunctionDecl> for hir::BareFnTy<'_> {\n     }\n }\n \n-impl Clean<Item> for hir::Item<'_> {\n+impl Clean<Item> for (&hir::Item<'_>, Option<Ident>) {\n     fn clean(&self, cx: &DocContext<'_>) -> Item {\n         use hir::ItemKind;\n \n-        let def_id = cx.tcx.hir().local_def_id(self.hir_id).to_def_id();\n-        let name = cx.tcx.hir().name(self.hir_id);\n-        let kind = match self.kind {\n+        let (item, renamed) = self;\n+        let def_id = cx.tcx.hir().local_def_id(item.hir_id).to_def_id();\n+        let name = match renamed {\n+            Some(ident) => ident.name,\n+            None => cx.tcx.hir().name(item.hir_id),\n+        };\n+        let kind = match item.kind {\n             ItemKind::Static(ty, mutability, body_id) => StaticItem(Static {\n                 type_: ty.clean(cx),\n                 mutability,"}, {"sha": "d56328cc2aa08743c4f711335f2237142aba5128", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=788840612e9da529158ada25d2160ca07d5a8dc9", "patch": "@@ -4,7 +4,7 @@ crate use self::StructType::*;\n \n use rustc_ast as ast;\n use rustc_span::hygiene::MacroKind;\n-use rustc_span::{self, Span, Symbol};\n+use rustc_span::{self, symbol::Ident, Span, Symbol};\n \n use rustc_hir as hir;\n use rustc_hir::def_id::CrateNum;\n@@ -20,7 +20,8 @@ crate struct Module<'hir> {\n     crate fns: Vec<Function<'hir>>,\n     crate mods: Vec<Module<'hir>>,\n     crate id: hir::HirId,\n-    crate items: Vec<&'hir hir::Item<'hir>>,\n+    // (item, renamed)\n+    crate items: Vec<(&'hir hir::Item<'hir>, Option<Ident>)>,\n     crate traits: Vec<Trait<'hir>>,\n     crate impls: Vec<Impl<'hir>>,\n     crate foreigns: Vec<ForeignItem<'hir>>,"}, {"sha": "c55e5f7690c14da2a4e8310ed258f6f8f15f1139", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/788840612e9da529158ada25d2160ca07d5a8dc9/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=788840612e9da529158ada25d2160ca07d5a8dc9", "patch": "@@ -370,21 +370,21 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                     Some(ident.name),\n                 ));\n             }\n-            hir::ItemKind::Enum(..) => om.items.push(item),\n-            hir::ItemKind::Struct(..) => om.items.push(item),\n-            hir::ItemKind::Union(..) => om.items.push(item),\n             hir::ItemKind::Fn(ref sig, ref gen, body) => {\n                 self.visit_fn(om, item, ident.name, &sig.decl, sig.header, gen, body)\n             }\n-            hir::ItemKind::TyAlias(..)\n+            hir::ItemKind::Enum(..)\n+            | hir::ItemKind::Struct(..)\n+            | hir::ItemKind::Union(..)\n+            | hir::ItemKind::TyAlias(..)\n             | hir::ItemKind::OpaqueTy(..)\n             | hir::ItemKind::Static(..)\n-            | hir::ItemKind::TraitAlias(..) => om.items.push(item),\n+            | hir::ItemKind::TraitAlias(..) => om.items.push((item, renamed)),\n             hir::ItemKind::Const(..) => {\n                 // Underscore constants do not correspond to a nameable item and\n                 // so are never useful in documentation.\n                 if ident.name != kw::Underscore {\n-                    om.items.push(item);\n+                    om.items.push((item, renamed));\n                 }\n             }\n             hir::ItemKind::Trait(is_auto, unsafety, ref generics, ref bounds, ref item_ids) => {"}]}