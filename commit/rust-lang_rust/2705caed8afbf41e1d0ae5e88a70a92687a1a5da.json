{"sha": "2705caed8afbf41e1d0ae5e88a70a92687a1a5da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MDVjYWVkOGFmYmY0MWUxZDBhZTVlODhhNzBhOTI2ODdhMWE1ZGE=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-20T09:32:10Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-20T15:01:51Z"}, "message": "Track element count only for types that need drop", "tree": {"sha": "11c059a3d1ae98f7d570b7db3f84576cbe6f4a4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11c059a3d1ae98f7d570b7db3f84576cbe6f4a4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2705caed8afbf41e1d0ae5e88a70a92687a1a5da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2705caed8afbf41e1d0ae5e88a70a92687a1a5da", "html_url": "https://github.com/rust-lang/rust/commit/2705caed8afbf41e1d0ae5e88a70a92687a1a5da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2705caed8afbf41e1d0ae5e88a70a92687a1a5da/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85e94927622665a9e9022de0d33a890a2e32d43", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85e94927622665a9e9022de0d33a890a2e32d43", "html_url": "https://github.com/rust-lang/rust/commit/a85e94927622665a9e9022de0d33a890a2e32d43"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1a85a46ed74f0a8c607f8a09ae5bec561a01d6cc", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2705caed8afbf41e1d0ae5e88a70a92687a1a5da/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2705caed8afbf41e1d0ae5e88a70a92687a1a5da/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=2705caed8afbf41e1d0ae5e88a70a92687a1a5da", "patch": "@@ -217,8 +217,12 @@ impl<T> TypedArena<T> {\n             let mut chunks = self.chunks.borrow_mut();\n             let mut new_cap;\n             if let Some(last_chunk) = chunks.last_mut() {\n-                let used_bytes = self.ptr.get() as usize - last_chunk.start() as usize;\n-                last_chunk.entries = used_bytes / mem::size_of::<T>();\n+                // If a type is `!needs_drop`, we don't need to keep track of how many elements\n+                // the chunk stores - the field will be ignored anyway.\n+                if mem::needs_drop::<T>() {\n+                    let used_bytes = self.ptr.get() as usize - last_chunk.start() as usize;\n+                    last_chunk.entries = used_bytes / mem::size_of::<T>();\n+                }\n \n                 // If the previous chunk's len is less than HUGE_PAGE\n                 // bytes, then this chunk will be least double the previous"}]}