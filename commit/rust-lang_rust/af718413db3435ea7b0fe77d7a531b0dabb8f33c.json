{"sha": "af718413db3435ea7b0fe77d7a531b0dabb8f33c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNzE4NDEzZGIzNDM1ZWE3YjBmZTc3ZDdhNTMxYjBkYWJiOGYzM2M=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-22T09:55:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-22T09:55:12Z"}, "message": "Rustup", "tree": {"sha": "5f80ee8f19fb1232edd88054ea626961671b5fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f80ee8f19fb1232edd88054ea626961671b5fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af718413db3435ea7b0fe77d7a531b0dabb8f33c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAloVSYAACgkQpp+NIls6\n19lJrhAAi4yCGzAusmqcdydZrSlHRUy1MXdLJt25mhdnWzi1iyvSkjns+1KIweoa\n0sDsHqLiOtA0kJ7ckD5E9yRhKzDae5FjIT9Dw9Iyuguea197K8dFslzhTiEJxL2u\nPzOcOOhmQu+/fjWYfPRrvPqcliCdJtCDjik/eZzUhsjwm8V3tEfi+tYebwgQcGum\nxgRHvmErcMrW/7m/q0LJx9eT7gMIL3Rr2D+66316mHA5nic3sd4UT3WQwXVOhoQA\nbNScO++dM0t50ePDTkoZuwDZykBP6MQ5tie2mVnz3VsVeSRfa+7gua2Th9lRQLul\ndBqyDi6pQ8bf5JzryU/PTp1uIYCkagkBJ8Xew4X933d0BWvEIhB+oLe5wBjIgrT5\nMp+f+gsiVQY9vDdTfPK8QdM7huDUT7FtcG5Qpfhd8tVninBFjlXOe6SPnMplcm5R\n5PHA0kmbnkoT2w8Vh/ibhdJgmGRa5x3ZHWOaxohj/h59e1HbViiKbCkOyOkbgCCE\nhQTDlLGHeuB5/Zj9x6Ms+RxtyjwFF1Bg833VdvUvXKoA8OWUix6jpm6OtOYS8+nc\nvZYiH8wr84He8hgcH53p5gGIo9psX36vqhPTasbr/MBAlvLAUiGrugorfHB+/PWV\nJPyLkrXdlJW+fdWs8avw5B5lMGzPKhqm+KOhZld+Z5uWFdeAAfg=\n=rkvu\n-----END PGP SIGNATURE-----", "payload": "tree 5f80ee8f19fb1232edd88054ea626961671b5fb4\nparent c362efa42048d632c968a84002ca29396f0eb115\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1511344512 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1511344512 +0100\n\nRustup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af718413db3435ea7b0fe77d7a531b0dabb8f33c", "html_url": "https://github.com/rust-lang/rust/commit/af718413db3435ea7b0fe77d7a531b0dabb8f33c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af718413db3435ea7b0fe77d7a531b0dabb8f33c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c362efa42048d632c968a84002ca29396f0eb115", "url": "https://api.github.com/repos/rust-lang/rust/commits/c362efa42048d632c968a84002ca29396f0eb115", "html_url": "https://github.com/rust-lang/rust/commit/c362efa42048d632c968a84002ca29396f0eb115"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "25fcaf9d2da24737695f9663498dfc23f7a6ff58", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.174\n+* Rustup to *rustc 1.23.0-nightly (63739ab7b 2017-11-21)*\n+\n ## 0.0.173\n * Rustup to *rustc 1.23.0-nightly (33374fa9d 2017-11-20)*\n "}, {"sha": "7bdb619e8d0b09df5a8bdf3d7f3b658c9da9f44d", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.173\"\n+version = \"0.0.174\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -37,7 +37,7 @@ path = \"src/driver.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.173\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.174\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.2\"\n regex = \"0.2\""}, {"sha": "4c88cc0c07184424c77baff3788a9f1c4b3d24b3", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.173\"\n+version = \"0.0.174\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "280e504d88e6e7685a4375c469950738525b59d3", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -325,8 +325,14 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             TyPath(ref path) => {\n                 self.collect_anonymous_lifetimes(path, ty);\n             },\n-            TyImplTraitExistential(ref param_bounds) |\n-                TyImplTraitUniversal(_, ref param_bounds) => for bound in param_bounds {\n+            TyImplTraitExistential(ref exist_ty, _) => {\n+                for bound in &exist_ty.bounds {\n+                    if let RegionTyParamBound(_) = *bound {\n+                        self.record(&None);\n+                    }\n+                }\n+            }\n+            TyImplTraitUniversal(_, ref param_bounds) => for bound in param_bounds {\n                 if let RegionTyParamBound(_) = *bound {\n                     self.record(&None);\n                 }"}, {"sha": "448a1fe0559aa754abb5a3c2a797e6fbde764e41", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -38,7 +38,7 @@ note: potential failure(s)\n    |\n 31 |             panic!();\n    |             ^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:37:1\n@@ -65,7 +65,7 @@ note: potential failure(s)\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n 43 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:55:1\n@@ -87,5 +87,5 @@ note: potential failure(s)\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 58 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n "}, {"sha": "8ddb12b653c2c3e26d3cc0a8d1608292bc51f427", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -264,7 +264,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 238 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:246:9\n@@ -290,7 +290,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 244 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:252:9\n@@ -316,7 +316,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 250 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:258:18\n@@ -334,7 +334,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 257 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:265:18\n@@ -352,7 +352,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 264 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:271:18\n@@ -370,7 +370,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 270 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:277:18\n@@ -388,5 +388,5 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 276 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate\n+    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n "}, {"sha": "0ec8615a0105591e4758851679b08443b12d7e19", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af718413db3435ea7b0fe77d7a531b0dabb8f33c/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=af718413db3435ea7b0fe77d7a531b0dabb8f33c", "patch": "@@ -5,15 +5,15 @@ error: handle written amount returned or use `Write::write_all` instead\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D unused-io-amount` implied by `-D warnings`\n-   = note: this error originates in a macro outside of the current crate\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:13:5\n    |\n 13 |     try!(s.read(&mut buf));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro outside of the current crate\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n \n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:18:5"}]}