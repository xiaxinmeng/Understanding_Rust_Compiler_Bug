{"sha": "ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOWNlN2JjZDllNjI4ZTNhNGRmNWEzZGE5MWU3ZGZjMjlkZmY5ZjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-06-18T13:44:56Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-06-18T13:44:56Z"}, "message": "Align multiline string literal", "tree": {"sha": "c8fd4893e5eee277c115453d41a0f3f8d9913c16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8fd4893e5eee277c115453d41a0f3f8d9913c16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2", "html_url": "https://github.com/rust-lang/rust/commit/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2/comments", "author": null, "committer": null, "parents": [{"sha": "be18e7af90f48ee1518f32f3e1aefe1955e1d403", "url": "https://api.github.com/repos/rust-lang/rust/commits/be18e7af90f48ee1518f32f3e1aefe1955e1d403", "html_url": "https://github.com/rust-lang/rust/commit/be18e7af90f48ee1518f32f3e1aefe1955e1d403"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "b667eae8b146d3ab9f886eefe9cae95b93d8c952", "filename": "src/expr.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ae9ce7bcd9e628e3a4df5a3da91e7dfc29dff9f2", "patch": "@@ -1856,7 +1856,26 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n     let string_lit = context.snippet(span);\n \n     if !context.config.format_strings() && !context.config.force_format_strings() {\n-        return Some(string_lit);\n+        if string_lit\n+            .lines()\n+            .rev()\n+            .skip(1)\n+            .all(|line| line.ends_with('\\\\'))\n+        {\n+            let new_indent = shape.visual_indent(1).indent;\n+            return Some(String::from(\n+                string_lit\n+                    .lines()\n+                    .map(|line| {\n+                        new_indent.to_string(context.config) + line.trim_left()\n+                    })\n+                    .collect::<Vec<_>>()\n+                    .join(\"\\n\")\n+                    .trim_left(),\n+            ));\n+        } else {\n+            return Some(string_lit);\n+        }\n     }\n \n     if !context.config.force_format_strings() &&"}]}