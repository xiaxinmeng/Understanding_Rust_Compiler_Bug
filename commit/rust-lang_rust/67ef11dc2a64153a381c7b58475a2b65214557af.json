{"sha": "67ef11dc2a64153a381c7b58475a2b65214557af", "node_id": "C_kwDOAAsO6NoAKDY3ZWYxMWRjMmE2NDE1M2EzODFjN2I1ODQ3NWEyYjY1MjE0NTU3YWY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-01T03:11:23Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-15T00:59:31Z"}, "message": "check all dyn obligations, actually", "tree": {"sha": "d1b1800eab40d5b1286a1ed155ce1bb6c0902c8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b1800eab40d5b1286a1ed155ce1bb6c0902c8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ef11dc2a64153a381c7b58475a2b65214557af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ef11dc2a64153a381c7b58475a2b65214557af", "html_url": "https://github.com/rust-lang/rust/commit/67ef11dc2a64153a381c7b58475a2b65214557af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ef11dc2a64153a381c7b58475a2b65214557af/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f14a5fd7127af1e774b76deea5a749ced33b23a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f14a5fd7127af1e774b76deea5a749ced33b23a1", "html_url": "https://github.com/rust-lang/rust/commit/f14a5fd7127af1e774b76deea5a749ced33b23a1"}], "stats": {"total": 76, "additions": 48, "deletions": 28}, "files": [{"sha": "c3f3baf9d3d473047f3757501988809f9d5abf76", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/67ef11dc2a64153a381c7b58475a2b65214557af/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ef11dc2a64153a381c7b58475a2b65214557af/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=67ef11dc2a64153a381c7b58475a2b65214557af", "patch": "@@ -468,23 +468,19 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             .predicates\n             .into_iter()\n         {\n-            if let ty::PredicateKind::Trait(..) | ty::PredicateKind::Projection(..) =\n-                super_trait.kind().skip_binder()\n-            {\n-                let normalized_super_trait = normalize_with_depth_to(\n-                    self,\n-                    obligation.param_env,\n-                    obligation.cause.clone(),\n-                    obligation.recursion_depth + 1,\n-                    super_trait,\n-                    &mut nested,\n-                );\n-                nested.push(Obligation::new(\n-                    obligation.cause.clone(),\n-                    obligation.param_env,\n-                    normalized_super_trait,\n-                ));\n-            }\n+            let normalized_super_trait = normalize_with_depth_to(\n+                self,\n+                obligation.param_env,\n+                obligation.cause.clone(),\n+                obligation.recursion_depth + 1,\n+                super_trait,\n+                &mut nested,\n+            );\n+            nested.push(Obligation::new(\n+                obligation.cause.clone(),\n+                obligation.param_env,\n+                normalized_super_trait,\n+            ));\n         }\n \n         let assoc_types: Vec<_> = tcx"}, {"sha": "ed2f8624357bbbefda281e6c496d1c3c74e4213b", "filename": "src/test/ui/traits/object/supertrait-lifetime-bound.nll.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.nll.stderr?ref=67ef11dc2a64153a381c7b58475a2b65214557af", "patch": "@@ -0,0 +1,11 @@\n+error: lifetime may not live long enough\n+  --> $DIR/supertrait-lifetime-bound.rs:10:5\n+   |\n+LL | fn test2<'a>() {\n+   |          -- lifetime `'a` defined here\n+...\n+LL |     test1::<dyn Bar<&'a u32>, _>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+\n+error: aborting due to previous error\n+"}, {"sha": "5349771693a2a6cc559b5971340769488781874c", "filename": "src/test/ui/traits/object/supertrait-lifetime-bound.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.rs?ref=67ef11dc2a64153a381c7b58475a2b65214557af", "patch": "@@ -1,16 +1,14 @@\n-// check-pass\n+trait Foo: 'static { }\n \n-use std::any::Any;\n+trait Bar<T>: Foo { }\n \n-trait A<T>: Any {\n-    fn m(&self) {}\n-}\n-\n-impl<S, T: 'static> A<S> for T {}\n+fn test1<T: ?Sized + Bar<S>, S>() { }\n \n-fn call_obj<'a>() {\n-    let obj: &dyn A<&'a ()> = &();\n-    obj.m();\n+fn test2<'a>() {\n+    // Here: the type `dyn Bar<&'a u32>` references `'a`,\n+    // and so it does not outlive `'static`.\n+    test1::<dyn Bar<&'a u32>, _>();\n+    //~^ ERROR the type `(dyn Bar<&'a u32> + 'static)` does not fulfill the required lifetime\n }\n \n-fn main() {}\n+fn main() { }"}, {"sha": "c3d7f8cd0c1cdcdd4b6aca200ff89be2c6c3e8e4", "filename": "src/test/ui/traits/object/supertrait-lifetime-bound.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67ef11dc2a64153a381c7b58475a2b65214557af/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fsupertrait-lifetime-bound.stderr?ref=67ef11dc2a64153a381c7b58475a2b65214557af", "patch": "@@ -0,0 +1,15 @@\n+error[E0477]: the type `(dyn Bar<&'a u32> + 'static)` does not fulfill the required lifetime\n+  --> $DIR/supertrait-lifetime-bound.rs:10:5\n+   |\n+LL |     test1::<dyn Bar<&'a u32>, _>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: type must satisfy the static lifetime as required by this binding\n+  --> $DIR/supertrait-lifetime-bound.rs:5:22\n+   |\n+LL | fn test1<T: ?Sized + Bar<S>, S>() { }\n+   |                      ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0477`."}]}