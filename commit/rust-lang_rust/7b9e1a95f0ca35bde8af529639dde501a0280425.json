{"sha": "7b9e1a95f0ca35bde8af529639dde501a0280425", "node_id": "C_kwDOAAsO6NoAKDdiOWUxYTk1ZjBjYTM1YmRlOGFmNTI5NjM5ZGRlNTAxYTAyODA0MjU", "commit": {"author": {"name": "David Rheinsberg", "email": "david.rheinsberg@gmail.com", "date": "2022-11-22T10:12:26Z"}, "committer": {"name": "David Rheinsberg", "email": "david.rheinsberg@gmail.com", "date": "2022-11-29T10:21:16Z"}, "message": "test/codegen: test inter-crate linkage with static relocation\n\nAdd a codegen-test that verifies inter-crate linkage with the static\nrelocation model. We expect all symbols that are part of a rust\ncompilation to end up in the same DSO, thus we expect `dso_local`\nannotations.", "tree": {"sha": "9901f90c51985d0d6ae64ee4f3bc0d272f471852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9901f90c51985d0d6ae64ee4f3bc0d272f471852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b9e1a95f0ca35bde8af529639dde501a0280425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9e1a95f0ca35bde8af529639dde501a0280425", "html_url": "https://github.com/rust-lang/rust/commit/7b9e1a95f0ca35bde8af529639dde501a0280425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b9e1a95f0ca35bde8af529639dde501a0280425/comments", "author": {"login": "dvdhrm", "id": 623857, "node_id": "MDQ6VXNlcjYyMzg1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/623857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdhrm", "html_url": "https://github.com/dvdhrm", "followers_url": "https://api.github.com/users/dvdhrm/followers", "following_url": "https://api.github.com/users/dvdhrm/following{/other_user}", "gists_url": "https://api.github.com/users/dvdhrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdhrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdhrm/subscriptions", "organizations_url": "https://api.github.com/users/dvdhrm/orgs", "repos_url": "https://api.github.com/users/dvdhrm/repos", "events_url": "https://api.github.com/users/dvdhrm/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdhrm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvdhrm", "id": 623857, "node_id": "MDQ6VXNlcjYyMzg1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/623857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdhrm", "html_url": "https://github.com/dvdhrm", "followers_url": "https://api.github.com/users/dvdhrm/followers", "following_url": "https://api.github.com/users/dvdhrm/following{/other_user}", "gists_url": "https://api.github.com/users/dvdhrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdhrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdhrm/subscriptions", "organizations_url": "https://api.github.com/users/dvdhrm/orgs", "repos_url": "https://api.github.com/users/dvdhrm/repos", "events_url": "https://api.github.com/users/dvdhrm/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdhrm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0771bdabbd23738e73a7745d1b224d53db8c826", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0771bdabbd23738e73a7745d1b224d53db8c826", "html_url": "https://github.com/rust-lang/rust/commit/a0771bdabbd23738e73a7745d1b224d53db8c826"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "edc48351869a6a2e7192d43e99ccca138ec8f681", "filename": "src/test/codegen/auxiliary/extern_decl.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7b9e1a95f0ca35bde8af529639dde501a0280425/src%2Ftest%2Fcodegen%2Fauxiliary%2Fextern_decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b9e1a95f0ca35bde8af529639dde501a0280425/src%2Ftest%2Fcodegen%2Fauxiliary%2Fextern_decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fauxiliary%2Fextern_decl.rs?ref=7b9e1a95f0ca35bde8af529639dde501a0280425", "patch": "@@ -0,0 +1,11 @@\n+// Auxiliary crate that exports a function and static. Both always\n+// evaluate to `71`. We force mutability on the static to prevent\n+// it from being inlined as constant.\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn extern_fn() -> u8 { unsafe { extern_static } }\n+\n+#[no_mangle]\n+pub static mut extern_static: u8 = 71;"}, {"sha": "b2afc7deb679aa40a23b4372ba4800f18d4afc2e", "filename": "src/test/codegen/static-relocation-model-msvc.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7b9e1a95f0ca35bde8af529639dde501a0280425/src%2Ftest%2Fcodegen%2Fstatic-relocation-model-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b9e1a95f0ca35bde8af529639dde501a0280425/src%2Ftest%2Fcodegen%2Fstatic-relocation-model-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fstatic-relocation-model-msvc.rs?ref=7b9e1a95f0ca35bde8af529639dde501a0280425", "patch": "@@ -0,0 +1,26 @@\n+// Verify linkage of external symbols in the static relocation model on MSVC.\n+//\n+// compile-flags: -O -C relocation-model=static\n+// aux-build: extern_decl.rs\n+// only-x86_64-pc-windows-msvc\n+\n+#![crate_type = \"rlib\"]\n+\n+extern crate extern_decl;\n+\n+// The `extern_decl` definitions are imported from a statically linked rust\n+// crate, thus they are expected to be marked `dso_local` without `dllimport`.\n+//\n+// The `access_extern()` symbol is from this compilation unit, thus we expect\n+// it to be marked `dso_local` as well, given the static relocation model.\n+//\n+// CHECK: @extern_static = external dso_local local_unnamed_addr global i8\n+// CHECK: define dso_local i8 @access_extern() {{.*}}\n+// CHECK: declare dso_local i8 @extern_fn() {{.*}}\n+\n+#[no_mangle]\n+pub fn access_extern() -> u8 {\n+    unsafe {\n+        extern_decl::extern_fn() + extern_decl::extern_static\n+    }\n+}"}]}