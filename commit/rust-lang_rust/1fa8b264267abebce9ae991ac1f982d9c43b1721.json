{"sha": "1fa8b264267abebce9ae991ac1f982d9c43b1721", "node_id": "C_kwDOAAsO6NoAKDFmYThiMjY0MjY3YWJlYmNlOWFlOTkxYWMxZjk4MmQ5YzQzYjE3MjE", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-10-09T15:25:40Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-10-09T15:25:40Z"}, "message": "Fix vector_select", "tree": {"sha": "6e7637a77ae0d4adf533c93beb6afb162818c274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e7637a77ae0d4adf533c93beb6afb162818c274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa8b264267abebce9ae991ac1f982d9c43b1721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa8b264267abebce9ae991ac1f982d9c43b1721", "html_url": "https://github.com/rust-lang/rust/commit/1fa8b264267abebce9ae991ac1f982d9c43b1721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa8b264267abebce9ae991ac1f982d9c43b1721/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44e3ea3e42918ff6a5d2083ddc0c4ece16309862", "url": "https://api.github.com/repos/rust-lang/rust/commits/44e3ea3e42918ff6a5d2083ddc0c4ece16309862", "html_url": "https://github.com/rust-lang/rust/commit/44e3ea3e42918ff6a5d2083ddc0c4ece16309862"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ee9983830ff8a24503f67c36675ce5455b70722b", "filename": "src/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fa8b264267abebce9ae991ac1f982d9c43b1721/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa8b264267abebce9ae991ac1f982d9c43b1721/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=1fa8b264267abebce9ae991ac1f982d9c43b1721", "patch": "@@ -1613,9 +1613,9 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n         let masks = self.bitcast_if_needed(masks, then_val.get_type());\n         let then_vals = masks & then_val;\n \n-        let ones = vec![self.context.new_rvalue_one(element_type); num_units];\n-        let ones = self.context.new_rvalue_from_vector(None, cond_type, &ones);\n-        let inverted_masks = masks + ones;\n+        let minus_ones = vec![self.context.new_rvalue_from_int(element_type, -1); num_units];\n+        let minus_ones = self.context.new_rvalue_from_vector(None, cond_type, &minus_ones);\n+        let inverted_masks = masks ^ minus_ones;\n         // NOTE: sometimes, the type of else_val can be different than the type of then_val in\n         // libgccjit (vector of int vs vector of int32_t), but they should be the same for the AND\n         // operation to work."}]}