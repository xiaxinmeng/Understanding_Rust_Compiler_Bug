{"sha": "1f7a54cfa71a0b81f3f35cde1a529f19f6816a10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmN2E1NGNmYTcxYTBiODFmM2YzNWNkZTFhNTI5ZjE5ZjY4MTZhMTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-04T12:23:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-04T12:23:37Z"}, "message": "Merge #3009\n\n3009: Make sure that newly created nodes are the root of the tree r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "edd9e8254a4223d719940f44f99addc0a2920fba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd9e8254a4223d719940f44f99addc0a2920fba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOWJJCRBK7hj4Ov3rIwAAdHIIAIwL65VrfWe9BsLSpMHchgTo\n0DZ4OixbTvF7E0jgKTAvfgi/ZVRJ5mSz6RyA84p6snWDRsUiMqaGOO6RHaiq4XIh\nqrFCSZlnhFxvVL+jSxfIYZkJzhT4Troze/wPTFN095mMzgPWrXpBpOu69p9efNVi\nSlbngqaDUw4gRtBmftXsJ85wkZx99jzwENHdqJ0Ow8e0YTAwMNB6kxerK5mqnF1h\nqEwEzMoa2heFGPyKQR6fGADEB0zUNzp0ydjnMitup+3rIDhTcR1tz5sDvZ7/GqQ4\nnixC2UooY5PWJLuonIsOUwgC5/8iqshscnqWNiq0nyTo3nIGhho9C3QkpUwN8jo=\n=Ar/w\n-----END PGP SIGNATURE-----\n", "payload": "tree edd9e8254a4223d719940f44f99addc0a2920fba\nparent c1a06499fa5f9a40750cbfc30a7d399228a5fab0\nparent 4ea0c12cf1520bc7d0f5def211a7cacadb45b7af\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580819017 +0000\ncommitter GitHub <noreply@github.com> 1580819017 +0000\n\nMerge #3009\n\n3009: Make sure that newly created nodes are the root of the tree r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10", "html_url": "https://github.com/rust-lang/rust/commit/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a06499fa5f9a40750cbfc30a7d399228a5fab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a06499fa5f9a40750cbfc30a7d399228a5fab0", "html_url": "https://github.com/rust-lang/rust/commit/c1a06499fa5f9a40750cbfc30a7d399228a5fab0"}, {"sha": "4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "html_url": "https://github.com/rust-lang/rust/commit/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "38c0e9a666631c10db5a8b932a58761d78c61d98", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f7a54cfa71a0b81f3f35cde1a529f19f6816a10/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=1f7a54cfa71a0b81f3f35cde1a529f19f6816a10", "patch": "@@ -2,7 +2,7 @@\n //! of smaller pieces.\n use itertools::Itertools;\n \n-use crate::{ast, AstNode, SourceFile, SyntaxKind, SyntaxToken};\n+use crate::{ast, AstNode, SourceFile, SyntaxKind, SyntaxNode, SyntaxToken};\n \n pub fn name(text: &str) -> ast::Name {\n     ast_from_text(&format!(\"mod {};\", text))\n@@ -179,7 +179,16 @@ pub fn token(kind: SyntaxKind) -> SyntaxToken {\n \n fn ast_from_text<N: AstNode>(text: &str) -> N {\n     let parse = SourceFile::parse(text);\n-    parse.tree().syntax().descendants().find_map(N::cast).unwrap()\n+    let node = parse.tree().syntax().descendants().find_map(N::cast).unwrap();\n+    let node = node.syntax().clone();\n+    let node = unroot(node);\n+    let node = N::cast(node).unwrap();\n+    assert_eq!(node.syntax().text_range().start(), 0.into());\n+    node\n+}\n+\n+fn unroot(n: SyntaxNode) -> SyntaxNode {\n+    SyntaxNode::new_root(n.green().clone())\n }\n \n pub mod tokens {"}]}