{"sha": "35568cf057e116ef3471b3c5e50beeb2f6bc7e70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NTY4Y2YwNTdlMTE2ZWYzNDcxYjNjNWU1MGJlZWIyZjZiYzdlNzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-29T10:32:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-29T10:32:45Z"}, "message": "Index files in parallel", "tree": {"sha": "e678fcb6756d1967406a4ee46c0e0f896f9328a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e678fcb6756d1967406a4ee46c0e0f896f9328a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35568cf057e116ef3471b3c5e50beeb2f6bc7e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35568cf057e116ef3471b3c5e50beeb2f6bc7e70", "html_url": "https://github.com/rust-lang/rust/commit/35568cf057e116ef3471b3c5e50beeb2f6bc7e70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35568cf057e116ef3471b3c5e50beeb2f6bc7e70/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943fc5e323fef4a3acda9364abd6ec72d05532e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/943fc5e323fef4a3acda9364abd6ec72d05532e6", "html_url": "https://github.com/rust-lang/rust/commit/943fc5e323fef4a3acda9364abd6ec72d05532e6"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "90446c83860b067b12caff8a5ea0df97a8b8a7ab", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/35568cf057e116ef3471b3c5e50beeb2f6bc7e70/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35568cf057e116ef3471b3c5e50beeb2f6bc7e70/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=35568cf057e116ef3471b3c5e50beeb2f6bc7e70", "patch": "@@ -10,6 +10,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n     SyntaxNodeRef, TextRange, TextUnit,\n };\n+use rayon::prelude::*;\n use relative_path::RelativePath;\n use rustc_hash::FxHashSet;\n use salsa::{ParallelDatabase, Database};\n@@ -23,6 +24,7 @@ use crate::{\n     input::{SourceRootId, FilesDatabase, SourceRoot, WORKSPACE},\n     descriptors::module::{ModulesDatabase, ModuleTree, Problem},\n     descriptors::{FnDescriptor},\n+    symbol_index::SymbolIndex,\n     CrateGraph, CrateId, Diagnostic, FileId, FileResolver, FileSystemEdit, Position,\n     Query, SourceChange, SourceFileEdit, Cancelable,\n };\n@@ -180,16 +182,18 @@ impl AnalysisImpl {\n         self.db.file_lines(file_id)\n     }\n     pub fn world_symbols(&self, query: Query) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n-        let mut buf = Vec::new();\n-        if query.libs {\n-            for &lib_id in self.db.libraries().iter() {\n-                buf.push(self.db.library_symbols(lib_id));\n-            }\n+        let buf: Vec<Arc<SymbolIndex>> = if query.libs {\n+            self.db.libraries().iter()\n+                .map(|&lib_id| self.db.library_symbols(lib_id))\n+                .collect()\n         } else {\n-            for &file_id in self.db.source_root(WORKSPACE).files.iter() {\n-                buf.push(self.db.file_symbols(file_id)?);\n-            }\n-        }\n+            let files = &self.db.source_root(WORKSPACE).files;\n+            let db = self.db.clone();\n+            files.par_iter()\n+                .map_with(db, |db, &file_id| db.file_symbols(file_id))\n+                .filter_map(|it| it.ok())\n+                .collect()\n+        };\n         Ok(query.search(&buf))\n     }\n     fn module_tree(&self, file_id: FileId) -> Cancelable<Arc<ModuleTree>> {"}]}