{"sha": "38852bf0a4f618c91640e5c90e3871c260cab844", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ODUyYmYwYTRmNjE4YzkxNjQwZTVjOTBlMzg3MWMyNjBjYWI4NDQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T22:43:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T23:02:43Z"}, "message": "rustdoc: Extract function argument names from the AST", "tree": {"sha": "ecccc6426664266bc8811fbb1c82ba0a6fdf00d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecccc6426664266bc8811fbb1c82ba0a6fdf00d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38852bf0a4f618c91640e5c90e3871c260cab844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38852bf0a4f618c91640e5c90e3871c260cab844", "html_url": "https://github.com/rust-lang/rust/commit/38852bf0a4f618c91640e5c90e3871c260cab844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38852bf0a4f618c91640e5c90e3871c260cab844/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f63b90f9f79c2162a22cf3f46e8d3ef61b20b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/92f63b90f9f79c2162a22cf3f46e8d3ef61b20b0", "html_url": "https://github.com/rust-lang/rust/commit/92f63b90f9f79c2162a22cf3f46e8d3ef61b20b0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "cb6feb98d58a6fe06fd5302f10124a22db5d088c", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/38852bf0a4f618c91640e5c90e3871c260cab844/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38852bf0a4f618c91640e5c90e3871c260cab844/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=38852bf0a4f618c91640e5c90e3871c260cab844", "patch": "@@ -65,7 +65,7 @@ fn moddoc_from_mod(\n }\n \n fn fndoc_from_fn(\n-    _decl: ast::fn_decl,\n+    decl: ast::fn_decl,\n     name: ast::ident,\n     id: ast::node_id\n ) -> doc::fndoc {\n@@ -75,10 +75,28 @@ fn fndoc_from_fn(\n         brief: none,\n         desc: none,\n         return: none,\n-        args: []\n+        args: argdocs_from_args(decl.inputs)\n     }\n }\n \n+#[test]\n+fn should_extract_fn_args() {\n+    let source = \"fn a(b: int, c: int) { }\";\n+    let ast = parse::from_str(source);\n+    let doc = extract(ast, \"\");\n+    let fn_ = doc.topmod.fns[0];\n+    assert tuple::first(fn_.args[0]) == \"b\";\n+    assert tuple::first(fn_.args[1]) == \"c\";\n+}\n+\n+fn argdocs_from_args(args: [ast::arg]) -> [(str, str)] {\n+    vec::map(args, argdoc_from_arg)\n+}\n+\n+fn argdoc_from_arg(arg: ast::arg) -> (str, str) {\n+    (arg.ident, \"\")\n+}\n+\n #[cfg(test)]\n mod tests {\n "}]}