{"sha": "3775be853ec7da01d515d25117dc3272f343a017", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NzViZTg1M2VjN2RhMDFkNTE1ZDI1MTE3ZGMzMjcyZjM0M2EwMTc=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-09-27T00:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-27T00:29:47Z"}, "message": "Rollup merge of #36586 - japaric:rustdoc-sysroot, r=alexcrichton\n\nrustdoc: implement --sysroot\n\nwith the same semantics as rustc. This let us build documentation for a\ncrate that depends on a custom sysroot.\n\nr? @alexcrichton\ncc @cbiffle", "tree": {"sha": "7c28a0acf5082f43922e3bbbfc43f81b95c2d398", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c28a0acf5082f43922e3bbbfc43f81b95c2d398"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3775be853ec7da01d515d25117dc3272f343a017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3775be853ec7da01d515d25117dc3272f343a017", "html_url": "https://github.com/rust-lang/rust/commit/3775be853ec7da01d515d25117dc3272f343a017", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3775be853ec7da01d515d25117dc3272f343a017/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c816720242ac75fb4131102e4365baef20963028", "url": "https://api.github.com/repos/rust-lang/rust/commits/c816720242ac75fb4131102e4365baef20963028", "html_url": "https://github.com/rust-lang/rust/commit/c816720242ac75fb4131102e4365baef20963028"}, {"sha": "e0c60b4d0243bffb2caf2ec1760e26c3309bdb21", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c60b4d0243bffb2caf2ec1760e26c3309bdb21", "html_url": "https://github.com/rust-lang/rust/commit/e0c60b4d0243bffb2caf2ec1760e26c3309bdb21"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "49e467e5cbe3bba50bfc813ac45cce9c3354781a", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3775be853ec7da01d515d25117dc3272f343a017/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3775be853ec7da01d515d25117dc3272f343a017/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=3775be853ec7da01d515d25117dc3272f343a017", "patch": "@@ -32,6 +32,7 @@ use errors::emitter::ColorConfig;\n use std::cell::{RefCell, Cell};\n use std::mem;\n use std::rc::Rc;\n+use std::path::PathBuf;\n \n use visit_ast::RustdocVisitor;\n use clean;\n@@ -127,7 +128,8 @@ pub fn run_core(search_paths: SearchPaths,\n                 cfgs: Vec<String>,\n                 externs: config::Externs,\n                 input: Input,\n-                triple: Option<String>) -> (clean::Crate, RenderInfo)\n+                triple: Option<String>,\n+                maybe_sysroot: Option<PathBuf>) -> (clean::Crate, RenderInfo)\n {\n     // Parse, resolve, and typecheck the given crate.\n \n@@ -139,7 +141,7 @@ pub fn run_core(search_paths: SearchPaths,\n     let warning_lint = lint::builtin::WARNINGS.name_lower();\n \n     let sessopts = config::Options {\n-        maybe_sysroot: None,\n+        maybe_sysroot: maybe_sysroot,\n         search_paths: search_paths,\n         crate_types: vec!(config::CrateTypeRlib),\n         lint_opts: vec!((warning_lint, lint::Allow)),"}, {"sha": "4b6eb62b80c07e7a2b19f5ca3efc5d9c5fb46f1d", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3775be853ec7da01d515d25117dc3272f343a017/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3775be853ec7da01d515d25117dc3272f343a017/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=3775be853ec7da01d515d25117dc3272f343a017", "patch": "@@ -186,6 +186,7 @@ pub fn opts() -> Vec<RustcOptGroup> {\n                          own theme\", \"PATH\")),\n         unstable(optmulti(\"Z\", \"\",\n                           \"internal and debugging options (only on nightly build)\", \"FLAG\")),\n+        stable(optopt(\"\", \"sysroot\", \"Override the system root\", \"PATH\")),\n     )\n }\n \n@@ -370,6 +371,7 @@ fn rust_input(cratefile: &str, externs: Externs, matches: &getopts::Matches) ->\n     }\n     let cfgs = matches.opt_strs(\"cfg\");\n     let triple = matches.opt_str(\"target\");\n+    let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n \n     let cr = PathBuf::from(cratefile);\n     info!(\"starting to run rustc\");\n@@ -379,7 +381,7 @@ fn rust_input(cratefile: &str, externs: Externs, matches: &getopts::Matches) ->\n         use rustc::session::config::Input;\n \n         tx.send(core::run_core(paths, cfgs, externs, Input::File(cr),\n-                               triple)).unwrap();\n+                               triple, maybe_sysroot)).unwrap();\n     });\n     let (mut krate, renderinfo) = rx.recv().unwrap();\n     info!(\"finished with rustc\");"}]}