{"sha": "ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYjQwYzdmODdkNThmYjc0YzhmM2I0ZGZjYjI3MDQxNDA1OTlkNjU=", "commit": {"author": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2019-06-15T07:37:15Z"}, "committer": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2019-06-15T07:37:15Z"}, "message": "cargo format", "tree": {"sha": "a5446456867754ef3bd533f3b54c7ea1022f9cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5446456867754ef3bd533f3b54c7ea1022f9cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE84DWFaalCZAXJAejN68UFUDeVX0FAl0EoCsACgkQN68UFUDe\nVX0sRxAAvivthCTWfVLD8VGJtWcmvw0q1pDXLIr1kA9uIOiBZFsEO/qjPc5sGrGe\nw1Uqt6Hu4b5553qHb6Jf+6quZpRZQ0OfA9f76/P0oocj1P+EP/dLdCEMj9rv4ADW\nhAoqfC1zGOdJ3Nd6OKxL3m6O3iXl6ubRl6doTw8b3ETd8lluA2AK06LOzboxuMwi\nE44nugEg0OzQRfATN46osa+MgelVou1av+2bIsEoQj68wn9Kasls5LpKVLWRRHd6\nGLQss68P68mr9sF3KxgDLkDPo9/MsSc0Kbm9XI0PyUkygJXzgmAkICIuXHHVII5j\nHSsrHdQJBDdYMut7xcxDcXvpvh/S8EmWdTgkp5XjqBOyNu5YLKMzU5pW2nMHvMzq\nnvqwGZJfmtO8XXptOTJfBfl0YmgARmb4slJjvSAlvDpqp5rycv9819TwmyeMHiZ9\nwSfGZAxq8h3mjSx+egj2+mkUE8uQzA/K5qDqsKNLUHIoj8zNb4ja3eVVX3cHkRC3\n8F5JEMDqsmqPdhOvJINlvPA23kiZC/VyMqQmOyn6Rxh1029gF8C1QOk6uC9p213v\nEbxryRArk8PHlSq9i+PQAiyXh9jQQgU706AyGk2vCDnqfmLyqR18tkvu0a1tA4Q5\nZNFdeMlVSSP5bfRGpelGKs5/Dz+bBXK5gY2NOaih2s5C5SaDekI=\n=PS4q\n-----END PGP SIGNATURE-----", "payload": "tree a5446456867754ef3bd533f3b54c7ea1022f9cc4\nparent f032eeb05f0b7d77e30cd6c5eea016cc5d649e3f\nauthor Muhammad Mominul Huque <mominul2082@gmail.com> 1560584235 +0600\ncommitter Muhammad Mominul Huque <mominul2082@gmail.com> 1560584235 +0600\n\ncargo format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "html_url": "https://github.com/rust-lang/rust/commit/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/comments", "author": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f032eeb05f0b7d77e30cd6c5eea016cc5d649e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f032eeb05f0b7d77e30cd6c5eea016cc5d649e3f", "html_url": "https://github.com/rust-lang/rust/commit/f032eeb05f0b7d77e30cd6c5eea016cc5d649e3f"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "8e7697ed4d66f5bf4ecf313de6261ac05573cc6d", "filename": "crates/gen_lsp_server/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs?ref=ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "patch": "@@ -127,8 +127,7 @@ fn initialize(\n     sender.send(RawMessage::Response(resp)).unwrap();\n     match receiver.recv() {\n         Ok(RawMessage::Notification(n)) => {\n-            n.cast::<Initialized>()\n-                .map_err(|_| \"expected initialized notification\")?;\n+            n.cast::<Initialized>().map_err(|_| \"expected initialized notification\")?;\n         }\n         _ => Err(format!(\"expected initialized notification\"))?,\n     }"}, {"sha": "2928e4f8bdef52455432345aebfd4f4eb8e2ccf2", "filename": "crates/gen_lsp_server/src/msg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs?ref=ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "patch": "@@ -182,8 +182,7 @@ fn read_msg_text(inp: &mut impl BufRead) -> Result<Option<String>> {\n         }\n         let mut parts = buf.splitn(2, \": \");\n         let header_name = parts.next().unwrap();\n-        let header_value =\n-            parts.next().ok_or_else(|| format!(\"malformed header: {:?}\", buf))?;\n+        let header_value = parts.next().ok_or_else(|| format!(\"malformed header: {:?}\", buf))?;\n         if header_name == \"Content-Length\" {\n             size = Some(header_value.parse::<usize>()?);\n         }"}, {"sha": "96b32d9fe46bee7761067e3872df6e9d582c75bd", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "patch": "@@ -2,7 +2,6 @@ mod vfs_filter;\n \n use std::{sync::Arc, path::Path, collections::HashSet, error::Error};\n \n-\n use rustc_hash::FxHashMap;\n \n use ra_db::{"}, {"sha": "aeb8a22992aa770a2d37931a46ce44abc94a814e", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb40c7f87d58fb74c8f3b4dfcb2704140599d65/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=ebb40c7f87d58fb74c8f3b4dfcb2704140599d65", "patch": "@@ -399,8 +399,7 @@ fn on_notification(\n         Ok(mut params) => {\n             let uri = params.text_document.uri;\n             let path = uri.to_file_path().map_err(|()| format!(\"invalid uri: {}\", uri))?;\n-            let text =\n-                params.content_changes.pop().ok_or_else(|| format!(\"empty changes\"))?.text;\n+            let text = params.content_changes.pop().ok_or_else(|| format!(\"empty changes\"))?.text;\n             state.vfs.write().change_file_overlay(path.as_path(), text);\n             return Ok(());\n         }\n@@ -548,11 +547,7 @@ where\n                         error: None,\n                     }\n                 } else {\n-                    RawResponse::err(\n-                        id,\n-                        ErrorCode::InternalError as i32,\n-                        e.to_string()\n-                    )\n+                    RawResponse::err(id, ErrorCode::InternalError as i32, e.to_string())\n                 }\n             }\n         },"}]}