{"sha": "afe74d71e4c2f08696ade0de321a45f7442440d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZTc0ZDcxZTRjMmYwODY5NmFkZTBkZTMyMWE0NWY3NDQyNDQwZDg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T09:39:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T10:16:33Z"}, "message": "Build with `-Cpanic=unwind` by default\n\nThis doesn't enable unwinding as cg_clif doesn't support it yet. It does\nallow for linking to a cg_llvm compiled libstd.so, which uses\n`-Cpanic=unwind`.", "tree": {"sha": "9591c83a1c0fe521204488e3d25c00e2d6ab03d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9591c83a1c0fe521204488e3d25c00e2d6ab03d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afe74d71e4c2f08696ade0de321a45f7442440d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afe74d71e4c2f08696ade0de321a45f7442440d8", "html_url": "https://github.com/rust-lang/rust/commit/afe74d71e4c2f08696ade0de321a45f7442440d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afe74d71e4c2f08696ade0de321a45f7442440d8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5417278438efa00231936bfef3800e75a992f32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5417278438efa00231936bfef3800e75a992f32f", "html_url": "https://github.com/rust-lang/rust/commit/5417278438efa00231936bfef3800e75a992f32f"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "cc1cbf1abc25051782297c6adbd91e47c8d98d08", "filename": "build_sysroot/build_sysroot.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afe74d71e4c2f08696ade0de321a45f7442440d8/build_sysroot%2Fbuild_sysroot.sh", "raw_url": "https://github.com/rust-lang/rust/raw/afe74d71e4c2f08696ade0de321a45f7442440d8/build_sysroot%2Fbuild_sysroot.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fbuild_sysroot.sh?ref=afe74d71e4c2f08696ade0de321a45f7442440d8", "patch": "@@ -23,7 +23,7 @@ rm -r target/*/{debug,release}/{build,deps,examples,libsysroot*,native} 2>/dev/n\n export CARGO_TARGET_DIR=target\n \n # Build libs\n-export RUSTFLAGS=\"$RUSTFLAGS -Zforce-unstable-if-unmarked -Cpanic=abort\"\n+export RUSTFLAGS=\"$RUSTFLAGS -Zforce-unstable-if-unmarked\"\n export __CARGO_DEFAULT_LIB_METADATA=\"cg_clif\"\n if [[ \"$1\" != \"--debug\" ]]; then\n     sysroot_channel='release'"}, {"sha": "b58d90cb5ae4de6faec1cf369e4f151463b5c8b7", "filename": "example/alloc_example.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/afe74d71e4c2f08696ade0de321a45f7442440d8/example%2Falloc_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe74d71e4c2f08696ade0de321a45f7442440d8/example%2Falloc_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Falloc_example.rs?ref=afe74d71e4c2f08696ade0de321a45f7442440d8", "patch": "@@ -1,4 +1,4 @@\n-#![feature(start, box_syntax, core_intrinsics, alloc_prelude, alloc_error_handler)]\n+#![feature(start, box_syntax, core_intrinsics, alloc_prelude, alloc_error_handler, lang_items)]\n #![no_std]\n \n extern crate alloc;\n@@ -27,6 +27,11 @@ fn alloc_error_handler(_: alloc::alloc::Layout) -> ! {\n     core::intrinsics::abort();\n }\n \n+#[lang = \"eh_personality\"]\n+fn eh_personality() -> ! {\n+    loop {}\n+}\n+\n #[start]\n fn main(_argc: isize, _argv: *const *const u8) -> isize {\n     let world: Box<&str> = box \"Hello World!\\0\";"}, {"sha": "05139c185f2cc47a18916de9b7fe7ec9eca9da63", "filename": "scripts/tests.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afe74d71e4c2f08696ade0de321a45f7442440d8/scripts%2Ftests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/afe74d71e4c2f08696ade0de321a45f7442440d8/scripts%2Ftests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftests.sh?ref=afe74d71e4c2f08696ade0de321a45f7442440d8", "patch": "@@ -61,11 +61,11 @@ function base_sysroot_tests() {\n     $RUN_WRAPPER ./target/out/std_example arg\n \n     echo \"[AOT] subslice-patterns-const-eval\"\n-    $MY_RUSTC example/subslice-patterns-const-eval.rs --crate-type bin -Cpanic=abort --target \"$TARGET_TRIPLE\"\n+    $MY_RUSTC example/subslice-patterns-const-eval.rs --crate-type bin --target \"$TARGET_TRIPLE\"\n     $RUN_WRAPPER ./target/out/subslice-patterns-const-eval\n \n     echo \"[AOT] track-caller-attribute\"\n-    $MY_RUSTC example/track-caller-attribute.rs --crate-type bin -Cpanic=abort --target \"$TARGET_TRIPLE\"\n+    $MY_RUSTC example/track-caller-attribute.rs --crate-type bin --target \"$TARGET_TRIPLE\"\n     $RUN_WRAPPER ./target/out/track-caller-attribute\n \n     echo \"[AOT] mod_bench\""}, {"sha": "0d73834f165d989b2c07541d02eb8f3b897f2453", "filename": "src/bin/cg_clif.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afe74d71e4c2f08696ade0de321a45f7442440d8/src%2Fbin%2Fcg_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe74d71e4c2f08696ade0de321a45f7442440d8/src%2Fbin%2Fcg_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif.rs?ref=afe74d71e4c2f08696ade0de321a45f7442440d8", "patch": "@@ -24,7 +24,16 @@ impl rustc_driver::Callbacks for CraneliftPassesCallbacks {\n         self.time_passes = config.opts.prints.is_empty()\n             && (config.opts.debugging_opts.time_passes || config.opts.debugging_opts.time);\n \n-        config.opts.cg.panic = Some(PanicStrategy::Abort);\n+        if config.opts.test {\n+            // Unwinding is not yet supported by cg_clif. `-Cpanic=abort` in combination with\n+            // `-Zpanic-abort-tests` ensures that tests are run in a subprocess. This avoids\n+            // crashing the test driver on panics, thereby allowing it to report the error and\n+            // continue with other tests.\n+            config.opts.cg.panic = Some(PanicStrategy::Abort);\n+            // Avoid `-Cprefer-dynamic` in case of `-Cpanic=abort` as that will cause a dynamically\n+            // linked libstd with `-Cpanic=unwind` to be linked in, which isn't allowed.\n+            config.opts.cg.prefer_dynamic = false;\n+        }\n         config.opts.debugging_opts.panic_abort_tests = true;\n         config.opts.maybe_sysroot = Some(config.opts.maybe_sysroot.clone().unwrap_or_else(|| {\n             std::env::current_exe().unwrap().parent().unwrap().parent().unwrap().to_owned()"}, {"sha": "70e41f9997e3546fcb99422c27b26158350ced2f", "filename": "src/bin/cg_clif_build_sysroot.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afe74d71e4c2f08696ade0de321a45f7442440d8/src%2Fbin%2Fcg_clif_build_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe74d71e4c2f08696ade0de321a45f7442440d8/src%2Fbin%2Fcg_clif_build_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif_build_sysroot.rs?ref=afe74d71e4c2f08696ade0de321a45f7442440d8", "patch": "@@ -44,7 +44,11 @@ impl rustc_driver::Callbacks for CraneliftPassesCallbacks {\n             return;\n         }\n \n-        config.opts.cg.panic = Some(PanicStrategy::Abort);\n+        if config.opts.crate_name.as_deref() == Some(\"panic_abort\") {\n+            // panic_abort must always be built with `-Cpanic=abort`\n+            config.opts.cg.panic = Some(PanicStrategy::Abort);\n+        }\n+\n         config.opts.debugging_opts.panic_abort_tests = true;\n         config.opts.maybe_sysroot =\n             Some(std::env::current_exe().unwrap().parent().unwrap().parent().unwrap().to_owned());"}]}