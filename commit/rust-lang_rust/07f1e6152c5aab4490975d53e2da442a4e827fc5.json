{"sha": "07f1e6152c5aab4490975d53e2da442a4e827fc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZjFlNjE1MmM1YWFiNDQ5MDk3NWQ1M2UyZGE0NDJhNGU4MjdmYzU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-28T21:42:55Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-07-08T16:55:49Z"}, "message": "Add natvis for NonZero and Wrapping types", "tree": {"sha": "2e8fa0bc57bddc6827bb789d9ac728677dad2c2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8fa0bc57bddc6827bb789d9ac728677dad2c2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07f1e6152c5aab4490975d53e2da442a4e827fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07f1e6152c5aab4490975d53e2da442a4e827fc5", "html_url": "https://github.com/rust-lang/rust/commit/07f1e6152c5aab4490975d53e2da442a4e827fc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07f1e6152c5aab4490975d53e2da442a4e827fc5/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0deb536ff987d7200f5ea35634781e9df9d5b666", "url": "https://api.github.com/repos/rust-lang/rust/commits/0deb536ff987d7200f5ea35634781e9df9d5b666", "html_url": "https://github.com/rust-lang/rust/commit/0deb536ff987d7200f5ea35634781e9df9d5b666"}], "stats": {"total": 183, "additions": 183, "deletions": 0}, "files": [{"sha": "7eaba42e2f77d9c808c7a13507c212e04ec5079a", "filename": "src/etc/natvis/libcore.natvis", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/07f1e6152c5aab4490975d53e2da442a4e827fc5/src%2Fetc%2Fnatvis%2Flibcore.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/07f1e6152c5aab4490975d53e2da442a4e827fc5/src%2Fetc%2Fnatvis%2Flibcore.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibcore.natvis?ref=07f1e6152c5aab4490975d53e2da442a4e827fc5", "patch": "@@ -1,5 +1,46 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <AutoVisualizer xmlns=\"http://schemas.microsoft.com/vstudio/debugger/natvis/2010\">\n+  <Type Name=\"core::num::nonzero::NonZeroI8\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroI16\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroI32\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroI64\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroI128\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroIsize\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroU8\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroU16\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroU32\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroU64\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroU128\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+  <Type Name=\"core::num::nonzero::NonZeroUsize\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+\n+  <Type Name=\"core::num::wrapping::Wrapping&lt;*&gt;\">\n+    <DisplayString>{__0}</DisplayString>\n+  </Type>\n+\n   <Type Name=\"core::ptr::Unique&lt;*&gt;\">\n     <DisplayString>{{ Unique {pointer} }}</DisplayString>\n     <Expand>"}, {"sha": "8e03a2947ea45cf253f4af53a5a0a88acdf65f87", "filename": "src/test/debuginfo/numeric-types.rs", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/07f1e6152c5aab4490975d53e2da442a4e827fc5/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f1e6152c5aab4490975d53e2da442a4e827fc5/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs?ref=07f1e6152c5aab4490975d53e2da442a4e827fc5", "patch": "@@ -0,0 +1,142 @@\n+// only-cdb\n+// compile-flags:-g\n+\n+// Tests the visualizations for `NonZero{I,U}{8,16,32,64,128,size}` and `Wrapping<T>` in\n+// `libcore.natvis`.\n+\n+// === CDB TESTS ==================================================================================\n+// cdb-command: g\n+\n+// cdb-command: dx nz_i8\n+// cdb-check:nz_i8            : 11 [Type: core::num::nonzero::NonZeroI8]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroI8]\n+\n+// cdb-command: dx nz_i16\n+// cdb-check:nz_i16           : 22 [Type: core::num::nonzero::NonZeroI16]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroI16]\n+\n+// cdb-command: dx nz_i32\n+// cdb-check:nz_i32           : 33 [Type: core::num::nonzero::NonZeroI32]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroI32]\n+\n+// cdb-command: dx nz_i64\n+// cdb-check:nz_i64           : 44 [Type: core::num::nonzero::NonZeroI64]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroI64]\n+\n+// 128-bit integers don't seem to work in CDB\n+// cdb-command: dx nz_i128\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroI128]\n+\n+// cdb-command: dx nz_isize\n+// cdb-check:nz_isize         : 66 [Type: core::num::nonzero::NonZeroIsize]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroIsize]\n+\n+// cdb-command: dx nz_u8\n+// cdb-check:nz_u8            : 0x4d [Type: core::num::nonzero::NonZeroU8]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroU8]\n+\n+// cdb-command: dx nz_u16\n+// cdb-check:nz_u16           : 0x58 [Type: core::num::nonzero::NonZeroU16]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroU16]\n+\n+// cdb-command: dx nz_u32\n+// cdb-check:nz_u32           : 0x63 [Type: core::num::nonzero::NonZeroU32]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroU32]\n+\n+// cdb-command: dx nz_u64\n+// cdb-check:nz_u64           : 0x64 [Type: core::num::nonzero::NonZeroU64]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroU64]\n+\n+// 128-bit integers don't seem to work in CDB\n+// cdb-command: dx nz_u128\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroU128]\n+\n+// cdb-command: dx nz_usize\n+// cdb-check:nz_usize         : 0x7a [Type: core::num::nonzero::NonZeroUsize]\n+// cdb-check:    [<Raw View>]     [Type: core::num::nonzero::NonZeroUsize]\n+\n+// cdb-command: dx w_i8\n+// cdb-check:w_i8             : 10 [Type: core::num::wrapping::Wrapping<i8>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<i8>]\n+\n+// cdb-command: dx w_i16\n+// cdb-check:w_i16            : 20 [Type: core::num::wrapping::Wrapping<i16>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<i16>]\n+\n+// cdb-command: dx w_i32\n+// cdb-check:w_i32            : 30 [Type: core::num::wrapping::Wrapping<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<i32>]\n+\n+// cdb-command: dx w_i64\n+// cdb-check:w_i64            : 40 [Type: core::num::wrapping::Wrapping<i64>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<i64>]\n+\n+// 128-bit integers don't seem to work in CDB\n+// cdb-command: dx w_i128\n+// cdb-check:w_i128           [Type: core::num::wrapping::Wrapping<i128>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<i128>]\n+\n+// cdb-command: dx w_isize\n+// cdb-check:w_isize          : 60 [Type: core::num::wrapping::Wrapping<isize>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<isize>]\n+\n+// cdb-command: dx w_u8\n+// cdb-check:w_u8             : 0x46 [Type: core::num::wrapping::Wrapping<u8>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<u8>]\n+\n+// cdb-command: dx w_u16\n+// cdb-check:w_u16            : 0x50 [Type: core::num::wrapping::Wrapping<u16>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<u16>]\n+\n+// cdb-command: dx w_u32\n+// cdb-check:w_u32            : 0x5a [Type: core::num::wrapping::Wrapping<u32>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<u32>]\n+\n+// cdb-command: dx w_u64\n+// cdb-check:w_u64            : 0x64 [Type: core::num::wrapping::Wrapping<u64>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<u64>]\n+\n+// 128-bit integers don't seem to work in CDB\n+// cdb-command: dx w_u128\n+// cdb-check:w_u128           [Type: core::num::wrapping::Wrapping<u128>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<u128>]\n+\n+// cdb-command: dx w_usize\n+// cdb-check:w_usize          : 0x78 [Type: core::num::wrapping::Wrapping<usize>]\n+// cdb-check:    [<Raw View>]     [Type: core::num::wrapping::Wrapping<usize>]\n+\n+use std::num::*;\n+\n+fn main() {\n+    let nz_i8 = NonZeroI8::new(11).unwrap();\n+    let nz_i16 = NonZeroI16::new(22).unwrap();\n+    let nz_i32 = NonZeroI32::new(33).unwrap();\n+    let nz_i64 = NonZeroI64::new(44).unwrap();\n+    let nz_i128 = NonZeroI128::new(55).unwrap();\n+    let nz_isize = NonZeroIsize::new(66).unwrap();\n+\n+    let nz_u8 = NonZeroU8::new(77).unwrap();\n+    let nz_u16 = NonZeroU16::new(88).unwrap();\n+    let nz_u32 = NonZeroU32::new(99).unwrap();\n+    let nz_u64 = NonZeroU64::new(100).unwrap();\n+    let nz_u128 = NonZeroU128::new(111).unwrap();\n+    let nz_usize = NonZeroUsize::new(122).unwrap();\n+\n+    let w_i8 = Wrapping(10i8);\n+    let w_i16 = Wrapping(20i16);\n+    let w_i32 = Wrapping(30i32);\n+    let w_i64 = Wrapping(40i64);\n+    let w_i128 = Wrapping(50i128);\n+    let w_isize = Wrapping(60isize);\n+\n+    let w_u8 = Wrapping(70u8);\n+    let w_u16 = Wrapping(80u16);\n+    let w_u32 = Wrapping(90u32);\n+    let w_u64 = Wrapping(100u64);\n+    let w_u128 = Wrapping(110u128);\n+    let w_usize = Wrapping(120usize);\n+\n+    zzz(); // #break\n+}\n+\n+fn zzz() { }"}]}