{"sha": "176bb6bd38dc73557dc6947077f7239dda7b64ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NmJiNmJkMzhkYzczNTU3ZGM2OTQ3MDc3ZjcyMzlkZGE3YjY0ZWY=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-03-15T10:24:28Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-03-15T10:25:04Z"}, "message": "Use `rustc_interface::interface::Config::parse_sess_created` in Clippy", "tree": {"sha": "fa683e58258a59ee0cadea40d320e599afcd4ac0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa683e58258a59ee0cadea40d320e599afcd4ac0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/176bb6bd38dc73557dc6947077f7239dda7b64ef", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYE82ABUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhWWQEA0mDdPIFSlNZPLU80vl3NNHtRELOW\nWrENmwfZFMEKds0BAL02RWbd+AH8QMteF3zNyl7l1BeqMScLSXhV8q0G2mUI\n=oQ1e\n-----END PGP SIGNATURE-----", "payload": "tree fa683e58258a59ee0cadea40d320e599afcd4ac0\nparent d7ab3c77b3259e25e15d77b6939af4ba8d3be4c0\nauthor hyd-dev <yd-huang@outlook.com> 1615803868 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1615803904 +0800\n\nUse `rustc_interface::interface::Config::parse_sess_created` in Clippy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/176bb6bd38dc73557dc6947077f7239dda7b64ef", "html_url": "https://github.com/rust-lang/rust/commit/176bb6bd38dc73557dc6947077f7239dda7b64ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/176bb6bd38dc73557dc6947077f7239dda7b64ef/comments", "author": null, "committer": null, "parents": [{"sha": "d7ab3c77b3259e25e15d77b6939af4ba8d3be4c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ab3c77b3259e25e15d77b6939af4ba8d3be4c0", "html_url": "https://github.com/rust-lang/rust/commit/d7ab3c77b3259e25e15d77b6939af4ba8d3be4c0"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "b6aed862e895fde53dfdeb385932acfda624cc76", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/176bb6bd38dc73557dc6947077f7239dda7b64ef/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176bb6bd38dc73557dc6947077f7239dda7b64ef/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=176bb6bd38dc73557dc6947077f7239dda7b64ef", "patch": "@@ -15,7 +15,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n \n use rustc_interface::interface;\n-use rustc_session::Session;\n+use rustc_session::parse::ParseSess;\n use rustc_span::symbol::Symbol;\n use rustc_tools_util::VersionInfo;\n \n@@ -63,8 +63,8 @@ fn test_arg_value() {\n     assert_eq!(arg_value(args, \"--foo\", |_| true), None);\n }\n \n-fn track_clippy_args(sess: &Session, args_env_var: &Option<String>) {\n-    sess.parse_sess.env_depinfo.borrow_mut().insert((\n+fn track_clippy_args(parse_sess: &mut ParseSess, args_env_var: &Option<String>) {\n+    parse_sess.env_depinfo.get_mut().insert((\n         Symbol::intern(\"CLIPPY_ARGS\"),\n         args_env_var.as_deref().map(Symbol::intern),\n     ));\n@@ -81,14 +81,9 @@ struct RustcCallbacks {\n \n impl rustc_driver::Callbacks for RustcCallbacks {\n     fn config(&mut self, config: &mut interface::Config) {\n-        let previous = config.register_lints.take();\n         let clippy_args_var = self.clippy_args_var.take();\n-        config.register_lints = Some(Box::new(move |sess, lint_store| {\n-            if let Some(ref previous) = previous {\n-                (previous)(sess, lint_store);\n-            }\n-\n-            track_clippy_args(sess, &clippy_args_var);\n+        config.parse_sess_created = Some(Box::new(move |parse_sess| {\n+            track_clippy_args(parse_sess, &clippy_args_var);\n         }));\n     }\n }\n@@ -101,15 +96,16 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n     fn config(&mut self, config: &mut interface::Config) {\n         let previous = config.register_lints.take();\n         let clippy_args_var = self.clippy_args_var.take();\n+        config.parse_sess_created = Some(Box::new(move |parse_sess| {\n+            track_clippy_args(parse_sess, &clippy_args_var);\n+        }));\n         config.register_lints = Some(Box::new(move |sess, mut lint_store| {\n             // technically we're ~guaranteed that this is none but might as well call anything that\n             // is there already. Certainly it can't hurt.\n             if let Some(previous) = &previous {\n                 (previous)(sess, lint_store);\n             }\n \n-            track_clippy_args(sess, &clippy_args_var);\n-\n             let conf = clippy_lints::read_conf(&[], &sess);\n             clippy_lints::register_plugins(&mut lint_store, &sess, &conf);\n             clippy_lints::register_pre_expansion_lints(&mut lint_store);"}]}