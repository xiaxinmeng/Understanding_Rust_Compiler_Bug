{"sha": "7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "node_id": "C_kwDOAAsO6NoAKDdkNjE4MWU0ZDhlMjVkODNkMmZlNmI4NjhhMzEzZmY5OTQyNDY2Y2M", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-04-02T14:11:41Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-04-04T12:12:33Z"}, "message": "add bunch of fixmes: currently there exist some functions that accept LLVMValueRef, some that accept LLVMMetadataRef, and replacing one with another not always possible without explicit convertion", "tree": {"sha": "730a3219da33f5d33464415d00ac8c0055e38fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/730a3219da33f5d33464415d00ac8c0055e38fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "html_url": "https://github.com/rust-lang/rust/commit/7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d6181e4d8e25d83d2fe6b868a313ff9942466cc/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b5f9ac73e087b3728f0fcf53d541d4e80773732", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b5f9ac73e087b3728f0fcf53d541d4e80773732", "html_url": "https://github.com/rust-lang/rust/commit/0b5f9ac73e087b3728f0fcf53d541d4e80773732"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "0ec209c8d437da7e889d1098e36edacc48da6f33", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d6181e4d8e25d83d2fe6b868a313ff9942466cc/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6181e4d8e25d83d2fe6b868a313ff9942466cc/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "patch": "@@ -1072,7 +1072,13 @@ extern \"C\" {\n     pub fn LLVMGetPoison(Ty: &Type) -> &Value;\n \n     // Operations on metadata\n+    // FIXME: deprecated, replace with LLVMMDStringInContext2\n     pub fn LLVMMDStringInContext(C: &Context, Str: *const c_char, SLen: c_uint) -> &Value;\n+\n+    // LLVMMDStringInContext but don't own string\n+    pub fn LLVMMDStringInContext2(C: &Context, Str: *const c_char, SLen: size_t) -> &Metadata;\n+\n+    // FIXME: deprecated, replace with LLVMMDNodeInContext2\n     pub fn LLVMMDNodeInContext<'a>(\n         C: &'a Context,\n         Vals: *const &'a Value,\n@@ -1111,6 +1117,8 @@ extern \"C\" {\n         Packed: Bool,\n     ) -> &'a Value;\n \n+    // FIXME: replace with LLVMConstArray2\n+    // https://github.com/llvm/llvm-project/commit/35276f16e5a2cae0dfb49c0fbf874d4d2f177acc\n     pub fn LLVMConstArray<'a>(\n         ElementTy: &'a Type,\n         ConstantVals: *const &'a Value,"}, {"sha": "be8c960b864d632a9b917d4d9352af0b85d54351", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d6181e4d8e25d83d2fe6b868a313ff9942466cc/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7d6181e4d8e25d83d2fe6b868a313ff9942466cc/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=7d6181e4d8e25d83d2fe6b868a313ff9942466cc", "patch": "@@ -1150,6 +1150,8 @@ extern \"C\" void LLVMRustWriteValueToString(LLVMValueRef V,\n }\n \n // LLVMArrayType function does not support 64-bit ElementCount\n+// FIXME: replace with LLVMArrayType2\n+// https://github.com/llvm/llvm-project/commit/35276f16e5a2cae0dfb49c0fbf874d4d2f177acc\n extern \"C\" LLVMTypeRef LLVMRustArrayType(LLVMTypeRef ElementTy,\n                                          uint64_t ElementCount) {\n   return wrap(ArrayType::get(unwrap(ElementTy), ElementCount));"}]}