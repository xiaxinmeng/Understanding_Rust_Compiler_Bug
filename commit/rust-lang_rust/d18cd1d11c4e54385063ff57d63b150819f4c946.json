{"sha": "d18cd1d11c4e54385063ff57d63b150819f4c946", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOGNkMWQxMWM0ZTU0Mzg1MDYzZmY1N2Q2M2IxNTA4MTlmNGM5NDY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-07T13:49:26Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-07T13:49:26Z"}, "message": "Create rustfmt-bin crate", "tree": {"sha": "63ac784c4310c1d7fd28302419d7bf86b3cd7838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63ac784c4310c1d7fd28302419d7bf86b3cd7838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d18cd1d11c4e54385063ff57d63b150819f4c946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d18cd1d11c4e54385063ff57d63b150819f4c946", "html_url": "https://github.com/rust-lang/rust/commit/d18cd1d11c4e54385063ff57d63b150819f4c946", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d18cd1d11c4e54385063ff57d63b150819f4c946/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3920282debba54d6a0c2c8115cfac878f10a7b3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3920282debba54d6a0c2c8115cfac878f10a7b3c", "html_url": "https://github.com/rust-lang/rust/commit/3920282debba54d6a0c2c8115cfac878f10a7b3c"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "c07146dcb01967b57a035d90453f5f6cd5e7701b", "filename": "rustfmt-bin/Cargo.toml", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-bin%2FCargo.toml?ref=d18cd1d11c4e54385063ff57d63b150819f4c946", "patch": "@@ -0,0 +1,20 @@\n+[package]\n+name = \"rustfmt-bin\"\n+version = \"0.4.0\"\n+authors = [\"Nicholas Cameron <ncameron@mozilla.com>\", \"The Rustfmt developers\"]\n+description = \"Tool to find and fix Rust formatting issues\"\n+repository = \"https://github.com/rust-lang-nursery/rustfmt\"\n+readme = \"README.md\"\n+license = \"Apache-2.0/MIT\"\n+build = \"build.rs\"\n+categories = [\"development-tools\"]\n+\n+[[bin]]\n+name = \"rustfmt\"\n+path = \"src/main.rs\"\n+\n+[dependencies]\n+env_logger = \"0.4\"\n+getopts = \"0.2\"\n+rustfmt-config = { path = \"../rustfmt-config\" }\n+rustfmt-core = { path = \"../rustfmt-core\" }\n\\ No newline at end of file"}, {"sha": "2643946236d6c2a52a5172046806a7851ff9ab3c", "filename": "rustfmt-bin/build.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-bin%2Fbuild.rs?ref=d18cd1d11c4e54385063ff57d63b150819f4c946", "patch": "@@ -0,0 +1,49 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::env;\n+use std::fs::File;\n+use std::io::Write;\n+use std::path::PathBuf;\n+use std::process::Command;\n+\n+fn main() {\n+    let out_dir = PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());\n+\n+    File::create(out_dir.join(\"commit-info.txt\"))\n+        .unwrap()\n+        .write_all(commit_info().as_bytes())\n+        .unwrap();\n+}\n+\n+// Try to get hash and date of the last commit on a best effort basis. If anything goes wrong\n+// (git not installed or if this is not a git repository) just return an empty string.\n+fn commit_info() -> String {\n+    match (commit_hash(), commit_date()) {\n+        (Some(hash), Some(date)) => format!(\" ({} {})\", hash.trim_right(), date),\n+        _ => String::new(),\n+    }\n+}\n+\n+fn commit_hash() -> Option<String> {\n+    Command::new(\"git\")\n+        .args(&[\"rev-parse\", \"--short\", \"HEAD\"])\n+        .output()\n+        .ok()\n+        .and_then(|r| String::from_utf8(r.stdout).ok())\n+}\n+\n+fn commit_date() -> Option<String> {\n+    Command::new(\"git\")\n+        .args(&[\"log\", \"-1\", \"--date=short\", \"--pretty=format:%cd\"])\n+        .output()\n+        .ok()\n+        .and_then(|r| String::from_utf8(r.stdout).ok())\n+}"}, {"sha": "fbaacc69bdfa3ce262ae2e71be439e6ad79694bb", "filename": "rustfmt-bin/src/main.rs", "status": "renamed", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18cd1d11c4e54385063ff57d63b150819f4c946/rustfmt-bin%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-bin%2Fsrc%2Fmain.rs?ref=d18cd1d11c4e54385063ff57d63b150819f4c946", "patch": "@@ -8,24 +8,25 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(rustc_private)]\n #![cfg(not(test))]\n \n extern crate env_logger;\n extern crate getopts;\n-extern crate rustfmt_nightly as rustfmt;\n+extern crate rustfmt_config as config;\n+extern crate rustfmt_core as rustfmt;\n \n use std::{env, error};\n use std::fs::File;\n use std::io::{self, Read, Write};\n use std::path::{Path, PathBuf};\n-use std::str::FromStr;\n \n use getopts::{Matches, Options};\n \n+use config::{get_toml_path, Color, Config, WriteMode};\n+use config::file_lines::FileLines;\n use rustfmt::{run, FileName, Input, Summary};\n-use rustfmt::config::{get_toml_path, Color, Config, WriteMode};\n-use rustfmt::file_lines::FileLines;\n+\n+use std::str::FromStr;\n \n type FmtError = Box<error::Error + Send + Sync>;\n type FmtResult<T> = std::result::Result<T, FmtError>;", "previous_filename": "src/bin/rustfmt.rs"}]}