{"sha": "d3a0f7e9fc336e2912a0006b4c71d19752000fea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYTBmN2U5ZmMzMzZlMjkxMmEwMDA2YjRjNzFkMTk3NTIwMDBmZWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-02T04:32:00Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-02T14:47:25Z"}, "message": "emit mthd data if marked inline", "tree": {"sha": "462d268855be8ddb10d8d38079730444af021c29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/462d268855be8ddb10d8d38079730444af021c29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3a0f7e9fc336e2912a0006b4c71d19752000fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a0f7e9fc336e2912a0006b4c71d19752000fea", "html_url": "https://github.com/rust-lang/rust/commit/d3a0f7e9fc336e2912a0006b4c71d19752000fea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3a0f7e9fc336e2912a0006b4c71d19752000fea/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6473a87cec100682764f4d926541fc7eb455b00c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6473a87cec100682764f4d926541fc7eb455b00c", "html_url": "https://github.com/rust-lang/rust/commit/6473a87cec100682764f4d926541fc7eb455b00c"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "2da07511628f00c7672bd43176a21938bf7d1485", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d3a0f7e9fc336e2912a0006b4c71d19752000fea/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a0f7e9fc336e2912a0006b4c71d19752000fea/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=d3a0f7e9fc336e2912a0006b4c71d19752000fea", "patch": "@@ -29,16 +29,8 @@ type abbrev_map = map::hashmap<ty::t, tyencode::ty_abbrev>;\n \n type encode_ctxt = {ccx: crate_ctxt, type_abbrevs: abbrev_map};\n \n-fn should_inline(path: ast_map::path, item: @item) -> bool {\n-    if item.ident == \"iter\" { // XXX\n-        #debug[\"should_inline(%s::%s)? attrs=%s result=%b\",\n-               ast_map::path_to_str(path),\n-               item.ident,\n-               str::connect(vec::map(item.attrs, pprust::attr_to_str), \", \"),\n-               attr::attrs_contains_name(item.attrs, \"inline\")];\n-    }\n-\n-    attr::attrs_contains_name(item.attrs, \"inline\")\n+fn should_inline(_path: ast_map::path, attrs: [attribute]) -> bool {\n+    attr::attrs_contains_name(attrs, \"inline\")\n }\n \n // Path table encoding\n@@ -351,7 +343,7 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_type(ecx, ebml_w, node_id_to_type(tcx, item.id));\n         encode_symbol(ecx, ebml_w, item.id);\n         encode_path(ebml_w, path, ast_map::path_name(item.ident));\n-        if should_inline(path, item) {\n+        if should_inline(path, item.attrs) {\n             astencode::encode_inlined_item(ecx, ebml_w, path, ii_item(item));\n         }\n         ebml_w.end_tag();\n@@ -454,6 +446,11 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n             encode_name(ebml_w, m.ident);\n             encode_symbol(ecx, ebml_w, m.id);\n             encode_path(ebml_w, impl_path, ast_map::path_name(m.ident));\n+            if should_inline(path, m.attrs) {\n+                astencode::encode_inlined_item(\n+                    ecx, ebml_w, impl_path,\n+                    ii_method(local_def(item.id), m));\n+            }\n             ebml_w.end_tag();\n         }\n       }"}]}