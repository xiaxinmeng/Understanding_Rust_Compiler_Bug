{"sha": "e1d63d1d7c19c6d341b9baed971493eb3354117c", "node_id": "C_kwDOAAsO6NoAKGUxZDYzZDFkN2MxOWM2ZDM0MWI5YmFlZDk3MTQ5M2ViMzM1NDExN2M", "commit": {"author": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-05-31T21:28:05Z"}, "committer": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-05-31T21:28:05Z"}, "message": "migrate `check_for_for_in_in_typo` diagnostic", "tree": {"sha": "7576b80dbbfeee94e1f5b410516cf529fc5629ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7576b80dbbfeee94e1f5b410516cf529fc5629ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d63d1d7c19c6d341b9baed971493eb3354117c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCYpaIZQAKCRAnUl7150IK\nUG/gAQCpLXqubmj3F6a03Rzu3yzQ6EECYNKp/PEyAmQjjcAvwwEAr0mQavkJFjie\nT0dWfR1N8uJJJbhmB5HYxUIlAErKnQs=\n=MdoD\n-----END PGP SIGNATURE-----", "payload": "tree 7576b80dbbfeee94e1f5b410516cf529fc5629ed\nparent 9ce04e378338b35d51a18c298f9f82fb4dbf920d\nauthor Christian Poveda <git@pvdrz.com> 1654032485 -0500\ncommitter Christian Poveda <git@pvdrz.com> 1654032485 -0500\n\nmigrate `check_for_for_in_in_typo` diagnostic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d63d1d7c19c6d341b9baed971493eb3354117c", "html_url": "https://github.com/rust-lang/rust/commit/e1d63d1d7c19c6d341b9baed971493eb3354117c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d63d1d7c19c6d341b9baed971493eb3354117c/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ce04e378338b35d51a18c298f9f82fb4dbf920d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce04e378338b35d51a18c298f9f82fb4dbf920d", "html_url": "https://github.com/rust-lang/rust/commit/9ce04e378338b35d51a18c298f9f82fb4dbf920d"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "076b1b1caed7278645fbe808cf3510cac370c2a5", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1d63d1d7c19c6d341b9baed971493eb3354117c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e1d63d1d7c19c6d341b9baed971493eb3354117c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=e1d63d1d7c19c6d341b9baed971493eb3354117c", "patch": "@@ -28,3 +28,7 @@ parser-incorrect-use-of-await =\n     incorrect use of `await`\n     .parentheses-suggestion = `await` is not a method call, remove the parentheses\n     .postfix-suggestion = `await` is a postfix operation\n+\n+parser-in-in-typo =\n+    expected iterable, found keyword `in`\n+    .suggestion = remove the duplicated `in`"}, {"sha": "d6b981bdeefc522ce47f35417e512fe8c53f4ea1", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1d63d1d7c19c6d341b9baed971493eb3354117c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d63d1d7c19c6d341b9baed971493eb3354117c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=e1d63d1d7c19c6d341b9baed971493eb3354117c", "patch": "@@ -325,6 +325,15 @@ struct IncorrectAwait {\n     question_mark: &'static str,\n }\n \n+#[derive(SessionDiagnostic)]\n+#[error(slug = \"parser-in-in-typo\")]\n+struct InInTypo {\n+    #[primary_span]\n+    span: Span,\n+    #[suggestion(applicability = \"machine-applicable\")]\n+    sugg_span: Span,\n+}\n+\n // SnapshotParser is used to create a snapshot of the parser\n // without causing duplicate errors being emitted when the `Parser`\n // is dropped.\n@@ -1953,14 +1962,10 @@ impl<'a> Parser<'a> {\n     pub(super) fn check_for_for_in_in_typo(&mut self, in_span: Span) {\n         if self.eat_keyword(kw::In) {\n             // a common typo: `for _ in in bar {}`\n-            self.struct_span_err(self.prev_token.span, \"expected iterable, found keyword `in`\")\n-                .span_suggestion_short(\n-                    in_span.until(self.prev_token.span),\n-                    \"remove the duplicated `in`\",\n-                    String::new(),\n-                    Applicability::MachineApplicable,\n-                )\n-                .emit();\n+            self.sess.emit_err(InInTypo {\n+                span: self.prev_token.span,\n+                sugg_span: in_span.until(self.prev_token.span),\n+            });\n         }\n     }\n "}]}