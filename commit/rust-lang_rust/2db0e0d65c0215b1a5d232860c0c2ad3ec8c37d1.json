{"sha": "2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYjBlMGQ2NWMwMjE1YjFhNWQyMzI4NjBjMGMyYWQzZWM4YzM3ZDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T14:30:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T14:30:31Z"}, "message": "tweaks and fix weird space", "tree": {"sha": "74ed8a5ab22557da5fa436591920326d2455c701", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74ed8a5ab22557da5fa436591920326d2455c701"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "html_url": "https://github.com/rust-lang/rust/commit/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e61a8a94f7762abcd2e77a3108f766d2f5bb1185", "url": "https://api.github.com/repos/rust-lang/rust/commits/e61a8a94f7762abcd2e77a3108f766d2f5bb1185", "html_url": "https://github.com/rust-lang/rust/commit/e61a8a94f7762abcd2e77a3108f766d2f5bb1185"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "255d09a0417e37f8743ccd55b753c0890f656a49", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "patch": "@@ -633,7 +633,7 @@ unsafe impl<T: ?Sized> Freeze for &mut T {}\n /// This trait is automatically implemented for almost every type.\n ///\n /// [`mem::replace`]: ../../std/mem/fn.replace.html\n- /// [`Pin<P>`]: ../pin/struct.Pin.html\n+/// [`Pin<P>`]: ../pin/struct.Pin.html\n /// [`pin module`]: ../../std/pin/index.html\n #[stable(feature = \"pin\", since = \"1.33.0\")]\n #[cfg_attr(not(stage0), lang = \"unpin\")]"}, {"sha": "e045702bca2353069d4d5d9a83c4b5d91bc1efe2", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "patch": "@@ -53,7 +53,7 @@\n //! cancels the effect of [`Pin<P>`]. For `T: Unpin`, `Pin<Box<T>>` and `Box<T>` function\n //! identically, as do `Pin<&mut T>` and `&mut T`.\n //!\n-//! Note that pinning and `Unpin` only affect the pointed-to type, not the pointer\n+//! Note that pinning and `Unpin` only affect the pointed-to type `P::Target`, not the pointer\n //! type `P` itself that got wrapped in `Pin<P>`. For example, whether or not `Box<T>` is\n //! `Unpin` has no effect on the behavior of `Pin<Box<T>>` (here, `T` is the\n //! pointed-to type)."}]}