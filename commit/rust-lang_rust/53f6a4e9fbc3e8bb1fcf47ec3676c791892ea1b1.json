{"sha": "53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZjZhNGU5ZmJjM2U4YmIxZmNmNDdlYzM2NzZjNzkxODkyZWExYjE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-16T03:01:08Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-16T08:13:45Z"}, "message": "std: fix UnfoldrIterator cross-crate.", "tree": {"sha": "22c6494217630c8ff12cf9b1e7fb6d2c1480e057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22c6494217630c8ff12cf9b1e7fb6d2c1480e057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "html_url": "https://github.com/rust-lang/rust/commit/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c989b79127c5062df0a64d8c383de93c82a3d9b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c989b79127c5062df0a64d8c383de93c82a3d9b7", "html_url": "https://github.com/rust-lang/rust/commit/c989b79127c5062df0a64d8c383de93c82a3d9b7"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "a7450101fc09c069873f359c9b818e4332d2a478", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "patch": "@@ -788,8 +788,8 @@ impl<'self, A, St> UnfoldrIterator<'self, A, St> {\n     /// Creates a new iterator with the specified closure as the \"iterator\n     /// function\" and an initial state to eventually pass to the iterator\n     #[inline]\n-    pub fn new(f: &'self fn(&mut St) -> Option<A>, initial_state: St)\n-        -> UnfoldrIterator<'self, A, St> {\n+    pub fn new<'a>(f: &'a fn(&mut St) -> Option<A>, initial_state: St)\n+        -> UnfoldrIterator<'a, A, St> {\n         UnfoldrIterator {\n             f: f,\n             state: initial_state"}, {"sha": "4e98543ae826ea7e7e8ea2fc0ab2da978be6e5ca", "filename": "src/test/run-pass/unfoldr-cross-crate.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs?ref=53f6a4e9fbc3e8bb1fcf47ec3676c791892ea1b1", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::iterator::*;\n+\n+// UnfoldrIterator had a bug with 'self that mean it didn't work\n+// cross-crate\n+\n+fn main() {\n+    fn count(st: &mut uint) -> Option<uint> {\n+        if *st < 10 {\n+            let ret = Some(*st);\n+            *st += 1;\n+            ret\n+        } else {\n+            None\n+        }\n+    }\n+\n+    let mut it = UnfoldrIterator::new(count, 0);\n+    let mut i = 0;\n+    for it.advance |counted| {\n+        assert_eq!(counted, i);\n+        i += 1;\n+    }\n+    assert_eq!(i, 10);\n+}"}]}