{"sha": "decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "node_id": "C_kwDOAAsO6NoAKGRlY2FiYTk3Y2MwZTY4MmE3YjQ0YjNmMDZmMTBhZDFhOGViZTljYmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-12T14:59:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-12T14:59:41Z"}, "message": "Auto merge of #10184 - robertbastian:master, r=xFrednet\n\nAllow implementing `Hash` with derived `PartialEq` (`derive_hash_xor_eq`\n\nThis is a common pattern and is totally allowed by the `Hash` trait.\n\nFixes #2627\n\nchangelog: Move: Renamed `derive_hash_xor_eq` to [`derived_hash_with_manual_eq`]\n[#10184](https://github.com/rust-lang/rust-clippy/pull/10184)\nchangelog: Enhancement: [`derived_hash_with_manual_eq`]: Now allows `#[derive(PartialEq)]` with custom `Hash` implementations\n[#10184](https://github.com/rust-lang/rust-clippy/pull/10184)\n<!-- changelog_checked -->", "tree": {"sha": "f615c652877b812edc5b772698da041c0e1475dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f615c652877b812edc5b772698da041c0e1475dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "html_url": "https://github.com/rust-lang/rust/commit/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c01721434e8ca3aba8a1e0cfca259bdc7b98191", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c01721434e8ca3aba8a1e0cfca259bdc7b98191", "html_url": "https://github.com/rust-lang/rust/commit/7c01721434e8ca3aba8a1e0cfca259bdc7b98191"}, {"sha": "920633258f237e3aed59adb1e9e900431962ab7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/920633258f237e3aed59adb1e9e900431962ab7a", "html_url": "https://github.com/rust-lang/rust/commit/920633258f237e3aed59adb1e9e900431962ab7a"}], "stats": {"total": 225, "additions": 92, "deletions": 133}, "files": [{"sha": "8e31e8f0d9815083d09b9fe971c471871e41248d", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -4137,6 +4137,7 @@ Released 2018-09-13\n [`derive_hash_xor_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#derive_hash_xor_eq\n [`derive_ord_xor_partial_ord`]: https://rust-lang.github.io/rust-clippy/master/index.html#derive_ord_xor_partial_ord\n [`derive_partial_eq_without_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq\n+[`derived_hash_with_manual_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#derived_hash_with_manual_eq\n [`disallowed_macros`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_macros\n [`disallowed_method`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_method\n [`disallowed_methods`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_methods"}, {"sha": "91ca73633f062d7e0f1c3e10ac31b3ef085ec297", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -111,7 +111,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::dereference::NEEDLESS_BORROW_INFO,\n     crate::dereference::REF_BINDING_TO_REFERENCE_INFO,\n     crate::derivable_impls::DERIVABLE_IMPLS_INFO,\n-    crate::derive::DERIVE_HASH_XOR_EQ_INFO,\n+    crate::derive::DERIVED_HASH_WITH_MANUAL_EQ_INFO,\n     crate::derive::DERIVE_ORD_XOR_PARTIAL_ORD_INFO,\n     crate::derive::DERIVE_PARTIAL_EQ_WITHOUT_EQ_INFO,\n     crate::derive::EXPL_IMPL_CLONE_ON_COPY_INFO,"}, {"sha": "f4b15e0916dbf47bca1aa427e5d46f35d9bfa45a", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -46,7 +46,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n-    pub DERIVE_HASH_XOR_EQ,\n+    pub DERIVED_HASH_WITH_MANUAL_EQ,\n     correctness,\n     \"deriving `Hash` but implementing `PartialEq` explicitly\"\n }\n@@ -197,7 +197,7 @@ declare_clippy_lint! {\n \n declare_lint_pass!(Derive => [\n     EXPL_IMPL_CLONE_ON_COPY,\n-    DERIVE_HASH_XOR_EQ,\n+    DERIVED_HASH_WITH_MANUAL_EQ,\n     DERIVE_ORD_XOR_PARTIAL_ORD,\n     UNSAFE_DERIVE_DESERIALIZE,\n     DERIVE_PARTIAL_EQ_WITHOUT_EQ\n@@ -226,7 +226,7 @@ impl<'tcx> LateLintPass<'tcx> for Derive {\n     }\n }\n \n-/// Implementation of the `DERIVE_HASH_XOR_EQ` lint.\n+/// Implementation of the `DERIVED_HASH_WITH_MANUAL_EQ` lint.\n fn check_hash_peq<'tcx>(\n     cx: &LateContext<'tcx>,\n     span: Span,\n@@ -243,7 +243,7 @@ fn check_hash_peq<'tcx>(\n             cx.tcx.for_each_relevant_impl(peq_trait_def_id, ty, |impl_id| {\n                 let peq_is_automatically_derived = cx.tcx.has_attr(impl_id, sym::automatically_derived);\n \n-                if peq_is_automatically_derived == hash_is_automatically_derived {\n+                if !hash_is_automatically_derived || peq_is_automatically_derived {\n                     return;\n                 }\n \n@@ -252,17 +252,11 @@ fn check_hash_peq<'tcx>(\n                 // Only care about `impl PartialEq<Foo> for Foo`\n                 // For `impl PartialEq<B> for A, input_types is [A, B]\n                 if trait_ref.substs.type_at(1) == ty {\n-                    let mess = if peq_is_automatically_derived {\n-                        \"you are implementing `Hash` explicitly but have derived `PartialEq`\"\n-                    } else {\n-                        \"you are deriving `Hash` but have implemented `PartialEq` explicitly\"\n-                    };\n-\n                     span_lint_and_then(\n                         cx,\n-                        DERIVE_HASH_XOR_EQ,\n+                        DERIVED_HASH_WITH_MANUAL_EQ,\n                         span,\n-                        mess,\n+                        \"you are deriving `Hash` but have implemented `PartialEq` explicitly\",\n                         |diag| {\n                             if let Some(local_def_id) = impl_id.as_local() {\n                                 let hir_id = cx.tcx.hir().local_def_id_to_hir_id(local_def_id);"}, {"sha": "9f487dedb8cb6daf24970e3a7d2d7d99278d7ebd", "filename": "clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/clippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frenamed_lints.rs?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -9,6 +9,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::box_vec\", \"clippy::box_collection\"),\n     (\"clippy::const_static_lifetime\", \"clippy::redundant_static_lifetimes\"),\n     (\"clippy::cyclomatic_complexity\", \"clippy::cognitive_complexity\"),\n+    (\"clippy::derive_hash_xor_eq\", \"clippy::derived_hash_with_manual_eq\"),\n     (\"clippy::disallowed_method\", \"clippy::disallowed_methods\"),\n     (\"clippy::disallowed_type\", \"clippy::disallowed_types\"),\n     (\"clippy::eval_order_dependence\", \"clippy::mixed_read_write_in_expression\"),"}, {"sha": "16c92397804e526dac40510073c9814d8e053efc", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/7c01721434e8ca3aba8a1e0cfca259bdc7b98191/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c01721434e8ca3aba8a1e0cfca259bdc7b98191/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=7c01721434e8ca3aba8a1e0cfca259bdc7b98191", "patch": "@@ -1,59 +0,0 @@\n-error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:12:10\n-   |\n-LL | #[derive(Hash)]\n-   |          ^^^^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:15:1\n-   |\n-LL | impl PartialEq for Bar {\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-   = note: `#[deny(clippy::derive_hash_xor_eq)]` on by default\n-   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:21:10\n-   |\n-LL | #[derive(Hash)]\n-   |          ^^^^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:24:1\n-   |\n-LL | impl PartialEq<Baz> for Baz {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:33:1\n-   |\n-LL | / impl std::hash::Hash for Bah {\n-LL | |     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-LL | | }\n-   | |_^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:30:10\n-   |\n-LL | #[derive(PartialEq)]\n-   |          ^^^^^^^^^\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:51:5\n-   |\n-LL | /     impl Hash for Foo3 {\n-LL | |         fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-LL | |     }\n-   | |_____^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:48:14\n-   |\n-LL |     #[derive(PartialEq)]\n-   |              ^^^^^^^^^\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "8ad09a8de43d5acad141e03b5cf3b682010105eb", "filename": "tests/ui/derived_hash_with_manual_eq.rs", "status": "renamed", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Fderived_hash_with_manual_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Fderived_hash_with_manual_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderived_hash_with_manual_eq.rs?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -27,30 +27,13 @@ impl PartialEq<Baz> for Baz {\n     }\n }\n \n+// Implementing `Hash` with a derived `PartialEq` is fine. See #2627\n+\n #[derive(PartialEq)]\n struct Bah;\n \n impl std::hash::Hash for Bah {\n     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n }\n \n-#[derive(PartialEq)]\n-struct Foo2;\n-\n-trait Hash {}\n-\n-// We don't want to lint on user-defined traits called `Hash`\n-impl Hash for Foo2 {}\n-\n-mod use_hash {\n-    use std::hash::{Hash, Hasher};\n-\n-    #[derive(PartialEq)]\n-    struct Foo3;\n-\n-    impl Hash for Foo3 {\n-        fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-    }\n-}\n-\n fn main() {}", "previous_filename": "tests/ui/derive_hash_xor_eq.rs"}, {"sha": "230940f25fb60ca1bf6c89c74c32a5b9962feb6a", "filename": "tests/ui/derived_hash_with_manual_eq.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Fderived_hash_with_manual_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Fderived_hash_with_manual_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderived_hash_with_manual_eq.stderr?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -0,0 +1,29 @@\n+error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n+  --> $DIR/derived_hash_with_manual_eq.rs:12:10\n+   |\n+LL | #[derive(Hash)]\n+   |          ^^^^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derived_hash_with_manual_eq.rs:15:1\n+   |\n+LL | impl PartialEq for Bar {\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+   = note: `#[deny(clippy::derived_hash_with_manual_eq)]` on by default\n+   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n+  --> $DIR/derived_hash_with_manual_eq.rs:21:10\n+   |\n+LL | #[derive(Hash)]\n+   |          ^^^^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derived_hash_with_manual_eq.rs:24:1\n+   |\n+LL | impl PartialEq<Baz> for Baz {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "5076f61334d67d32d75d7720896f4f8a1a6e34e2", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -10,6 +10,7 @@\n #![allow(clippy::box_collection)]\n #![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::cognitive_complexity)]\n+#![allow(clippy::derived_hash_with_manual_eq)]\n #![allow(clippy::disallowed_methods)]\n #![allow(clippy::disallowed_types)]\n #![allow(clippy::mixed_read_write_in_expression)]\n@@ -45,6 +46,7 @@\n #![warn(clippy::box_collection)]\n #![warn(clippy::redundant_static_lifetimes)]\n #![warn(clippy::cognitive_complexity)]\n+#![warn(clippy::derived_hash_with_manual_eq)]\n #![warn(clippy::disallowed_methods)]\n #![warn(clippy::disallowed_types)]\n #![warn(clippy::mixed_read_write_in_expression)]"}, {"sha": "64bc1ca7116c535d118d3a49626f4e40637e1f92", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -10,6 +10,7 @@\n #![allow(clippy::box_collection)]\n #![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::cognitive_complexity)]\n+#![allow(clippy::derived_hash_with_manual_eq)]\n #![allow(clippy::disallowed_methods)]\n #![allow(clippy::disallowed_types)]\n #![allow(clippy::mixed_read_write_in_expression)]\n@@ -45,6 +46,7 @@\n #![warn(clippy::box_vec)]\n #![warn(clippy::const_static_lifetime)]\n #![warn(clippy::cyclomatic_complexity)]\n+#![warn(clippy::derive_hash_xor_eq)]\n #![warn(clippy::disallowed_method)]\n #![warn(clippy::disallowed_type)]\n #![warn(clippy::eval_order_dependence)]"}, {"sha": "27a0263292ef1a37104fe047dd5570e27600f181", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 48, "deletions": 42, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "patch": "@@ -1,250 +1,256 @@\n error: lint `clippy::almost_complete_letter_range` has been renamed to `clippy::almost_complete_range`\n-  --> $DIR/rename.rs:41:9\n+  --> $DIR/rename.rs:42:9\n    |\n LL | #![warn(clippy::almost_complete_letter_range)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::almost_complete_range`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::blacklisted_name` has been renamed to `clippy::disallowed_names`\n-  --> $DIR/rename.rs:42:9\n+  --> $DIR/rename.rs:43:9\n    |\n LL | #![warn(clippy::blacklisted_name)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_names`\n \n error: lint `clippy::block_in_if_condition_expr` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:43:9\n+  --> $DIR/rename.rs:44:9\n    |\n LL | #![warn(clippy::block_in_if_condition_expr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::block_in_if_condition_stmt` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:44:9\n+  --> $DIR/rename.rs:45:9\n    |\n LL | #![warn(clippy::block_in_if_condition_stmt)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::box_vec` has been renamed to `clippy::box_collection`\n-  --> $DIR/rename.rs:45:9\n+  --> $DIR/rename.rs:46:9\n    |\n LL | #![warn(clippy::box_vec)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::box_collection`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:46:9\n+  --> $DIR/rename.rs:47:9\n    |\n LL | #![warn(clippy::const_static_lifetime)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:47:9\n+  --> $DIR/rename.rs:48:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n+error: lint `clippy::derive_hash_xor_eq` has been renamed to `clippy::derived_hash_with_manual_eq`\n+  --> $DIR/rename.rs:49:9\n+   |\n+LL | #![warn(clippy::derive_hash_xor_eq)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::derived_hash_with_manual_eq`\n+\n error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_methods`\n-  --> $DIR/rename.rs:48:9\n+  --> $DIR/rename.rs:50:9\n    |\n LL | #![warn(clippy::disallowed_method)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n \n error: lint `clippy::disallowed_type` has been renamed to `clippy::disallowed_types`\n-  --> $DIR/rename.rs:49:9\n+  --> $DIR/rename.rs:51:9\n    |\n LL | #![warn(clippy::disallowed_type)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_types`\n \n error: lint `clippy::eval_order_dependence` has been renamed to `clippy::mixed_read_write_in_expression`\n-  --> $DIR/rename.rs:50:9\n+  --> $DIR/rename.rs:52:9\n    |\n LL | #![warn(clippy::eval_order_dependence)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::mixed_read_write_in_expression`\n \n error: lint `clippy::identity_conversion` has been renamed to `clippy::useless_conversion`\n-  --> $DIR/rename.rs:51:9\n+  --> $DIR/rename.rs:53:9\n    |\n LL | #![warn(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::useless_conversion`\n \n error: lint `clippy::if_let_some_result` has been renamed to `clippy::match_result_ok`\n-  --> $DIR/rename.rs:52:9\n+  --> $DIR/rename.rs:54:9\n    |\n LL | #![warn(clippy::if_let_some_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::match_result_ok`\n \n error: lint `clippy::logic_bug` has been renamed to `clippy::overly_complex_bool_expr`\n-  --> $DIR/rename.rs:53:9\n+  --> $DIR/rename.rs:55:9\n    |\n LL | #![warn(clippy::logic_bug)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::overly_complex_bool_expr`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:54:9\n+  --> $DIR/rename.rs:56:9\n    |\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n-  --> $DIR/rename.rs:55:9\n+  --> $DIR/rename.rs:57:9\n    |\n LL | #![warn(clippy::option_and_then_some)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::bind_instead_of_map`\n \n error: lint `clippy::option_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:56:9\n+  --> $DIR/rename.rs:58:9\n    |\n LL | #![warn(clippy::option_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::option_map_unwrap_or` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:57:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::option_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::ref_in_deref` has been renamed to `clippy::needless_borrow`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::ref_in_deref)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::needless_borrow`\n \n error: lint `clippy::result_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::result_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::result_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::result_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::result_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::result_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::single_char_push_str` has been renamed to `clippy::single_char_add_str`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::single_char_push_str)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::single_char_add_str`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::stutter)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::to_string_in_display` has been renamed to `clippy::recursive_format_impl`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:68:9\n    |\n LL | #![warn(clippy::to_string_in_display)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::recursive_format_impl`\n \n error: lint `clippy::zero_width_space` has been renamed to `clippy::invisible_characters`\n-  --> $DIR/rename.rs:67:9\n+  --> $DIR/rename.rs:69:9\n    |\n LL | #![warn(clippy::zero_width_space)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::invisible_characters`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:68:9\n+  --> $DIR/rename.rs:70:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:69:9\n+  --> $DIR/rename.rs:71:9\n    |\n LL | #![warn(clippy::for_loop_over_option)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loop_over_result` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:70:9\n+  --> $DIR/rename.rs:72:9\n    |\n LL | #![warn(clippy::for_loop_over_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loops_over_fallibles` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:71:9\n+  --> $DIR/rename.rs:73:9\n    |\n LL | #![warn(clippy::for_loops_over_fallibles)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:72:9\n+  --> $DIR/rename.rs:74:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:73:9\n+  --> $DIR/rename.rs:75:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:74:9\n+  --> $DIR/rename.rs:76:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::let_underscore_drop` has been renamed to `let_underscore_drop`\n-  --> $DIR/rename.rs:75:9\n+  --> $DIR/rename.rs:77:9\n    |\n LL | #![warn(clippy::let_underscore_drop)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `let_underscore_drop`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:76:9\n+  --> $DIR/rename.rs:78:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:77:9\n+  --> $DIR/rename.rs:79:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::positional_named_format_parameters` has been renamed to `named_arguments_used_positionally`\n-  --> $DIR/rename.rs:78:9\n+  --> $DIR/rename.rs:80:9\n    |\n LL | #![warn(clippy::positional_named_format_parameters)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `named_arguments_used_positionally`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:79:9\n+  --> $DIR/rename.rs:81:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:80:9\n+  --> $DIR/rename.rs:82:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:81:9\n+  --> $DIR/rename.rs:83:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n-error: aborting due to 41 previous errors\n+error: aborting due to 42 previous errors\n "}]}