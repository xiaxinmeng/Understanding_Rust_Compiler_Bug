{"sha": "87cd57d56aeafa1117a6163249d210f39efe8f28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Y2Q1N2Q1NmFlYWZhMTExN2E2MTYzMjQ5ZDIxMGYzOWVmZThmMjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T09:10:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T09:10:35Z"}, "message": "Refactor", "tree": {"sha": "a917b4bff6164902d26ed5334f94c6e76745bfbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a917b4bff6164902d26ed5334f94c6e76745bfbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87cd57d56aeafa1117a6163249d210f39efe8f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87cd57d56aeafa1117a6163249d210f39efe8f28", "html_url": "https://github.com/rust-lang/rust/commit/87cd57d56aeafa1117a6163249d210f39efe8f28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87cd57d56aeafa1117a6163249d210f39efe8f28/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a44428fc796cb5afb5b85cd246974e590eef2040", "url": "https://api.github.com/repos/rust-lang/rust/commits/a44428fc796cb5afb5b85cd246974e590eef2040", "html_url": "https://github.com/rust-lang/rust/commit/a44428fc796cb5afb5b85cd246974e590eef2040"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "01e155855913d8d0a41e20e633916591ae74b98f", "filename": "crates/libsyntax2/src/lib.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Flib.rs?ref=87cd57d56aeafa1117a6163249d210f39efe8f28", "patch": "@@ -50,16 +50,25 @@ pub use {\n     yellow::{SyntaxNode, SyntaxNodeRef, OwnedRoot, RefRoot, TreeRoot, SyntaxError},\n };\n \n+use yellow::{GreenNode, SyntaxRoot};\n+\n #[derive(Clone, Debug)]\n pub struct File {\n     root: SyntaxNode\n }\n \n impl File {\n-    pub fn parse(text: &str) -> Self {\n-        let root = ::parse(text);\n+    fn new(root: GreenNode, errors: Vec<SyntaxError>) -> File {\n+        let root = SyntaxRoot::new(root, errors);\n+        let root = SyntaxNode::new_owned(root);\n+        validate_block_structure(root.borrowed());\n         File { root }\n     }\n+    pub fn parse(text: &str) -> Self {\n+        let tokens = tokenize(&text);\n+        let (root, errors) = parser_impl::parse::<yellow::GreenBuilder>(text, &tokens);\n+        File::new(root, errors)\n+    }\n     pub fn ast(&self) -> ast::Root {\n         ast::Root::cast(self.syntax()).unwrap()\n     }\n@@ -69,14 +78,6 @@ impl File {\n     pub fn errors(&self) -> Vec<SyntaxError> {\n         self.syntax().root.syntax_root().errors.clone()\n     }\n-\n-}\n-\n-pub fn parse(text: &str) -> SyntaxNode {\n-    let tokens = tokenize(&text);\n-    let res = parser_impl::parse::<yellow::GreenBuilder>(text, &tokens);\n-    validate_block_structure(res.borrowed());\n-    res\n }\n \n #[cfg(not(debug_assertions))]"}, {"sha": "e4ab37899d575c14f2649ad279ccdb795417d6ed", "filename": "crates/libsyntax2/src/yellow/builder.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fbuilder.rs?ref=87cd57d56aeafa1117a6163249d210f39efe8f28", "patch": "@@ -1,6 +1,6 @@\n use {\n     parser_impl::Sink,\n-    yellow::{GreenNode, SyntaxError, SyntaxNode, SyntaxRoot},\n+    yellow::{GreenNode, SyntaxError},\n     SyntaxKind, TextRange, TextUnit,\n };\n \n@@ -13,7 +13,7 @@ pub(crate) struct GreenBuilder<'a> {\n }\n \n impl<'a> Sink<'a> for GreenBuilder<'a> {\n-    type Tree = SyntaxNode;\n+    type Tree = (GreenNode, Vec<SyntaxError>);\n \n     fn new(text: &'a str) -> Self {\n         GreenBuilder {\n@@ -56,10 +56,9 @@ impl<'a> Sink<'a> for GreenBuilder<'a> {\n         })\n     }\n \n-    fn finish(mut self) -> SyntaxNode {\n+    fn finish(mut self) -> (GreenNode, Vec<SyntaxError>) {\n         assert_eq!(self.children.len(), 1);\n         let root = self.children.pop().unwrap();\n-        let root = SyntaxRoot::new(root, self.errors);\n-        SyntaxNode::new_owned(root)\n+        (root, self.errors)\n     }\n }"}, {"sha": "18c711aeea64ce6779df4cd1c74a8e1100c80ae7", "filename": "crates/libsyntax2/tests/test/main.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd57d56aeafa1117a6163249d210f39efe8f28/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs?ref=87cd57d56aeafa1117a6163249d210f39efe8f28", "patch": "@@ -9,6 +9,8 @@ use std::{\n     fmt::Write,\n };\n \n+use libsyntax2::File;\n+\n #[test]\n fn lexer_tests() {\n     dir_tests(&[\"lexer\"], |text| {\n@@ -20,8 +22,8 @@ fn lexer_tests() {\n #[test]\n fn parser_tests() {\n     dir_tests(&[\"parser/inline\", \"parser/ok\", \"parser/err\"], |text| {\n-        let file = libsyntax2::parse(text);\n-        libsyntax2::utils::dump_tree(file.borrowed())\n+        let file = File::parse(text);\n+        libsyntax2::utils::dump_tree(file.syntax())\n     })\n }\n "}]}