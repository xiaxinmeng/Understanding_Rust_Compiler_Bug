{"sha": "9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMTE0Yjk3MDdmZDNkNmFhYTMyMjRjZDE3OTRlOGU0OWU0MzNmMzY=", "commit": {"author": {"name": "Otavio Salvador", "email": "otavio@ossystems.com.br", "date": "2020-07-11T22:28:07Z"}, "committer": {"name": "Otavio Salvador", "email": "otavio@ossystems.com.br", "date": "2020-07-11T22:30:02Z"}, "message": "infer: Add type inference support for Union types\n\nThis adds the type inference to Union types and add a small test case\nfor it, ensuring it keeps working in future.\n\nFixes: #5277\nSigned-off-by: Otavio Salvador <otavio@ossystems.com.br>", "tree": {"sha": "5fbe27386e7805717f68f77252f98d12905f9798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fbe27386e7805717f68f77252f98d12905f9798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "html_url": "https://github.com/rust-lang/rust/commit/9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d114b9707fd3d6aaa3224cd1794e8e49e433f36/comments", "author": {"login": "otavio", "id": 25278, "node_id": "MDQ6VXNlcjI1Mjc4", "avatar_url": "https://avatars.githubusercontent.com/u/25278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otavio", "html_url": "https://github.com/otavio", "followers_url": "https://api.github.com/users/otavio/followers", "following_url": "https://api.github.com/users/otavio/following{/other_user}", "gists_url": "https://api.github.com/users/otavio/gists{/gist_id}", "starred_url": "https://api.github.com/users/otavio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otavio/subscriptions", "organizations_url": "https://api.github.com/users/otavio/orgs", "repos_url": "https://api.github.com/users/otavio/repos", "events_url": "https://api.github.com/users/otavio/events{/privacy}", "received_events_url": "https://api.github.com/users/otavio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "otavio", "id": 25278, "node_id": "MDQ6VXNlcjI1Mjc4", "avatar_url": "https://avatars.githubusercontent.com/u/25278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otavio", "html_url": "https://github.com/otavio", "followers_url": "https://api.github.com/users/otavio/followers", "following_url": "https://api.github.com/users/otavio/following{/other_user}", "gists_url": "https://api.github.com/users/otavio/gists{/gist_id}", "starred_url": "https://api.github.com/users/otavio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otavio/subscriptions", "organizations_url": "https://api.github.com/users/otavio/orgs", "repos_url": "https://api.github.com/users/otavio/repos", "events_url": "https://api.github.com/users/otavio/events{/privacy}", "received_events_url": "https://api.github.com/users/otavio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02efda91d0fa856f0a2d33e9370147123c06abe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/02efda91d0fa856f0a2d33e9370147123c06abe7", "html_url": "https://github.com/rust-lang/rust/commit/02efda91d0fa856f0a2d33e9370147123c06abe7"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "bd9a387f5881c8fe235d262a506d1df2339e2b47", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9d114b9707fd3d6aaa3224cd1794e8e49e433f36/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d114b9707fd3d6aaa3224cd1794e8e49e433f36/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "patch": "@@ -405,8 +405,15 @@ impl<'a> InferenceContext<'a> {\n                                     .subst(&a_ty.parameters)\n                             })\n                         }\n-                        // FIXME:\n-                        TypeCtor::Adt(AdtId::UnionId(_)) => None,\n+                        TypeCtor::Adt(AdtId::UnionId(u)) => {\n+                            self.db.union_data(u).variant_data.field(name).map(|local_id| {\n+                                let field = FieldId { parent: u.into(), local_id };\n+                                self.write_field_resolution(tgt_expr, field);\n+                                self.db.field_types(u.into())[field.local_id]\n+                                    .clone()\n+                                    .subst(&a_ty.parameters)\n+                            })\n+                        }\n                         _ => None,\n                     },\n                     _ => None,"}, {"sha": "6d3e264af3ade6cb91a4403eb38391a7f190867a", "filename": "crates/ra_hir_ty/src/tests/simple.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9d114b9707fd3d6aaa3224cd1794e8e49e433f36/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d114b9707fd3d6aaa3224cd1794e8e49e433f36/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=9d114b9707fd3d6aaa3224cd1794e8e49e433f36", "patch": "@@ -324,6 +324,29 @@ fn test() {\n     );\n }\n \n+#[test]\n+fn infer_union() {\n+    assert_snapshot!(\n+        infer(r#\"\n+union MyUnion {\n+    foo: u32,\n+    bar: f32,\n+}\n+\n+unsafe fn baz(u: MyUnion) {\n+    let inner = u.foo;\n+}\n+\"#),\n+        @r###\"\n+    61..62 'u': MyUnion\n+    73..99 '{     ...foo; }': ()\n+    83..88 'inner': u32\n+    91..92 'u': MyUnion\n+    91..96 'u.foo': u32\n+    \"###\n+    );\n+}\n+\n #[test]\n fn infer_refs() {\n     assert_snapshot!("}]}