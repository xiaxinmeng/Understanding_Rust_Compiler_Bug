{"sha": "7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZDk1Nzk5YzJkMzFjZDdiMWFiNTczOTM2YjVlZDI2NzU3ZmQwOGM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-12-05T18:35:46Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-12-17T19:00:27Z"}, "message": "Test generic methods", "tree": {"sha": "57e66ffeb08b2e3892d8da8483ccfad9c9159d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57e66ffeb08b2e3892d8da8483ccfad9c9159d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "html_url": "https://github.com/rust-lang/rust/commit/7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dd95799c2d31cd7b1ab573936b5ed26757fd08c/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3720ea93342e02fe288eee6b5eb232c063eb0b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3720ea93342e02fe288eee6b5eb232c063eb0b9", "html_url": "https://github.com/rust-lang/rust/commit/b3720ea93342e02fe288eee6b5eb232c063eb0b9"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "0c5c6b27236947207c8c9f7621074a79dcc627d8", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dd95799c2d31cd7b1ab573936b5ed26757fd08c/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dd95799c2d31cd7b1ab573936b5ed26757fd08c/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "patch": "@@ -131,7 +131,7 @@ pub fn trans_constval<'blk, 'tcx>(bcx: common::Block<'blk, 'tcx>,\n             }\n         },\n         ConstVal::Array(id, _) | ConstVal::Repeat(id, _) => {\n-            let expr = ccx.tcx().map.expect_expr(id);\n+            let expr = bcx.tcx().map.expect_expr(id);\n             expr::trans(bcx, expr).datum.val\n         },\n         ConstVal::Function(_) => {"}, {"sha": "2da1a7587096433a3a95dab0900b1c9ef5fc9335", "filename": "src/test/run-pass/mir_refs_correct.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/7dd95799c2d31cd7b1ab573936b5ed26757fd08c/src%2Ftest%2Frun-pass%2Fmir_refs_correct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dd95799c2d31cd7b1ab573936b5ed26757fd08c/src%2Ftest%2Frun-pass%2Fmir_refs_correct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_refs_correct.rs?ref=7dd95799c2d31cd7b1ab573936b5ed26757fd08c", "patch": "@@ -25,6 +25,32 @@ trait X {\n     fn hoy2() -> u8 { 45 }\n }\n \n+trait F<U> {\n+    fn f(self, other: U) -> u64;\n+}\n+\n+impl F<u32> for u32 {\n+    fn f(self, other: u32) -> u64 { self as u64 + other as u64 }\n+}\n+\n+impl F<u64> for u32 {\n+    fn f(self, other: u64) -> u64 { self as u64 - other }\n+}\n+\n+impl F<u64> for u64 {\n+    fn f(self, other: u64) -> u64 { self * other }\n+}\n+\n+impl F<u32> for u64 {\n+    fn f(self, other: u32) -> u64 { self ^ other as u64 }\n+}\n+\n+trait T<I, O> {\n+    fn staticmeth(i: I, o: O) -> (I, O) { (i, o) }\n+}\n+\n+impl<I, O> T<I, O> for O {}\n+\n impl X for S {}\n \n enum E {\n@@ -33,6 +59,7 @@ enum E {\n \n const C: u8 = 84;\n const C2: [u8; 5] = [42; 5];\n+const C3: [u8; 3] = [42, 41, 40];\n \n fn regular() -> u8 {\n     21\n@@ -108,6 +135,11 @@ fn t13() -> [u8; 5] {\n     C2\n }\n \n+#[rustc_mir]\n+fn t13_2() -> [u8; 3] {\n+    C3\n+}\n+\n #[rustc_mir]\n fn t14() -> fn()-> u8 {\n     <S as X>::hoy2\n@@ -118,6 +150,31 @@ fn t15() -> fn(&S)-> u8 {\n     S::hey2\n }\n \n+#[rustc_mir]\n+fn t16() -> fn(u32, u32)->u64 {\n+    F::f\n+}\n+\n+#[rustc_mir]\n+fn t17() -> fn(u32, u64)->u64 {\n+    F::f\n+}\n+\n+#[rustc_mir]\n+fn t18() -> fn(u64, u64)->u64 {\n+    F::f\n+}\n+\n+#[rustc_mir]\n+fn t19() -> fn(u64, u32)->u64 {\n+    F::f\n+}\n+\n+#[rustc_mir]\n+fn t20() -> fn(u64, u32)->(u64, u32) {\n+    <u32 as T<_, _>>::staticmeth\n+}\n+\n fn main(){\n     unsafe {\n         assert_eq!(t1()(), regular());\n@@ -148,8 +205,14 @@ fn main(){\n \n         assert_eq!(t12(), C);\n         assert_eq!(t13(), C2);\n+        assert_eq!(t13_2(), C3);\n \n         assert_eq!(t14()(), <S as X>::hoy2());\n         assert_eq!(t15()(&s), S::hey2(&s));\n+        assert_eq!(t16()(10u32, 20u32), F::f(10u32, 20u32));\n+        assert_eq!(t17()(30u32, 10u64), F::f(30u32, 10u64));\n+        assert_eq!(t18()(50u64, 5u64), F::f(50u64, 5u64));\n+        assert_eq!(t19()(322u64, 2u32), F::f(322u64, 2u32));\n+        assert_eq!(t20()(123u64, 38u32), <u32 as T<_, _>>::staticmeth(123, 38));\n     }\n }"}]}