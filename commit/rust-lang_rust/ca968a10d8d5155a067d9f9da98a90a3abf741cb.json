{"sha": "ca968a10d8d5155a067d9f9da98a90a3abf741cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhOTY4YTEwZDhkNTE1NWEwNjdkOWY5ZGE5OGE5MGEzYWJmNzQxY2I=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-27T22:57:15Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T06:33:09Z"}, "message": "or-patterns: syntax: simplify `Arm.pats` and `ExprKind::Let.0`.", "tree": {"sha": "a03d1bfcc749578cc63046d15e62b89f97c40ba1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a03d1bfcc749578cc63046d15e62b89f97c40ba1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca968a10d8d5155a067d9f9da98a90a3abf741cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca968a10d8d5155a067d9f9da98a90a3abf741cb", "html_url": "https://github.com/rust-lang/rust/commit/ca968a10d8d5155a067d9f9da98a90a3abf741cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca968a10d8d5155a067d9f9da98a90a3abf741cb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbe68733875b13805f1a262288f9981d9cef4841", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe68733875b13805f1a262288f9981d9cef4841", "html_url": "https://github.com/rust-lang/rust/commit/dbe68733875b13805f1a262288f9981d9cef4841"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0eaad0d1a78e71319a55ca06bf1a6ec353a1d6b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca968a10d8d5155a067d9f9da98a90a3abf741cb/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca968a10d8d5155a067d9f9da98a90a3abf741cb/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ca968a10d8d5155a067d9f9da98a90a3abf741cb", "patch": "@@ -930,7 +930,7 @@ pub struct Local {\n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n pub struct Arm {\n     pub attrs: Vec<Attribute>,\n-    pub pats: Vec<P<Pat>>,\n+    pub pat: P<Pat>,\n     pub guard: Option<P<Expr>>,\n     pub body: P<Expr>,\n     pub span: Span,\n@@ -1148,12 +1148,12 @@ pub enum ExprKind {\n     Cast(P<Expr>, P<Ty>),\n     /// A type ascription (e.g., `42: usize`).\n     Type(P<Expr>, P<Ty>),\n-    /// A `let pats = expr` expression that is only semantically allowed in the condition\n+    /// A `let pat = expr` expression that is only semantically allowed in the condition\n     /// of `if` / `while` expressions. (e.g., `if let 0 = x { .. }`).\n     ///\n     /// The `Vec<P<Pat>>` is for or-patterns at the top level.\n     /// FIXME(54883): Change this to just `P<Pat>`.\n-    Let(Vec<P<Pat>>, P<Expr>),\n+    Let(P<Pat>, P<Expr>),\n     /// An `if` block, with an optional `else` block.\n     ///\n     /// `if expr { block } else { expr }`"}]}