{"sha": "283e5b4106771f9d6ee6e081c07d4a174b51441e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4M2U1YjQxMDY3NzFmOWQ2ZWU2ZTA4MWMwN2Q0YTE3NGI1MTQ0MWU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-02T17:19:49Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-02T17:42:54Z"}, "message": "Rename the crates in source code", "tree": {"sha": "a4bd547e926709d58f7db91e352a60869ae95763", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4bd547e926709d58f7db91e352a60869ae95763"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/283e5b4106771f9d6ee6e081c07d4a174b51441e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/283e5b4106771f9d6ee6e081c07d4a174b51441e", "html_url": "https://github.com/rust-lang/rust/commit/283e5b4106771f9d6ee6e081c07d4a174b51441e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/283e5b4106771f9d6ee6e081c07d4a174b51441e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11d951492ce68ef692c1d9a77bebde22b57cf0c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d951492ce68ef692c1d9a77bebde22b57cf0c6", "html_url": "https://github.com/rust-lang/rust/commit/11d951492ce68ef692c1d9a77bebde22b57cf0c6"}], "stats": {"total": 106, "additions": 54, "deletions": 52}, "files": [{"sha": "d71eb4fcd5c275120fa6034099fef93464f821d4", "filename": "src/librustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "1f8c68f75e943bc62d7aae4cb73c52208b34306c", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -85,7 +85,7 @@ mod path;\n \n const HIR_ID_COUNTER_LOCKED: u32 = 0xFFFFFFFF;\n \n-rustc_hir::arena_types!(::arena::declare_arena, [], 'tcx);\n+rustc_hir::arena_types!(rustc_arena::declare_arena, [], 'tcx);\n \n struct LoweringContext<'a, 'hir: 'a> {\n     crate_root: Option<Symbol>,"}, {"sha": "fdb6c359052d0b467f606b1fa2d8bc01e87f04a9", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-fmt_macros = { path = \"../librustc_parse_format\", package = \"rustc_parse_format\" }\n+rustc_parse_format = { path = \"../librustc_parse_format\" }\n log = \"0.4\"\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }"}, {"sha": "aabd5b5b5c31b31075cd5e649fb8f0470023aaf4", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -1,5 +1,3 @@\n-use fmt_macros as parse;\n-\n use rustc_ast::ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n@@ -8,6 +6,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_expand::base::{self, *};\n use rustc_parse::parser::Parser;\n+use rustc_parse_format as parse;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{InnerSpan, Span};\n "}, {"sha": "e574b076bf84c8d68ba8cd9e79e0606448c6167e", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -1,15 +1,14 @@\n use ArgumentType::*;\n use Position::*;\n \n-use fmt_macros as parse;\n-\n use rustc_ast::ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc_expand::base::{self, *};\n+use rustc_parse_format as parse;\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{MultiSpan, Span};\n "}, {"sha": "bf2ab0787cb7073bbabeebe0deb8de1dbf8047b2", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -17,7 +17,7 @@ jobserver_crate = { version = \"0.1.13\", package = \"jobserver\" }\n lazy_static = \"1\"\n once_cell = { version = \"1\", features = [\"parking_lot\"] }\n rustc_serialize = { path = \"../librustc_serialize\" }\n-graphviz = { path = \"../librustc_graphviz\", package = \"rustc_graphviz\" }\n+rustc_graphviz = { path = \"../librustc_graphviz\" }\n cfg-if = \"0.1.2\"\n crossbeam-utils = { version = \"0.7\", features = [\"nightly\"] }\n stable_deref_trait = \"1.0.0\""}, {"sha": "3a268e4b4f43224a5f60a8fbeee19feaaaa1c608", "filename": "src/librustc_data_structures/obligation_forest/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_data_structures%2Fobligation_forest%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_data_structures%2Fobligation_forest%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fgraphviz.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -1,5 +1,5 @@\n use crate::obligation_forest::{ForestObligation, ObligationForest};\n-use graphviz as dot;\n+use rustc_graphviz as dot;\n use std::env::var_os;\n use std::fs::File;\n use std::io::BufWriter;"}, {"sha": "4339092b63e85cd28da48f33e3aad538267b723d", "filename": "src/librustc_graphviz/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_graphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_graphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_graphviz%2Flib.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -40,7 +40,7 @@\n //! #![feature(rustc_private)]\n //!\n //! use std::io::Write;\n-//! use graphviz as dot;\n+//! use rustc_graphviz as dot;\n //!\n //! type Nd = isize;\n //! type Ed = (isize,isize);\n@@ -145,7 +145,7 @@\n //! #![feature(rustc_private)]\n //!\n //! use std::io::Write;\n-//! use graphviz as dot;\n+//! use rustc_graphviz as dot;\n //!\n //! type Nd = usize;\n //! type Ed<'a> = &'a (usize, usize);\n@@ -207,7 +207,7 @@\n //! #![feature(rustc_private)]\n //!\n //! use std::io::Write;\n-//! use graphviz as dot;\n+//! use rustc_graphviz as dot;\n //!\n //! type Nd<'a> = (usize, &'a str);\n //! type Ed<'a> = (Nd<'a>, Nd<'a>);"}, {"sha": "7b3030fa1d9c1a4c0a8005a4b0a87bbecd421aa5", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-graphviz = { path = \"../librustc_graphviz\", package = \"rustc_graphviz\" }\n+rustc_graphviz = { path = \"../librustc_graphviz\" }\n log = \"0.4\"\n rand = \"0.7\"\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "b1665d9e1aeb3a1aaa09d53d0721cfd13d5afb35", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -33,10 +33,10 @@\n //! fn baz() { foo(); }\n //! ```\n \n-use graphviz as dot;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n+use rustc_graphviz as dot;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};"}, {"sha": "06fc7ecf95f26bceac876f68575e4206d93de854", "filename": "src/librustc_infer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_infer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_infer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-graphviz = { path = \"../librustc_graphviz\", package = \"rustc_graphviz\" }\n+rustc_graphviz = { path = \"../librustc_graphviz\" }\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "0c22672d5fb7d90fb20371b9054519012cad23a9", "filename": "src/librustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n bitflags = \"1.2.1\"\n scoped-tls = \"1.0\"\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }"}, {"sha": "75228350c6c450888ba81d376f5d775851bafe46", "filename": "src/librustc_middle/arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -88,4 +88,4 @@ macro_rules! arena_types {\n     )\n }\n \n-arena_types!(arena::declare_arena, [], 'tcx);\n+arena_types!(rustc_arena::declare_arena, [], 'tcx);"}, {"sha": "aebce78e4018b731d4e2c926e1c76f247a6ea4f0", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n either = \"1.5.0\"\n-dot = { path = \"../librustc_graphviz\", package = \"rustc_graphviz\" }\n+rustc_graphviz = { path = \"../librustc_graphviz\" }\n itertools = \"0.8\"\n log = \"0.4\"\n log_settings = \"0.1.1\""}, {"sha": "a272e922a504e16542ca81cf6fbb1cb04edee271", "filename": "src/librustc_mir/borrow_check/region_infer/graphviz.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fgraphviz.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -7,6 +7,7 @@ use std::io::{self, Write};\n \n use super::*;\n use crate::borrow_check::constraints::OutlivesConstraint;\n+use rustc_graphviz as dot;\n \n impl<'tcx> RegionInferenceContext<'tcx> {\n     /// Write out the region constraint graph."}, {"sha": "243b3679f2984644e95eb94f0a29f7c23a672936", "filename": "src/librustc_mir/dataflow/framework/engine.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -6,6 +6,7 @@ use std::path::PathBuf;\n \n use rustc_ast::ast;\n use rustc_data_structures::work_queue::WorkQueue;\n+use rustc_graphviz as dot;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;"}, {"sha": "896616a2175ac543bb9010a3ba9238ca4bf60a3a", "filename": "src/librustc_mir/dataflow/framework/graphviz.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -3,6 +3,7 @@\n use std::cell::RefCell;\n use std::{io, ops, str};\n \n+use rustc_graphviz as dot;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "a0a82ce3b9df98748501cbc7b3bd09fdd1ceafdc", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -1,3 +1,4 @@\n+use rustc_graphviz as dot;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::Idx;\n use rustc_middle::mir::*;"}, {"sha": "401a5009e3cf7bcd20ab8e88d15677c529c4a2aa", "filename": "src/librustc_mir_build/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n log = \"0.4\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }"}, {"sha": "2de6d9fe3d480f415357f7c8b3aa314708c1ccf2", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -280,6 +280,7 @@ use rustc_index::vec::Idx;\n use super::{compare_const_vals, PatternFoldable, PatternFolder};\n use super::{FieldPat, Pat, PatKind, PatRange};\n \n+use rustc_arena::TypedArena;\n use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_errors::ErrorReported;\n use rustc_hir::def_id::DefId;\n@@ -292,8 +293,6 @@ use rustc_session::lint;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::abi::{Integer, Size, VariantIdx};\n \n-use arena::TypedArena;\n-\n use smallvec::{smallvec, SmallVec};\n use std::borrow::Cow;\n use std::cmp::{self, max, min, Ordering};"}, {"sha": "4d97a19f4086bdff11222171efcc635fe3874f4d", "filename": "src/librustc_mir_build/hair/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -3,7 +3,7 @@ use super::_match::WitnessPreference::*;\n use super::_match::{expand_pattern, is_useful, MatchCheckCtxt, Matrix, PatStack};\n use super::{PatCtxt, PatKind, PatternError};\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n use rustc_ast::ast::Mutability;\n use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;"}, {"sha": "73d50f84fe836ffeebeb17e42e209e3bfe6f485a", "filename": "src/librustc_query_system/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc-rayon-core = \"0.3.0\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "f0beec0a177262a315f5c1de65413c52b3cc3e4d", "filename": "src/librustc_query_system/query/caches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -2,7 +2,7 @@ use crate::dep_graph::DepNodeIndex;\n use crate::query::plumbing::{QueryLookup, QueryState};\n use crate::query::QueryContext;\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sharded::Sharded;\n use rustc_data_structures::sync::WorkerLocal;"}, {"sha": "fa5c557b5d9c647a94d6a6a267410c160d2f4b9d", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -14,7 +14,7 @@ doctest = false\n bitflags = \"1.2.1\"\n log = \"0.4\"\n rustc_ast = { path = \"../librustc_ast\" }\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_lowering = { path = \"../librustc_ast_lowering\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }"}, {"sha": "e67aef8f245f51790c0b49a3a57072766fa62e6c", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -19,6 +19,7 @@ pub use rustc_hir::def::{Namespace, PerNS};\n \n use Determinacy::*;\n \n+use rustc_arena::TypedArena;\n use rustc_ast::ast::{self, FloatTy, IntTy, NodeId, UintTy};\n use rustc_ast::ast::{Crate, CRATE_NODE_ID};\n use rustc_ast::ast::{ItemKind, Path};\n@@ -981,13 +982,13 @@ pub struct Resolver<'a> {\n /// Nothing really interesting here; it just provides memory for the rest of the crate.\n #[derive(Default)]\n pub struct ResolverArenas<'a> {\n-    modules: arena::TypedArena<ModuleData<'a>>,\n+    modules: TypedArena<ModuleData<'a>>,\n     local_modules: RefCell<Vec<Module<'a>>>,\n-    name_bindings: arena::TypedArena<NameBinding<'a>>,\n-    imports: arena::TypedArena<Import<'a>>,\n-    name_resolutions: arena::TypedArena<RefCell<NameResolution<'a>>>,\n-    macro_rules_bindings: arena::TypedArena<MacroRulesBinding<'a>>,\n-    ast_paths: arena::TypedArena<ast::Path>,\n+    name_bindings: TypedArena<NameBinding<'a>>,\n+    imports: TypedArena<Import<'a>>,\n+    name_resolutions: TypedArena<RefCell<NameResolution<'a>>>,\n+    macro_rules_bindings: TypedArena<MacroRulesBinding<'a>>,\n+    ast_paths: TypedArena<ast::Path>,\n }\n \n impl<'a> ResolverArenas<'a> {"}, {"sha": "2a7a774872525aafabcaf6615e6e00116ba560c7", "filename": "src/librustc_span/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_span%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_span%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -14,7 +14,7 @@ rustc_serialize = { path = \"../librustc_serialize\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_index = { path = \"../librustc_index\" }\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n scoped-tls = \"1.0\"\n unicode-width = \"0.1.4\"\n cfg-if = \"0.1.2\""}, {"sha": "d165409696ecab418e73785329d5cfbc565a9b42", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -2,7 +2,7 @@\n //! allows bidirectional lookup; i.e., given a value, one can easily find the\n //! type, and vice versa.\n \n-use arena::DroplessArena;\n+use rustc_arena::DroplessArena;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};\n use rustc_macros::{symbols, HashStable_Generic};"}, {"sha": "fd11a85a9c40692d81c617f3690c30b9be4814b9", "filename": "src/librustc_trait_selection/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_trait_selection%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_trait_selection%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-fmt_macros = { path = \"../librustc_parse_format\", package = \"rustc_parse_format\" }\n+rustc_parse_format = { path = \"../librustc_parse_format\" }\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "a1dfa838e7af3965702d69268238d6099258e353", "filename": "src/librustc_trait_selection/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -1,11 +1,10 @@\n-use fmt_macros::{ParseMode, Parser, Piece, Position};\n-\n use rustc_ast::ast::{MetaItem, NestedMetaItem};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, ErrorReported};\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n+use rustc_parse_format::{ParseMode, Parser, Piece, Position};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n "}, {"sha": "9329069c48dd1faaea58d771af81926ff15fe56a", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -11,7 +11,7 @@ test = false\n doctest = false\n \n [dependencies]\n-arena = { path = \"../librustc_arena\", package = \"rustc_arena\" }\n+rustc_arena = { path = \"../librustc_arena\" }\n log = \"0.4\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_attr = { path = \"../librustc_attr\" }"}, {"sha": "23f4e1f5346e5a701be61ef4290f7e189e73d4ab", "filename": "src/librustc_typeck/variance/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -4,6 +4,7 @@\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/variance.html\n \n use hir::Node;\n+use rustc_arena::TypedArena;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_middle::ty::query::Providers;\n@@ -31,7 +32,7 @@ pub fn provide(providers: &mut Providers<'_>) {\n \n fn crate_variances(tcx: TyCtxt<'_>, crate_num: CrateNum) -> CrateVariancesMap<'_> {\n     assert_eq!(crate_num, LOCAL_CRATE);\n-    let mut arena = arena::TypedArena::default();\n+    let mut arena = TypedArena::default();\n     let terms_cx = terms::determine_parameters_to_be_inferred(tcx, &mut arena);\n     let constraints_cx = constraints::add_constraints_from_crate(terms_cx);\n     solve::solve_constraints(constraints_cx)"}, {"sha": "6e15485756d98abd0e19b8a905785eba90b2947f", "filename": "src/librustc_typeck/variance/terms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -9,7 +9,7 @@\n // `InferredIndex` is a newtype'd int representing the index of such\n // a variable.\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::HirIdMap;"}, {"sha": "5d504ced65e335b41ea310441ea3b3ef49b2ee73", "filename": "src/test/run-make-fulldeps/save-analysis-fail/foo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-fail%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-fail%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-fail%2Ffoo.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -2,13 +2,13 @@\n #![feature(box_syntax)]\n #![feature(rustc_private)]\n \n-extern crate graphviz;\n+extern crate rustc_graphviz;\n // A simple rust project\n \n extern crate krate2;\n extern crate krate2 as krate3;\n \n-use graphviz::RenderOption;\n+use rustc_graphviz::RenderOption;\n use std::collections::{HashMap,HashSet};\n use std::cell::RefCell;\n use std::io::Write;"}, {"sha": "eb16ca93bf2788403743519b6bc6129b8f09ba08", "filename": "src/test/run-make-fulldeps/save-analysis/foo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -4,13 +4,13 @@\n #![feature(associated_type_defaults)]\n #![feature(external_doc)]\n \n-extern crate graphviz;\n+extern crate rustc_graphviz;\n // A simple rust project\n \n extern crate krate2;\n extern crate krate2 as krate3;\n \n-use graphviz::RenderOption;\n+use rustc_graphviz::RenderOption;\n use std::collections::{HashMap,HashSet};\n use std::cell::RefCell;\n use std::io::Write;"}, {"sha": "fabcd727482dcba1e7683c668216e541bd908ec4", "filename": "src/test/ui-fulldeps/dropck-tarena-cycle-checked.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -8,9 +8,9 @@\n \n #![feature(rustc_private)]\n \n-extern crate arena;\n+extern crate rustc_arena;\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n use std::cell::Cell;\n use id::Id;\n "}, {"sha": "86485a9887fbefd303ca21c17c675bf1ee124066", "filename": "src/test/ui-fulldeps/dropck-tarena-unsound-drop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -11,9 +11,9 @@\n \n #![feature(rustc_private)]\n \n-extern crate arena;\n+extern crate rustc_arena;\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n \n trait HasId { fn count(&self) -> usize; }\n "}, {"sha": "c5b9efee8e73040625a122c8704227bcda5f90f0", "filename": "src/test/ui-fulldeps/dropck_tarena_sound_drop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -12,9 +12,9 @@\n #![allow(unstable)]\n #![feature(rustc_private)]\n \n-extern crate arena;\n+extern crate rustc_arena;\n \n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n \n trait HasId { fn count(&self) -> usize; }\n "}, {"sha": "30e62723240681ea2b1d767990a02d4776c2b5a3", "filename": "src/test/ui-fulldeps/regions-mock-tcx.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -11,12 +11,12 @@\n \n #![feature(rustc_private, libc)]\n \n-extern crate arena;\n+extern crate rustc_arena;\n extern crate libc;\n \n use TypeStructure::{TypeInt, TypeFunction};\n use AstKind::{ExprInt, ExprVar, ExprLambda};\n-use arena::TypedArena;\n+use rustc_arena::TypedArena;\n use std::collections::HashMap;\n use std::mem;\n "}, {"sha": "006503b546edf8dd15f24f499578f4668bd67ae4", "filename": "src/tools/clippy/clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e5b4106771f9d6ee6e081c07d4a174b51441e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs?ref=283e5b4106771f9d6ee6e081c07d4a174b51441e", "patch": "@@ -352,7 +352,7 @@ impl Write {\n         tts: &TokenStream,\n         is_write: bool,\n     ) -> (Option<StrLit>, Option<Expr>) {\n-        use fmt_macros::{\n+        use rustc_parse_format::{\n             AlignUnknown, ArgumentImplicitlyIs, ArgumentIs, ArgumentNamed, CountImplied, FormatSpec, ParseMode, Parser,\n             Piece,\n         };"}]}