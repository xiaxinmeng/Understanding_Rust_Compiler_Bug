{"sha": "e413c96ec597f099c2cc8954f643a366f07aba75", "node_id": "C_kwDOAAsO6NoAKGU0MTNjOTZlYzU5N2YwOTljMmNjODk1NGY2NDNhMzY2ZjA3YWJhNzU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-09T10:42:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-09T10:42:24Z"}, "message": "merge rustc history", "tree": {"sha": "c4f5f16611c25f1d64ccc57b9e70072180747687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4f5f16611c25f1d64ccc57b9e70072180747687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e413c96ec597f099c2cc8954f643a366f07aba75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e413c96ec597f099c2cc8954f643a366f07aba75", "html_url": "https://github.com/rust-lang/rust/commit/e413c96ec597f099c2cc8954f643a366f07aba75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e413c96ec597f099c2cc8954f643a366f07aba75/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b30b26145791ef1953c93e8dd8a0175fd53c3ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b30b26145791ef1953c93e8dd8a0175fd53c3ac", "html_url": "https://github.com/rust-lang/rust/commit/7b30b26145791ef1953c93e8dd8a0175fd53c3ac"}, {"sha": "39375e14d7ed418478d459f98cff8c6bd4793189", "url": "https://api.github.com/repos/rust-lang/rust/commits/39375e14d7ed418478d459f98cff8c6bd4793189", "html_url": "https://github.com/rust-lang/rust/commit/39375e14d7ed418478d459f98cff8c6bd4793189"}], "stats": {"total": 49, "additions": 7, "deletions": 42}, "files": [{"sha": "d14998ccba269f46850ba3d5742ef9264c285ec8", "filename": "src/tools/miri/tests/fail/erroneous_const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const.rs?ref=e413c96ec597f099c2cc8954f643a366f07aba75", "patch": "@@ -3,7 +3,6 @@\n // Inlining changes the error location\n //@compile-flags: -Zmir-opt-level=0\n #![feature(never_type)]\n-#![warn(warnings, const_err)]\n \n struct PrintName<T>(T);\n impl<T> PrintName<T> {"}, {"sha": "9a1a970778fb4555442a2a3966ddc5d7ac0b6a6a", "filename": "src/tools/miri/tests/fail/erroneous_const2.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.rs?ref=e413c96ec597f099c2cc8954f643a366f07aba75", "patch": "@@ -1,13 +1,9 @@\n const X: u32 = 5;\n const Y: u32 = 6;\n const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n-//~^ERROR: any use of this value\n-//~|WARN: previously accepted\n+//~^ERROR: evaluation of constant value failed\n \n #[rustfmt::skip] // rustfmt bug: https://github.com/rust-lang/rustfmt/issues/5391\n fn main() {\n-    println!(\"{}\", FOO); //~ERROR: post-monomorphization error\n-    //~|ERROR: evaluation of constant value failed\n-    //~|ERROR: erroneous constant used\n-    //~|WARN: previously accepted\n+    println!(\"{}\", FOO);\n }"}, {"sha": "d41fcfd2302e57c87f00992720147757c0b236c5", "filename": "src/tools/miri/tests/fail/erroneous_const2.stderr", "status": "modified", "additions": 3, "deletions": 33, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ferroneous_const2.stderr?ref=e413c96ec597f099c2cc8954f643a366f07aba75", "patch": "@@ -1,39 +1,9 @@\n-error: any use of this value will cause an error\n-  --> $DIR/erroneous_const2.rs:LL:CC\n-   |\n-LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n-   | --------------    ^^^^^ attempt to compute `5_u32 - 6_u32`, which would overflow\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n-   = note: `#[deny(const_err)]` on by default\n-\n error[E0080]: evaluation of constant value failed\n   --> $DIR/erroneous_const2.rs:LL:CC\n    |\n-LL |     println!(\"{}\", FOO);\n-   |                    ^^^ referenced constant has errors\n-\n-error: erroneous constant used\n-  --> $DIR/erroneous_const2.rs:LL:CC\n-   |\n-LL |     println!(\"{}\", FOO);\n-   |                    ^^^ referenced constant has errors\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n-   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: post-monomorphization error: referenced constant has errors\n-  --> $DIR/erroneous_const2.rs:LL:CC\n-   |\n-LL |     println!(\"{}\", FOO);\n-   |                    ^^^ referenced constant has errors\n-   |\n-   = note: inside `main` at $DIR/erroneous_const2.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n+   |                   ^^^^^ attempt to compute `5_u32 - 6_u32`, which would overflow\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "47d1f782cb6ce0365a9846327bc8654839599393", "filename": "src/tools/miri/tests/fail/unaligned_pointers/unaligned_ptr1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr1.rs?ref=e413c96ec597f099c2cc8954f643a366f07aba75", "patch": "@@ -3,7 +3,7 @@\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let x = [2u16, 3, 4]; // Make it big enough so we don't get an out-of-bounds error.\n         let x = &x[0] as *const _ as *const u32;\n         // This must fail because alignment is violated: the allocation's base is not sufficiently aligned."}, {"sha": "f1032ab52bc7cda08d0c5ff46bbb43e079ad2d70", "filename": "src/tools/miri/tests/fail/unaligned_pointers/unaligned_ptr_addr_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_addr_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e413c96ec597f099c2cc8954f643a366f07aba75/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_addr_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_addr_of.rs?ref=e413c96ec597f099c2cc8954f643a366f07aba75", "patch": "@@ -4,7 +4,7 @@ use std::ptr;\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let x = [2u16, 3, 4]; // Make it big enough so we don't get an out-of-bounds error.\n         let x = &x[0] as *const _ as *const u32;\n         // This must fail because alignment is violated: the allocation's base is not sufficiently aligned."}]}