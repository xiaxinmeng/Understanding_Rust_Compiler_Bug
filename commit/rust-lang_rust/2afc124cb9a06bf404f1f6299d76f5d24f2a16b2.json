{"sha": "2afc124cb9a06bf404f1f6299d76f5d24f2a16b2", "node_id": "C_kwDOAAsO6NoAKDJhZmMxMjRjYjlhMDZiZjQwNGYxZjYyOTlkNzZmNWQyNGYyYTE2YjI", "commit": {"author": {"name": "AmrDeveloper", "email": "amr96@programmer.net", "date": "2023-04-09T21:44:31Z"}, "committer": {"name": "AmrDeveloper", "email": "amr96@programmer.net", "date": "2023-04-09T21:44:31Z"}, "message": "Fix allow extracting function from single brace of block expression", "tree": {"sha": "0ce3056be957d42bacc0d1339599cd6c0f9a22ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ce3056be957d42bacc0d1339599cd6c0f9a22ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2", "html_url": "https://github.com/rust-lang/rust/commit/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2/comments", "author": {"login": "AmrDeveloper", "id": 23631699, "node_id": "MDQ6VXNlcjIzNjMxNjk5", "avatar_url": "https://avatars.githubusercontent.com/u/23631699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmrDeveloper", "html_url": "https://github.com/AmrDeveloper", "followers_url": "https://api.github.com/users/AmrDeveloper/followers", "following_url": "https://api.github.com/users/AmrDeveloper/following{/other_user}", "gists_url": "https://api.github.com/users/AmrDeveloper/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmrDeveloper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmrDeveloper/subscriptions", "organizations_url": "https://api.github.com/users/AmrDeveloper/orgs", "repos_url": "https://api.github.com/users/AmrDeveloper/repos", "events_url": "https://api.github.com/users/AmrDeveloper/events{/privacy}", "received_events_url": "https://api.github.com/users/AmrDeveloper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AmrDeveloper", "id": 23631699, "node_id": "MDQ6VXNlcjIzNjMxNjk5", "avatar_url": "https://avatars.githubusercontent.com/u/23631699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmrDeveloper", "html_url": "https://github.com/AmrDeveloper", "followers_url": "https://api.github.com/users/AmrDeveloper/followers", "following_url": "https://api.github.com/users/AmrDeveloper/following{/other_user}", "gists_url": "https://api.github.com/users/AmrDeveloper/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmrDeveloper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmrDeveloper/subscriptions", "organizations_url": "https://api.github.com/users/AmrDeveloper/orgs", "repos_url": "https://api.github.com/users/AmrDeveloper/repos", "events_url": "https://api.github.com/users/AmrDeveloper/events{/privacy}", "received_events_url": "https://api.github.com/users/AmrDeveloper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d5862caf428c9e160ccf28d684f0a33faccd7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d5862caf428c9e160ccf28d684f0a33faccd7d", "html_url": "https://github.com/rust-lang/rust/commit/51d5862caf428c9e160ccf28d684f0a33faccd7d"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "ced1aec7f84ba18b4d4ee247fe13c0cc6bfe2468", "filename": "crates/ide-assists/src/handlers/extract_function.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afc124cb9a06bf404f1f6299d76f5d24f2a16b2/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=2afc124cb9a06bf404f1f6299d76f5d24f2a16b2", "patch": "@@ -70,6 +70,11 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext<'_>) -> Op\n     }\n \n     let node = ctx.covering_element();\n+    if node.kind() == SyntaxKind::L_CURLY || node.kind() == SyntaxKind::R_CURLY {\n+        cov_mark::hit!(extract_function_in_curly_bracket_is_not_applicable);\n+        return None;\n+    }\n+\n     if node.kind() == COMMENT {\n         cov_mark::hit!(extract_function_in_comment_is_not_applicable);\n         return None;\n@@ -5800,4 +5805,16 @@ fn $0fun_name() -> ControlFlow<()> {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn in_left_curly_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_curly_bracket_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo() { $0}$0 \");\n+    }\n+\n+    #[test]\n+    fn in_right_curly_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_curly_bracket_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo() $0{$0 } \");\n+    }\n }"}]}