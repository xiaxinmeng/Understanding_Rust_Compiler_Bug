{"sha": "ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMTIwMmY2YjNkZmM2MzRlZDY1MWUxYjFmMDk5NGI2MTNmN2E4NWM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-21T03:59:14Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-23T00:15:48Z"}, "message": "test fallout", "tree": {"sha": "d3a7de2f3598cf93c5f52b8f525b766987a9bdc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3a7de2f3598cf93c5f52b8f525b766987a9bdc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "html_url": "https://github.com/rust-lang/rust/commit/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bbdb0355e98978c5f57bd92fda6526762395558", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bbdb0355e98978c5f57bd92fda6526762395558", "html_url": "https://github.com/rust-lang/rust/commit/3bbdb0355e98978c5f57bd92fda6526762395558"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "cf476edf7ca5e7c02da0903a1e27800956d41c9b", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -99,8 +99,8 @@ fn format_crate(verbosity: Verbosity) -> Result<ExitStatus, std::io::Error> {\n     let files: Vec<_> = targets.into_iter()\n         .filter(|t| t.kind.should_format())\n         .inspect(|t| if verbosity == Verbosity::Verbose {\n-            println!(\"[{:?}] {:?}\", t.kind, t.path)\n-        })\n+                     println!(\"[{:?}] {:?}\", t.kind, t.path)\n+                 })\n         .map(|t| t.path)\n         .collect();\n "}, {"sha": "de12252df0e418665144267279f1094880a6dd46", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -348,16 +348,16 @@ fn determine_operation(matches: &Matches) -> FmtResult<Operation> {\n         try!(io::stdin().read_to_string(&mut buffer));\n \n         return Ok(Operation::Stdin {\n-            input: buffer,\n-            config_path: config_path,\n-        });\n+                      input: buffer,\n+                      config_path: config_path,\n+                  });\n     }\n \n     // We append files from `--file-lines` later in `execute()`.\n     let files: Vec<_> = matches.free.iter().map(PathBuf::from).collect();\n \n     Ok(Operation::Format {\n-        files: files,\n-        config_path: config_path,\n-    })\n+           files: files,\n+           config_path: config_path,\n+       })\n }"}, {"sha": "9a3c329d1c4b3816f56f8541eb09defdf21e3931", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -76,7 +76,7 @@\n ///     .qux\n /// ```\n \n-use {Indent, Shape};\n+use Shape;\n use rewrite::{Rewrite, RewriteContext};\n use utils::{wrap_str, first_line_width};\n use expr::rewrite_call;"}, {"sha": "7651d543e93134a264ba3ab815b7b347c5ee8c3c", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -1235,7 +1235,7 @@ impl Rewrite for ast::Arm {\n \n         let pats_str = format!(\"{}{}\", pats_str, guard_str);\n         // Where the next text can start.\n-        let mut line_start = trimmed_last_line_width(&pats_str);\n+        let line_start = trimmed_last_line_width(&pats_str);\n \n         let body = match body.node {\n             ast::ExprKind::Block(ref block) if !is_unsafe_block(block) &&"}, {"sha": "a0a8eefa27728b78e3e9e166aac9fdfa1164805a", "filename": "tests/system.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -212,9 +212,9 @@ fn read_config(filename: &str) -> Config {\n         get_config(sig_comments.get(\"config\").map(|x| &(*x)[..]))\n     } else {\n         get_config(Path::new(filename)\n-            .with_extension(\"toml\")\n-            .file_name()\n-            .and_then(std::ffi::OsStr::to_str))\n+                       .with_extension(\"toml\")\n+                       .file_name()\n+                       .and_then(std::ffi::OsStr::to_str))\n     };\n \n     for (key, val) in &sig_comments {"}, {"sha": "025afa4c38afb62537832054e0746f26320f59e7", "filename": "tests/target/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1202f6b3dfc634ed651e1b1f0994b613f7a85c/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=ba1202f6b3dfc634ed651e1b1f0994b613f7a85c", "patch": "@@ -223,9 +223,9 @@ fn casts() {\n \n fn indices() {\n     let x = (aaaaaaaaaaaaaaaaaaaaaaaaaaaa + bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb + cccccccccccccccc)\n-                [x + y + z];\n+        [x + y + z];\n     let y = (aaaaaaaaaaaaaaaaaaaaaaaaaaaa + bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb + cccccccccccccccc)\n-                [xxxxx + yyyyy + zzzzz];\n+        [xxxxx + yyyyy + zzzzz];\n }\n \n fn repeats() {\n@@ -292,6 +292,6 @@ fn issue1106() {\n     }\n \n     for entry in WalkDir::new(path)\n-        .into_iter()\n-        .filter_entry(|entry| exclusions.filter_entry(entry)) {}\n+            .into_iter()\n+            .filter_entry(|entry| exclusions.filter_entry(entry)) {}\n }"}]}