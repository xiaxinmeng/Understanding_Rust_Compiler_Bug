{"sha": "1ca1de6b26ec4740e3f0e8bead7002589024bd14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYTFkZTZiMjZlYzQ3NDBlM2YwZThiZWFkNzAwMjU4OTAyNGJkMTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-04T00:41:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-04T00:41:08Z"}, "message": "Auto merge of #36124 - eddyb:fast-array-init, r=alexcrichton\n\nFix optimization regressions for operations on [x; n]-initialized arrays.\n\nFixes #35662 by using `!=` instead of `<` as the stop condition for `[x; n]` initialization loops.\nAlso included is https://github.com/eddyb/llvm/commit/cc2009f02d3b9a3c05be939978212e832310b3d6, a hack to run the GVN pass twice, another time after InstCombine.\nThis hack results in removal of redundant `memset` and `memcpy` calls (from loops over arrays).\n\ncc @nrc Can we get performance numbers on this? Not sure if it regresses anything else.", "tree": {"sha": "0354a4cf3e8befbd39dda472a6e57b0efc3c856b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0354a4cf3e8befbd39dda472a6e57b0efc3c856b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca1de6b26ec4740e3f0e8bead7002589024bd14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca1de6b26ec4740e3f0e8bead7002589024bd14", "html_url": "https://github.com/rust-lang/rust/commit/1ca1de6b26ec4740e3f0e8bead7002589024bd14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca1de6b26ec4740e3f0e8bead7002589024bd14/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70598e04f922a0f451f63cec4134bd28b31c6411", "url": "https://api.github.com/repos/rust-lang/rust/commits/70598e04f922a0f451f63cec4134bd28b31c6411", "html_url": "https://github.com/rust-lang/rust/commit/70598e04f922a0f451f63cec4134bd28b31c6411"}, {"sha": "f5c775274275fa34b068ddf802bd528f790f7af8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c775274275fa34b068ddf802bd528f790f7af8", "html_url": "https://github.com/rust-lang/rust/commit/f5c775274275fa34b068ddf802bd528f790f7af8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cf897fc5a151877673768c4fd24d42cb2c652a11", "filename": "src/librustc_trans/tvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ca1de6b26ec4740e3f0e8bead7002589024bd14/src%2Flibrustc_trans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca1de6b26ec4740e3f0e8bead7002589024bd14/src%2Flibrustc_trans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftvec.rs?ref=1ca1de6b26ec4740e3f0e8bead7002589024bd14", "patch": "@@ -52,7 +52,7 @@ pub fn slice_for_each<'blk, 'tcx, F>(bcx: Block<'blk, 'tcx>,\n     let current = Phi(header_bcx, val_ty(start), &[start], &[bcx.llbb]);\n \n     let keep_going =\n-        ICmp(header_bcx, llvm::IntULT, current, end, DebugLoc::None);\n+        ICmp(header_bcx, llvm::IntNE, current, end, DebugLoc::None);\n     CondBr(header_bcx, keep_going, body_bcx.llbb, next_bcx.llbb, DebugLoc::None);\n \n     let body_bcx = f(body_bcx, if zst { data_ptr } else { current });"}, {"sha": "16b79d01fd6d942cf3c9120b92df56b13ec92665", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=1ca1de6b26ec4740e3f0e8bead7002589024bd14", "patch": "@@ -1 +1 @@\n-Subproject commit eee68eafa7e8e4ce996b49f5551636639a6c331a\n+Subproject commit 16b79d01fd6d942cf3c9120b92df56b13ec92665"}, {"sha": "1080070d21a3bf5bda4e398e12f6f2a5452f6cfd", "filename": "src/rustllvm/llvm-auto-clean-trigger", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ca1de6b26ec4740e3f0e8bead7002589024bd14/src%2Frustllvm%2Fllvm-auto-clean-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/1ca1de6b26ec4740e3f0e8bead7002589024bd14/src%2Frustllvm%2Fllvm-auto-clean-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-auto-clean-trigger?ref=1ca1de6b26ec4740e3f0e8bead7002589024bd14", "patch": "@@ -1,4 +1,4 @@\n # If this file is modified, then llvm will be forcibly cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n-2016-08-23\n+2016-08-30"}]}