{"sha": "d1a50ffb7c332677f3c613540d507114c83e0f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTUwZmZiN2MzMzI2NzdmM2M2MTM1NDBkNTA3MTE0YzgzZTBmODY=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-22T17:34:00Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-11-29T21:29:19Z"}, "message": "Rename the `overlapping_patterns` lint to `overlapping_range_endpoints`", "tree": {"sha": "0c1a372d457adc9aeb035f79bdcfc2223e792363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c1a372d457adc9aeb035f79bdcfc2223e792363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a50ffb7c332677f3c613540d507114c83e0f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a50ffb7c332677f3c613540d507114c83e0f86", "html_url": "https://github.com/rust-lang/rust/commit/d1a50ffb7c332677f3c613540d507114c83e0f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a50ffb7c332677f3c613540d507114c83e0f86/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06ca6bba8dd21fe3330b2212a34c6bf244300486", "url": "https://api.github.com/repos/rust-lang/rust/commits/06ca6bba8dd21fe3330b2212a34c6bf244300486", "html_url": "https://github.com/rust-lang/rust/commit/06ca6bba8dd21fe3330b2212a34c6bf244300486"}], "stats": {"total": 103, "additions": 52, "deletions": 51}, "files": [{"sha": "d5e77843b92dfafdaa92ea21b8a811a6ac07192e", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -283,7 +283,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n         UNUSED_MUT,\n         UNREACHABLE_CODE,\n         UNREACHABLE_PATTERNS,\n-        OVERLAPPING_PATTERNS,\n+        OVERLAPPING_RANGE_ENDPOINTS,\n         UNUSED_MUST_USE,\n         UNUSED_UNSAFE,\n         PATH_STATEMENTS,\n@@ -335,6 +335,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     store.register_renamed(\"exceeding_bitshifts\", \"arithmetic_overflow\");\n     store.register_renamed(\"redundant_semicolon\", \"redundant_semicolons\");\n     store.register_renamed(\"intra_doc_link_resolution_failure\", \"broken_intra_doc_links\");\n+    store.register_renamed(\"overlapping_patterns\", \"overlapping_range_endpoints\");\n     store.register_removed(\"unknown_features\", \"replaced by an error\");\n     store.register_removed(\"unsigned_negation\", \"replaced by negate_unsigned feature gate\");\n     store.register_removed(\"negate_unsigned\", \"cast a signed value instead\");"}, {"sha": "20ea7377e3ffc61e27ab0d19e8626cbba13a0ef6", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -588,8 +588,8 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `overlapping_patterns` lint detects `match` arms that have\n-    /// [range patterns] that overlap.\n+    /// The `overlapping_range_endpoints` lint detects `match` arms that have [range patterns] that\n+    /// overlap on their endpoints.\n     ///\n     /// [range patterns]: https://doc.rust-lang.org/nightly/reference/patterns.html#range-patterns\n     ///\n@@ -607,13 +607,12 @@ declare_lint! {\n     ///\n     /// ### Explanation\n     ///\n-    /// It is likely a mistake to have range patterns in a match expression\n-    /// that overlap. Check that the beginning and end values are what you\n-    /// expect, and keep in mind that with `..=` the left and right bounds are\n-    /// inclusive.\n-    pub OVERLAPPING_PATTERNS,\n+    /// It is likely a mistake to have range patterns in a match expression that overlap in this\n+    /// way. Check that the beginning and end values are what you expect, and keep in mind that\n+    /// with `..=` the left and right bounds are inclusive.\n+    pub OVERLAPPING_RANGE_ENDPOINTS,\n     Warn,\n-    \"detects overlapping patterns\"\n+    \"detects range patterns with overlapping endpoints\"\n }\n \n declare_lint! {\n@@ -2765,7 +2764,7 @@ declare_lint_pass! {\n         DEAD_CODE,\n         UNREACHABLE_CODE,\n         UNREACHABLE_PATTERNS,\n-        OVERLAPPING_PATTERNS,\n+        OVERLAPPING_RANGE_ENDPOINTS,\n         BINDINGS_WITH_VARIANT_NAME,\n         UNUSED_MACROS,\n         WARNINGS,"}, {"sha": "34cb9ff1cc5fc0d9ae20dd929f677b11b56b757a", "filename": "compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -273,7 +273,7 @@ impl IntRange {\n         let mut borders: Vec<_> = row_borders.chain(self_borders).collect();\n         borders.sort_unstable();\n \n-        self.lint_overlapping_patterns(pcx, hir_id, overlaps);\n+        self.lint_overlapping_range_endpoints(pcx, hir_id, overlaps);\n \n         // We're going to iterate through every adjacent pair of borders, making sure that\n         // each represents an interval of nonnegative length, and convert each such\n@@ -296,30 +296,31 @@ impl IntRange {\n             .collect()\n     }\n \n-    fn lint_overlapping_patterns(\n+    fn lint_overlapping_range_endpoints(\n         &self,\n         pcx: PatCtxt<'_, '_, '_>,\n         hir_id: Option<HirId>,\n         overlaps: Vec<(IntRange, Span)>,\n     ) {\n         if let (true, Some(hir_id)) = (!overlaps.is_empty(), hir_id) {\n             pcx.cx.tcx.struct_span_lint_hir(\n-                lint::builtin::OVERLAPPING_PATTERNS,\n+                lint::builtin::OVERLAPPING_RANGE_ENDPOINTS,\n                 hir_id,\n                 pcx.span,\n                 |lint| {\n-                    let mut err = lint.build(\"multiple patterns covering the same range\");\n-                    err.span_label(pcx.span, \"overlapping patterns\");\n+                    let mut err = lint.build(\"multiple patterns overlap on their endpoints\");\n+                    err.span_label(pcx.span, \"overlapping range endpoints\");\n                     for (int_range, span) in overlaps {\n                         // Use the real type for user display of the ranges:\n                         err.span_label(\n                             span,\n                             &format!(\n                                 \"this range overlaps on `{}`\",\n-                                int_range.to_pat(pcx.cx.tcx, pcx.ty),\n+                                int_range.to_pat(pcx.cx.tcx, pcx.ty)\n                             ),\n                         );\n                     }\n+                    // FIXME: add note\n                     err.emit();\n                 },\n             );"}, {"sha": "b028fcae0775bca8a33ef8459995b3ffe09e2f20", "filename": "src/test/ui/issues/issue-21475.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fissues%2Fissue-21475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fissues%2Fissue-21475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21475.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-#![allow(unused_imports, overlapping_patterns)]\n+#![allow(unused_imports, overlapping_range_endpoints)]\n // pretty-expanded FIXME #23616\n \n use m::{START, END};"}, {"sha": "a3e26a41232c7b382d9545dc33a92949c73ed539", "filename": "src/test/ui/issues/issue-26251.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fissues%2Fissue-26251.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fissues%2Fissue-26251.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26251.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-#![allow(overlapping_patterns)]\n+#![allow(overlapping_range_endpoints)]\n \n fn main() {\n     let x = 'a';"}, {"sha": "6ad87d873ee6e757656824f7abed38f25c11a3bc", "filename": "src/test/ui/pattern/usefulness/integer-ranges/overlapping_range_endpoints.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.rs?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -1,5 +1,5 @@\n #![feature(exclusive_range_pattern)]\n-#![deny(overlapping_patterns)]\n+#![deny(overlapping_range_endpoints)]\n \n macro_rules! m {\n     ($s:expr, $t1:pat, $t2:pat) => {\n@@ -12,31 +12,31 @@ macro_rules! m {\n }\n \n fn main() {\n-    m!(0u8, 20..=30, 30..=40); //~ ERROR multiple patterns covering the same range\n-    m!(0u8, 30..=40, 20..=30); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 20..=30, 30..=40); //~ ERROR multiple patterns overlap on their endpoints\n+    m!(0u8, 30..=40, 20..=30); //~ ERROR multiple patterns overlap on their endpoints\n     m!(0u8, 20..=30, 31..=40);\n     m!(0u8, 20..=30, 29..=40);\n-    m!(0u8, 20.. 30, 29..=40); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 20.. 30, 29..=40); //~ ERROR multiple patterns overlap on their endpoints\n     m!(0u8, 20.. 30, 28..=40);\n     m!(0u8, 20.. 30, 30..=40);\n     m!(0u8, 20..=30, 30..=30);\n-    m!(0u8, 20..=30, 30..=31); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 20..=30, 30..=31); //~ ERROR multiple patterns overlap on their endpoints\n     m!(0u8, 20..=30, 29..=30);\n     m!(0u8, 20..=30, 20..=20);\n     m!(0u8, 20..=30, 20..=21);\n-    m!(0u8, 20..=30, 19..=20); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 20..=30, 19..=20); //~ ERROR multiple patterns overlap on their endpoints\n     m!(0u8, 20..=30, 20);\n     m!(0u8, 20..=30, 25);\n     m!(0u8, 20..=30, 30);\n     m!(0u8, 20.. 30, 29);\n-    m!(0u8, 20, 20..=30); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 20, 20..=30); //~ ERROR multiple patterns overlap on their endpoints\n     m!(0u8, 25, 20..=30);\n-    m!(0u8, 30, 20..=30); //~ ERROR multiple patterns covering the same range\n+    m!(0u8, 30, 20..=30); //~ ERROR multiple patterns overlap on their endpoints\n \n     match 0u8 {\n         0..=10 => {}\n         20..=30 => {}\n-        10..=20 => {} //~ ERROR multiple patterns covering the same range\n+        10..=20 => {} //~ ERROR multiple patterns overlap on their endpoints\n         _ => {}\n     }\n     match (0u8, true) {\n@@ -47,13 +47,13 @@ fn main() {\n     }\n     match (true, 0u8) {\n         (true, 0..=10) => {}\n-        (true, 10..20) => {} //~ ERROR multiple patterns covering the same range\n+        (true, 10..20) => {} //~ ERROR multiple patterns overlap on their endpoints\n         (false, 10..20) => {}\n         _ => {}\n     }\n     match Some(0u8) {\n         Some(0..=10) => {}\n-        Some(10..20) => {} //~ ERROR multiple patterns covering the same range\n+        Some(10..20) => {} //~ ERROR multiple patterns overlap on their endpoints\n         _ => {}\n     }\n }"}, {"sha": "56995421f2ba30a7994bf18acb32ac6340467afd", "filename": "src/test/ui/pattern/usefulness/integer-ranges/overlapping_range_endpoints.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1a50ffb7c332677f3c613540d507114c83e0f86/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Finteger-ranges%2Foverlapping_range_endpoints.stderr?ref=d1a50ffb7c332677f3c613540d507114c83e0f86", "patch": "@@ -1,90 +1,90 @@\n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:15:22\n    |\n LL |     m!(0u8, 20..=30, 30..=40);\n-   |             -------  ^^^^^^^ overlapping patterns\n+   |             -------  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `30_u8`\n    |\n note: the lint level is defined here\n   --> $DIR/overlapping_range_endpoints.rs:2:9\n    |\n-LL | #![deny(overlapping_patterns)]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(overlapping_range_endpoints)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:16:22\n    |\n LL |     m!(0u8, 30..=40, 20..=30);\n-   |             -------  ^^^^^^^ overlapping patterns\n+   |             -------  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `30_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:19:22\n    |\n LL |     m!(0u8, 20.. 30, 29..=40);\n-   |             -------  ^^^^^^^ overlapping patterns\n+   |             -------  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `29_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:23:22\n    |\n LL |     m!(0u8, 20..=30, 30..=31);\n-   |             -------  ^^^^^^^ overlapping patterns\n+   |             -------  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `30_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:27:22\n    |\n LL |     m!(0u8, 20..=30, 19..=20);\n-   |             -------  ^^^^^^^ overlapping patterns\n+   |             -------  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `20_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:32:17\n    |\n LL |     m!(0u8, 20, 20..=30);\n-   |             --  ^^^^^^^ overlapping patterns\n+   |             --  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `20_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:34:17\n    |\n LL |     m!(0u8, 30, 20..=30);\n-   |             --  ^^^^^^^ overlapping patterns\n+   |             --  ^^^^^^^ overlapping range endpoints\n    |             |\n    |             this range overlaps on `30_u8`\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:39:9\n    |\n LL |         0..=10 => {}\n    |         ------ this range overlaps on `10_u8`\n LL |         20..=30 => {}\n    |         ------- this range overlaps on `20_u8`\n LL |         10..=20 => {}\n-   |         ^^^^^^^ overlapping patterns\n+   |         ^^^^^^^ overlapping range endpoints\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:50:16\n    |\n LL |         (true, 0..=10) => {}\n    |                ------ this range overlaps on `10_u8`\n LL |         (true, 10..20) => {}\n-   |                ^^^^^^ overlapping patterns\n+   |                ^^^^^^ overlapping range endpoints\n \n-error: multiple patterns covering the same range\n+error: multiple patterns overlap on their endpoints\n   --> $DIR/overlapping_range_endpoints.rs:56:14\n    |\n LL |         Some(0..=10) => {}\n    |              ------ this range overlaps on `10_u8`\n LL |         Some(10..20) => {}\n-   |              ^^^^^^ overlapping patterns\n+   |              ^^^^^^ overlapping range endpoints\n \n error: aborting due to 10 previous errors\n "}]}