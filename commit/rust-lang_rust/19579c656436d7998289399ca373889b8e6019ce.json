{"sha": "19579c656436d7998289399ca373889b8e6019ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTc5YzY1NjQzNmQ3OTk4Mjg5Mzk5Y2EzNzM4ODliOGU2MDE5Y2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-03T02:31:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-03T02:31:44Z"}, "message": "Auto merge of #84834 - GuillaumeGomez:sidebar-unification, r=jsha\n\nSidebar unification\n\nThis PR does a few things:\n * Put crates list at all levels (before, it was only on the \"top\" items)\n * Fix bug in module sidebar: the list of items was from the parent module.\n\nThe other changes (on bootstrap mostly) were to allow to generate multiple crates in a same folder so that we can ensure that clicking on the crates in the sidebar works as expected.\n\nI added a rustdoc-gui test to ensure everything is where it should be.\n\nr? `@jyn514`", "tree": {"sha": "b0b92b02d7302080625bb47fe6d09d3802488d52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0b92b02d7302080625bb47fe6d09d3802488d52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19579c656436d7998289399ca373889b8e6019ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19579c656436d7998289399ca373889b8e6019ce", "html_url": "https://github.com/rust-lang/rust/commit/19579c656436d7998289399ca373889b8e6019ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19579c656436d7998289399ca373889b8e6019ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da865095cf378fbfd07145c25fe5837ea091efeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/da865095cf378fbfd07145c25fe5837ea091efeb", "html_url": "https://github.com/rust-lang/rust/commit/da865095cf378fbfd07145c25fe5837ea091efeb"}, {"sha": "9b637fa72e4d6a3aebcbf92cc4e18b94a7bf31b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b637fa72e4d6a3aebcbf92cc4e18b94a7bf31b7", "html_url": "https://github.com/rust-lang/rust/commit/9b637fa72e4d6a3aebcbf92cc4e18b94a7bf31b7"}], "stats": {"total": 272, "additions": 173, "deletions": 99}, "files": [{"sha": "3ae516bd6df7c0ccbbe0660ef34a76eab4d1e854", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -526,7 +526,6 @@ impl Item {\n     crate fn is_crate(&self) -> bool {\n         self.is_mod() && self.def_id.as_real().map_or(false, |did| did.index == CRATE_DEF_INDEX)\n     }\n-\n     crate fn is_mod(&self) -> bool {\n         self.type_() == ItemType::Module\n     }"}, {"sha": "429863f3635a8b55838ebf360adada4734d24591", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -119,7 +119,7 @@ crate fn render<T: Print, S: Print>(\n     {after_content}\\\n     <div id=\\\"rustdoc-vars\\\" data-root-path=\\\"{root_path}\\\" data-current-crate=\\\"{krate}\\\" \\\n        data-search-index-js=\\\"{root_path}search-index{suffix}.js\\\" \\\n-       data-search-js=\\\"{static_root_path}search{suffix}.js\\\"></div>\n+       data-search-js=\\\"{static_root_path}search{suffix}.js\\\"></div>\\\n     <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n     {extra_scripts}\\\n </body>\\"}, {"sha": "d80b2db00ac8ed8ff6d3429130cdf8bfde7f5e8e", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -200,8 +200,15 @@ impl<'tcx> Context<'tcx> {\n             )\n         };\n         let keywords = make_item_keywords(it);\n+        let name;\n+        let tyname_s = if it.is_crate() {\n+            name = format!(\"{} crate\", tyname);\n+            name.as_str()\n+        } else {\n+            tyname.as_str()\n+        };\n         let page = layout::Page {\n-            css_class: tyname.as_str(),\n+            css_class: tyname_s,\n             root_path: &self.root_path(),\n             static_root_path: self.shared.static_root_path.as_deref(),\n             title: &title,"}, {"sha": "10f5184e39a676e6a3420fef07a147c89cd21aae", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 30, "deletions": 37, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -1713,7 +1713,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n                 \"<div class=\\\"block version\\\">\\\n                      <p>Version {}</p>\\\n                  </div>\",\n-                Escape(version)\n+                Escape(version),\n             );\n         }\n     }\n@@ -1723,9 +1723,10 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         write!(\n             buffer,\n             \"<a id=\\\"all-types\\\" href=\\\"all.html\\\"><p>See all {}'s items</p></a>\",\n-            it.name.as_ref().expect(\"crates always have a name\")\n+            it.name.as_ref().expect(\"crates always have a name\"),\n         );\n     }\n+\n     match *it.kind {\n         clean::StructItem(ref s) => sidebar_struct(cx, buffer, it, s),\n         clean::TraitItem(ref t) => sidebar_trait(cx, buffer, it, t),\n@@ -1735,7 +1736,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         clean::TypedefItem(_, _) => sidebar_typedef(cx, buffer, it),\n         clean::ModuleItem(ref m) => sidebar_module(buffer, &m.items),\n         clean::ForeignTypeItem => sidebar_foreign_type(cx, buffer, it),\n-        _ => (),\n+        _ => {}\n     }\n \n     // The sidebar is designed to display sibling functions, modules and\n@@ -1746,22 +1747,24 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     // as much HTML as possible in order to allow non-JS-enabled browsers\n     // to navigate the documentation (though slightly inefficiently).\n \n-    buffer.write_str(\"<p class=\\\"location\\\">\");\n-    for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n-        if i > 0 {\n-            buffer.write_str(\"::<wbr>\");\n+    if !it.is_mod() {\n+        buffer.write_str(\"<p class=\\\"location\\\">Other items in<br>\");\n+        for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n+            if i > 0 {\n+                buffer.write_str(\"::<wbr>\");\n+            }\n+            write!(\n+                buffer,\n+                \"<a href=\\\"{}index.html\\\">{}</a>\",\n+                &cx.root_path()[..(cx.current.len() - i - 1) * 3],\n+                *name\n+            );\n         }\n-        write!(\n-            buffer,\n-            \"<a href=\\\"{}index.html\\\">{}</a>\",\n-            &cx.root_path()[..(cx.current.len() - i - 1) * 3],\n-            *name\n-        );\n+        buffer.write_str(\"</p>\");\n     }\n-    buffer.write_str(\"</p>\");\n \n     // Sidebar refers to the enclosing module, not this module.\n-    let relpath = if it.is_mod() { \"../\" } else { \"\" };\n+    let relpath = if it.is_mod() && parentlen != 0 { \"./\" } else { \"\" };\n     write!(\n         buffer,\n         \"<div id=\\\"sidebar-vars\\\" data-name=\\\"{name}\\\" data-ty=\\\"{ty}\\\" data-relpath=\\\"{path}\\\">\\\n@@ -1770,17 +1773,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         ty = it.type_(),\n         path = relpath\n     );\n-\n-    if parentlen == 0 {\n-        write!(\n-            buffer,\n-            \"<script defer src=\\\"{}sidebar-items{}.js\\\"></script>\",\n-            relpath, cx.shared.resource_suffix\n-        );\n-    } else {\n-        write!(buffer, \"<script defer src=\\\"{}sidebar-items.js\\\"></script>\", relpath);\n-    }\n-\n+    write!(buffer, \"<script defer src=\\\"{}sidebar-items.js\\\"></script>\", relpath);\n     // Closes sidebar-elems div.\n     buffer.write_str(\"</div>\");\n }\n@@ -2288,8 +2281,8 @@ fn sidebar_enum(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, e: &clean:\n     }\n }\n \n-fn item_ty_to_strs(ty: &ItemType) -> (&'static str, &'static str) {\n-    match *ty {\n+fn item_ty_to_strs(ty: ItemType) -> (&'static str, &'static str) {\n+    match ty {\n         ItemType::ExternCrate | ItemType::Import => (\"reexports\", \"Re-exports\"),\n         ItemType::Module => (\"modules\", \"Modules\"),\n         ItemType::Struct => (\"structs\", \"Structs\"),\n@@ -2321,10 +2314,14 @@ fn item_ty_to_strs(ty: &ItemType) -> (&'static str, &'static str) {\n fn sidebar_module(buf: &mut Buffer, items: &[clean::Item]) {\n     let mut sidebar = String::new();\n \n+    // Re-exports are handled a bit differently because they can be extern crates or imports.\n     if items.iter().any(|it| {\n-        it.type_() == ItemType::ExternCrate || (it.type_() == ItemType::Import && !it.is_stripped())\n+        it.name.is_some()\n+            && (it.type_() == ItemType::ExternCrate\n+                || (it.type_() == ItemType::Import && !it.is_stripped()))\n     }) {\n-        sidebar.push_str(\"<li><a href=\\\"#reexports\\\">Re-exports</a></li>\");\n+        let (id, name) = item_ty_to_strs(ItemType::Import);\n+        sidebar.push_str(&format!(\"<li><a href=\\\"#{}\\\">{}</a></li>\", id, name));\n     }\n \n     // ordering taken from item_module, reorder, where it prioritized elements in a certain order\n@@ -2351,13 +2348,9 @@ fn sidebar_module(buf: &mut Buffer, items: &[clean::Item]) {\n         ItemType::ForeignType,\n         ItemType::Keyword,\n     ] {\n-        if items.iter().any(|it| !it.is_stripped() && it.type_() == myty) {\n-            let (short, name) = item_ty_to_strs(&myty);\n-            sidebar.push_str(&format!(\n-                \"<li><a href=\\\"#{id}\\\">{name}</a></li>\",\n-                id = short,\n-                name = name\n-            ));\n+        if items.iter().any(|it| !it.is_stripped() && it.type_() == myty && it.name.is_some()) {\n+            let (id, name) = item_ty_to_strs(myty);\n+            sidebar.push_str(&format!(\"<li><a href=\\\"#{}\\\">{}</a></li>\", id, name));\n         }\n     }\n "}, {"sha": "1c5d9a26441f459bfe41c1d236e7ea70711ca3b8", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -263,7 +263,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 w.write_str(\"</table>\");\n             }\n             curty = myty;\n-            let (short, name) = item_ty_to_strs(&myty.unwrap());\n+            let (short, name) = item_ty_to_strs(myty.unwrap());\n             write!(\n                 w,\n                 \"<h2 id=\\\"{id}\\\" class=\\\"section-header\\\">\\"}, {"sha": "a4188e6b203bb2ff5649cc7af62141b1a9037011", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -227,7 +227,6 @@ pub(super) fn write_shared(\n     )?;\n     write_minify(\"search.js\", static_files::SEARCH_JS)?;\n     write_minify(\"settings.js\", static_files::SETTINGS_JS)?;\n-    write_minify(\"sidebar-items.js\", static_files::sidebar::ITEMS)?;\n \n     if cx.shared.include_sources {\n         write_minify(\"source-script.js\", static_files::sidebar::SOURCE_SCRIPT)?;"}, {"sha": "1a15a444a701aaa3e5f297e3febb21e8922ffb39", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 53, "deletions": 50, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -561,41 +561,40 @@ function hideThemeButtonState() {\n         }\n     }());\n \n-    function addSidebarCrates(crates) {\n-        // Draw a convenient sidebar of known crates if we have a listing\n-        if (window.rootPath === \"../\" || window.rootPath === \"./\") {\n-            var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n-            if (sidebar) {\n-                var div = document.createElement(\"div\");\n-                div.className = \"block crate\";\n-                div.innerHTML = \"<h3>Crates</h3>\";\n-                var ul = document.createElement(\"ul\");\n-                div.appendChild(ul);\n-\n-                for (var i = 0; i < crates.length; ++i) {\n-                    var klass = \"crate\";\n-                    if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n-                        klass += \" current\";\n-                    }\n-                    var link = document.createElement(\"a\");\n-                    link.href = window.rootPath + crates[i] + \"/index.html\";\n-                    link.className = klass;\n-                    link.textContent = crates[i];\n-\n-                    var li = document.createElement(\"li\");\n-                    li.appendChild(link);\n-                    ul.appendChild(li);\n-                }\n-                sidebar.appendChild(div);\n-            }\n-        }\n-    }\n-\n     // delayed sidebar rendering.\n     window.initSidebarItems = function(items) {\n         var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n         var current = window.sidebarCurrent;\n \n+        function addSidebarCrates(crates) {\n+            if (!hasClass(document.body, \"crate\")) {\n+                // We only want to list crates on the crate page.\n+                return;\n+            }\n+            // Draw a convenient sidebar of known crates if we have a listing\n+            var div = document.createElement(\"div\");\n+            div.className = \"block crate\";\n+            div.innerHTML = \"<h3>Crates</h3>\";\n+            var ul = document.createElement(\"ul\");\n+            div.appendChild(ul);\n+\n+            for (var i = 0; i < crates.length; ++i) {\n+                var klass = \"crate\";\n+                if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n+                    klass += \" current\";\n+                }\n+                var link = document.createElement(\"a\");\n+                link.href = window.rootPath + crates[i] + \"/index.html\";\n+                link.className = klass;\n+                link.textContent = crates[i];\n+\n+                var li = document.createElement(\"li\");\n+                li.appendChild(link);\n+                ul.appendChild(li);\n+            }\n+            sidebar.appendChild(div);\n+        }\n+\n         function block(shortty, longty) {\n             var filtered = items[shortty];\n             if (!filtered) {\n@@ -634,28 +633,32 @@ function hideThemeButtonState() {\n                 ul.appendChild(li);\n             }\n             div.appendChild(ul);\n-            if (sidebar) {\n-                sidebar.appendChild(div);\n-            }\n+            sidebar.appendChild(div);\n         }\n \n-        block(\"primitive\", \"Primitive Types\");\n-        block(\"mod\", \"Modules\");\n-        block(\"macro\", \"Macros\");\n-        block(\"struct\", \"Structs\");\n-        block(\"enum\", \"Enums\");\n-        block(\"union\", \"Unions\");\n-        block(\"constant\", \"Constants\");\n-        block(\"static\", \"Statics\");\n-        block(\"trait\", \"Traits\");\n-        block(\"fn\", \"Functions\");\n-        block(\"type\", \"Type Definitions\");\n-        block(\"foreigntype\", \"Foreign Types\");\n-        block(\"keyword\", \"Keywords\");\n-        block(\"traitalias\", \"Trait Aliases\");\n-\n-        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n-        addSidebarCrates(window.ALL_CRATES);\n+        if (sidebar) {\n+            var isModule = hasClass(document.body, \"mod\");\n+            if (!isModule) {\n+                block(\"primitive\", \"Primitive Types\");\n+                block(\"mod\", \"Modules\");\n+                block(\"macro\", \"Macros\");\n+                block(\"struct\", \"Structs\");\n+                block(\"enum\", \"Enums\");\n+                block(\"union\", \"Unions\");\n+                block(\"constant\", \"Constants\");\n+                block(\"static\", \"Statics\");\n+                block(\"trait\", \"Traits\");\n+                block(\"fn\", \"Functions\");\n+                block(\"type\", \"Type Definitions\");\n+                block(\"foreigntype\", \"Foreign Types\");\n+                block(\"keyword\", \"Keywords\");\n+                block(\"traitalias\", \"Trait Aliases\");\n+            }\n+\n+            // `crates{version}.js` should always be loaded before this script, so we can use\n+            // it safely.\n+            addSidebarCrates(window.ALL_CRATES);\n+        }\n     };\n \n     window.register_implementors = function(imp) {"}, {"sha": "d3f8a7aa67dd731ebe921dd10d39f7262ea1edf9", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -311,9 +311,12 @@ nav.sub {\n \tborder: none;\n }\n \n-.location a:first-child {\n+.location a:first-of-type {\n \tfont-weight: 500;\n }\n+.location a:hover {\n+\ttext-decoration: underline;\n+}\n \n .block {\n \tpadding: 0;"}, {"sha": "256cd2740a010a90dbfe320f13cb6d4cf5062a69", "filename": "src/librustdoc/html/static/sidebar-items.js", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da865095cf378fbfd07145c25fe5837ea091efeb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsidebar-items.js", "raw_url": "https://github.com/rust-lang/rust/raw/da865095cf378fbfd07145c25fe5837ea091efeb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsidebar-items.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsidebar-items.js?ref=da865095cf378fbfd07145c25fe5837ea091efeb", "patch": "@@ -1,2 +0,0 @@\n-/* global initSidebarItems */\n-initSidebarItems({});"}, {"sha": "ca7e5ef8150809a95cf9b0d169c07b6f4f727e38", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -141,7 +141,4 @@ crate mod noto_sans_kr {\n crate mod sidebar {\n     /// File script to handle sidebar.\n     crate static SOURCE_SCRIPT: &str = include_str!(\"static/source-script.js\");\n-\n-    /// Top Level sidebar items script which will load a sidebar without items.\n-    crate static ITEMS: &str = include_str!(\"static/sidebar-items.js\");\n }"}, {"sha": "388ca120d770ea5dab4f33c5d54255dac3444a4f", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -0,0 +1,56 @@\n+goto: file://|DOC_PATH|/test_docs/index.html\n+assert: (\".sidebar > .location\", \"Crate test_docs\")\n+// In modules, we only have one \"location\" element.\n+assert: (\".sidebar .location\", 1)\n+assert: (\".sidebar-elems > #all-types\", \"See all test_docs's items\")\n+// We check that we have the crates list and that the \"current\" on is \"test_docs\".\n+assert: (\".sidebar-elems > .crate > ul > li > a.current\", \"test_docs\")\n+// And we're also supposed to have the list of items in the current module.\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(1)\", \"Modules\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(2)\", \"Structs\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(3)\", \"Enums\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(4)\", \"Traits\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(5)\", \"Functions\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(6)\", \"Keywords\")\n+assert: (\"#structs + table td > a\", \"Foo\")\n+click: \"#structs + table td > a\"\n+\n+// PAGE: struct.Foo.html\n+assert: (\".sidebar .location\", 2)\n+// We check that there is no crate listed outside of the top level.\n+assert-false: \".sidebar-elems > .crate\"\n+// We now go back to the crate page to click on the \"lib2\" crate link.\n+goto: file://|DOC_PATH|/test_docs/index.html\n+click: \".sidebar-elems > .crate > ul > li:first-child > a\"\n+\n+// PAGE: lib2/index.html\n+goto: file://|DOC_PATH|/lib2/index.html\n+assert: (\".sidebar > .location\", \"Crate lib2\")\n+// We check that we have the crates list and that the \"current\" on is now \"lib2\".\n+assert: (\".sidebar-elems > .crate > ul > li > a.current\", \"lib2\")\n+// We now go to the \"foobar\" function page.\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(1)\", \"Modules\")\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(2)\", \"Functions\")\n+assert:\t(\"#functions + table td > a\", \"foobar\")\n+click: \"#functions + table td > a\"\n+\n+// PAGE: fn.foobar.html\n+// In items containing no items (like functions or constants) and in modules, we have one\n+// \"location\" elements.\n+assert: (\".sidebar .location\", 1)\n+// There is a \"<br>\" tag between \"in\" and \"lib2\", but it doesn't count as a space.\n+assert: (\".sidebar .sidebar-elems .location\", \"Other items inlib2\")\n+// We check that we don't have the crate list.\n+assert-false: \".sidebar-elems > .crate\"\n+\n+goto: ./module/index.html\n+assert: (\".sidebar > .location\", \"Module module\")\n+// We check that we don't have the crate list.\n+assert-false: \".sidebar-elems > .crate\"\n+\n+goto: ./sub_module/sub_sub_module/index.html\n+assert: (\".sidebar > .location\", \"Module sub_sub_module\")\n+// We check that we don't have the crate list.\n+assert-false: \".sidebar-elems > .crate\"\n+assert: (\".sidebar-elems > .items > ul > li:nth-child(1)\", \"Functions\")\n+assert: (\"#functions + table td > a\", \"foo\")"}, {"sha": "73384cbf90633b5ffce492ed9e7bd48c3340f9b3", "filename": "src/test/rustdoc-gui/src/lib2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -0,0 +1,11 @@\n+pub mod module {\n+    pub mod sub_module {\n+        pub mod sub_sub_module {\n+            pub fn foo() {}\n+        }\n+        pub fn bar() {}\n+    }\n+    pub fn whatever() {}\n+}\n+\n+pub fn foobar() {}"}, {"sha": "652517c5c90c06e87f282b83d9db81473debb7bc", "filename": "src/test/rustdoc/keyword.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Ftest%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fkeyword.rs?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -4,7 +4,8 @@\n \n // @has foo/index.html '//h2[@id=\"keywords\"]' 'Keywords'\n // @has foo/index.html '//a[@href=\"keyword.match.html\"]' 'match'\n-// @has foo/index.html '//div[@class=\"block items\"]//a/@href' '#keywords'\n+// @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a' 'Keywords'\n+// @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a/@href' '#keywords'\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n // @has foo/keyword.match.html '//span[@class=\"in-band\"]' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main\"]//div[@class=\"docblock\"]//p' 'this is a test!'"}, {"sha": "c55e014e834d479bd6518f4cfbd6d44c8a1f691f", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19579c656436d7998289399ca373889b8e6019ce/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/19579c656436d7998289399ca373889b8e6019ce/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=19579c656436d7998289399ca373889b8e6019ce", "patch": "@@ -63,6 +63,13 @@ async function main(argv) {\n         // This is more convenient that setting fields one by one.\n         options.parseArguments([\n             \"--no-screenshot\",\n+            // This option shows what puppeteer \"code\" is run\n+            // \"--debug\",\n+            // This option disable the headless mode, allowing you to see what's going on.\n+            // \"--no-headless\",\n+            // The text isn't rendered by default because of a lot of small differences\n+            // between hosts.\n+            // \"--show-text\",\n             \"--variable\", \"DOC_PATH\", opts[\"doc_folder\"],\n         ]);\n     } catch (error) {"}]}