{"sha": "580a93e2b6bd1817c81a248b469b01476f0ee328", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MGE5M2UyYjZiZDE4MTdjODFhMjQ4YjQ2OWIwMTQ3NmYwZWUzMjg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-22T20:23:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-22T20:24:30Z"}, "message": "Fix rebase", "tree": {"sha": "4b2e947a1fcaf34c91f4b5dbb1499e933998a9d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b2e947a1fcaf34c91f4b5dbb1499e933998a9d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/580a93e2b6bd1817c81a248b469b01476f0ee328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/580a93e2b6bd1817c81a248b469b01476f0ee328", "html_url": "https://github.com/rust-lang/rust/commit/580a93e2b6bd1817c81a248b469b01476f0ee328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/580a93e2b6bd1817c81a248b469b01476f0ee328/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669a4035eff7e3cc6b295a68ce43cc342ec29ea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/669a4035eff7e3cc6b295a68ce43cc342ec29ea8", "html_url": "https://github.com/rust-lang/rust/commit/669a4035eff7e3cc6b295a68ce43cc342ec29ea8"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "393b012f5f8a7f27e78b2d94b8b8276dfcab53da", "filename": "src/test/ui/issues/issue-43784-associated-type.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fissues%2Fissue-43784-associated-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fissues%2Fissue-43784-associated-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43784-associated-type.stderr?ref=580a93e2b6bd1817c81a248b469b01476f0ee328", "patch": "@@ -5,13 +5,12 @@ LL |     type Assoc: Partial<Self>;\n    |          ----- associated type defined here\n ...\n LL | impl<T> Complete for T {\n-   | ---------------------- in this `impl` item\n-   |      |\n-   |      help: consider restricting this bound: `T: std::marker::Copy`\n+   | ----------------------\n+   | |    |\n+   | |    help: consider restricting this bound: `T: std::marker::Copy`\n+   | in this `impl` item\n LL |     type Assoc = T;\n    |     ^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n-   |\n-   = help: consider adding a `where T: std::marker::Copy` bound\n \n error: aborting due to previous error\n "}, {"sha": "394512c57947455366e35103fbc590c4e96d5145", "filename": "src/test/ui/suggestions/missing-assoc-type-bound-restriction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.rs?ref=580a93e2b6bd1817c81a248b469b01476f0ee328", "patch": "@@ -16,10 +16,10 @@ struct ParentWrapper<T>(T);\n \n impl<A, T: Parent<Ty = A>> Parent for ParentWrapper<T> {\n     //~^ ERROR the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n-    //~| ERROR the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n     type Ty = A;\n     type Assoc = ChildWrapper<T::Assoc>;\n     //~^ ERROR the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n+    //~| ERROR the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n }\n \n fn main() {}"}, {"sha": "c6f2e5cda66af5b2bcd40c2317ae2892f84507f4", "filename": "src/test/ui/suggestions/missing-assoc-type-bound-restriction.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/580a93e2b6bd1817c81a248b469b01476f0ee328/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-assoc-type-bound-restriction.stderr?ref=580a93e2b6bd1817c81a248b469b01476f0ee328", "patch": "@@ -9,25 +9,31 @@ LL |   impl<A, T: Parent<Ty = A>> Parent for ParentWrapper<T> {\n    |  _|\n    | |\n LL | |\n-LL | |\n LL | |     type Ty = A;\n LL | |     type Assoc = ChildWrapper<T::Assoc>;\n LL | |\n+LL | |\n LL | | }\n    | |_^ the trait `Child<A>` is not implemented for `<T as Parent>::Assoc`\n \n error[E0277]: the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n-  --> $DIR/missing-assoc-type-bound-restriction.rs:17:28\n+  --> $DIR/missing-assoc-type-bound-restriction.rs:20:5\n    |\n+LL |     type Assoc: Child<Self::Ty>;\n+   |          ----- associated type defined here\n+...\n LL | impl<A, T: Parent<Ty = A>> Parent for ParentWrapper<T> {\n-   |                            ^^^^^^                     - help: consider further restricting the associated type: `where <T as Parent>::Assoc: Child<A>`\n-   |                            |\n-   |                            the trait `Child<A>` is not implemented for `<T as Parent>::Assoc`\n+   | ------------------------------------------------------- help: consider further restricting the associated type: `where <T as Parent>::Assoc: Child<A>`\n+   | |\n+   | in this `impl` item\n+...\n+LL |     type Assoc = ChildWrapper<T::Assoc>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Child<A>` is not implemented for `<T as Parent>::Assoc`\n    |\n    = note: required because of the requirements on the impl of `Child<A>` for `ChildWrapper<<T as Parent>::Assoc>`\n \n error[E0277]: the trait bound `<T as Parent>::Assoc: Child<A>` is not satisfied\n-  --> $DIR/missing-assoc-type-bound-restriction.rs:21:5\n+  --> $DIR/missing-assoc-type-bound-restriction.rs:20:5\n    |\n LL | trait Parent {\n    | ------------ required by `Parent`"}]}