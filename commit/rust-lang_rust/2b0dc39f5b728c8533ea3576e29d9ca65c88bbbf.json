{"sha": "2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMGRjMzlmNWI3MjhjODUzM2VhMzU3NmUyOWQ5Y2E2NWM4OGJiYmY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-09T21:19:11Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-10T05:30:59Z"}, "message": "Don't emit useless_attribute lint in external macros", "tree": {"sha": "2986994a4c8da9fe0c9643085e9f8927c41bd3b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2986994a4c8da9fe0c9643085e9f8927c41bd3b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAlytf5QQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5nkAEACiKNPdCuYhJ/jt9hvu9DHMMMWNafqIQURn\n95hAbH2sRClJ+1vStBgA4umggn/UMgM6ki+mufGvpfcxCYuCcn94W/OHt1pp86Mf\nDSmGADmT14LXZhsZ2mlnulqkRNB48lT7Jp99aS6uh8FFxOqwr7ye4J+5Re4kwuHI\nefY8zlUy+Mtv8oIoaQGtqnVJD0RpYhTh9+gbX7/HvMOZNeMl95W+yevuci4v28+4\n9afJqTuoNiUKKUSsEvJGqYqJzcCKCkdbmqPxSw1WYjACtBAbTmb7EKA6RsHr5sgu\nYRP0f9Syq7TJmRF54LDxZeMEuLxKwFn36YNxbku9AexmMSEBvw+QDy2tGb6IKVDF\np+qptUKlKTd5XqFAu3DELcFtBGFbq3N9n2rK4TqU0W6j+aNt872m3FWBE6mgWl8x\nPgBVnpDx6NnbInktPOjqLS/ttVpMEZ0qgoGHevjnNNtcsHvbk7xgYM8u0zjkBrq/\nJHXU9LFYWfpMFzUHOb6quYpsBaCjtkrgQfky/6Rq02IxW91c2TiovO4DMVlvsh0L\nBES+9f1kpOt6OXgsqifA4iHV9PWMFo6pMwZWSZi0RRb968aMmY7V2iOE8zKqlDHp\n1lh9vs9hl+jzlhMKtp7SWDwk/YObafq0EU0lX1ybRrObrodgjaBXwlnYSm0SFZMm\nstDIUESw6g==\n=mzqc\n-----END PGP SIGNATURE-----", "payload": "tree 2986994a4c8da9fe0c9643085e9f8927c41bd3b5\nparent 37f5c1ec734f806fe98930b8d5f54f00013f06f1\nauthor Philipp Hansch <dev@phansch.net> 1554844751 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1554874259 +0200\n\nDon't emit useless_attribute lint in external macros\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "html_url": "https://github.com/rust-lang/rust/commit/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37f5c1ec734f806fe98930b8d5f54f00013f06f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f5c1ec734f806fe98930b8d5f54f00013f06f1", "html_url": "https://github.com/rust-lang/rust/commit/37f5c1ec734f806fe98930b8d5f54f00013f06f1"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "52b3fc7f3449d6f980ce70e88a54f96b3cbe94f6", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "patch": "@@ -8,7 +8,8 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{\n-    CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintContext, LintPass,\n+    in_external_macro, CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray,\n+    LintContext, LintPass,\n };\n use rustc::ty::{self, TyCtxt};\n use rustc::{declare_tool_lint, lint_array};\n@@ -241,6 +242,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n                 let skip_unused_imports = item.attrs.iter().any(|attr| attr.check_name(\"macro_use\"));\n \n                 for attr in &item.attrs {\n+                    if in_external_macro(cx.sess(), attr.span) {\n+                        return;\n+                    }\n                     if let Some(lint_list) = &attr.meta_item_list() {\n                         if let Some(ident) = attr.ident() {\n                             match &*ident.as_str() {"}, {"sha": "d527aac6fa12daeb4e401bd21ccda79982ce8757", "filename": "tests/ui/auxiliary/proc_macro_derive.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "patch": "@@ -0,0 +1,17 @@\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+#![feature(repr128, proc_macro_hygiene, proc_macro_quote)]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::{quote, TokenStream};\n+\n+#[proc_macro_derive(DeriveSomething)]\n+pub fn derive(_: TokenStream) -> TokenStream {\n+    let output = quote! {\n+        #[allow(dead_code)]\n+        extern crate clippy_lints;\n+    };\n+    output\n+}"}, {"sha": "2ef1ec7dad4682f8cdf69e741b1458ddd6904c72", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "patch": "@@ -1,3 +1,5 @@\n+// aux-build:proc_macro_derive.rs\n+\n #![warn(clippy::useless_attribute)]\n \n #[allow(dead_code)]\n@@ -10,6 +12,9 @@\n #[macro_use]\n extern crate clippy_lints;\n \n+#[macro_use]\n+extern crate proc_macro_derive;\n+\n // don't lint on unused_import for `use` items\n #[allow(unused_imports)]\n use std::collections;\n@@ -22,4 +27,9 @@ mod foo {\n #[allow(deprecated)]\n pub use foo::Bar;\n \n+// This should not trigger the lint. There's lint level definitions inside the external derive\n+// that would trigger the useless_attribute lint.\n+#[derive(DeriveSomething)]\n+struct Baz;\n+\n fn main() {}"}, {"sha": "50ba3d1b01625dde703803136cb5b61b4f651b87", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=2b0dc39f5b728c8533ea3576e29d9ca65c88bbbf", "patch": "@@ -1,13 +1,13 @@\n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:3:1\n+  --> $DIR/useless_attribute.rs:5:1\n    |\n LL | #[allow(dead_code)]\n    | ^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(dead_code)]`\n    |\n    = note: `-D clippy::useless-attribute` implied by `-D warnings`\n \n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:4:1\n+  --> $DIR/useless_attribute.rs:6:1\n    |\n LL | #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code)`"}]}