{"sha": "faec0d77995cc54944959e807d20b1fdf9bbac59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZWMwZDc3OTk1Y2M1NDk0NDk1OWU4MDdkMjBiMWZkZjliYmFjNTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-08T09:02:26Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-08T11:46:29Z"}, "message": "Avoid superfluous take/drop for temp values passes as arguments", "tree": {"sha": "8ac548e4c29939a93766b800c9a0a8cdc23afb4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac548e4c29939a93766b800c9a0a8cdc23afb4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faec0d77995cc54944959e807d20b1fdf9bbac59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faec0d77995cc54944959e807d20b1fdf9bbac59", "html_url": "https://github.com/rust-lang/rust/commit/faec0d77995cc54944959e807d20b1fdf9bbac59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faec0d77995cc54944959e807d20b1fdf9bbac59/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b41fd6104591a99f61554ebd7ce0b6480830116c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b41fd6104591a99f61554ebd7ce0b6480830116c", "html_url": "https://github.com/rust-lang/rust/commit/b41fd6104591a99f61554ebd7ce0b6480830116c"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "899a74f573ef9909d2069c46fb12f0a1daf060af", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/faec0d77995cc54944959e807d20b1fdf9bbac59/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faec0d77995cc54944959e807d20b1fdf9bbac59/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=faec0d77995cc54944959e807d20b1fdf9bbac59", "patch": "@@ -5694,12 +5694,23 @@ fn trans_arg_expr(&@block_ctxt cx, &ty::arg arg, TypeRef lldestty0,\n             auto dst = alloc_ty(bcx, e_ty);\n             val = dst.val;\n             bcx = move_val_if_temp(dst.bcx, INIT, val, lv, e_ty).bcx;\n-        } else {\n-            if (lv.is_mem) { val = load_if_immediate(bcx, val, e_ty); }\n-            // FIXME for non-is-mem lvals, we should be able to just drop the\n-            // cleanup. However, this currently leads to a memory-corrupting\n-            // stage2/rustc . Find out why.\n+        } else if (lv.is_mem) {\n+            val = load_if_immediate(bcx, val, e_ty);\n             bcx = copy_ty(bcx, val, e_ty).bcx;\n+        } else {\n+            // Eliding take/drop for appending of external vectors currently\n+            // corrupts memory. I can't figure out why, and external vectors\n+            // are on the way out anyway, so this simply turns off the\n+            // optimization for that case.\n+            auto is_ext_vec_plus = alt (e.node) {\n+                case (ast::expr_binary(_, _, _)) {\n+                    ty::type_is_sequence(ccx.tcx, e_ty) &&\n+                    !ty::sequence_is_interior(ccx.tcx, e_ty)\n+                }\n+                case (_) { false }\n+            };\n+            if (is_ext_vec_plus) { bcx = copy_ty(bcx, val, e_ty).bcx; }\n+            else { revoke_clean(bcx, val); }\n         }\n     } else if (type_is_immediate(ccx, e_ty) && !lv.is_mem) {\n         val = do_spill(bcx, val);\n@@ -6368,11 +6379,8 @@ fn with_out_method(fn(&out_method) -> result  work, @block_ctxt cx,\n             auto reg_val = load_if_immediate(cx, target, t);\n             ret drop_ty(cx, reg_val, t);\n         }\n-        auto cleanup = bind drop_hoisted_ty(_, res_alloca.val, tp);\n-        find_scope_cx(cx).cleanups += ~[clean_temp(res_alloca.val, cleanup)];\n         auto done = work(save_in(res_alloca.val));\n         auto loaded = load_if_immediate(done.bcx, res_alloca.val, tp);\n-        revoke_clean(cx, res_alloca.val);\n         add_clean_temp(cx, loaded, tp);\n         ret rslt(done.bcx, loaded);;\n     }"}]}