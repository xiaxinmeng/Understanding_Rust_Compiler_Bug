{"sha": "3ae2d21c12a1fbe909f72a96b012d7092c5419e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZTJkMjFjMTJhMWZiZTkwOWY3MmE5NmIwMTJkNzA5MmM1NDE5ZTQ=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-04-09T08:03:57Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-04-09T08:03:57Z"}, "message": "simplify `vec!` macro\n\nSimplify `vec!` macro by replacing 2 following branches:\n- `($($x:expr),*) => (...)`\n- `($($x:expr,)*) => (...)`\nwith one:\n- `($($x:expr),* $(,)?) => (...)`", "tree": {"sha": "90217a9f90256a9234a30d79b22162c140fb6710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90217a9f90256a9234a30d79b22162c140fb6710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ae2d21c12a1fbe909f72a96b012d7092c5419e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae2d21c12a1fbe909f72a96b012d7092c5419e4", "html_url": "https://github.com/rust-lang/rust/commit/3ae2d21c12a1fbe909f72a96b012d7092c5419e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ae2d21c12a1fbe909f72a96b012d7092c5419e4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11f6096a9ef6ad52de2956f4d2df200de7617077", "url": "https://api.github.com/repos/rust-lang/rust/commits/11f6096a9ef6ad52de2956f4d2df200de7617077", "html_url": "https://github.com/rust-lang/rust/commit/11f6096a9ef6ad52de2956f4d2df200de7617077"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "4a613b92ce8c8fe73aa20add84583818848360a9", "filename": "src/liballoc/macros.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ae2d21c12a1fbe909f72a96b012d7092c5419e4/src%2Fliballoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae2d21c12a1fbe909f72a96b012d7092c5419e4/src%2Fliballoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fmacros.rs?ref=3ae2d21c12a1fbe909f72a96b012d7092c5419e4", "patch": "@@ -42,10 +42,9 @@ macro_rules! vec {\n     ($elem:expr; $n:expr) => (\n         $crate::vec::from_elem($elem, $n)\n     );\n-    ($($x:expr),*) => (\n+    ($($x:expr),* $(,)?) => (\n         <[_]>::into_vec(box [$($x),*])\n     );\n-    ($($x:expr,)*) => ($crate::vec![$($x),*])\n }\n \n // HACK(japaric): with cfg(test) the inherent `[T]::into_vec` method, which is"}]}