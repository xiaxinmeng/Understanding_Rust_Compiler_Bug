{"sha": "9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "node_id": "C_kwDOAAsO6NoAKDljOGNkMWZmMzc2NTY4ZmZlNDFlZTk0ZjJjOTlhMGQzZDgzMjYyZDU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-26T21:50:34Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-26T21:50:34Z"}, "message": "Add a test for `char::DecodeUtf16::size_hint`", "tree": {"sha": "516b7c4891a809b1537e4aa6f5cdf045553ffc76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/516b7c4891a809b1537e4aa6f5cdf045553ffc76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "html_url": "https://github.com/rust-lang/rust/commit/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4245d318b04c8b44aed7e682c49b0507086d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4245d318b04c8b44aed7e682c49b0507086d6c", "html_url": "https://github.com/rust-lang/rust/commit/cd4245d318b04c8b44aed7e682c49b0507086d6c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "d776a08323c0344d816e2c01e80c15eb6b1f6f76", "filename": "library/core/tests/char.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5/library%2Fcore%2Ftests%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5/library%2Fcore%2Ftests%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fchar.rs?ref=9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "patch": "@@ -308,6 +308,31 @@ fn test_decode_utf16() {\n     check(&[0xD800, 0], &[Err(0xD800), Ok('\\0')]);\n }\n \n+#[test]\n+fn test_decode_utf16_size_hint() {\n+    fn check(s: &[u16]) {\n+        let mut iter = char::decode_utf16(s.iter().cloned());\n+\n+        loop {\n+            let count = iter.clone().count();\n+            let (lower, upper) = iter.size_hint();\n+\n+            assert!(\n+                lower <= count && count <= upper.unwrap(),\n+                \"lower = {lower}, upper = {upper:?}\"\n+            );\n+\n+            if let None = iter.next() {\n+                break;\n+            }\n+        }\n+    }\n+\n+    check(&[0xD800, 0x41, 0x42]);\n+    check(&[0xD800, 0]);\n+    check(&[0xD834, 0x006d]);\n+}\n+\n #[test]\n fn ed_iterator_specializations() {\n     // Check counting"}]}