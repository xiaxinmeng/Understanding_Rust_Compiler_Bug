{"sha": "6f6e261e20fd1a770cb3477205c192dd158897f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNmUyNjFlMjBmZDFhNzcwY2IzNDc3MjA1YzE5MmRkMTU4ODk3Zjg=", "commit": {"author": {"name": "Mathieu Poumeyrol", "email": "kali@zoy.org", "date": "2016-09-12T19:38:28Z"}, "committer": {"name": "Mathieu Poumeyrol", "email": "mathieu.poumeyrol@snips.ai", "date": "2016-09-28T17:43:11Z"}, "message": "set SO_NOSIGPIPE on apple platforms", "tree": {"sha": "394deb3bf79da2d5e4444ab21fe3aff44cd3b933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/394deb3bf79da2d5e4444ab21fe3aff44cd3b933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f6e261e20fd1a770cb3477205c192dd158897f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6e261e20fd1a770cb3477205c192dd158897f8", "html_url": "https://github.com/rust-lang/rust/commit/6f6e261e20fd1a770cb3477205c192dd158897f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f6e261e20fd1a770cb3477205c192dd158897f8/comments", "author": {"login": "kali", "id": 53657, "node_id": "MDQ6VXNlcjUzNjU3", "avatar_url": "https://avatars.githubusercontent.com/u/53657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kali", "html_url": "https://github.com/kali", "followers_url": "https://api.github.com/users/kali/followers", "following_url": "https://api.github.com/users/kali/following{/other_user}", "gists_url": "https://api.github.com/users/kali/gists{/gist_id}", "starred_url": "https://api.github.com/users/kali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kali/subscriptions", "organizations_url": "https://api.github.com/users/kali/orgs", "repos_url": "https://api.github.com/users/kali/repos", "events_url": "https://api.github.com/users/kali/events{/privacy}", "received_events_url": "https://api.github.com/users/kali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kali", "id": 53657, "node_id": "MDQ6VXNlcjUzNjU3", "avatar_url": "https://avatars.githubusercontent.com/u/53657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kali", "html_url": "https://github.com/kali", "followers_url": "https://api.github.com/users/kali/followers", "following_url": "https://api.github.com/users/kali/following{/other_user}", "gists_url": "https://api.github.com/users/kali/gists{/gist_id}", "starred_url": "https://api.github.com/users/kali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kali/subscriptions", "organizations_url": "https://api.github.com/users/kali/orgs", "repos_url": "https://api.github.com/users/kali/repos", "events_url": "https://api.github.com/users/kali/events{/privacy}", "received_events_url": "https://api.github.com/users/kali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee2d04d877fe909309c39b6bdf711dc586d0a1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eee2d04d877fe909309c39b6bdf711dc586d0a1e", "html_url": "https://github.com/rust-lang/rust/commit/eee2d04d877fe909309c39b6bdf711dc586d0a1e"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "ad287bbec3889b276c5292c7fa6efa082600b472", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f6e261e20fd1a770cb3477205c192dd158897f8/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f6e261e20fd1a770cb3477205c192dd158897f8/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=6f6e261e20fd1a770cb3477205c192dd158897f8", "patch": "@@ -33,6 +33,14 @@ use libc::SOCK_CLOEXEC;\n #[cfg(not(target_os = \"linux\"))]\n const SOCK_CLOEXEC: c_int = 0;\n \n+// Another conditional contant for name resolution: Macos et iOS use\n+// SO_NOSIGPIPE as a setsockopt flag to disable SIGPIPE emission on socket.\n+// Other platforms do otherwise.\n+#[cfg(target_vendor = \"apple\")]\n+use libc::SO_NOSIGPIPE;\n+#[cfg(not(target_vendor = \"apple\"))]\n+const SO_NOSIGPIPE: c_int = 0;\n+\n pub struct Socket(FileDesc);\n \n pub fn init() {}\n@@ -81,7 +89,11 @@ impl Socket {\n             let fd = cvt(libc::socket(fam, ty, 0))?;\n             let fd = FileDesc::new(fd);\n             fd.set_cloexec()?;\n-            Ok(Socket(fd))\n+            let socket = Socket(fd);\n+            if cfg!(target_vendor = \"apple\") {\n+                setsockopt(&socket, libc::SOL_SOCKET, SO_NOSIGPIPE, 1)?;\n+            }\n+            Ok(socket)\n         }\n     }\n "}]}