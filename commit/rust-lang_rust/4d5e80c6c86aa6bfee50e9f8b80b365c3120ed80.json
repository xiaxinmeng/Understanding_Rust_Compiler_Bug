{"sha": "4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNWU4MGM2Yzg2YWE2YmZlZTUwZTlmOGI4MGIzNjVjMzEyMGVkODA=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-03T17:24:33Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-03T17:24:33Z"}, "message": "Fix  for rebasing", "tree": {"sha": "5fb0661acf0d672c72d5873bf94e0ad1b235d3a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb0661acf0d672c72d5873bf94e0ad1b235d3a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80", "html_url": "https://github.com/rust-lang/rust/commit/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "html_url": "https://github.com/rust-lang/rust/commit/1e9a3233f753e1e4de6a56e84e46d1811526ddd9"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "32e0d5ced3379aa80c564f27244f5a1501ef16b8", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=4d5e80c6c86aa6bfee50e9f8b80b365c3120ed80", "patch": "@@ -172,9 +172,20 @@ pub(crate) fn parse_macro(\n             // Note:\n             // The final goal we would like to make all parse_macro success,\n             // such that the following log will not call anyway.\n-            let loc: MacroCallLoc = db.lookup_intern_macro(macro_call_id);\n-            let node = loc.kind.node(db);\n-            log::warn!(\"fail on macro_parse: (reason: {} macro_call: {:#})\", err, node.value);\n+            match macro_call_id {\n+                MacroCallId::LazyMacro(id) => {\n+                    let loc: MacroCallLoc = db.lookup_intern_macro(id);\n+                    let node = loc.kind.node(db);\n+                    log::warn!(\n+                        \"fail on macro_parse: (reason: {} macro_call: {:#})\",\n+                        err,\n+                        node.value\n+                    );\n+                }\n+                _ => {\n+                    log::warn!(\"fail on macro_parse: (reason: {})\", err);\n+                }\n+            }\n         })\n         .ok()?;\n "}]}