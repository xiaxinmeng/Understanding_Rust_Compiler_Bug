{"sha": "9a607c0a2781197b88ff2535b852b53d3f0e4145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNjA3YzBhMjc4MTE5N2I4OGZmMjUzNWI4NTJiNTNkM2YwZTQxNDU=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-26T08:31:34Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-26T08:31:34Z"}, "message": "unused into", "tree": {"sha": "6a68b430feff260d49fa0d6cc79dea023df90c18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a68b430feff260d49fa0d6cc79dea023df90c18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a607c0a2781197b88ff2535b852b53d3f0e4145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a607c0a2781197b88ff2535b852b53d3f0e4145", "html_url": "https://github.com/rust-lang/rust/commit/9a607c0a2781197b88ff2535b852b53d3f0e4145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a607c0a2781197b88ff2535b852b53d3f0e4145/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32195ac8f4271b8a05923859baa1d3411408effb", "url": "https://api.github.com/repos/rust-lang/rust/commits/32195ac8f4271b8a05923859baa1d3411408effb", "html_url": "https://github.com/rust-lang/rust/commit/32195ac8f4271b8a05923859baa1d3411408effb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2f3089f1a92c10d9e7c9b5ad40c03e5cb16c2868", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a607c0a2781197b88ff2535b852b53d3f0e4145/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a607c0a2781197b88ff2535b852b53d3f0e4145/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=9a607c0a2781197b88ff2535b852b53d3f0e4145", "patch": "@@ -364,7 +364,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             GenericArgKind::Lifetime(_) => bug!(\"unexpected lifetime\"),\n         };\n \n-        let mut local_visitor = FindHirNodeVisitor::new(&self, arg.into(), span);\n+        let mut local_visitor = FindHirNodeVisitor::new(&self, arg, span);\n         let ty_to_string = |ty: Ty<'tcx>| -> String {\n             let mut s = String::new();\n             let mut printer = ty::print::FmtPrinter::new(self.tcx, &mut s, Namespace::TypeNS);"}]}