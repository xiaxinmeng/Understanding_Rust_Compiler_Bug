{"sha": "9154f8b22c56c071e78e1f3d706fd75f43ff218c", "node_id": "C_kwDOAAsO6NoAKDkxNTRmOGIyMmM1NmMwNzFlNzhlMWYzZDcwNmZkNzVmNDNmZjIxOGM", "commit": {"author": {"name": "Christian Legnitto", "email": "christian@legnitto.com", "date": "2022-08-03T14:39:43Z"}, "committer": {"name": "Christian Legnitto", "email": "christian@legnitto.com", "date": "2022-08-03T15:23:15Z"}, "message": "Add additional raw error mappings for the nightly `io_error_more` feature\n\nSome crates are using nightly and failing when mapping these errors,\nfor example <https://miri.saethlin.dev/?crate=remove_dir_all&version=0.7.0>:\n\n```\nerror: unsupported operation: io error NotADirectory cannot be translated into a raw os error\n    --> /root/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys/unix/fs.rs:1203:19\n```", "tree": {"sha": "14b409948deb5d8cb31d40c67b583aa9f40e6476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14b409948deb5d8cb31d40c67b583aa9f40e6476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9154f8b22c56c071e78e1f3d706fd75f43ff218c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9154f8b22c56c071e78e1f3d706fd75f43ff218c", "html_url": "https://github.com/rust-lang/rust/commit/9154f8b22c56c071e78e1f3d706fd75f43ff218c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9154f8b22c56c071e78e1f3d706fd75f43ff218c/comments", "author": {"login": "LegNeato", "id": 368904, "node_id": "MDQ6VXNlcjM2ODkwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/368904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegNeato", "html_url": "https://github.com/LegNeato", "followers_url": "https://api.github.com/users/LegNeato/followers", "following_url": "https://api.github.com/users/LegNeato/following{/other_user}", "gists_url": "https://api.github.com/users/LegNeato/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegNeato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegNeato/subscriptions", "organizations_url": "https://api.github.com/users/LegNeato/orgs", "repos_url": "https://api.github.com/users/LegNeato/repos", "events_url": "https://api.github.com/users/LegNeato/events{/privacy}", "received_events_url": "https://api.github.com/users/LegNeato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LegNeato", "id": 368904, "node_id": "MDQ6VXNlcjM2ODkwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/368904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegNeato", "html_url": "https://github.com/LegNeato", "followers_url": "https://api.github.com/users/LegNeato/followers", "following_url": "https://api.github.com/users/LegNeato/following{/other_user}", "gists_url": "https://api.github.com/users/LegNeato/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegNeato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegNeato/subscriptions", "organizations_url": "https://api.github.com/users/LegNeato/orgs", "repos_url": "https://api.github.com/users/LegNeato/repos", "events_url": "https://api.github.com/users/LegNeato/events{/privacy}", "received_events_url": "https://api.github.com/users/LegNeato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c24c6388848634a4fb6e22e6b6b51b246eda96cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c24c6388848634a4fb6e22e6b6b51b246eda96cb", "html_url": "https://github.com/rust-lang/rust/commit/c24c6388848634a4fb6e22e6b6b51b246eda96cb"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "ee2c39b51154072ac972a58f2038d347021cd4e2", "filename": "src/helpers.rs", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9154f8b22c56c071e78e1f3d706fd75f43ff218c/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9154f8b22c56c071e78e1f3d706fd75f43ff218c/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=9154f8b22c56c071e78e1f3d706fd75f43ff218c", "patch": "@@ -23,26 +23,49 @@ use crate::*;\n \n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n \n+// This mapping is the reverse of `decode_error_kind` in\n+// <https://github.com/rust-lang/rust/blob/master/library/std/src/sys/unix/mod.rs>\n+// and should be kept in sync.\n const UNIX_IO_ERROR_TABLE: &[(std::io::ErrorKind, &str)] = {\n     use std::io::ErrorKind::*;\n     &[\n+        (ArgumentListTooLong, \"E2BIG\"),\n+        (AddrInUse, \"EADDRINUSE\"),\n+        (AddrNotAvailable, \"EADDRNOTAVAIL\"),\n+        (ResourceBusy, \"EBUSY\"),\n+        (ConnectionAborted, \"ECONNABORTED\"),\n         (ConnectionRefused, \"ECONNREFUSED\"),\n         (ConnectionReset, \"ECONNRESET\"),\n-        (PermissionDenied, \"EPERM\"),\n-        (BrokenPipe, \"EPIPE\"),\n-        (NotConnected, \"ENOTCONN\"),\n-        (ConnectionAborted, \"ECONNABORTED\"),\n-        (AddrNotAvailable, \"EADDRNOTAVAIL\"),\n-        (AddrInUse, \"EADDRINUSE\"),\n-        (NotFound, \"ENOENT\"),\n+        (Deadlock, \"EDEADLK\"),\n+        (FilesystemQuotaExceeded, \"EDQUOT\"),\n+        (AlreadyExists, \"EEXIST\"),\n+        (FileTooLarge, \"EFBIG\"),\n+        (HostUnreachable, \"EHOSTUNREACH\"),\n         (Interrupted, \"EINTR\"),\n         (InvalidInput, \"EINVAL\"),\n+        (IsADirectory, \"EISDIR\"),\n+        (FilesystemLoop, \"ELOOP\"),\n+        (NotFound, \"ENOENT\"),\n+        (OutOfMemory, \"ENOMEM\"),\n+        (StorageFull, \"ENOSPC\"),\n+        (Unsupported, \"ENOSYS\"),\n+        (TooManyLinks, \"EMLINK\"),\n         (InvalidFilename, \"ENAMETOOLONG\"),\n+        (NetworkDown, \"ENETDOWN\"),\n+        (NetworkUnreachable, \"ENETUNREACH\"),\n+        (NotConnected, \"ENOTCONN\"),\n+        (NotADirectory, \"ENOTDIR\"),\n+        (DirectoryNotEmpty, \"ENOTEMPTY\"),\n+        (BrokenPipe, \"EPIPE\"),\n+        (ReadOnlyFilesystem, \"EROFS\"),\n+        (NotSeekable, \"ESPIPE\"),\n+        (StaleNetworkFileHandle, \"ESTALE\"),\n         (TimedOut, \"ETIMEDOUT\"),\n-        (AlreadyExists, \"EEXIST\"),\n+        (ExecutableFileBusy, \"ETXTBSY\"),\n+        (CrossesDevices, \"EXDEV\"),\n+        // The following have two valid options...we pick one.\n+        (PermissionDenied, \"EPERM\"),\n         (WouldBlock, \"EWOULDBLOCK\"),\n-        (DirectoryNotEmpty, \"ENOTEMPTY\"),\n-        (FilesystemLoop, \"ELOOP\"),\n     ]\n };\n "}]}