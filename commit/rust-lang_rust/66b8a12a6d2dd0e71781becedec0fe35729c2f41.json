{"sha": "66b8a12a6d2dd0e71781becedec0fe35729c2f41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YjhhMTJhNmQyZGQwZTcxNzgxYmVjZWRlYzBmZTM1NzI5YzJmNDE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-11T23:26:31Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:24Z"}, "message": "Fix upstream changes", "tree": {"sha": "eff16a5dd6877f8c88a21e5ddab1724d46606661", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eff16a5dd6877f8c88a21e5ddab1724d46606661"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b8a12a6d2dd0e71781becedec0fe35729c2f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b8a12a6d2dd0e71781becedec0fe35729c2f41", "html_url": "https://github.com/rust-lang/rust/commit/66b8a12a6d2dd0e71781becedec0fe35729c2f41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b8a12a6d2dd0e71781becedec0fe35729c2f41/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd71c5b7044970ec34c7829b0ffaddb3b1dc4a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd71c5b7044970ec34c7829b0ffaddb3b1dc4a4", "html_url": "https://github.com/rust-lang/rust/commit/bfd71c5b7044970ec34c7829b0ffaddb3b1dc4a4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b97c2b77d10e97a7988c8ee0e7ca7371ae0198ce", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66b8a12a6d2dd0e71781becedec0fe35729c2f41/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b8a12a6d2dd0e71781becedec0fe35729c2f41/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=66b8a12a6d2dd0e71781becedec0fe35729c2f41", "patch": "@@ -1158,10 +1158,10 @@ fn confirm_generator_candidate<'cx, 'gcx, 'tcx>(\n     // Note: we unwrap the binder here but re-create it below (1)\n     let ty::Binder((trait_ref, yield_ty, return_ty)) =\n         tcx.generator_trait_ref_and_outputs(gen_def_id,\n-                                            obligation.predicate.trait_ref.self_ty(),\n+                                            obligation.predicate.self_ty(),\n                                             gen_sig);\n \n-    let name = obligation.predicate.item_name(tcx);\n+    let name = tcx.associated_item(obligation.predicate.item_def_id).name;\n     let ty = if name == Symbol::intern(\"Return\") {\n         return_ty\n     } else if name == Symbol::intern(\"Yield\") {\n@@ -1172,7 +1172,7 @@ fn confirm_generator_candidate<'cx, 'gcx, 'tcx>(\n \n     let predicate = ty::Binder(ty::ProjectionPredicate { // (1) recreate binder here\n         projection_ty: ty::ProjectionTy {\n-            trait_ref: trait_ref,\n+            substs: trait_ref.substs,\n             item_def_id: obligation.predicate.item_def_id,\n         },\n         ty: ty"}]}