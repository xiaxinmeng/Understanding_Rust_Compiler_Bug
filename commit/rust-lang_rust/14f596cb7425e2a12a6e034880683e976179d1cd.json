{"sha": "14f596cb7425e2a12a6e034880683e976179d1cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjU5NmNiNzQyNWUyYTEyYTZlMDM0ODgwNjgzZTk3NjE3OWQxY2Q=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-21T20:53:18Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-22T18:32:37Z"}, "message": "Only run cargo lints, when they are warn/deny/forbid", "tree": {"sha": "a518a0c5accac99d8b90f8739239e213621c2f8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a518a0c5accac99d8b90f8739239e213621c2f8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f596cb7425e2a12a6e034880683e976179d1cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqv54U47RUUXZfOLnLO/Nsn7QvnkFAl6gjcYACgkQLO/Nsn7Q\nvnmEQQ/8DH0Q8sfB0YU/bhEVetuxYUKNpv+LRxavyh9SRWAtqWGlZ5ZJU2wQZtS9\nlE+0q49/776TpHmLjaZPD6lcw4w00MjZ+VPwuwRPI9uh/RAvLVB8cVcWM8dg1nIN\nAnyTGHQtUiP+b8feXHuNj49azNmbuj5UXSuAdNKRMVzCsdZN4WWiG18s6W3mr4nM\nNi6p4to8beG7Z+uFyRouw/ZwEVQNktHSL472t9WhNwr9rwQiXL6/3NVbZW+6RxCW\nmp47VIesG7mhZkTa1n6HebN3FcplW/bH84SOHxWh4ShyxY6YIdTpWHYYKHpRc0p5\nJjt+BJ/O5dFeXRddsIkAyomZgvFJfqRe18SAienyoI+k7t1tlveFZgdcMdVU9Svd\nH8M3WbXORPqfDNIXlsCL4o4FE0sV6tBHnhkyhmtEW7bCAzTscxcGdG+1xvgQELc4\ne3ICsZbG6r4SNIcVsIML45SpK7hmbaN+Ik8etBiSJuPFPgJwow8U25WfTGShPznQ\naKZHWgCqiF6noqPigEJXywJ/AI1DzbPBBqa9RJftxiCIG2ju4AUz6AncJKFOo+S3\nXiHVGItXGJGAj48jyg7hp5kRmfZ6JSen7lhVJYTGzUaobFQXtxSU596kUuk40SV4\nggvpvNStDITH/rVw+VpRLcMn6mdtq7ckAVVq03VsZbFl4fCPWCk=\n=cXqr\n-----END PGP SIGNATURE-----", "payload": "tree a518a0c5accac99d8b90f8739239e213621c2f8a\nparent 1d4dd3d428cf6a622dc863a134ffacdb2183b6db\nauthor flip1995 <hello@philkrones.com> 1587502398 +0200\ncommitter flip1995 <hello@philkrones.com> 1587580357 +0200\n\nOnly run cargo lints, when they are warn/deny/forbid\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f596cb7425e2a12a6e034880683e976179d1cd", "html_url": "https://github.com/rust-lang/rust/commit/14f596cb7425e2a12a6e034880683e976179d1cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f596cb7425e2a12a6e034880683e976179d1cd/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d4dd3d428cf6a622dc863a134ffacdb2183b6db", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d4dd3d428cf6a622dc863a134ffacdb2183b6db", "html_url": "https://github.com/rust-lang/rust/commit/1d4dd3d428cf6a622dc863a134ffacdb2183b6db"}], "stats": {"total": 61, "additions": 41, "deletions": 20}, "files": [{"sha": "782da249808d0e71b3af319d9ef86cdb66236338", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=14f596cb7425e2a12a6e034880683e976179d1cd", "patch": "@@ -2,9 +2,9 @@\n \n use std::path::PathBuf;\n \n-use crate::utils::span_lint;\n-use rustc_ast::ast::Crate;\n-use rustc_lint::{EarlyContext, EarlyLintPass};\n+use crate::utils::{run_lints, span_lint};\n+use rustc_hir::{hir_id::CRATE_HIR_ID, Crate};\n+use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n \n@@ -35,11 +35,11 @@ declare_clippy_lint! {\n     \"common metadata is defined in `Cargo.toml`\"\n }\n \n-fn warning(cx: &EarlyContext<'_>, message: &str) {\n+fn warning(cx: &LateContext<'_, '_>, message: &str) {\n     span_lint(cx, CARGO_COMMON_METADATA, DUMMY_SP, message);\n }\n \n-fn missing_warning(cx: &EarlyContext<'_>, package: &cargo_metadata::Package, field: &str) {\n+fn missing_warning(cx: &LateContext<'_, '_>, package: &cargo_metadata::Package, field: &str) {\n     let message = format!(\"package `{}` is missing `{}` metadata\", package.name, field);\n     warning(cx, &message);\n }\n@@ -59,8 +59,12 @@ fn is_empty_vec(value: &[String]) -> bool {\n \n declare_lint_pass!(CargoCommonMetadata => [CARGO_COMMON_METADATA]);\n \n-impl EarlyLintPass for CargoCommonMetadata {\n-    fn check_crate(&mut self, cx: &EarlyContext<'_>, _: &Crate) {\n+impl LateLintPass<'_, '_> for CargoCommonMetadata {\n+    fn check_crate(&mut self, cx: &LateContext<'_, '_>, _: &Crate<'_>) {\n+        if !run_lints(cx, &[CARGO_COMMON_METADATA], CRATE_HIR_ID) {\n+            return;\n+        }\n+\n         let metadata = if let Ok(metadata) = cargo_metadata::MetadataCommand::new().no_deps().exec() {\n             metadata\n         } else {"}, {"sha": "9cd78945eecb691cbc9dd2e9a4557abe98c8d395", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=14f596cb7425e2a12a6e034880683e976179d1cd", "patch": "@@ -1024,9 +1024,9 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box precedence::Precedence);\n     store.register_early_pass(|| box needless_continue::NeedlessContinue);\n     store.register_early_pass(|| box redundant_static_lifetimes::RedundantStaticLifetimes);\n-    store.register_early_pass(|| box cargo_common_metadata::CargoCommonMetadata);\n-    store.register_early_pass(|| box multiple_crate_versions::MultipleCrateVersions);\n-    store.register_early_pass(|| box wildcard_dependencies::WildcardDependencies);\n+    store.register_late_pass(|| box cargo_common_metadata::CargoCommonMetadata);\n+    store.register_late_pass(|| box multiple_crate_versions::MultipleCrateVersions);\n+    store.register_late_pass(|| box wildcard_dependencies::WildcardDependencies);\n     store.register_early_pass(|| box literal_representation::LiteralDigitGrouping);\n     let literal_representation_threshold = conf.literal_representation_threshold;\n     store.register_early_pass(move || box literal_representation::DecimalLiteralRepresentation::new(literal_representation_threshold));"}, {"sha": "ed85d0315bd25d7d232de53e96c9ef97bf53ca0a", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=14f596cb7425e2a12a6e034880683e976179d1cd", "patch": "@@ -1,8 +1,8 @@\n //! lint on multiple versions of a crate being used\n \n-use crate::utils::span_lint;\n-use rustc_ast::ast::Crate;\n-use rustc_lint::{EarlyContext, EarlyLintPass};\n+use crate::utils::{run_lints, span_lint};\n+use rustc_hir::{Crate, CRATE_HIR_ID};\n+use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n \n@@ -33,8 +33,12 @@ declare_clippy_lint! {\n \n declare_lint_pass!(MultipleCrateVersions => [MULTIPLE_CRATE_VERSIONS]);\n \n-impl EarlyLintPass for MultipleCrateVersions {\n-    fn check_crate(&mut self, cx: &EarlyContext<'_>, _: &Crate) {\n+impl LateLintPass<'_, '_> for MultipleCrateVersions {\n+    fn check_crate(&mut self, cx: &LateContext<'_, '_>, _: &Crate<'_>) {\n+        if !run_lints(cx, &[MULTIPLE_CRATE_VERSIONS], CRATE_HIR_ID) {\n+            return;\n+        }\n+\n         let metadata = if let Ok(metadata) = cargo_metadata::MetadataCommand::new().exec() {\n             metadata\n         } else {"}, {"sha": "0d37932ddab53e86df673fa93f87fdb9714e46d9", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=14f596cb7425e2a12a6e034880683e976179d1cd", "patch": "@@ -1399,6 +1399,15 @@ pub fn fn_has_unsatisfiable_preds(cx: &LateContext<'_, '_>, did: DefId) -> bool\n     )\n }\n \n+pub fn run_lints(cx: &LateContext<'_, '_>, lints: &[&'static Lint], id: HirId) -> bool {\n+    lints.iter().any(|lint| {\n+        matches!(\n+            cx.tcx.lint_level_at_node(lint, id),\n+            (Level::Forbid | Level::Deny | Level::Warn, _)\n+        )\n+    })\n+}\n+\n #[cfg(test)]\n mod test {\n     use super::{trim_multiline, without_block_comments};"}, {"sha": "d8d48eb15358d19d70cb82b07343e476714440ae", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f596cb7425e2a12a6e034880683e976179d1cd/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=14f596cb7425e2a12a6e034880683e976179d1cd", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::span_lint;\n-use rustc_ast::ast::Crate;\n-use rustc_lint::{EarlyContext, EarlyLintPass};\n+use crate::utils::{run_lints, span_lint};\n+use rustc_hir::{hir_id::CRATE_HIR_ID, Crate};\n+use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n \n@@ -28,8 +28,12 @@ declare_clippy_lint! {\n \n declare_lint_pass!(WildcardDependencies => [WILDCARD_DEPENDENCIES]);\n \n-impl EarlyLintPass for WildcardDependencies {\n-    fn check_crate(&mut self, cx: &EarlyContext<'_>, _: &Crate) {\n+impl LateLintPass<'_, '_> for WildcardDependencies {\n+    fn check_crate(&mut self, cx: &LateContext<'_, '_>, _: &Crate<'_>) {\n+        if !run_lints(cx, &[WILDCARD_DEPENDENCIES], CRATE_HIR_ID) {\n+            return;\n+        }\n+\n         let metadata = if let Ok(metadata) = cargo_metadata::MetadataCommand::new().no_deps().exec() {\n             metadata\n         } else {"}]}