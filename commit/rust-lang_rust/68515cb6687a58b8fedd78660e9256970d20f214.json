{"sha": "68515cb6687a58b8fedd78660e9256970d20f214", "node_id": "C_kwDOAAsO6NoAKDY4NTE1Y2I2Njg3YTU4YjhmZWRkNzg2NjBlOTI1Njk3MGQyMGYyMTQ", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-12T21:31:26Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-12T21:31:26Z"}, "message": "Rename environment variable for overriding rustc version", "tree": {"sha": "bf83a57ca5d84510ce8f3953066390a19c2ad4da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf83a57ca5d84510ce8f3953066390a19c2ad4da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68515cb6687a58b8fedd78660e9256970d20f214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68515cb6687a58b8fedd78660e9256970d20f214", "html_url": "https://github.com/rust-lang/rust/commit/68515cb6687a58b8fedd78660e9256970d20f214", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68515cb6687a58b8fedd78660e9256970d20f214/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e74d7b9cf1a7901650227e74650f1fcc797600", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e74d7b9cf1a7901650227e74650f1fcc797600", "html_url": "https://github.com/rust-lang/rust/commit/72e74d7b9cf1a7901650227e74650f1fcc797600"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "68180a2214a50aa84b8d78cd5cae51978e884417", "filename": "compiler/rustc_incremental/src/persist/file_format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68515cb6687a58b8fedd78660e9256970d20f214/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68515cb6687a58b8fedd78660e9256970d20f214/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs?ref=68515cb6687a58b8fedd78660e9256970d20f214", "patch": "@@ -190,7 +190,7 @@ fn report_format_mismatch(report_incremental_info: bool, file: &Path, message: &\n \n fn rustc_version(nightly_build: bool) -> String {\n     if nightly_build {\n-        if let Some(val) = env::var_os(\"RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER\") {\n+        if let Some(val) = env::var_os(\"RUSTC_FORCE_RUSTC_VERSION\") {\n             return val.to_string_lossy().into_owned();\n         }\n     }"}, {"sha": "5390eed89fadc70f168f201e4c069f3fc8daa56c", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68515cb6687a58b8fedd78660e9256970d20f214/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68515cb6687a58b8fedd78660e9256970d20f214/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=68515cb6687a58b8fedd78660e9256970d20f214", "patch": "@@ -176,9 +176,9 @@ impl StableCrateId {\n         // and no -Cmetadata, symbols from the same crate compiled with different versions of\n         // rustc are named the same.\n         //\n-        // RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER is used to inject rustc version information\n+        // RUSTC_FORCE_RUSTC_VERSION is used to inject rustc version information\n         // during testing.\n-        if let Some(val) = std::env::var_os(\"RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER\") {\n+        if let Some(val) = std::env::var_os(\"RUSTC_FORCE_RUSTC_VERSION\") {\n             hasher.write(val.to_string_lossy().into_owned().as_bytes())\n         } else {\n             hasher.write(option_env!(\"CFG_VERSION\").unwrap_or(\"unknown version\").as_bytes());"}, {"sha": "9cf611c3379e8b9ef23579ce6c72b2a0483d7a68", "filename": "src/test/incremental/cache_file_headers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68515cb6687a58b8fedd78660e9256970d20f214/src%2Ftest%2Fincremental%2Fcache_file_headers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68515cb6687a58b8fedd78660e9256970d20f214/src%2Ftest%2Fincremental%2Fcache_file_headers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fcache_file_headers.rs?ref=68515cb6687a58b8fedd78660e9256970d20f214", "patch": "@@ -7,7 +7,7 @@\n \n // The `l33t haxx0r` Rust compiler is known to produce incr. comp. artifacts\n // that are outrageously incompatible with just about anything, even itself:\n-//[rpass1] rustc-env:RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER=\"l33t haxx0r rustc 2.1 LTS\"\n+//[rpass1] rustc-env:RUSTC_FORCE_RUSTC_VERSION=\"l33t haxx0r rustc 2.1 LTS\"\n \n // revisions:rpass1 rpass2\n // compile-flags: -Z query-dep-graph"}, {"sha": "091508cd805b9b0b6f5534cf9f747ac1732fb83b", "filename": "src/test/run-make-fulldeps/crate-hash-rustc-version/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68515cb6687a58b8fedd78660e9256970d20f214/src%2Ftest%2Frun-make-fulldeps%2Fcrate-hash-rustc-version%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/68515cb6687a58b8fedd78660e9256970d20f214/src%2Ftest%2Frun-make-fulldeps%2Fcrate-hash-rustc-version%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcrate-hash-rustc-version%2FMakefile?ref=68515cb6687a58b8fedd78660e9256970d20f214", "patch": "@@ -27,7 +27,7 @@ all:\n \t$(RUSTC) b.rs --extern a=$(TMPDIR)/liba$(EXT) --crate-type=bin -Crpath $(FLAGS)\n \t$(call RUN,b)\n \t# Now re-compile a.rs with another rustc version\n-\tRUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER=deadfeed $(RUSTC) a.rs --crate-type=dylib $(FLAGS)\n+\tRUSTC_FORCE_RUSTC_VERSION=deadfeed $(RUSTC) a.rs --crate-type=dylib $(FLAGS)\n \t# After compiling with a different rustc version, write symbols to disk again.\n \t$(NM_CMD) $(call DYLIB,a) > $(TMPDIR)/symbolsafter\n \t# As a sanity check, test if the symbols changed:"}]}