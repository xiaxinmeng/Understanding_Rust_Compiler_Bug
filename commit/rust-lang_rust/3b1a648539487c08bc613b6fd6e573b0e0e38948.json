{"sha": "3b1a648539487c08bc613b6fd6e573b0e0e38948", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMWE2NDg1Mzk0ODdjMDhiYzYxM2I2ZmQ2ZTU3M2IwZTBlMzg5NDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-20T15:04:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-20T15:09:03Z"}, "message": "More type safety around names", "tree": {"sha": "c7f1ebcc5979838d1747cf19dd562004916a7274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f1ebcc5979838d1747cf19dd562004916a7274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b1a648539487c08bc613b6fd6e573b0e0e38948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1a648539487c08bc613b6fd6e573b0e0e38948", "html_url": "https://github.com/rust-lang/rust/commit/3b1a648539487c08bc613b6fd6e573b0e0e38948", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b1a648539487c08bc613b6fd6e573b0e0e38948/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85c4280bf7af3ea25c34c0cd72d05c8de17454d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85c4280bf7af3ea25c34c0cd72d05c8de17454d", "html_url": "https://github.com/rust-lang/rust/commit/a85c4280bf7af3ea25c34c0cd72d05c8de17454d"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "66e6443cb1a02133d00a9e2db5f92fb8b98602b0", "filename": "crates/base_db/src/fixture.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -158,7 +158,7 @@ impl ChangeFixture {\n                 let crate_id = crate_graph.add_crate_root(\n                     file_id,\n                     meta.edition,\n-                    Some(crate_name.clone()),\n+                    Some(crate_name.clone().into()),\n                     meta.cfg,\n                     meta.env,\n                     Default::default(),\n@@ -187,7 +187,7 @@ impl ChangeFixture {\n             crate_graph.add_crate_root(\n                 crate_root,\n                 Edition::Edition2018,\n-                Some(CrateName::new(\"test\").unwrap()),\n+                Some(CrateName::new(\"test\").unwrap().into()),\n                 default_cfg,\n                 Env::default(),\n                 Default::default(),"}, {"sha": "87f0a0ce5a43be376e10f88eb2a0f98384beb706", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -108,24 +108,37 @@ impl ops::Deref for CrateName {\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct CrateDisplayName(CrateName);\n+pub struct CrateDisplayName {\n+    // The name we use to display various paths (with `_`).\n+    crate_name: CrateName,\n+    // The name as specified in Cargo.toml (with `-`).\n+    canonical_name: String,\n+}\n \n impl From<CrateName> for CrateDisplayName {\n-    fn from(inner: CrateName) -> CrateDisplayName {\n-        CrateDisplayName(inner)\n+    fn from(crate_name: CrateName) -> CrateDisplayName {\n+        let canonical_name = crate_name.to_string();\n+        CrateDisplayName { crate_name, canonical_name }\n     }\n }\n \n impl fmt::Display for CrateDisplayName {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"{}\", self.0)\n+        write!(f, \"{}\", self.crate_name)\n     }\n }\n \n impl ops::Deref for CrateDisplayName {\n     type Target = str;\n     fn deref(&self) -> &str {\n-        &*self.0\n+        &*self.crate_name\n+    }\n+}\n+\n+impl CrateDisplayName {\n+    pub fn from_canonical_name(canonical_name: String) -> CrateDisplayName {\n+        let crate_name = CrateName::normalize_dashes(&canonical_name);\n+        CrateDisplayName { crate_name, canonical_name }\n     }\n }\n \n@@ -155,7 +168,7 @@ pub struct CrateData {\n     ///\n     /// For purposes of analysis, crates are anonymous (only names in\n     /// `Dependency` matters), this name should only be used for UI.\n-    pub display_name: Option<CrateName>,\n+    pub display_name: Option<CrateDisplayName>,\n     pub cfg_options: CfgOptions,\n     pub env: Env,\n     pub dependencies: Vec<Dependency>,\n@@ -184,7 +197,7 @@ impl CrateGraph {\n         &mut self,\n         file_id: FileId,\n         edition: Edition,\n-        display_name: Option<CrateName>,\n+        display_name: Option<CrateDisplayName>,\n         cfg_options: CfgOptions,\n         env: Env,\n         proc_macro: Vec<(SmolStr, Arc<dyn tt::TokenExpander>)>,"}, {"sha": "0804202d644214ce3462e46f5d8788ea7f316494", "filename": "crates/base_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fbase_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Flib.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -13,8 +13,8 @@ pub use crate::{\n     cancellation::Canceled,\n     change::Change,\n     input::{\n-        CrateData, CrateGraph, CrateId, CrateName, Dependency, Edition, Env, FileId, ProcMacroId,\n-        SourceRoot, SourceRootId,\n+        CrateData, CrateDisplayName, CrateGraph, CrateId, CrateName, Dependency, Edition, Env,\n+        FileId, ProcMacroId, SourceRoot, SourceRootId,\n     },\n };\n pub use salsa;"}, {"sha": "7f169ccd2f0ce94bc54e6d3dea14ad7560cdf16f", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -2,7 +2,7 @@\n use std::{iter, sync::Arc};\n \n use arrayvec::ArrayVec;\n-use base_db::{CrateId, CrateName, Edition, FileId};\n+use base_db::{CrateDisplayName, CrateId, Edition, FileId};\n use either::Either;\n use hir_def::find_path::PrefixKind;\n use hir_def::{\n@@ -103,7 +103,7 @@ impl Crate {\n         db.crate_graph()[self.id].edition\n     }\n \n-    pub fn display_name(self, db: &dyn HirDatabase) -> Option<CrateName> {\n+    pub fn display_name(self, db: &dyn HirDatabase) -> Option<CrateDisplayName> {\n         db.crate_graph()[self.id].display_name.clone()\n     }\n "}, {"sha": "56b985e80f00d25f363f6fee160588deebe7560a", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -1,15 +1,14 @@\n use assists::utils::FamousDefs;\n+use either::Either;\n use hir::{known, HirDisplay, Semantics};\n use ide_db::RootDatabase;\n use stdx::to_lower_snake_case;\n use syntax::{\n-    ast::{self, ArgListOwner, AstNode},\n+    ast::{self, ArgListOwner, AstNode, NameOwner},\n     match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, TextRange, T,\n };\n \n use crate::FileId;\n-use ast::NameOwner;\n-use either::Either;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct InlayHintsConfig {"}, {"sha": "5db41bc16053c1d0c2dd3e3807e4b44328b2a0db", "filename": "crates/project_model/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fproject_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1a648539487c08bc613b6fd6e573b0e0e38948/crates%2Fproject_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Flib.rs?ref=3b1a648539487c08bc613b6fd6e573b0e0e38948", "patch": "@@ -13,7 +13,7 @@ use std::{\n };\n \n use anyhow::{bail, Context, Result};\n-use base_db::{CrateGraph, CrateId, CrateName, Edition, Env, FileId};\n+use base_db::{CrateDisplayName, CrateGraph, CrateId, CrateName, Edition, Env, FileId};\n use cfg::CfgOptions;\n use paths::{AbsPath, AbsPathBuf};\n use rustc_hash::{FxHashMap, FxHashSet};\n@@ -408,10 +408,12 @@ impl ProjectWorkspace {\n                                 .map(|it| proc_macro_client.by_dylib_path(&it))\n                                 .unwrap_or_default();\n \n+                            let display_name =\n+                                CrateDisplayName::from_canonical_name(cargo[pkg].name.clone());\n                             let crate_id = crate_graph.add_crate_root(\n                                 file_id,\n                                 edition,\n-                                Some(CrateName::normalize_dashes(&cargo[pkg].name)),\n+                                Some(display_name),\n                                 cfg_options,\n                                 env,\n                                 proc_macro.clone(),\n@@ -556,7 +558,7 @@ fn sysroot_to_crate_graph(\n             let crate_id = crate_graph.add_crate_root(\n                 file_id,\n                 Edition::Edition2018,\n-                Some(name),\n+                Some(name.into()),\n                 cfg_options.clone(),\n                 env,\n                 proc_macro,"}]}