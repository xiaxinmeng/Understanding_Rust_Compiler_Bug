{"sha": "5f0f67375d605719b1ab8bd0e1d03c796313ed82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMGY2NzM3NWQ2MDU3MTliMWFiOGJkMGUxZDAzYzc5NjMxM2VkODI=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-11-12T22:36:22Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-11-12T22:36:22Z"}, "message": "no more must-use-candidate on trait impls", "tree": {"sha": "3b0a3cad882115059dfff5a9f9c77be81511ec24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0a3cad882115059dfff5a9f9c77be81511ec24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f0f67375d605719b1ab8bd0e1d03c796313ed82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0f67375d605719b1ab8bd0e1d03c796313ed82", "html_url": "https://github.com/rust-lang/rust/commit/5f0f67375d605719b1ab8bd0e1d03c796313ed82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f0f67375d605719b1ab8bd0e1d03c796313ed82/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "180f87065f65ce304a88c3a813f2701f70c41c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/180f87065f65ce304a88c3a813f2701f70c41c6a", "html_url": "https://github.com/rust-lang/rust/commit/180f87065f65ce304a88c3a813f2701f70c41c6a"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "d29a5e14b4111c40e21efcbf2c8061e049445670", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5f0f67375d605719b1ab8bd0e1d03c796313ed82/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f0f67375d605719b1ab8bd0e1d03c796313ed82/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=5f0f67375d605719b1ab8bd0e1d03c796313ed82", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n     attrs::is_proc_macro, iter_input_pats, match_def_path, qpath_res, return_ty, snippet, snippet_opt,\n-    span_help_and_lint, span_lint, span_lint_and_then, type_is_unsafe_function,\n+    span_help_and_lint, span_lint, span_lint_and_then, trait_ref_of_method, type_is_unsafe_function,\n };\n use matches::matches;\n use rustc::hir::{self, def::Res, def_id::DefId, intravisit};\n@@ -254,7 +254,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n             if let Some(attr) = attr {\n                 let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n                 check_needless_must_use(cx, &sig.decl, item.hir_id, item.span, fn_header_span, attr);\n-            } else if cx.access_levels.is_exported(item.hir_id) && !is_proc_macro(&item.attrs) {\n+            } else if cx.access_levels.is_exported(item.hir_id)\n+                && !is_proc_macro(&item.attrs)\n+                && trait_ref_of_method(cx, item.hir_id).is_none()\n+            {\n                 check_must_use_candidate(\n                     cx,\n                     &sig.decl,"}, {"sha": "ff74857530fcfbd9ae96c5c1f851a05de4f0c3be", "filename": "tests/ui/must_use_candidates.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f0f67375d605719b1ab8bd0e1d03c796313ed82/tests%2Fui%2Fmust_use_candidates.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5f0f67375d605719b1ab8bd0e1d03c796313ed82/tests%2Fui%2Fmust_use_candidates.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmust_use_candidates.fixed?ref=5f0f67375d605719b1ab8bd0e1d03c796313ed82", "patch": "@@ -28,7 +28,7 @@ pub trait MyPureTrait {\n }\n \n impl MyPureTrait for MyPure {\n-    #[must_use] fn trait_impl_pure(&self, i: u32) -> u32 {\n+    fn trait_impl_pure(&self, i: u32) -> u32 {\n         i\n     }\n }"}, {"sha": "0fa3849d03bff662169944e0758e018895355b06", "filename": "tests/ui/must_use_candidates.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f0f67375d605719b1ab8bd0e1d03c796313ed82/tests%2Fui%2Fmust_use_candidates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f0f67375d605719b1ab8bd0e1d03c796313ed82/tests%2Fui%2Fmust_use_candidates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmust_use_candidates.stderr?ref=5f0f67375d605719b1ab8bd0e1d03c796313ed82", "patch": "@@ -12,12 +12,6 @@ error: this method could have a `#[must_use]` attribute\n LL |     pub fn inherent_pure(&self) -> u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn inherent_pure(&self) -> u8`\n \n-error: this method could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:31:5\n-   |\n-LL |     fn trait_impl_pure(&self, i: u32) -> u32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] fn trait_impl_pure(&self, i: u32) -> u32`\n-\n error: this function could have a `#[must_use]` attribute\n   --> $DIR/must_use_candidates.rs:48:1\n    |\n@@ -36,5 +30,5 @@ error: this function could have a `#[must_use]` attribute\n LL | pub fn arcd(_x: Arc<u32>) -> bool {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn arcd(_x: Arc<u32>) -> bool`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}]}