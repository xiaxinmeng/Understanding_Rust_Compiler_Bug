{"sha": "db53db804604574337f80a614565fb964403a654", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNTNkYjgwNDYwNDU3NDMzN2Y4MGE2MTQ1NjVmYjk2NDQwM2E2NTQ=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2021-01-01T19:25:18Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2021-01-01T19:25:18Z"}, "message": "Address review suggestion, fix tidy tests", "tree": {"sha": "91b5ef245f803183d33f3d41511330e77d59c3c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91b5ef245f803183d33f3d41511330e77d59c3c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db53db804604574337f80a614565fb964403a654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db53db804604574337f80a614565fb964403a654", "html_url": "https://github.com/rust-lang/rust/commit/db53db804604574337f80a614565fb964403a654", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db53db804604574337f80a614565fb964403a654/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "077592a12fd982de3e69572a4c738dd4468617f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/077592a12fd982de3e69572a4c738dd4468617f9", "html_url": "https://github.com/rust-lang/rust/commit/077592a12fd982de3e69572a4c738dd4468617f9"}], "stats": {"total": 57, "additions": 34, "deletions": 23}, "files": [{"sha": "f68299d3a1210dc6aeb96dda63fb6dbfe6bcb2bd", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/db53db804604574337f80a614565fb964403a654/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db53db804604574337f80a614565fb964403a654/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=db53db804604574337f80a614565fb964403a654", "patch": "@@ -1,5 +1,5 @@\n //! FIXME: write short doc here\n-use std::{iter, sync::Arc};\n+use std::{fmt::Write, iter, sync::Arc};\n \n use arrayvec::ArrayVec;\n use base_db::{CrateDisplayName, CrateId, Edition, FileId};\n@@ -729,8 +729,7 @@ impl DefWithBody {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct Function {\n-    // DO NOT MERGE: this was previously pub(crate)\n-    pub id: FunctionId,\n+    pub(crate) id: FunctionId,\n }\n \n impl Function {\n@@ -798,6 +797,19 @@ impl Function {\n     pub fn has_body(self, db: &dyn HirDatabase) -> bool {\n         db.function_data(self.id).has_body\n     }\n+\n+    /// A textual representation of the HIR of this function for debugging purposes.\n+    pub fn debug_hir(self, db: &dyn HirDatabase) -> String {\n+        let body = db.body(self.id.into());\n+\n+        let mut result = String::new();\n+        writeln!(&mut result, \"HIR expressions in the body of `{}`:\", self.name(db)).unwrap();\n+        for (id, expr) in body.exprs.iter() {\n+            writeln!(&mut result, \"{:?}: {:?}\", id, expr).unwrap();\n+        }\n+\n+        result\n+    }\n }\n \n // Note: logically, this belongs to `hir_ty`, but we are not using it there yet."}, {"sha": "cfcfb7cfbc00504cae8f8c223df4b462c953f50e", "filename": "crates/ide/src/view_hir.rs", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/db53db804604574337f80a614565fb964403a654/crates%2Fide%2Fsrc%2Fview_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db53db804604574337f80a614565fb964403a654/crates%2Fide%2Fsrc%2Fview_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fview_hir.rs?ref=db53db804604574337f80a614565fb964403a654", "patch": "@@ -1,11 +1,9 @@\n use hir::{Function, Semantics};\n-use hir::db::DefDatabase;\n use ide_db::base_db::FilePosition;\n use ide_db::RootDatabase;\n-use syntax::{AstNode, algo::find_node_at_offset, ast};\n-use std::fmt::Write;\n+use syntax::{algo::find_node_at_offset, ast, AstNode};\n \n-// Feature: View hir\n+// Feature: View Hir\n //\n // |===\n // | Editor  | Action Name\n@@ -20,20 +18,8 @@ fn body_hir(db: &RootDatabase, position: FilePosition) -> Option<String> {\n     let sema = Semantics::new(db);\n     let source_file = sema.parse(position.file_id);\n \n-    let function = find_node_at_offset::<ast::Fn>(\n-        source_file.syntax(),\n-        position.offset,\n-    )?;\n+    let function = find_node_at_offset::<ast::Fn>(source_file.syntax(), position.offset)?;\n \n     let function: Function = sema.to_def(&function)?;\n-    let body = db.body(function.id.into());\n-\n-    let mut result = String::new();\n-    writeln!(&mut result, \"== Body expressions ==\").ok()?;\n-\n-    for (id, expr) in body.exprs.iter() {\n-        writeln!(&mut result, \"{:?}: {:?}\", id, expr).ok()?;\n-    }\n-\n-    Some(result)\n-}\n\\ No newline at end of file\n+    Some(function.debug_hir(db))\n+}"}, {"sha": "55527bab0aae83fb2f88b6c43da92281a6deeb8f", "filename": "docs/dev/README.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db53db804604574337f80a614565fb964403a654/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/db53db804604574337f80a614565fb964403a654/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=db53db804604574337f80a614565fb964403a654", "patch": "@@ -227,6 +227,8 @@ There are also two VS Code commands which might be of interest:\n \n * `Rust Analyzer: Syntax Tree` shows syntax tree of the current file/selection.\n \n+* `Rust Analyzer: View Hir` shows the HIR expressions within the function containing the cursor.\n+\n   You can hover over syntax nodes in the opened text file to see the appropriate\n   rust code that it refers to and the rust editor will also highlight the proper\n   text range."}, {"sha": "78d86f060a67a20825f976b5d7d4ba0779ff7c10", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/db53db804604574337f80a614565fb964403a654/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/db53db804604574337f80a614565fb964403a654/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=db53db804604574337f80a614565fb964403a654", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 203fdf79b21b5987\n+lsp_ext.rs hash: 91f2c62457e0a20f\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this  issue:\n@@ -449,6 +449,17 @@ interface SyntaxTeeParams {\n Returns textual representation of a parse tree for the file/selected region.\n Primarily for debugging, but very useful for all people working on rust-analyzer itself.\n \n+## View Hir\n+\n+**Method:** `rust-analyzer/viewHir`\n+\n+**Request:** `TextDocumentPositionParams`\n+\n+**Response:** `string`\n+\n+Returns a textual representation of the HIR of the function containing the cursor.\n+For debugging or when working on rust-analyzer itself.\n+\n ## Expand Macro\n \n **Method:** `rust-analyzer/expandMacro`"}]}