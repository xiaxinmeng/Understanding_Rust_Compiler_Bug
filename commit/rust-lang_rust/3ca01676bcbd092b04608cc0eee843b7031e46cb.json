{"sha": "3ca01676bcbd092b04608cc0eee843b7031e46cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYTAxNjc2YmNiZDA5MmIwNDYwOGNjMGVlZTg0M2I3MDMxZTQ2Y2I=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2014-02-22T19:37:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-25T05:22:26Z"}, "message": "Remove some obsolete ignored tests\n\n* compile-fail/vec-add.rs is obsolete, there are no mutable\n  vectors any more, #2711 is closed\n* compile-fail/issue-1451.rs is obsolete, there are no more\n  structural records, #1451 is closed\n* compile-fail/issue-2074.rs is obsolete, an up to date test\n  is in run-pass/nested-enum-same-names.rs, #2074 is closed\n* compile-fail/omitted-arg-wrong-types.rs is obsolete, #2093\n  is closed", "tree": {"sha": "7922638f3174af7f2c21ee3c2740ba6ea63f64f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7922638f3174af7f2c21ee3c2740ba6ea63f64f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ca01676bcbd092b04608cc0eee843b7031e46cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca01676bcbd092b04608cc0eee843b7031e46cb", "html_url": "https://github.com/rust-lang/rust/commit/3ca01676bcbd092b04608cc0eee843b7031e46cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ca01676bcbd092b04608cc0eee843b7031e46cb/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b9484dafd92f442f8ed092e2648340c6cecf1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/53b9484dafd92f442f8ed092e2648340c6cecf1f", "html_url": "https://github.com/rust-lang/rust/commit/53b9484dafd92f442f8ed092e2648340c6cecf1f"}], "stats": {"total": 150, "additions": 0, "deletions": 150}, "files": [{"sha": "ce27cc3be38dcc632119720cbace01632ea6cde8", "filename": "src/test/compile-fail/issue-1451.rs", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs?ref=53b9484dafd92f442f8ed092e2648340c6cecf1f", "patch": "@@ -1,33 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test\n-\n-struct T { f: extern \"Rust\" fn() };\n-struct S { f: extern \"Rust\" fn() };\n-\n-fn fooS(t: S) {\n-}\n-\n-fn fooT(t: T) {\n-}\n-\n-fn bar() {\n-}\n-\n-fn main() {\n-    let x: extern \"Rust\" fn() = bar;\n-    fooS(S {f: x});\n-    fooS(S {f: bar});\n-\n-    let x: extern \"Rust\" fn() = bar;\n-    fooT(T {f: x});\n-    fooT(T {f: bar});\n-}"}, {"sha": "338d0cb439c23437b00a019ef6c350d29b50447a", "filename": "src/test/compile-fail/issue-2074.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fissue-2074.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fissue-2074.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2074.rs?ref=53b9484dafd92f442f8ed092e2648340c6cecf1f", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test\n-\n-fn main() {\n-    let one: || -> uint = || {\n-        enum r { a };\n-        a as uint\n-    };\n-    let two = || -> uint = || {\n-        enum r { a };\n-        a as uint\n-    };\n-    one(); two();\n-}"}, {"sha": "1f1a6849acad5f3aa9958119747713b39446cfb7", "filename": "src/test/compile-fail/omitted-arg-wrong-types.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fomitted-arg-wrong-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fomitted-arg-wrong-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fomitted-arg-wrong-types.rs?ref=53b9484dafd92f442f8ed092e2648340c6cecf1f", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test - #2093\n-\n-fn let_in<T>(x: T, f: |T|) {}\n-\n-fn main() {\n-    let_in(3u, |i| { assert!(i == 3); });\n-    //~^ ERROR expected `uint` but found `int`\n-\n-    let_in(3, |i| { assert!(i == 3u); });\n-    //~^ ERROR expected `int` but found `uint`\n-}"}, {"sha": "3f1b82d1768d6acb964fb65fe0e4d62db41deaa2", "filename": "src/test/compile-fail/vec-add.rs", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fvec-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b9484dafd92f442f8ed092e2648340c6cecf1f/src%2Ftest%2Fcompile-fail%2Fvec-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-add.rs?ref=53b9484dafd92f442f8ed092e2648340c6cecf1f", "patch": "@@ -1,73 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test\n-\n-// FIXME (Issue #2711): + should allow immutable or mutable vectors on\n-// the right hand side in all cases. We are getting compiler errors\n-// about this now, so I'm ignoring the test for now. -eholk\n-\n-fn add(i: ~[int], mut m: ~[int]) {\n-\n-    // Check that:\n-    //  (1) vectors of any two mutabilities can be added\n-    //  (2) result has mutability of lhs\n-\n-   add(i + ~[3],\n-       m + ~[3],\n-       ~[3]);\n-\n-   add(i + ~[3],\n-       m + ~[3],\n-       ~[3]);\n-\n-   add(i + i,\n-       m + i,\n-       i);\n-\n-   add(i + m,\n-       m + m,\n-       m);\n-\n-   add(m + ~[3], //~ ERROR mismatched types\n-       m + ~[3],\n-       m + ~[3]);\n-\n-   add(i + ~[3],\n-       i + ~[3], //~ ERROR mismatched types\n-       i + ~[3]);\n-\n-   add(m + ~[3], //~ ERROR mismatched types\n-       m + ~[3],\n-       m + ~[3]);\n-\n-   add(i + ~[3],\n-       i + ~[3], //~ ERROR mismatched types\n-       i + ~[3]);\n-\n-   add(m + i, //~ ERROR mismatched types\n-       m + i,\n-       m + i);\n-\n-   add(i + i,\n-       i + i, //~ ERROR mismatched types\n-       i + i);\n-\n-   add(m + m, //~ ERROR mismatched types\n-       m + m,\n-       m + m);\n-\n-   add(i + m,\n-       i + m, //~ ERROR mismatched types\n-       i + m);\n-}\n-\n-fn main() {\n-}"}]}