{"sha": "f7ee31e3d784324397c448677d230cc2f3161e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZWUzMWUzZDc4NDMyNDM5N2M0NDg2NzdkMjMwY2MyZjMxNjFlM2M=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-03T23:25:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-03T23:25:35Z"}, "message": "Rollup merge of #61879 - stjepang:stabilize-todo, r=withoutboats\n\nStabilize todo macro\n\nThe `todo!` macro is just another name for `unimplemented!`.\n\nTracking issue: https://github.com/rust-lang/rust/issues/59277\n\nThis PR needs a FCP to merge.\n\nr? @withoutboats", "tree": {"sha": "85c1b9267b27aa966f3559aac93df26718c8ed62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85c1b9267b27aa966f3559aac93df26718c8ed62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7ee31e3d784324397c448677d230cc2f3161e3c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdloNwCRBK7hj4Ov3rIwAAdHIIACp6/X5I8Bm8lh4Q3IWcg5JT\nAoN+jwhKaxuuFh2e+38Dzp+aFGsIrjKOxv2NqUzQ+mPtSTD98A9q0VBSwZXsSuyY\nJIk6gOKAq2TQ7mdhnjWOCEKeBT7HO1WGJDByUIPu+Y2C6QsRpg6J9X0TWYw0JXAz\n9pBMq4lsWAdC2kIMERA0NevA4v1lQqpUvX2xo0U8MLGnaWNXmbklaxC7uMha8aJu\n7sHIlFQMdWrFjmOs+YuKTV70JNiXnN42YuAneaPGpri27hsglHDXfgVTn8TN7z3Y\n5GyGZvPKbfTi5sUKzUUJSu8UG2qG+ElbM8rSH3NMSxnJA4Caf3aQwlketLR8Rsk=\n=zgqD\n-----END PGP SIGNATURE-----\n", "payload": "tree 85c1b9267b27aa966f3559aac93df26718c8ed62\nparent 032a53a06ce293571e51bbe621a5c480e8a28e95\nparent 711f6735bc9461392331842b317abb0525973949\nauthor Tyler Mandry <tmandry@gmail.com> 1570145135 -0700\ncommitter GitHub <noreply@github.com> 1570145135 -0700\n\nRollup merge of #61879 - stjepang:stabilize-todo, r=withoutboats\n\nStabilize todo macro\n\nThe `todo!` macro is just another name for `unimplemented!`.\n\nTracking issue: https://github.com/rust-lang/rust/issues/59277\n\nThis PR needs a FCP to merge.\n\nr? @withoutboats\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ee31e3d784324397c448677d230cc2f3161e3c", "html_url": "https://github.com/rust-lang/rust/commit/f7ee31e3d784324397c448677d230cc2f3161e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7ee31e3d784324397c448677d230cc2f3161e3c/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "032a53a06ce293571e51bbe621a5c480e8a28e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/032a53a06ce293571e51bbe621a5c480e8a28e95", "html_url": "https://github.com/rust-lang/rust/commit/032a53a06ce293571e51bbe621a5c480e8a28e95"}, {"sha": "711f6735bc9461392331842b317abb0525973949", "url": "https://api.github.com/repos/rust-lang/rust/commits/711f6735bc9461392331842b317abb0525973949", "html_url": "https://github.com/rust-lang/rust/commit/711f6735bc9461392331842b317abb0525973949"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "ca1b06fb81a78f534a8774cabec180a3af0873a0", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7ee31e3d784324397c448677d230cc2f3161e3c/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ee31e3d784324397c448677d230cc2f3161e3c/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=f7ee31e3d784324397c448677d230cc2f3161e3c", "patch": "@@ -465,7 +465,7 @@ macro_rules! writeln {\n /// The unsafe counterpart of this macro is the [`unreachable_unchecked`] function, which\n /// will cause undefined behavior if the code is reached.\n ///\n-/// [`panic!`]:  ../std/macro.panic.html\n+/// [`panic!`]: ../std/macro.panic.html\n /// [`unreachable_unchecked`]: ../std/hint/fn.unreachable_unchecked.html\n /// [`std::hint`]: ../std/hint/index.html\n ///\n@@ -474,6 +474,7 @@ macro_rules! writeln {\n /// This will always [`panic!`]\n ///\n /// [`panic!`]: ../std/macro.panic.html\n+///\n /// # Examples\n ///\n /// Match arms:\n@@ -525,6 +526,9 @@ macro_rules! unreachable {\n /// code type-check, or if you're implementing a trait that requires multiple\n /// methods, and you're only planning on using one of them.\n ///\n+/// There is no difference between `unimplemented!` and `todo!` apart from the\n+/// name.\n+///\n /// # Panics\n ///\n /// This will always [panic!](macro.panic.html)\n@@ -579,8 +583,10 @@ macro_rules! unimplemented {\n /// Indicates unfinished code.\n ///\n /// This can be useful if you are prototyping and are just looking to have your\n-/// code typecheck. `todo!` works exactly like `unimplemented!`. The only\n-/// difference between the two macros is the name.\n+/// code typecheck.\n+///\n+/// There is no difference between `unimplemented!` and `todo!` apart from the\n+/// name.\n ///\n /// # Panics\n ///\n@@ -602,8 +608,6 @@ macro_rules! unimplemented {\n /// `baz()`, so we can use `todo!`:\n ///\n /// ```\n-/// #![feature(todo_macro)]\n-///\n /// # trait Foo {\n /// #     fn bar(&self);\n /// #     fn baz(&self);\n@@ -629,7 +633,7 @@ macro_rules! unimplemented {\n /// }\n /// ```\n #[macro_export]\n-#[unstable(feature = \"todo_macro\", issue = \"59277\")]\n+#[stable(feature = \"todo_macro\", since = \"1.39.0\")]\n macro_rules! todo {\n     () => (panic!(\"not yet implemented\"));\n     ($($arg:tt)+) => (panic!(\"not yet implemented: {}\", $crate::format_args!($($arg)+)));"}, {"sha": "5ff32d7adafc23f9b8d89b852623435a49620048", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7ee31e3d784324397c448677d230cc2f3161e3c/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ee31e3d784324397c448677d230cc2f3161e3c/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=f7ee31e3d784324397c448677d230cc2f3161e3c", "patch": "@@ -305,7 +305,6 @@\n #![feature(str_internals)]\n #![feature(test)]\n #![feature(thread_local)]\n-#![feature(todo_macro)]\n #![feature(toowned_clone_into)]\n #![feature(trace_macros)]\n #![feature(try_reserve)]"}]}