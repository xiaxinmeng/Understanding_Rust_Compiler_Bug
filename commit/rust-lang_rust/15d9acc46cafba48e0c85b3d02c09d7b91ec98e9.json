{"sha": "15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZDlhY2M0NmNhZmJhNDhlMGM4NWIzZDAyYzA5ZDdiOTFlYzk4ZTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-03-05T19:04:36Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-08T20:41:42Z"}, "message": "librustdoc: Fix librustdoc for the `Vec<T>` change.", "tree": {"sha": "0a998c988e7645983976a061ce6c4496506aa19b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a998c988e7645983976a061ce6c4496506aa19b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "html_url": "https://github.com/rust-lang/rust/commit/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43c07244b32d7aea97e02ededa5797308515e26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/43c07244b32d7aea97e02ededa5797308515e26b", "html_url": "https://github.com/rust-lang/rust/commit/43c07244b32d7aea97e02ededa5797308515e26b"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f26977e211ca20d7a94827e7ef19cb8197d90808", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "patch": "@@ -110,6 +110,8 @@ impl Clean<ExternalCrate> for cstore::crate_metadata {\n         ExternalCrate {\n             name: self.name.to_owned(),\n             attrs: decoder::get_crate_attributes(self.data()).clean()\n+                                                             .move_iter()\n+                                                             .collect(),\n         }\n     }\n }"}, {"sha": "58bed8a9df993d495db52bb8163c93c960509b7f", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "patch": "@@ -53,7 +53,7 @@ fn get_ast_and_resolve(cpath: &Path,\n     let sessopts = @driver::session::Options {\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: @RefCell::new(libs),\n-        crate_types: ~[driver::session::CrateTypeDylib],\n+        crate_types: vec!(driver::session::CrateTypeDylib),\n         .. (*rustc::driver::session::basic_options()).clone()\n     };\n "}, {"sha": "f34ce016f2825f526c319a00c03e1e7a0df78c40", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d9acc46cafba48e0c85b3d02c09d7b91ec98e9/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=15d9acc46cafba48e0c85b3d02c09d7b91ec98e9", "patch": "@@ -44,7 +44,7 @@ pub fn run(input: &str, matches: &getopts::Matches) -> int {\n     let sessopts = @session::Options {\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: libs,\n-        crate_types: ~[session::CrateTypeDylib],\n+        crate_types: vec!(session::CrateTypeDylib),\n         .. (*session::basic_options()).clone()\n     };\n \n@@ -106,8 +106,8 @@ fn runtest(test: &str, cratename: &str, libs: HashSet<Path>, should_fail: bool)\n     let sessopts = @session::Options {\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: @RefCell::new(libs),\n-        crate_types: ~[session::CrateTypeExecutable],\n-        output_types: ~[link::OutputTypeExe],\n+        crate_types: vec!(session::CrateTypeExecutable),\n+        output_types: vec!(link::OutputTypeExe),\n         cg: session::CodegenOptions {\n             prefer_dynamic: true,\n             .. session::basic_codegen_options()"}]}