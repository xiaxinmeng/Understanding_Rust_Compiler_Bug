{"sha": "6b084bad250e58c4003a1df40584f6385f44aac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMDg0YmFkMjUwZTU4YzQwMDNhMWRmNDA1ODRmNjM4NWY0NGFhYzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-14T23:25:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-15T01:56:22Z"}, "message": "core::rt: Insert calls to run_cleanup_tasks after all context switches", "tree": {"sha": "9611d3033fd56af3e4a63d6eb045ba93fbf58500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9611d3033fd56af3e4a63d6eb045ba93fbf58500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b084bad250e58c4003a1df40584f6385f44aac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b084bad250e58c4003a1df40584f6385f44aac1", "html_url": "https://github.com/rust-lang/rust/commit/6b084bad250e58c4003a1df40584f6385f44aac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b084bad250e58c4003a1df40584f6385f44aac1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cb78e736f89cf286d454d7af05b470d570be1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb78e736f89cf286d454d7af05b470d570be1a7", "html_url": "https://github.com/rust-lang/rust/commit/1cb78e736f89cf286d454d7af05b470d570be1a7"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "62262a5a520d55e360fa32c0c3c849b1f6eb44d9", "filename": "src/libcore/rt/sched.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6b084bad250e58c4003a1df40584f6385f44aac1/src%2Flibcore%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b084bad250e58c4003a1df40584f6385f44aac1/src%2Flibcore%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched.rs?ref=6b084bad250e58c4003a1df40584f6385f44aac1", "patch": "@@ -212,7 +212,7 @@ pub impl Scheduler {\n             Context::swap(last_task_context, sched_context);\n         }\n \n-        // XXX: Should probably run cleanup jobs\n+        self.run_cleanup_jobs();\n     }\n \n     /// Switch directly to another task, without going through the scheduler.\n@@ -233,7 +233,7 @@ pub impl Scheduler {\n             Context::swap(last_task_context, next_task_context);\n         }\n \n-        // XXX: Should probably run cleanup jobs\n+        self.run_cleanup_jobs();\n     }\n \n     // * Other stuff\n@@ -245,7 +245,6 @@ pub impl Scheduler {\n     }\n \n     fn run_cleanup_jobs(&mut self) {\n-        assert!(!self.in_task_context());\n         rtdebug!(\"running cleanup jobs\");\n \n         while !self.cleanup_jobs.is_empty() {\n@@ -325,8 +324,12 @@ pub impl Task {\n     priv fn build_start_wrapper(start: ~fn()) -> ~fn() {\n         // XXX: The old code didn't have this extra allocation\n         let wrapper: ~fn() = || {\n-            // XXX: Should probably run scheduler cleanup jobs for situations\n-            // where a task context switches directly to a new task\n+            // This is the first code to execute after the initial\n+            // context switch to the task. The previous context may\n+            // have asked us to do some cleanup.\n+            let mut sched = ThreadLocalScheduler::new();\n+            let sched = sched.get_scheduler();\n+            sched.run_cleanup_jobs();\n \n             start();\n "}]}