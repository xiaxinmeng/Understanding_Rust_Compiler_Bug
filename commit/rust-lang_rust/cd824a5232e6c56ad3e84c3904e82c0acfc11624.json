{"sha": "cd824a5232e6c56ad3e84c3904e82c0acfc11624", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODI0YTUyMzJlNmM1NmFkM2U4NGMzOTA0ZTgyYzBhY2ZjMTE2MjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-02T10:08:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-02T10:08:03Z"}, "message": "Rollup merge of #71712 - RalfJung:error-backtrace, r=oli-obk\n\nMiri: port error backtraces to std::backtrace\n\nNo need to pull in an external dependency if libstd already includes this feature (using the same dependency internally, but... still).\n\nr? @oli-obk", "tree": {"sha": "230a4ca7ff6326b4d6adec85206f5dee865367a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/230a4ca7ff6326b4d6adec85206f5dee865367a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd824a5232e6c56ad3e84c3904e82c0acfc11624", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJerUaECRBK7hj4Ov3rIwAAdHIIAKEvvMLBjx+5rCwbaKzRIOSc\nceO910s/+etgo218bzd6c7gIBVJpfCZhe+1twLoAatF7CEVwPM7jsaLH/qDJ7KmB\nI0P6cfRLonzArntLNnzyX472rjHpSyvJX3pFWl0lC83FJWtQWTBBl1SX2+vsw0w7\nLG5wBibUevnpHqtnB+tSvnXIUb2TRsv5+RYRjOmyMpbUA0aJHn1yMNoOy6PM3INR\nTJTOYLlHTpR+cQhom4dDWE9SSKm1cUzTZ//105NmX4/kT5qOg3skwGOXuNgqM+0L\nyHQwXG3GYNPY1wXOQowO5SpIMsKjajLGpun0PWEER04+l6ZG3fdIRjWVO3kYnL8=\n=v+J4\n-----END PGP SIGNATURE-----\n", "payload": "tree 230a4ca7ff6326b4d6adec85206f5dee865367a1\nparent dae90c195989b09475b6c0225a3018cbd7afa587\nparent 30b32c6570ded694362e21fc35101c106c4cd8b8\nauthor Ralf Jung <post@ralfj.de> 1588414083 +0200\ncommitter GitHub <noreply@github.com> 1588414083 +0200\n\nRollup merge of #71712 - RalfJung:error-backtrace, r=oli-obk\n\nMiri: port error backtraces to std::backtrace\n\nNo need to pull in an external dependency if libstd already includes this feature (using the same dependency internally, but... still).\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd824a5232e6c56ad3e84c3904e82c0acfc11624", "html_url": "https://github.com/rust-lang/rust/commit/cd824a5232e6c56ad3e84c3904e82c0acfc11624", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd824a5232e6c56ad3e84c3904e82c0acfc11624/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dae90c195989b09475b6c0225a3018cbd7afa587", "url": "https://api.github.com/repos/rust-lang/rust/commits/dae90c195989b09475b6c0225a3018cbd7afa587", "html_url": "https://github.com/rust-lang/rust/commit/dae90c195989b09475b6c0225a3018cbd7afa587"}, {"sha": "30b32c6570ded694362e21fc35101c106c4cd8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/30b32c6570ded694362e21fc35101c106c4cd8b8", "html_url": "https://github.com/rust-lang/rust/commit/30b32c6570ded694362e21fc35101c106c4cd8b8"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "8bd1e5f3308b443f69267f5129e991ba06281e7f", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd824a5232e6c56ad3e84c3904e82c0acfc11624/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cd824a5232e6c56ad3e84c3904e82c0acfc11624/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=cd824a5232e6c56ad3e84c3904e82c0acfc11624", "patch": "@@ -3978,7 +3978,6 @@ name = \"rustc_middle\"\n version = \"0.0.0\"\n dependencies = [\n  \"arena\",\n- \"backtrace\",\n  \"bitflags\",\n  \"byteorder\",\n  \"log\","}, {"sha": "398ba4d72d44901ea2213c88aa4b2b39d6053ec8", "filename": "src/librustc_middle/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FCargo.toml?ref=cd824a5232e6c56ad3e84c3904e82c0acfc11624", "patch": "@@ -30,7 +30,6 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n-backtrace = \"0.3.40\"\n byteorder = { version = \"1.3\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n measureme = \"0.7.1\""}, {"sha": "9b38b43c93ae21c9e9fb71c936253a17de093357", "filename": "src/librustc_middle/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flib.rs?ref=cd824a5232e6c56ad3e84c3904e82c0acfc11624", "patch": "@@ -23,6 +23,7 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![feature(backtrace)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "4b88467ac110ff95614e1202f8ecdcf2c87d7321", "filename": "src/librustc_middle/mir/interpret/error.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs?ref=cd824a5232e6c56ad3e84c3904e82c0acfc11624", "patch": "@@ -6,7 +6,6 @@ use crate::ty::query::TyCtxtAt;\n use crate::ty::tls;\n use crate::ty::{self, layout, Ty};\n \n-use backtrace::Backtrace;\n use rustc_data_structures::sync::Lock;\n use rustc_errors::{struct_span_err, DiagnosticBuilder, ErrorReported};\n use rustc_hir as hir;\n@@ -15,7 +14,7 @@ use rustc_macros::HashStable;\n use rustc_session::CtfeBacktrace;\n use rustc_span::{def_id::DefId, Pos, Span};\n use rustc_target::abi::{Align, Size};\n-use std::{any::Any, fmt, mem};\n+use std::{any::Any, backtrace::Backtrace, fmt, mem};\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, HashStable, RustcEncodable, RustcDecodable)]\n pub enum ErrorHandled {\n@@ -219,16 +218,15 @@ impl fmt::Display for InterpErrorInfo<'_> {\n }\n \n impl InterpErrorInfo<'_> {\n-    pub fn print_backtrace(&mut self) {\n-        if let Some(ref mut backtrace) = self.backtrace {\n-            print_backtrace(&mut *backtrace);\n+    pub fn print_backtrace(&self) {\n+        if let Some(backtrace) = self.backtrace.as_ref() {\n+            print_backtrace(backtrace);\n         }\n     }\n }\n \n-fn print_backtrace(backtrace: &mut Backtrace) {\n-    backtrace.resolve();\n-    eprintln!(\"\\n\\nAn error occurred in miri:\\n{:?}\", backtrace);\n+fn print_backtrace(backtrace: &Backtrace) {\n+    eprintln!(\"\\n\\nAn error occurred in miri:\\n{}\", backtrace);\n }\n \n impl From<ErrorHandled> for InterpErrorInfo<'_> {\n@@ -255,11 +253,11 @@ impl<'tcx> From<InterpError<'tcx>> for InterpErrorInfo<'tcx> {\n \n         let backtrace = match capture_backtrace {\n             CtfeBacktrace::Disabled => None,\n-            CtfeBacktrace::Capture => Some(Box::new(Backtrace::new_unresolved())),\n+            CtfeBacktrace::Capture => Some(Box::new(Backtrace::force_capture())),\n             CtfeBacktrace::Immediate => {\n                 // Print it now.\n-                let mut backtrace = Backtrace::new_unresolved();\n-                print_backtrace(&mut backtrace);\n+                let backtrace = Backtrace::force_capture();\n+                print_backtrace(&backtrace);\n                 None\n             }\n         };"}, {"sha": "b165a69433db1377179d654b7b836c0c4f6e380f", "filename": "src/librustc_mir/const_eval/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd824a5232e6c56ad3e84c3904e82c0acfc11624/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs?ref=cd824a5232e6c56ad3e84c3904e82c0acfc11624", "patch": "@@ -52,7 +52,7 @@ impl Error for ConstEvalErrKind {}\n /// Should be called only if the error is actually going to to be reported!\n pub fn error_to_const_error<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>>(\n     ecx: &InterpCx<'mir, 'tcx, M>,\n-    mut error: InterpErrorInfo<'tcx>,\n+    error: InterpErrorInfo<'tcx>,\n ) -> ConstEvalErr<'tcx> {\n     error.print_backtrace();\n     let stacktrace = ecx.generate_stacktrace();"}]}