{"sha": "b0980b7d79e8209ba91a2a85c720f238bbc478ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOTgwYjdkNzllODIwOWJhOTFhMmE4NWM3MjBmMjM4YmJjNDc4ZWQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-28T20:14:04Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-28T20:19:20Z"}, "message": "Add a very minimal set of .cfi_* statements to get part of backtraces\nworking (on hello world at least):\n\n~/inst/gdb/bin/gdb --args ./foo\n(gdb) b write\n...\n(gdb) r\n...\nBreakpoint 1, 0xf7f04270 in write () from /lib32/libc.so.6\n(gdb) bt\n0  0xf7f04270 in write () from /lib32/libc.so.6\n1  0x0804931a in rust_native_cdecl_3 ()\n2  0x080487d7 in _rust_wrapper3_ ()\n3  0x0804890a in _rust_fn5_main ()\n4  0x08049440 in rust_native_cdecl_7 ()", "tree": {"sha": "54fec2dda56b799aafa2af918971eea939628b1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54fec2dda56b799aafa2af918971eea939628b1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0980b7d79e8209ba91a2a85c720f238bbc478ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0980b7d79e8209ba91a2a85c720f238bbc478ed", "html_url": "https://github.com/rust-lang/rust/commit/b0980b7d79e8209ba91a2a85c720f238bbc478ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0980b7d79e8209ba91a2a85c720f238bbc478ed/comments", "author": null, "committer": null, "parents": [{"sha": "6daca7ea8d0ef1f99c928a0b6bacc8cefc17969a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6daca7ea8d0ef1f99c928a0b6bacc8cefc17969a", "html_url": "https://github.com/rust-lang/rust/commit/6daca7ea8d0ef1f99c928a0b6bacc8cefc17969a"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "09b18309f3f2d983d637ad1068a64a949199d46d", "filename": "src/comp/back/x86.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b0980b7d79e8209ba91a2a85c720f238bbc478ed/src%2Fcomp%2Fback%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0980b7d79e8209ba91a2a85c720f238bbc478ed/src%2Fcomp%2Fback%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fx86.rs?ref=b0980b7d79e8209ba91a2a85c720f238bbc478ed", "patch": "@@ -11,13 +11,42 @@ fn wstr(int i) -> str {\n     ret istr(i * wordsz);\n }\n \n+fn start() -> vec[str] {\n+    ret vec(\".cfi_startproc\");\n+}\n+\n+fn end() -> vec[str] {\n+    ret vec(\".cfi_endproc\");\n+}\n+\n fn save_callee_saves() -> vec[str] {\n     ret vec(\"pushl %ebp\",\n             \"pushl %edi\",\n             \"pushl %esi\",\n             \"pushl %ebx\");\n }\n \n+fn save_callee_saves_with_cfi() -> vec[str] {\n+    auto offset = 8;\n+    auto t;\n+    t  = vec(\"pushl %ebp\");\n+    t += vec(\".cfi_def_cfa_offset \" + istr(offset));\n+    t += vec(\".cfi_offset 5, -\" + istr(offset));\n+\n+    t += vec(\"pushl %edi\");\n+    offset += 4;\n+    t += vec(\".cfi_def_cfa_offset \" + istr(offset));\n+\n+    t += vec(\"pushl %esi\");\n+    offset += 4;\n+    t += vec(\".cfi_def_cfa_offset \" + istr(offset));\n+\n+    t += vec(\"pushl %ebx\");\n+    offset += 4;\n+    t += vec(\".cfi_def_cfa_offset \" + istr(offset));\n+    ret t;\n+}\n+\n fn restore_callee_saves() -> vec[str] {\n     ret vec(\"popl  %ebx\",\n             \"popl  %esi\",\n@@ -211,9 +240,11 @@ fn native_glue(int n_args, bool pass_task) -> vec[str] {\n     auto carg = bind copy_arg(pass_task, _);\n \n     ret\n-        save_callee_saves()\n+        start()\n+        + save_callee_saves_with_cfi()\n \n         + vec(\"movl  %esp, %ebp     # ebp = rust_sp\")\n+        + vec(\".cfi_def_cfa_register 5\")\n \n         + store_esp_to_rust_sp_second_arg()\n         + load_esp_from_runtime_sp_second_arg()\n@@ -229,7 +260,8 @@ fn native_glue(int n_args, bool pass_task) -> vec[str] {\n \n         + load_esp_from_rust_sp_second_arg()\n         + restore_callee_saves()\n-        + vec(\"ret\");\n+        + vec(\"ret\")\n+        + end();\n \n }\n "}, {"sha": "43369b6d9be9fb693034784d0c99808a461c6350", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0980b7d79e8209ba91a2a85c720f238bbc478ed/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b0980b7d79e8209ba91a2a85c720f238bbc478ed/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=b0980b7d79e8209ba91a2a85c720f238bbc478ed", "patch": "@@ -54,7 +54,7 @@ extern \"C\" void LLVMRustWriteOutputFile(LLVMPassManagerRef PMR, LLVMModuleRef M,\n                                         LLVMCodeGenFileType FileType) {\n \n   // Set compilation options.\n-  llvm::NoFramePointerElim = true;\n+  llvm::UnwindTablesMandatory = true;\n \n   InitializeAllTargets();\n   InitializeAllAsmPrinters();"}]}