{"sha": "4d11206ee78cd53bfd104c6073f3c8169da8828d", "node_id": "C_kwDOAAsO6NoAKDRkMTEyMDZlZTc4Y2Q1M2JmZDEwNGM2MDczZjNjODE2OWRhODgyOGQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-22T11:08:33Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-22T11:13:19Z"}, "message": "Tweak comments.", "tree": {"sha": "23685f8c4ada32a7e65bae6b41a9b41869fb04bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23685f8c4ada32a7e65bae6b41a9b41869fb04bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d11206ee78cd53bfd104c6073f3c8169da8828d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d11206ee78cd53bfd104c6073f3c8169da8828d", "html_url": "https://github.com/rust-lang/rust/commit/4d11206ee78cd53bfd104c6073f3c8169da8828d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d11206ee78cd53bfd104c6073f3c8169da8828d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ecf30d67d7e82722ac7aff232378739e92f33e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ecf30d67d7e82722ac7aff232378739e92f33e6", "html_url": "https://github.com/rust-lang/rust/commit/6ecf30d67d7e82722ac7aff232378739e92f33e6"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "0dba9a32f9cee933c098232b3b00e604c9dfbad1", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d11206ee78cd53bfd104c6073f3c8169da8828d/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d11206ee78cd53bfd104c6073f3c8169da8828d/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=4d11206ee78cd53bfd104c6073f3c8169da8828d", "patch": "@@ -1216,12 +1216,13 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                     }\n                 }\n             ));\n+        } else {\n+            // For non-enum, there is only one variant, and its def_id is the adt's.\n+            debug_assert_eq!(adt_def.variants().len(), 1);\n+            debug_assert_eq!(adt_def.non_enum_variant().def_id, def_id);\n+            // Therefore, the loop over variants will encode its fields as the adt's children.\n         }\n \n-        // In some cases, along with the item itself, we also\n-        // encode some sub-items. Usually we want some info from the item\n-        // so it's easier to do that here then to wait until we would encounter\n-        // normally in the visitor walk.\n         for variant in adt_def.variants().iter() {\n             let data = VariantData {\n                 discr: variant.discr,"}]}