{"sha": "9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYjUwNWEzYzc3OWM3YWQ5YjA3OGQ3ZDI0YWNlNGUzYjA1ZDdmMWU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-06T10:36:06Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-06T11:11:31Z"}, "message": "lintcheck: add git source as an example and update logs", "tree": {"sha": "365bd306fb34c65b903197b4a57dcf0b40a2ba6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/365bd306fb34c65b903197b4a57dcf0b40a2ba6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "html_url": "https://github.com/rust-lang/rust/commit/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10fbafa562b3196dd0cc1b8496e9866e4afab5cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/10fbafa562b3196dd0cc1b8496e9866e4afab5cb", "html_url": "https://github.com/rust-lang/rust/commit/10fbafa562b3196dd0cc1b8496e9866e4afab5cb"}], "stats": {"total": 84, "additions": 71, "deletions": 13}, "files": [{"sha": "c83b4b2ba4224addbe64f32e34d6ed820016d8bc", "filename": "clippy_dev/lintcheck_crates.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/clippy_dev%2Flintcheck_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/clippy_dev%2Flintcheck_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Flintcheck_crates.toml?ref=9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "patch": "@@ -12,6 +12,7 @@ bitflags = {name = \"bitflags\", versions = ['1.2.1']}\n libc = {name = \"libc\", versions = ['0.2.81']}\n log = {name = \"log\", versions = ['0.4.11']}\n proc-macro2 = {name = \"proc-macro2\", versions = ['1.0.24']}\n+puffin = {name = \"puffin\", git_url = \"https://github.com/EmbarkStudios/puffin\", git_hash = \"02dd4a3\"}\n quote = {name = \"quote\", versions = ['1.0.7']}\n rand = {name = \"rand\", versions = ['0.7.3']}\n rand_core = {name = \"rand_core\", versions = ['0.6.0']}"}, {"sha": "0473b09b1d7ca0af8e94a5f7ee8e028a2c653d29", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "patch": "@@ -118,6 +118,7 @@ impl CrateSource {\n                 };\n                 // clone the repo if we have not done so\n                 if !repo_path.is_dir() {\n+                    println!(\"Cloning {} and checking out {}\", url, commit);\n                     Command::new(\"git\")\n                         .arg(\"clone\")\n                         .arg(url)"}, {"sha": "cee18278b42660c50e8f1239c7b3ddbff586cde6", "filename": "lintcheck-logs/logs.txt", "status": "modified", "additions": 69, "deletions": 13, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/lintcheck-logs%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e/lintcheck-logs%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flogs.txt?ref=9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "patch": "@@ -2086,6 +2086,61 @@ proc-macro2-1.0.24/src/parse.rs:808:15 clippy::explicit_iter_loop \"it is more co\n proc-macro2-1.0.24/src/wrapper.rs:415:24 clippy::trivially_copy_pass_by_ref \"this argument (4 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)\"\n proc-macro2-1.0.24/src/wrapper.rs:429:23 clippy::trivially_copy_pass_by_ref \"this argument (4 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)\"\n proc-macro2-1.0.24/src/wrapper.rs:492:17 clippy::trivially_copy_pass_by_ref \"this argument (4 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:158:15 clippy::cast_precision_loss \"casting `i64` to `f32` causes a loss of precision (`i64` is 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:175:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:183:5 clippy::too_many_lines \"this function has too many lines (115/100)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:1:5 clippy::wildcard_imports \"usage of wildcard import\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:207:16 clippy::collapsible_else_if \"this `else { if .. }` block can be collapsed\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:271:67 clippy::cast_precision_loss \"casting `i64` to `f32` causes a loss of precision (`i64` is 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:2:5 clippy::wildcard_imports \"usage of wildcard import\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:376:29 clippy::cast_precision_loss \"casting `i64` to `f32` causes a loss of precision (`i64` is 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:381:44 clippy::cast_precision_loss \"casting `i64` to `f32` causes a loss of precision (`i64` is 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:453:9 clippy::similar_names \"binding's name is too similar to existing binding\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:540:14 clippy::cast_possible_truncation \"casting `f64` to `f32` may truncate the value\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:551:5 clippy::cast_precision_loss \"casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:584:39 clippy::cast_precision_loss \"casting `usize` to `f32` causes a loss of precision (`usize` is 32 or 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:59:26 clippy::unsafe_derive_deserialize \"you are deriving `serde::Deserialize` on a type that has methods using `unsafe`\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:61:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:627:39 clippy::cast_precision_loss \"casting `usize` to `f32` causes a loss of precision (`usize` is 32 or 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:674:47 clippy::cast_precision_loss \"casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\"\n+puffin-02dd4a3/puffin-imgui/src/ui.rs:690:9 clippy::cast_precision_loss \"casting `usize` to `f32` causes a loss of precision (`usize` is 32 or 64 bits wide, but `f32`'s mantissa is only 23 bits wide)\"\n+puffin-02dd4a3/puffin/src/data.rs:102:25 clippy::cast_possible_truncation \"casting `usize` to `u8` may truncate the value\"\n+puffin-02dd4a3/puffin/src/data.rs:112:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/data.rs:116:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+puffin-02dd4a3/puffin/src/data.rs:137:24 clippy::match_same_arms \"this `match` has identical arm bodies\"\n+puffin-02dd4a3/puffin/src/data.rs:177:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+puffin-02dd4a3/puffin/src/data.rs:211:21 clippy::cast_possible_truncation \"casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers\"\n+puffin-02dd4a3/puffin/src/data.rs:24:5 clippy::wildcard_imports \"usage of wildcard import\"\n+puffin-02dd4a3/puffin/src/data.rs:75:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+puffin-02dd4a3/puffin/src/lib.rs:113:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:147:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+puffin-02dd4a3/puffin/src/lib.rs:147:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+puffin-02dd4a3/puffin/src/lib.rs:165:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+puffin-02dd4a3/puffin/src/lib.rs:200:21 clippy::default_trait_access \"calling `Stream::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/lib.rs:257:78 clippy::default_trait_access \"calling `std::cell::RefCell::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/lib.rs:297:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:302:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:308:28 clippy::default_trait_access \"calling `FullProfileData::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/lib.rs:316:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:321:5 clippy::cast_possible_truncation \"casting `u128` to `i64` may truncate the value\"\n+puffin-02dd4a3/puffin/src/lib.rs:348:28 clippy::default_trait_access \"calling `std::marker::PhantomData::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/lib.rs:359:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:375:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:376:5 clippy::option_if_let_else \"use Option::map_or instead of an if let/else\"\n+puffin-02dd4a3/puffin/src/lib.rs:377:9 clippy::option_if_let_else \"use Option::map_or instead of an if let/else\"\n+puffin-02dd4a3/puffin/src/lib.rs:406:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:408:5 clippy::option_if_let_else \"use Option::map_or instead of an if let/else\"\n+puffin-02dd4a3/puffin/src/lib.rs:69:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:73:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/lib.rs:77:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/merge.rs:21:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n+puffin-02dd4a3/puffin/src/merge.rs:28:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n+puffin-02dd4a3/puffin/src/merge.rs:28:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+puffin-02dd4a3/puffin/src/merge.rs:35:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+puffin-02dd4a3/puffin/src/merge.rs:35:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n+puffin-02dd4a3/puffin/src/merge.rs:64:43 clippy::default_trait_access \"calling `std::vec::Vec::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/merge.rs:65:54 clippy::default_trait_access \"calling `std::collections::HashMap::default()` is more clear than this expression\"\n+puffin-02dd4a3/puffin/src/merge.rs:9:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n quote-1.0.7/src/ext.rs:10:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n quote-1.0.7/src/ext.rs:7:5 clippy::doc_markdown \"you should put `TokenStream` between ticks in the documentation\"\n quote-1.0.7/src/ident_fragment.rs:13:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n@@ -3383,6 +3438,7 @@ clippy::should_implement_trait 1\n clippy::stable_sort_primitive 1\n clippy::unit_arg 1\n clippy::unnecessary_lazy_evaluations 1\n+clippy::unsafe_derive_deserialize 1\n clippy::used_underscore_binding 1\n clippy::verbose_bit_mask 1\n clippy::while_let_on_iterator 1\n@@ -3410,7 +3466,6 @@ clippy::ptr_arg 3\n clippy::zero_ptr 3\n clippy::let_underscore_drop 4\n clippy::too_many_arguments 4\n-clippy::collapsible_else_if 5\n clippy::explicit_iter_loop 5\n clippy::field_reassign_with_default 5\n clippy::identity_op 5\n@@ -3419,6 +3474,7 @@ clippy::match_like_matches_macro 5\n clippy::needless_return 5\n clippy::new_without_default 5\n clippy::ptr_as_ptr 5\n+clippy::collapsible_else_if 6\n clippy::manual_strip 6\n clippy::non_ascii_literal 6\n clippy::single_component_path_imports 6\n@@ -3436,12 +3492,11 @@ clippy::missing_safety_doc 10\n clippy::needless_doctest_main 10\n clippy::multiple_crate_versions 11\n clippy::needless_lifetimes 12\n-clippy::option_if_let_else 12\n clippy::cargo_common_metadata 13\n clippy::shadow_unrelated 13\n clippy::linkedlist 14\n clippy::single_char_add_str 14\n-clippy::default_trait_access 16\n+clippy::option_if_let_else 15\n clippy::needless_pass_by_value 18\n clippy::upper_case_acronyms 18\n clippy::cast_possible_wrap 19\n@@ -3452,26 +3507,27 @@ clippy::unusual_byte_groupings 19\n clippy::map_unwrap_or 20\n clippy::struct_excessive_bools 20\n clippy::redundant_static_lifetimes 21\n+clippy::default_trait_access 22\n clippy::cast_lossless 23\n clippy::trivially_copy_pass_by_ref 26\n clippy::redundant_else 29\n-clippy::too_many_lines 31\n-clippy::cast_precision_loss 35\n+clippy::too_many_lines 32\n clippy::if_not_else 35\n clippy::enum_glob_use 40\n clippy::unseparated_literal_suffix 41\n+clippy::cast_precision_loss 44\n clippy::single_match_else 45\n clippy::inline_always 59\n-clippy::match_same_arms 64\n-clippy::similar_names 77\n-clippy::cast_possible_truncation 91\n-clippy::missing_panics_doc 106\n+clippy::match_same_arms 65\n+clippy::similar_names 78\n+clippy::cast_possible_truncation 95\n+clippy::missing_panics_doc 108\n clippy::redundant_field_names 111\n clippy::redundant_closure_for_method_calls 135\n-clippy::module_name_repetitions 137\n clippy::items_after_statements 139\n-clippy::wildcard_imports 160\n+clippy::module_name_repetitions 142\n+clippy::wildcard_imports 163\n clippy::doc_markdown 178\n-clippy::missing_errors_doc 338\n+clippy::missing_errors_doc 343\n clippy::unreadable_literal 365\n-clippy::must_use_candidate 552\n+clippy::must_use_candidate 565"}]}