{"sha": "4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMGRhNGNmMmM3YTJiNTkwM2ZkMWI4YmMxMjRmODk2M2NlMWI1MzU=", "commit": {"author": {"name": "oberien", "email": "jaro.fietz@gmx.de", "date": "2018-01-19T23:41:21Z"}, "committer": {"name": "oberien", "email": "jaro.fietz@gmx.de", "date": "2018-01-19T23:41:21Z"}, "message": "Spacing", "tree": {"sha": "d0d06d6e6266dc5d32a72f214fd44259dccb7e73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0d06d6e6266dc5d32a72f214fd44259dccb7e73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535", "html_url": "https://github.com/rust-lang/rust/commit/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535/comments", "author": {"login": "oberien", "id": 4820508, "node_id": "MDQ6VXNlcjQ4MjA1MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4820508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberien", "html_url": "https://github.com/oberien", "followers_url": "https://api.github.com/users/oberien/followers", "following_url": "https://api.github.com/users/oberien/following{/other_user}", "gists_url": "https://api.github.com/users/oberien/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberien/subscriptions", "organizations_url": "https://api.github.com/users/oberien/orgs", "repos_url": "https://api.github.com/users/oberien/repos", "events_url": "https://api.github.com/users/oberien/events{/privacy}", "received_events_url": "https://api.github.com/users/oberien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oberien", "id": 4820508, "node_id": "MDQ6VXNlcjQ4MjA1MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4820508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberien", "html_url": "https://github.com/oberien", "followers_url": "https://api.github.com/users/oberien/followers", "following_url": "https://api.github.com/users/oberien/following{/other_user}", "gists_url": "https://api.github.com/users/oberien/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberien/subscriptions", "organizations_url": "https://api.github.com/users/oberien/orgs", "repos_url": "https://api.github.com/users/oberien/repos", "events_url": "https://api.github.com/users/oberien/events{/privacy}", "received_events_url": "https://api.github.com/users/oberien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f72b7f7c86b16fe8b76c4eb02052943dd6ef1ab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f72b7f7c86b16fe8b76c4eb02052943dd6ef1ab2", "html_url": "https://github.com/rust-lang/rust/commit/f72b7f7c86b16fe8b76c4eb02052943dd6ef1ab2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7314fac282b664fe2e92de6ee8fd7a694e955e18", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=4a0da4cf2c7a2b5903fd1b8bc124f8963ce1b535", "patch": "@@ -721,7 +721,7 @@ impl<I> Iterator for StepBy<I> where I: Iterator {\n         // overflow handling\n         loop {\n             let mul = n.checked_mul(step);\n-            if unsafe { intrinsics::likely(mul.is_some())} {\n+            if unsafe { intrinsics::likely(mul.is_some()) } {\n                 return self.iter.nth(mul.unwrap() - 1);\n             }\n             let div_n = usize::MAX / n;"}]}