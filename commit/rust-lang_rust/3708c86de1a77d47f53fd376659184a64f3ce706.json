{"sha": "3708c86de1a77d47f53fd376659184a64f3ce706", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MDhjODZkZTFhNzdkNDdmNTNmZDM3NjY1OTE4NGE2NGYzY2U3MDY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-10-02T12:19:52Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-18T13:21:20Z"}, "message": "Treat booleans as integers with valid range 0..=1", "tree": {"sha": "9862d9d5fe98d2dc0096e46611456726189849de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9862d9d5fe98d2dc0096e46611456726189849de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3708c86de1a77d47f53fd376659184a64f3ce706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3708c86de1a77d47f53fd376659184a64f3ce706", "html_url": "https://github.com/rust-lang/rust/commit/3708c86de1a77d47f53fd376659184a64f3ce706", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3708c86de1a77d47f53fd376659184a64f3ce706/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99852e0db6cdb62894e87eae2a41310b8400a5bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/99852e0db6cdb62894e87eae2a41310b8400a5bf", "html_url": "https://github.com/rust-lang/rust/commit/99852e0db6cdb62894e87eae2a41310b8400a5bf"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "ac5e114d45bf43cd5689e901a94d5e619c79feaf", "filename": "compiler/rustc_mir_build/src/thir/pattern/_match.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3708c86de1a77d47f53fd376659184a64f3ce706/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3708c86de1a77d47f53fd376659184a64f3ce706/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs?ref=3708c86de1a77d47f53fd376659184a64f3ce706", "patch": "@@ -1485,9 +1485,7 @@ fn all_constructors<'a, 'tcx>(\n         )\n     };\n     match *pcx.ty.kind() {\n-        ty::Bool => {\n-            [true, false].iter().map(|&b| ConstantValue(ty::Const::from_bool(cx.tcx, b))).collect()\n-        }\n+        ty::Bool => vec![make_range(0, 1)],\n         ty::Array(ref sub_ty, len) if len.try_eval_usize(cx.tcx, cx.param_env).is_some() => {\n             let len = len.eval_usize(cx.tcx, cx.param_env);\n             if len != 0 && cx.is_uninhabited(sub_ty) {\n@@ -1600,7 +1598,7 @@ impl<'tcx> IntRange<'tcx> {\n     #[inline]\n     fn is_integral(ty: Ty<'_>) -> bool {\n         match ty.kind() {\n-            ty::Char | ty::Int(_) | ty::Uint(_) => true,\n+            ty::Char | ty::Int(_) | ty::Uint(_) | ty::Bool => true,\n             _ => false,\n         }\n     }\n@@ -1622,6 +1620,7 @@ impl<'tcx> IntRange<'tcx> {\n     #[inline]\n     fn integral_size_and_signed_bias(tcx: TyCtxt<'tcx>, ty: Ty<'_>) -> Option<(Size, u128)> {\n         match *ty.kind() {\n+            ty::Bool => Some((Size::from_bytes(1), 0)),\n             ty::Char => Some((Size::from_bytes(4), 0)),\n             ty::Int(ity) => {\n                 let size = Integer::from_attr(&tcx, SignedInt(ity)).size();"}]}