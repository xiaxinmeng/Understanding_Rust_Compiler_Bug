{"sha": "7cfe5de21429c655376d7cad1d39ba00937da67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZmU1ZGUyMTQyOWM2NTUzNzZkN2NhZDFkMzliYTAwOTM3ZGE2N2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-23T08:17:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-23T08:17:18Z"}, "message": "Auto merge of #55113 - mockersf:master, r=estebank\n\n#45829 when a renamed import conflict with a previous import\n\nFix the suggestion when a renamed import conflict.\n\nIt check if the snipped contains `\" as \"`, and if so uses everything before for the suggestion.", "tree": {"sha": "d4fe7f910c76a32a4120a2a786c7ba6cdf8a4b79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4fe7f910c76a32a4120a2a786c7ba6cdf8a4b79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cfe5de21429c655376d7cad1d39ba00937da67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cfe5de21429c655376d7cad1d39ba00937da67f", "html_url": "https://github.com/rust-lang/rust/commit/7cfe5de21429c655376d7cad1d39ba00937da67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cfe5de21429c655376d7cad1d39ba00937da67f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d570b36cd9dd0a3c1b94e6fc4004ee5557140d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/d570b36cd9dd0a3c1b94e6fc4004ee5557140d31", "html_url": "https://github.com/rust-lang/rust/commit/d570b36cd9dd0a3c1b94e6fc4004ee5557140d31"}, {"sha": "8fe6688fcf14508f95db6c96b92f4279ccb0c6be", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe6688fcf14508f95db6c96b92f4279ccb0c6be", "html_url": "https://github.com/rust-lang/rust/commit/8fe6688fcf14508f95db6c96b92f4279ccb0c6be"}], "stats": {"total": 567, "additions": 485, "deletions": 82}, "files": [{"sha": "5222dd27d34d61b83f153eedc674cb0983685ea8", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -449,7 +449,10 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                     id: item.id,\n                     parent,\n                     imported_module: Cell::new(Some(ModuleOrUniformRoot::Module(module))),\n-                    subclass: ImportDirectiveSubclass::ExternCrate(orig_name),\n+                    subclass: ImportDirectiveSubclass::ExternCrate {\n+                        source: orig_name,\n+                        target: ident,\n+                    },\n                     root_span: item.span,\n                     span: item.span,\n                     module_path: Vec::new(),"}, {"sha": "ddcaf128bf5bbfad9ece862a83c0f3bca10f3b86", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -144,7 +144,7 @@ pub fn check_crate(resolver: &mut Resolver, krate: &ast::Crate) {\n                     }\n                 }\n             }\n-            ImportDirectiveSubclass::ExternCrate(_) => {\n+            ImportDirectiveSubclass::ExternCrate { .. } => {\n                 resolver.maybe_unused_extern_crates.push((directive.id, directive.span));\n             }\n             ImportDirectiveSubclass::MacroUse => {"}, {"sha": "2c09ae7b7d2a58f1eec47575d171c7b16eebc026", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 36, "deletions": 21, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -1234,7 +1234,7 @@ impl<'a> NameBinding<'a> {\n         match self.kind {\n             NameBindingKind::Import {\n                 directive: &ImportDirective {\n-                    subclass: ImportDirectiveSubclass::ExternCrate(_), ..\n+                    subclass: ImportDirectiveSubclass::ExternCrate { .. }, ..\n                 }, ..\n             } => true,\n             _ => false,\n@@ -1248,15 +1248,6 @@ impl<'a> NameBinding<'a> {\n         }\n     }\n \n-    fn is_renamed_extern_crate(&self) -> bool {\n-        if let NameBindingKind::Import { directive, ..} = self.kind {\n-            if let ImportDirectiveSubclass::ExternCrate(Some(_)) = directive.subclass {\n-                return true;\n-            }\n-        }\n-        false\n-    }\n-\n     fn is_glob_import(&self) -> bool {\n         match self.kind {\n             NameBindingKind::Import { directive, .. } => directive.is_glob(),\n@@ -3812,7 +3803,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n             if let NameBindingKind::Import { directive: d, .. } = binding.kind {\n                 // Careful: we still want to rewrite paths from\n                 // renamed extern crates.\n-                if let ImportDirectiveSubclass::ExternCrate(None) = d.subclass {\n+                if let ImportDirectiveSubclass::ExternCrate { source: None, .. } = d.subclass {\n                     return\n                 }\n             }\n@@ -4782,10 +4773,17 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n             };\n \n             let cm = self.session.source_map();\n-            let rename_msg = \"You can use `as` to change the binding name of the import\";\n-\n-            if let (Ok(snippet), false) = (cm.span_to_snippet(binding.span),\n-                                           binding.is_renamed_extern_crate()) {\n+            let rename_msg = \"you can use `as` to change the binding name of the import\";\n+\n+            if let (\n+                Ok(snippet),\n+                NameBindingKind::Import { directive, ..},\n+                _dummy @ false,\n+            ) = (\n+                cm.span_to_snippet(binding.span),\n+                binding.kind.clone(),\n+                binding.span.is_dummy(),\n+            ) {\n                 let suggested_name = if name.as_str().chars().next().unwrap().is_uppercase() {\n                     format!(\"Other{}\", name)\n                 } else {\n@@ -4794,13 +4792,30 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n \n                 err.span_suggestion_with_applicability(\n                     binding.span,\n-                    rename_msg,\n-                    if snippet.ends_with(';') {\n-                        format!(\"{} as {};\", &snippet[..snippet.len() - 1], suggested_name)\n-                    } else {\n-                        format!(\"{} as {}\", snippet, suggested_name)\n+                    &rename_msg,\n+                    match (&directive.subclass, snippet.as_ref()) {\n+                        (ImportDirectiveSubclass::SingleImport { .. }, \"self\") =>\n+                            format!(\"self as {}\", suggested_name),\n+                        (ImportDirectiveSubclass::SingleImport { source, .. }, _) =>\n+                            format!(\n+                                \"{} as {}{}\",\n+                                &snippet[..((source.span.hi().0 - binding.span.lo().0) as usize)],\n+                                suggested_name,\n+                                if snippet.ends_with(\";\") {\n+                                    \";\"\n+                                } else {\n+                                    \"\"\n+                                }\n+                            ),\n+                        (ImportDirectiveSubclass::ExternCrate { source, target, .. }, _) =>\n+                            format!(\n+                                \"extern crate {} as {};\",\n+                                source.unwrap_or(target.name),\n+                                suggested_name,\n+                            ),\n+                        (_, _) => unreachable!(),\n                     },\n-                    Applicability::MachineApplicable,\n+                    Applicability::MaybeIncorrect,\n                 );\n             } else {\n                 err.span_label(binding.span, rename_msg);"}, {"sha": "27ba1ced74985dfc073fb09d585c8e6f23e41c08", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -52,7 +52,10 @@ pub enum ImportDirectiveSubclass<'a> {\n         max_vis: Cell<ty::Visibility>, // The visibility of the greatest re-export.\n         // n.b. `max_vis` is only used in `finalize_import` to check for re-export errors.\n     },\n-    ExternCrate(Option<Name>),\n+    ExternCrate {\n+        source: Option<Name>,\n+        target: Ident,\n+    },\n     MacroUse,\n }\n \n@@ -1336,7 +1339,7 @@ fn import_directive_subclass_to_string(subclass: &ImportDirectiveSubclass) -> St\n     match *subclass {\n         SingleImport { source, .. } => source.to_string(),\n         GlobImport { .. } => \"*\".to_string(),\n-        ExternCrate(_) => \"<extern crate>\".to_string(),\n+        ExternCrate { .. } => \"<extern crate>\".to_string(),\n         MacroUse => \"#[macro_use]\".to_string(),\n     }\n }"}, {"sha": "a24ba5d97b11c9cd7e6696ec553f400849e81562", "filename": "src/test/ui/blind/blind-item-block-item-shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL |         use foo::Bar;\n    |             ^^^^^^^^ `Bar` reimported here\n    |\n    = note: `Bar` must be defined only once in the type namespace of this block\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |         use foo::Bar as OtherBar;\n    |             ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7874189534403ae5064759bdea0ddff664b01832", "filename": "src/test/ui/blind/blind-item-item-shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | use foo::foo;\n    |     ^^^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use foo::foo as other_foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "436d594921b0795960a54ab8e39b8def132f4beb", "filename": "src/test/ui/double-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fdouble-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fdouble-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdouble-import.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use sub2::foo; //~ ERROR the name `foo` is defined multiple times\n    |     ^^^^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use sub2::foo as other_foo; //~ ERROR the name `foo` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f1d6e63c713af763a51a32196886f1e151a84b82", "filename": "src/test/ui/double-type-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fdouble-type-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fdouble-type-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdouble-type-import.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL |     use self::bar::X;\n    |         ^^^^^^^^^^^^ `X` reimported here\n    |\n    = note: `X` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use self::bar::X as OtherX;\n    |         ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "eced6b303e8537c297a6a5033ea35aa0d651a18b", "filename": "src/test/ui/duplicate/duplicate-check-macro-exports.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | macro_rules! panic { () => {} } //~ ERROR the name `panic` is defined multi\n    | ^^^^^^^^^^^^^^^^^^ `panic` redefined here\n    |\n    = note: `panic` must be defined only once in the macro namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use std::panic as other_panic;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "0d112a4f02ea9543a99f2ff2ec018c54133d2525", "filename": "src/test/ui/error-codes/E0252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use bar::baz; //~ ERROR E0252\n    |     ^^^^^^^^ `baz` reimported here\n    |\n    = note: `baz` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::baz as other_baz; //~ ERROR E0252\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "5e833f1ee3901cc7f0fa539b59e88f4bd82f6d8b", "filename": "src/test/ui/error-codes/E0254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | use foo::alloc;\n    |     ^^^^^^^^^^ `alloc` reimported here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use foo::alloc as other_alloc;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d01a4c002e76f0f51fcc99c73357ace1af7d3c6f", "filename": "src/test/ui/error-codes/E0255.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | fn foo() {} //~ ERROR E0255\n    | ^^^^^^^^ `foo` redefined here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::foo as other_foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "8c3e3f851aed70ad24505509cfb0cfb926e5884b", "filename": "src/test/ui/error-codes/E0259.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,12 +5,13 @@ LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here\n LL | \n LL | extern crate libc as alloc;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   | |\n-   | `alloc` reimported here\n-   | You can use `as` to change the binding name of the import\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `alloc` reimported here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate libc as other_alloc;\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "08792a33921040c447c557887ae76e463f03ccb0", "filename": "src/test/ui/error-codes/E0260.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | mod alloc {\n    | ^^^^^^^^^ `alloc` redefined here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate alloc as other_alloc;\n    |"}, {"sha": "32198acec772647055854cf7f3c7b4975996a856", "filename": "src/test/ui/error-codes/E0430.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -15,7 +15,7 @@ LL | use std::fmt::{self, self}; //~ ERROR E0430\n    |                previous import of the module `fmt` here\n    |\n    = note: `fmt` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::fmt::{self, self as other_fmt}; //~ ERROR E0430\n    |                      ^^^^^^^^^^^^^^^^^"}, {"sha": "f8a5de3654cdcaee9cb85504e011297a1b7e73d3", "filename": "src/test/ui/extern/extern-crate-rename.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -4,12 +4,13 @@ error[E0259]: the name `m1` is defined multiple times\n LL | extern crate m1;\n    | ---------------- previous import of the extern crate `m1` here\n LL | extern crate m2 as m1; //~ ERROR is defined multiple times\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-   | |\n-   | `m1` reimported here\n-   | You can use `as` to change the binding name of the import\n+   | ^^^^^^^^^^^^^^^^^^^^^^ `m1` reimported here\n    |\n    = note: `m1` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate m2 as other_m1; //~ ERROR is defined multiple times\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5d51981e8afa9599aeb0a1305f8a18292f37050f", "filename": "src/test/ui/imports/duplicate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL |     use a::foo; //~ ERROR the name `foo` is defined multiple times\n    |         ^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use a::foo as other_foo; //~ ERROR the name `foo` is defined multiple times\n    |         ^^^^^^^^^^^^^^^^^^^"}, {"sha": "e4cefe9d7a4da634a4e0b0e2ea3be543b90ad831", "filename": "src/test/ui/issues/issue-19498.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | mod A {} //~ ERROR the name `A` is defined multiple times\n    | ^^^^^ `A` redefined here\n    |\n    = note: `A` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use self::A as OtherA;\n    |     ^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | pub mod B {} //~ ERROR the name `B` is defined multiple times\n    | ^^^^^^^^^ `B` redefined here\n    |\n    = note: `B` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use self::B as OtherB;\n    |     ^^^^^^^^^^^^^^^^^\n@@ -37,7 +37,7 @@ LL |     mod D {} //~ ERROR the name `D` is defined multiple times\n    |     ^^^^^ `D` redefined here\n    |\n    = note: `D` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use C::D as OtherD;\n    |         ^^^^^^^^^^^^^^"}, {"sha": "f9a97ac7c99c7045ff8c5227026e9a2333b860ea", "filename": "src/test/ui/issues/issue-24081.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | type Add = bool; //~ ERROR the name `Add` is defined multiple times\n    | ^^^^^^^^^^^^^^^^ `Add` redefined here\n    |\n    = note: `Add` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Add as OtherAdd;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | struct Sub { x: f32 } //~ ERROR the name `Sub` is defined multiple times\n    | ^^^^^^^^^^ `Sub` redefined here\n    |\n    = note: `Sub` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Sub as OtherSub;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -38,7 +38,7 @@ LL | enum Mul { A, B } //~ ERROR the name `Mul` is defined multiple times\n    | ^^^^^^^^ `Mul` redefined here\n    |\n    = note: `Mul` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Mul as OtherMul;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | mod Div { } //~ ERROR the name `Div` is defined multiple times\n    | ^^^^^^^ `Div` redefined here\n    |\n    = note: `Div` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Div as OtherDiv;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL | trait Rem {  } //~ ERROR the name `Rem` is defined multiple times\n    | ^^^^^^^^^ `Rem` redefined here\n    |\n    = note: `Rem` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Rem as OtherRem;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "33e7c37882180baafe886ef7b6a7ced1504c3974", "filename": "src/test/ui/issues/issue-25396.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use bar::baz; //~ ERROR the name `baz` is defined multiple times\n    |     ^^^^^^^^ `baz` reimported here\n    |\n    = note: `baz` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::baz as other_baz; //~ ERROR the name `baz` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -21,7 +21,7 @@ LL | use bar::Quux; //~ ERROR the name `Quux` is defined multiple times\n    |     ^^^^^^^^^ `Quux` reimported here\n    |\n    = note: `Quux` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::Quux as OtherQuux; //~ ERROR the name `Quux` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -35,7 +35,7 @@ LL | use bar::blah; //~ ERROR the name `blah` is defined multiple times\n    |     ^^^^^^^^^ `blah` reimported here\n    |\n    = note: `blah` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::blah as other_blah; //~ ERROR the name `blah` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -49,7 +49,7 @@ LL | use bar::WOMP; //~ ERROR the name `WOMP` is defined multiple times\n    |     ^^^^^^^^^ `WOMP` reimported here\n    |\n    = note: `WOMP` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::WOMP as OtherWOMP; //~ ERROR the name `WOMP` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f2a43b0db798f3c32e04ecc91f6a6b2b96e6b8d7", "filename": "src/test/ui/issues/issue-26886.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use std::sync::Arc; //~ ERROR the name `Arc` is defined multiple times\n    |     ^^^^^^^^^^^^^^ `Arc` reimported here\n    |\n    = note: `Arc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::sync::Arc as OtherArc; //~ ERROR the name `Arc` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL | use std::sync; //~ ERROR the name `sync` is defined multiple times\n    |     ^^^^^^^^^ `sync` reimported here\n    |\n    = note: `sync` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::sync as other_sync; //~ ERROR the name `sync` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f3acd65e6a269e5b9375f9c781ce4b63be91d43d", "filename": "src/test/ui/issues/issue-32354-suggest-import-rename.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use extension2::ConstructorExtension; //~ ERROR is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ConstructorExtension` reimported here\n    |\n    = note: `ConstructorExtension` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use extension2::ConstructorExtension as OtherConstructorExtension; //~ ERROR is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "99c15976666e2d4d01e6f6d6209d0dee6656367f", "filename": "src/test/ui/issues/issue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,7 +5,7 @@ LL | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate std as other_std;\n    |"}, {"sha": "56eb1541e1f6878fe29ed21b618cfe7236715975", "filename": "src/test/ui/issues/issue-45829/auxiliary/issue_45829_a.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_a.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub const FOO: usize = *&0;"}, {"sha": "56eb1541e1f6878fe29ed21b618cfe7236715975", "filename": "src/test/ui/issues/issue-45829/auxiliary/issue_45829_b.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fauxiliary%2Fissue_45829_b.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub const FOO: usize = *&0;"}, {"sha": "8b13ffd0076d51c30e8483f6515961c58e05e9c9", "filename": "src/test/ui/issues/issue-45829/import-self.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod foo {\n+    pub struct A;\n+    pub struct B;\n+}\n+\n+use foo::{self};\n+\n+use foo as self;\n+\n+use foo::self;\n+\n+fn main() {}"}, {"sha": "985dc4e7131cf8454a1b015e36921e936850bcfd", "filename": "src/test/ui/issues/issue-45829/import-self.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,31 @@\n+error: expected identifier, found keyword `self`\n+  --> $DIR/import-self.rs:18:12\n+   |\n+LL | use foo as self;\n+   |            ^^^^ expected identifier, found keyword\n+\n+error[E0429]: `self` imports are only allowed within a { } list\n+  --> $DIR/import-self.rs:20:5\n+   |\n+LL | use foo::self;\n+   |     ^^^^^^^^^\n+\n+error[E0255]: the name `foo` is defined multiple times\n+  --> $DIR/import-self.rs:16:11\n+   |\n+LL | mod foo {\n+   | ------- previous definition of the module `foo` here\n+...\n+LL | use foo::{self};\n+   |           ^^^^ `foo` reimported here\n+   |\n+   = note: `foo` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use foo::{self as other_foo};\n+   |           ^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0255, E0429.\n+For more information about an error, try `rustc --explain E0255`."}, {"sha": "785932e5ef42a2dd8a7431aa21d89bdff39152b1", "filename": "src/test/ui/issues/issue-45829/import-twice.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod foo {\n+    pub struct A;\n+    pub struct B;\n+}\n+\n+use foo::{A, A};\n+\n+fn main() {}"}, {"sha": "566d47965f82f6d8025a1f5b2ef45b835e674ac4", "filename": "src/test/ui/issues/issue-45829/import-twice.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-twice.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0252]: the name `A` is defined multiple times\n+  --> $DIR/import-twice.rs:16:14\n+   |\n+LL | use foo::{A, A};\n+   |           -  ^ `A` reimported here\n+   |           |\n+   |           previous import of the type `A` here\n+   |\n+   = note: `A` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use foo::{A, A as OtherA};\n+   |              ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0252`."}, {"sha": "eca46484699b3b178eb04010a2c91fe2737c12f4", "filename": "src/test/ui/issues/issue-45829/issue-45829.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod foo {\n+    pub struct A;\n+    pub struct B;\n+}\n+\n+use foo::{A, B as A};\n+\n+fn main() {}"}, {"sha": "872379d9fc30339a6807ed9f4f0ed86181944ff2", "filename": "src/test/ui/issues/issue-45829/issue-45829.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fissue-45829.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0252]: the name `A` is defined multiple times\n+  --> $DIR/issue-45829.rs:16:14\n+   |\n+LL | use foo::{A, B as A};\n+   |           -  ^^^^^^ `A` reimported here\n+   |           |\n+   |           previous import of the type `A` here\n+   |\n+   = note: `A` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use foo::{A, B as OtherA};\n+   |              ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0252`."}, {"sha": "5230cadf604304ee6ddfa4401061add0af9c0e52", "filename": "src/test/ui/issues/issue-45829/rename-extern-vs-use.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_45829_b.rs\n+\n+mod foo {\n+    pub mod bar {}\n+}\n+\n+use foo::bar;\n+extern crate issue_45829_b as bar;\n+\n+fn main() {}"}, {"sha": "6a513e90d95b98e6bcaf289ec69ac27d40c2e029", "filename": "src/test/ui/issues/issue-45829/rename-extern-vs-use.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-vs-use.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0254]: the name `bar` is defined multiple times\n+  --> $DIR/rename-extern-vs-use.rs:18:1\n+   |\n+LL | use foo::bar;\n+   |     -------- previous import of the module `bar` here\n+LL | extern crate issue_45829_b as bar;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `bar` reimported here\n+   |\n+   = note: `bar` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate issue_45829_b as other_bar;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0254`."}, {"sha": "7066ed65c78c30e02184670df0ed8623e35eead4", "filename": "src/test/ui/issues/issue-45829/rename-extern-with-tab.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_45829_a.rs\n+// aux-build:issue_45829_b.rs\n+\n+extern crate issue_45829_a;\n+extern  crate    issue_45829_b  as  issue_45829_a;\n+\n+fn main() {}"}, {"sha": "769be545706cbc345f088668b438ea2db090ba0a", "filename": "src/test/ui/issues/issue-45829/rename-extern-with-tab.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern-with-tab.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0259]: the name `issue_45829_a` is defined multiple times\n+  --> $DIR/rename-extern-with-tab.rs:15:1\n+   |\n+LL | extern crate issue_45829_a;\n+   | --------------------------- previous import of the extern crate `issue_45829_a` here\n+LL | extern  crate    issue_45829_b  as  issue_45829_a;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `issue_45829_a` reimported here\n+   |\n+   = note: `issue_45829_a` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate issue_45829_b as other_issue_45829_a;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0259`."}, {"sha": "7c3d97240057462b082f0803f5b9c652bf3ddb67", "filename": "src/test/ui/issues/issue-45829/rename-extern.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_45829_a.rs\n+// aux-build:issue_45829_b.rs\n+\n+extern crate issue_45829_a;\n+extern crate issue_45829_b as issue_45829_a;\n+\n+fn main() {}"}, {"sha": "ab77e592b4a99dbad2bb0121cfad34d197a23425", "filename": "src/test/ui/issues/issue-45829/rename-extern.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-extern.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0259]: the name `issue_45829_a` is defined multiple times\n+  --> $DIR/rename-extern.rs:15:1\n+   |\n+LL | extern crate issue_45829_a;\n+   | --------------------------- previous import of the extern crate `issue_45829_a` here\n+LL | extern crate issue_45829_b as issue_45829_a;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `issue_45829_a` reimported here\n+   |\n+   = note: `issue_45829_a` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate issue_45829_b as other_issue_45829_a;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0259`."}, {"sha": "1cc261ed922eb522c89a19a5ecac29754c636b58", "filename": "src/test/ui/issues/issue-45829/rename-use-vs-extern.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_45829_b.rs\n+\n+extern crate issue_45829_b;\n+use std as issue_45829_b;\n+\n+fn main() {}"}, {"sha": "1395fbeea3b31d8951e3de3f88f6765298de8f72", "filename": "src/test/ui/issues/issue-45829/rename-use-vs-extern.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-vs-extern.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0254]: the name `issue_45829_b` is defined multiple times\n+  --> $DIR/rename-use-vs-extern.rs:14:5\n+   |\n+LL | extern crate issue_45829_b;\n+   | --------------------------- previous import of the extern crate `issue_45829_b` here\n+LL | use std as issue_45829_b;\n+   |     ^^^^^^^^^^^^^^^^^^^^ `issue_45829_b` reimported here\n+   |\n+   = note: `issue_45829_b` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use std as other_issue_45829_b;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0254`."}, {"sha": "c1e4d9089068df8304a23e9079ea53ec1e84ad13", "filename": "src/test/ui/issues/issue-45829/rename-use-with-tabs.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod foo {\n+    pub struct A;\n+\n+    pub mod bar {\n+        pub struct B;\n+    }\n+}\n+\n+use foo::{A, bar::B    as    A};\n+\n+fn main() {}"}, {"sha": "b80a692028aa0bf007835203be0b625193bd53d0", "filename": "src/test/ui/issues/issue-45829/rename-use-with-tabs.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-use-with-tabs.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0252]: the name `A` is defined multiple times\n+  --> $DIR/rename-use-with-tabs.rs:19:14\n+   |\n+LL | use foo::{A, bar::B    as    A};\n+   |           -  ^^^^^^^^^^^^^^^^^ `A` reimported here\n+   |           |\n+   |           previous import of the type `A` here\n+   |\n+   = note: `A` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use foo::{A, bar::B as OtherA};\n+   |              ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0252`."}, {"sha": "dbe8733735e50e0c27446c0e5b14586bc41628b1", "filename": "src/test/ui/issues/issue-45829/rename-with-path.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::{collections::HashMap as A, sync::Arc as A};\n+\n+fn main() {}"}, {"sha": "2bc45f0a62d7463f5a345d4d6d374a2033908303", "filename": "src/test/ui/issues/issue-45829/rename-with-path.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename-with-path.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0252]: the name `A` is defined multiple times\n+  --> $DIR/rename-with-path.rs:11:38\n+   |\n+LL | use std::{collections::HashMap as A, sync::Arc as A};\n+   |           -------------------------  ^^^^^^^^^^^^^^ `A` reimported here\n+   |           |\n+   |           previous import of the type `A` here\n+   |\n+   = note: `A` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use std::{collections::HashMap as A, sync::Arc as OtherA};\n+   |                                      ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0252`."}, {"sha": "7c6d87b1d205e5d245648742d323df0d5322a2b8", "filename": "src/test/ui/issues/issue-45829/rename.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.rs?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use core;\n+use std as core;\n+\n+fn main() {\n+    1 + 1;\n+}"}, {"sha": "ce13b457490425f267bcfa3482fcf6a4f790d9b4", "filename": "src/test/ui/issues/issue-45829/rename.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Frename.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -0,0 +1,17 @@\n+error[E0252]: the name `core` is defined multiple times\n+  --> $DIR/rename.rs:12:5\n+   |\n+LL | use core;\n+   |     ---- previous import of the module `core` here\n+LL | use std as core;\n+   |     ^^^^^^^^^^^ `core` reimported here\n+   |\n+   = note: `core` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use std as other_core;\n+   |     ^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0252`."}, {"sha": "029f76d152a37356bfb291e57421bd5c8f5b52d8", "filename": "src/test/ui/issues/issue-8640.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL |     mod bar {}\n    |     ^^^^^^^ `bar` redefined here\n    |\n    = note: `bar` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use baz::bar as other_bar;\n    |         ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "fbc54124a088d772d888631e23e52e6caae4d2f3", "filename": "src/test/ui/no-std-inject.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fno-std-inject.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fno-std-inject.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-std-inject.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,7 +5,7 @@ LL | extern crate core; //~ ERROR: the name `core` is defined multiple times\n    | ^^^^^^^^^^^^^^^^^^ `core` reimported here\n    |\n    = note: `core` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate core as other_core; //~ ERROR: the name `core` is defined multiple times\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "83577b245b78ddfaaf7d6e8e4642e6499a336589", "filename": "src/test/ui/resolve/resolve-conflict-extern-crate-vs-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,7 +5,7 @@ LL | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate std as other_std;\n    |"}, {"sha": "adb66b994db69bbde96f95269e1a1255885c1a4a", "filename": "src/test/ui/resolve/resolve-conflict-import-vs-extern-crate.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,10 +5,10 @@ LL | use std::slice as std; //~ ERROR the name `std` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n-LL | use std::slice as std as other_std; //~ ERROR the name `std` is defined multiple times\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | use std::slice as other_std; //~ ERROR the name `std` is defined multiple times\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "15f826305bf386a3c4c95e5505896576592fff99", "filename": "src/test/ui/resolve/resolve-conflict-import-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use std::mem::transmute;\n    |     ^^^^^^^^^^^^^^^^^^^ `transmute` reimported here\n    |\n    = note: `transmute` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem::transmute as other_transmute;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "0b082c1105f15874853faf16101e07c6dcdfa47d", "filename": "src/test/ui/resolve/resolve-conflict-item-vs-extern-crate.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -5,10 +5,6 @@ LL | mod std {}    //~ ERROR the name `std` is defined multiple times\n    | ^^^^^^^ `std` redefined here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n-   |\n-LL |  as other_std// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-   |  ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5305ddbd2ef6d6b0c8254119f9dacfbf46f7b879", "filename": "src/test/ui/resolve/resolve-conflict-item-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | fn transmute() {}\n    | ^^^^^^^^^^^^^^ `transmute` redefined here\n    |\n    = note: `transmute` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem::transmute as other_transmute;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e5cafa3ac986fde5078f4c7ee029d1f39da64d23", "filename": "src/test/ui/resolve/resolve-conflict-type-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | struct Iter;\n    | ^^^^^^^^^^^^ `Iter` redefined here\n    |\n    = note: `Iter` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::slice::Iter as OtherIter;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "86ea348ac47b7d924c75fb83043e711b63006020", "filename": "src/test/ui/unresolved/unresolved-extern-mod-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use core;\n    |     ^^^^ `core` reimported here\n    |\n    = note: `core` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use core as other_core;\n    |     ^^^^^^^^^^^^^^^^^^"}, {"sha": "adef47ac8fb7969ccc42202b6cc2c6768949e49c", "filename": "src/test/ui/use/use-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -23,7 +23,7 @@ LL |     self\n    |     ^^^^ `bar` reimported here\n    |\n    = note: `bar` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     self as other_bar\n    |"}, {"sha": "56db03fd16331c3f48ad8d5a1b5ee3f8bcda5565", "filename": "src/test/ui/use/use-paths-as-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -7,7 +7,7 @@ LL | use std::mem; //~ ERROR the name `mem` is defined multiple times\n    |     ^^^^^^^^ `mem` reimported here\n    |\n    = note: `mem` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem as other_mem; //~ ERROR the name `mem` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "ce2fb7cb92c5647e123e6999b66aabe76ce624ee", "filename": "src/test/ui/variants/variant-namespacing.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cfe5de21429c655376d7cad1d39ba00937da67f/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr?ref=7cfe5de21429c655376d7cad1d39ba00937da67f", "patch": "@@ -8,7 +8,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                   ^^^^^^^ `XStruct` reimported here\n    |\n    = note: `XStruct` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct as OtherXStruct, XTuple, XUnit};\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                            ^^^^^^ `XTuple` reimported here\n    |\n    = note: `XTuple` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct, XTuple as OtherXTuple, XUnit};\n    |                                            ^^^^^^^^^^^^^^^^^^^^^\n@@ -38,7 +38,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                                    ^^^^^ `XUnit` reimported here\n    |\n    = note: `XUnit` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit as OtherXUnit};\n    |                                                    ^^^^^^^^^^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |             ^^^^^^ `Struct` reimported here\n    |\n    = note: `Struct` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct as OtherStruct, Tuple, Unit};\n    |             ^^^^^^^^^^^^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |                     ^^^^^ `Tuple` reimported here\n    |\n    = note: `Tuple` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct, Tuple as OtherTuple, Unit};\n    |                     ^^^^^^^^^^^^^^^^^^^\n@@ -83,7 +83,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |                            ^^^^ `Unit` reimported here\n    |\n    = note: `Unit` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct, Tuple, Unit as OtherUnit};\n    |                            ^^^^^^^^^^^^^^^^^"}]}