{"sha": "3f05cf6776fe9682200b1327b7131219710120b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMDVjZjY3NzZmZTk2ODIyMDBiMTMyN2I3MTMxMjE5NzEwMTIwYjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-29T11:18:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-29T11:18:01Z"}, "message": "Rollup merge of #63992 - lzutao:integer-ord, r=nagisa\n\nSmall improvement for Ord implementation of integers\n\nGodbolt link: https://godbolt.org/z/tuTDOg\n\n### Before\n\n**asm**\n```asm\nexample::cmp:\n  mov eax, dword ptr [rdi]\n  xor ecx, ecx\n  cmp eax, dword ptr [rsi]\n  seta cl\n  mov eax, 255\n  cmovae eax, ecx\n  ret\n```\n\n**llvm-mca**\n```\nIterations:        100\nInstructions:      700\nTotal Cycles:      217\nTotal uOps:        1100\n\nDispatch Width:    6\nuOps Per Cycle:    5.07\nIPC:               3.23\nBlock RThroughput: 1.8\n```\n\n### After\n\n**asm**\n```asm\nexample::cmp:\n  mov eax, dword ptr [rdi]\n  xor ecx, ecx\n  cmp eax, dword ptr [rsi]\n  setne cl\n  mov eax, 255\n  cmovae eax, ecx\n  ret\n```\n\n**llvm-mca**\n```\nIterations:        100\nInstructions:      700\nTotal Cycles:      209\nTotal uOps:        1000\n\nDispatch Width:    6\nuOps Per Cycle:    4.78\nIPC:               3.35\nBlock RThroughput: 1.7\n```\n\nr? @nagisa", "tree": {"sha": "3c3cd79e15fce31f7d5ef8792249a7de33646bce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c3cd79e15fce31f7d5ef8792249a7de33646bce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f05cf6776fe9682200b1327b7131219710120b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZ7RpCRBK7hj4Ov3rIwAAdHIIAFYcmnPXF6WejWf5dZeh3ytZ\n0J/EMq4pK/MNpJU6Iy9eJW93u0w8kYU0KNDUNcVmuzKk434aGyD/XhrPGaeSbdmz\nzW+XiA+EDcwE7lPAsnokPJRpPKm7wvKneo6+waC3XLqszhbIp1qC261DfceTBtQs\nV6pWWGpgjCR+6gkb2ovmPLYZK0Jd8I46jk8NgQAGu+uZemQlki6LHr5307l7G9Uc\n2W1VHk2WpAzCs5P5SHBQTEYd/iNMglhU7Sb8yHGHRm+j3QEe/rw8v1oIKqOOiMA8\nX4MHzUXOpgBDklGgB4Ibz9T54tsd2Q21UGcTGjyUOnaVffnTBsnZKL9C15Vlbzk=\n=3FER\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c3cd79e15fce31f7d5ef8792249a7de33646bce\nparent c94ead7ad7ec563746079760722ade3f887e22a6\nparent ade191c70a51f6699b64423e0bc8e0f307de9ecd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567077481 +0200\ncommitter GitHub <noreply@github.com> 1567077481 +0200\n\nRollup merge of #63992 - lzutao:integer-ord, r=nagisa\n\nSmall improvement for Ord implementation of integers\n\nGodbolt link: https://godbolt.org/z/tuTDOg\n\n### Before\n\n**asm**\n```asm\nexample::cmp:\n  mov eax, dword ptr [rdi]\n  xor ecx, ecx\n  cmp eax, dword ptr [rsi]\n  seta cl\n  mov eax, 255\n  cmovae eax, ecx\n  ret\n```\n\n**llvm-mca**\n```\nIterations:        100\nInstructions:      700\nTotal Cycles:      217\nTotal uOps:        1100\n\nDispatch Width:    6\nuOps Per Cycle:    5.07\nIPC:               3.23\nBlock RThroughput: 1.8\n```\n\n### After\n\n**asm**\n```asm\nexample::cmp:\n  mov eax, dword ptr [rdi]\n  xor ecx, ecx\n  cmp eax, dword ptr [rsi]\n  setne cl\n  mov eax, 255\n  cmovae eax, ecx\n  ret\n```\n\n**llvm-mca**\n```\nIterations:        100\nInstructions:      700\nTotal Cycles:      209\nTotal uOps:        1000\n\nDispatch Width:    6\nuOps Per Cycle:    4.78\nIPC:               3.35\nBlock RThroughput: 1.7\n```\n\nr? @nagisa\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f05cf6776fe9682200b1327b7131219710120b2", "html_url": "https://github.com/rust-lang/rust/commit/3f05cf6776fe9682200b1327b7131219710120b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f05cf6776fe9682200b1327b7131219710120b2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c94ead7ad7ec563746079760722ade3f887e22a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c94ead7ad7ec563746079760722ade3f887e22a6", "html_url": "https://github.com/rust-lang/rust/commit/c94ead7ad7ec563746079760722ade3f887e22a6"}, {"sha": "ade191c70a51f6699b64423e0bc8e0f307de9ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ade191c70a51f6699b64423e0bc8e0f307de9ecd", "html_url": "https://github.com/rust-lang/rust/commit/ade191c70a51f6699b64423e0bc8e0f307de9ecd"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "607427a85d67aef435677761bc085c2913eb14e0", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f05cf6776fe9682200b1327b7131219710120b2/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f05cf6776fe9682200b1327b7131219710120b2/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=3f05cf6776fe9682200b1327b7131219710120b2", "patch": "@@ -1015,8 +1015,8 @@ mod impls {\n                     // The order here is important to generate more optimal assembly.\n                     // See <https://github.com/rust-lang/rust/issues/63758> for more info.\n                     if *self < *other { Less }\n-                    else if *self > *other { Greater }\n-                    else { Equal }\n+                    else if *self == *other { Equal }\n+                    else { Greater }\n                 }\n             }\n         )*)"}, {"sha": "8ada3cf09d0739e00a4085063b3be11e709d3749", "filename": "src/test/codegen/integer-cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f05cf6776fe9682200b1327b7131219710120b2/src%2Ftest%2Fcodegen%2Finteger-cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f05cf6776fe9682200b1327b7131219710120b2/src%2Ftest%2Fcodegen%2Finteger-cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finteger-cmp.rs?ref=3f05cf6776fe9682200b1327b7131219710120b2", "patch": "@@ -11,7 +11,7 @@ use std::cmp::Ordering;\n #[no_mangle]\n pub fn cmp_signed(a: i64, b: i64) -> Ordering {\n // CHECK: icmp slt\n-// CHECK: icmp sgt\n+// CHECK: icmp ne\n // CHECK: zext i1\n // CHECK: select i1\n     a.cmp(&b)\n@@ -21,7 +21,7 @@ pub fn cmp_signed(a: i64, b: i64) -> Ordering {\n #[no_mangle]\n pub fn cmp_unsigned(a: u32, b: u32) -> Ordering {\n // CHECK: icmp ult\n-// CHECK: icmp ugt\n+// CHECK: icmp ne\n // CHECK: zext i1\n // CHECK: select i1\n     a.cmp(&b)"}]}