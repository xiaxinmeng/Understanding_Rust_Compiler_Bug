{"sha": "46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YTMzMTQ5NDNhZDlmMGFhMTFmNGFlYzUwYWUxZThjM2UyN2IxYTY=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-17T10:07:43Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-17T10:07:43Z"}, "message": "lint: add method to get level of a specific lint.\n\nThis allows lint traversals to emit more information (when a lint is\nnon-allow), or avoid doing expensive computations (when a lint is\nallow).", "tree": {"sha": "aa89a68b09adebdad26165fc441e8bbc9b126698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa89a68b09adebdad26165fc441e8bbc9b126698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6", "html_url": "https://github.com/rust-lang/rust/commit/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32cb44bfff3facbded5fd9cc74af3f02e81565a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/32cb44bfff3facbded5fd9cc74af3f02e81565a8", "html_url": "https://github.com/rust-lang/rust/commit/32cb44bfff3facbded5fd9cc74af3f02e81565a8"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "7d9ec29d7014420599373c529fc53a3a528faf91", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=46a3314943ad9f0aa11f4aec50ae1e8c3e27b1a6", "patch": "@@ -317,6 +317,12 @@ impl<'a> Context<'a> {\n         &self.tcx.sess\n     }\n \n+    /// Get the level of `lint` at the current position of the lint\n+    /// traversal.\n+    pub fn current_level(&self, lint: &'static Lint) -> Level {\n+        self.lints.levels.find(&LintId::of(lint)).map_or(Allow, |&(lvl, _)| lvl)\n+    }\n+\n     fn lookup_and_emit(&self, lint: &'static Lint, span: Option<Span>, msg: &str) {\n         let (level, src) = match self.lints.levels.find(&LintId::of(lint)) {\n             None => return,"}]}