{"sha": "7d9d74e06505b48d2894a24ccbe716ffa931bd2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkOWQ3NGUwNjUwNWI0OGQyODk0YTI0Y2NiZTcxNmZmYTkzMWJkMmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-09T06:59:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-09T06:59:47Z"}, "message": "on Windows, strip the '\\\\?\\' prefix from the canonical path", "tree": {"sha": "a351162b65d2ff650b70829f725880924e37a7fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a351162b65d2ff650b70829f725880924e37a7fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d9d74e06505b48d2894a24ccbe716ffa931bd2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d9d74e06505b48d2894a24ccbe716ffa931bd2b", "html_url": "https://github.com/rust-lang/rust/commit/7d9d74e06505b48d2894a24ccbe716ffa931bd2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d9d74e06505b48d2894a24ccbe716ffa931bd2b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "578aebf478f3bd0ff7f4826d1b64254fe032c191", "url": "https://api.github.com/repos/rust-lang/rust/commits/578aebf478f3bd0ff7f4826d1b64254fe032c191", "html_url": "https://github.com/rust-lang/rust/commit/578aebf478f3bd0ff7f4826d1b64254fe032c191"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "e2f32cb0a5384cbd81046b9c04c921f2f1ca25ba", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7d9d74e06505b48d2894a24ccbe716ffa931bd2b/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d9d74e06505b48d2894a24ccbe716ffa931bd2b/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=7d9d74e06505b48d2894a24ccbe716ffa931bd2b", "patch": "@@ -258,8 +258,20 @@ fn setup(subcommand: MiriCommand) {\n     // Determine where the rust sources are located.  `XARGO_RUST_SRC` env var trumps everything.\n     let rust_src = match std::env::var_os(\"XARGO_RUST_SRC\") {\n         Some(val) => {\n-            let val = PathBuf::from(val);\n-            val.canonicalize().unwrap_or(val)\n+            let path = PathBuf::from(val);\n+            let path = path.canonicalize().unwrap_or(path);\n+\n+            // On Windows, this produces a path starting with `\\\\?\\`, which xargo cannot deal with.\n+            // Strip that prefix; the resulting path should still be valid.\n+            #[cfg(windows)]\n+            let path = {\n+                let str = path.into_os_string().into_string()\n+                    .expect(\"non-unicode paths are currently not supported\");\n+                let str = str.strip_prefix(r\"\\\\?\\\").map(String::from).unwrap_or(str);\n+                PathBuf::from(str)\n+            };\n+\n+            path\n         }\n         None => {\n             // Check for `rust-src` rustup component."}]}