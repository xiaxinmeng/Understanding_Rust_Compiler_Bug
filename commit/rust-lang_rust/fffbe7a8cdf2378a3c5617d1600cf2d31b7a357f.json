{"sha": "fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZmJlN2E4Y2RmMjM3OGEzYzU2MTdkMTYwMGNmMmQzMWI3YTM1N2Y=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-18T23:34:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:22Z"}, "message": "librustc: De-`@mut` the type interner", "tree": {"sha": "f33037eb366ac2bfaf306213ab6e471b12ac0bb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33037eb366ac2bfaf306213ab6e471b12ac0bb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f", "html_url": "https://github.com/rust-lang/rust/commit/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09589aae4f36aeb1bb028e0f3e4f2bbc697412b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/09589aae4f36aeb1bb028e0f3e4f2bbc697412b2", "html_url": "https://github.com/rust-lang/rust/commit/09589aae4f36aeb1bb028e0f3e4f2bbc697412b2"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "009e5749bf8aa3c7174ba4b5440f7f172e83078c", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f", "patch": "@@ -30,6 +30,7 @@ use util::ppaux::{Repr, UserString};\n use util::common::{indenter};\n \n use std::cast;\n+use std::cell::RefCell;\n use std::cmp;\n use std::hashmap::{HashMap, HashSet};\n use std::ops;\n@@ -264,7 +265,7 @@ pub type ctxt = @ctxt_;\n /// later on.\n struct ctxt_ {\n     diag: @mut syntax::diagnostic::span_handler,\n-    interner: @mut HashMap<intern_key, ~t_box_>,\n+    interner: RefCell<HashMap<intern_key, ~t_box_>>,\n     next_id: @mut uint,\n     cstore: @mut metadata::cstore::CStore,\n     sess: session::Session,\n@@ -977,7 +978,7 @@ pub fn mk_ctxt(s: session::Session,\n         named_region_map: named_region_map,\n         item_variance_map: @mut HashMap::new(),\n         diag: s.diagnostic(),\n-        interner: @mut HashMap::new(),\n+        interner: RefCell::new(HashMap::new()),\n         next_id: @mut primitives::LAST_PRIMITIVE_ID,\n         cstore: s.cstore,\n         sess: s,\n@@ -1042,9 +1043,13 @@ pub fn mk_t(cx: ctxt, st: sty) -> t {\n     };\n \n     let key = intern_key { sty: to_unsafe_ptr(&st) };\n-    match cx.interner.find(&key) {\n-      Some(t) => unsafe { return cast::transmute(&t.sty); },\n-      _ => ()\n+\n+    {\n+        let mut interner = cx.interner.borrow_mut();\n+        match interner.get().find(&key) {\n+          Some(t) => unsafe { return cast::transmute(&t.sty); },\n+          _ => ()\n+        }\n     }\n \n     let mut flags = 0u;\n@@ -1138,7 +1143,8 @@ pub fn mk_t(cx: ctxt, st: sty) -> t {\n         sty: sty_ptr,\n     };\n \n-    cx.interner.insert(key, t);\n+    let mut interner = cx.interner.borrow_mut();\n+    interner.get().insert(key, t);\n \n     *cx.next_id += 1;\n "}]}