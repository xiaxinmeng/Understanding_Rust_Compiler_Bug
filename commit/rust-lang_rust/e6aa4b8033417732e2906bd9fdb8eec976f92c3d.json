{"sha": "e6aa4b8033417732e2906bd9fdb8eec976f92c3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YWE0YjgwMzM0MTc3MzJlMjkwNmJkOWZkYjhlZWM5NzZmOTJjM2Q=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-25T20:28:15Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-25T20:28:15Z"}, "message": "Add comment to explain why we change the layout for Projection", "tree": {"sha": "3ffdc0000e86c4739afff840445c9cda3a44a936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ffdc0000e86c4739afff840445c9cda3a44a936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6aa4b8033417732e2906bd9fdb8eec976f92c3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6aa4b8033417732e2906bd9fdb8eec976f92c3d", "html_url": "https://github.com/rust-lang/rust/commit/e6aa4b8033417732e2906bd9fdb8eec976f92c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6aa4b8033417732e2906bd9fdb8eec976f92c3d/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f492693982d1e252f5411ae3e4d560ab0dfea48a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f492693982d1e252f5411ae3e4d560ab0dfea48a", "html_url": "https://github.com/rust-lang/rust/commit/f492693982d1e252f5411ae3e4d560ab0dfea48a"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "de788a22886ab70edbafbb89c6ad6080ef39c20f", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6aa4b8033417732e2906bd9fdb8eec976f92c3d/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6aa4b8033417732e2906bd9fdb8eec976f92c3d/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=e6aa4b8033417732e2906bd9fdb8eec976f92c3d", "patch": "@@ -475,6 +475,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n                 PlaceBase::Local(mir::RETURN_PLACE) => return err!(ReadFromReturnPointer),\n                 PlaceBase::Local(local) => {\n                     // FIXME use place_projection.is_empty() when is available\n+                    // Do not use the layout passed in as argument if the base we are looking at\n+                    // here is not the entire place.\n                     let layout = if let Place::Base(_) = mir_place {\n                         layout\n                     } else {"}]}