{"sha": "5d88d3605339d61c81d16b29a1c01edf771a8fe6", "node_id": "C_kwDOAAsO6NoAKDVkODhkMzYwNTMzOWQ2MWM4MWQxNmIyOWExYzAxZWRmNzcxYThmZTY", "commit": {"author": {"name": "Alex Brachet", "email": "abrachet@google.com", "date": "2022-12-05T06:37:21Z"}, "committer": {"name": "Alex Brachet", "email": "abrachet@google.com", "date": "2022-12-07T16:32:59Z"}, "message": "Don't internalize __llvm_profile_counter_bias\n\nCurrently, LLVM profiling runtime counter relocation cannot be\nused by rust during LTO because symbols are being internalized\nbefore all symbol information is known.\n\nThis mode makes LLVM emit a __llvm_profile_counter_bias symbol\nwhich is referenced by the profiling initialization, which itself\nis pulled in by the rust driver here [1].\n\nIt is enabled with -Cllvm-args=-runtime-counter-relocation for\nplatforms which are opt-in to this mode like Linux. On these\nplatforms there will be no link error, rather just surprising\nbehavior for a user which request runtime counter relocation.\nThe profiling runtime will not see that symbol go on as if it\nwere never there. On Fuchsia, the profiling runtime must have\nthis symbol which will cause a hard link error.\n\nAs an aside, I don't have enough context as to why rust's LTO\nmodel is how it is. AFAICT, the internalize pass is only safe\nto run at link time when all symbol information is actually\nknown, this being an example as to why. I think special casing\nthis symbol as a known one that LLVM can emit which should not\nhave it's visbility de-escalated should be fine given how\nseldom this pattern of defining an undefined symbol to get\ninitilization code pulled in is. From a quick grep,\n__llvm_profile_runtime is the only symbol that rustc does this\nfor.\n\n[1] https://github.com/rust-lang/rust/blob/0265a3e93bf1b89d97cae113ed214954d5c35e22/compiler/rustc_codegen_ssa/src/back/linker.rs#L598", "tree": {"sha": "d92eb7558dcc4b0b160505a586038eaa2efaa2d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d92eb7558dcc4b0b160505a586038eaa2efaa2d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d88d3605339d61c81d16b29a1c01edf771a8fe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d88d3605339d61c81d16b29a1c01edf771a8fe6", "html_url": "https://github.com/rust-lang/rust/commit/5d88d3605339d61c81d16b29a1c01edf771a8fe6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d88d3605339d61c81d16b29a1c01edf771a8fe6/comments", "author": {"login": "abrachet", "id": 5566895, "node_id": "MDQ6VXNlcjU1NjY4OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5566895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrachet", "html_url": "https://github.com/abrachet", "followers_url": "https://api.github.com/users/abrachet/followers", "following_url": "https://api.github.com/users/abrachet/following{/other_user}", "gists_url": "https://api.github.com/users/abrachet/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrachet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrachet/subscriptions", "organizations_url": "https://api.github.com/users/abrachet/orgs", "repos_url": "https://api.github.com/users/abrachet/repos", "events_url": "https://api.github.com/users/abrachet/events{/privacy}", "received_events_url": "https://api.github.com/users/abrachet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abrachet", "id": 5566895, "node_id": "MDQ6VXNlcjU1NjY4OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5566895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrachet", "html_url": "https://github.com/abrachet", "followers_url": "https://api.github.com/users/abrachet/followers", "following_url": "https://api.github.com/users/abrachet/following{/other_user}", "gists_url": "https://api.github.com/users/abrachet/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrachet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrachet/subscriptions", "organizations_url": "https://api.github.com/users/abrachet/orgs", "repos_url": "https://api.github.com/users/abrachet/repos", "events_url": "https://api.github.com/users/abrachet/events{/privacy}", "received_events_url": "https://api.github.com/users/abrachet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c250aa1231f1e1b0953829e999e4862961207d", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c250aa1231f1e1b0953829e999e4862961207d", "html_url": "https://github.com/rust-lang/rust/commit/19c250aa1231f1e1b0953829e999e4862961207d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "551663bfbbd30177707d0d72a6e901e7af4da328", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d88d3605339d61c81d16b29a1c01edf771a8fe6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d88d3605339d61c81d16b29a1c01edf771a8fe6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=5d88d3605339d61c81d16b29a1c01edf771a8fe6", "patch": "@@ -133,6 +133,10 @@ fn prepare_lto(\n         }\n     }\n \n+    // __llvm_profile_counter_bias is pulled in at link time by an undefined reference to\n+    // __llvm_profile_runtime, therefore we won't know until link time if this symbol\n+    // should have default visibility.\n+    symbols_below_threshold.push(CString::new(\"__llvm_profile_counter_bias\").unwrap());\n     Ok((symbols_below_threshold, upstream_modules))\n }\n "}, {"sha": "28caa7f4aa3534e7521e2ef6f956b59adfae13f5", "filename": "src/test/codegen/pgo-counter-bias.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d88d3605339d61c81d16b29a1c01edf771a8fe6/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d88d3605339d61c81d16b29a1c01edf771a8fe6/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs?ref=5d88d3605339d61c81d16b29a1c01edf771a8fe6", "patch": "@@ -0,0 +1,10 @@\n+// Test that __llvm_profile_counter_bias does not get internalized by lto.\n+\n+// ignore-macos -runtime-counter-relocation not honored on Mach-O\n+// compile-flags: -Cprofile-generate -Cllvm-args=-runtime-counter-relocation -Clto=fat\n+// needs-profiler-support\n+// no-prefer-dynamic\n+\n+// CHECK: @__llvm_profile_counter_bias = {{.*}}global\n+\n+pub fn main() {}"}]}