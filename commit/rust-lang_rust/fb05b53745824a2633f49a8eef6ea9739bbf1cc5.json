{"sha": "fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "node_id": "C_kwDOAAsO6NoAKGZiMDViNTM3NDU4MjRhMjYzM2Y0OWE4ZWVmNmVhOTczOWJiZjFjYzU", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-06-14T23:11:24Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-06-14T23:46:13Z"}, "message": "Remove `rustc_deprecated` diagnostics", "tree": {"sha": "9889214f1a4411e3ae09c056251efa1f5d8942d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9889214f1a4411e3ae09c056251efa1f5d8942d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYqkdxQAKCRC4DhnkZita\npJLAAPsGrpbCqxM4TBoB0rzqI2OcQIXEnLikQjvoPwhJKU2oXAD9EO5NaMroisvQ\nME4R9zHYD3OaS8o4jl+u7R0D7GBGlwg=\n=hXYt\n-----END PGP SIGNATURE-----", "payload": "tree 9889214f1a4411e3ae09c056251efa1f5d8942d1\nparent 1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966\nauthor Jacob Pratt <jacob@jhpratt.dev> 1655248284 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1655250373 -0400\n\nRemove `rustc_deprecated` diagnostics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "html_url": "https://github.com/rust-lang/rust/commit/fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966", "html_url": "https://github.com/rust-lang/rust/commit/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966"}], "stats": {"total": 403, "additions": 166, "deletions": 237}, "files": [{"sha": "4024f883f3798e4de8dacabea571a96e2d6df5a5", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -406,8 +406,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n         // Emit errors for non-staged-api crates.\n         if !self.features.staged_api {\n-            if attr.has_name(sym::rustc_deprecated)\n-                || attr.has_name(sym::unstable)\n+            if attr.has_name(sym::unstable)\n                 || attr.has_name(sym::stable)\n                 || attr.has_name(sym::rustc_const_unstable)\n                 || attr.has_name(sym::rustc_const_stable)"}, {"sha": "ce7c0eb72cd24fe7bbb49297aaf7031655c71ff1", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -720,18 +720,10 @@ where\n     let is_rustc = sess.features_untracked().staged_api;\n \n     'outer: for attr in attrs_iter {\n-        if !(attr.has_name(sym::deprecated) || attr.has_name(sym::rustc_deprecated)) {\n+        if !attr.has_name(sym::deprecated) {\n             continue;\n         }\n \n-        // FIXME(jhpratt) remove this eventually\n-        if attr.has_name(sym::rustc_deprecated) {\n-            diagnostic\n-                .struct_span_err(attr.span, \"`#[rustc_deprecated]` has been removed\")\n-                .help(\"use `#[deprecated]` instead\")\n-                .emit();\n-        }\n-\n         let Some(meta) = attr.meta() else {\n             continue;\n         };\n@@ -787,25 +779,6 @@ where\n                                     continue 'outer;\n                                 }\n                             }\n-                            // FIXME(jhpratt) remove this eventually\n-                            sym::reason if attr.has_name(sym::rustc_deprecated) => {\n-                                if !get(mi, &mut note) {\n-                                    continue 'outer;\n-                                }\n-\n-                                let mut diag = diagnostic\n-                                    .struct_span_err(mi.span, \"`reason` has been renamed\");\n-                                match note {\n-                                    Some(note) => diag.span_suggestion(\n-                                        mi.span,\n-                                        \"use `note` instead\",\n-                                        format!(\"note = \\\"{note}\\\"\"),\n-                                        Applicability::MachineApplicable,\n-                                    ),\n-                                    None => diag.span_help(mi.span, \"use `note` instead\"),\n-                                };\n-                                diag.emit();\n-                            }\n                             sym::suggestion => {\n                                 if !sess.features_untracked().deprecated_suggestion {\n                                     let mut diag = sess.struct_span_err("}, {"sha": "d4452a79dfbe131e75525c8e4a4c44d93198b670", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -489,11 +489,6 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     // ==========================================================================\n \n     ungated!(feature, CrateLevel, template!(List: \"name1, name2, ...\"), DuplicatesOk),\n-    // FIXME(jhpratt) remove this eventually\n-    ungated!(\n-        rustc_deprecated, Normal,\n-        template!(List: r#\"since = \"version\", note = \"...\"\"#), ErrorFollowing\n-    ),\n     // DuplicatesOk since it has its own validation\n     ungated!(\n         stable, Normal, template!(List: r#\"feature = \"name\", since = \"version\"\"#), DuplicatesOk,"}, {"sha": "4fe8b5a73478502961fee88903603e836c8e505d", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -152,9 +152,7 @@ impl CheckAttrVisitor<'_> {\n                 sym::link_name => self.check_link_name(hir_id, attr, span, target),\n                 sym::link_section => self.check_link_section(hir_id, attr, span, target),\n                 sym::no_mangle => self.check_no_mangle(hir_id, attr, span, target),\n-                sym::deprecated | sym::rustc_deprecated => {\n-                    self.check_deprecated(hir_id, attr, span, target)\n-                }\n+                sym::deprecated => self.check_deprecated(hir_id, attr, span, target),\n                 sym::macro_use | sym::macro_escape => self.check_macro_use(hir_id, attr, target),\n                 sym::path => self.check_generic_attr(hir_id, attr, target, &[Target::Mod]),\n                 sym::plugin_registrar => self.check_plugin_registrar(hir_id, attr, target),"}, {"sha": "ea51e3cfbc89082674f0b475c77965756c9eb34d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -1188,7 +1188,6 @@ symbols! {\n         rustc_const_unstable,\n         rustc_conversion_suggestion,\n         rustc_def_path,\n-        rustc_deprecated,\n         rustc_diagnostic_item,\n         rustc_diagnostic_macros,\n         rustc_dirty,"}, {"sha": "b87bd069c606c0a7c3935b249f40a0960bac6717", "filename": "src/test/ui/deprecation/rustc_deprecated.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.rs?ref=1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966", "patch": "@@ -1,13 +0,0 @@\n-// compile-flags: --crate-type=lib\n-\n-#![feature(staged_api)]\n-#![stable(since = \"1.0.0\", feature = \"rust1\")]\n-\n-#[rustc_deprecated( //~ ERROR `#[rustc_deprecated]` has been removed\n-    //~^ HELP use `#[deprecated]` instead\n-    since = \"1.100.0\",\n-    reason = \"text\" //~ ERROR `reason` has been renamed\n-    //~^ HELP use `note` instead\n-)]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-fn foo() {}"}, {"sha": "4413e196f09c49947dcf098804cafc2528a66152", "filename": "src/test/ui/deprecation/rustc_deprecated.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecated.stderr?ref=1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966", "patch": "@@ -1,21 +0,0 @@\n-error: `#[rustc_deprecated]` has been removed\n-  --> $DIR/rustc_deprecated.rs:6:1\n-   |\n-LL | / #[rustc_deprecated(\n-LL | |\n-LL | |     since = \"1.100.0\",\n-LL | |     reason = \"text\"\n-LL | |\n-LL | | )]\n-   | |__^\n-   |\n-   = help: use `#[deprecated]` instead\n-\n-error: `reason` has been renamed\n-  --> $DIR/rustc_deprecated.rs:9:5\n-   |\n-LL |     reason = \"text\"\n-   |     ^^^^^^^^^^^^^^^ help: use `note` instead: `note = \"text\"`\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "8db12e55d25c27d88f7b17a149f8f77f5021da99", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -69,7 +69,6 @@\n #![link_section = \"1800\"]\n //~^ WARN attribute should be applied to a function or static\n //~^^ WARN this was previously accepted by the compiler\n-// see issue-43106-gating-of-rustc_deprecated.rs\n #![must_use]\n //~^ WARN `#[must_use]` has no effect\n // see issue-43106-gating-of-stable.rs"}, {"sha": "3f838fcf523552de646efa5aa4c5d63eb785454c", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 163, "deletions": 163, "changes": 326, "blob_url": "https://github.com/rust-lang/rust/blob/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb05b53745824a2633f49a8eef6ea9739bbf1cc5/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=fb05b53745824a2633f49a8eef6ea9739bbf1cc5", "patch": "@@ -1,13 +1,13 @@\n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:400:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n@@ -43,165 +43,165 @@ LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:106:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:105:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:109:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:108:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:112:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:115:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:118:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:121:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:124:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:128:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:127:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:131:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:134:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:137:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:140:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:143:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:147:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:146:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:150:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:153:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:156:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:159:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:162:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:166:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:165:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:169:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:172:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:175:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:178:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:85:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:84:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:95:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:94:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n@@ -213,13 +213,13 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:267:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:285:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:284:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -236,31 +236,31 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:343:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:342:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:377:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -277,7 +277,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -294,7 +294,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:521:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -311,7 +311,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:554:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:553:1\n    |\n LL |   #[link()]\n    |   ^^^^^^^^^\n@@ -328,55 +328,55 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[must_use]` has no effect when applied to a module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:605:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:604:1\n    |\n LL | #[must_use]\n    | ^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:618:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:617:1\n    |\n LL | #[windows_subsystem = \"windows\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:657:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:1\n    |\n LL | #[no_builtins]\n    | ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -432,351 +432,351 @@ LL | #![link_section = \"1800\"]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[must_use]` has no effect when applied to a module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:73:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:72:1\n    |\n LL | #![must_use]\n    | ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:186:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:189:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:188:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:192:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:195:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:202:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:205:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:208:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:207:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:211:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:210:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:214:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:254:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:253:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:257:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:256:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:259:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:263:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:262:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:270:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:269:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:273:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:272:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:276:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:275:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:279:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:290:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:289:17\n    |\n LL |     mod inner { #![no_mangle] }\n    |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:297:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:296:5\n    |\n LL |     #[no_mangle] struct S;\n    |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:301:5\n    |\n LL |     #[no_mangle] type T = S;\n    |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:307:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:306:5\n    |\n LL |     #[no_mangle] impl S { }\n    |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:312:9\n    |\n LL |         #[no_mangle] fn foo();\n    |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:318:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:317:9\n    |\n LL |         #[no_mangle] fn bar() {}\n    |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:327:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:333:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:336:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:335:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:339:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:346:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:345:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:351:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:357:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:371:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:374:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:381:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:384:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:383:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:386:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:393:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:410:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:413:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:460:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:459:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:467:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:472:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -786,391 +786,391 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:501:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:506:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:510:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:515:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:527:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:535:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:540:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:539:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:545:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:560:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:559:17\n    |\n LL |     mod inner { #![link()] }\n    |     ------------^^^^^^^^^^-- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:565:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:564:5\n    |\n LL |     #[link()] fn f() { }\n    |     ^^^^^^^^^ ---------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:570:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:569:5\n    |\n LL |     #[link()] struct S;\n    |     ^^^^^^^^^ --------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:575:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:574:5\n    |\n LL |     #[link()] type T = S;\n    |     ^^^^^^^^^ ----------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:580:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:579:5\n    |\n LL |     #[link()] impl S { }\n    |     ^^^^^^^^^ ---------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block with non-Rust ABI\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:585:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:584:5\n    |\n LL |     #[link()] extern \"Rust\" {}\n    |     ^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[must_use]` has no effect when applied to a module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:607:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:606:17\n    |\n LL |     mod inner { #![must_use] }\n    |                 ^^^^^^^^^^^^\n \n warning: `#[must_use]` has no effect when applied to a type alias\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:613:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:612:5\n    |\n LL |     #[must_use] type T = S;\n    |     ^^^^^^^^^^^\n \n warning: `#[must_use]` has no effect when applied to an item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:615:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:5\n    |\n LL |     #[must_use] impl S { }\n    |     ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:621:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:620:17\n    |\n LL |     mod inner { #![windows_subsystem=\"windows\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:624:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:5\n    |\n LL |     #[windows_subsystem = \"windows\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:626:5\n    |\n LL |     #[windows_subsystem = \"windows\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:629:5\n    |\n LL |     #[windows_subsystem = \"windows\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:633:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:632:5\n    |\n LL |     #[windows_subsystem = \"windows\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:641:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:645:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:644:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:654:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:653:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:661:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:670:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:669:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:682:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:686:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:702:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:709:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:17\n    |\n LL |     mod inner { #![no_builtins] }\n    |                 ^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:721:5\n    |\n LL |     #[no_builtins] fn f() { }\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:725:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[no_builtins] struct S;\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_builtins] type T = S;\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n    |\n LL |     #[no_builtins] impl S { }\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:740:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:744:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:747:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:759:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:763:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:768:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:91:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^"}]}