{"sha": "cad617bba054334e2172b9ef54f2ed82c6067794", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZDYxN2JiYTA1NDMzNGUyMTcyYjllZjU0ZjJlZDgyYzYwNjc3OTQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-15T09:15:08Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-15T09:19:59Z"}, "message": "some clippy::performance fixes\n\nuse vec![] instead of Vec::new() +  push()\navoid redundant clones\nuse chars instead of &str for single char patterns in ends_with() and starts_with()\nallocate some Vecs with capacity to avoid unneccessary resizing", "tree": {"sha": "3c124ef8606b985353de946245498babe5d7c6a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c124ef8606b985353de946245498babe5d7c6a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cad617bba054334e2172b9ef54f2ed82c6067794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cad617bba054334e2172b9ef54f2ed82c6067794", "html_url": "https://github.com/rust-lang/rust/commit/cad617bba054334e2172b9ef54f2ed82c6067794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cad617bba054334e2172b9ef54f2ed82c6067794/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de360275416ca095102f2b17d6ca1de3bd091fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/de360275416ca095102f2b17d6ca1de3bd091fdb", "html_url": "https://github.com/rust-lang/rust/commit/de360275416ca095102f2b17d6ca1de3bd091fdb"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "caa760d211ccacfbf23413bd2451c92d00c2d412", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -266,8 +266,7 @@ impl ModuleDef {\n     }\n \n     pub fn canonical_path(&self, db: &dyn HirDatabase) -> Option<String> {\n-        let mut segments = Vec::new();\n-        segments.push(self.name(db)?.to_string());\n+        let mut segments = vec![self.name(db)?.to_string()];\n         for m in self.module(db)?.path_to_root(db) {\n             segments.extend(m.name(db).map(|it| it.to_string()))\n         }"}, {"sha": "5e908b22374df3edc92bdb58aa05f187dc544f30", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -108,7 +108,7 @@ fn parse_adt(tt: &tt::Subtree) -> Result<BasicAdtInfo, mbe::ExpandError> {\n }\n \n fn make_type_args(n: usize, bound: Vec<tt::TokenTree>) -> Vec<tt::TokenTree> {\n-    let mut result = Vec::<tt::TokenTree>::new();\n+    let mut result = Vec::<tt::TokenTree>::with_capacity(n * 2);\n     result.push(\n         tt::Leaf::Punct(tt::Punct {\n             char: '<',"}, {"sha": "d571ed5593ee6b4f7c8dc6cc0155e7420b1965b9", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -218,7 +218,7 @@ mod tests {\n         let result = join_lines(&file, range);\n \n         let actual = {\n-            let mut actual = before.to_string();\n+            let mut actual = before;\n             result.apply(&mut actual);\n             actual\n         };\n@@ -622,7 +622,7 @@ fn foo() {\n         let parse = SourceFile::parse(&before);\n         let result = join_lines(&parse.tree(), sel);\n         let actual = {\n-            let mut actual = before.to_string();\n+            let mut actual = before;\n             result.apply(&mut actual);\n             actual\n         };"}, {"sha": "a718faf6389e87e74ebb8ed3e50568ddf6f0c681", "filename": "crates/ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -145,9 +145,8 @@ mod tests {\n     use super::*;\n \n     fn do_type_char(char_typed: char, before: &str) -> Option<String> {\n-        let (offset, before) = extract_offset(before);\n+        let (offset, mut before) = extract_offset(before);\n         let edit = TextEdit::insert(offset, char_typed.to_string());\n-        let mut before = before.to_string();\n         edit.apply(&mut before);\n         let parse = SourceFile::parse(&before);\n         on_char_typed_inner(&parse.tree(), offset, char_typed).map(|it| {"}, {"sha": "cee4eec108be0b8e3a656e21325528df1afbc966", "filename": "crates/ide_completion/src/completions/postfix/format_like.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -59,7 +59,7 @@ pub(crate) fn add_format_like_completions(\n /// Checks whether provided item is a string literal.\n fn string_literal_contents(item: &ast::String) -> Option<String> {\n     let item = item.text();\n-    if item.len() >= 2 && item.starts_with(\"\\\"\") && item.ends_with(\"\\\"\") {\n+    if item.len() >= 2 && item.starts_with('\\\"') && item.ends_with('\\\"') {\n         return Some(item[1..item.len() - 1].to_owned());\n     }\n "}, {"sha": "b715ebfc4c9b39393df63299b72a9f79446ac838", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -222,14 +222,10 @@ fn convert_doc_comment(token: &syntax::SyntaxToken) -> Option<Vec<tt::TokenTree>\n     let doc = comment.kind().doc?;\n \n     // Make `doc=\"\\\" Comments\\\"\"\n-    let mut meta_tkns = Vec::new();\n-    meta_tkns.push(mk_ident(\"doc\"));\n-    meta_tkns.push(mk_punct('='));\n-    meta_tkns.push(mk_doc_literal(&comment));\n+    let meta_tkns = vec![mk_ident(\"doc\"), mk_punct('='), mk_doc_literal(&comment)];\n \n     // Make `#![]`\n-    let mut token_trees = Vec::new();\n-    token_trees.push(mk_punct('#'));\n+    let mut token_trees = vec![mk_punct('#')];\n     if let ast::CommentPlacement::Inner = doc {\n         token_trees.push(mk_punct('!'));\n     }"}, {"sha": "b903658fb9c878c4d49ed337b3190653b0fccb5f", "filename": "crates/proc_macro_api/src/version.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -33,7 +33,7 @@ pub(crate) fn read_info(dylib_path: &Path) -> io::Result<RustCInfo> {\n     }\n \n     let version_part = items.next().ok_or(err!(\"no version string\"))?;\n-    let mut version_parts = version_part.split(\"-\");\n+    let mut version_parts = version_part.split('-');\n     let version = version_parts.next().ok_or(err!(\"no version\"))?;\n     let channel = version_parts.next().unwrap_or_default().to_string();\n \n@@ -51,7 +51,7 @@ pub(crate) fn read_info(dylib_path: &Path) -> io::Result<RustCInfo> {\n     let date = date[0..date.len() - 2].to_string();\n \n     let version_numbers = version\n-        .split(\".\")\n+        .split('.')\n         .map(|it| it.parse::<usize>())\n         .collect::<Result<Vec<_>, _>>()\n         .map_err(|_| err!(\"version number error\"))?;"}, {"sha": "312708575e0f5c336027dfa1db6f2b2bb8d9e628", "filename": "crates/project_model/src/rustc_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -6,7 +6,7 @@ use crate::{cfg_flag::CfgFlag, utf8_stdout};\n \n pub(crate) fn get(target: Option<&str>) -> Vec<CfgFlag> {\n     let _p = profile::span(\"rustc_cfg::get\");\n-    let mut res = Vec::new();\n+    let mut res = Vec::with_capacity(6 * 2 + 1);\n \n     // Some nightly-only cfgs, which are required for stdlib\n     res.push(CfgFlag::Atom(\"target_thread_local\".into()));"}, {"sha": "3ca7f80403e5efbe408525d04f48addbe8abb03a", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad617bba054334e2172b9ef54f2ed82c6067794/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=cad617bba054334e2172b9ef54f2ed82c6067794", "patch": "@@ -360,11 +360,11 @@ mod tests {\n             \"Completion with disjoint edits is valid\"\n         );\n         assert!(\n-            !all_edits_are_disjoint(&completion_with_disjoint_edits, &[joint_edit.clone()]),\n+            !all_edits_are_disjoint(&completion_with_disjoint_edits, &[joint_edit]),\n             \"Completion with disjoint edits and joint extra edit is invalid\"\n         );\n         assert!(\n-            all_edits_are_disjoint(&completion_with_disjoint_edits, &[disjoint_edit_2.clone()]),\n+            all_edits_are_disjoint(&completion_with_disjoint_edits, &[disjoint_edit_2]),\n             \"Completion with disjoint edits and joint extra edit is valid\"\n         );\n     }"}]}