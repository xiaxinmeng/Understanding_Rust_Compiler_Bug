{"sha": "c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6", "node_id": "C_kwDOAAsO6NoAKGM2ZDIzYmRkMzI4ZGVjZGIwYTBlOTg5ODBhZjRjM2I3YWExM2Q5ZDY", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-03T01:42:34Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-03T01:42:34Z"}, "message": "code cleanup", "tree": {"sha": "9cc41e2d209366066fffce633cf684cdc45b606f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc41e2d209366066fffce633cf684cdc45b606f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6", "html_url": "https://github.com/rust-lang/rust/commit/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a21a055ca6f0d0244cfe79ffba908987e475c946", "url": "https://api.github.com/repos/rust-lang/rust/commits/a21a055ca6f0d0244cfe79ffba908987e475c946", "html_url": "https://github.com/rust-lang/rust/commit/a21a055ca6f0d0244cfe79ffba908987e475c946"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "4ff89511938844f5d96feb43ed170010aad07ccc", "filename": "compiler/rustc_hir_typeck/src/cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs?ref=c6d23bdd328decdb0a0e98980af4c3b7aa13d9d6", "patch": "@@ -216,8 +216,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n         // inference is more completely known.\n         match cast_ty.kind() {\n             ty::Dynamic(_, _, ty::Dyn) | ty::Slice(..) => {\n-                let reported = check.report_cast_to_unsized_type(fcx);\n-                return Err(reported);\n+                Err(check.report_cast_to_unsized_type(fcx))\n             }\n             _ => Ok(check),\n         }"}]}