{"sha": "61d86fa06ca4d7c93109fc857300abbd25a19a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZDg2ZmEwNmNhNGQ3YzkzMTA5ZmM4NTczMDBhYmJkMjVhMTlhMGE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-25T20:48:48Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-25T21:31:32Z"}, "message": "Check for missing const-stability attributes in `stability`\n\nThis used to happen as a side-effect of `is_min_const_fn`, which was\nsubtle.", "tree": {"sha": "060d9cd9ac644335fd6e8456f84330c619550ffc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/060d9cd9ac644335fd6e8456f84330c619550ffc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61d86fa06ca4d7c93109fc857300abbd25a19a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61d86fa06ca4d7c93109fc857300abbd25a19a0a", "html_url": "https://github.com/rust-lang/rust/commit/61d86fa06ca4d7c93109fc857300abbd25a19a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61d86fa06ca4d7c93109fc857300abbd25a19a0a/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bfeee5fe0140b0c2e5c96b3208c02c4ab04f8b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bfeee5fe0140b0c2e5c96b3208c02c4ab04f8b5", "html_url": "https://github.com/rust-lang/rust/commit/5bfeee5fe0140b0c2e5c96b3208c02c4ab04f8b5"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "24972b5cc6a6ffe9d5404bcdfa2ab39c552add44", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/61d86fa06ca4d7c93109fc857300abbd25a19a0a/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61d86fa06ca4d7c93109fc857300abbd25a19a0a/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=61d86fa06ca4d7c93109fc857300abbd25a19a0a", "patch": "@@ -368,6 +368,21 @@ impl<'tcx> MissingStabilityAnnotations<'tcx> {\n             self.tcx.sess.span_err(span, &format!(\"{} has missing stability attribute\", descr));\n         }\n     }\n+\n+    fn check_missing_const_stability(&self, hir_id: HirId, span: Span) {\n+        let stab_map = self.tcx.stability();\n+        let stab = stab_map.local_stability(hir_id);\n+        if stab.map_or(false, |stab| stab.level.is_stable()) {\n+            let const_stab = stab_map.local_const_stability(hir_id);\n+            if const_stab.is_none() {\n+                self.tcx.sess.span_err(\n+                    span,\n+                    \"`#[stable]` const functions must also be either \\\n+                    `#[rustc_const_stable]` or `#[rustc_const_unstable]`\",\n+                );\n+            }\n+        }\n+    }\n }\n \n impl<'tcx> Visitor<'tcx> for MissingStabilityAnnotations<'tcx> {\n@@ -378,14 +393,23 @@ impl<'tcx> Visitor<'tcx> for MissingStabilityAnnotations<'tcx> {\n     }\n \n     fn visit_item(&mut self, i: &'tcx Item<'tcx>) {\n-        match i.kind {\n-            // Inherent impls and foreign modules serve only as containers for other items,\n-            // they don't have their own stability. They still can be annotated as unstable\n-            // and propagate this unstability to children, but this annotation is completely\n-            // optional. They inherit stability from their parents when unannotated.\n-            hir::ItemKind::Impl { of_trait: None, .. } | hir::ItemKind::ForeignMod(..) => {}\n+        // Inherent impls and foreign modules serve only as containers for other items,\n+        // they don't have their own stability. They still can be annotated as unstable\n+        // and propagate this unstability to children, but this annotation is completely\n+        // optional. They inherit stability from their parents when unannotated.\n+        if !matches!(\n+            i.kind,\n+            hir::ItemKind::Impl { of_trait: None, .. } | hir::ItemKind::ForeignMod(..)\n+        ) {\n+            self.check_missing_stability(i.hir_id, i.span);\n+        }\n \n-            _ => self.check_missing_stability(i.hir_id, i.span),\n+        // Ensure `const fn` that are `stable` have one of `rustc_const_unstable` or\n+        // `rustc_const_stable`.\n+        if self.tcx.features().staged_api\n+            && matches!(&i.kind, hir::ItemKind::Fn(sig, ..) if sig.header.is_const())\n+        {\n+            self.check_missing_const_stability(i.hir_id, i.span);\n         }\n \n         intravisit::walk_item(self, i)"}]}