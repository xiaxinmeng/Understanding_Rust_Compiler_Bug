{"sha": "6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "node_id": "C_kwDOAAsO6NoAKDZmMGEyYWRmNmVmOTcxZWFmMDk5MGE4ZWFmMGFlNjExYWZmOTg5N2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-03T16:37:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-03T16:37:42Z"}, "message": "Rollup merge of #105153 - oli-obk:fail_faster, r=compiler-errors\n\nCreate a hacky fail-fast mode that stops tests at the first failure\n\nThis is useful for not having to wait until all 10k+ ui tests have finished running and then having to crawl through hundreds of failure reports.\n\nYou now only get the first report when you turn on that env var and no new tests are run at all\n\nThis works like a charm, but is obviously welded on very crudely", "tree": {"sha": "f023075803754465c5fb3322fd070d0ff5473501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f023075803754465c5fb3322fd070d0ff5473501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJji3tWCRBK7hj4Ov3rIwAAKI8IAIY/b+hjb7qEtMInLPk//xrW\nslUSwwKEwRnNlIbfjFwRawCVm4YswOiaX43RqhxoFZIWtpOiHzObAQh/2f2T0Noa\n6hoLJZgPMoZT9LJYt4BbmGvYnsmKcwEK0hWdBv8fcyXuwoBJg14ixXALr0myWLKv\nGA/0FWnJzOFaTqSmwfEf8osquMWmnLHscKL21u5s4udK+kLtaanc+60WYdVNlfj6\nUy7K4Iuqy+eR+d2QjK18+AKS9sPbddutda9lXZPGAlQAfF20zNfSn4iyd1vB9lsa\nFyQDnYPitPbM7dgCdhVzrrafpQ6XUoPF4g1kZsQ+VPppxFKzCJn+2MnpD8bzc3s=\n=qSDE\n-----END PGP SIGNATURE-----\n", "payload": "tree f023075803754465c5fb3322fd070d0ff5473501\nparent 1a2f79b82cc1182f67f13646526d254cb440fd16\nparent e59025867da9032ecacc36987b207a8a1e531fee\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670085462 +0100\ncommitter GitHub <noreply@github.com> 1670085462 +0100\n\nRollup merge of #105153 - oli-obk:fail_faster, r=compiler-errors\n\nCreate a hacky fail-fast mode that stops tests at the first failure\n\nThis is useful for not having to wait until all 10k+ ui tests have finished running and then having to crawl through hundreds of failure reports.\n\nYou now only get the first report when you turn on that env var and no new tests are run at all\n\nThis works like a charm, but is obviously welded on very crudely\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "html_url": "https://github.com/rust-lang/rust/commit/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2f79b82cc1182f67f13646526d254cb440fd16", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2f79b82cc1182f67f13646526d254cb440fd16", "html_url": "https://github.com/rust-lang/rust/commit/1a2f79b82cc1182f67f13646526d254cb440fd16"}, {"sha": "e59025867da9032ecacc36987b207a8a1e531fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e59025867da9032ecacc36987b207a8a1e531fee", "html_url": "https://github.com/rust-lang/rust/commit/e59025867da9032ecacc36987b207a8a1e531fee"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "524658bce139d73794a18ca88237241a6aec1dce", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "patch": "@@ -26,6 +26,10 @@ pub struct TestOpts {\n     pub test_threads: Option<usize>,\n     pub skip: Vec<String>,\n     pub time_options: Option<TestTimeOptions>,\n+    /// Stop at first failing test.\n+    /// May run a few more tests due to threading, but will\n+    /// abort as soon as possible.\n+    pub fail_fast: bool,\n     pub options: Options,\n }\n \n@@ -296,6 +300,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n         skip,\n         time_options,\n         options,\n+        fail_fast: false,\n     };\n \n     Ok(test_opts)"}, {"sha": "a3c39f71f08b88ef38fd3e7673a78d062a78f630", "filename": "library/test/src/console.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Fconsole.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Fconsole.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fconsole.rs?ref=6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "patch": "@@ -293,7 +293,7 @@ pub fn run_tests_console(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Resu\n     run_tests(opts, tests, |x| on_test_event(&x, &mut st, &mut *out))?;\n     st.exec_time = start_time.map(|t| TestSuiteExecTime(t.elapsed()));\n \n-    assert!(st.current_test_count() == st.total);\n+    assert!(opts.fail_fast || st.current_test_count() == st.total);\n \n     out.write_run_finish(&st)\n }"}, {"sha": "256c9e8d141e0baa57684ec5ebdb9c74cb5fc7c0", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "patch": "@@ -384,8 +384,17 @@ where\n             let mut completed_test = rx.recv().unwrap();\n             RunningTest { join_handle }.join(&mut completed_test);\n \n+            let fail_fast = match completed_test.result {\n+                TrIgnored | TrOk | TrBench(_) => false,\n+                TrFailed | TrFailedMsg(_) | TrTimedFail => opts.fail_fast,\n+            };\n+\n             let event = TestEvent::TeResult(completed_test);\n             notify_about_test_event(event)?;\n+\n+            if fail_fast {\n+                return Ok(());\n+            }\n         }\n     } else {\n         while pending > 0 || !remaining.is_empty() {\n@@ -431,9 +440,20 @@ where\n             let running_test = running_tests.remove(&completed_test.id).unwrap();\n             running_test.join(&mut completed_test);\n \n+            let fail_fast = match completed_test.result {\n+                TrIgnored | TrOk | TrBench(_) => false,\n+                TrFailed | TrFailedMsg(_) | TrTimedFail => opts.fail_fast,\n+            };\n+\n             let event = TestEvent::TeResult(completed_test);\n             notify_about_test_event(event)?;\n             pending -= 1;\n+\n+            if fail_fast {\n+                // Prevent remaining test threads from panicking\n+                std::mem::forget(rx);\n+                return Ok(());\n+            }\n         }\n     }\n "}, {"sha": "3a0260f86cf5d081f08a4b6122a0f40c3ed77b38", "filename": "library/test/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/library%2Ftest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftests.rs?ref=6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "patch": "@@ -51,6 +51,7 @@ impl TestOpts {\n             skip: vec![],\n             time_options: None,\n             options: Options::new(),\n+            fail_fast: false,\n         }\n     }\n }"}, {"sha": "91c701a5ddd2e469b9115fc02af7eab28dd5349e", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "patch": "@@ -514,6 +514,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         options: test::Options::new(),\n         time_options: None,\n         force_run_in_process: false,\n+        fail_fast: std::env::var_os(\"RUSTC_TEST_FAIL_FAST\").is_some(),\n     }\n }\n "}]}