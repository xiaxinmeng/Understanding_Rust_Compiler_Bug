{"sha": "cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjOGQ0NTU4OTU2ZTQ4ZmY2NWQ1ZTBkMWFmMTNmM2Y2ZTg0NjZiODQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-02-13T17:11:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-02-13T17:11:20Z"}, "message": "Add filename when running rustdoc --test on a markdown file", "tree": {"sha": "9911d09beaba7bb4e11989bc223d77b7fa49995f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9911d09beaba7bb4e11989bc223d77b7fa49995f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "html_url": "https://github.com/rust-lang/rust/commit/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717ac960b51a5a2bbedf0e4da899aec7ab2ab7ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/717ac960b51a5a2bbedf0e4da899aec7ab2ab7ee", "html_url": "https://github.com/rust-lang/rust/commit/717ac960b51a5a2bbedf0e4da899aec7ab2ab7ee"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c67e2fdc2b0276a7ecf45938b19cfb66f94cdef5", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "patch": "@@ -155,7 +155,8 @@ pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n     let mut opts = TestOptions::default();\n     opts.no_crate_inject = true;\n     let mut collector = Collector::new(input.to_string(), cfgs, libs, externs,\n-                                       true, opts, maybe_sysroot, None);\n+                                       true, opts, maybe_sysroot, None,\n+                                       Some(input.to_owned()));\n     find_testable_code(&input_str, &mut collector, DUMMY_SP);\n     test_args.insert(0, \"rustdoctest\".to_string());\n     testing::test_main(&test_args, collector.tests);"}, {"sha": "1c37067d7f69d46f8914db8fd4ed496dec3eccd9", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "patch": "@@ -104,7 +104,8 @@ pub fn run(input: &str,\n                                        false,\n                                        opts,\n                                        maybe_sysroot,\n-                                       Some(codemap));\n+                                       Some(codemap),\n+                                       None);\n \n     {\n         let dep_graph = DepGraph::new(false);\n@@ -391,12 +392,13 @@ pub struct Collector {\n     maybe_sysroot: Option<PathBuf>,\n     position: Span,\n     codemap: Option<Rc<CodeMap>>,\n+    filename: Option<String>,\n }\n \n impl Collector {\n     pub fn new(cratename: String, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n                use_headers: bool, opts: TestOptions, maybe_sysroot: Option<PathBuf>,\n-               codemap: Option<Rc<CodeMap>>) -> Collector {\n+               codemap: Option<Rc<CodeMap>>, filename: Option<String>) -> Collector {\n         Collector {\n             tests: Vec::new(),\n             names: Vec::new(),\n@@ -411,6 +413,7 @@ impl Collector {\n             maybe_sysroot: maybe_sysroot,\n             position: DUMMY_SP,\n             codemap: codemap,\n+            filename: filename,\n         }\n     }\n \n@@ -483,6 +486,8 @@ impl Collector {\n     pub fn get_filename(&self) -> String {\n         if let Some(ref codemap) = self.codemap {\n             codemap.span_to_filename(self.position)\n+        } else if let Some(ref filename) = self.filename {\n+            filename.clone()\n         } else {\n             \"<input>\".to_owned()\n         }"}]}