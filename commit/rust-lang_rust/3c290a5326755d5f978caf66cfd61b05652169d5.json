{"sha": "3c290a5326755d5f978caf66cfd61b05652169d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMjkwYTUzMjY3NTVkNWY5NzhjYWY2NmNmZDYxYjA1NjUyMTY5ZDU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-21T09:42:40Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-21T09:42:40Z"}, "message": "Ensure assignments don't allow skipping projection checks", "tree": {"sha": "524979fd1cee2c938fb601716b81dbf77a5a5f03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/524979fd1cee2c938fb601716b81dbf77a5a5f03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c290a5326755d5f978caf66cfd61b05652169d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c290a5326755d5f978caf66cfd61b05652169d5", "html_url": "https://github.com/rust-lang/rust/commit/3c290a5326755d5f978caf66cfd61b05652169d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c290a5326755d5f978caf66cfd61b05652169d5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "html_url": "https://github.com/rust-lang/rust/commit/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "571fe99897058b7558177dbefda512245fc201b6", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=3c290a5326755d5f978caf66cfd61b05652169d5", "patch": "@@ -252,7 +252,16 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                     // projections are transparent for assignments\n                     // we qualify the entire destination at once, even if just a field would have\n                     // stricter qualification\n-                    Place::Projection(proj) => dest = &proj.base,\n+                    Place::Projection(proj) => {\n+                        // Catch more errors in the destination. `visit_place` also checks various\n+                        // projection rules like union field access and raw pointer deref\n+                        self.visit_place(\n+                            dest,\n+                            PlaceContext::MutatingUse(MutatingUseContext::Store),\n+                            location\n+                        );\n+                        dest = &proj.base;\n+                    },\n                     Place::Promoted(..) => bug!(\"promoteds don't exist yet during promotion\"),\n                     Place::Static(..) => {\n                         // Catch more errors in the destination. `visit_place` also checks that we"}, {"sha": "4806fecee431926030655d1cd26ffdcd88e29402", "filename": "src/test/ui/consts/projection_qualif.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs?ref=3c290a5326755d5f978caf66cfd61b05652169d5", "patch": "@@ -0,0 +1,14 @@\n+#![feature(const_let)]\n+\n+use std::cell::Cell;\n+\n+const FOO: &u32 = {\n+    let mut a = 42;\n+    {\n+        let b: *mut u32 = &mut a; //~ ERROR may only refer to immutable values\n+        unsafe { *b = 5; } //~ ERROR dereferencing raw pointers in constants\n+    }\n+    &{a}\n+};\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "d5252f199beac10bf42384c0e212c2b948574d7f", "filename": "src/test/ui/consts/projection_qualif.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c290a5326755d5f978caf66cfd61b05652169d5/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr?ref=3c290a5326755d5f978caf66cfd61b05652169d5", "patch": "@@ -0,0 +1,18 @@\n+error[E0017]: references in constants may only refer to immutable values\n+  --> $DIR/projection_qualif.rs:8:27\n+   |\n+LL |         let b: *mut u32 = &mut a; //~ ERROR may only refer to immutable values\n+   |                           ^^^^^^ constants require immutable values\n+\n+error[E0658]: dereferencing raw pointers in constants is unstable (see issue #51911)\n+  --> $DIR/projection_qualif.rs:9:18\n+   |\n+LL |         unsafe { *b = 5; } //~ ERROR dereferencing raw pointers in constants\n+   |                  ^^^^^^\n+   |\n+   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0017, E0658.\n+For more information about an error, try `rustc --explain E0017`."}]}