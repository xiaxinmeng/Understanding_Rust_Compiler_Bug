{"sha": "381295144e86f52f9a371a4798b01678eaa523a8", "node_id": "C_kwDOAAsO6NoAKDM4MTI5NTE0NGU4NmY1MmY5YTM3MWE0Nzk4YjAxNjc4ZWFhNTIzYTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-14T07:24:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-14T07:24:47Z"}, "message": "Auto merge of #14123 - dqkqd:discard-postfix-completion-for-indivisble-expr, r=Veykril\n\nfix: Don't trigger postfix completion in `if` block which has an `else` block\n\nFix #14096", "tree": {"sha": "c65c27aa61af0749fb3b4f895fac85d9c3c1b824", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c65c27aa61af0749fb3b4f895fac85d9c3c1b824"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381295144e86f52f9a371a4798b01678eaa523a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381295144e86f52f9a371a4798b01678eaa523a8", "html_url": "https://github.com/rust-lang/rust/commit/381295144e86f52f9a371a4798b01678eaa523a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381295144e86f52f9a371a4798b01678eaa523a8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a33e9d94825376336e2af0fa1b7fc727656df1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a33e9d94825376336e2af0fa1b7fc727656df1d9", "html_url": "https://github.com/rust-lang/rust/commit/a33e9d94825376336e2af0fa1b7fc727656df1d9"}, {"sha": "0285acc5f791e1d2bf652abb88ffeb0a75c1165a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0285acc5f791e1d2bf652abb88ffeb0a75c1165a", "html_url": "https://github.com/rust-lang/rust/commit/0285acc5f791e1d2bf652abb88ffeb0a75c1165a"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c55bd9aaae521b250d4d9217c51d1ad6220c7061", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/381295144e86f52f9a371a4798b01678eaa523a8/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381295144e86f52f9a371a4798b01678eaa523a8/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=381295144e86f52f9a371a4798b01678eaa523a8", "patch": "@@ -747,4 +747,16 @@ fn main() {\n             \"#,\n         );\n     }\n+\n+    #[test]\n+    fn no_postfix_completions_in_if_block_that_has_an_else() {\n+        check(\n+            r#\"\n+fn test() {\n+    if true {}.$0 else {}\n+}\n+\"#,\n+            expect![[r#\"\"#]],\n+        );\n+    }\n }"}, {"sha": "4c66f95903a932bfbde26c2834da7fb19413b9ad", "filename": "crates/ide-completion/src/context/analysis.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/381295144e86f52f9a371a4798b01678eaa523a8/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381295144e86f52f9a371a4798b01678eaa523a8/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs?ref=381295144e86f52f9a371a4798b01678eaa523a8", "patch": "@@ -605,6 +605,18 @@ fn classify_name_ref(\n                     },\n                     _ => false,\n                 };\n+\n+                let reciever_is_part_of_indivisible_expression = match &receiver {\n+                    Some(ast::Expr::IfExpr(_)) => {\n+                        let next_token_kind = next_non_trivia_token(name_ref.syntax().clone()).map(|t| t.kind());\n+                        next_token_kind == Some(SyntaxKind::ELSE_KW)\n+                    },\n+                    _ => false\n+                };\n+                if reciever_is_part_of_indivisible_expression {\n+                    return None;\n+                }\n+\n                 let kind = NameRefKind::DotAccess(DotAccess {\n                     receiver_ty: receiver.as_ref().and_then(|it| sema.type_of_expr(it)),\n                     kind: DotAccessKind::Field { receiver_is_ambiguous_float_literal },\n@@ -1317,6 +1329,22 @@ fn previous_non_trivia_token(e: impl Into<SyntaxElement>) -> Option<SyntaxToken>\n     None\n }\n \n+fn next_non_trivia_token(e: impl Into<SyntaxElement>) -> Option<SyntaxToken> {\n+    let mut token = match e.into() {\n+        SyntaxElement::Node(n) => n.last_token()?,\n+        SyntaxElement::Token(t) => t,\n+    }\n+    .next_token();\n+    while let Some(inner) = token {\n+        if !inner.kind().is_trivia() {\n+            return Some(inner);\n+        } else {\n+            token = inner.next_token();\n+        }\n+    }\n+    None\n+}\n+\n fn next_non_trivia_sibling(ele: SyntaxElement) -> Option<SyntaxElement> {\n     let mut e = ele.next_sibling_or_token();\n     while let Some(inner) = e {"}]}