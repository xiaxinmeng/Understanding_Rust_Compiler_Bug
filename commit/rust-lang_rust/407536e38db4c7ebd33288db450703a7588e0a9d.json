{"sha": "407536e38db4c7ebd33288db450703a7588e0a9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNzUzNmUzOGRiNGM3ZWJkMzMyODhkYjQ1MDcwM2E3NTg4ZTBhOWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-10T04:10:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-10T04:10:36Z"}, "message": "Auto merge of #60451 - rasendubi:binaryheap-min-heap, r=scottmcm\n\nBinaryHeap: add min-heap example\n\nFixes #58174.", "tree": {"sha": "0523b1ffe01a4a2c1ca52c60c8423b4ec0777c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0523b1ffe01a4a2c1ca52c60c8423b4ec0777c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/407536e38db4c7ebd33288db450703a7588e0a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/407536e38db4c7ebd33288db450703a7588e0a9d", "html_url": "https://github.com/rust-lang/rust/commit/407536e38db4c7ebd33288db450703a7588e0a9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/407536e38db4c7ebd33288db450703a7588e0a9d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03bd2f653f0d0adb69d862fbeec64663157e71e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/03bd2f653f0d0adb69d862fbeec64663157e71e1", "html_url": "https://github.com/rust-lang/rust/commit/03bd2f653f0d0adb69d862fbeec64663157e71e1"}, {"sha": "adbaf7a9cdc3f67116e2034d0e5e235779dae286", "url": "https://api.github.com/repos/rust-lang/rust/commits/adbaf7a9cdc3f67116e2034d0e5e235779dae286", "html_url": "https://github.com/rust-lang/rust/commit/adbaf7a9cdc3f67116e2034d0e5e235779dae286"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c355361b53c4690b3f346775d07d632f1fbb3bf4", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/407536e38db4c7ebd33288db450703a7588e0a9d/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/407536e38db4c7ebd33288db450703a7588e0a9d/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=407536e38db4c7ebd33288db450703a7588e0a9d", "patch": "@@ -207,6 +207,30 @@ use super::SpecExtend;\n /// // The heap should now be empty.\n /// assert!(heap.is_empty())\n /// ```\n+///\n+/// ## Min-heap\n+///\n+/// Either `std::cmp::Reverse` or a custom `Ord` implementation can be used to\n+/// make `BinaryHeap` a min-heap. This makes `heap.pop()` return the smallest\n+/// value instead of the greatest one.\n+///\n+/// ```\n+/// use std::collections::BinaryHeap;\n+/// use std::cmp::Reverse;\n+///\n+/// let mut heap = BinaryHeap::new();\n+///\n+/// // Wrap values in `Reverse`\n+/// heap.push(Reverse(1));\n+/// heap.push(Reverse(5));\n+/// heap.push(Reverse(2));\n+///\n+/// // If we pop these scores now, they should come back in the reverse order.\n+/// assert_eq!(heap.pop(), Some(Reverse(1)));\n+/// assert_eq!(heap.pop(), Some(Reverse(2)));\n+/// assert_eq!(heap.pop(), Some(Reverse(5)));\n+/// assert_eq!(heap.pop(), None);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BinaryHeap<T> {\n     data: Vec<T>,"}]}