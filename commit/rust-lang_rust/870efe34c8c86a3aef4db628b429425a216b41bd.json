{"sha": "870efe34c8c86a3aef4db628b429425a216b41bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MGVmZTM0YzhjODZhM2FlZjRkYjYyOGI0Mjk0MjVhMjE2YjQxYmQ=", "commit": {"author": {"name": "CrLF0710", "email": "crlf0710@gmail.com", "date": "2019-07-28T17:05:31Z"}, "committer": {"name": "CrLF0710", "email": "crlf0710@gmail.com", "date": "2019-07-29T17:56:03Z"}, "message": "Add very simple edition check to tidy; and add missing edition = 2018s.", "tree": {"sha": "e5a0951d315aa202687435f198967b84375aca87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5a0951d315aa202687435f198967b84375aca87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/870efe34c8c86a3aef4db628b429425a216b41bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/870efe34c8c86a3aef4db628b429425a216b41bd", "html_url": "https://github.com/rust-lang/rust/commit/870efe34c8c86a3aef4db628b429425a216b41bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/870efe34c8c86a3aef4db628b429425a216b41bd/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "html_url": "https://github.com/rust-lang/rust/commit/8b94e9e9188b65df38a5f1ae723617dc2dfb3155"}], "stats": {"total": 66, "additions": 56, "deletions": 10}, "files": [{"sha": "73fdee71f0c0ba6a2f265be059a5f4736306975e", "filename": "src/test/run-make/thumb-none-qemu/example/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -2,7 +2,7 @@\n name = \"example\"\n version = \"0.1.0\"\n authors = [\"Hideki Sekine <sekineh@me.com>\"]\n-# edition = \"2018\"\n+edition = \"2018\"\n \n [dependencies]\n cortex-m = \"0.5.4\""}, {"sha": "4a08419a07e14e885ff57b0cf767cd66d58f6739", "filename": "src/test/run-make/thumb-none-qemu/example/src/main.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -1,16 +1,14 @@\n // #![feature(stdsimd)]\n #![no_main]\n #![no_std]\n-\n-extern crate cortex_m;\n-\n-extern crate cortex_m_rt as rt;\n-extern crate cortex_m_semihosting as semihosting;\n-extern crate panic_halt;\n-\n use core::fmt::Write;\n use cortex_m::asm;\n-use rt::entry;\n+use cortex_m_rt::entry;\n+use cortex_m_semihosting as semihosting;\n+\n+//FIXME: This imports the provided #[panic_handler].\n+#[allow(rust_2018_idioms)]\n+extern crate panic_halt;\n \n entry!(main);\n \n@@ -22,7 +20,7 @@ fn main() -> ! {\n \n         // write something through semihosting interface\n         let mut hstdout = semihosting::hio::hstdout().unwrap();\n-        write!(hstdout, \"x = {}\\n\", x);\n+        let _ = write!(hstdout, \"x = {}\\n\", x);\n \n         // exit from qemu\n         semihosting::debug::exit(semihosting::debug::EXIT_SUCCESS);"}, {"sha": "ef7dc812af9d4f4681cfa6160ea0a52aafe6793a", "filename": "src/tools/rustc-std-workspace-alloc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -6,6 +6,7 @@ license = 'MIT OR Apache-2.0'\n description = \"\"\"\n Hack for the compiler's own build system\n \"\"\"\n+edition = \"2018\"\n \n [lib]\n path = \"lib.rs\""}, {"sha": "4a2e49fd1c3c77938fb242503008c04c7ecc9cd6", "filename": "src/tools/tidy/src/edition.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -0,0 +1,45 @@\n+//! Tidy check to ensure that crate `edition` is '2018'\n+//!\n+\n+use std::path::Path;\n+\n+fn filter_dirs(path: &Path) -> bool {\n+    // FIXME: just use super::filter_dirs after the submodules are updated.\n+    if super::filter_dirs(path) {\n+        return true;\n+    }\n+    let skip = [\n+        \"src/doc/book/second-edition\",\n+        \"src/doc/book/2018-edition\",\n+        \"src/doc/book/ci/stable-check\",\n+        \"src/doc/reference/stable-check\",\n+    ];\n+    skip.iter().any(|p| path.ends_with(p))\n+}\n+\n+fn is_edition_2018(mut line: &str) -> bool {\n+    line = line.trim();\n+    line == \"edition = \\\"2018\\\"\" || line == \"edition = \\'2018\\'\"\n+}\n+\n+pub fn check(path: &Path, bad: &mut bool) {\n+    super::walk(\n+        path,\n+        &mut |path| filter_dirs(path) || path.ends_with(\"src/test\"),\n+        &mut |entry, contents| {\n+            let file = entry.path();\n+            let filename = file.file_name().unwrap();\n+            if filename != \"Cargo.toml\" {\n+                return;\n+            }\n+            let has_edition = contents.lines().any(is_edition_2018);\n+            if !has_edition {\n+                tidy_error!(\n+                    bad,\n+                    \"{} doesn't have `edition = \\\"2018\\\"` on a separate line\",\n+                    file.display()\n+                );\n+            }\n+        },\n+    );\n+}"}, {"sha": "e01184e3658b525da78e97feeafe87661e3f0f81", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -34,6 +34,7 @@ pub mod style;\n pub mod errors;\n pub mod features;\n pub mod cargo;\n+pub mod edition;\n pub mod pal;\n pub mod deps;\n pub mod extdeps;"}, {"sha": "5deac52f08b5eeb5108c0a2d3499512aeac56aba", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870efe34c8c86a3aef4db628b429425a216b41bd/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=870efe34c8c86a3aef4db628b429425a216b41bd", "patch": "@@ -22,6 +22,7 @@ fn main() {\n     style::check(&path, &mut bad);\n     errors::check(&path, &mut bad);\n     cargo::check(&path, &mut bad);\n+    edition::check(&path, &mut bad);\n     let collected = features::check(&path, &mut bad, verbose);\n     pal::check(&path, &mut bad);\n     unstable_book::check(&path, collected, &mut bad);"}]}