{"sha": "c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0", "node_id": "C_kwDOAAsO6NoAKGM2Y2JhNjhjMTZlMmRkOWUyZDA1ZjNjOTQxZDU4ZmRiZWJkMGQxYTA", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-03-01T02:21:49Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-03-01T02:21:49Z"}, "message": "Add check for errant {{produces}} marker.\n\nIf a lint example has an `ignore` tag, but the lint author also includes\nthe {{produces}} marker, then the output will just contain the text\n`{{produces}}`. This adds a check for this mistake and provides help on\nhow the lint docs should be written.", "tree": {"sha": "c7927763cb0d31ad7cf523d037a3a8453938be39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7927763cb0d31ad7cf523d037a3a8453938be39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0", "html_url": "https://github.com/rust-lang/rust/commit/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f858d9a511f24fedb8ed997b28304fec809630", "url": "https://api.github.com/repos/rust-lang/rust/commits/31f858d9a511f24fedb8ed997b28304fec809630", "html_url": "https://github.com/rust-lang/rust/commit/31f858d9a511f24fedb8ed997b28304fec809630"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "e120661b96ccb8a19424cc7cf731d745799cc2d0", "filename": "src/tools/lint-docs/src/lib.rs", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs?ref=c6cba68c16e2dd9e2d05f3c941d58fdbebd0d1a0", "patch": "@@ -45,6 +45,36 @@ impl Lint {\n     fn check_style(&self) -> Result<(), Box<dyn Error>> {\n         for &expected in &[\"### Example\", \"### Explanation\", \"{{produces}}\"] {\n             if expected == \"{{produces}}\" && self.is_ignored() {\n+                if self.doc_contains(\"{{produces}}\") {\n+                    return Err(format!(\n+                        \"the lint example has `ignore`, but also contains the {{{{produces}}}} marker\\n\\\n+                        \\n\\\n+                        The documentation generator cannot generate the example output when the \\\n+                        example is ignored.\\n\\\n+                        Manually include the sample output below the example. For example:\\n\\\n+                        \\n\\\n+                        /// ```rust,ignore (needs command line option)\\n\\\n+                        /// #[cfg(widnows)]\\n\\\n+                        /// fn foo() {{}}\\n\\\n+                        /// ```\\n\\\n+                        ///\\n\\\n+                        /// This will produce:\\n\\\n+                        /// \\n\\\n+                        /// ```text\\n\\\n+                        /// warning: unknown condition name used\\n\\\n+                        ///  --> lint_example.rs:1:7\\n\\\n+                        ///   |\\n\\\n+                        /// 1 | #[cfg(widnows)]\\n\\\n+                        ///   |       ^^^^^^^\\n\\\n+                        ///   |\\n\\\n+                        ///   = note: `#[warn(unexpected_cfgs)]` on by default\\n\\\n+                        /// ```\\n\\\n+                        \\n\\\n+                        Replacing the output with the text of the example you \\\n+                        compiled manually yourself.\\n\\\n+                        \"\n+                    ).into());\n+                }\n                 continue;\n             }\n             if !self.doc_contains(expected) {\n@@ -317,10 +347,10 @@ impl<'a> LintExtractor<'a> {\n                             ..,\n                             &format!(\n                                 \"This will produce:\\n\\\n-                            \\n\\\n-                            ```text\\n\\\n-                            {}\\\n-                            ```\",\n+                                \\n\\\n+                                ```text\\n\\\n+                                {}\\\n+                                ```\",\n                                 output\n                             ),\n                         );"}]}