{"sha": "612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMmZlM2QyZDZmYTBkY2IzZDkyYTBkODNlYzdmMjQxOGRkOGM3Y2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-11T04:43:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-11T17:09:02Z"}, "message": "Add ast_map::node_span function", "tree": {"sha": "63e8c2a1b5ddc10f2791c9c40ff7f218a2d81e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63e8c2a1b5ddc10f2791c9c40ff7f218a2d81e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce", "html_url": "https://github.com/rust-lang/rust/commit/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14b3ad194ac80ec0bb4e6f570113bf15db587449", "url": "https://api.github.com/repos/rust-lang/rust/commits/14b3ad194ac80ec0bb4e6f570113bf15db587449", "html_url": "https://github.com/rust-lang/rust/commit/14b3ad194ac80ec0bb4e6f570113bf15db587449"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "549e651d4a6e324dcea2a5a737b37c94e29e4034", "filename": "src/comp/middle/ast_map.rs", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce/src%2Fcomp%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce/src%2Fcomp%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fast_map.rs?ref=612fe3d2d6fa0dcb3d92a0d83ec7f2418dd8c7ce", "patch": "@@ -2,6 +2,7 @@ import std::smallintmap;\n import std::option;\n import syntax::ast::*;\n import syntax::visit;\n+import syntax::codemap;\n import visit::vt;\n \n tag ast_node {\n@@ -113,6 +114,62 @@ fn new_smallintmap_adapter[@K,\n     ret adapter(map, key_idx, idx_key);\n }\n \n+fn node_span(node: &ast_node) -> codemap::span {\n+    alt node {\n+      node_item(item) { item.span }\n+      node_obj_ctor(item) { item.span }\n+      node_native_item(nitem) { nitem.span }\n+      node_expr(expr) { expr.span }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod test {\n+    #[test]\n+    fn test_node_span_item() {\n+        let expected: codemap::span = {lo: 20u, hi: 30u};\n+        let node = node_item(@{ident: \"test\",\n+                               attrs: ~[],\n+                               id: 0,\n+                               node: item_mod({view_items: ~[],\n+                                               items: ~[]}),\n+                               span: expected});\n+        assert node_span(node) == expected;\n+    }\n+\n+    #[test]\n+    fn test_node_span_obj_ctor() {\n+        let expected: codemap::span = {lo: 20u, hi: 30u};\n+        let node = node_obj_ctor(@{ident: \"test\",\n+                                   attrs: ~[],\n+                                   id: 0,\n+                                   node: item_mod({view_items: ~[],\n+                                                   items: ~[]}),\n+                                   span: expected});\n+        assert node_span(node) == expected;\n+    }\n+\n+    #[test]\n+    fn test_node_span_native_item() {\n+        let expected: codemap::span = {lo: 20u, hi: 30u};\n+        let node = node_native_item(@{ident: \"test\",\n+                                      attrs: ~[],\n+                                      node: native_item_ty,\n+                                      id: 0,\n+                                      span: expected});\n+        assert node_span(node) == expected;\n+    }\n+\n+    #[test]\n+    fn test_node_span_expr() {\n+        let expected: codemap::span = {lo: 20u, hi: 30u};\n+        let node = node_expr(@{id: 0,\n+                               node: expr_break,\n+                               span: expected});\n+        assert node_span(node) == expected;\n+    }\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}]}