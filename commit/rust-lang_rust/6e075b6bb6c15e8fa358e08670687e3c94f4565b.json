{"sha": "6e075b6bb6c15e8fa358e08670687e3c94f4565b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMDc1YjZiYjZjMTVlOGZhMzU4ZTA4NjcwNjg3ZTNjOTRmNDU2NWI=", "commit": {"author": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-06-01T12:08:38Z"}, "committer": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-06-01T12:08:38Z"}, "message": "Better optimization pipeline", "tree": {"sha": "6f817ba2341caa024883108d0b600ebecf87d88e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f817ba2341caa024883108d0b600ebecf87d88e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e075b6bb6c15e8fa358e08670687e3c94f4565b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e075b6bb6c15e8fa358e08670687e3c94f4565b", "html_url": "https://github.com/rust-lang/rust/commit/6e075b6bb6c15e8fa358e08670687e3c94f4565b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e075b6bb6c15e8fa358e08670687e3c94f4565b/comments", "author": null, "committer": null, "parents": [{"sha": "e516d2333fa38ce29f1e6e119beb4d5711cf8fd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e516d2333fa38ce29f1e6e119beb4d5711cf8fd5", "html_url": "https://github.com/rust-lang/rust/commit/e516d2333fa38ce29f1e6e119beb4d5711cf8fd5"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "315bb5d63177f8a54cd0f4723f27cece4b89b7a8", "filename": "src/librustc/back/passes.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6e075b6bb6c15e8fa358e08670687e3c94f4565b/src%2Flibrustc%2Fback%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e075b6bb6c15e8fa358e08670687e3c94f4565b/src%2Flibrustc%2Fback%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fpasses.rs?ref=6e075b6bb6c15e8fa358e08670687e3c94f4565b", "patch": "@@ -70,9 +70,12 @@ pub fn create_standard_passes(level:OptLevel) -> ~[~str] {\n \n     passes.push(~\"targetlibinfo\");\n \n-    passes.push(~\"tbaa\");\n+    passes.push(~\"scev-aa\");\n     passes.push(~\"basicaa\");\n \n+    passes.push(~\"instcombine\");\n+    passes.push(~\"simplifycfg\");\n+    passes.push(~\"scalarrepl-ssa\");\n     passes.push(~\"early-cse\");\n \n     passes.push(~\"globalopt\");\n@@ -83,10 +86,6 @@ pub fn create_standard_passes(level:OptLevel) -> ~[~str] {\n \n     passes.push(~\"prune-eh\");\n \n-    if level == Aggressive {\n-        passes.push(~\"mergefunc\");\n-    }\n-\n     passes.push(~\"inline\");\n \n     passes.push(~\"functionattrs\");\n@@ -95,6 +94,7 @@ pub fn create_standard_passes(level:OptLevel) -> ~[~str] {\n         passes.push(~\"argpromotion\");\n     }\n \n+    passes.push(~\"scalarrepl-ssa\");\n     passes.push(~\"early-cse\");\n     passes.push(~\"simplify-libcalls\");\n     passes.push(~\"jump-threading\");\n@@ -134,11 +134,6 @@ pub fn create_standard_passes(level:OptLevel) -> ~[~str] {\n     passes.push(~\"correlated-propagation\");\n     passes.push(~\"dse\");\n \n-    passes.push(~\"instcombine\");\n-    passes.push(~\"early-cse\");\n-\n-    passes.push(~\"loop-unroll\");\n-\n     passes.push(~\"adce\");\n     passes.push(~\"simplifycfg\");\n     passes.push(~\"instsimplify\");"}]}