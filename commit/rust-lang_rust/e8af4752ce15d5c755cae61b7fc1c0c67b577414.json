{"sha": "e8af4752ce15d5c755cae61b7fc1c0c67b577414", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YWY0NzUyY2UxNWQ1Yzc1NWNhZTYxYjdmYzFjMGM2N2I1Nzc0MTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-02T23:23:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-02T23:23:32Z"}, "message": "Auto merge of #25867 - petrochenkov:ucellv, r=alexcrichton\n\nNow when const functions are implemented and used, the `value` field of `UnsafeCell` can be made deprecated (and then private as intended).", "tree": {"sha": "b3d30a6adbf2e76d494e766a4181d53cdc1413eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3d30a6adbf2e76d494e766a4181d53cdc1413eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8af4752ce15d5c755cae61b7fc1c0c67b577414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8af4752ce15d5c755cae61b7fc1c0c67b577414", "html_url": "https://github.com/rust-lang/rust/commit/e8af4752ce15d5c755cae61b7fc1c0c67b577414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8af4752ce15d5c755cae61b7fc1c0c67b577414/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc1e79b3c215ac71285f468ed4e7715528e7e9f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1e79b3c215ac71285f468ed4e7715528e7e9f4", "html_url": "https://github.com/rust-lang/rust/commit/dc1e79b3c215ac71285f468ed4e7715528e7e9f4"}, {"sha": "019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "url": "https://api.github.com/repos/rust-lang/rust/commits/019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "html_url": "https://github.com/rust-lang/rust/commit/019ab5dfec21ed296fa0eca6a96cf9f74f76a628"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "d867453008a3fd57023ccea66ee05c29d1783e7c", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e8af4752ce15d5c755cae61b7fc1c0c67b577414/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8af4752ce15d5c755cae61b7fc1c0c67b577414/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=e8af4752ce15d5c755cae61b7fc1c0c67b577414", "patch": "@@ -795,6 +795,8 @@ pub struct UnsafeCell<T: ?Sized> {\n     ///\n     /// This field should not be accessed directly, it is made public for static\n     /// initializers.\n+    #[deprecated(since = \"1.2.0\", reason = \"use `get` to access the wrapped \\\n+        value or `new` to initialize `UnsafeCell` in statics\")]\n     #[unstable(feature = \"core\")]\n     pub value: T,\n }\n@@ -818,6 +820,7 @@ impl<T> UnsafeCell<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub const fn new(value: T) -> UnsafeCell<T> {\n+        #![allow(deprecated)]\n         UnsafeCell { value: value }\n     }\n \n@@ -839,7 +842,10 @@ impl<T> UnsafeCell<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub unsafe fn into_inner(self) -> T { self.value }\n+    pub unsafe fn into_inner(self) -> T {\n+        #![allow(deprecated)]\n+        self.value\n+    }\n }\n \n impl<T: ?Sized> UnsafeCell<T> {\n@@ -859,6 +865,7 @@ impl<T: ?Sized> UnsafeCell<T> {\n     pub fn get(&self) -> *mut T {\n         // FIXME(#23542) Replace with type ascription.\n         #![allow(trivial_casts)]\n+        #![allow(deprecated)]\n         &self.value as *const T as *mut T\n     }\n }"}]}