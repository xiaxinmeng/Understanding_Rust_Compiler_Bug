{"sha": "a730d888aee99f9a556dae799deadacb83c34d0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MzBkODg4YWVlOTlmOWE1NTZkYWU3OTlkZWFkYWNiODNjMzRkMGU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-12T15:14:05Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-19T10:16:16Z"}, "message": "ty: simplify `transparent_newtype_field`\n\nThis commit removes the normalization from `transparent_newtype_field` -\nturns out it wasn't necessary and that makes it a bunch simpler -\nparticularly when handling projections.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "b222233424e47cec2374b29d4cace7e875772b72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b222233424e47cec2374b29d4cace7e875772b72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a730d888aee99f9a556dae799deadacb83c34d0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl7skHAACgkQJZLnbIc4\nH9kTrA//R1zhm8L0Vu4SGyNQ3pEmzIZPXn66wKLoGS7n0vb8dUEPDyoDFKRN+wjI\nuB24pqtToJ1l0baW+kEBBCF5PXy4HVnNldv8nrFKwAbksDdPQwirZnoKZZlms803\ngeFRVg1g4ojDfNMF7IlGzzMWHeNNIkj8x4yxG2CLXu52wJWLifZTW3S5SNWHK5On\nvgsGsskBAWuNzrENOq3RvTr4Xav/AwcMfa5RjALGNDm3yBnjMr1a3o9DCACMPgvN\nReBM+ivd8/Ux+vFwaoGIatN2h2ZuXciTQQPyjVmqW+FNX8YyLDUI4l1KeBL8STX5\nrni7MHMR18DLtiQBe0l2rzSfcOMuijx2QCaoVVgR23Ir5yCVSeqAt2tJ14m6Ko4Y\n7xf59tLW7Nsfd5POmc7BCLQ0qhgz2XfPX6HV/pxqsyzSgaNfyOQwTkpuwntq8kVV\nUwQlTRdmegJNLQbxSR8kH88Gi3puky28VCgMg9Gwb/awrL9PxS2l5JLf1w0pmLVx\nNZPRjh4ChG0+wh4DqG+66v6jJoE7ek0InNzQKUcxUIi61re5LlXKiyBF40BYycpz\nsQjSOR2mHyMM5jVUoxShmJlxZW4HUs2tzMkWyGNXXING51KHw+qCFwxpRt64s6bc\nyv29Ccz4pV9xBqN+WTqliOeTwI9uZ/9a180O0PHr2KhvM1V8H+w=\n=zE5v\n-----END PGP SIGNATURE-----", "payload": "tree b222233424e47cec2374b29d4cace7e875772b72\nparent 0cccaa0a27499f742ed4dbf4b5d09beee08eb2d6\nauthor David Wood <david@davidtw.co> 1591974845 +0100\ncommitter David Wood <david@davidtw.co> 1592561776 +0100\n\nty: simplify `transparent_newtype_field`\n\nThis commit removes the normalization from `transparent_newtype_field` -\nturns out it wasn't necessary and that makes it a bunch simpler -\nparticularly when handling projections.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a730d888aee99f9a556dae799deadacb83c34d0e", "html_url": "https://github.com/rust-lang/rust/commit/a730d888aee99f9a556dae799deadacb83c34d0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a730d888aee99f9a556dae799deadacb83c34d0e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cccaa0a27499f742ed4dbf4b5d09beee08eb2d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cccaa0a27499f742ed4dbf4b5d09beee08eb2d6", "html_url": "https://github.com/rust-lang/rust/commit/0cccaa0a27499f742ed4dbf4b5d09beee08eb2d6"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "b490c06403d755344809d5aada7f8c1d3905eef2", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=a730d888aee99f9a556dae799deadacb83c34d0e", "patch": "@@ -627,7 +627,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n         if def.repr.transparent() {\n             // Can assume that only one field is not a ZST, so only check\n             // that field's type for FFI-safety.\n-            if let Some(field) = variant.transparent_newtype_field(self.cx.tcx, self.cx.param_env) {\n+            if let Some(field) = variant.transparent_newtype_field(self.cx.tcx) {\n                 self.check_field_type_for_ffi(cache, field, substs)\n             } else {\n                 bug!(\"malformed transparent type\");"}, {"sha": "b4e3e6ab5ab7e7ca5d095f0699bc3468fed99b08", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=a730d888aee99f9a556dae799deadacb83c34d0e", "patch": "@@ -1810,21 +1810,9 @@ impl<'tcx> VariantDef {\n \n     /// `repr(transparent)` structs can have a single non-ZST field, this function returns that\n     /// field.\n-    pub fn transparent_newtype_field(\n-        &self,\n-        tcx: TyCtxt<'tcx>,\n-        param_env: ParamEnv<'tcx>,\n-    ) -> Option<&FieldDef> {\n+    pub fn transparent_newtype_field(&self, tcx: TyCtxt<'tcx>) -> Option<&FieldDef> {\n         for field in &self.fields {\n             let field_ty = field.ty(tcx, InternalSubsts::identity_for_item(tcx, self.def_id));\n-\n-            // `normalize_erasing_regions` will fail for projections that contain generic\n-            // parameters, so check these before normalizing.\n-            if field_ty.has_projections() && field_ty.needs_subst() {\n-                return Some(field);\n-            }\n-\n-            let field_ty = tcx.normalize_erasing_regions(param_env, field_ty);\n             if !field_ty.is_zst(tcx, self.def_id) {\n                 return Some(field);\n             }"}, {"sha": "6c72bd691b17cf5a22f291265bc237b0c96f78d3", "filename": "src/test/ui/lint/lint-ctypes-73249-4.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a730d888aee99f9a556dae799deadacb83c34d0e/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-4.rs?ref=a730d888aee99f9a556dae799deadacb83c34d0e", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+#![deny(improper_ctypes)]\n+\n+use std::marker::PhantomData;\n+\n+trait Foo {\n+    type Assoc;\n+}\n+\n+impl Foo for () {\n+    type Assoc = PhantomData<()>;\n+}\n+\n+#[repr(transparent)]\n+struct Wow<T> where T: Foo<Assoc = PhantomData<T>> {\n+    x: <T as Foo>::Assoc,\n+    v: u32,\n+}\n+\n+extern \"C\" {\n+    fn test(v: Wow<()>);\n+}\n+\n+fn main() {}"}]}