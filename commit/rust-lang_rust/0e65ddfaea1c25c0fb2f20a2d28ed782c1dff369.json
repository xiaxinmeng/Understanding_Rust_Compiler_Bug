{"sha": "0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjVkZGZhZWExYzI1YzBmYjJmMjBhMmQyOGVkNzgyYzFkZmYzNjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T22:16:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:41Z"}, "message": "rustdoc: Move AST parsing into the parse module", "tree": {"sha": "7a1337816c2e2fb7f8b91d1a50bf48c077a498c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a1337816c2e2fb7f8b91d1a50bf48c077a498c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "html_url": "https://github.com/rust-lang/rust/commit/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d553c534e80442bed5ce63f74ca67112035d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d553c534e80442bed5ce63f74ca67112035d08", "html_url": "https://github.com/rust-lang/rust/commit/e4d553c534e80442bed5ce63f74ca67112035d08"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "abcc5cb6358edf7adcd32d9d34b00a11f70808c9", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "patch": "@@ -177,34 +177,40 @@ fn doc_header(rd: rustdoc, name: str) {\n     rd.w.write_line(\"# Crate \" + name);\n }\n \n+mod parse {\n+    fn from_file(file: str) -> @ast::crate {\n+        let cm = codemap::new_codemap();\n+        let sess = @{\n+            cm: cm,\n+            mutable next_id: 0,\n+            diagnostic: diagnostic::mk_handler(cm, none)\n+        };\n+        parser::parse_crate_from_source_file(file, [], sess)\n+    }\n+}\n+\n #[doc(\n   brief = \"Main function.\",\n   desc = \"Command-line arguments:\n \n *  argv[1]: crate file name\",\n   args(argv = \"Command-line arguments.\")\n )]\n-\n fn main(argv: [str]) {\n \n-    let w = io::stdout();\n-\n     if vec::len(argv) != 2u {\n-        w.write_str(#fmt(\"usage: %s <input>\\n\", argv[0]));\n+        io::println(#fmt(\"usage: %s <input>\", argv[0]));\n         ret;\n     }\n \n-    let cm = codemap::new_codemap();\n-    let sess = @{\n-        cm: cm,\n-        mutable next_id: 0,\n-        diagnostic: diagnostic::mk_handler(cm, none)\n-    };\n+    let crate = parse::from_file(argv[1]);\n+\n+    let w = io::stdout();\n     let rd = { ps: pprust::rust_printer(w), w: w };\n     doc_header(rd, argv[1]);\n-    let p = parser::parse_crate_from_source_file(argv[1], [], sess);\n+\n     let v = visit::mk_simple_visitor(@{\n         visit_item: bind doc_item(rd, _)\n         with *visit::default_simple_visitor()});\n-    visit::visit_crate(*p, (), v);\n+    visit::visit_crate(*crate, (), v);\n }"}]}