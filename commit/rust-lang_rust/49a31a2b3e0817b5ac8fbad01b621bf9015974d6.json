{"sha": "49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YTMxYTJiM2UwODE3YjVhYzhmYmFkMDFiNjIxYmY5MDE1OTc0ZDY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-08-20T13:36:24Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-08-20T13:36:24Z"}, "message": "We meant to use a trait instead of lifetime here", "tree": {"sha": "676c267b41ce0e14764947c5e93b66bc19627f9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/676c267b41ce0e14764947c5e93b66bc19627f9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmEfr9gACgkQgTGiTgx5\n76+KWQ/9GWezm2lVQNVg5OaZ0EQN6r7vbfMJee3BVyMkA/P3L5ERlf9fqHunPtMB\nOZACiweSssb2VprMmTrhPPqewHUEy4nACD3wif/+cJJb06a3bsEmAJ7GFjU5tf6O\ngK+kNeLNLEOHPiWtxX3Ntp5/VnMd4tZVo6prUV6QCcr+G6SUfzJb6ZrCuuddSkEU\npqb+FRQUzgjfptLof7r69vWZIbgAcSSLNU4DS5cl8bn2KzBUCqUosp9cFdPFyD5t\njG50qraYAudPaXa/FBVBeoterzj08Hubfl8e+2PAjk0rHpg2WUm3h/uviVNXev7p\njc4uoCZwA2j/MruU6g/z+nz5kE79+LmO4qNFRfNQrFQ2fPFCWRXSYl5hkyd29/Q/\n2vxN48NgfQAggLmYIZtp/QbrGa/ubpfM7ThlxbtY6JrXpbwdOuqVH7y753kRndol\nfaVXftHS6aNWdrNB9V8Bze+9bi0zmRs4L89i/M57Gtys2fEDkOvDJtU2c5P3uEOF\nmQIzvBNr1P4IW4/vZriYrOrLgpfAsGGhu20d2lHjQUAuvU47ZM1IVntnV/holXbW\nWZZU0fq2A2fbupm0nsxdtw92w1fJWMG1B61tQojdmXqNUyIsIcWe/+SKWeJxUpBc\nSMCaSnnRmAs7kQhSWjG3EqT5bFDlfxJIf6/hlY0ZVr3lhUIu5+0=\n=JhqO\n-----END PGP SIGNATURE-----", "payload": "tree 676c267b41ce0e14764947c5e93b66bc19627f9e\nparent a9ab2e55395013de116340e4cbfa0bb0263bb658\nauthor Santiago Pastorino <spastorino@gmail.com> 1629466584 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1629466584 -0300\n\nWe meant to use a trait instead of lifetime here\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "html_url": "https://github.com/rust-lang/rust/commit/49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9ab2e55395013de116340e4cbfa0bb0263bb658", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9ab2e55395013de116340e4cbfa0bb0263bb658", "html_url": "https://github.com/rust-lang/rust/commit/a9ab2e55395013de116340e4cbfa0bb0263bb658"}], "stats": {"total": 45, "additions": 12, "deletions": 33}, "files": [{"sha": "d87a25aad58304635b882760409251b82000553e", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.rs?ref=49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "patch": "@@ -3,8 +3,7 @@\n fn main() {}\n \n trait Trait {}\n-type Underconstrained<T: Trait> = impl 'static;\n-//~^ ERROR: at least one trait must be specified\n+type Underconstrained<T: Trait> = impl Send;\n \n // no `Trait` bound\n fn underconstrain<T>(_: T) -> Underconstrained<T> {"}, {"sha": "c73288329b013f24145c652d2c2a65c045a859ed", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained.stderr", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained.stderr?ref=49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "patch": "@@ -1,25 +1,19 @@\n-error: at least one trait must be specified\n-  --> $DIR/generic_underconstrained.rs:6:35\n-   |\n-LL | type Underconstrained<T: Trait> = impl 'static;\n-   |                                   ^^^^^^^^^^^^\n-\n error[E0277]: the trait bound `T: Trait` is not satisfied\n-  --> $DIR/generic_underconstrained.rs:10:31\n+  --> $DIR/generic_underconstrained.rs:9:31\n    |\n LL | fn underconstrain<T>(_: T) -> Underconstrained<T> {\n    |                               ^^^^^^^^^^^^^^^^^^^ the trait `Trait` is not implemented for `T`\n    |\n note: required by a bound in `Underconstrained`\n   --> $DIR/generic_underconstrained.rs:6:26\n    |\n-LL | type Underconstrained<T: Trait> = impl 'static;\n+LL | type Underconstrained<T: Trait> = impl Send;\n    |                          ^^^^^ required by this bound in `Underconstrained`\n help: consider restricting type parameter `T`\n    |\n LL | fn underconstrain<T: Trait>(_: T) -> Underconstrained<T> {\n    |                    +++++++\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "8adc0bf32a6aab6845c36fed4f643f43bf53a7c5", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained2.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.rs?ref=49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "patch": "@@ -2,17 +2,15 @@\n \n fn main() {}\n \n-type Underconstrained<T: std::fmt::Debug> = impl 'static;\n-//~^ ERROR: at least one trait must be specified\n+type Underconstrained<T: std::fmt::Debug> = impl Send;\n \n // not a defining use, because it doesn't define *all* possible generics\n fn underconstrained<U>(_: U) -> Underconstrained<U> {\n     //~^ ERROR `U` doesn't implement `Debug`\n     5u32\n }\n \n-type Underconstrained2<T: std::fmt::Debug> = impl 'static;\n-//~^ ERROR: at least one trait must be specified\n+type Underconstrained2<T: std::fmt::Debug> = impl Send;\n \n // not a defining use, because it doesn't define *all* possible generics\n fn underconstrained2<U, V>(_: U, _: V) -> Underconstrained2<V> {"}, {"sha": "d77d978aa444900ea3c8646bb5e69ae8bfb45215", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained2.stderr", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49a31a2b3e0817b5ac8fbad01b621bf9015974d6/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.stderr?ref=49a31a2b3e0817b5ac8fbad01b621bf9015974d6", "patch": "@@ -1,47 +1,35 @@\n-error: at least one trait must be specified\n-  --> $DIR/generic_underconstrained2.rs:5:45\n-   |\n-LL | type Underconstrained<T: std::fmt::Debug> = impl 'static;\n-   |                                             ^^^^^^^^^^^^\n-\n-error: at least one trait must be specified\n-  --> $DIR/generic_underconstrained2.rs:14:46\n-   |\n-LL | type Underconstrained2<T: std::fmt::Debug> = impl 'static;\n-   |                                              ^^^^^^^^^^^^\n-\n error[E0277]: `U` doesn't implement `Debug`\n-  --> $DIR/generic_underconstrained2.rs:9:33\n+  --> $DIR/generic_underconstrained2.rs:8:33\n    |\n LL | fn underconstrained<U>(_: U) -> Underconstrained<U> {\n    |                                 ^^^^^^^^^^^^^^^^^^^ `U` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n note: required by a bound in `Underconstrained`\n   --> $DIR/generic_underconstrained2.rs:5:26\n    |\n-LL | type Underconstrained<T: std::fmt::Debug> = impl 'static;\n+LL | type Underconstrained<T: std::fmt::Debug> = impl Send;\n    |                          ^^^^^^^^^^^^^^^ required by this bound in `Underconstrained`\n help: consider restricting type parameter `U`\n    |\n LL | fn underconstrained<U: std::fmt::Debug>(_: U) -> Underconstrained<U> {\n    |                      +++++++++++++++++\n \n error[E0277]: `V` doesn't implement `Debug`\n-  --> $DIR/generic_underconstrained2.rs:18:43\n+  --> $DIR/generic_underconstrained2.rs:16:43\n    |\n LL | fn underconstrained2<U, V>(_: U, _: V) -> Underconstrained2<V> {\n    |                                           ^^^^^^^^^^^^^^^^^^^^ `V` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n note: required by a bound in `Underconstrained2`\n-  --> $DIR/generic_underconstrained2.rs:14:27\n+  --> $DIR/generic_underconstrained2.rs:13:27\n    |\n-LL | type Underconstrained2<T: std::fmt::Debug> = impl 'static;\n+LL | type Underconstrained2<T: std::fmt::Debug> = impl Send;\n    |                           ^^^^^^^^^^^^^^^ required by this bound in `Underconstrained2`\n help: consider restricting type parameter `V`\n    |\n LL | fn underconstrained2<U, V: std::fmt::Debug>(_: U, _: V) -> Underconstrained2<V> {\n    |                          +++++++++++++++++\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}