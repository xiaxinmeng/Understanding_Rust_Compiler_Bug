{"sha": "1b1e3de988ed835b9469360d584963684d1c8ff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMWUzZGU5ODhlZDgzNWI5NDY5MzYwZDU4NDk2MzY4NGQxYzhmZjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-12T14:41:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-12T14:41:47Z"}, "message": "minor: reduce visibility", "tree": {"sha": "a97a9010ec65f7653e5673d3dbde7ce19559cdce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a97a9010ec65f7653e5673d3dbde7ce19559cdce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b1e3de988ed835b9469360d584963684d1c8ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1e3de988ed835b9469360d584963684d1c8ff6", "html_url": "https://github.com/rust-lang/rust/commit/1b1e3de988ed835b9469360d584963684d1c8ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b1e3de988ed835b9469360d584963684d1c8ff6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0413d51317a2470c94f82d93e66a3d009fce41a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0413d51317a2470c94f82d93e66a3d009fce41a3", "html_url": "https://github.com/rust-lang/rust/commit/0413d51317a2470c94f82d93e66a3d009fce41a3"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "777f347b8b0fb801395a1d0e734a435511f1f998", "filename": "crates/hir_ty/src/diagnostics/unsafe_check.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b1e3de988ed835b9469360d584963684d1c8ff6/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b1e3de988ed835b9469360d584963684d1c8ff6/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs?ref=1b1e3de988ed835b9469360d584963684d1c8ff6", "patch": "@@ -13,7 +13,6 @@ use crate::{db::HirDatabase, InferenceResult, Interner, TyExt, TyKind};\n pub fn missing_unsafe(db: &dyn HirDatabase, def: DefWithBodyId) -> Vec<ExprId> {\n     let infer = db.infer(def);\n \n-    // let unsafe_expressions = ;\n     let is_unsafe = match def {\n         DefWithBodyId::FunctionId(it) => db.function_data(it).is_unsafe(),\n         DefWithBodyId::StaticId(_) | DefWithBodyId::ConstId(_) => false,\n@@ -29,12 +28,12 @@ pub fn missing_unsafe(db: &dyn HirDatabase, def: DefWithBodyId) -> Vec<ExprId> {\n         .collect()\n }\n \n-pub(crate) struct UnsafeExpr {\n+struct UnsafeExpr {\n     pub(crate) expr: ExprId,\n     pub(crate) inside_unsafe_block: bool,\n }\n \n-pub(crate) fn unsafe_expressions(\n+fn unsafe_expressions(\n     db: &dyn HirDatabase,\n     infer: &InferenceResult,\n     def: DefWithBodyId,"}]}