{"sha": "691ffd2dcb687658b99f5968dbccca71e826b6a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MWZmZDJkY2I2ODc2NThiOTlmNTk2OGRiY2NjYTcxZTgyNmI2YTU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T21:18:52Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T21:18:52Z"}, "message": "Merge #681\n\n681: Use the correct working directory for cargo metadata and rustfmt r=matklad a=DJMcNab\n\nFixes maybe #670. @bjorn3, is that true?\r\n\r\n(Awkward wording due to GitHub's eager 'fixes' finding)\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "3349722543bfee64b009db3c29b90ab546be4207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3349722543bfee64b009db3c29b90ab546be4207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/691ffd2dcb687658b99f5968dbccca71e826b6a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/691ffd2dcb687658b99f5968dbccca71e826b6a5", "html_url": "https://github.com/rust-lang/rust/commit/691ffd2dcb687658b99f5968dbccca71e826b6a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/691ffd2dcb687658b99f5968dbccca71e826b6a5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "0974e6abeb9c3f047e21c3e23769b93c9e7dcaf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0974e6abeb9c3f047e21c3e23769b93c9e7dcaf3", "html_url": "https://github.com/rust-lang/rust/commit/0974e6abeb9c3f047e21c3e23769b93c9e7dcaf3"}, {"sha": "9fbbb8f6096836642704e34e42c9b9ea82807e7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fbbb8f6096836642704e34e42c9b9ea82807e7c", "html_url": "https://github.com/rust-lang/rust/commit/9fbbb8f6096836642704e34e42c9b9ea82807e7c"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "ace3da0208019d93dd80a768fdce14111b00ce64", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/691ffd2dcb687658b99f5968dbccca71e826b6a5/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/691ffd2dcb687658b99f5968dbccca71e826b6a5/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=691ffd2dcb687658b99f5968dbccca71e826b6a5", "patch": "@@ -520,21 +520,33 @@ pub fn handle_formatting(\n     let end_position = TextUnit::of_str(&file).conv_with(&file_line_index);\n \n     use std::process;\n-    let mut rustfmt = process::Command::new(\"rustfmt\")\n+    let mut rustfmt = process::Command::new(\"rustfmt\");\n+    rustfmt\n         .stdin(process::Stdio::piped())\n-        .stdout(process::Stdio::piped())\n-        .spawn()?;\n+        .stdout(process::Stdio::piped());\n+\n+    if let Ok(path) = params.text_document.uri.to_file_path() {\n+        if let Some(parent) = path.parent() {\n+            rustfmt.current_dir(parent);\n+        }\n+    }\n+    let mut rustfmt = rustfmt.spawn()?;\n \n     rustfmt.stdin.as_mut().unwrap().write_all(file.as_bytes())?;\n \n     let output = rustfmt.wait_with_output()?;\n     let captured_stdout = String::from_utf8(output.stdout)?;\n     if !output.status.success() {\n-        failure::bail!(\n-            \"rustfmt exited with error code {}: {}.\",\n-            output.status,\n-            captured_stdout,\n-        );\n+        return Err(LspError::new(\n+            -32900,\n+            format!(\n+                r#\"rustfmt exited with:\n+            Status: {}\n+            stdout: {}\"#,\n+                output.status, captured_stdout,\n+            ),\n+        )\n+        .into());\n     }\n \n     Ok(Some(vec![TextEdit {"}, {"sha": "8cf99d5865d2f0152cdffb35116f0c0d8f86cd1a", "filename": "crates/ra_lsp_server/src/project_model/cargo_workspace.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/691ffd2dcb687658b99f5968dbccca71e826b6a5/crates%2Fra_lsp_server%2Fsrc%2Fproject_model%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/691ffd2dcb687658b99f5968dbccca71e826b6a5/crates%2Fra_lsp_server%2Fsrc%2Fproject_model%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model%2Fcargo_workspace.rs?ref=691ffd2dcb687658b99f5968dbccca71e826b6a5", "patch": "@@ -117,9 +117,13 @@ impl Target {\n \n impl CargoWorkspace {\n     pub fn from_cargo_metadata(cargo_toml: &Path) -> Result<CargoWorkspace> {\n-        let meta = MetadataCommand::new()\n-            .manifest_path(cargo_toml)\n-            .features(CargoOpt::AllFeatures)\n+        let mut meta = MetadataCommand::new();\n+        meta.manifest_path(cargo_toml)\n+            .features(CargoOpt::AllFeatures);\n+        if let Some(parent) = cargo_toml.parent() {\n+            meta.current_dir(parent);\n+        }\n+        let meta = meta\n             .exec()\n             .map_err(|e| format_err!(\"cargo metadata failed: {}\", e))?;\n         let mut pkg_by_id = FxHashMap::default();"}]}