{"sha": "0c54921f9398df5d181ade11520072baadb36859", "node_id": "C_kwDOAAsO6NoAKDBjNTQ5MjFmOTM5OGRmNWQxODFhZGUxMTUyMDA3MmJhYWRiMzY4NTk", "commit": {"author": {"name": "yipinliu", "email": "ypliu18@gmail.com", "date": "2022-03-12T12:36:56Z"}, "committer": {"name": "yipinliu", "email": "ypliu18@gmail.com", "date": "2022-03-12T12:36:56Z"}, "message": "Fixed code style issues", "tree": {"sha": "e97ba15de405d6dc76967468d8cd8f617ac8b77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e97ba15de405d6dc76967468d8cd8f617ac8b77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c54921f9398df5d181ade11520072baadb36859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c54921f9398df5d181ade11520072baadb36859", "html_url": "https://github.com/rust-lang/rust/commit/0c54921f9398df5d181ade11520072baadb36859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c54921f9398df5d181ade11520072baadb36859/comments", "author": {"login": "yipinliu", "id": 28223418, "node_id": "MDQ6VXNlcjI4MjIzNDE4", "avatar_url": "https://avatars.githubusercontent.com/u/28223418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yipinliu", "html_url": "https://github.com/yipinliu", "followers_url": "https://api.github.com/users/yipinliu/followers", "following_url": "https://api.github.com/users/yipinliu/following{/other_user}", "gists_url": "https://api.github.com/users/yipinliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yipinliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yipinliu/subscriptions", "organizations_url": "https://api.github.com/users/yipinliu/orgs", "repos_url": "https://api.github.com/users/yipinliu/repos", "events_url": "https://api.github.com/users/yipinliu/events{/privacy}", "received_events_url": "https://api.github.com/users/yipinliu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yipinliu", "id": 28223418, "node_id": "MDQ6VXNlcjI4MjIzNDE4", "avatar_url": "https://avatars.githubusercontent.com/u/28223418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yipinliu", "html_url": "https://github.com/yipinliu", "followers_url": "https://api.github.com/users/yipinliu/followers", "following_url": "https://api.github.com/users/yipinliu/following{/other_user}", "gists_url": "https://api.github.com/users/yipinliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yipinliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yipinliu/subscriptions", "organizations_url": "https://api.github.com/users/yipinliu/orgs", "repos_url": "https://api.github.com/users/yipinliu/repos", "events_url": "https://api.github.com/users/yipinliu/events{/privacy}", "received_events_url": "https://api.github.com/users/yipinliu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824792531351b66c93c15acfee80f6caf69d5ae2", "url": "https://api.github.com/repos/rust-lang/rust/commits/824792531351b66c93c15acfee80f6caf69d5ae2", "html_url": "https://github.com/rust-lang/rust/commit/824792531351b66c93c15acfee80f6caf69d5ae2"}], "stats": {"total": 92, "additions": 21, "deletions": 71}, "files": [{"sha": "8f764e333676605b959949c7565f14b418d396ce", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=0c54921f9398df5d181ade11520072baadb36859", "patch": "@@ -375,18 +375,23 @@ fn traverse(\n         if let (Some(token), Some(descended_token)) = (token, descended_element.as_token()) {\n             if ast::String::can_cast(token.kind()) && ast::String::can_cast(descended_token.kind())\n             {\n-                let string = ast::String::cast(token).unwrap();\n-                let expanded_string = ast::String::cast(descended_token.clone()).unwrap();\n-                if string.is_raw() {\n-                    if inject::ra_fixture(hl, sema, &string, &expanded_string).is_some() {\n-                        continue;\n+                let string = ast::String::cast(token);\n+                let string_to_highlight = ast::String::cast(descended_token.clone());\n+                if let Some((string, expanded_string)) = string.zip(string_to_highlight) {\n+                    if string.is_raw() {\n+                        if inject::ra_fixture(hl, sema, &string, &expanded_string).is_some() {\n+                            continue;\n+                        }\n                     }\n+                    highlight_format_string(hl, &string, &expanded_string, range);\n+                    highlight_escape_string(hl, &string, range.start());\n+                }\n+            } else if ast::ByteString::can_cast(token.kind())\n+                && ast::ByteString::can_cast(descended_token.kind())\n+            {\n+                if let Some(byte_string) = ast::ByteString::cast(token) {\n+                    highlight_escape_string(hl, &byte_string, range.start());\n                 }\n-                highlight_format_string(hl, &string, &expanded_string, range);\n-                highlight_escape_string(hl, &string, range.start());\n-            } else if ast::ByteString::can_cast(token.kind()) {\n-                let byte_string = ast::ByteString::cast(token).unwrap();\n-                highlight_escape_string(hl, &byte_string, range.start());\n             }\n         }\n "}, {"sha": "113b73af0c4f7d13d464f2be79ea42baa59df08d", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_byte_string.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/824792531351b66c93c15acfee80f6caf69d5ae2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_byte_string.html", "raw_url": "https://github.com/rust-lang/rust/raw/824792531351b66c93c15acfee80f6caf69d5ae2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_byte_string.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_byte_string.html?ref=824792531351b66c93c15acfee80f6caf69d5ae2", "patch": "@@ -1,47 +0,0 @@\n-\n-<style>\n-body                { margin: 0; }\n-pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-.lifetime           { color: #DFAF8F; font-style: italic; }\n-.label              { color: #DFAF8F; font-style: italic; }\n-.comment            { color: #7F9F7F; }\n-.documentation      { color: #629755; }\n-.intra_doc_link     { font-style: italic; }\n-.injected           { opacity: 0.65 ; }\n-.struct, .enum      { color: #7CB8BB; }\n-.enum_variant       { color: #BDE0F3; }\n-.string_literal     { color: #CC9393; }\n-.field              { color: #94BFF3; }\n-.function           { color: #93E0E3; }\n-.function.unsafe    { color: #BC8383; }\n-.trait.unsafe       { color: #BC8383; }\n-.operator.unsafe    { color: #BC8383; }\n-.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n-.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n-.parameter          { color: #94BFF3; }\n-.text               { color: #DCDCCC; }\n-.type               { color: #7CB8BB; }\n-.builtin_type       { color: #8CD0D3; }\n-.type_param         { color: #DFAF8F; }\n-.attribute          { color: #94BFF3; }\n-.numeric_literal    { color: #BFEBBF; }\n-.bool_literal       { color: #BFE6EB; }\n-.macro              { color: #94BFF3; }\n-.derive             { color: #94BFF3; font-style: italic; }\n-.module             { color: #AFD8AF; }\n-.value_param        { color: #DCDCCC; }\n-.variable           { color: #DCDCCC; }\n-.format_specifier   { color: #CC696B; }\n-.mutable            { text-decoration: underline; }\n-.escape_sequence    { color: #94BFF3; }\n-.keyword            { color: #F0DFAF; font-weight: bold; }\n-.control            { font-style: italic; }\n-.reference          { font-style: italic; font-weight: bold; }\n-\n-.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n-</style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"punctuation\">_</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x00</span><span class=\"escape_sequence\">\\x63</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">\"</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"punctuation\">_</span> <span class=\"operator\">=</span> <span class=\"string_literal\">b\"</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x00</span><span class=\"escape_sequence\">\\x63</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">\"</span><span class=\"semicolon\">;</span>\n-<span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "3715164bbf79757d6ecfe69382e7229e8dd57829", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=0c54921f9398df5d181ade11520072baadb36859", "patch": "@@ -136,6 +136,9 @@\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">World\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"escape_sequence\">\\x65</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6F</span><span class=\"string_literal\"> World\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n+    <span class=\"keyword\">let</span> <span class=\"punctuation\">_</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x00</span><span class=\"escape_sequence\">\\x63</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">\"</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"punctuation\">_</span> <span class=\"operator\">=</span> <span class=\"string_literal\">b\"</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x28</span><span class=\"escape_sequence\">\\x00</span><span class=\"escape_sequence\">\\x63</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">\"</span><span class=\"semicolon\">;</span>\n+\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> A <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> \u043d\u0438\u0447\u043e\u0441\u0438 <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n "}, {"sha": "a8c69875e0c653e66d8b7b328fe7b43cc977ee50", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c54921f9398df5d181ade11520072baadb36859/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=0c54921f9398df5d181ade11520072baadb36859", "patch": "@@ -459,6 +459,9 @@ fn main() {\n     println!(\"Hello\\nWorld\");\n     println!(\"\\u{48}\\x65\\x6C\\x6C\\x6F World\");\n \n+    let _ = \"\\x28\\x28\\x00\\x63\\n\";\n+    let _ = b\"\\x28\\x28\\x00\\x63\\n\";\n+\n     println!(\"{\\x41}\", A = 92);\n     println!(\"{\u043d\u0438\u0447\u043e\u0441\u0438}\", \u043d\u0438\u0447\u043e\u0441\u0438 = 92);\n \n@@ -476,20 +479,6 @@ fn main() {\n     );\n }\n \n-#[test]\n-fn test_byte_string_highlight() {\n-    check_highlighting(\n-        r#\"\n-fn main() {\n-    let _ = \"\\x28\\x28\\x00\\x63\\n\";\n-    let _ = b\"\\x28\\x28\\x00\\x63\\n\";\n-}\n-\"#,\n-        expect_file![\"./test_data/highlight_byte_string.html\"],\n-        false,\n-    );\n-}\n-\n #[test]\n fn test_unsafe_highlighting() {\n     check_highlighting("}]}