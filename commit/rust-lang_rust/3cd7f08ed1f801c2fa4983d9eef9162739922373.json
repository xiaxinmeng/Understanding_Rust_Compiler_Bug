{"sha": "3cd7f08ed1f801c2fa4983d9eef9162739922373", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZDdmMDhlZDFmODAxYzJmYTQ5ODNkOWVlZjkxNjI3Mzk5MjIzNzM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-05T16:25:32Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-05T16:31:00Z"}, "message": "Force callers of resolve_ast_path to deal with Res::Err correctly", "tree": {"sha": "5a18f1d3009245c8dc21707050d9da6b655ef762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a18f1d3009245c8dc21707050d9da6b655ef762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cd7f08ed1f801c2fa4983d9eef9162739922373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cd7f08ed1f801c2fa4983d9eef9162739922373", "html_url": "https://github.com/rust-lang/rust/commit/3cd7f08ed1f801c2fa4983d9eef9162739922373", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cd7f08ed1f801c2fa4983d9eef9162739922373/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18130ef044cfa83af341c4a3500ab576f8cc4c38", "url": "https://api.github.com/repos/rust-lang/rust/commits/18130ef044cfa83af341c4a3500ab576f8cc4c38", "html_url": "https://github.com/rust-lang/rust/commit/18130ef044cfa83af341c4a3500ab576f8cc4c38"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "ba703558998791181f84f0b4f829bbfcc5b528f2", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3cd7f08ed1f801c2fa4983d9eef9162739922373/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cd7f08ed1f801c2fa4983d9eef9162739922373/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=3cd7f08ed1f801c2fa4983d9eef9162739922373", "patch": "@@ -1858,16 +1858,8 @@ impl<'a> Resolver<'a> {\n                     .collect(),\n             }\n         };\n-        match self.resolve_ast_path_inner(&path, is_value) {\n-            Ok(res) => {\n-                if res == Res::Err {\n-                    Err(())\n-                } else {\n-                    Ok((path, res))\n-                }\n-            }\n-            Err(_) => Err(()),\n-        }\n+        let res = self.resolve_ast_path_inner(&path, is_value).map_err(|_| ())?;\n+        Ok((path, res))\n     }\n \n     /// Like `resolve_ast_path`, but takes a callback in case there was an error."}, {"sha": "84cfdd790b733e8477b7b7eb7da3da6bc48f9ee7", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3cd7f08ed1f801c2fa4983d9eef9162739922373/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cd7f08ed1f801c2fa4983d9eef9162739922373/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=3cd7f08ed1f801c2fa4983d9eef9162739922373", "patch": "@@ -71,6 +71,10 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                     resolver.resolve_str_path_error(DUMMY_SP, &path_str, ns == ValueNS)\n                 })\n             });\n+            let result = match result {\n+                Ok((_, Res::Err)) => Err(()),\n+                _ => result,\n+            };\n \n             if let Ok((_, res)) = result {\n                 let res = res.map_id(|_| panic!(\"unexpected node_id\"));\n@@ -134,6 +138,9 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n             let (_, ty_res) = cx.enter_resolver(|resolver| resolver.with_scope(node_id, |resolver| {\n                     resolver.resolve_str_path_error(DUMMY_SP, &path, false)\n             }))?;\n+            if let Res::Err = ty_res {\n+                return Err(());\n+            }\n             let ty_res = ty_res.map_id(|_| panic!(\"unexpected node_id\"));\n             match ty_res {\n                 Res::Def(DefKind::Struct, did)"}]}