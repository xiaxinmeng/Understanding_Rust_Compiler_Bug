{"sha": "d6d028369be9eb02d219506c0dd662a2f863fc18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZDAyODM2OWJlOWViMDJkMjE5NTA2YzBkZDY2MmEyZjg2M2ZjMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-08T23:11:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-08T23:11:45Z"}, "message": "Auto merge of #83089 - Aaron1011:bootstrap-semi, r=Mark-Simulacrum\n\nEnable `-W semicolon_in_expressions_from_macros` in bootstrap\n\nNow that stdarch has been updated, we can do this without breaking the\nbuild.", "tree": {"sha": "2a60622c674b0ac62c32b7225a1e4ba2798d1723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a60622c674b0ac62c32b7225a1e4ba2798d1723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6d028369be9eb02d219506c0dd662a2f863fc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6d028369be9eb02d219506c0dd662a2f863fc18", "html_url": "https://github.com/rust-lang/rust/commit/d6d028369be9eb02d219506c0dd662a2f863fc18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6d028369be9eb02d219506c0dd662a2f863fc18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "881c1ac408d93bb7adaa3a51dabab9266e82eee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/881c1ac408d93bb7adaa3a51dabab9266e82eee8", "html_url": "https://github.com/rust-lang/rust/commit/881c1ac408d93bb7adaa3a51dabab9266e82eee8"}, {"sha": "020d83d9f5fd26cfe264b1869e7b87bff78b5a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/020d83d9f5fd26cfe264b1869e7b87bff78b5a9d", "html_url": "https://github.com/rust-lang/rust/commit/020d83d9f5fd26cfe264b1869e7b87bff78b5a9d"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "149a899cef7a0cf615c88dfa94c6e3443af4d26d", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6d028369be9eb02d219506c0dd662a2f863fc18/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/d6d028369be9eb02d219506c0dd662a2f863fc18/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=d6d028369be9eb02d219506c0dd662a2f863fc18", "patch": "@@ -900,8 +900,8 @@ def build_bootstrap(self):\n         target_linker = self.get_toml(\"linker\", build_section)\n         if target_linker is not None:\n             env[\"RUSTFLAGS\"] += \" -C linker=\" + target_linker\n-        # cfg(bootstrap): Add `-Wsemicolon_in_expressions_from_macros` after the next beta bump\n         env[\"RUSTFLAGS\"] += \" -Wrust_2018_idioms -Wunused_lifetimes\"\n+        env[\"RUSTFLAGS\"] += \" -Wsemicolon_in_expressions_from_macros\"\n         if self.get_toml(\"deny-warnings\", \"rust\") != \"false\":\n             env[\"RUSTFLAGS\"] += \" -Dwarnings\"\n "}, {"sha": "5604e14f2d594ab4f35098e95942589b3b99ac47", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d6d028369be9eb02d219506c0dd662a2f863fc18/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6d028369be9eb02d219506c0dd662a2f863fc18/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=d6d028369be9eb02d219506c0dd662a2f863fc18", "patch": "@@ -1270,12 +1270,7 @@ impl<'a> Builder<'a> {\n             // some code doesn't go through this `rustc` wrapper.\n             lint_flags.push(\"-Wrust_2018_idioms\");\n             lint_flags.push(\"-Wunused_lifetimes\");\n-            // cfg(bootstrap): unconditionally enable this warning after the next beta bump\n-            // This is currently disabled for the stage1 libstd, since build scripts\n-            // will end up using the bootstrap compiler (which doesn't yet support this lint)\n-            if compiler.stage != 0 && mode != Mode::Std {\n-                lint_flags.push(\"-Wsemicolon_in_expressions_from_macros\");\n-            }\n+            lint_flags.push(\"-Wsemicolon_in_expressions_from_macros\");\n \n             if self.config.deny_warnings {\n                 lint_flags.push(\"-Dwarnings\");"}]}