{"sha": "18388c9f7372d00fa958a421b3eec639a5b7b5a2", "node_id": "C_kwDOAAsO6NoAKDE4Mzg4YzlmNzM3MmQwMGZhOTU4YTQyMWIzZWVjNjM5YTViN2I1YTI", "commit": {"author": {"name": "Tom Martin", "email": "tom.martin1239@gmail.com", "date": "2023-04-07T07:14:48Z"}, "committer": {"name": "Tom Martin", "email": "tom.martin1239@gmail.com", "date": "2023-04-07T07:33:56Z"}, "message": "Rewrite added diagnostics as translatable\n\nStart messages with lowercase", "tree": {"sha": "c3fd742ffab5b51e2cd9b48761f5d012c9fcca1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3fd742ffab5b51e2cd9b48761f5d012c9fcca1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18388c9f7372d00fa958a421b3eec639a5b7b5a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE4EiFxdccn1fd6ae9c6cz+WKfWsUFAmQvx2UACgkQc6cz+WKf\nWsWPpw//ct+NMZYTDNwlyqlNCJYSVSaxNefG+9qn71o3Q+q8KtEC23Ovsj0E5WgH\n14OYCc1qA39s+qICuOWYEnCvOVSLU7GX3M4BFE/2NSgunKPwuL4mfkzJEdbYEPrr\nRwqhPVArMliQhwTBqRyJfyzoyxSq5nf3y4ksLFxKqUn3WfmycPDMoXXb/QwL7io7\nv1nZ0niH1yJk86EG2vBKHoOLwLQ9x6lrktt8AZz0qHd4AF5LmBRSKT1kgNeVALQF\navoYl85jDsusz1P8Xv9ElpfKk4Qhd1Gs0UAd18+WFLE87Dz28aSSn7PNbmRX06zK\nLOXN8s634me9fJmtfSy6povmfD9CFmC9YtN3QPjLre7yQZa/NrHBOLu1u28KMF8H\nyaLlm5jaxiD2b6Mq1ooOCiRfKtl7u1DcM3vyoRPI5IEiDMJLToNyBNNs8R0YqWYS\n2BFbgBUK13MXcXJzDVLCMvqLrxmTpcB7hSnQHSQTt/9hdReRoYYEqS7K6jjqxGyv\n+7CK+B672M8qY4AIBc/mmlqV6Y9rNfJUjgv21TKIKyEJWBpDRXfpnpjamtZuN2ej\nV++fK9+HyZBHfCinSavo/misdcy0KpvUAnNfGd+DApQVtgMphoyCKDyeImQsUa7V\nSMKw022NHk9uEm2hdQdiRBIp7DKO8bhtR5HctKb1p1tEOLRVQ1s=\n=5znX\n-----END PGP SIGNATURE-----", "payload": "tree c3fd742ffab5b51e2cd9b48761f5d012c9fcca1a\nparent 5c5c3c95276811d4ea72f6c4b45e7406ee8c6165\nauthor Tom Martin <tom.martin1239@gmail.com> 1680851688 +0100\ncommitter Tom Martin <tom.martin1239@gmail.com> 1680852836 +0100\n\nRewrite added diagnostics as translatable\n\nStart messages with lowercase\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18388c9f7372d00fa958a421b3eec639a5b7b5a2", "html_url": "https://github.com/rust-lang/rust/commit/18388c9f7372d00fa958a421b3eec639a5b7b5a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18388c9f7372d00fa958a421b3eec639a5b7b5a2/comments", "author": {"login": "NotStirred", "id": 16853282, "node_id": "MDQ6VXNlcjE2ODUzMjgy", "avatar_url": "https://avatars.githubusercontent.com/u/16853282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotStirred", "html_url": "https://github.com/NotStirred", "followers_url": "https://api.github.com/users/NotStirred/followers", "following_url": "https://api.github.com/users/NotStirred/following{/other_user}", "gists_url": "https://api.github.com/users/NotStirred/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotStirred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotStirred/subscriptions", "organizations_url": "https://api.github.com/users/NotStirred/orgs", "repos_url": "https://api.github.com/users/NotStirred/repos", "events_url": "https://api.github.com/users/NotStirred/events{/privacy}", "received_events_url": "https://api.github.com/users/NotStirred/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NotStirred", "id": 16853282, "node_id": "MDQ6VXNlcjE2ODUzMjgy", "avatar_url": "https://avatars.githubusercontent.com/u/16853282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotStirred", "html_url": "https://github.com/NotStirred", "followers_url": "https://api.github.com/users/NotStirred/followers", "following_url": "https://api.github.com/users/NotStirred/following{/other_user}", "gists_url": "https://api.github.com/users/NotStirred/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotStirred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotStirred/subscriptions", "organizations_url": "https://api.github.com/users/NotStirred/orgs", "repos_url": "https://api.github.com/users/NotStirred/repos", "events_url": "https://api.github.com/users/NotStirred/events{/privacy}", "received_events_url": "https://api.github.com/users/NotStirred/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c5c3c95276811d4ea72f6c4b45e7406ee8c6165", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5c3c95276811d4ea72f6c4b45e7406ee8c6165", "html_url": "https://github.com/rust-lang/rust/commit/5c5c3c95276811d4ea72f6c4b45e7406ee8c6165"}], "stats": {"total": 75, "additions": 61, "deletions": 14}, "files": [{"sha": "07865044f053453f16b17794a47b90b2e86c1e7e", "filename": "compiler/rustc_resolve/messages.ftl", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fmessages.ftl?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -209,3 +209,13 @@ resolve_indeterminate =\n \n resolve_module_only =\n     visibility must resolve to a module\n+\n+resolve_macro_expected_found =\n+    expected {$expected}, found {$found} `{$macro_path}`\n+\n+resolve_remove_surrounding_derive =\n+    remove from the surrounding `derive()`\n+\n+resolve_add_as_non_derive =\n+    add as non-Derive macro\n+    `#[{$macro_path}]`"}, {"sha": "ff44ccb265a9e589ed3f0455d5e343e23bd89e54", "filename": "compiler/rustc_resolve/src/errors.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Ferrors.rs?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -472,3 +472,30 @@ pub(crate) struct Indeterminate(#[primary_span] pub(crate) Span);\n #[derive(Diagnostic)]\n #[diag(resolve_module_only)]\n pub(crate) struct ModuleOnly(#[primary_span] pub(crate) Span);\n+\n+#[derive(Diagnostic, Default)]\n+#[diag(resolve_macro_expected_found)]\n+pub(crate) struct MacroExpectedFound<'a> {\n+    #[primary_span]\n+    pub(crate) span: Span,\n+    pub(crate) found: &'a str,\n+    pub(crate) expected: &'a str,\n+    pub(crate) macro_path: &'a str,\n+    #[subdiagnostic]\n+    pub(crate) remove_surrounding_derive: Option<RemoveSurroundingDerive>,\n+    #[subdiagnostic]\n+    pub(crate) remove_surrounding_derive_help: Option<RemoveAddAsNonDerive<'a>>,\n+}\n+\n+#[derive(Subdiagnostic)]\n+#[help(resolve_remove_surrounding_derive)]\n+pub(crate) struct RemoveSurroundingDerive {\n+    #[primary_span]\n+    pub(crate) span: Span,\n+}\n+\n+#[derive(Subdiagnostic)]\n+#[help(resolve_add_as_non_derive)]\n+pub(crate) struct RemoveAddAsNonDerive<'a> {\n+    pub(crate) macro_path: &'a str,\n+}"}, {"sha": "b2e23721295d65c2e32af682cf7ac492bb20e583", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -1,6 +1,7 @@\n //! A bunch of methods and structures more or less related to resolving macros and\n //! interface provided by `Resolver` to macro expander.\n \n+use crate::errors::{MacroExpectedFound, RemoveAddAsNonDerive, RemoveSurroundingDerive};\n use crate::Namespace::*;\n use crate::{BuiltinMacroState, Determinacy};\n use crate::{DeriveData, Finalize, ParentScope, ResolutionError, Resolver, ScopeSet};\n@@ -543,21 +544,30 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         };\n         if let Some((article, expected)) = unexpected_res {\n             let path_str = pprust::path_to_string(path);\n-            let msg = format!(\"expected {}, found {} `{}`\", expected, res.descr(), path_str);\n-            let mut err = self.tcx.sess.struct_span_err(path.span, &msg);\n \n-            err.span_label(path.span, format!(\"not {} {}\", article, expected));\n+            let mut err = MacroExpectedFound {\n+                span: path.span,\n+                expected,\n+                found: res.descr(),\n+                macro_path: &path_str,\n+                ..Default::default() // Subdiagnostics default to None\n+            };\n \n-            // Suggest moving the macro out of the derive() as the macro isn't Derive\n+            // Suggest moving the macro out of the derive() if the macro isn't Derive\n             if !path.span.from_expansion()\n                 && kind == MacroKind::Derive\n                 && ext.macro_kind() != MacroKind::Derive\n             {\n-                err.span_help(path.span, \"remove from the surrounding `derive()`\");\n-                err.help(format!(\"add as non-Derive macro\\n`#[{}]`\", path_str));\n+                err.remove_surrounding_derive = Some(RemoveSurroundingDerive { span: path.span });\n+                err.remove_surrounding_derive_help =\n+                    Some(RemoveAddAsNonDerive { macro_path: &path_str });\n             }\n \n+            let mut err = self.tcx.sess.create_err(err);\n+            err.span_label(path.span, format!(\"not {} {}\", article, expected));\n+\n             err.emit();\n+\n             return Ok((self.dummy_ext(kind), Res::Err));\n         }\n "}, {"sha": "81c6722b56a826abece4e3690aa9e636a909cbfc", "filename": "tests/ui/macros/macro-path-prelude-fail-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -4,12 +4,12 @@ error: expected derive macro, found built-in attribute `inline`\n LL | #[derive(inline)]\n    |          ^^^^^^ not a derive macro\n    |\n-help: Remove from the surrounding `derive()`\n+help: remove from the surrounding `derive()`\n   --> $DIR/macro-path-prelude-fail-4.rs:1:10\n    |\n LL | #[derive(inline)]\n    |          ^^^^^^\n-   = help: Add as non-Derive macro\n+   = help: add as non-Derive macro\n            `#[inline]`\n \n error: aborting due to previous error"}, {"sha": "b9effe7cf21f35f37356ae92f0eaa09c7a02df2c", "filename": "tests/ui/proc-macro/macro-namespace-reserved-2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -58,12 +58,12 @@ error: expected derive macro, found attribute macro `my_macro_attr`\n LL | #[derive(my_macro_attr)]\n    |          ^^^^^^^^^^^^^ not a derive macro\n    |\n-help: Remove from the surrounding `derive()`\n+help: remove from the surrounding `derive()`\n   --> $DIR/macro-namespace-reserved-2.rs:53:10\n    |\n LL | #[derive(my_macro_attr)]\n    |          ^^^^^^^^^^^^^\n-   = help: Add as non-Derive macro\n+   = help: add as non-Derive macro\n            `#[my_macro_attr]`\n \n error: can't use a procedural macro from the same crate that defines it\n@@ -96,12 +96,12 @@ error: expected derive macro, found macro `crate::my_macro`\n LL | #[derive(crate::my_macro)]\n    |          ^^^^^^^^^^^^^^^ not a derive macro\n    |\n-help: Remove from the surrounding `derive()`\n+help: remove from the surrounding `derive()`\n   --> $DIR/macro-namespace-reserved-2.rs:50:10\n    |\n LL | #[derive(crate::my_macro)]\n    |          ^^^^^^^^^^^^^^^\n-   = help: Add as non-Derive macro\n+   = help: add as non-Derive macro\n            `#[crate::my_macro]`\n \n error: cannot find macro `my_macro_attr` in this scope"}, {"sha": "06696b548d48403de563641bd2207cad4092941f", "filename": "tests/ui/tool-attributes/tool-attributes-misplaced-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18388c9f7372d00fa958a421b3eec639a5b7b5a2/tests%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-2.stderr?ref=18388c9f7372d00fa958a421b3eec639a5b7b5a2", "patch": "@@ -4,12 +4,12 @@ error: expected derive macro, found tool attribute `rustfmt::skip`\n LL | #[derive(rustfmt::skip)]\n    |          ^^^^^^^^^^^^^ not a derive macro\n    |\n-help: Remove from the surrounding `derive()`\n+help: remove from the surrounding `derive()`\n   --> $DIR/tool-attributes-misplaced-2.rs:1:10\n    |\n LL | #[derive(rustfmt::skip)]\n    |          ^^^^^^^^^^^^^\n-   = help: Add as non-Derive macro\n+   = help: add as non-Derive macro\n            `#[rustfmt::skip]`\n \n error: expected macro, found tool attribute `rustfmt::skip`"}]}