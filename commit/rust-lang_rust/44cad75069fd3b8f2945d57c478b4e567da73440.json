{"sha": "44cad75069fd3b8f2945d57c478b4e567da73440", "node_id": "C_kwDOAAsO6NoAKDQ0Y2FkNzUwNjlmZDNiOGYyOTQ1ZDU3YzQ3OGI0ZTU2N2RhNzM0NDA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-15T15:51:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-15T15:51:40Z"}, "message": "fix iteration-order-dependent output", "tree": {"sha": "3731622c1b7126f8223d1821596017e74ab2b412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3731622c1b7126f8223d1821596017e74ab2b412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44cad75069fd3b8f2945d57c478b4e567da73440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44cad75069fd3b8f2945d57c478b4e567da73440", "html_url": "https://github.com/rust-lang/rust/commit/44cad75069fd3b8f2945d57c478b4e567da73440", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44cad75069fd3b8f2945d57c478b4e567da73440/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dcb5389cda597d9ab09d4390c574e3cdb866240", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcb5389cda597d9ab09d4390c574e3cdb866240", "html_url": "https://github.com/rust-lang/rust/commit/6dcb5389cda597d9ab09d4390c574e3cdb866240"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "4ec422cf1f86edaa78d6b60d66008bde8094561d", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/44cad75069fd3b8f2945d57c478b4e567da73440/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cad75069fd3b8f2945d57c478b4e567da73440/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=44cad75069fd3b8f2945d57c478b4e567da73440", "patch": "@@ -173,14 +173,27 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                         continue;\n                     };\n                     if symbol_name == link_name {\n-                        if let Some((instance, original_cnum)) = instance_and_crate {\n-                            throw_machine_stop!(TerminationInfo::MultipleSymbolDefinitions {\n-                                link_name,\n-                                first: tcx.def_span(instance.def_id()).data(),\n-                                first_crate: tcx.crate_name(original_cnum),\n-                                second: tcx.def_span(def_id).data(),\n-                                second_crate: tcx.crate_name(cnum),\n-                            });\n+                        if let Some((original_instance, original_cnum)) = instance_and_crate {\n+                            // Make sure we are consistent wrt what is 'first' and 'second'.\n+                            let original_span = tcx.def_span(original_instance.def_id()).data();\n+                            let span =  tcx.def_span(def_id).data();\n+                            if original_span < span {\n+                                throw_machine_stop!(TerminationInfo::MultipleSymbolDefinitions {\n+                                    link_name,\n+                                    first: original_span,\n+                                    first_crate: tcx.crate_name(original_cnum),\n+                                    second: span,\n+                                    second_crate: tcx.crate_name(cnum),\n+                                });\n+                            } else {\n+                                throw_machine_stop!(TerminationInfo::MultipleSymbolDefinitions {\n+                                    link_name,\n+                                    first: span,\n+                                    first_crate: tcx.crate_name(cnum),\n+                                    second: original_span,\n+                                    second_crate: tcx.crate_name(original_cnum),\n+                                });\n+                            }\n                         }\n                         if !matches!(tcx.def_kind(def_id), DefKind::Fn | DefKind::AssocFn) {\n                             throw_ub_format!("}, {"sha": "0e64778d8909f303de4d550c7f12a079045f41f8", "filename": "tests/compile-fail/function_calls/exported_symbol_clashing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44cad75069fd3b8f2945d57c478b4e567da73440/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_clashing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cad75069fd3b8f2945d57c478b4e567da73440/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_clashing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_clashing.rs?ref=44cad75069fd3b8f2945d57c478b4e567da73440", "patch": "@@ -1,10 +1,10 @@\n #[no_mangle]\n fn foo() {}\n-//~^ HELP then it's defined here again, in crate `exported_symbol_clashing`\n+//~^ HELP it's first defined here, in crate `exported_symbol_clashing`\n \n #[export_name = \"foo\"]\n fn bar() {}\n-//~^ HELP it's first defined here, in crate `exported_symbol_clashing`\n+//~^ HELP then it's defined here again, in crate `exported_symbol_clashing`\n \n fn main() {\n     extern \"Rust\" {"}]}