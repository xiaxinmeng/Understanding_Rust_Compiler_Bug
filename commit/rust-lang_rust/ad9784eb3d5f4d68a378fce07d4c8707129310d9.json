{"sha": "ad9784eb3d5f4d68a378fce07d4c8707129310d9", "node_id": "C_kwDOAAsO6NoAKGFkOTc4NGViM2Q1ZjRkNjhhMzc4ZmNlMDdkNGM4NzA3MTI5MzEwZDk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-28T07:40:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-28T07:53:14Z"}, "message": "make ./miri run a bit more silent; add option to control seeds tested by many-seeds", "tree": {"sha": "26eb64ac2d2527fc907a4b42235a69c4aa7489c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26eb64ac2d2527fc907a4b42235a69c4aa7489c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad9784eb3d5f4d68a378fce07d4c8707129310d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9784eb3d5f4d68a378fce07d4c8707129310d9", "html_url": "https://github.com/rust-lang/rust/commit/ad9784eb3d5f4d68a378fce07d4c8707129310d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad9784eb3d5f4d68a378fce07d4c8707129310d9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af92b048555a8c3df2e58237e878dfe73bbc4ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/af92b048555a8c3df2e58237e878dfe73bbc4ede", "html_url": "https://github.com/rust-lang/rust/commit/af92b048555a8c3df2e58237e878dfe73bbc4ede"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "3ec63ba0f104fefb6663839813a27036af41f044", "filename": "src/tools/miri/cargo-miri/src/setup.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ad9784eb3d5f4d68a378fce07d4c8707129310d9/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad9784eb3d5f4d68a378fce07d4c8707129310d9/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs?ref=ad9784eb3d5f4d68a378fce07d4c8707129310d9", "patch": "@@ -99,12 +99,10 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n         // `config.toml`.\n         command.env(\"RUSTC_WRAPPER\", \"\");\n \n-        if only_setup {\n-            if print_sysroot {\n-                // Be extra sure there is no noise on stdout.\n-                command.stdout(process::Stdio::null());\n-            }\n+        if only_setup && !print_sysroot {\n+            // Forward output.\n         } else {\n+            // Supress output.\n             command.stdout(process::Stdio::null());\n             command.stderr(process::Stdio::null());\n         }\n@@ -120,7 +118,9 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n     std::env::set_var(\"MIRI_SYSROOT\", &sysroot_dir);\n \n     // Do the build.\n-    if only_setup {\n+    if print_sysroot {\n+        // Be silent.\n+    } else if only_setup {\n         // We want to be explicit.\n         eprintln!(\"Preparing a sysroot for Miri (target: {target})...\");\n     } else {\n@@ -143,7 +143,9 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n                 )\n             }\n         });\n-    if only_setup {\n+    if print_sysroot {\n+        // Be silent.\n+    } else if only_setup {\n         eprintln!(\"A sysroot for Miri is now available in `{}`.\", sysroot_dir.display());\n     } else {\n         eprintln!(\"done\");"}, {"sha": "a259576ed42a0edb8f2529f827a46ac216efa629", "filename": "src/tools/miri/miri", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ad9784eb3d5f4d68a378fce07d4c8707129310d9/src%2Ftools%2Fmiri%2Fmiri", "raw_url": "https://github.com/rust-lang/rust/raw/ad9784eb3d5f4d68a378fce07d4c8707129310d9/src%2Ftools%2Fmiri%2Fmiri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fmiri?ref=ad9784eb3d5f4d68a378fce07d4c8707129310d9", "patch": "@@ -36,7 +36,8 @@ Mainly meant to be invoked by rust-analyzer.\n ./miri many-seeds <command>:\n Runs <command> over and over again with different seeds for Miri. The MIRIFLAGS\n variable is set to its original value appended with ` -Zmiri-seed=$SEED` for\n-many different seeds.\n+many different seeds. The MIRI_SEEDS variable controls how many seeds are being\n+tried; MIRI_SEED_START controls the first seed to try.\n \n ./miri bench <benches>:\n Runs the benchmarks from bench-cargo-miri in hyperfine. hyperfine needs to be installed.\n@@ -174,7 +175,9 @@ rustc-push)\n     fi\n     ;;\n many-seeds)\n-    for SEED in $(seq 0 255); do\n+    MIRI_SEED_START=${MIRI_SEED_START:-0} # default to 0\n+    MIRI_SEEDS=${MIRI_SEEDS:-256} # default to 256\n+    for SEED in $(seq $MIRI_SEED_START $(( $MIRI_SEED_START + $MIRI_SEEDS - 1 )) ); do\n         echo \"Trying seed: $SEED\"\n         MIRIFLAGS=\"$MIRIFLAGS -Zlayout-seed=$SEED -Zmiri-seed=$SEED\" $@ || { echo \"Failing seed: $SEED\"; break; }\n     done\n@@ -249,6 +252,8 @@ export RUSTFLAGS=\"-C link-args=-Wl,-rpath,$LIBDIR $RUSTFLAGS\"\n # Build a sysroot and set MIRI_SYSROOT to use it. Arguments are passed to `cargo miri setup`.\n build_sysroot() {\n     if ! MIRI_SYSROOT=\"$($CARGO run $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml -- miri setup --print-sysroot \"$@\")\"; then\n+        # Run it again so the user can see the error.\n+        $CARGO run $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml -- miri setup \"$@\"\n         echo \"'cargo miri setup' failed\"\n         exit 1\n     fi"}]}