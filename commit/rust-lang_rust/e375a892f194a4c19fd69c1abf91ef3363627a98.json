{"sha": "e375a892f194a4c19fd69c1abf91ef3363627a98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNzVhODkyZjE5NGE0YzE5ZmQ2OWMxYWJmOTFlZjMzNjM2MjdhOTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-20T02:23:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-20T02:23:49Z"}, "message": "Auto merge of #21257 - alexcrichton:issue-20064, r=pnkfelix\n\nThese two attributes are used to change the entry point into a Rust program, but\r\nfor now they're being put behind feature gates until we have a chance to think\r\nabout them a little more. The #[start] attribute specifically may have its\r\nsignature changed.\r\n\r\nThis is a breaking change to due the usage of these attributes generating errors\r\nby default now. If your crate is using these attributes, add this to your crate\r\nroot:\r\n\r\n    #![feature(start)] // if you're using the #[start] attribute\r\n    #![feature(main)]  // if you're using the #[main] attribute\r\n\r\ncc #20064", "tree": {"sha": "050e9ff72c48a3c96c66576951328debee951098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/050e9ff72c48a3c96c66576951328debee951098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e375a892f194a4c19fd69c1abf91ef3363627a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e375a892f194a4c19fd69c1abf91ef3363627a98", "html_url": "https://github.com/rust-lang/rust/commit/e375a892f194a4c19fd69c1abf91ef3363627a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e375a892f194a4c19fd69c1abf91ef3363627a98/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65b61ffb3f55c996eceded6c91281911b671d978", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b61ffb3f55c996eceded6c91281911b671d978", "html_url": "https://github.com/rust-lang/rust/commit/65b61ffb3f55c996eceded6c91281911b671d978"}, {"sha": "38cb91e66ca7fc7374909b31598dab09db37edaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/38cb91e66ca7fc7374909b31598dab09db37edaa", "html_url": "https://github.com/rust-lang/rust/commit/38cb91e66ca7fc7374909b31598dab09db37edaa"}], "stats": {"total": 84, "additions": 71, "deletions": 13}, "files": [{"sha": "53450aa5a6bb33784a0e5031aa450b3e0b1d3937", "filename": "src/doc/trpl/unsafe.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Fdoc%2Ftrpl%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Fdoc%2Ftrpl%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funsafe.md?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -447,7 +447,7 @@ in the same format as C:\n \n ```\n #![no_std]\n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n \n // Pull in the system libc library for what crt0.o likely requires\n extern crate libc;\n@@ -475,7 +475,7 @@ compiler's name mangling too:\n ```ignore\n #![no_std]\n #![no_main]\n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n \n extern crate libc;\n \n@@ -529,7 +529,7 @@ vectors provided from C, using idiomatic Rust practices.\n \n ```\n #![no_std]\n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n \n # extern crate libc;\n extern crate core;\n@@ -653,7 +653,7 @@ sugar for dynamic allocations via `malloc` and `free`:\n \n ```\n #![no_std]\n-#![feature(lang_items, box_syntax)]\n+#![feature(lang_items, box_syntax, start)]\n \n extern crate libc;\n "}, {"sha": "13b7944998ad8dd7c286783a1bbb287ca7b5640f", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -78,6 +78,8 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"while_let\", Accepted),\n \n     (\"plugin\", Active),\n+    (\"start\", Active),\n+    (\"main\", Active),\n \n     // A temporary feature gate used to enable parser extensions needed\n     // to bootstrap fix for #5723.\n@@ -279,6 +281,18 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                     self.gate_feature(\"plugin_registrar\", i.span,\n                                       \"compiler plugins are experimental and possibly buggy\");\n                 }\n+                if attr::contains_name(&i.attrs[], \"start\") {\n+                    self.gate_feature(\"start\", i.span,\n+                                      \"a #[start] function is an experimental \\\n+                                       feature whose signature may change \\\n+                                       over time\");\n+                }\n+                if attr::contains_name(&i.attrs[], \"main\") {\n+                    self.gate_feature(\"main\", i.span,\n+                                      \"declaration of a nonstandard #[main] \\\n+                                       function may change over time, for now \\\n+                                       a top-level `fn main()` is required\");\n+                }\n             }\n \n             ast::ItemStruct(..) => {"}, {"sha": "db1c1a944172d5d1ce6508b297480fc9742bd69e", "filename": "src/test/compile-fail/feature-gate-main.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Ffeature-gate-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Ffeature-gate-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-main.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[main]\n+fn foo() {} //~ ERROR: declaration of a nonstandard #[main] function may change over time"}, {"sha": "6a9acf04290e4a13d6e36bb40d1e91a5b2337661", "filename": "src/test/compile-fail/feature-gate-start.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[start]\n+fn foo() {} //~ ERROR: a #[start] function is an experimental feature\n+"}, {"sha": "94dd787f08635de4a37f0132621fdd741ea35a21", "filename": "src/test/compile-fail/issue-9575.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-9575.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n+\n #[start]\n fn start(argc: isize, argv: *const *const u8, crate_map: *const u8) -> isize {\n     //~^ ERROR incorrect number of function parameters"}, {"sha": "61d55fd0964e3e3a72d2e12de8bfb68a55f78593", "filename": "src/test/compile-fail/lang-item-missing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -14,6 +14,7 @@\n // error-pattern: requires `sized` lang_item\n \n #![no_std]\n+#![feature(start)]\n \n #[start]\n fn start(argc: isize, argv: *const *const u8) -> isize {"}, {"sha": "4a0e4f4319e0acd436ee29361c5063a19584f4a4", "filename": "src/test/compile-fail/lint-dead-code-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Flint-dead-code-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Flint-dead-code-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-2.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -10,6 +10,7 @@\n \n #![allow(unused_variables)]\n #![deny(dead_code)]\n+#![feature(main, start)]\n \n struct Foo;\n "}, {"sha": "d9c232d7dac37efd13c30338bcfea7f479816776", "filename": "src/test/compile-fail/multiple-main-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fmultiple-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fmultiple-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmultiple-main-2.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(main)]\n+\n #[main]\n fn bar() {\n }"}, {"sha": "866a59e7a4f6292a17c08e735974ff3765113de7", "filename": "src/test/compile-fail/multiple-main-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fmultiple-main-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fmultiple-main-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmultiple-main-3.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(main)]\n+\n #[main]\n fn main1() {\n }"}, {"sha": "b2ee62ddabe55939fc51ba02c3e7b0b35fd0087a", "filename": "src/test/compile-fail/privacy1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang=\"sized\"]"}, {"sha": "b3d7321edabd5836b386c6e7afc9c6b4184446c7", "filename": "src/test/compile-fail/privacy2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that globs don't leak in regular `use` statements."}, {"sha": "245a9c21a6b2e9b9ecdf6cdf51ccbbf1803c3570", "filename": "src/test/compile-fail/privacy3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that private items imported through globs remain private"}, {"sha": "e35089b8606c2e3dd01aec9f915d345f3085d9a8", "filename": "src/test/compile-fail/privacy4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang = \"sized\"] pub trait Sized {}"}, {"sha": "fd0ae0729af2540fc69099043a1655eb0188c76a", "filename": "src/test/run-pass/attr-main-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main-2.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(main)]\n \n pub fn main() {\n     panic!()"}, {"sha": "29b504bed535d5af4a831fe7eefe53ad92aa29ae", "filename": "src/test/run-pass/attr-main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(main)]\n \n #[main]\n fn foo() {"}, {"sha": "2bf09404200a54e180ac54cdec6a99db05266457", "filename": "src/test/run-pass/attr-start.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-start.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n \n #[start]\n fn start(_argc: int, _argv: *const *const u8) -> int {"}, {"sha": "129d69b6e67ccd85851966bcd156dd910ee1fcbe", "filename": "src/test/run-pass/attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(main)]\n+\n #[main]\n fn foo() {\n }"}, {"sha": "da07e9594c0e653a014f42fa6b17f977fbd788cb", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(intrinsics)]\n+#![feature(intrinsics, main)]\n \n mod rusti {\n     extern \"rust-intrinsic\" {"}, {"sha": "a6a1c5f16b31cd3f909565173992ae1f30773286", "filename": "src/test/run-pass/issue-16597-empty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags:--test\n+// no-pretty-expanded\n \n // This verifies that the test generation doesn't crash when we have\n // no tests - for more information, see PR #16892."}, {"sha": "561b61954768e69835f1cf72348c79930a6c6282", "filename": "src/test/run-pass/issue-20823.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20823.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: --test\n+// no-pretty-expanded\n \n #![deny(unstable)]\n "}, {"sha": "f94f648275932f0b0e7dde5c54993f49f2a15f67", "filename": "src/test/run-pass/lang-item-public.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flang-item-public.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -13,7 +13,7 @@\n // ignore-windows #13361\n \n #![no_std]\n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n \n extern crate \"lang-item-public\" as lang_lib;\n "}, {"sha": "b151eddb94e5dd3fd7d054a44f3847c6931cea14", "filename": "src/test/run-pass/native-print-no-runtime.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n \n #[start]\n pub fn main(_: int, _: *const *const u8) -> int {"}, {"sha": "7b809235e8d3d7e0a8735712a3e631dbe3694b87", "filename": "src/test/run-pass/running-with-no-runtime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(start)]\n+\n use std::ffi;\n use std::io::process::{Command, ProcessOutput};\n use std::os;"}, {"sha": "4913b34c4b311fff52b648392dba030cc5d90d94", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -13,7 +13,7 @@\n // Smallest \"hello world\" with a libc runtime\n \n #![no_std]\n-#![feature(intrinsics, lang_items)]\n+#![feature(intrinsics, lang_items, start)]\n \n extern crate libc;\n "}, {"sha": "a2e1d8a567167d39394be81b71e88d562e0e9333", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -9,14 +9,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(unused_imports)]\n-\n+#![feature(start)]\n #![no_std]\n+\n extern crate std;\n extern crate \"std\" as zed;\n \n-\n use std::str;\n use zed::str as x;\n mod baz {"}, {"sha": "c6c370173497096172548739621beaa8c5f2cbc9", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e375a892f194a4c19fd69c1abf91ef3363627a98/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=e375a892f194a4c19fd69c1abf91ef3363627a98", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items)]\n+#![feature(lang_items, start)]\n #![no_std]\n \n extern crate \"std\" as other;"}]}