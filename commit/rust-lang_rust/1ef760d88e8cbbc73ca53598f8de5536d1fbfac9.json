{"sha": "1ef760d88e8cbbc73ca53598f8de5536d1fbfac9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZjc2MGQ4OGU4Y2JiYzczY2E1MzU5OGY4ZGU1NTM2ZDFmYmZhYzk=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2021-04-20T22:49:04Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2021-04-20T22:49:35Z"}, "message": "Add test for issue #70303", "tree": {"sha": "11a0547d65d9dfc2a443da745c7c7ff5489dff3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11a0547d65d9dfc2a443da745c7c7ff5489dff3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9", "html_url": "https://github.com/rust-lang/rust/commit/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25cb1af7b232c93396b122ed6eb0887a388183f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/25cb1af7b232c93396b122ed6eb0887a388183f7", "html_url": "https://github.com/rust-lang/rust/commit/25cb1af7b232c93396b122ed6eb0887a388183f7"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "a1cb2295b639ee348311773026f425bda5c2da18", "filename": "src/test/ui/generic-associated-types/issue-70303.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-70303.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef760d88e8cbbc73ca53598f8de5536d1fbfac9/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-70303.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-70303.rs?ref=1ef760d88e8cbbc73ca53598f8de5536d1fbfac9", "patch": "@@ -0,0 +1,60 @@\n+// check-pass\n+\n+#![allow(incomplete_features)]\n+#![feature(generic_associated_types)]\n+\n+trait Document {\n+    type Cursor<'a>: DocCursor<'a>;\n+\n+    fn cursor(&self) -> Self::Cursor<'_>;\n+}\n+\n+struct DocumentImpl {}\n+\n+impl Document for DocumentImpl {\n+    type Cursor<'a> = DocCursorImpl<'a>;\n+\n+    fn cursor(&self) -> Self::Cursor<'_> {\n+        DocCursorImpl {\n+            document: &self,\n+        }\n+    }\n+}\n+\n+\n+trait DocCursor<'a> {}\n+\n+struct DocCursorImpl<'a> {\n+    document: &'a DocumentImpl,\n+}\n+\n+impl<'a> DocCursor<'a> for DocCursorImpl<'a> {}\n+\n+struct Lexer<'d, Cursor>\n+where\n+    Cursor: DocCursor<'d>,\n+{\n+    cursor: Cursor,\n+    _phantom: std::marker::PhantomData<&'d ()>,\n+}\n+\n+\n+impl<'d, Cursor> Lexer<'d, Cursor>\n+where\n+    Cursor: DocCursor<'d>,\n+{\n+    pub fn from<Doc>(document: &'d Doc) -> Lexer<'d, Cursor>\n+    where\n+        Doc: Document<Cursor<'d> = Cursor>,\n+    {\n+        Lexer {\n+            cursor: document.cursor(),\n+            _phantom: std::marker::PhantomData,\n+        }\n+    }\n+}\n+\n+pub fn main() {\n+    let doc = DocumentImpl {};\n+    let lexer: Lexer<'_, DocCursorImpl<'_>> = Lexer::from(&doc);\n+}"}]}