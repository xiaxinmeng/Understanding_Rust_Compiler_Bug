{"sha": "08d44f5512e624eadfedf32d41f19ece13dd5fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZDQ0ZjU1MTJlNjI0ZWFkZmVkZjMyZDQxZjE5ZWNlMTNkZDVmYjQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T20:53:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T21:37:06Z"}, "message": "rustdoc: Use more descriptive description metadata.\n\nThis text appears in and improves search results.\n\ncc #12466", "tree": {"sha": "edf8599b1911f58dcf5d71a1b2e02a3a6bf7295f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf8599b1911f58dcf5d71a1b2e02a3a6bf7295f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08d44f5512e624eadfedf32d41f19ece13dd5fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08d44f5512e624eadfedf32d41f19ece13dd5fb4", "html_url": "https://github.com/rust-lang/rust/commit/08d44f5512e624eadfedf32d41f19ece13dd5fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08d44f5512e624eadfedf32d41f19ece13dd5fb4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efe1f7ee9efb5da5613f2cff4f9b810d2d5992d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/efe1f7ee9efb5da5613f2cff4f9b810d2d5992d4", "html_url": "https://github.com/rust-lang/rust/commit/efe1f7ee9efb5da5613f2cff4f9b810d2d5992d4"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "3515725506976163ce05b9de721da96f2f4967bc", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08d44f5512e624eadfedf32d41f19ece13dd5fb4/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08d44f5512e624eadfedf32d41f19ece13dd5fb4/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=08d44f5512e624eadfedf32d41f19ece13dd5fb4", "patch": "@@ -26,6 +26,7 @@ pub struct Page<'a> {\n     pub title: &'a str,\n     pub ty: &'a str,\n     pub root_path: &'a str,\n+    pub description: &'a str\n }\n \n pub fn render<T: fmt::Show, S: fmt::Show>(\n@@ -38,8 +39,8 @@ r##\"<!DOCTYPE html>\n <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n-    <meta name=\"description\" content=\"The {krate} library documentation.\">\n     <meta name=\"generator\" content=\"rustdoc\">\n+    <meta name=\"description\" content=\"{description}\">\n \n     <title>{title}</title>\n \n@@ -135,6 +136,7 @@ r##\"<!DOCTYPE html>\n                 layout.logo)\n     },\n     title     = page.title,\n+    description = page.description,\n     favicon   = if layout.favicon.len() == 0 {\n         \"\".to_string()\n     } else {"}, {"sha": "47e91470612832fc981a7e60c3d06f6e68a84da5", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/08d44f5512e624eadfedf32d41f19ece13dd5fb4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08d44f5512e624eadfedf32d41f19ece13dd5fb4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=08d44f5512e624eadfedf32d41f19ece13dd5fb4", "patch": "@@ -742,8 +742,10 @@ impl<'a> SourceCollector<'a> {\n         let mut w = BufferedWriter::new(try!(File::create(&cur)));\n \n         let title = format!(\"{} -- source\", cur.filename_display());\n+        let desc = format!(\"Source to the Rust file `{}`.\", filename);\n         let page = layout::Page {\n             title: title.as_slice(),\n+            description: desc.as_slice(),\n             ty: \"source\",\n             root_path: root_path.as_slice(),\n         };\n@@ -1072,8 +1074,11 @@ impl Context {\n             try!(stability.encode(&mut json::Encoder::new(&mut json_out)));\n \n             let title = stability.name.clone().append(\" - Stability dashboard\");\n+            let desc = format!(\"API stability overview for the Rust `{}` crate.\",\n+                               this.layout.krate);\n             let page = layout::Page {\n                 ty: \"mod\",\n+                description: desc.as_slice(),\n                 root_path: this.root_path.as_slice(),\n                 title: title.as_slice(),\n             };\n@@ -1120,8 +1125,21 @@ impl Context {\n                 title.push_str(it.name.get_ref().as_slice());\n             }\n             title.push_str(\" - Rust\");\n+            let tyname = shortty(it).to_static_str();\n+            let is_crate = match it.inner {\n+                clean::ModuleItem(clean::Module { items: _, is_crate: true }) => true,\n+                _ => false\n+            };\n+            let desc = if is_crate {\n+                format!(\"API documentation for the Rust `{}` crate.\",\n+                        cx.layout.krate)\n+            } else {\n+                format!(\"API documentation for the Rust `{}` {} in crate `{}`.\",\n+                        it.name.get_ref(), tyname, cx.layout.krate)\n+            };\n             let page = layout::Page {\n-                ty: shortty(it).to_static_str(),\n+                ty: tyname,\n+                description: desc.as_slice(),\n                 root_path: cx.root_path.as_slice(),\n                 title: title.as_slice(),\n             };"}]}