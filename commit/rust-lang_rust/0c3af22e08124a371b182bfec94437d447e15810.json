{"sha": "0c3af22e08124a371b182bfec94437d447e15810", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjM2FmMjJlMDgxMjRhMzcxYjE4MmJmZWM5NDQzN2Q0NDdlMTU4MTA=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-29T21:02:47Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-29T21:26:58Z"}, "message": "don't redundantly repeat field names", "tree": {"sha": "49b606e2d7cce0200b24f9d012fb46bf0feb0b78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b606e2d7cce0200b24f9d012fb46bf0feb0b78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3af22e08124a371b182bfec94437d447e15810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3af22e08124a371b182bfec94437d447e15810", "html_url": "https://github.com/rust-lang/rust/commit/0c3af22e08124a371b182bfec94437d447e15810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3af22e08124a371b182bfec94437d447e15810/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "158f8d034b15e65ba8dc0d066358dd0632bfcd6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/158f8d034b15e65ba8dc0d066358dd0632bfcd6e", "html_url": "https://github.com/rust-lang/rust/commit/158f8d034b15e65ba8dc0d066358dd0632bfcd6e"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "e2cbb09ce5e6d29e54c70975f4ff5c49f5903298", "filename": "compiler/rustc_data_structures/src/graph/scc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Fmod.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -523,7 +523,7 @@ where\n                             successors_len: 0,\n                             min_depth: depth,\n                             min_cycle_root: successor_node,\n-                            successor_node: successor_node,\n+                            successor_node,\n                         });\n                         continue 'recurse;\n                     }"}, {"sha": "00db19019c480d690023a13d2ecd605f23762d51", "filename": "compiler/rustc_middle/src/hir/place.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -110,10 +110,7 @@ impl<'tcx> PlaceWithHirId<'tcx> {\n         base: PlaceBase,\n         projections: Vec<Projection<'tcx>>,\n     ) -> PlaceWithHirId<'tcx> {\n-        PlaceWithHirId {\n-            hir_id: hir_id,\n-            place: Place { base_ty: base_ty, base: base, projections: projections },\n-        }\n+        PlaceWithHirId { hir_id, place: Place { base_ty, base, projections } }\n     }\n }\n "}, {"sha": "023555d91cc920d71d29e53fcf9c79738f5cc562", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -306,13 +306,13 @@ macro_rules! make_mir_visitor {\n \n                 let mut index = 0;\n                 for statement in statements {\n-                    let location = Location { block: block, statement_index: index };\n+                    let location = Location { block, statement_index: index };\n                     self.visit_statement(statement, location);\n                     index += 1;\n                 }\n \n                 if let Some(terminator) = terminator {\n-                    let location = Location { block: block, statement_index: index };\n+                    let location = Location { block, statement_index: index };\n                     self.visit_terminator(terminator, location);\n                 }\n             }"}, {"sha": "4475d4e9f2deac8421494998ecdbb44ab7975a0b", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -1634,7 +1634,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n \n         let layout = tcx.intern_layout(Layout {\n             variants: Variants::Multiple {\n-                tag: tag,\n+                tag,\n                 tag_encoding: TagEncoding::Direct,\n                 tag_field: tag_index,\n                 variants,"}, {"sha": "e8cbefd44ee6d842477c1c4dc905e9bd5930dc79", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -390,7 +390,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             let min_cap_list = match root_var_min_capture_list.get_mut(&var_hir_id) {\n                 None => {\n-                    let min_cap_list = vec![ty::CapturedPlace { place: place, info: capture_info }];\n+                    let min_cap_list = vec![ty::CapturedPlace { place, info: capture_info }];\n                     root_var_min_capture_list.insert(var_hir_id, min_cap_list);\n                     continue;\n                 }"}, {"sha": "a601123c8d0555a8acf5c0277beb54af279dd391", "filename": "compiler/rustc_typeck/src/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3af22e08124a371b182bfec94437d447e15810/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs?ref=0c3af22e08124a371b182bfec94437d447e15810", "patch": "@@ -459,7 +459,7 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx> {\n         kind: ProjectionKind,\n     ) -> PlaceWithHirId<'tcx> {\n         let mut projections = base_place.place.projections;\n-        projections.push(Projection { kind: kind, ty: ty });\n+        projections.push(Projection { kind, ty });\n         let ret = PlaceWithHirId::new(\n             node.hir_id(),\n             base_place.place.base_ty,"}]}