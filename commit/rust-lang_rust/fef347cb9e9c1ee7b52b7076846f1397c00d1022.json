{"sha": "fef347cb9e9c1ee7b52b7076846f1397c00d1022", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZjM0N2NiOWU5YzFlZTdiNTJiNzA3Njg0NmYxMzk3YzAwZDEwMjI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-03T13:43:12Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T10:35:29Z"}, "message": "Add `use_block_indent` method to RewriteContext", "tree": {"sha": "114ca836a8d7a6d01f6cf3a5fb2cb440866366e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/114ca836a8d7a6d01f6cf3a5fb2cb440866366e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fef347cb9e9c1ee7b52b7076846f1397c00d1022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fef347cb9e9c1ee7b52b7076846f1397c00d1022", "html_url": "https://github.com/rust-lang/rust/commit/fef347cb9e9c1ee7b52b7076846f1397c00d1022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fef347cb9e9c1ee7b52b7076846f1397c00d1022/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e25e628a152bb78cd42b0b81852a63d6e0ab204", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e25e628a152bb78cd42b0b81852a63d6e0ab204", "html_url": "https://github.com/rust-lang/rust/commit/3e25e628a152bb78cd42b0b81852a63d6e0ab204"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "dca785593bb1839d0f89c904d1e5689b483fb723", "filename": "src/chains.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fef347cb9e9c1ee7b52b7076846f1397c00d1022/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef347cb9e9c1ee7b52b7076846f1397c00d1022/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=fef347cb9e9c1ee7b52b7076846f1397c00d1022", "patch": "@@ -229,7 +229,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     }\n \n     // Try overflowing the last element if we are using block indent.\n-    if !fits_single_line && context.config.fn_call_style() == IndentStyle::Block {\n+    if !fits_single_line && context.use_block_indent() {\n         let (init, last) = rewrites.split_at_mut(last_non_try_index);\n         let almost_single_line = init.iter().all(|s| !s.contains('\\n'));\n         if almost_single_line {\n@@ -339,9 +339,7 @@ fn join_rewrites(rewrites: &[String], subexps: &[ast::Expr], connector: &str) ->\n // parens, braces, and brackets in its idiomatic formatting.\n fn is_block_expr(context: &RewriteContext, expr: &ast::Expr, repr: &str) -> bool {\n     match expr.node {\n-        ast::ExprKind::Call(..) => {\n-            context.config.fn_call_style() == IndentStyle::Block && repr.contains('\\n')\n-        }\n+        ast::ExprKind::Call(..) => context.use_block_indent() && repr.contains('\\n'),\n         ast::ExprKind::Struct(..) |\n         ast::ExprKind::While(..) |\n         ast::ExprKind::WhileLet(..) |"}, {"sha": "28bb6fe6b59e8ad7e59b0e23d05c03f45fa98a63", "filename": "src/rewrite.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fef347cb9e9c1ee7b52b7076846f1397c00d1022/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef347cb9e9c1ee7b52b7076846f1397c00d1022/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=fef347cb9e9c1ee7b52b7076846f1397c00d1022", "patch": "@@ -14,7 +14,7 @@ use syntax::codemap::{CodeMap, Span};\n use syntax::parse::ParseSess;\n \n use Shape;\n-use config::Config;\n+use config::{Config, IndentStyle};\n \n pub trait Rewrite {\n     /// Rewrite self into shape.\n@@ -38,4 +38,9 @@ impl<'a> RewriteContext<'a> {\n     pub fn snippet(&self, span: Span) -> String {\n         self.codemap.span_to_snippet(span).unwrap()\n     }\n+\n+    /// Return true if we should use block indent style for rewriting function call.\n+    pub fn use_block_indent(&self) -> bool {\n+        self.config.fn_call_style() == IndentStyle::Block || self.use_block\n+    }\n }"}]}