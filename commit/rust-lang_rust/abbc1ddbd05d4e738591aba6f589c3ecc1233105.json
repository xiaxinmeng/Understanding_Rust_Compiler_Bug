{"sha": "abbc1ddbd05d4e738591aba6f589c3ecc1233105", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYmMxZGRiZDA1ZDRlNzM4NTkxYWJhNmY1ODljM2VjYzEyMzMxMDU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-09-24T08:56:23Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T00:14:33Z"}, "message": "rustc: make TyLayout::field(NonZero<*T>, 0) return &T.", "tree": {"sha": "ddef08970d1684db0036942f3ee80e61ae76fa48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddef08970d1684db0036942f3ee80e61ae76fa48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abbc1ddbd05d4e738591aba6f589c3ecc1233105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abbc1ddbd05d4e738591aba6f589c3ecc1233105", "html_url": "https://github.com/rust-lang/rust/commit/abbc1ddbd05d4e738591aba6f589c3ecc1233105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abbc1ddbd05d4e738591aba6f589c3ecc1233105/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de3e581e29b1fd02fe4ef5cc415e5173f30e2ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/de3e581e29b1fd02fe4ef5cc415e5173f30e2ca7", "html_url": "https://github.com/rust-lang/rust/commit/de3e581e29b1fd02fe4ef5cc415e5173f30e2ca7"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "2919f25dc9d2c09f60e36d94a375aa5e71d32464", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/abbc1ddbd05d4e738591aba6f589c3ecc1233105/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abbc1ddbd05d4e738591aba6f589c3ecc1233105/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=abbc1ddbd05d4e738591aba6f589c3ecc1233105", "patch": "@@ -2033,7 +2033,17 @@ impl<'a, 'tcx> TyLayout<'tcx> {\n             ty::TyAdt(def, substs) => {\n                 match self.variants {\n                     Variants::Single { index } => {\n-                        def.variants[index].fields[i].ty(tcx, substs)\n+                        let mut field_ty = def.variants[index].fields[i].ty(tcx, substs);\n+\n+                        // Treat NonZero<*T> as containing &T.\n+                        // This is especially useful for fat pointers.\n+                        if Some(def.did) == tcx.lang_items().non_zero() {\n+                            if let ty::TyRawPtr(mt) = field_ty.sty {\n+                                field_ty = tcx.mk_ref(tcx.types.re_erased, mt);\n+                            }\n+                        }\n+\n+                        field_ty\n                     }\n \n                     // Discriminant field for enums (where applicable).\n@@ -2109,10 +2119,6 @@ impl<'a, 'tcx> TyLayout<'tcx> {\n                 let offset = self.fields.offset(0);\n                 if let Abi::Scalar(value) = field.abi {\n                     Ok(Some((offset, value)))\n-                } else if let ty::TyRawPtr(_) = field.ty.sty {\n-                    // If `NonZero` contains a non-scalar `*T`, it's\n-                    // a fat pointer, which starts with a thin pointer.\n-                    Ok(Some((offset, Pointer)))\n                 } else {\n                     Ok(None)\n                 }"}]}