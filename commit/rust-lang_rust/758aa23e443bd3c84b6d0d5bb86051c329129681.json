{"sha": "758aa23e443bd3c84b6d0d5bb86051c329129681", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OGFhMjNlNDQzYmQzYzg0YjZkMGQ1YmI4NjA1MWMzMjkxMjk2ODE=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-06-06T15:07:02Z"}, "committer": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-06-06T15:07:02Z"}, "message": "Elide type on liballoc vec", "tree": {"sha": "7146513f5de8cbce0adf0447b83af0a2813a0fe1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7146513f5de8cbce0adf0447b83af0a2813a0fe1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/758aa23e443bd3c84b6d0d5bb86051c329129681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/758aa23e443bd3c84b6d0d5bb86051c329129681", "html_url": "https://github.com/rust-lang/rust/commit/758aa23e443bd3c84b6d0d5bb86051c329129681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/758aa23e443bd3c84b6d0d5bb86051c329129681/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "118b50524b79e565f017e08bce9b90a16c63634f", "url": "https://api.github.com/repos/rust-lang/rust/commits/118b50524b79e565f017e08bce9b90a16c63634f", "html_url": "https://github.com/rust-lang/rust/commit/118b50524b79e565f017e08bce9b90a16c63634f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "96923ea47f39ba4a3fc47dead93926cbe9a06a99", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/758aa23e443bd3c84b6d0d5bb86051c329129681/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/758aa23e443bd3c84b6d0d5bb86051c329129681/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=758aa23e443bd3c84b6d0d5bb86051c329129681", "patch": "@@ -984,7 +984,7 @@ impl<T> Vec<T> {\n             // bounds check above succeeds there must be a last element (which\n             // can be self[index] itself).\n             let last = ptr::read(self.as_ptr().add(len - 1));\n-            let hole: *mut T = self.as_mut_ptr().add(index);\n+            let hole = self.as_mut_ptr().add(index);\n             self.set_len(len - 1);\n             ptr::replace(hole, last)\n         }"}]}