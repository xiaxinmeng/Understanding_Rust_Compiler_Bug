{"sha": "2140c4ba36301a71f43f4d488c45bc8ca27bf386", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDBjNGJhMzYzMDFhNzFmNDNmNGQ0ODhjNDViYzhjYTI3YmYzODY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-13T04:24:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-13T04:52:02Z"}, "message": "rustc: Always link compiler-builtins last\n\nAll crates depend on compiler-builtins, so we need to always include the crate\nlast.", "tree": {"sha": "49d28dd816bbef714cf59e457113a06bf447fe92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49d28dd816bbef714cf59e457113a06bf447fe92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2140c4ba36301a71f43f4d488c45bc8ca27bf386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2140c4ba36301a71f43f4d488c45bc8ca27bf386", "html_url": "https://github.com/rust-lang/rust/commit/2140c4ba36301a71f43f4d488c45bc8ca27bf386", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2140c4ba36301a71f43f4d488c45bc8ca27bf386/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521ffe9dbe8ed03ea8b2efdfe2b2bc1d6e1d7847", "url": "https://api.github.com/repos/rust-lang/rust/commits/521ffe9dbe8ed03ea8b2efdfe2b2bc1d6e1d7847", "html_url": "https://github.com/rust-lang/rust/commit/521ffe9dbe8ed03ea8b2efdfe2b2bc1d6e1d7847"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "3433b866691cc9e29fd166959d8029a152992062", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2140c4ba36301a71f43f4d488c45bc8ca27bf386/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2140c4ba36301a71f43f4d488c45bc8ca27bf386/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=2140c4ba36301a71f43f4d488c45bc8ca27bf386", "patch": "@@ -926,17 +926,19 @@ fn add_upstream_rust_crates(cmd: &mut Linker,\n     // crates.\n     let deps = sess.cstore.used_crates(LinkagePreference::RequireDynamic);\n \n+    let mut compiler_builtins = None;\n+\n     for &(cnum, _) in &deps {\n         // We may not pass all crates through to the linker. Some crates may\n         // appear statically in an existing dylib, meaning we'll pick up all the\n         // symbols from the dylib.\n         let src = sess.cstore.used_crate_source(cnum);\n         match data[cnum as usize - 1] {\n-            // We must always link the `compiler_builtins` crate statically. Even if it was already\n-            // \"included\" in a dylib (e.g. `libstd` when `-C prefer-dynamic` is used)\n+            // compiler-builtins are always placed last to ensure that they're\n+            // linked correctly.\n             _ if sess.cstore.is_compiler_builtins(cnum) => {\n-                add_static_crate(cmd, sess, tmpdir, crate_type,\n-                                 &src.rlib.unwrap().0, sess.cstore.is_no_builtins(cnum))\n+                assert!(compiler_builtins.is_none());\n+                compiler_builtins = Some(cnum);\n             }\n             Linkage::NotLinked |\n             Linkage::IncludedFromDylib => {}\n@@ -950,6 +952,15 @@ fn add_upstream_rust_crates(cmd: &mut Linker,\n         }\n     }\n \n+    // We must always link the `compiler_builtins` crate statically. Even if it\n+    // was already \"included\" in a dylib (e.g. `libstd` when `-C prefer-dynamic`\n+    // is used)\n+    if let Some(cnum) = compiler_builtins {\n+        let src = sess.cstore.used_crate_source(cnum);\n+        add_static_crate(cmd, sess, tmpdir, crate_type,\n+                         &src.rlib.unwrap().0, sess.cstore.is_no_builtins(cnum));\n+    }\n+\n     // Converts a library file-stem into a cc -l argument\n     fn unlib<'a>(config: &config::Config, stem: &'a str) -> &'a str {\n         if stem.starts_with(\"lib\") && !config.target.options.is_like_windows {"}]}