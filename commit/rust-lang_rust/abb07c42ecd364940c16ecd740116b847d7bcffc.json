{"sha": "abb07c42ecd364940c16ecd740116b847d7bcffc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYjA3YzQyZWNkMzY0OTQwYzE2ZWNkNzQwMTE2Yjg0N2Q3YmNmZmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T06:49:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T06:49:52Z"}, "message": "remove a bit of dead code", "tree": {"sha": "20eff59318105a39228c4041d5757abbb903a558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20eff59318105a39228c4041d5757abbb903a558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abb07c42ecd364940c16ecd740116b847d7bcffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abb07c42ecd364940c16ecd740116b847d7bcffc", "html_url": "https://github.com/rust-lang/rust/commit/abb07c42ecd364940c16ecd740116b847d7bcffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abb07c42ecd364940c16ecd740116b847d7bcffc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74e35d270067afff72034312065c48e6d8cfba67", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e35d270067afff72034312065c48e6d8cfba67", "html_url": "https://github.com/rust-lang/rust/commit/74e35d270067afff72034312065c48e6d8cfba67"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "27b0cfb163077e8d2ba28731a415d9690169f20d", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb07c42ecd364940c16ecd740116b847d7bcffc/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb07c42ecd364940c16ecd740116b847d7bcffc/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=abb07c42ecd364940c16ecd740116b847d7bcffc", "patch": "@@ -9,12 +9,6 @@ use crate::ThinVec;\n use rustc_target::spec::abi::Abi;\n use syntax_pos::{Pos, Span, DUMMY_SP};\n \n-// Transitional re-exports so qquote can find the paths it is looking for\n-mod syntax {\n-    pub use crate::ext;\n-    pub use crate::parse;\n-}\n-\n pub trait AstBuilder {\n     // paths\n     fn path(&self, span: Span, strs: Vec<ast::Ident> ) -> ast::Path;"}]}