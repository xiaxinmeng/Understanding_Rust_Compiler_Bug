{"sha": "f3c68e723857dc9b3b382038ba397bcdcd71074a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzY4ZTcyMzg1N2RjOWIzYjM4MjAzOGJhMzk3YmNkY2Q3MTA3NGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-10T17:17:14Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T21:39:34Z"}, "message": "enable unsafe checking but only with a flag --check-unsafe", "tree": {"sha": "10965cc77ccfc09af2ed19a53516a8e5e396856c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10965cc77ccfc09af2ed19a53516a8e5e396856c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c68e723857dc9b3b382038ba397bcdcd71074a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c68e723857dc9b3b382038ba397bcdcd71074a", "html_url": "https://github.com/rust-lang/rust/commit/f3c68e723857dc9b3b382038ba397bcdcd71074a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c68e723857dc9b3b382038ba397bcdcd71074a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe8da0655de948d7b405676d2e7001b0b35e9de", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe8da0655de948d7b405676d2e7001b0b35e9de", "html_url": "https://github.com/rust-lang/rust/commit/cbe8da0655de948d7b405676d2e7001b0b35e9de"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "be09a59074156bcda2f47b30975812448dd6f82b", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=f3c68e723857dc9b3b382038ba397bcdcd71074a", "patch": "@@ -264,6 +264,7 @@ options:\n     --test             build test harness\n     --gc               garbage collect shared data (experimental/temporary)\n     --stack-growth     perform stack checks (experimental)\n+    --check-unsafe     disallow unsafe actions in non-unsafe functions (temporary option)\n \n \");\n }\n@@ -322,6 +323,7 @@ fn build_session_options(match: getopts::match)\n \n     let parse_only = opt_present(match, \"parse-only\");\n     let no_trans = opt_present(match, \"no-trans\");\n+    let check_unsafe = opt_present(match, \"check-unsafe\");\n \n     let output_type =\n         if parse_only || no_trans {\n@@ -393,7 +395,8 @@ fn build_session_options(match: getopts::match)\n           parse_only: parse_only,\n           no_trans: no_trans,\n           do_gc: do_gc,\n-          stack_growth: stack_growth};\n+          stack_growth: stack_growth,\n+          check_unsafe: check_unsafe};\n     ret sopts;\n }\n \n@@ -432,7 +435,7 @@ fn opts() -> [getopts::opt] {\n          optflag(\"no-typestate\"), optflag(\"noverify\"),\n          optmulti(\"cfg\"), optflag(\"test\"),\n          optflag(\"lib\"), optflag(\"static\"), optflag(\"gc\"),\n-         optflag(\"stack-growth\")];\n+         optflag(\"stack-growth\"), optflag(\"check-unsafe\")];\n }\n \n fn main(args: [str]) {"}, {"sha": "6ba2148e8a4c85520c8681d93ef961977c9379bf", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=f3c68e723857dc9b3b382038ba397bcdcd71074a", "patch": "@@ -41,7 +41,8 @@ type options =\n      parse_only: bool,\n      no_trans: bool,\n      do_gc: bool,\n-     stack_growth: bool};\n+     stack_growth: bool,\n+     check_unsafe: bool};\n \n type crate_metadata = {name: str, data: [u8]};\n "}, {"sha": "26dcb5074da0c0e94a7b925b5bdda56ff905fb53", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c68e723857dc9b3b382038ba397bcdcd71074a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=f3c68e723857dc9b3b382038ba397bcdcd71074a", "patch": "@@ -1524,11 +1524,13 @@ fn check_pat(fcx: @fn_ctxt, map: ast_util::pat_id_map, pat: @ast::pat,\n }\n \n fn require_unsafe(sess: session::session, f_purity: ast::purity, sp: span) {\n-    alt f_purity {\n-      ast::unsafe_fn. { ret; }\n-      _ {\n-        sess.span_fatal(sp, \"Found unsafe expression in safe function decl\");\n-      }\n+    if sess.get_opts().check_unsafe {\n+        alt f_purity {\n+          ast::unsafe_fn. { ret; }\n+          _ {\n+            sess.span_fatal(sp, \"Found unsafe expression in safe function decl\");\n+          }\n+        }\n     }\n }\n \n@@ -1547,17 +1549,22 @@ fn require_pure_call(ccx: @crate_ctxt, caller_purity: ast::purity,\n     alt caller_purity {\n       ast::unsafe_fn. { ret; }\n       ast::impure_fn. {\n+        let sess = ccx.tcx.sess;\n         alt ccx.tcx.def_map.find(callee.id) {\n           some(ast::def_fn(_, ast::unsafe_fn.)) {\n-            ccx.tcx.sess.span_fatal\n-                (sp, \"safe function calls function marked unsafe\");\n+            if sess.get_opts().check_unsafe {\n+                ccx.tcx.sess.span_fatal(\n+                    sp,\n+                    \"safe function calls function marked unsafe\");\n+            }\n           }\n-          /* Temporarily disable until unsafe blocks parse!\n           some(ast::def_native_fn(_)) {\n-            ccx.tcx.sess.span_fatal\n-                (sp, \"native functions can only be invoked from unsafe code\");\n+            if sess.get_opts().check_unsafe {\n+                ccx.tcx.sess.span_fatal(\n+                    sp,\n+                    \"native functions can only be invoked from unsafe code\");\n+            }\n           }\n-          */\n           _ {\n           }\n         }"}]}