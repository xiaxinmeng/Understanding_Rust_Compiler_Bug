{"sha": "8d26c7504365127c143d540094516f0a2dd67442", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMjZjNzUwNDM2NTEyN2MxNDNkNTQwMDk0NTE2ZjBhMmRkNjc0NDI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-28T22:59:13Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-28T22:59:13Z"}, "message": "add some comments to method::probe::Candidate", "tree": {"sha": "db45d1e27398c7bc1285dc38e0b5ec4edd732689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db45d1e27398c7bc1285dc38e0b5ec4edd732689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d26c7504365127c143d540094516f0a2dd67442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d26c7504365127c143d540094516f0a2dd67442", "html_url": "https://github.com/rust-lang/rust/commit/8d26c7504365127c143d540094516f0a2dd67442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d26c7504365127c143d540094516f0a2dd67442/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bba352cad2117f56353d400f71e96eafa2e6bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bba352cad2117f56353d400f71e96eafa2e6bd7", "html_url": "https://github.com/rust-lang/rust/commit/6bba352cad2117f56353d400f71e96eafa2e6bd7"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "03a0f6233a75ebdb60ed4be5843be71b51efc751", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8d26c7504365127c143d540094516f0a2dd67442/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d26c7504365127c143d540094516f0a2dd67442/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=8d26c7504365127c143d540094516f0a2dd67442", "patch": "@@ -85,6 +85,37 @@ impl<'a, 'gcx, 'tcx> Deref for ProbeContext<'a, 'gcx, 'tcx> {\n \n #[derive(Debug)]\n struct Candidate<'tcx> {\n+    // Candidates are (I'm not quite sure, but they are mostly) basically\n+    // some metadata on top of a `ty::AssociatedItem` (without substs).\n+    //\n+    // However, method probing wants to be able to evaluate the predicates\n+    // for a function with the substs applied - for example, if a function\n+    // has `where Self: Sized`, we don't want to consider it unless `Self`\n+    // is actually `Sized`, and similarly, return-type suggestions want\n+    // to consider the \"actual\" return type.\n+    //\n+    // The way this is handled is through `xform_self_ty`. It contains\n+    // the receiver type of this candidate, but `xform_self_ty`,\n+    // `xform_ret_ty` and `kind` (which contains the predicates) have the\n+    // generic parameters of this candidate substituted with the *same set*\n+    // of inference variables, which acts as some weird sort of \"query\".\n+    //\n+    // When we check out a candidate, we require `xform_self_ty` to be\n+    // a subtype of the passed-in self-type, and this equates the type\n+    // variables in the rest of the fields.\n+    //\n+    // For example, if we have this candidate:\n+    // ```\n+    //    trait Foo {\n+    //        fn foo(&self) where Self: Sized;\n+    //    }\n+    // ```\n+    //\n+    // Then `xform_self_ty` will be `&'erased ?X` and `kind` will contain\n+    // the predicate `?X: Sized`, so if we are evaluating `Foo` for a\n+    // the receiver `&T`, we'll do the subtyping which will make `?X`\n+    // get the right value, then when we evaluate the predicate we'll check\n+    // if `T: Sized`.\n     xform_self_ty: Ty<'tcx>,\n     xform_ret_ty: Option<Ty<'tcx>>,\n     item: ty::AssociatedItem,"}]}