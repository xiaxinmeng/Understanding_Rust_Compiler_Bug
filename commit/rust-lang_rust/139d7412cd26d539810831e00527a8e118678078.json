{"sha": "139d7412cd26d539810831e00527a8e118678078", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOWQ3NDEyY2QyNmQ1Mzk4MTA4MzFlMDA1MjdhOGUxMTg2NzgwNzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-12T08:31:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-12T08:31:50Z"}, "message": "Auto merge of #38654 - alexcrichton:rustbuild-destdir, r=brson\n\nrustbuild: Implement DESTDIR support\n\nThis commit primarily starts supporting the `DESTDIR` environment variable like\nthe old build system. Along the way this brings `config.toml` up to date with\nsupport in `config.mk` with install options supported.\n\nCloses #38441", "tree": {"sha": "19512f94fdb0f32d6c27036f30d81b26bbf15270", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19512f94fdb0f32d6c27036f30d81b26bbf15270"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/139d7412cd26d539810831e00527a8e118678078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/139d7412cd26d539810831e00527a8e118678078", "html_url": "https://github.com/rust-lang/rust/commit/139d7412cd26d539810831e00527a8e118678078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/139d7412cd26d539810831e00527a8e118678078/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408c2f7827be838aadcd05bd041dab94388af35d", "url": "https://api.github.com/repos/rust-lang/rust/commits/408c2f7827be838aadcd05bd041dab94388af35d", "html_url": "https://github.com/rust-lang/rust/commit/408c2f7827be838aadcd05bd041dab94388af35d"}, {"sha": "16f8372e0895107ce594ffb111732e48ee35fe86", "url": "https://api.github.com/repos/rust-lang/rust/commits/16f8372e0895107ce594ffb111732e48ee35fe86", "html_url": "https://github.com/rust-lang/rust/commit/16f8372e0895107ce594ffb111732e48ee35fe86"}], "stats": {"total": 89, "additions": 65, "deletions": 24}, "files": [{"sha": "98793d5a2868b15df8dd0abe1a638d3811020c0f", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=139d7412cd26d539810831e00527a8e118678078", "patch": "@@ -186,7 +186,7 @@ pub fn rustc(build: &Build, target: &str, compiler: &Compiler) {\n     cargo.env(\"CFG_RELEASE\", &build.release)\n          .env(\"CFG_RELEASE_CHANNEL\", &build.config.channel)\n          .env(\"CFG_VERSION\", &build.version)\n-         .env(\"CFG_PREFIX\", build.config.prefix.clone().unwrap_or(String::new()))\n+         .env(\"CFG_PREFIX\", build.config.prefix.clone().unwrap_or(PathBuf::new()))\n          .env(\"CFG_LIBDIR_RELATIVE\", \"lib\");\n \n     // If we're not building a compiler with debugging information then remove"}, {"sha": "8e2129758f6d0aeba02cc943ab72573292d90360", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=139d7412cd26d539810831e00527a8e118678078", "patch": "@@ -87,10 +87,10 @@ pub struct Config {\n     pub quiet_tests: bool,\n     // Fallback musl-root for all targets\n     pub musl_root: Option<PathBuf>,\n-    pub prefix: Option<String>,\n-    pub docdir: Option<String>,\n-    pub libdir: Option<String>,\n-    pub mandir: Option<String>,\n+    pub prefix: Option<PathBuf>,\n+    pub docdir: Option<PathBuf>,\n+    pub libdir: Option<PathBuf>,\n+    pub mandir: Option<PathBuf>,\n     pub codegen_tests: bool,\n     pub nodejs: Option<PathBuf>,\n     pub gdb: Option<PathBuf>,\n@@ -145,6 +145,9 @@ struct Build {\n #[derive(RustcDecodable, Default, Clone)]\n struct Install {\n     prefix: Option<String>,\n+    mandir: Option<String>,\n+    docdir: Option<String>,\n+    libdir: Option<String>,\n }\n \n /// TOML representation of how the LLVM build is configured.\n@@ -274,7 +277,10 @@ impl Config {\n         set(&mut config.full_bootstrap, build.full_bootstrap);\n \n         if let Some(ref install) = toml.install {\n-            config.prefix = install.prefix.clone();\n+            config.prefix = install.prefix.clone().map(PathBuf::from);\n+            config.mandir = install.mandir.clone().map(PathBuf::from);\n+            config.docdir = install.docdir.clone().map(PathBuf::from);\n+            config.libdir = install.libdir.clone().map(PathBuf::from);\n         }\n \n         if let Some(ref llvm) = toml.llvm {\n@@ -463,16 +469,16 @@ impl Config {\n                     self.channel = value.to_string();\n                 }\n                 \"CFG_PREFIX\" => {\n-                    self.prefix = Some(value.to_string());\n+                    self.prefix = Some(PathBuf::from(value));\n                 }\n                 \"CFG_DOCDIR\" => {\n-                    self.docdir = Some(value.to_string());\n+                    self.docdir = Some(PathBuf::from(value));\n                 }\n                 \"CFG_LIBDIR\" => {\n-                    self.libdir = Some(value.to_string());\n+                    self.libdir = Some(PathBuf::from(value));\n                 }\n                 \"CFG_MANDIR\" => {\n-                    self.mandir = Some(value.to_string());\n+                    self.mandir = Some(PathBuf::from(value));\n                 }\n                 \"CFG_LLVM_ROOT\" if value.len() > 0 => {\n                     let target = self.target_config.entry(self.build.clone())"}, {"sha": "47e50cb79b41525c14dc18332de3308eadca4071", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=139d7412cd26d539810831e00527a8e118678078", "patch": "@@ -124,7 +124,16 @@\n [install]\n \n # Instead of installing to /usr/local, install to this path instead.\n-#prefix = \"/path/to/install\"\n+#prefix = \"/usr/local\"\n+\n+# Where to install libraries in `prefix` above\n+#libdir = \"lib\"\n+\n+# Where to install man pages in `prefix` above\n+#mandir = \"share/man\"\n+\n+# Where to install documentation in `prefix` above\n+#docdir = \"share/doc/rust\"\n \n # =============================================================================\n # Options for compiling Rust code itself"}, {"sha": "efc460f35838c3c4bc1e6e5ec4b6072700bcb249", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d7412cd26d539810831e00527a8e118678078/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=139d7412cd26d539810831e00527a8e118678078", "patch": "@@ -13,33 +13,45 @@\n //! This module is responsible for installing the standard library,\n //! compiler, and documentation.\n \n+use std::env;\n use std::fs;\n-use std::borrow::Cow;\n-use std::path::Path;\n+use std::path::{Path, PathBuf, Component};\n use std::process::Command;\n \n use Build;\n use dist::{package_vers, sanitize_sh, tmpdir};\n \n /// Installs everything.\n pub fn install(build: &Build, stage: u32, host: &str) {\n-    let prefix = build.config.prefix.as_ref().clone().map(|x| Path::new(x))\n-        .unwrap_or(Path::new(\"/usr/local\"));\n-    let docdir = build.config.docdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n-        .unwrap_or(Cow::Owned(prefix.join(\"share/doc/rust\")));\n-    let libdir = build.config.libdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n-        .unwrap_or(Cow::Owned(prefix.join(\"lib\")));\n-    let mandir = build.config.mandir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n-        .unwrap_or(Cow::Owned(prefix.join(\"share/man\")));\n+    let prefix_default = PathBuf::from(\"/usr/local\");\n+    let docdir_default = PathBuf::from(\"share/doc/rust\");\n+    let mandir_default = PathBuf::from(\"share/man\");\n+    let libdir_default = PathBuf::from(\"lib\");\n+    let prefix = build.config.prefix.as_ref().unwrap_or(&prefix_default);\n+    let docdir = build.config.docdir.as_ref().unwrap_or(&docdir_default);\n+    let libdir = build.config.libdir.as_ref().unwrap_or(&libdir_default);\n+    let mandir = build.config.mandir.as_ref().unwrap_or(&mandir_default);\n+\n+    let docdir = prefix.join(docdir);\n+    let libdir = prefix.join(libdir);\n+    let mandir = prefix.join(mandir);\n+\n+    let destdir = env::var_os(\"DESTDIR\").map(PathBuf::from);\n+\n+    let prefix = add_destdir(&prefix, &destdir);\n+    let docdir = add_destdir(&docdir, &destdir);\n+    let libdir = add_destdir(&libdir, &destdir);\n+    let mandir = add_destdir(&mandir, &destdir);\n+\n     let empty_dir = build.out.join(\"tmp/empty_dir\");\n     t!(fs::create_dir_all(&empty_dir));\n     if build.config.docs {\n-        install_sh(&build, \"docs\", \"rust-docs\", stage, host, prefix,\n+        install_sh(&build, \"docs\", \"rust-docs\", stage, host, &prefix,\n                    &docdir, &libdir, &mandir, &empty_dir);\n     }\n-    install_sh(&build, \"std\", \"rust-std\", stage, host, prefix,\n+    install_sh(&build, \"std\", \"rust-std\", stage, host, &prefix,\n                &docdir, &libdir, &mandir, &empty_dir);\n-    install_sh(&build, \"rustc\", \"rustc\", stage, host, prefix,\n+    install_sh(&build, \"rustc\", \"rustc\", stage, host, &prefix,\n                &docdir, &libdir, &mandir, &empty_dir);\n     t!(fs::remove_dir_all(&empty_dir));\n }\n@@ -59,3 +71,17 @@ fn install_sh(build: &Build, package: &str, name: &str, stage: u32, host: &str,\n        .arg(\"--disable-ldconfig\");\n     build.run(&mut cmd);\n }\n+\n+fn add_destdir(path: &Path, destdir: &Option<PathBuf>) -> PathBuf {\n+    let mut ret = match *destdir {\n+        Some(ref dest) => dest.clone(),\n+        None => return path.to_path_buf(),\n+    };\n+    for part in path.components() {\n+        match part {\n+            Component::Normal(s) => ret.push(s),\n+            _ => {}\n+        }\n+    }\n+    return ret\n+}"}]}