{"sha": "598a02c6ad78fc00fbfc1370391c645b9446e3f1", "node_id": "C_kwDOAAsO6NoAKDU5OGEwMmM2YWQ3OGZjMDBmYmZjMTM3MDM5MWM2NDViOTQ0NmUzZjE", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-30T21:19:19Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-30T21:38:05Z"}, "message": "rustdoc: remove orphaned link on array bracket\n\nThis is 682889fb06591c4245422b73b005c5d8ae2d0cad, but for arrays instead.\n\nFor non-generics, this retains links to the array page, but instead of\ntrying to link it all, it only links the length part, which distinguishes\narrays from slices.\n\nFor generics, the entire thing becomes a link, just like slices.", "tree": {"sha": "aeb5321e7c1441180130f09a084fd96ea5d38c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aeb5321e7c1441180130f09a084fd96ea5d38c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/598a02c6ad78fc00fbfc1370391c645b9446e3f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/598a02c6ad78fc00fbfc1370391c645b9446e3f1", "html_url": "https://github.com/rust-lang/rust/commit/598a02c6ad78fc00fbfc1370391c645b9446e3f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/598a02c6ad78fc00fbfc1370391c645b9446e3f1/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d3027fb5ce1af6712e4503c9574802212101bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d3027fb5ce1af6712e4503c9574802212101bd", "html_url": "https://github.com/rust-lang/rust/commit/75d3027fb5ce1af6712e4503c9574802212101bd"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "6d46267931bad589b7e0db93390d209ec11d24b0", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -1010,15 +1010,25 @@ fn fmt_type<'cx>(\n                 write!(f, \"]\")\n             }\n         },\n-        clean::Array(ref t, ref n) => {\n-            primitive_link(f, PrimitiveType::Array, \"[\", cx)?;\n-            fmt::Display::fmt(&t.print(cx), f)?;\n-            if f.alternate() {\n-                primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", n), cx)\n-            } else {\n-                primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", Escape(n)), cx)\n+        clean::Array(ref t, ref n) => match **t {\n+            clean::Generic(name) if !f.alternate() => primitive_link(\n+                f,\n+                PrimitiveType::Array,\n+                &format!(\"[{name}; {n}]\", n = Escape(n)),\n+                cx,\n+            ),\n+            _ => {\n+                write!(f, \"[\")?;\n+                fmt::Display::fmt(&t.print(cx), f)?;\n+                if f.alternate() {\n+                    write!(f, \"; {n}\")?;\n+                } else {\n+                    write!(f, \"; \")?;\n+                    primitive_link(f, PrimitiveType::Array, &format!(\"{n}\", n = Escape(n)), cx)?;\n+                }\n+                write!(f, \"]\")\n             }\n-        }\n+        },\n         clean::RawPointer(m, ref t) => {\n             let m = match m {\n                 hir::Mutability::Mut => \"mut\","}, {"sha": "3481bb6a025473101c28d877838e2db87603abd1", "filename": "src/test/rustdoc/array-links.link_box_generic.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_box_generic.html", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_box_generic.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Farray-links.link_box_generic.html?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -0,0 +1 @@\n+<code>pub fn delta&lt;T&gt;() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;<a class=\"primitive\" href=\"{{channel}}/core/primitive.array.html\">[T; 1]</a>&gt;</code>\n\\ No newline at end of file"}, {"sha": "e864ae55c9f4bbf3bd0000380e29dc4589e93177", "filename": "src/test/rustdoc/array-links.link_box_u32.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_box_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_box_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Farray-links.link_box_u32.html?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -0,0 +1 @@\n+<code>pub fn gamma() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;[<a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"{{channel}}/core/primitive.array.html\">1</a>]&gt;</code>\n\\ No newline at end of file"}, {"sha": "f1ca2f59bd7ca9328f43082cbf5d616159f71f16", "filename": "src/test/rustdoc/array-links.link_slice_generic.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_slice_generic.html", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_slice_generic.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Farray-links.link_slice_generic.html?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -0,0 +1 @@\n+<code>pub fn beta&lt;T&gt;() -&gt; &amp;'static <a class=\"primitive\" href=\"{{channel}}/core/primitive.array.html\">[T; 1]</a></code>\n\\ No newline at end of file"}, {"sha": "c3943e8d3212290b1dd7af7463bee517a2291ecd", "filename": "src/test/rustdoc/array-links.link_slice_u32.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_slice_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.link_slice_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Farray-links.link_slice_u32.html?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -0,0 +1 @@\n+<code>pub fn alpha() -&gt; &amp;'static [<a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"{{channel}}/core/primitive.array.html\">1</a>]</code>\n\\ No newline at end of file"}, {"sha": "07f92ac51b9f53de511b434344791a001f42fd37", "filename": "src/test/rustdoc/array-links.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598a02c6ad78fc00fbfc1370391c645b9446e3f1/src%2Ftest%2Frustdoc%2Farray-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Farray-links.rs?ref=598a02c6ad78fc00fbfc1370391c645b9446e3f1", "patch": "@@ -0,0 +1,28 @@\n+#![crate_name = \"foo\"]\n+#![no_std]\n+\n+pub struct MyBox<T: ?Sized>(*const T);\n+\n+// @has 'foo/fn.alpha.html'\n+// @snapshot link_slice_u32 - '//pre[@class=\"rust fn\"]/code'\n+pub fn alpha() -> &'static [u32; 1] {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.beta.html'\n+// @snapshot link_slice_generic - '//pre[@class=\"rust fn\"]/code'\n+pub fn beta<T>() -> &'static [T; 1] {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.gamma.html'\n+// @snapshot link_box_u32 - '//pre[@class=\"rust fn\"]/code'\n+pub fn gamma() -> MyBox<[u32; 1]> {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.delta.html'\n+// @snapshot link_box_generic - '//pre[@class=\"rust fn\"]/code'\n+pub fn delta<T>() -> MyBox<[T; 1]> {\n+    loop {}\n+}"}]}