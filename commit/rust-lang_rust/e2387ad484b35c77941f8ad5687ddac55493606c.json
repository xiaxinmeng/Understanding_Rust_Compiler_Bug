{"sha": "e2387ad484b35c77941f8ad5687ddac55493606c", "node_id": "C_kwDOAAsO6NoAKGUyMzg3YWQ0ODRiMzVjNzc5NDFmOGFkNTY4N2RkYWM1NTQ5MzYwNmM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-11T15:24:53Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-27T18:59:32Z"}, "message": "Remember where a type was kept in MIR.", "tree": {"sha": "c2a2052a3eaa97e2a10ff0f22a40491d00ff2f72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a2052a3eaa97e2a10ff0f22a40491d00ff2f72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2387ad484b35c77941f8ad5687ddac55493606c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2387ad484b35c77941f8ad5687ddac55493606c", "html_url": "https://github.com/rust-lang/rust/commit/e2387ad484b35c77941f8ad5687ddac55493606c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2387ad484b35c77941f8ad5687ddac55493606c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1974b6b68dc168cac046039ce404c8311c4d8765", "url": "https://api.github.com/repos/rust-lang/rust/commits/1974b6b68dc168cac046039ce404c8311c4d8765", "html_url": "https://github.com/rust-lang/rust/commit/1974b6b68dc168cac046039ce404c8311c4d8765"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "fab92f6f6f3ba2c2d83f4211e45a95ab6280b6f9", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -372,12 +372,12 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                                 return;\n                             };\n \n-                            let Some(&f_ty) = layout.field_tys.get(local) else {\n+                            let Some(f_ty) = layout.field_tys.get(local) else {\n                                 self.fail(location, format!(\"Out of bounds local {:?} for {:?}\", local, parent_ty));\n                                 return;\n                             };\n \n-                            f_ty\n+                            f_ty.ty\n                         } else {\n                             let Some(f_ty) = substs.as_generator().prefix_tys().nth(f.index()) else {\n                                 fail_out_of_bounds(self, location);"}, {"sha": "ebeefa862778a769b3f02713c85f4614584d0b16", "filename": "compiler/rustc_middle/src/mir/query.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -135,11 +135,20 @@ rustc_index::newtype_index! {\n     pub struct GeneratorSavedLocal {}\n }\n \n+#[derive(Clone, Debug, TyEncodable, TyDecodable, HashStable, TypeFoldable, TypeVisitable)]\n+pub struct GeneratorSavedTy<'tcx> {\n+    pub ty: Ty<'tcx>,\n+    /// Source info corresponding to the local in the original MIR body.\n+    pub source_info: SourceInfo,\n+    /// Whether the local was introduced as a raw pointer to a static.\n+    pub is_static_ptr: bool,\n+}\n+\n /// The layout of generator state.\n #[derive(Clone, TyEncodable, TyDecodable, HashStable, TypeFoldable, TypeVisitable)]\n pub struct GeneratorLayout<'tcx> {\n     /// The type of every local stored inside the generator.\n-    pub field_tys: IndexVec<GeneratorSavedLocal, Ty<'tcx>>,\n+    pub field_tys: IndexVec<GeneratorSavedLocal, GeneratorSavedTy<'tcx>>,\n \n     /// Which of the above fields are in each variant. Note that one field may\n     /// be stored in multiple variants."}, {"sha": "f97d2e753a3b6d0ee1a5fb065b46d74cf7c26a0f", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -571,9 +571,9 @@ impl<'tcx> GeneratorSubsts<'tcx> {\n     ) -> impl Iterator<Item = impl Iterator<Item = Ty<'tcx>> + Captures<'tcx>> {\n         let layout = tcx.generator_layout(def_id).unwrap();\n         layout.variant_fields.iter().map(move |variant| {\n-            variant\n-                .iter()\n-                .map(move |field| ty::EarlyBinder(layout.field_tys[*field]).subst(tcx, self.substs))\n+            variant.iter().map(move |field| {\n+                ty::EarlyBinder(layout.field_tys[*field].ty).subst(tcx, self.substs)\n+            })\n         })\n     }\n "}, {"sha": "e94eaeaaa2b3f57014f12fb9619aadf176c342ea", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -916,7 +916,15 @@ fn compute_layout<'tcx>(\n     let mut tys = IndexVec::<GeneratorSavedLocal, _>::new();\n     for (saved_local, local) in saved_locals.iter_enumerated() {\n         locals.push(local);\n-        tys.push(body.local_decls[local].ty);\n+        let decl = &body.local_decls[local];\n+        let decl = GeneratorSavedTy {\n+            ty: decl.ty,\n+            source_info: decl.source_info,\n+            is_static_ptr: decl.internal\n+                && decl.ty.is_unsafe_ptr()\n+                && matches!(decl.local_info.as_deref(), Some(LocalInfo::StaticRef { .. })),\n+        };\n+        tys.push(decl);\n         debug!(\"generator saved local {:?} => {:?}\", saved_local, local);\n     }\n \n@@ -947,7 +955,7 @@ fn compute_layout<'tcx>(\n             // just use the first one here. That's fine; fields do not move\n             // around inside generators, so it doesn't matter which variant\n             // index we access them by.\n-            remap.entry(locals[saved_local]).or_insert((tys[saved_local], variant_index, idx));\n+            remap.entry(locals[saved_local]).or_insert((tys[saved_local].ty, variant_index, idx));\n         }\n         variant_fields.push(fields);\n         variant_source_info.push(source_info_at_suspension_points[suspension_point_idx]);\n@@ -957,6 +965,7 @@ fn compute_layout<'tcx>(\n \n     let layout =\n         GeneratorLayout { field_tys: tys, variant_fields, variant_source_info, storage_conflicts };\n+    debug!(?layout);\n \n     (remap, layout, storage_liveness)\n }"}, {"sha": "84640b703c8021659b3cd61df5253896ce69086f", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -947,12 +947,12 @@ impl<'tcx> Visitor<'tcx> for CostChecker<'_, 'tcx> {\n                             return;\n                         };\n \n-                        let Some(&f_ty) = layout.field_tys.get(local) else {\n+                        let Some(f_ty) = layout.field_tys.get(local) else {\n                             self.validation = Err(\"malformed MIR\");\n                             return;\n                         };\n \n-                        f_ty\n+                        f_ty.ty\n                     } else {\n                         let Some(f_ty) = substs.as_generator().prefix_tys().nth(f.index()) else {\n                             self.validation = Err(\"malformed MIR\");"}, {"sha": "378cd5a99ed864ce3bdd23a2fbb20d2216109ac1", "filename": "compiler/rustc_ty_utils/src/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -643,7 +643,7 @@ fn generator_layout<'tcx>(\n \n     let promoted_layouts = ineligible_locals\n         .iter()\n-        .map(|local| subst_field(info.field_tys[local]))\n+        .map(|local| subst_field(info.field_tys[local].ty))\n         .map(|ty| tcx.mk_maybe_uninit(ty))\n         .map(|ty| cx.layout_of(ty));\n     let prefix_layouts = substs\n@@ -713,7 +713,7 @@ fn generator_layout<'tcx>(\n                     Assigned(_) => bug!(\"assignment does not match variant\"),\n                     Ineligible(_) => false,\n                 })\n-                .map(|local| subst_field(info.field_tys[*local]));\n+                .map(|local| subst_field(info.field_tys[*local].ty));\n \n             let mut variant = univariant_uninterned(\n                 cx,"}, {"sha": "862dfc900628469d1deda073bd145440efe03168", "filename": "tests/mir-opt/generator_drop_cleanup.main-{closure#0}.generator_drop.0.mir", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/tests%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/tests%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -1,7 +1,14 @@\n // MIR for `main::{closure#0}` 0 generator_drop\n /* generator_layout = GeneratorLayout {\n     field_tys: {\n-        _0: std::string::String,\n+        _0: GeneratorSavedTy {\n+            ty: std::string::String,\n+            source_info: SourceInfo {\n+                span: $DIR/generator_drop_cleanup.rs:11:13: 11:15 (#0),\n+                scope: scope[0],\n+            },\n+            is_static_ptr: false,\n+        },\n     },\n     variant_fields: {\n         Unresumed(0): [],"}, {"sha": "0d262f75c1ac99f1b55209a816a72a55649bd277", "filename": "tests/mir-opt/generator_tiny.main-{closure#0}.generator_resume.0.mir", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2387ad484b35c77941f8ad5687ddac55493606c/tests%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e2387ad484b35c77941f8ad5687ddac55493606c/tests%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir?ref=e2387ad484b35c77941f8ad5687ddac55493606c", "patch": "@@ -1,7 +1,14 @@\n // MIR for `main::{closure#0}` 0 generator_resume\n /* generator_layout = GeneratorLayout {\n     field_tys: {\n-        _0: HasDrop,\n+        _0: GeneratorSavedTy {\n+            ty: HasDrop,\n+            source_info: SourceInfo {\n+                span: $DIR/generator_tiny.rs:20:13: 20:15 (#0),\n+                scope: scope[0],\n+            },\n+            is_static_ptr: false,\n+        },\n     },\n     variant_fields: {\n         Unresumed(0): [],"}]}