{"sha": "ea9ccb6046aa1733aa1761fc942f8432fb63f107", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhOWNjYjYwNDZhYTE3MzNhYTE3NjFmYzk0MmY4NDMyZmI2M2YxMDc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-25T17:09:19Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-23T23:37:31Z"}, "message": "Point at end of macro arm when encountering EOF\n\nFix #52866", "tree": {"sha": "db42da1149aebe1315d35101666bd5bee8c29c96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db42da1149aebe1315d35101666bd5bee8c29c96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea9ccb6046aa1733aa1761fc942f8432fb63f107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9ccb6046aa1733aa1761fc942f8432fb63f107", "html_url": "https://github.com/rust-lang/rust/commit/ea9ccb6046aa1733aa1761fc942f8432fb63f107", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea9ccb6046aa1733aa1761fc942f8432fb63f107/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "910ec6d97ff03549c22352d7763be02b60d73470", "url": "https://api.github.com/repos/rust-lang/rust/commits/910ec6d97ff03549c22352d7763be02b60d73470", "html_url": "https://github.com/rust-lang/rust/commit/910ec6d97ff03549c22352d7763be02b60d73470"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "26604c46be5f020e513edd9a88b74aeb8be084c8", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -724,7 +724,14 @@ pub fn parse(\n                     \"ambiguity: multiple successful parses\".to_string(),\n                 );\n             } else {\n-                return Failure(parser.span, token::Eof);\n+                return Failure(\n+                    if parser.span.is_dummy() {\n+                        parser.span\n+                    } else {\n+                        sess.source_map().next_point(parser.span)\n+                    },\n+                    token::Eof,\n+                );\n             }\n         }\n         // Performance hack: eof_items may share matchers via Rc with other things that we want\n@@ -757,7 +764,7 @@ pub fn parse(\n             );\n         }\n         // If there are no possible next positions AND we aren't waiting for the black-box parser,\n-        // then their is a syntax error.\n+        // then there is a syntax error.\n         else if bb_items.is_empty() && next_items.is_empty() {\n             return Failure(parser.span, parser.token);\n         }"}, {"sha": "b67c46fe6f4b76816d1b14e81a1139294b92ddcd", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -53,6 +53,15 @@ impl<'a> ParserAnyMacro<'a> {\n         let fragment = panictry!(parser.parse_ast_fragment(kind, true).map_err(|mut e| {\n             if e.span.is_dummy() {  // Get around lack of span in error (#30128)\n                 e.set_span(site_span);\n+            } else if parser.token == token::Eof {  // (#52866)\n+                e.set_span(parser.sess.source_map().next_point(parser.span));\n+            }\n+            if parser.token == token::Eof {\n+                let msg = &e.message[0];\n+                e.message[0] = (\n+                    msg.0.replace(\", found `<eof>`\", \", found the end of the macro arm\"),\n+                    msg.1,\n+                );\n             }\n             e\n         }));"}, {"sha": "78356f981fcedf99781dbb397c02ba2630eda54e", "filename": "src/test/ui/directory_ownership/macro-expanded-mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.rs?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -12,12 +12,13 @@\n \n macro_rules! mod_decl {\n     ($i:ident) => { mod $i; }\n+    //~^ ERROR Cannot declare a non-inline module inside a block\n }\n \n mod macro_expanded_mod_helper {\n     mod_decl!(foo); // This should search in the folder `macro_expanded_mod_helper`\n }\n \n fn main() {\n-    mod_decl!(foo); //~ ERROR Cannot declare a non-inline module inside a block\n+    mod_decl!(foo);\n }"}, {"sha": "f58e864a75591cf315f4442849839249fe8ab9ac", "filename": "src/test/ui/directory_ownership/macro-expanded-mod.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -1,8 +1,8 @@\n error: Cannot declare a non-inline module inside a block unless it has a path attribute\n-  --> $DIR/macro-expanded-mod.rs:22:15\n+  --> $DIR/macro-expanded-mod.rs:14:28\n    |\n-LL |     mod_decl!(foo); //~ ERROR Cannot declare a non-inline module inside a block\n-   |               ^^^\n+LL |     ($i:ident) => { mod $i; }\n+   |                            ^\n \n error: aborting due to previous error\n "}, {"sha": "bf7fc28c7581b805fab51a8d1b3a1982b8859a0c", "filename": "src/test/ui/editions/edition-keywords-2018-2015-parsing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -22,11 +22,11 @@ error: no rules expected the token `async`\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^ no rules expected the token `async`\n \n-error: expected one of `move`, `|`, or `||`, found `<eof>`\n-  --> <::edition_kw_macro_2015::passes_ident macros>:1:22\n+error: expected one of `move`, `|`, or `||`, found the end of the macro arm\n+  --> <::edition_kw_macro_2015::passes_ident macros>:1:25\n    |\n LL | ( $ i : ident ) => ( $ i )\n-   |                      ^^^ expected one of `move`, `|`, or `||` here\n+   |                         ^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "4ab29ba67a0ac33ca937db3b5d439d69cfaa79f2", "filename": "src/test/ui/editions/edition-keywords-2018-2018-parsing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -22,11 +22,11 @@ error: no rules expected the token `async`\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^ no rules expected the token `async`\n \n-error: expected one of `move`, `|`, or `||`, found `<eof>`\n-  --> <::edition_kw_macro_2018::passes_ident macros>:1:22\n+error: expected one of `move`, `|`, or `||`, found the end of the macro arm\n+  --> <::edition_kw_macro_2018::passes_ident macros>:1:25\n    |\n LL | ( $ i : ident ) => ( $ i )\n-   |                      ^^^ expected one of `move`, `|`, or `||` here\n+   |                         ^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "19a9cf3a6f5035d0ed1e65ba1730aaadbce3328b", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -41,13 +41,13 @@ LL |     barplus!(); //~ERROR unexpected end of macro invocation\n    |     ^^^^^^^^^^^ unexpected end of macro invocation\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:41:14\n+  --> $DIR/macro-at-most-once-rep-2018.rs:41:15\n    |\n LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n ...\n LL |     barplus!(a); //~ERROR unexpected end of macro invocation\n-   |              ^ unexpected end of macro invocation\n+   |               ^ unexpected end of macro invocation\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:42:15\n@@ -77,13 +77,13 @@ LL |     barstar!(); //~ERROR unexpected end of macro invocation\n    |     ^^^^^^^^^^^ unexpected end of macro invocation\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:48:14\n+  --> $DIR/macro-at-most-once-rep-2018.rs:48:15\n    |\n LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n ...\n LL |     barstar!(a); //~ERROR unexpected end of macro invocation\n-   |              ^ unexpected end of macro invocation\n+   |               ^ unexpected end of macro invocation\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:49:15"}, {"sha": "3a4c9c0cdecfd66e380491262585c9612ef9ea65", "filename": "src/test/ui/macros/macro-in-expression-context-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea9ccb6046aa1733aa1761fc942f8432fb63f107/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr?ref=ea9ccb6046aa1733aa1761fc942f8432fb63f107", "patch": "@@ -1,4 +1,4 @@\n-error: expected expression, found `<eof>`\n+error: expected expression, found the end of the macro arm\n   --> $DIR/macro-in-expression-context-2.rs:5:16\n    |\n LL |         _ => { empty!() }"}]}