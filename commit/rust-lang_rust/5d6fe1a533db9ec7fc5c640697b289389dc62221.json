{"sha": "5d6fe1a533db9ec7fc5c640697b289389dc62221", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNmZlMWE1MzNkYjllYzdmYzVjNjQwNjk3YjI4OTM4OWRjNjIyMjE=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-27T20:04:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-27T20:37:53Z"}, "message": "Remove uint::max/min in favor if math::max/min", "tree": {"sha": "bfd7ddf39205770444a80cc7e8625e7e79871449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfd7ddf39205770444a80cc7e8625e7e79871449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d6fe1a533db9ec7fc5c640697b289389dc62221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6fe1a533db9ec7fc5c640697b289389dc62221", "html_url": "https://github.com/rust-lang/rust/commit/5d6fe1a533db9ec7fc5c640697b289389dc62221", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d6fe1a533db9ec7fc5c640697b289389dc62221/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d99ec32ce197fb3c355d7cd88ace82e538790e", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d99ec32ce197fb3c355d7cd88ace82e538790e", "html_url": "https://github.com/rust-lang/rust/commit/50d99ec32ce197fb3c355d7cd88ace82e538790e"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "048459dfcbf4251fa4f119be685d35fdb2aa82f9", "filename": "src/comp/back/rpath.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Fcomp%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Fcomp%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Frpath.rs?ref=5d6fe1a533db9ec7fc5c640697b289389dc62221", "patch": "@@ -3,6 +3,7 @@ import std::fs;\n import std::os_fs;\n import std::vec;\n import std::map;\n+import std::math;\n import std::str;\n import std::uint;\n import metadata::cstore;\n@@ -128,7 +129,7 @@ fn get_relative_to(abs1: fs::path, abs2: fs::path) -> fs::path {\n     assert len1 > 0u;\n     assert len2 > 0u;\n \n-    let max_common_path = uint::min(len1, len2) - 1u;\n+    let max_common_path = math::min(len1, len2) - 1u;\n     let start_idx = 0u;\n     while start_idx < max_common_path\n         && split1[start_idx] == split2[start_idx] {"}, {"sha": "026630c8706d257897d86cc53ea170879ffe11ca", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=5d6fe1a533db9ec7fc5c640697b289389dc62221", "patch": "@@ -6,6 +6,7 @@ import std::box;\n import std::ufind;\n import std::map;\n import std::map::hashmap;\n+import std::math;\n import std::option;\n import std::option::none;\n import std::option::some;\n@@ -1812,7 +1813,7 @@ mod unify {\n     // Unifies two sets.\n     fn union(cx: @ctxt, set_a: uint, set_b: uint,\n              variance: variance) -> union_result {\n-        ufind::grow(cx.vb.sets, uint::max(set_a, set_b) + 1u);\n+        ufind::grow(cx.vb.sets, math::max(set_a, set_b) + 1u);\n         let root_a = ufind::find(cx.vb.sets, set_a);\n         let root_b = ufind::find(cx.vb.sets, set_b);\n "}, {"sha": "ab07d3ede8e0cdd28eea39962b814b55a8b60826", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=5d6fe1a533db9ec7fc5c640697b289389dc62221", "patch": "@@ -1,7 +1,7 @@\n use std;\n use rustc;\n \n-import std::{fs, io, getopts, vec, str, int, uint, option};\n+import std::{fs, io, getopts, math, vec, str, int, uint, option};\n import std::getopts::{optopt, opt_present, opt_str};\n import std::io::stdout;\n \n@@ -242,9 +242,9 @@ fn check_variants_T<T>(\n     let L = vec::len(things);\n \n     if L < 100u {\n-        under(uint::min(L, 20u)) {|i|\n+        under(math::min(L, 20u)) {|i|\n             log_err \"Replacing... #\" + uint::str(i);\n-            under(uint::min(L, 30u)) {|j|\n+            under(math::min(L, 30u)) {|j|\n                 log_err \"With... \" + stringifier(@things[j]);\n                 let crate2 = @replacer(crate, i, things[j], cx.mode);\n                 // It would be best to test the *crate* for stability, but testing the"}, {"sha": "cf50b70e1cd8c8dbe2fac5452ed3bffd456c43b1", "filename": "src/lib/uint.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Flib%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6fe1a533db9ec7fc5c640697b289389dc62221/src%2Flib%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fuint.rs?ref=5d6fe1a533db9ec7fc5c640697b289389dc62221", "patch": "@@ -55,10 +55,6 @@ pure fn ge(x: uint, y: uint) -> bool { ret x >= y; }\n /* Predicate: gt */\n pure fn gt(x: uint, y: uint) -> bool { ret x > y; }\n \n-fn max(x: uint, y: uint) -> uint { if x > y { ret x; } ret y; }\n-\n-fn min(x: uint, y: uint) -> uint { if x > y { ret y; } ret x; }\n-\n /*\n Function: range\n "}]}