{"sha": "ade91158646902801229d6fac350698c9d8fe95b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZTkxMTU4NjQ2OTAyODAxMjI5ZDZmYWMzNTA2OThjOWQ4ZmU5NWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-14T16:29:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-14T16:29:25Z"}, "message": "Merge #9599\n\n9599: Complete true and false keywords r=Veykril a=fabledpig\n\nCloses #9521.\n\nCo-authored-by: Levente Gyozo Lenart <leviiibog@gmail.com>", "tree": {"sha": "ca28aafb99bac7138a7bf752209eeba177407b78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca28aafb99bac7138a7bf752209eeba177407b78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade91158646902801229d6fac350698c9d8fe95b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg7xDlCRBK7hj4Ov3rIwAAk7AIAE0Aiw/vOWfjJeYhx22CUOxS\nPXOSgGDkl675gWkMuQFdJBctQZyUY2dpdpcX7HPwNgrhg1MpPQa7tqrO+e5RrpDX\nyEzwFbDEoaYPG7EMjUDPuc9R0ost/bAPtRiSYWM0V+RdvPBUDANFw2ocYvk4HEfk\nyT1S48vVfBMPyLfvbGtiNWN7OTnsPz8D5MNrdMqzKVnpqYloOzgyVyYoVh6Oe1TK\nOEsEMkq5bUb7CNn26LkOrenhECYDOMs7bYXGLypZla2Hmxj8KEFfgMS4jQOD67+v\nNT2pU1gxTwFekRKprp4Jfotl5mN6cgGxh4s9i8/gjrbOtDJSdyXQGMXGwOt2ZBI=\n=NDAy\n-----END PGP SIGNATURE-----\n", "payload": "tree ca28aafb99bac7138a7bf752209eeba177407b78\nparent 111d0798d622ceef65cc112e93eda87f3b9c760c\nparent a3f01974549db9b4ab2f2c4f2caa3ff546a30146\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626280165 +0000\ncommitter GitHub <noreply@github.com> 1626280165 +0000\n\nMerge #9599\n\n9599: Complete true and false keywords r=Veykril a=fabledpig\n\nCloses #9521.\n\nCo-authored-by: Levente Gyozo Lenart <leviiibog@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade91158646902801229d6fac350698c9d8fe95b", "html_url": "https://github.com/rust-lang/rust/commit/ade91158646902801229d6fac350698c9d8fe95b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade91158646902801229d6fac350698c9d8fe95b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "111d0798d622ceef65cc112e93eda87f3b9c760c", "url": "https://api.github.com/repos/rust-lang/rust/commits/111d0798d622ceef65cc112e93eda87f3b9c760c", "html_url": "https://github.com/rust-lang/rust/commit/111d0798d622ceef65cc112e93eda87f3b9c760c"}, {"sha": "a3f01974549db9b4ab2f2c4f2caa3ff546a30146", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f01974549db9b4ab2f2c4f2caa3ff546a30146", "html_url": "https://github.com/rust-lang/rust/commit/a3f01974549db9b4ab2f2c4f2caa3ff546a30146"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "f4df2d3809db0c4a8c9d0027b12190dfd160d77b", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ade91158646902801229d6fac350698c9d8fe95b/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade91158646902801229d6fac350698c9d8fe95b/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=ade91158646902801229d6fac350698c9d8fe95b", "patch": "@@ -105,6 +105,8 @@ pub(crate) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         add_keyword(\"if\", \"if $1 {\\n    $0\\n}\");\n         add_keyword(\"if let\", \"if let $1 = $2 {\\n    $0\\n}\");\n         add_keyword(\"for\", \"for $1 in $2 {\\n    $0\\n}\");\n+        add_keyword(\"true\", \"true\");\n+        add_keyword(\"false\", \"false\");\n     }\n \n     if ctx.previous_token_is(T![if]) || ctx.previous_token_is(T![while]) || has_block_expr_parent {\n@@ -209,6 +211,8 @@ mod tests {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw let\n                 kw return\n                 kw self\n@@ -240,6 +244,8 @@ mod tests {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw let\n                 kw return\n                 kw self\n@@ -271,6 +277,8 @@ mod tests {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw let\n                 kw else\n                 kw else if\n@@ -306,6 +314,8 @@ fn quux() -> i32 {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw return\n                 kw self\n                 kw super\n@@ -336,6 +346,8 @@ fn quux() -> i32 {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw let\n                 kw continue\n                 kw break\n@@ -430,6 +442,8 @@ fn foo() {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw return\n                 kw self\n                 kw super\n@@ -478,6 +492,8 @@ fn foo() {\n                 kw if\n                 kw if let\n                 kw for\n+                kw true\n+                kw false\n                 kw return\n                 kw self\n                 kw super"}]}