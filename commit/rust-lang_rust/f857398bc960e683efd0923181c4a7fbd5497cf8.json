{"sha": "f857398bc960e683efd0923181c4a7fbd5497cf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NTczOThiYzk2MGU2ODNlZmQwOTIzMTgxYzRhN2ZiZDU0OTdjZjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T23:27:26Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:32Z"}, "message": "librustc: De-`@mut` the bindings list in pattern resolution", "tree": {"sha": "a3748639599e8e499e508ae63924f351dacb6c80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3748639599e8e499e508ae63924f351dacb6c80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f857398bc960e683efd0923181c4a7fbd5497cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f857398bc960e683efd0923181c4a7fbd5497cf8", "html_url": "https://github.com/rust-lang/rust/commit/f857398bc960e683efd0923181c4a7fbd5497cf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f857398bc960e683efd0923181c4a7fbd5497cf8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "473d0480954ac12bd6c73aa8dab20674ff74a21a", "url": "https://api.github.com/repos/rust-lang/rust/commits/473d0480954ac12bd6c73aa8dab20674ff74a21a", "html_url": "https://github.com/rust-lang/rust/commit/473d0480954ac12bd6c73aa8dab20674ff74a21a"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "3ef384c7a4ca99e70eed5045a3ed12feec185cf8", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f857398bc960e683efd0923181c4a7fbd5497cf8/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f857398bc960e683efd0923181c4a7fbd5497cf8/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=f857398bc960e683efd0923181c4a7fbd5497cf8", "patch": "@@ -4147,9 +4147,11 @@ impl Resolver {\n     fn resolve_arm(&mut self, arm: &Arm) {\n         self.value_ribs.push(@Rib::new(NormalRibKind));\n \n-        let bindings_list = @mut HashMap::new();\n+        let mut bindings_list = HashMap::new();\n         for pattern in arm.pats.iter() {\n-            self.resolve_pattern(*pattern, RefutableMode, Some(bindings_list));\n+            self.resolve_pattern(*pattern,\n+                                 RefutableMode,\n+                                 Some(&mut bindings_list));\n         }\n \n         // This has to happen *after* we determine which\n@@ -4298,7 +4300,7 @@ impl Resolver {\n                        mode: PatternBindingMode,\n                        // Maps idents to the node ID for the (outermost)\n                        // pattern that binds them\n-                       bindings_list: Option<@mut HashMap<Name,NodeId>>) {\n+                       mut bindings_list: Option<&mut HashMap<Name,NodeId>>) {\n         let pat_id = pattern.id;\n         walk_pat(pattern, |pattern| {\n             match pattern.node {\n@@ -4388,7 +4390,7 @@ impl Resolver {\n                             // passes make about or-patterns.)\n \n                             match bindings_list {\n-                                Some(bindings_list)\n+                                Some(ref mut bindings_list)\n                                 if !bindings_list.contains_key(&renamed) => {\n                                     let this = &mut *self;\n                                     let last_rib = this.value_ribs[\n@@ -4401,7 +4403,7 @@ impl Resolver {\n                                     }\n                                     bindings_list.insert(renamed, pat_id);\n                                 }\n-                                Some(b) => {\n+                                Some(ref mut b) => {\n                                   if b.find(&renamed) == Some(&pat_id) {\n                                       // Then this is a duplicate variable\n                                       // in the same disjunct, which is an"}]}