{"sha": "c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZjY2ZDgxMzVmOTRmMjAxNGY3YjhkNGM1MjU4ZDY2ZmZmOGNkM2M=", "commit": {"author": {"name": "Joseph Crail", "email": "jbcrail@gmail.com", "date": "2014-08-26T23:40:43Z"}, "committer": {"name": "Joseph Crail", "email": "jbcrail@gmail.com", "date": "2014-08-31T15:53:16Z"}, "message": "Fix whitespace and missing parentheses.", "tree": {"sha": "aea69977b54c99f47fdb1c0bb00e55cc83eb7352", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aea69977b54c99f47fdb1c0bb00e55cc83eb7352"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c", "html_url": "https://github.com/rust-lang/rust/commit/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c/comments", "author": {"login": "jbcrail", "id": 6038, "node_id": "MDQ6VXNlcjYwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/6038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbcrail", "html_url": "https://github.com/jbcrail", "followers_url": "https://api.github.com/users/jbcrail/followers", "following_url": "https://api.github.com/users/jbcrail/following{/other_user}", "gists_url": "https://api.github.com/users/jbcrail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbcrail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbcrail/subscriptions", "organizations_url": "https://api.github.com/users/jbcrail/orgs", "repos_url": "https://api.github.com/users/jbcrail/repos", "events_url": "https://api.github.com/users/jbcrail/events{/privacy}", "received_events_url": "https://api.github.com/users/jbcrail/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbcrail", "id": 6038, "node_id": "MDQ6VXNlcjYwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/6038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbcrail", "html_url": "https://github.com/jbcrail", "followers_url": "https://api.github.com/users/jbcrail/followers", "following_url": "https://api.github.com/users/jbcrail/following{/other_user}", "gists_url": "https://api.github.com/users/jbcrail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbcrail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbcrail/subscriptions", "organizations_url": "https://api.github.com/users/jbcrail/orgs", "repos_url": "https://api.github.com/users/jbcrail/repos", "events_url": "https://api.github.com/users/jbcrail/events{/privacy}", "received_events_url": "https://api.github.com/users/jbcrail/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27e8d5bca79c09258c757e9be6e13aaa24086d84", "url": "https://api.github.com/repos/rust-lang/rust/commits/27e8d5bca79c09258c757e9be6e13aaa24086d84", "html_url": "https://github.com/rust-lang/rust/commit/27e8d5bca79c09258c757e9be6e13aaa24086d84"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "59f559cf19369c99e013aa9f0a8b85d7eae92313", "filename": "src/libnum/rational.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c/src%2Flibnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c/src%2Flibnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Frational.rs?ref=c5f66d8135f94f2014f7b8d4c5258d66fff8cd3c", "patch": "@@ -154,7 +154,7 @@ impl<T: Clone + Integer + PartialOrd>\n         Ratio::from_integer(self.numer / self.denom)\n     }\n \n-    ///Returns the fractional part of a number.\n+    /// Returns the fractional part of a number.\n     #[inline]\n     pub fn fract(&self) -> Ratio<T> {\n         Ratio::new_raw(self.numer % self.denom, self.denom.clone())\n@@ -243,7 +243,7 @@ macro_rules! arith_impl {\n     }\n }\n \n-// a/b + c/d = (a*d + b*c)/(b*d\n+// a/b + c/d = (a*d + b*c)/(b*d)\n arith_impl!(impl Add, add)\n \n // a/b - c/d = (a*d - b*c)/(b*d)"}]}