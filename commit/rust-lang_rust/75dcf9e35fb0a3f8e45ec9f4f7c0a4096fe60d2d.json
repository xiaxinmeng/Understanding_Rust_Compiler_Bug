{"sha": "75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZGNmOWUzNWZiMGEzZjhlNDVlYzlmNGY3YzBhNDA5NmZlNjBkMmQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-01-11T12:43:18Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-01-17T15:49:32Z"}, "message": "Add an end-to-end run-make test for cross-lang LTO.", "tree": {"sha": "d3c29e10644fbb6e14cd1a0723258965d081c145", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3c29e10644fbb6e14cd1a0723258965d081c145"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "html_url": "https://github.com/rust-lang/rust/commit/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daa53a52a2667533d5fe59bfcc5b8614b79c3d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/daa53a52a2667533d5fe59bfcc5b8614b79c3d31", "html_url": "https://github.com/rust-lang/rust/commit/daa53a52a2667533d5fe59bfcc5b8614b79c3d31"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "1e5df8f8812899377ecf412fb8b3077eb8722875", "filename": "src/test/run-make-fulldeps/cross-lang-lto-clang/Makefile", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2FMakefile?ref=75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "patch": "@@ -0,0 +1,25 @@\n+# needs-matching-clang\n+\n+# This test makes sure that cross-language inlining actually works by checking\n+# the generated machine code.\n+\n+-include ../tools.mk\n+\n+all: cpp-executable rust-executable\n+\n+cpp-executable:\n+\t$(RUSTC) -Zcross-lang-lto=on -o $(TMPDIR)/librustlib-xlto.a -Copt-level=2 -Ccodegen-units=1 ./rustlib.rs\n+\tclang -flto=thin -fuse-ld=lld -L $(TMPDIR) -lrustlib-xlto -o $(TMPDIR)/cmain ./cmain.c -O3\n+\t# Make sure we don't find a call instruction to the function we expect to\n+\t# always be inlined.\n+\tllvm-objdump -d $(TMPDIR)/cmain | $(CGREP) -v -e \"call.*rust_always_inlined\"\n+\t# As a sanity check, make sure we do find a call instruction to a\n+\t# non-inlined function\n+\tllvm-objdump -d $(TMPDIR)/cmain | $(CGREP) -e \"call.*rust_never_inlined\"\n+\n+rust-executable:\n+\tclang ./clib.c -flto=thin -c -o $(TMPDIR)/clib.o -O2\n+\t(cd $(TMPDIR); $(AR) crus ./libxyz.a ./clib.o)\n+\t$(RUSTC) -Zcross-lang-lto=on -L$(TMPDIR) -Copt-level=2 -Clinker=clang -Clink-arg=-fuse-ld=lld ./main.rs -o $(TMPDIR)/rsmain\n+\tllvm-objdump -d $(TMPDIR)/rsmain | $(CGREP) -e \"call.*c_never_inlined\"\n+\tllvm-objdump -d $(TMPDIR)/rsmain | $(CGREP) -v -e \"call.*c_always_inlined\""}, {"sha": "90f33f24dc42425b38b394c08354c4ef3ecd9d9a", "filename": "src/test/run-make-fulldeps/cross-lang-lto-clang/clib.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fclib.c", "raw_url": "https://github.com/rust-lang/rust/raw/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fclib.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fclib.c?ref=75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "patch": "@@ -0,0 +1,9 @@\n+#include <stdint.h>\n+\n+uint32_t c_always_inlined() {\n+    return 1234;\n+}\n+\n+__attribute__((noinline)) uint32_t c_never_inlined() {\n+    return 12345;\n+}"}, {"sha": "e62a40117ce83a036da2becf0e4e3b55dc6ab2d9", "filename": "src/test/run-make-fulldeps/cross-lang-lto-clang/cmain.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fcmain.c", "raw_url": "https://github.com/rust-lang/rust/raw/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fcmain.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fcmain.c?ref=75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "patch": "@@ -0,0 +1,12 @@\n+#include <stdint.h>\n+\n+// A trivial function defined in Rust, returning a constant value. This should\n+// always be inlined.\n+uint32_t rust_always_inlined();\n+\n+\n+uint32_t rust_never_inlined();\n+\n+int main(int argc, char** argv) {\n+    return rust_never_inlined() + rust_always_inlined();\n+}"}, {"sha": "8129dcb85d96a0442f390f86a63154f3ff580377", "filename": "src/test/run-make-fulldeps/cross-lang-lto-clang/main.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Fmain.rs?ref=75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "patch": "@@ -0,0 +1,11 @@\n+#[link(name = \"xyz\")]\n+extern \"C\" {\n+    fn c_always_inlined() -> u32;\n+    fn c_never_inlined() -> u32;\n+}\n+\n+fn main() {\n+    unsafe {\n+        println!(\"blub: {}\", c_always_inlined() + c_never_inlined());\n+    }\n+}"}, {"sha": "8a74d74a420bd556056268d427ca26493d02f447", "filename": "src/test/run-make-fulldeps/cross-lang-lto-clang/rustlib.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Frustlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Frustlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-clang%2Frustlib.rs?ref=75dcf9e35fb0a3f8e45ec9f4f7c0a4096fe60d2d", "patch": "@@ -0,0 +1,12 @@\n+#![crate_type=\"staticlib\"]\n+\n+#[no_mangle]\n+pub extern \"C\" fn rust_always_inlined() -> u32 {\n+    42\n+}\n+\n+#[no_mangle]\n+#[inline(never)]\n+pub extern \"C\" fn rust_never_inlined() -> u32 {\n+    421\n+}"}]}