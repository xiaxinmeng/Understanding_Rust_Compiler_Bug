{"sha": "3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjN2M3ZTVhMDQzMDZmOGI2OGRmZmVmMmI1Y2E4NDYyOGVkODFjZTI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-17T13:54:48Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-17T13:55:04Z"}, "message": "Make GenericArgs::from_ast pub(crate)", "tree": {"sha": "71f3719509f3fb46f5d2ce5a93da42ea67b23b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71f3719509f3fb46f5d2ce5a93da42ea67b23b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2", "html_url": "https://github.com/rust-lang/rust/commit/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "795d718ba17545aedb0475051332aed6db2104ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/795d718ba17545aedb0475051332aed6db2104ed", "html_url": "https://github.com/rust-lang/rust/commit/795d718ba17545aedb0475051332aed6db2104ed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6ca373e34ff3149f7c9378e0c264c4656570f664", "filename": "crates/ra_hir/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2/crates%2Fra_hir%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2/crates%2Fra_hir%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fpath.rs?ref=3c7c7e5a04306f8b68dffef2b5ca84628ed81ce2", "patch": "@@ -129,7 +129,7 @@ impl Path {\n }\n \n impl GenericArgs {\n-    pub fn from_ast(node: &ast::TypeArgList) -> Option<GenericArgs> {\n+    pub(crate) fn from_ast(node: &ast::TypeArgList) -> Option<GenericArgs> {\n         let mut args = Vec::new();\n         for type_arg in node.type_args() {\n             let type_ref = TypeRef::from_ast_opt(type_arg.type_ref());"}]}