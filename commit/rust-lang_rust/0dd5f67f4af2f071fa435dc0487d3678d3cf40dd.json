{"sha": "0dd5f67f4af2f071fa435dc0487d3678d3cf40dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZDVmNjdmNGFmMmYwNzFmYTQzNWRjMDQ4N2QzNjc4ZDNjZjQwZGQ=", "commit": {"author": {"name": "Lukas Pustina", "email": "lukas.pustina@centerdevice.com", "date": "2016-03-21T13:17:17Z"}, "committer": {"name": "Lukas Pustina", "email": "lukas.pustina@centerdevice.com", "date": "2016-03-21T13:17:17Z"}, "message": "Adjusts all rust doc test to use `expect` and `should_panic`\n\n- All Rust Doc tests execute the same command `/bin/cat file.txt` which\n  `should_panic` on all platforms consistently, because either\n  `/bin/cat` or `file.txt` do not exist.", "tree": {"sha": "e03b270b919b6adad3133b59daf7db85214fabcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e03b270b919b6adad3133b59daf7db85214fabcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd", "html_url": "https://github.com/rust-lang/rust/commit/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd/comments", "author": {"login": "lukaspustina", "id": 398967, "node_id": "MDQ6VXNlcjM5ODk2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/398967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaspustina", "html_url": "https://github.com/lukaspustina", "followers_url": "https://api.github.com/users/lukaspustina/followers", "following_url": "https://api.github.com/users/lukaspustina/following{/other_user}", "gists_url": "https://api.github.com/users/lukaspustina/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaspustina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaspustina/subscriptions", "organizations_url": "https://api.github.com/users/lukaspustina/orgs", "repos_url": "https://api.github.com/users/lukaspustina/repos", "events_url": "https://api.github.com/users/lukaspustina/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaspustina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lukaspustina", "id": 398967, "node_id": "MDQ6VXNlcjM5ODk2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/398967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaspustina", "html_url": "https://github.com/lukaspustina", "followers_url": "https://api.github.com/users/lukaspustina/followers", "following_url": "https://api.github.com/users/lukaspustina/following{/other_user}", "gists_url": "https://api.github.com/users/lukaspustina/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaspustina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaspustina/subscriptions", "organizations_url": "https://api.github.com/users/lukaspustina/orgs", "repos_url": "https://api.github.com/users/lukaspustina/repos", "events_url": "https://api.github.com/users/lukaspustina/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaspustina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45517947ba9a69260e5b3f4fe54a9aa21ed703eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/45517947ba9a69260e5b3f4fe54a9aa21ed703eb", "html_url": "https://github.com/rust-lang/rust/commit/45517947ba9a69260e5b3f4fe54a9aa21ed703eb"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "d58e8ebab584adf82f27a4799d6fa6bb817ad79f", "filename": "src/libstd/process.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dd5f67f4af2f071fa435dc0487d3678d3cf40dd/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=0dd5f67f4af2f071fa435dc0487d3678d3cf40dd", "patch": "@@ -38,10 +38,10 @@ use sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n /// let mut child = Command::new(\"/bin/cat\")\n ///                         .arg(\"file.txt\")\n ///                         .spawn()\n-///                         .unwrap_or_else(|e| { panic!(\"failed to execute child: {}\", e) });\n+///                         .expect(\"failed to execute child\");\n ///\n /// let ecode = child.wait()\n-///                  .unwrap_or_else(|e| { panic!(\"failed to wait on child: {}\", e) });\n+///                  .expect(\"failed to wait on child\");\n ///\n /// assert!(ecode.success());\n /// ```\n@@ -195,7 +195,8 @@ impl FromInner<AnonPipe> for ChildStderr {\n ///                      .arg(\"-c\")\n ///                      .arg(\"echo hello\")\n ///                      .output()\n-///                      .unwrap_or_else(|e| { panic!(\"failed to execute process: {}\", e) });\n+///                      .expect(\"failed to execute proces\");\n+///\n /// let hello = output.stdout;\n /// ```\n #[stable(feature = \"process\", since = \"1.0.0\")]\n@@ -305,11 +306,10 @@ impl Command {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```should_panic\n     /// use std::process::Command;\n-    /// let output = Command::new(\"cat\").arg(\"foo.txt\").output().unwrap_or_else(|e| {\n-    ///     panic!(\"failed to execute process: {}\", e)\n-    /// });\n+    /// let output = Command::new(\"/bin/cat\").arg(\"file.txt\").output()\n+    ///     .expect(\"failed to execute process\");\n     ///\n     /// println!(\"status: {}\", output.status);\n     /// println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n@@ -328,12 +328,11 @@ impl Command {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```should_panic\n     /// use std::process::Command;\n     ///\n-    /// let status = Command::new(\"ls\").status().unwrap_or_else(|e| {\n-    ///     panic!(\"failed to execute process: {}\", e)\n-    /// });\n+    /// let status = Command::new(\"/bin/cat\").arg(\"file.txt\").status()\n+    ///     .expect(\"failed to execute process\");\n     ///\n     /// println!(\"process exited with: {}\", status);\n     /// ```\n@@ -511,13 +510,13 @@ impl Child {\n     /// use std::process::{Command, Stdio};\n     ///\n     /// let mut child = Command::new(\"/bin/cat\")\n-    ///                         .stdout(Stdio::piped())\n     ///                         .arg(\"file.txt\")\n+    ///                         .stdout(Stdio::piped())\n     ///                         .spawn()\n-    ///                         .unwrap_or_else(|e| { panic!(\"failed to execute child: {}\", e) });\n+    ///                         .expect(\"failed to execute child\");\n     ///\n     /// let ecode = child.wait_with_output()\n-    ///                  .unwrap_or_else(|e| { panic!(\"failed to wait on child: {}\", e) });\n+    ///                  .expect(\"failed to wait on child\");\n     ///\n     /// assert!(ecode.success());\n     /// ```"}]}