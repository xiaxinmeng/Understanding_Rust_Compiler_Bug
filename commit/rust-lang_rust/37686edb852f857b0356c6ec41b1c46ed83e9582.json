{"sha": "37686edb852f857b0356c6ec41b1c46ed83e9582", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3Njg2ZWRiODUyZjg1N2IwMzU2YzZlYzQxYjFjNDZlZDgzZTk1ODI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-06-13T21:21:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:41:21Z"}, "message": "Add comments and assertions to tests", "tree": {"sha": "7e552f641156ab78cf429f12db937e2096d418db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e552f641156ab78cf429f12db937e2096d418db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37686edb852f857b0356c6ec41b1c46ed83e9582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37686edb852f857b0356c6ec41b1c46ed83e9582", "html_url": "https://github.com/rust-lang/rust/commit/37686edb852f857b0356c6ec41b1c46ed83e9582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37686edb852f857b0356c6ec41b1c46ed83e9582/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a549bbdc3230b44d18d8828610053c521fe95d9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a549bbdc3230b44d18d8828610053c521fe95d9e", "html_url": "https://github.com/rust-lang/rust/commit/a549bbdc3230b44d18d8828610053c521fe95d9e"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "3e10f3fb7dff3f2e93a145fe7ad1a7873b750d4a", "filename": "src/test/ui/associated-types/issue-54182-1.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/37686edb852f857b0356c6ec41b1c46ed83e9582/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37686edb852f857b0356c6ec41b1c46ed83e9582/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs?ref=37686edb852f857b0356c6ec41b1c46ed83e9582", "patch": "@@ -1,5 +1,14 @@\n // run-pass\n \n+// Tests that the return type of trait methods is correctly normalized when\n+// checking that a method in an impl matches the trait definition when the\n+// return type involves a defaulted associated type.\n+// ie. the trait has a method with return type `-> Self::R`, and `type R = ()`,\n+// but the impl leaves out the return type (resulting in `()`).\n+// Note that specialization is not involved in this test; no items in\n+// implementations may be overridden. If they were, the normalization wouldn't\n+// happen.\n+\n #![feature(associated_type_defaults)]\n \n macro_rules! overload {\n@@ -12,20 +21,20 @@ macro_rules! overload {\n }\n \n fn main() {\n-    let r = overload!(42, true);\n-    println!(\"-> {:?}\", r);\n+    let r: () = overload!(42, true);\n \n-    let r = overload!(\"Hello world\", 13.0);\n-    println!(\"-> {:?}\", r);\n+    let r: f32 = overload!(\"Hello world\", 13.0);\n+    assert_eq!(r, 13.0);\n \n-    let r = overload!(42, true, 42.5);\n-    println!(\"-> {:?}\", r);\n+    let r: () = overload!(42, true, 42.5);\n \n-    let r = overload!(\"Hello world\", 13.0, 42);\n-    println!(\"-> {:?}\", r);\n+    let r: i32 = overload!(\"Hello world\", 13.0, 42);\n+    assert_eq!(r, 42);\n }\n \n mod overload {\n+    /// This trait has an assoc. type defaulting to `()`, and a required method returning a value\n+    /// of that assoc. type.\n     pub trait Overload {\n         // type R;\n         type R = ();\n@@ -35,6 +44,10 @@ mod overload {\n     // overloads for 2 args\n     impl Overload for (i32, bool) {\n         // type R = ();\n+\n+        /// This function has no return type specified, and so defaults to `()`.\n+        ///\n+        /// This should work, but didn't, until RFC 2532 was implemented.\n         fn overload(self) /*-> Self::R*/ {\n             let (a, b) = self; // destructure args\n             println!(\"i32 and bool {:?}\", (a, b));"}, {"sha": "f55f4809780305033d3da84374eb5ebc30ac535e", "filename": "src/test/ui/associated-types/issue-54182-2.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37686edb852f857b0356c6ec41b1c46ed83e9582/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37686edb852f857b0356c6ec41b1c46ed83e9582/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs?ref=37686edb852f857b0356c6ec41b1c46ed83e9582", "patch": "@@ -1,5 +1,9 @@\n // compile-pass\n \n+// Before RFC 2532, normalizing a defaulted assoc. type didn't work at all,\n+// unless the impl in question overrides that type, which makes the default\n+// pointless.\n+\n #![feature(associated_type_defaults)]\n \n trait Tr {"}]}