{"sha": "01a957e92ac1c0ddd06a26d8af1d273f9b27d742", "node_id": "C_kwDOAAsO6NoAKDAxYTk1N2U5MmFjMWMwZGRkMDZhMjZkOGFmMWQyNzNmOWIyN2Q3NDI", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-06-22T16:53:18Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-07-06T23:17:29Z"}, "message": "record LocalDefId of closure\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "8b7ecb0144149c257db4f389eaf5f6568a55fe55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b7ecb0144149c257db4f389eaf5f6568a55fe55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01a957e92ac1c0ddd06a26d8af1d273f9b27d742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01a957e92ac1c0ddd06a26d8af1d273f9b27d742", "html_url": "https://github.com/rust-lang/rust/commit/01a957e92ac1c0ddd06a26d8af1d273f9b27d742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01a957e92ac1c0ddd06a26d8af1d273f9b27d742/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b53dd71faa882b07c7250b2b57bba984746b0cc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b53dd71faa882b07c7250b2b57bba984746b0cc8", "html_url": "https://github.com/rust-lang/rust/commit/b53dd71faa882b07c7250b2b57bba984746b0cc8"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ff71d16f83b36077a4972f9234754f709e56ea33", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01a957e92ac1c0ddd06a26d8af1d273f9b27d742/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01a957e92ac1c0ddd06a26d8af1d273f9b27d742/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=01a957e92ac1c0ddd06a26d8af1d273f9b27d742", "patch": "@@ -1276,10 +1276,6 @@ pub(super) fn hir_module_items(tcx: TyCtxt<'_>, module_id: LocalDefId) -> Module\n \n             self.items.push(item.item_id());\n \n-            if self.tcx.hir().is_body_owner(item.def_id) {\n-                self.body_owners.push(item.def_id);\n-            }\n-\n             if let ItemKind::Mod(..) = item.kind {\n                 // If this declares another module, do not recurse inside it.\n                 self.submodules.push(item.def_id);\n@@ -1319,14 +1315,14 @@ pub(super) fn hir_module_items(tcx: TyCtxt<'_>, module_id: LocalDefId) -> Module\n             if matches!(ex.kind, ExprKind::Closure { .. })\n                 && associated_body(Node::Expr(ex)).is_some()\n             {\n-                self.body_owners.push(ex.hir_id.owner);\n+                self.body_owners.push(self.tcx.hir().local_def_id(ex.hir_id));\n             }\n             intravisit::walk_expr(self, ex)\n         }\n \n         fn visit_anon_const(&mut self, c: &'hir AnonConst) {\n             if associated_body(Node::AnonConst(c)).is_some() {\n-                self.body_owners.push(c.hir_id.owner);\n+                self.body_owners.push(self.tcx.hir().local_def_id(c.hir_id));\n             }\n             intravisit::walk_anon_const(self, c)\n         }\n@@ -1427,14 +1423,14 @@ pub(crate) fn hir_crate_items(tcx: TyCtxt<'_>, _: ()) -> ModuleItems {\n             if matches!(ex.kind, ExprKind::Closure { .. })\n                 && associated_body(Node::Expr(ex)).is_some()\n             {\n-                self.body_owners.push(ex.hir_id.owner);\n+                self.body_owners.push(self.tcx.hir().local_def_id(ex.hir_id));\n             }\n             intravisit::walk_expr(self, ex)\n         }\n \n         fn visit_anon_const(&mut self, c: &'hir AnonConst) {\n             if associated_body(Node::AnonConst(c)).is_some() {\n-                self.body_owners.push(c.hir_id.owner);\n+                self.body_owners.push(self.tcx.hir().local_def_id(c.hir_id));\n             }\n             intravisit::walk_anon_const(self, c)\n         }"}]}