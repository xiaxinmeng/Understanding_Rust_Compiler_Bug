{"sha": "10f5a19a4deac4a7300ed6bfad11731d451713b0", "node_id": "C_kwDOAAsO6NoAKDEwZjVhMTlhNGRlYWM0YTczMDBlZDZiZmFkMTE3MzFkNDUxNzEzYjA", "commit": {"author": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-07-06T19:01:25Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-07-06T19:05:39Z"}, "message": "changes from feedback", "tree": {"sha": "e8b3a4133af4a0b5d73d6edf9ff40208f50cbbb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8b3a4133af4a0b5d73d6edf9ff40208f50cbbb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10f5a19a4deac4a7300ed6bfad11731d451713b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10f5a19a4deac4a7300ed6bfad11731d451713b0", "html_url": "https://github.com/rust-lang/rust/commit/10f5a19a4deac4a7300ed6bfad11731d451713b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10f5a19a4deac4a7300ed6bfad11731d451713b0/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ef00e36f58c1debaec8d5612297b8819f7a690", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ef00e36f58c1debaec8d5612297b8819f7a690", "html_url": "https://github.com/rust-lang/rust/commit/48ef00e36f58c1debaec8d5612297b8819f7a690"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "02d0f24cd652641e403708ac3d887d96402eba97", "filename": "library/std/src/os/unix/net/datagram.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs?ref=10f5a19a4deac4a7300ed6bfad11731d451713b0", "patch": "@@ -839,20 +839,19 @@ impl UnixDatagram {\n     }\n \n     /// Set the id of the socket for network filtering purpose\n-    /// and is only a setter.\n     ///\n     /// ```no_run\n     /// #![feature(unix_set_mark)]\n     /// use std::os::unix::net::UnixDatagram;\n     ///\n     /// fn main() -> std::io::Result<()> {\n     ///     let sock = UnixDatagram::unbound()?;\n-    ///     sock.set_mark(32 as u32).expect(\"set_mark function failed\");\n+    ///     sock.set_mark(32)?;\n     ///     Ok(())\n     /// }\n     /// ```\n     #[cfg(any(doc, target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\",))]\n-    #[unstable(feature = \"unix_set_mark\", issue = \"none\")]\n+    #[unstable(feature = \"unix_set_mark\", issue = \"96467\")]\n     pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n         self.0.set_mark(mark)\n     }"}, {"sha": "ece0f91dad02968ee22a881561f0fbc2746338d1", "filename": "library/std/src/os/unix/net/stream.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs?ref=10f5a19a4deac4a7300ed6bfad11731d451713b0", "patch": "@@ -425,20 +425,19 @@ impl UnixStream {\n     }\n \n     /// Set the id of the socket for network filtering purpose\n-    /// and is only a setter.\n     ///\n     /// ```no_run\n     /// #![feature(unix_set_mark)]\n     /// use std::os::unix::net::UnixStream;\n     ///\n     /// fn main() -> std::io::Result<()> {\n     ///     let sock = UnixStream::connect(\"/tmp/sock\")?;\n-    ///     sock.set_mark(32 as u32).expect(\"set_mark function failed\");\n+    ///     sock.set_mark(32)?;\n     ///     Ok(())\n     /// }\n     /// ```\n     #[cfg(any(doc, target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\",))]\n-    #[unstable(feature = \"unix_set_mark\", issue = \"none\")]\n+    #[unstable(feature = \"unix_set_mark\", issue = \"96467\")]\n     pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n         self.0.set_mark(mark)\n     }"}, {"sha": "c942689eddf48cff2493778e5b500fec28f753f3", "filename": "library/std/src/sys/unix/net.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10f5a19a4deac4a7300ed6bfad11731d451713b0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs?ref=10f5a19a4deac4a7300ed6bfad11731d451713b0", "patch": "@@ -427,19 +427,15 @@ impl Socket {\n         self.0.set_nonblocking(nonblocking)\n     }\n \n-    #[cfg(target_os = \"linux\")]\n+    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\"))]\n     pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n-        setsockopt(self, libc::SOL_SOCKET, libc::SO_MARK, mark as libc::c_int)\n-    }\n-\n-    #[cfg(target_os = \"freebsd\")]\n-    pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n-        setsockopt(self, libc::SOL_SOCKET, libc::SO_USER_COOKIE, mark)\n-    }\n-\n-    #[cfg(target_os = \"openbsd\")]\n-    pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n-        setsockopt(self, libc::SOL_SOCKET, libc::SO_RTABLE, mark as libc::c_int)\n+        #[cfg(target_os = \"linux\")]\n+        let option = libc::SO_MARK;\n+        #[cfg(target_os = \"freebsd\")]\n+        let option = libc::SO_USER_COOKIE;\n+        #[cfg(target_os = \"openbsd\")]\n+        let option = libc::SO_RTABLE;\n+        setsockopt(self, libc::SOL_SOCKET, option, mark as libc::c_int)\n     }\n \n     pub fn take_error(&self) -> io::Result<Option<io::Error>> {"}]}