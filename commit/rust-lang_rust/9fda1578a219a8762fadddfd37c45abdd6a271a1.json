{"sha": "9fda1578a219a8762fadddfd37c45abdd6a271a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGExNTc4YTIxOWE4NzYyZmFkZGRmZDM3YzQ1YWJkZDZhMjcxYTE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-11T22:46:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-11T22:46:51Z"}, "message": "Add ptr::position and ptr::buf_len, close #2183.", "tree": {"sha": "f3641c4a4efb6c42d78e26466fcc3a883ef21228", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3641c4a4efb6c42d78e26466fcc3a883ef21228"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fda1578a219a8762fadddfd37c45abdd6a271a1", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fda1578a219a8762fadddfd37c45abdd6a271a1", "html_url": "https://github.com/rust-lang/rust/commit/9fda1578a219a8762fadddfd37c45abdd6a271a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fda1578a219a8762fadddfd37c45abdd6a271a1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d65df5d4d4a1d46434944482ae92bf1b162c6985", "url": "https://api.github.com/repos/rust-lang/rust/commits/d65df5d4d4a1d46434944482ae92bf1b162c6985", "html_url": "https://github.com/rust-lang/rust/commit/d65df5d4d4a1d46434944482ae92bf1b162c6985"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "780638f98b78f9bc7cc1ff6d12ecf795ca555ae1", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9fda1578a219a8762fadddfd37c45abdd6a271a1/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fda1578a219a8762fadddfd37c45abdd6a271a1/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=9fda1578a219a8762fadddfd37c45abdd6a271a1", "patch": "@@ -48,6 +48,21 @@ fn mut_offset<T>(ptr: *mut T, count: uint) -> *mut T {\n     (ptr as uint + count * sys::size_of::<T>()) as *mut T\n }\n \n+#[doc = \"Return the offset of the first null pointer in `buf`.\"]\n+#[inline(always)]\n+unsafe fn buf_len<T>(buf: **T) -> uint {\n+    position(buf) {|i| i == null() }\n+}\n+\n+#[doc = \"Return the first offset `i` such that `f(buf[i]) == true`.\"]\n+#[inline(always)]\n+unsafe fn position<T>(buf: *T, f: fn(T) -> bool) -> uint {\n+    let mut i = 0u;\n+    loop {\n+        if f(*offset(buf, i)) { ret i; }\n+        else { i += 1u; }\n+    }\n+}\n \n #[doc = \"Create an unsafe null pointer\"]\n #[inline(always)]\n@@ -111,4 +126,32 @@ fn test() unsafe {\n     ptr::memcpy(ptr::offset(vec::unsafe::to_ptr(v1), 2u),\n                 vec::unsafe::to_ptr(v0), 1u);\n     assert (v1[0] == 32002u16 && v1[1] == 32001u16 && v1[2] == 32000u16);\n+}\n+\n+#[test]\n+fn test_position() unsafe {\n+    import str::as_c_str;\n+    import libc::c_char;\n+\n+    let s = \"hello\";\n+    assert 2u == as_c_str(s) {|p| position(p) {|c| c == 'l' as c_char} };\n+    assert 4u == as_c_str(s) {|p| position(p) {|c| c == 'o' as c_char} };\n+    assert 5u == as_c_str(s) {|p| position(p) {|c| c == 0 as c_char } };\n+}\n+\n+#[test]\n+fn test_buf_len() unsafe {\n+    let s0 = \"hello\";\n+    let s1 = \"there\";\n+    let s2 = \"thing\";\n+    str::as_c_str(s0) {|p0|\n+        str::as_c_str(s1) {|p1|\n+            str::as_c_str(s2) {|p2|\n+                let v = [p0, p1, p2, null()];\n+                vec::as_buf(v) {|vp|\n+                    assert buf_len(vp) == 3u;\n+                }\n+            }\n+        }\n+    }\n }\n\\ No newline at end of file"}]}