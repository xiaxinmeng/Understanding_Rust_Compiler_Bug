{"sha": "3bf24d6b633132155fb623ac46f47f2bc6ea6462", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjI0ZDZiNjMzMTMyMTU1ZmI2MjNhYzQ2ZjQ3ZjJiYzZlYTY0NjI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-02T13:17:12Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:05Z"}, "message": "test: fix fallout", "tree": {"sha": "3fcf646f6a79595c4a87a84748d6d155d1575f21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fcf646f6a79595c4a87a84748d6d155d1575f21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf24d6b633132155fb623ac46f47f2bc6ea6462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf24d6b633132155fb623ac46f47f2bc6ea6462", "html_url": "https://github.com/rust-lang/rust/commit/3bf24d6b633132155fb623ac46f47f2bc6ea6462", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf24d6b633132155fb623ac46f47f2bc6ea6462/comments", "author": null, "committer": null, "parents": [{"sha": "ab6b6514038c4d280248e2371080d097dbe31be1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6b6514038c4d280248e2371080d097dbe31be1", "html_url": "https://github.com/rust-lang/rust/commit/ab6b6514038c4d280248e2371080d097dbe31be1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e8ab1b548433bffd63b4ab0e2d9f32ebadfb4f09", "filename": "src/libtest/stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf24d6b633132155fb623ac46f47f2bc6ea6462/src%2Flibtest%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf24d6b633132155fb623ac46f47f2bc6ea6462/src%2Flibtest%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fstats.rs?ref=3bf24d6b633132155fb623ac46f47f2bc6ea6462", "patch": "@@ -438,7 +438,7 @@ pub fn write_boxplot<W: Writer, T: Float + Show + FromPrimitive>(\n \n /// Returns a HashMap with the number of occurrences of every element in the\n /// sequence that the iterator exposes.\n-pub fn freq_count<T: Iterator<U>, U: Eq+Hash>(mut iter: T) -> hash_map::HashMap<U, uint> {\n+pub fn freq_count<T: Iterator<Item=U>, U: Eq+Hash>(mut iter: T) -> hash_map::HashMap<U, uint> {\n     let mut map: hash_map::HashMap<U,uint> = hash_map::HashMap::new();\n     for elem in iter {\n         match map.entry(elem) {"}]}