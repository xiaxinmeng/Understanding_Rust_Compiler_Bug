{"sha": "480dcb403caa90ecd2cc717ad4801805c010d3f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MGRjYjQwM2NhYTkwZWNkMmNjNzE3YWQ0ODAxODA1YzAxMGQzZjY=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-28T06:28:47Z"}, "committer": {"name": "CrLF0710", "email": "crlf0710@gmail.com", "date": "2019-04-04T18:26:54Z"}, "message": "Add tests for boxed_closure_impls.", "tree": {"sha": "1d2f07b8fd7fd13e0f222391aadd61712927e988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d2f07b8fd7fd13e0f222391aadd61712927e988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/480dcb403caa90ecd2cc717ad4801805c010d3f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/480dcb403caa90ecd2cc717ad4801805c010d3f6", "html_url": "https://github.com/rust-lang/rust/commit/480dcb403caa90ecd2cc717ad4801805c010d3f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/480dcb403caa90ecd2cc717ad4801805c010d3f6/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "html_url": "https://github.com/rust-lang/rust/commit/059ec76d9b2ba33be5d7b092ffeb401590a5d39d"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "97007a9423917518c5c24a9934bab68af4a4e2c8", "filename": "src/test/run-pass/unsized-locals/box-fnonce.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs?ref=480dcb403caa90ecd2cc717ad4801805c010d3f6", "patch": "@@ -0,0 +1,10 @@\n+#![feature(boxed_closure_impls)]\n+\n+fn call_it<T>(f: Box<dyn FnOnce() -> T>) -> T {\n+    f()\n+}\n+\n+fn main() {\n+    let s = \"hello\".to_owned();\n+    assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n+}"}, {"sha": "5ec54ada13bb0f396c56fb94b5e1d7e27b4e8213", "filename": "src/test/run-pass/unsized-locals/fnbox-compat.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs?ref=480dcb403caa90ecd2cc717ad4801805c010d3f6", "patch": "@@ -0,0 +1,12 @@\n+#![feature(fnbox)]\n+\n+use std::boxed::FnBox;\n+\n+fn call_it<T>(f: Box<dyn FnBox() -> T>) -> T {\n+    f()\n+}\n+\n+fn main() {\n+    let s = \"hello\".to_owned();\n+    assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n+}"}, {"sha": "3cb9ac560a256198e954175645125933d6ba8ecb", "filename": "src/test/ui/unsized-locals/fnbox-compat.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.rs?ref=480dcb403caa90ecd2cc717ad4801805c010d3f6", "patch": "@@ -0,0 +1,12 @@\n+#![feature(fnbox)]\n+\n+use std::boxed::FnBox;\n+\n+fn call_it<T>(f: Box<dyn FnBox(&i32) -> T>) -> T {\n+    f(&42)\n+}\n+\n+fn main() {\n+    let s = \"hello\".to_owned();\n+    assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n+}"}, {"sha": "5172092fb1cd5ef31b8afb07cfcb0e4e336ba3a3", "filename": "src/test/ui/unsized-locals/fnbox-compat.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/480dcb403caa90ecd2cc717ad4801805c010d3f6/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Ffnbox-compat.stderr?ref=480dcb403caa90ecd2cc717ad4801805c010d3f6", "patch": "@@ -0,0 +1,27 @@\n+error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments\n+  --> $DIR/fnbox-compat.rs:11:34\n+   |\n+LL |     assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n+   |                                  ^^\n+   |                                  |\n+   |                                  expected closure that takes 1 argument\n+   |                                  takes 0 arguments\n+help: consider changing the closure to take and ignore the expected argument\n+   |\n+LL |     assert_eq!(&call_it(Box::new(|_| s)) as &str, \"hello\");\n+   |                                  ^^^\n+\n+error[E0277]: the size for values of type `dyn for<'r> std::boxed::FnBox<(&'r i32,), Output=_>` cannot be known at compilation time\n+  --> $DIR/fnbox-compat.rs:11:25\n+   |\n+LL |     assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n+   |                         ^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `dyn for<'r> std::boxed::FnBox<(&'r i32,), Output=_>`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: required by `<std::boxed::Box<T>>::new`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0277, E0593.\n+For more information about an error, try `rustc --explain E0277`."}]}