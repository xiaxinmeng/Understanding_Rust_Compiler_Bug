{"sha": "97b49a0cc5bea5845dc89c1598a32d7f9fea985a", "node_id": "C_kwDOAAsO6NoAKDk3YjQ5YTBjYzViZWE1ODQ1ZGM4OWMxNTk4YTMyZDdmOWZlYTk4NWE", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-03-09T20:41:47Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-05-06T15:50:53Z"}, "message": "Use __clock_gettime64 on 32-bit linux-gnu", "tree": {"sha": "45f43bc1b74cc408abb852fcf7e4e4e64ed6bdb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45f43bc1b74cc408abb852fcf7e4e4e64ed6bdb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97b49a0cc5bea5845dc89c1598a32d7f9fea985a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97b49a0cc5bea5845dc89c1598a32d7f9fea985a", "html_url": "https://github.com/rust-lang/rust/commit/97b49a0cc5bea5845dc89c1598a32d7f9fea985a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97b49a0cc5bea5845dc89c1598a32d7f9fea985a/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bee923f0df0e4a568811e24dc74af77c464d10f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/bee923f0df0e4a568811e24dc74af77c464d10f3", "html_url": "https://github.com/rust-lang/rust/commit/bee923f0df0e4a568811e24dc74af77c464d10f3"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "20d061206beb5ae5e048609df15491d00c86c1b2", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/97b49a0cc5bea5845dc89c1598a32d7f9fea985a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b49a0cc5bea5845dc89c1598a32d7f9fea985a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=97b49a0cc5bea5845dc89c1598a32d7f9fea985a", "patch": "@@ -339,6 +339,33 @@ mod inner {\n \n     impl Timespec {\n         pub fn now(clock: clock_t) -> Timespec {\n+            // Try to use 64-bit time in preparation for Y2038.\n+            #[cfg(all(target_os = \"linux\", target_env = \"gnu\", target_pointer_width = \"32\"))]\n+            {\n+                use crate::sys::weak::weak;\n+\n+                // __clock_gettime64 was added to 32-bit arches in glibc 2.34,\n+                // and it handles both vDSO calls and ENOSYS fallbacks itself.\n+                weak!(fn __clock_gettime64(libc::clockid_t, *mut __timespec64) -> libc::c_int);\n+\n+                #[repr(C)]\n+                struct __timespec64 {\n+                    tv_sec: i64,\n+                    #[cfg(target_endian = \"big\")]\n+                    _padding: i32,\n+                    tv_nsec: i32,\n+                    #[cfg(target_endian = \"little\")]\n+                    _padding: i32,\n+                }\n+\n+                if let Some(clock_gettime64) = __clock_gettime64.get() {\n+                    let mut t = MaybeUninit::uninit();\n+                    cvt(unsafe { clock_gettime64(clock, t.as_mut_ptr()) }).unwrap();\n+                    let t = unsafe { t.assume_init() };\n+                    return Timespec { tv_sec: t.tv_sec, tv_nsec: t.tv_nsec as i64 };\n+                }\n+            }\n+\n             let mut t = MaybeUninit::uninit();\n             cvt(unsafe { libc::clock_gettime(clock, t.as_mut_ptr()) }).unwrap();\n             Timespec::from(unsafe { t.assume_init() })"}]}