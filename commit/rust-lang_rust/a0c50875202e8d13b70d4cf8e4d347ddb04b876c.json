{"sha": "a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "node_id": "C_kwDOAAsO6NoAKGEwYzUwODc1MjAyZThkMTNiNzBkNGNmOGU0ZDM0N2RkYjA0Yjg3NmM", "commit": {"author": {"name": "Georgy Komarov", "email": "jubnzv@gmail.com", "date": "2022-01-21T04:24:07Z"}, "committer": {"name": "Georgy Komarov", "email": "jubnzv@gmail.com", "date": "2022-01-21T04:28:26Z"}, "message": " single_match: Clarify the `don't lint` test case", "tree": {"sha": "90f0f3effc86a4685d062fcb5341b2088192623d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90f0f3effc86a4685d062fcb5341b2088192623d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "html_url": "https://github.com/rust-lang/rust/commit/a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0c50875202e8d13b70d4cf8e4d347ddb04b876c/comments", "author": {"login": "jubnzv", "id": 12023585, "node_id": "MDQ6VXNlcjEyMDIzNTg1", "avatar_url": "https://avatars.githubusercontent.com/u/12023585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jubnzv", "html_url": "https://github.com/jubnzv", "followers_url": "https://api.github.com/users/jubnzv/followers", "following_url": "https://api.github.com/users/jubnzv/following{/other_user}", "gists_url": "https://api.github.com/users/jubnzv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jubnzv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jubnzv/subscriptions", "organizations_url": "https://api.github.com/users/jubnzv/orgs", "repos_url": "https://api.github.com/users/jubnzv/repos", "events_url": "https://api.github.com/users/jubnzv/events{/privacy}", "received_events_url": "https://api.github.com/users/jubnzv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jubnzv", "id": 12023585, "node_id": "MDQ6VXNlcjEyMDIzNTg1", "avatar_url": "https://avatars.githubusercontent.com/u/12023585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jubnzv", "html_url": "https://github.com/jubnzv", "followers_url": "https://api.github.com/users/jubnzv/followers", "following_url": "https://api.github.com/users/jubnzv/following{/other_user}", "gists_url": "https://api.github.com/users/jubnzv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jubnzv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jubnzv/subscriptions", "organizations_url": "https://api.github.com/users/jubnzv/orgs", "repos_url": "https://api.github.com/users/jubnzv/repos", "events_url": "https://api.github.com/users/jubnzv/events{/privacy}", "received_events_url": "https://api.github.com/users/jubnzv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5a07e503f524a0e8b92938301857b3007579115", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a07e503f524a0e8b92938301857b3007579115", "html_url": "https://github.com/rust-lang/rust/commit/a5a07e503f524a0e8b92938301857b3007579115"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "0e50b3e4a6e25f6619a6fe8fec718ee672e97262", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a0c50875202e8d13b70d4cf8e4d347ddb04b876c/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0c50875202e8d13b70d4cf8e4d347ddb04b876c/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "patch": "@@ -152,7 +152,9 @@ fn ranges() {\n     }\n     let x = (Some(E::V), Some(42));\n \n-    // don't lint\n+    // Don't lint, because the `E` enum can be extended with additional fields later. Thus, the\n+    // proposed replacement to `if let Some(E::V)` may hide non-exhaustive warnings that appeared\n+    // because of `match` construction.\n     match x {\n         (Some(E::V), _) => {},\n         (None, _) => {},\n@@ -176,19 +178,19 @@ fn ranges() {\n         (..) => {},\n     }\n \n-    // don't lint\n+    // Don't lint, see above.\n     match (Some(E::V), Some(E::V), Some(E::V)) {\n         (.., Some(E::V), _) => {},\n         (.., None, _) => {},\n     }\n \n-    // don't lint\n+    // Don't lint, see above.\n     match (Some(E::V), Some(E::V), Some(E::V)) {\n         (Some(E::V), ..) => {},\n         (None, ..) => {},\n     }\n \n-    // don't lint\n+    // Don't lint, see above.\n     match (Some(E::V), Some(E::V), Some(E::V)) {\n         (_, Some(E::V), ..) => {},\n         (_, None, ..) => {},"}, {"sha": "318faf2571758a1c5c7b7069207c014f645c8f90", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a0c50875202e8d13b70d4cf8e4d347ddb04b876c/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0c50875202e8d13b70d4cf8e4d347ddb04b876c/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "patch": "@@ -120,7 +120,7 @@ LL | |     };\n    | |_____^ help: try this: `if let None = x { println!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:162:5\n+  --> $DIR/single_match.rs:164:5\n    |\n LL | /     match x {\n LL | |         (Some(_), _) => {},\n@@ -129,7 +129,7 @@ LL | |     }\n    | |_____^ help: try this: `if let (Some(_), _) = x {}`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:168:5\n+  --> $DIR/single_match.rs:170:5\n    |\n LL | /     match x {\n LL | |         (Some(E::V), _) => todo!(),\n@@ -138,7 +138,7 @@ LL | |     }\n    | |_____^ help: try this: `if let (Some(E::V), _) = x { todo!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:174:5\n+  --> $DIR/single_match.rs:176:5\n    |\n LL | /     match (Some(42), Some(E::V), Some(42)) {\n LL | |         (.., Some(E::V), _) => {},"}]}