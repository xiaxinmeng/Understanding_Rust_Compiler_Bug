{"sha": "0517247bbc30f7f72f4c2f993fe345d3c0634c57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MTcyNDdiYmMzMGY3ZjcyZjRjMmY5OTNmZTM0NWQzYzA2MzRjNTc=", "commit": {"author": {"name": "Oliver Cooper", "email": "oliver.cooper@me.com", "date": "2021-08-31T08:35:22Z"}, "committer": {"name": "Oliver Cooper", "email": "oliver.cooper@me.com", "date": "2021-08-31T08:35:22Z"}, "message": "Don't filter cargo tasks by scope\n\nFixes #9093", "tree": {"sha": "630c5a4145d5cab58512040e7c6cebf28233d103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630c5a4145d5cab58512040e7c6cebf28233d103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0517247bbc30f7f72f4c2f993fe345d3c0634c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0517247bbc30f7f72f4c2f993fe345d3c0634c57", "html_url": "https://github.com/rust-lang/rust/commit/0517247bbc30f7f72f4c2f993fe345d3c0634c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0517247bbc30f7f72f4c2f993fe345d3c0634c57/comments", "author": {"login": "oeed", "id": 3835991, "node_id": "MDQ6VXNlcjM4MzU5OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3835991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oeed", "html_url": "https://github.com/oeed", "followers_url": "https://api.github.com/users/oeed/followers", "following_url": "https://api.github.com/users/oeed/following{/other_user}", "gists_url": "https://api.github.com/users/oeed/gists{/gist_id}", "starred_url": "https://api.github.com/users/oeed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oeed/subscriptions", "organizations_url": "https://api.github.com/users/oeed/orgs", "repos_url": "https://api.github.com/users/oeed/repos", "events_url": "https://api.github.com/users/oeed/events{/privacy}", "received_events_url": "https://api.github.com/users/oeed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oeed", "id": 3835991, "node_id": "MDQ6VXNlcjM4MzU5OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3835991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oeed", "html_url": "https://github.com/oeed", "followers_url": "https://api.github.com/users/oeed/followers", "following_url": "https://api.github.com/users/oeed/following{/other_user}", "gists_url": "https://api.github.com/users/oeed/gists{/gist_id}", "starred_url": "https://api.github.com/users/oeed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oeed/subscriptions", "organizations_url": "https://api.github.com/users/oeed/orgs", "repos_url": "https://api.github.com/users/oeed/repos", "events_url": "https://api.github.com/users/oeed/events{/privacy}", "received_events_url": "https://api.github.com/users/oeed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20f3792d10bd92605b7e9c2677c87868eb8089d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/20f3792d10bd92605b7e9c2677c87868eb8089d9", "html_url": "https://github.com/rust-lang/rust/commit/20f3792d10bd92605b7e9c2677c87868eb8089d9"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "6481822eb4966cf9e458b842d3b18420731ec9c4", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0517247bbc30f7f72f4c2f993fe345d3c0634c57/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0517247bbc30f7f72f4c2f993fe345d3c0634c57/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=0517247bbc30f7f72f4c2f993fe345d3c0634c57", "patch": "@@ -58,21 +58,15 @@ class CargoTaskProvider implements vscode.TaskProvider {\n \n         if (definition.type === TASK_TYPE && definition.command) {\n             const args = [definition.command].concat(definition.args ?? []);\n-            if (isWorkspaceFolder(task.scope)) {\n-                return await buildCargoTask(task.scope, definition, task.name, args, this.config.cargoRunner);\n-            }\n+            return await buildCargoTask(task.scope, definition, task.name, args, this.config.cargoRunner);\n         }\n \n         return undefined;\n     }\n }\n \n-function isWorkspaceFolder(scope?: any): scope is vscode.WorkspaceFolder {\n-    return (scope as vscode.WorkspaceFolder).name !== undefined;\n-}\n-\n export async function buildCargoTask(\n-    target: vscode.WorkspaceFolder,\n+    scope: vscode.WorkspaceFolder | vscode.TaskScope | undefined,\n     definition: CargoTaskDefinition,\n     name: string,\n     args: string[],\n@@ -115,14 +109,26 @@ export async function buildCargoTask(\n         exec = new vscode.ProcessExecution(fullCommand[0], fullCommand.slice(1), definition);\n     }\n \n-    return new vscode.Task(\n-        definition,\n-        target,\n-        name,\n-        TASK_SOURCE,\n-        exec,\n-        ['$rustc']\n-    );\n+    if (scope) {\n+        return new vscode.Task(\n+            definition,\n+            scope,\n+            name,\n+            TASK_SOURCE,\n+            exec,\n+            ['$rustc']\n+        );\n+    }\n+    else {\n+        // if the original task did not provide a scope retain the original lack of scope\n+        return new vscode.Task(\n+            definition,\n+            name,\n+            TASK_SOURCE,\n+            exec,\n+            ['$rustc']\n+        );\n+    }\n }\n \n export function activateTaskProvider(config: Config): vscode.Disposable {"}]}