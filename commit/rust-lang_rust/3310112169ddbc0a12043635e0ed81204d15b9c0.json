{"sha": "3310112169ddbc0a12043635e0ed81204d15b9c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMTAxMTIxNjlkZGJjMGExMjA0MzYzNWUwZWQ4MTIwNGQxNWI5YzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-25T02:10:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-25T02:10:35Z"}, "message": "rustdoc: Trim whitespace from failure conditions", "tree": {"sha": "9ebbf6a45f9b26a360a95430f98998c0b9a5f4e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ebbf6a45f9b26a360a95430f98998c0b9a5f4e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3310112169ddbc0a12043635e0ed81204d15b9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3310112169ddbc0a12043635e0ed81204d15b9c0", "html_url": "https://github.com/rust-lang/rust/commit/3310112169ddbc0a12043635e0ed81204d15b9c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3310112169ddbc0a12043635e0ed81204d15b9c0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a66bff6e81a9c5c0b54f8a50c7b4730f997c4af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a66bff6e81a9c5c0b54f8a50c7b4730f997c4af5", "html_url": "https://github.com/rust-lang/rust/commit/a66bff6e81a9c5c0b54f8a50c7b4730f997c4af5"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "1d2569d0d2aa09d2925c2a0bc03c8959511e89ab", "filename": "src/rustdoc/trim_pass.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3310112169ddbc0a12043635e0ed81204d15b9c0/src%2Frustdoc%2Ftrim_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3310112169ddbc0a12043635e0ed81204d15b9c0/src%2Frustdoc%2Ftrim_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftrim_pass.rs?ref=3310112169ddbc0a12043635e0ed81204d15b9c0", "patch": "@@ -91,7 +91,8 @@ fn fold_fn(fold: fold::fold<()>, doc: doc::fndoc) -> doc::fndoc {\n         return: {\n             desc: trimopt(doc.return.desc)\n             with doc.return\n-        }\n+        },\n+        failure: trimopt(doc.failure)\n         with *doc\n     }\n }\n@@ -128,3 +129,13 @@ fn should_trim_ret() {\n     let doc = run(srv, doc);\n     assert doc.topmod.fns[0].return.desc == some(\"a\");\n }\n+\n+#[test]\n+fn should_trim_failure_conditions() {\n+    let source = \"#[doc(failure = \\\"\\na\\n\\\")] fn a() -> int { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = run(srv, doc);\n+    assert doc.topmod.fns[0].failure == some(\"a\");\n+}\n\\ No newline at end of file"}]}