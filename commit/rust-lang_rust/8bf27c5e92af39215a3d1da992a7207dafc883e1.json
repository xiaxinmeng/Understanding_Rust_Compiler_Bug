{"sha": "8bf27c5e92af39215a3d1da992a7207dafc883e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZjI3YzVlOTJhZjM5MjE1YTNkMWRhOTkyYTcyMDdkYWZjODgzZTE=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-09-27T13:20:19Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-09-27T13:22:33Z"}, "message": "Fix dogfood", "tree": {"sha": "f57c7979ed924020348eff137aca86d0c323fbc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f57c7979ed924020348eff137aca86d0c323fbc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bf27c5e92af39215a3d1da992a7207dafc883e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf27c5e92af39215a3d1da992a7207dafc883e1", "html_url": "https://github.com/rust-lang/rust/commit/8bf27c5e92af39215a3d1da992a7207dafc883e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bf27c5e92af39215a3d1da992a7207dafc883e1/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4706413fb891ffe33ef06e0c229d97258fbfaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4706413fb891ffe33ef06e0c229d97258fbfaf", "html_url": "https://github.com/rust-lang/rust/commit/cd4706413fb891ffe33ef06e0c229d97258fbfaf"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "3773b9d9a2ee9ad8e0c19798439efd3d6745d71c", "filename": "clippy_lints/src/utils/qualify_min_const_fn.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8bf27c5e92af39215a3d1da992a7207dafc883e1/clippy_lints%2Fsrc%2Futils%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bf27c5e92af39215a3d1da992a7207dafc883e1/clippy_lints%2Fsrc%2Futils%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fqualify_min_const_fn.rs?ref=8bf27c5e92af39215a3d1da992a7207dafc883e1", "patch": "@@ -1,6 +1,9 @@\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::mir::*;\n+use rustc_middle::mir::{\n+    Body, CastKind, NullOp, Operand, Place, ProjectionElem, Rvalue, Statement, StatementKind, Terminator,\n+    TerminatorKind,\n+};\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::{self, adjustment::PointerCast, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n@@ -208,8 +211,7 @@ fn check_statement(tcx: TyCtxt<'tcx>, body: &Body<'tcx>, def_id: DefId, statemen\n             check_rvalue(tcx, body, def_id, rval, span)\n         },\n \n-        StatementKind::FakeRead(_, place) => check_place(tcx, **place, span, body),\n-\n+        StatementKind::FakeRead(_, place) |\n         // just an assignment\n         StatementKind::SetDiscriminant { place, .. } => check_place(tcx, **place, span, body),\n \n@@ -237,7 +239,7 @@ fn check_operand(tcx: TyCtxt<'tcx>, operand: &Operand<'tcx>, span: Span, body: &\n \n fn check_place(tcx: TyCtxt<'tcx>, place: Place<'tcx>, span: Span, body: &Body<'tcx>) -> McfResult {\n     let mut cursor = place.projection.as_ref();\n-    while let &[ref proj_base @ .., elem] = cursor {\n+    while let [ref proj_base @ .., elem] = *cursor {\n         cursor = proj_base;\n         match elem {\n             ProjectionElem::Field(..) => {"}]}