{"sha": "f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NzgwYTNmN2NlZThlYWFmMWU5ZTAxNWZlN2IwZjMxMzcyYWU5MTk=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-25T01:49:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-25T01:49:59Z"}, "message": "Rollup merge of #41980 - gamazeps:thread-send, r=steveklabnik\n\n[Doc] Add `'static` and `Send` constraints explanations to `thread::spawn`\n\nPart of #29378.\n\nExplains why the constraints on the closure and its return value are `'static` and `Send`.\n\nAllows to tick of `thread::spawn` from the list of things to document in the `thread` module.\n\nr? @steveklabnik", "tree": {"sha": "9f1b942fbb3ada7e466c858dc495466695a23c17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f1b942fbb3ada7e466c858dc495466695a23c17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919", "html_url": "https://github.com/rust-lang/rust/commit/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b13bff5203c1bdc6ac6dc87f69b5359a9503078", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b13bff5203c1bdc6ac6dc87f69b5359a9503078", "html_url": "https://github.com/rust-lang/rust/commit/5b13bff5203c1bdc6ac6dc87f69b5359a9503078"}, {"sha": "770bd57ea5bb369067103841004dfe595ab22490", "url": "https://api.github.com/repos/rust-lang/rust/commits/770bd57ea5bb369067103841004dfe595ab22490", "html_url": "https://github.com/rust-lang/rust/commit/770bd57ea5bb369067103841004dfe595ab22490"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c67f2770190bac6cf1881c3182dabc774aed1e7d", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=f4780a3f7cee8eaaf1e9e015fe7b0f31372ae919", "patch": "@@ -394,6 +394,26 @@ impl Builder {\n /// want to specify the stack size or the name of the thread, use this API\n /// instead.\n ///\n+/// As you can see in the signature of `spawn` there are two constraints on\n+/// both the closure given to `spawn` and its return value, let's explain them:\n+///\n+/// - The `'static` constraint means that the closure and its return value\n+///   must have a lifetime of the whole program execution. The reason for this\n+///   is that threads can `detach` and outlive the lifetime they have been\n+///   created in.\n+///   Indeed if the thread, and by extension its return value, can outlive their\n+///   caller, we need to make sure that they will be valid afterwards, and since\n+///   we *can't* know when it will return we need to have them valid as long as\n+///   possible, that is until the end of the program, hence the `'static`\n+///   lifetime.\n+/// - The [`Send`] constraint is because the closure will need to be passed\n+///   *by value* from the thread where it is spawned to the new thread. Its\n+///   return value will need to be passed from the new thread to the thread\n+///   where it is `join`ed.\n+///   As a reminder, the [`Send`] marker trait, expresses that it is safe to be\n+///   passed from thread to thread. [`Sync`] expresses that it is safe to have a\n+///   reference be passed from thread to thread.\n+///\n /// # Panics\n ///\n /// Panics if the OS fails to create a thread; use [`Builder::spawn`]\n@@ -460,6 +480,8 @@ impl Builder {\n /// [`panic`]: ../../std/macro.panic.html\n /// [`Builder::spawn`]: ../../std/thread/struct.Builder.html#method.spawn\n /// [`Builder`]: ../../std/thread/struct.Builder.html\n+/// [`Send`]: ../../std/marker/trait.Send.html\n+/// [`Sync`]: ../../std/marker/trait.Sync.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn spawn<F, T>(f: F) -> JoinHandle<T> where\n     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static"}]}