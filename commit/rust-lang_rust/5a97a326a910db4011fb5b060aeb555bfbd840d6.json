{"sha": "5a97a326a910db4011fb5b060aeb555bfbd840d6", "node_id": "C_kwDOAAsO6NoAKDVhOTdhMzI2YTkxMGRiNDAxMWZiNWIwNjBhZWI1NTViZmJkODQwZDY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-05-02T06:56:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-05-02T07:05:28Z"}, "message": "Simplify", "tree": {"sha": "a59d76580b684d02b142d37a5b4d9bb5aa5287f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a59d76580b684d02b142d37a5b4d9bb5aa5287f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a97a326a910db4011fb5b060aeb555bfbd840d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a97a326a910db4011fb5b060aeb555bfbd840d6", "html_url": "https://github.com/rust-lang/rust/commit/5a97a326a910db4011fb5b060aeb555bfbd840d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a97a326a910db4011fb5b060aeb555bfbd840d6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89075335360068d782806bde7297732481f4d113", "url": "https://api.github.com/repos/rust-lang/rust/commits/89075335360068d782806bde7297732481f4d113", "html_url": "https://github.com/rust-lang/rust/commit/89075335360068d782806bde7297732481f4d113"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "df2ad7af343d8c5b8dbe388a2cb91f2768606b4a", "filename": "crates/hir-ty/src/infer/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a97a326a910db4011fb5b060aeb555bfbd840d6/crates%2Fhir-ty%2Fsrc%2Finfer%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a97a326a910db4011fb5b060aeb555bfbd840d6/crates%2Fhir-ty%2Fsrc%2Finfer%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fclosure.rs?ref=5a97a326a910db4011fb5b060aeb555bfbd840d6", "patch": "@@ -115,7 +115,7 @@ impl InferenceContext<'_> {\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub(crate) struct HirPlace {\n-    pub local: BindingId,\n+    pub(crate) local: BindingId,\n     pub(crate) projections: Vec<ProjectionElem<Infallible, Ty>>,\n }\n "}, {"sha": "3a519fe65a1775ddfb38f75cbd59002f55008502", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5a97a326a910db4011fb5b060aeb555bfbd840d6/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a97a326a910db4011fb5b060aeb555bfbd840d6/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=5a97a326a910db4011fb5b060aeb555bfbd840d6", "patch": "@@ -72,28 +72,21 @@ pub(crate) fn highlight_related(\n         T![break] | T![loop] | T![while] | T![continue] if config.break_points => {\n             highlight_break_points(token)\n         }\n-        T![|] if config.closure_captures => highlight_closure_captures(\n-            sema,\n-            token.parent_ancestors().nth(1).and_then(ast::ClosureExpr::cast)?,\n-            file_id,\n-        ),\n-        T![move] if config.closure_captures => highlight_closure_captures(\n-            sema,\n-            token.parent().and_then(ast::ClosureExpr::cast)?,\n-            file_id,\n-        ),\n+        T![|] if config.closure_captures => highlight_closure_captures(sema, token, file_id),\n+        T![move] if config.closure_captures => highlight_closure_captures(sema, token, file_id),\n         _ if config.references => highlight_references(sema, &syntax, token, file_id),\n         _ => None,\n     }\n }\n \n fn highlight_closure_captures(\n     sema: &Semantics<'_, RootDatabase>,\n-    node: ast::ClosureExpr,\n+    token: SyntaxToken,\n     file_id: FileId,\n ) -> Option<Vec<HighlightedRange>> {\n-    let search_range = node.body()?.syntax().text_range();\n-    let ty = &sema.type_of_expr(&node.into())?.original;\n+    let closure = token.parent_ancestors().take(2).find_map(ast::ClosureExpr::cast)?;\n+    let search_range = closure.body()?.syntax().text_range();\n+    let ty = &sema.type_of_expr(&closure.into())?.original;\n     let c = ty.as_closure()?;\n     Some(\n         c.captured_items(sema.db)"}]}