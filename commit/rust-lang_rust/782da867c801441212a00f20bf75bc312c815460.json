{"sha": "782da867c801441212a00f20bf75bc312c815460", "node_id": "C_kwDOAAsO6NoAKDc4MmRhODY3YzgwMTQ0MTIxMmEwMGYyMGJmNzViYzMxMmM4MTU0NjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-29T19:03:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-29T19:03:36Z"}, "message": "Rollup merge of #106798 - scottmcm:signum-via-cmp, r=Mark-Simulacrum\n\nImplement `signum` with `Ord`\n\nRather than needing to do things like #105840 for `signum` too, might as well just implement that method using `Ord`, since it's doing the same \"I need `-1`/`0`/`+1`\" behaviour that `cmp` is already doing.\n\nThis also seems to slightly improve the assembly: <https://rust.godbolt.org/z/5oEEqbxK1>", "tree": {"sha": "b5a28120b12e5a4e65361c2163a10cec4aa7a115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a28120b12e5a4e65361c2163a10cec4aa7a115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/782da867c801441212a00f20bf75bc312c815460", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1sMICRBK7hj4Ov3rIwAAJtQIAD36bfaZ/VGfw3Z4YmjcYYRj\nIbKkUvDSnteQoOr3kzcVquzSFQWemSHWVmm/rZrUCUHJoiwF4RUI3JOVnsa+6EaY\nSD77/UqhzX1jYqC5wDAp0HVwdOTx3cSXwXPaykrwTGpEOXP4Gnm3Zxgpu1rlopl+\nRZyFEPh3T4j015CWhc0DHpn1voT4ikljqCZqMgXUEVBDN+qFAbXfVnF+o1s9Jmrg\n80MnTr5C7W50bP95ArIffH9DlbyZ7Q9HjskwT6wFenbgvpIr63YDLF62Zg+RtQCx\nnYscz56LPg1gSoLazWIN0VdZwPu3miWueECihxrQg2NrE9yPcYHgH37jSSVG3/M=\n=WwLS\n-----END PGP SIGNATURE-----\n", "payload": "tree b5a28120b12e5a4e65361c2163a10cec4aa7a115\nparent 192eecd53a41bb32f2a44a854697835ff67ee890\nparent fcbc12eae35296841b0ddd3bacbb43e1d0ae654e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675019016 +0100\ncommitter GitHub <noreply@github.com> 1675019016 +0100\n\nRollup merge of #106798 - scottmcm:signum-via-cmp, r=Mark-Simulacrum\n\nImplement `signum` with `Ord`\n\nRather than needing to do things like #105840 for `signum` too, might as well just implement that method using `Ord`, since it's doing the same \"I need `-1`/`0`/`+1`\" behaviour that `cmp` is already doing.\n\nThis also seems to slightly improve the assembly: <https://rust.godbolt.org/z/5oEEqbxK1>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/782da867c801441212a00f20bf75bc312c815460", "html_url": "https://github.com/rust-lang/rust/commit/782da867c801441212a00f20bf75bc312c815460", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/782da867c801441212a00f20bf75bc312c815460/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "192eecd53a41bb32f2a44a854697835ff67ee890", "url": "https://api.github.com/repos/rust-lang/rust/commits/192eecd53a41bb32f2a44a854697835ff67ee890", "html_url": "https://github.com/rust-lang/rust/commit/192eecd53a41bb32f2a44a854697835ff67ee890"}, {"sha": "fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "html_url": "https://github.com/rust-lang/rust/commit/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "acd0fea4bc4105a03a1d793098e0a45a866a5166", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/782da867c801441212a00f20bf75bc312c815460/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/782da867c801441212a00f20bf75bc312c815460/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=782da867c801441212a00f20bf75bc312c815460", "patch": "@@ -2574,12 +2574,13 @@ macro_rules! int_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_cmp)]\n         pub const fn signum(self) -> Self {\n-            match self {\n-                n if n > 0 =>  1,\n-                0          =>  0,\n-                _          => -1,\n-            }\n+            // Picking the right way to phrase this is complicated\n+            // (<https://graphics.stanford.edu/~seander/bithacks.html#CopyIntegerSign>)\n+            // so delegate it to `Ord` which is already producing -1/0/+1\n+            // exactly like we need and can be the place to deal with the complexity.\n+            self.cmp(&0) as _\n         }\n \n         /// Returns `true` if `self` is positive and `false` if the number is zero or"}]}