{"sha": "75c2fdf34a5384627db9ba240c5dcc0723aea763", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YzJmZGYzNGE1Mzg0NjI3ZGI5YmEyNDBjNWRjYzA3MjNhZWE3NjM=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-01T05:16:32Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-01T05:19:45Z"}, "message": "Warn on method call mutating const, even if it has destructor", "tree": {"sha": "d625768656d76dc440df4dfaf4bba5b8a17c7497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d625768656d76dc440df4dfaf4bba5b8a17c7497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75c2fdf34a5384627db9ba240c5dcc0723aea763", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl91ZvEACgkQ+boUO5X/\nbYJY1w//TUCU2rA/kNb78L4+vog6HNhANLLMT/dELFmbtdM37biqiHHECuJ9jB8z\nw+Z7+hneXZMIz9pxR8+94fgKd1K/8IK632R0fw6B8eUeFG2Ig0cYU4Bbt39z/nEm\nFn6E+xcFFaktrQF+fzDjJEGT6KaHrmP7RQ6eJBwdu/VHUlK6PjpOYuCCGwkFNk9h\nkYPoNny2oHcsg0GJJvWScDthqgcOP1RBG6ZxAqR5+lvLVMEc8ea63X6c9r19bqhk\n6Nke3M/Ivmq/gklNQaBSbKzBSL1cwY0Oaiy3N42DU+FgvFA7VAEL8xNrKotDw21k\nAM5S+759Daz2v2p4JuVitd8++Mx8b9mC63x6ARw1xy9aYd6XXm/0IO7WbeHRvsLZ\nwZecGYJNCkiw6g1zZz8aK6BVR9zMmC2FfdMhUgeSaCzIJEy5kZr+nKN1eXsTarIk\nosgzJXO6ems6BdXG6vsiKOKRIftrxsCf+LlyOUpBV9iAx42as0CK8Nu4ZzRgWnHh\nQJknWfFzGVHD4E7S8YdY2C2YLUk4gcrR9w1x2g8ivbnd/9ILGw96uZzuPbLhosUH\nqETVb9q144x0iRn5qmWjEPAPPWYysBKC3K5/S0y2Cv29nN6pfFa4Ho8w7WWlr4HY\nVwZ8v6O6q8psif+kt34bhSvc/SICsC4QDX87BN/wp2z1iDzqOWE=\n=imbN\n-----END PGP SIGNATURE-----", "payload": "tree d625768656d76dc440df4dfaf4bba5b8a17c7497\nparent eef5104c53114bf9a074fe8d83cfd782bd78652d\nauthor David Tolnay <dtolnay@gmail.com> 1601529392 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1601529585 -0700\n\nWarn on method call mutating const, even if it has destructor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75c2fdf34a5384627db9ba240c5dcc0723aea763", "html_url": "https://github.com/rust-lang/rust/commit/75c2fdf34a5384627db9ba240c5dcc0723aea763", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75c2fdf34a5384627db9ba240c5dcc0723aea763/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eef5104c53114bf9a074fe8d83cfd782bd78652d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef5104c53114bf9a074fe8d83cfd782bd78652d", "html_url": "https://github.com/rust-lang/rust/commit/eef5104c53114bf9a074fe8d83cfd782bd78652d"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "a0edb3772439ae056aeb91af0d07779e386fc471", "filename": "compiler/rustc_mir/src/transform/check_const_item_mutation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75c2fdf34a5384627db9ba240c5dcc0723aea763/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c2fdf34a5384627db9ba240c5dcc0723aea763/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs?ref=75c2fdf34a5384627db9ba240c5dcc0723aea763", "patch": "@@ -111,7 +111,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ConstMutationChecker<'a, 'tcx> {\n     fn visit_rvalue(&mut self, rvalue: &Rvalue<'tcx>, loc: Location) {\n         if let Rvalue::Ref(_, BorrowKind::Mut { .. }, place) = rvalue {\n             let local = place.local;\n-            if let Some(def_id) = self.is_const_item_without_destructor(local) {\n+            if let Some(def_id) = self.is_const_item(local) {\n                 // If this Rvalue is being used as the right-hand side of a\n                 // `StatementKind::Assign`, see if it ends up getting used as\n                 // the `self` parameter of a method call (as the terminator of our current"}, {"sha": "c49a13f1065b5c7c9921577a5480d0c2f8d7fa00", "filename": "src/test/ui/lint/lint-const-item-mutation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75c2fdf34a5384627db9ba240c5dcc0723aea763/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c2fdf34a5384627db9ba240c5dcc0723aea763/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs?ref=75c2fdf34a5384627db9ba240c5dcc0723aea763", "patch": "@@ -49,5 +49,5 @@ fn main() {\n \n     MUTABLE.msg = \"wow\"; // no warning, because Drop observes the mutation\n     MUTABLE2.msg = \"wow\"; //~ WARN attempting to modify\n-    VEC.push(0); // no warning\n+    VEC.push(0); //~ WARN taking a mutable reference to a `const` item\n }"}, {"sha": "11b5124b2d26ab956b5e18a2ad56666e545a108f", "filename": "src/test/ui/lint/lint-const-item-mutation.stderr", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/75c2fdf34a5384627db9ba240c5dcc0723aea763/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75c2fdf34a5384627db9ba240c5dcc0723aea763/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr?ref=75c2fdf34a5384627db9ba240c5dcc0723aea763", "patch": "@@ -98,5 +98,30 @@ note: `const` item defined here\n LL | const MUTABLE2: Mutable2 = Mutable2 { msg: \"\", other: String::new() };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: 7 warnings emitted\n+warning: taking a mutable reference to a `const` item\n+  --> $DIR/lint-const-item-mutation.rs:52:5\n+   |\n+LL |     VEC.push(0);\n+   |     ^^^^^^^^^^^\n+   |\n+   = note: each usage of a `const` item creates a new temporary\n+   = note: the mutable reference will refer to this temporary, not the original `const` item\n+note: mutable reference created due to call to this method\n+  --> $SRC_DIR/alloc/src/vec.rs:LL:COL\n+   |\n+LL | /     pub fn push(&mut self, value: T) {\n+LL | |         // This will panic or abort if we would allocate > isize::MAX bytes\n+LL | |         // or if the length increment would overflow for zero-sized types.\n+LL | |         if self.len == self.buf.capacity() {\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+note: `const` item defined here\n+  --> $DIR/lint-const-item-mutation.rs:31:1\n+   |\n+LL | const VEC: Vec<i32> = Vec::new();\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 8 warnings emitted\n "}]}