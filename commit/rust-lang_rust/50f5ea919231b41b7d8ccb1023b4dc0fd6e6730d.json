{"sha": "50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZjVlYTkxOTIzMWI0MWI3ZDhjY2IxMDIzYjRkYzBmZDZlNjczMGQ=", "commit": {"author": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-02-27T21:23:19Z"}, "committer": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-02-27T21:23:19Z"}, "message": "Simplify\n\nMerge three rules into one following @cramertj", "tree": {"sha": "58675a80d31745184f7f2c303a6d17748e3f5af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58675a80d31745184f7f2c303a6d17748e3f5af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "html_url": "https://github.com/rust-lang/rust/commit/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d/comments", "author": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b8724a8072d51c014d2d8c6852e5a398c757d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b8724a8072d51c014d2d8c6852e5a398c757d3", "html_url": "https://github.com/rust-lang/rust/commit/d9b8724a8072d51c014d2d8c6852e5a398c757d3"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "b57667df99169ffd726e2c3fdc29817d4bd0c747", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "patch": "@@ -1165,11 +1165,15 @@ impl<'a, T: ?Sized + fmt::Display> fmt::Display for RefMut<'a, T> {\n /// mutated, and that `&mut T` is unique. When building abstractions like `Cell`, `RefCell`,\n /// `Mutex`, etc, you need to turn these optimizations off. `UnsafeCell` is the only legal way\n /// to do this. When `UnsafeCell<T>` itself is immutably aliased, it is still safe to obtain\n-/// a mutable reference to its interior and/or to mutate the interior. However, it is up to\n-/// the abstraction designer to ensure that no two mutable references obtained this way are active\n-/// at the same time, there are no active immutable reference when a mutable reference is obtained\n-/// from the cell, and that there are no active mutable references or mutations when an immutable\n-/// reference is obtained. This is often done via runtime checks.\n+/// a mutable reference to its interior and/or to mutate the interior. However, the abstraction\n+/// designer must ensure that any active mutable references to the interior obtained this way does \n+/// not co-exist with other active references to the interior, either mutable or not. This is often \n+/// done via runtime checks. Naturally, several active immutable references to the interior can \n+/// co-exits with each other (but not with a mutable reference).\n+///\n+/// To put it in other words, if a mutable reference to the contents is active, no other references \n+/// can be active at the same time, and if an immutable reference to the contents is active, then\n+/// only other immutable reference may be active. \n ///\n /// Note that while mutating or mutably aliasing the contents of an `& UnsafeCell<T>` is\n /// okay (provided you enforce the invariants some other way), it is still undefined behavior"}]}