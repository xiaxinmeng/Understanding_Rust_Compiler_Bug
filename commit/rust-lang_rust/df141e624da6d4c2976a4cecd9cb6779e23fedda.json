{"sha": "df141e624da6d4c2976a4cecd9cb6779e23fedda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMTQxZTYyNGRhNmQ0YzI5NzZhNGNlY2Q5Y2I2Nzc5ZTIzZmVkZGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-21T17:48:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-24T21:29:15Z"}, "message": "mk: Reorder definitions in dist.mk\n\nJust to be more logical, put big headers between different installers", "tree": {"sha": "bdd7a561fedeafc24f22410e60babedbc396639b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdd7a561fedeafc24f22410e60babedbc396639b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df141e624da6d4c2976a4cecd9cb6779e23fedda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df141e624da6d4c2976a4cecd9cb6779e23fedda", "html_url": "https://github.com/rust-lang/rust/commit/df141e624da6d4c2976a4cecd9cb6779e23fedda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df141e624da6d4c2976a4cecd9cb6779e23fedda/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e30ab71e086746c6db7d49f5b0be5fc8cceda514", "url": "https://api.github.com/repos/rust-lang/rust/commits/e30ab71e086746c6db7d49f5b0be5fc8cceda514", "html_url": "https://github.com/rust-lang/rust/commit/e30ab71e086746c6db7d49f5b0be5fc8cceda514"}], "stats": {"total": 129, "additions": 77, "deletions": 52}, "files": [{"sha": "82502c5c795f98beabe3af5eb960904f6903f85d", "filename": "mk/dist.mk", "status": "modified", "additions": 77, "deletions": 52, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/df141e624da6d4c2976a4cecd9cb6779e23fedda/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/df141e624da6d4c2976a4cecd9cb6779e23fedda/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=df141e624da6d4c2976a4cecd9cb6779e23fedda", "patch": "@@ -48,31 +48,10 @@ UNROOTED_PKG_FILES := $(patsubst $(S)%,./%,$(PKG_FILES))\n LICENSE.txt: $(S)COPYRIGHT $(S)LICENSE-APACHE $(S)LICENSE-MIT\n \tcat $^ > $@\n \n-ifdef CFG_ISCC\n-%.iss: $(S)src/etc/pkg/%.iss\n-\tcp $< $@\n-\n-%.ico: $(S)src/etc/pkg/%.ico\n-\tcp $< $@\n-\n-$(PKG_EXE): rust.iss modpath.iss LICENSE.txt rust-logo.ico \\\n-            $(PKG_FILES) $(CSREQ3_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n-            dist-prepare-win\n-\t$(CFG_PYTHON) $(S)src/etc/copy-runtime-deps.py tmp/dist/win/bin\n-\t@$(call E, ISCC: $@)\n-\t$(Q)\"$(CFG_ISCC)\" $<\n \n-dist-prepare-win: PREPARE_HOST=$(CFG_BUILD)\n-dist-prepare-win: PREPARE_TARGETS=$(CFG_BUILD)\n-dist-prepare-win: PREPARE_DEST_DIR=tmp/dist/win\n-dist-prepare-win: PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n-dist-prepare-win: PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n-dist-prepare-win: PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n-dist-prepare-win: PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n-dist-prepare-win: PREPARE_CLEAN=true\n-dist-prepare-win: prepare-base\n-\n-endif\n+######################################################################\n+# Source tarball\n+######################################################################\n \n $(PKG_TAR): $(PKG_FILES)\n \t@$(call E, making dist dir)\n@@ -92,42 +71,42 @@ $(PKG_TAR): $(PKG_FILES)\n \t$(Q)tar -czf $(PKG_TAR) -C tmp/dist $(PKG_DIR)\n \t$(Q)rm -Rf tmp/dist/$(PKG_DIR)\n \n-.PHONY: dist distcheck\n \n-ifdef CFG_WINDOWSY_$(CFG_BUILD)\n-\n-dist: $(PKG_EXE)\n+######################################################################\n+# Windows .exe installer\n+######################################################################\n \n-distcheck: dist\n-\t@echo\n-\t@echo -----------------------------------------------\n-\t@echo $(PKG_EXE) ready for distribution\n-\t@echo -----------------------------------------------\n+ifdef CFG_ISCC\n+%.iss: $(S)src/etc/pkg/%.iss\n+\tcp $< $@\n \n-else\n+%.ico: $(S)src/etc/pkg/%.ico\n+\tcp $< $@\n \n-dist: $(PKG_TAR)\n+$(PKG_EXE): rust.iss modpath.iss LICENSE.txt rust-logo.ico \\\n+            $(PKG_FILES) $(CSREQ3_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n+            dist-prepare-win\n+\t$(CFG_PYTHON) $(S)src/etc/copy-runtime-deps.py tmp/dist/win/bin\n+\t@$(call E, ISCC: $@)\n+\t$(Q)\"$(CFG_ISCC)\" $<\n \n-distcheck: $(PKG_TAR)\n-\t$(Q)rm -Rf dist\n-\t$(Q)mkdir -p dist\n-\t@$(call E, unpacking $(PKG_TAR) in dist/$(PKG_DIR))\n-\t$(Q)cd dist && tar -xzf ../$(PKG_TAR)\n-\t@$(call E, configuring in dist/$(PKG_DIR)-build)\n-\t$(Q)mkdir -p dist/$(PKG_DIR)-build\n-\t$(Q)cd dist/$(PKG_DIR)-build && ../$(PKG_DIR)/configure\n-\t@$(call E, making 'check' in dist/$(PKG_DIR)-build)\n-\t$(Q)+make -C dist/$(PKG_DIR)-build check\n-\t@$(call E, making 'clean' in dist/$(PKG_DIR)-build)\n-\t$(Q)+make -C dist/$(PKG_DIR)-build clean\n-\t$(Q)rm -Rf dist\n-\t@echo\n-\t@echo -----------------------------------------------\n-\t@echo $(PKG_TAR) ready for distribution\n-\t@echo -----------------------------------------------\n+dist-prepare-win: PREPARE_HOST=$(CFG_BUILD)\n+dist-prepare-win: PREPARE_TARGETS=$(CFG_BUILD)\n+dist-prepare-win: PREPARE_DEST_DIR=tmp/dist/win\n+dist-prepare-win: PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n+dist-prepare-win: PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n+dist-prepare-win: PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n+dist-prepare-win: PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n+dist-prepare-win: PREPARE_CLEAN=true\n+dist-prepare-win: prepare-base\n \n endif\n \n+\n+######################################################################\n+# OS X .pkg installer\n+######################################################################\n+\n ifeq ($(CFG_OSTYPE), apple-darwin)\n \n dist-prepare-osx: PREPARE_HOST=$(CFG_BUILD)\n@@ -155,6 +134,11 @@ distcheck-osx: $(PKG_OSX)\n \n endif\n \n+\n+######################################################################\n+# Unix binary installer tarballs\n+######################################################################\n+\n dist-install-dir: $(foreach host,$(CFG_HOST),dist-install-dir-$(host))\n \n dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_DIR)-$(host).tar.gz)\n@@ -185,3 +169,44 @@ endef\n \n $(foreach host,$(CFG_HOST),\\\n   $(eval $(call DEF_INSTALLER,$(host))))\n+\n+\n+######################################################################\n+# Primary targets (dist, distcheck)\n+######################################################################\n+\n+ifdef CFG_WINDOWSY_$(CFG_BUILD)\n+\n+dist: $(PKG_EXE)\n+\n+distcheck: dist\n+\t@echo\n+\t@echo -----------------------------------------------\n+\t@echo $(PKG_EXE) ready for distribution\n+\t@echo -----------------------------------------------\n+\n+else\n+\n+dist: $(PKG_TAR)\n+\n+distcheck: $(PKG_TAR)\n+\t$(Q)rm -Rf dist\n+\t$(Q)mkdir -p dist\n+\t@$(call E, unpacking $(PKG_TAR) in dist/$(PKG_DIR))\n+\t$(Q)cd dist && tar -xzf ../$(PKG_TAR)\n+\t@$(call E, configuring in dist/$(PKG_DIR)-build)\n+\t$(Q)mkdir -p dist/$(PKG_DIR)-build\n+\t$(Q)cd dist/$(PKG_DIR)-build && ../$(PKG_DIR)/configure\n+\t@$(call E, making 'check' in dist/$(PKG_DIR)-build)\n+\t$(Q)+make -C dist/$(PKG_DIR)-build check\n+\t@$(call E, making 'clean' in dist/$(PKG_DIR)-build)\n+\t$(Q)+make -C dist/$(PKG_DIR)-build clean\n+\t$(Q)rm -Rf dist\n+\t@echo\n+\t@echo -----------------------------------------------\n+\t@echo $(PKG_TAR) ready for distribution\n+\t@echo -----------------------------------------------\n+\n+endif\n+\n+.PHONY: dist distcheck"}]}