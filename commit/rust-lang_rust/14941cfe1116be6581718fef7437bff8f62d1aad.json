{"sha": "14941cfe1116be6581718fef7437bff8f62d1aad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OTQxY2ZlMTExNmJlNjU4MTcxOGZlZjc0MzdiZmY4ZjYyZDFhYWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T09:01:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-25T09:01:07Z"}, "message": "Rollup merge of #72537 - Amanieu:fix-asm-liveness, r=petrochenkov\n\nFix InlineAsmOperand expresions being visited twice during liveness checking", "tree": {"sha": "b5cb15b527793a1545f0b4eff236c31c8d3ea7ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5cb15b527793a1545f0b4eff236c31c8d3ea7ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14941cfe1116be6581718fef7437bff8f62d1aad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJey4lTCRBK7hj4Ov3rIwAAdHIIAA++64+H379D0UEXJNwnz5SD\n7cUTGGgoxqrWBdrQS/4WRm5AxPR6rY5s1NdIUcB8orV6oyXoEtDp6Q9dFRjuxNj7\nuWmuVycHebDx8jrojRrwrFdg5OBz0FABg4q09SleuDDnzuyAV6lI92Fg007d9hJ0\n/6xb7flDZxVcYCKZ0BLaPHUD40rYsEAjzsOLlQZ7cHC9wRTtQnsgsyev63LsGpiX\nJowi6pxjHJIH10V5i2flmzdl/hoba7uYmRMCgRHrGaRyyXOV95wI2OmHc+pwQaLy\nSFMBwUzGzyY4tpuAx4FEvjSMYSRamccXlQMVl1Dap8B5O+lbzDZ12Cq56v1nkis=\n=6YHU\n-----END PGP SIGNATURE-----\n", "payload": "tree b5cb15b527793a1545f0b4eff236c31c8d3ea7ca\nparent 4a5a6559d315559d18c90442d1203f1e73ae8960\nparent be2fd61d78b815f2d1cb09b0df5f06d73a089ac8\nauthor Ralf Jung <post@ralfj.de> 1590397267 +0200\ncommitter GitHub <noreply@github.com> 1590397267 +0200\n\nRollup merge of #72537 - Amanieu:fix-asm-liveness, r=petrochenkov\n\nFix InlineAsmOperand expresions being visited twice during liveness checking\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14941cfe1116be6581718fef7437bff8f62d1aad", "html_url": "https://github.com/rust-lang/rust/commit/14941cfe1116be6581718fef7437bff8f62d1aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14941cfe1116be6581718fef7437bff8f62d1aad/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a5a6559d315559d18c90442d1203f1e73ae8960", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a5a6559d315559d18c90442d1203f1e73ae8960", "html_url": "https://github.com/rust-lang/rust/commit/4a5a6559d315559d18c90442d1203f1e73ae8960"}, {"sha": "be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "html_url": "https://github.com/rust-lang/rust/commit/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "2d7562ac1c34d5a7605e9ae7f34a6e3c75b84fa8", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14941cfe1116be6581718fef7437bff8f62d1aad/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14941cfe1116be6581718fef7437bff8f62d1aad/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=14941cfe1116be6581718fef7437bff8f62d1aad", "patch": "@@ -1460,26 +1460,20 @@ fn check_expr<'tcx>(this: &mut Liveness<'_, 'tcx>, expr: &'tcx Expr<'tcx>) {\n         hir::ExprKind::InlineAsm(ref asm) => {\n             for op in asm.operands {\n                 match op {\n-                    hir::InlineAsmOperand::In { expr, .. }\n-                    | hir::InlineAsmOperand::Const { expr, .. }\n-                    | hir::InlineAsmOperand::Sym { expr, .. } => this.visit_expr(expr),\n                     hir::InlineAsmOperand::Out { expr, .. } => {\n                         if let Some(expr) = expr {\n                             this.check_place(expr);\n-                            this.visit_expr(expr);\n                         }\n                     }\n                     hir::InlineAsmOperand::InOut { expr, .. } => {\n                         this.check_place(expr);\n-                        this.visit_expr(expr);\n                     }\n-                    hir::InlineAsmOperand::SplitInOut { in_expr, out_expr, .. } => {\n-                        this.visit_expr(in_expr);\n+                    hir::InlineAsmOperand::SplitInOut { out_expr, .. } => {\n                         if let Some(out_expr) = out_expr {\n                             this.check_place(out_expr);\n-                            this.visit_expr(out_expr);\n                         }\n                     }\n+                    _ => {}\n                 }\n             }\n         }"}]}