{"sha": "abe36c4741e780ba3ed3e9b48d823ac8007f786a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZTM2YzQ3NDFlNzgwYmEzZWQzZTliNDhkODIzYWM4MDA3Zjc4NmE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-01-24T19:17:02Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-01-26T15:02:08Z"}, "message": "Ignore LLVM-dependent run-make tests on Windows\n\nThis should solve the PATH issue, and we don't need to test cross-lang\nLTO working on all OS-es.", "tree": {"sha": "0eb9cee05ba9c35f14459c683ff6c7ba3bac8100", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eb9cee05ba9c35f14459c683ff6c7ba3bac8100"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abe36c4741e780ba3ed3e9b48d823ac8007f786a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abe36c4741e780ba3ed3e9b48d823ac8007f786a", "html_url": "https://github.com/rust-lang/rust/commit/abe36c4741e780ba3ed3e9b48d823ac8007f786a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abe36c4741e780ba3ed3e9b48d823ac8007f786a/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d21df8a3fd7a68ba9f52389ead7f06f13190c12", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d21df8a3fd7a68ba9f52389ead7f06f13190c12", "html_url": "https://github.com/rust-lang/rust/commit/2d21df8a3fd7a68ba9f52389ead7f06f13190c12"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "4f33b1c59e0848c9be4d97b33814292eff6a0537", "filename": "src/test/run-make-fulldeps/cross-lang-lto-upstream-rlibs/Makefile", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/abe36c4741e780ba3ed3e9b48d823ac8007f786a/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-upstream-rlibs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/abe36c4741e780ba3ed3e9b48d823ac8007f786a/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-upstream-rlibs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-upstream-rlibs%2FMakefile?ref=abe36c4741e780ba3ed3e9b48d823ac8007f786a", "patch": "@@ -1,6 +1,9 @@\n-\n -include ../tools.mk\n \n+# ignore windows due to libLLVM being present in PATH and the PATH and library path being the same\n+# (so fixing it is harder). See #57765 for context\n+ifndef IS_WINDOWS\n+\n # This test makes sure that we don't loose upstream object files when compiling\n # staticlibs with -Zcross-lang-lto\n \n@@ -21,3 +24,9 @@ all: staticlib.rs upstream.rs\n \t$(RUSTC) staticlib.rs -Z cross-lang-lto -Ccodegen-units=1 -Clto=thin -L. -o $(TMPDIR)/staticlib.a\n \t(cd $(TMPDIR); $(LD_LIB_PATH_ENVVAR)=$(REAL_LD_LIBRARY_PATH) llvm-ar x ./staticlib.a)\n \tls $(TMPDIR)/upstream.*.rcgu.o\n+\n+else\n+\n+all:\n+\n+endif"}, {"sha": "57a19a0ccb0370fb0d360ea591e8986bcc11eef3", "filename": "src/test/run-make-fulldeps/cross-lang-lto/Makefile", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/abe36c4741e780ba3ed3e9b48d823ac8007f786a/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/abe36c4741e780ba3ed3e9b48d823ac8007f786a/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto%2FMakefile?ref=abe36c4741e780ba3ed3e9b48d823ac8007f786a", "patch": "@@ -1,6 +1,10 @@\n \n -include ../tools.mk\n \n+# ignore windows due to libLLVM being present in PATH and the PATH and library path being the same\n+# (so fixing it is harder). See #57765 for context\n+ifndef IS_WINDOWS\n+\n # This test makes sure that the object files we generate are actually\n # LLVM bitcode files (as used by linker LTO plugins) when compiling with\n # -Z cross-lang-lto.\n@@ -45,3 +49,9 @@ rdylib: lib.rs\n exe: lib.rs\n \t$(BUILD_EXE) -o $(TMPDIR)/exe.o\n \t$(call ASSERT_IS_BITCODE_OBJ, $(TMPDIR)/exe.o)\n+\n+else\n+\n+all:\n+\n+endif"}]}