{"sha": "b8782257ae54674101b08caeee59c0d51ff760c6", "node_id": "C_kwDOAAsO6NoAKGI4NzgyMjU3YWU1NDY3NDEwMWIwOGNhZWVlNTljMGQ1MWZmNzYwYzY", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-10-09T03:58:05Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-10-09T03:58:05Z"}, "message": "Fix `clippy::too-many-arguments` violation", "tree": {"sha": "442879a515ca27c6f1d45d98674a35d802f70de8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/442879a515ca27c6f1d45d98674a35d802f70de8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8782257ae54674101b08caeee59c0d51ff760c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8782257ae54674101b08caeee59c0d51ff760c6", "html_url": "https://github.com/rust-lang/rust/commit/b8782257ae54674101b08caeee59c0d51ff760c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8782257ae54674101b08caeee59c0d51ff760c6/comments", "author": null, "committer": null, "parents": [{"sha": "da76c06209451fa01d5248374869b689116ae05e", "url": "https://api.github.com/repos/rust-lang/rust/commits/da76c06209451fa01d5248374869b689116ae05e", "html_url": "https://github.com/rust-lang/rust/commit/da76c06209451fa01d5248374869b689116ae05e"}], "stats": {"total": 46, "additions": 14, "deletions": 32}, "files": [{"sha": "50297efde21e53196c411df82428738bbd31d6ef", "filename": "clippy_dev/src/new_lint.rs", "status": "modified", "additions": 14, "deletions": 32, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b8782257ae54674101b08caeee59c0d51ff760c6/clippy_dev%2Fsrc%2Fnew_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8782257ae54674101b08caeee59c0d51ff760c6/clippy_dev%2Fsrc%2Fnew_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fnew_lint.rs?ref=b8782257ae54674101b08caeee59c0d51ff760c6", "patch": "@@ -45,26 +45,7 @@ pub fn create(pass: Option<&str>, lint_name: Option<&str>, category: Option<&str\n }\n \n fn create_lint(lint: &LintData<'_>, enable_msrv: bool) -> io::Result<()> {\n-    let (pass_type, pass_lifetimes, pass_import, context_import) = match lint.pass {\n-        \"early\" => (\"EarlyLintPass\", \"\", \"use rustc_ast::ast::*;\", \"EarlyContext\"),\n-        \"late\" => (\"LateLintPass\", \"<'_>\", \"use rustc_hir::*;\", \"LateContext\"),\n-        _ => {\n-            unreachable!(\"`pass_type` should only ever be `early` or `late`!\");\n-        },\n-    };\n-\n-    let camel_case_name = to_camel_case(lint.name);\n-    let lint_contents = get_lint_file_contents(\n-        lint.pass,\n-        pass_type,\n-        pass_lifetimes,\n-        lint.name,\n-        &camel_case_name,\n-        lint.category,\n-        pass_import,\n-        context_import,\n-        enable_msrv,\n-    );\n+    let lint_contents = get_lint_file_contents(lint, enable_msrv);\n \n     let lint_path = format!(\"clippy_lints/src/{}.rs\", lint.name);\n     write_file(lint.project_root.join(&lint_path), lint_contents.as_bytes())\n@@ -156,20 +137,21 @@ publish = false\n     )\n }\n \n-fn get_lint_file_contents(\n-    pass_name: &str,\n-    pass_type: &str,\n-    pass_lifetimes: &str,\n-    lint_name: &str,\n-    camel_case_name: &str,\n-    category: &str,\n-    pass_import: &str,\n-    context_import: &str,\n-    enable_msrv: bool,\n-) -> String {\n+fn get_lint_file_contents(lint: &LintData<'_>, enable_msrv: bool) -> String {\n     let mut result = String::new();\n \n-    let name_camel = camel_case_name;\n+    let (pass_type, pass_lifetimes, pass_import, context_import) = match lint.pass {\n+        \"early\" => (\"EarlyLintPass\", \"\", \"use rustc_ast::ast::*;\", \"EarlyContext\"),\n+        \"late\" => (\"LateLintPass\", \"<'_>\", \"use rustc_hir::*;\", \"LateContext\"),\n+        _ => {\n+            unreachable!(\"`pass_type` should only ever be `early` or `late`!\");\n+        },\n+    };\n+\n+    let lint_name = lint.name;\n+    let pass_name = lint.pass;\n+    let category = lint.category;\n+    let name_camel = to_camel_case(lint.name);\n     let name_upper = lint_name.to_uppercase();\n \n     result.push_str(&if enable_msrv {"}]}