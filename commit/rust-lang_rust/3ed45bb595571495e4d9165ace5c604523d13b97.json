{"sha": "3ed45bb595571495e4d9165ace5c604523d13b97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZDQ1YmI1OTU1NzE0OTVlNGQ5MTY1YWNlNWM2MDQ1MjNkMTNiOTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T02:50:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:25Z"}, "message": "librustc: De-`@mut` `CrateDebugContext::namespace_map`.", "tree": {"sha": "c05263c1648c4915a7b711fb2ee238b3891829ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c05263c1648c4915a7b711fb2ee238b3891829ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ed45bb595571495e4d9165ace5c604523d13b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed45bb595571495e4d9165ace5c604523d13b97", "html_url": "https://github.com/rust-lang/rust/commit/3ed45bb595571495e4d9165ace5c604523d13b97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ed45bb595571495e4d9165ace5c604523d13b97/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38be67a1b996f577f0334dc1f71c176adef54ff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/38be67a1b996f577f0334dc1f71c176adef54ff9", "html_url": "https://github.com/rust-lang/rust/commit/38be67a1b996f577f0334dc1f71c176adef54ff9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "84f0ab4f5cb11ba9c9e1888a68b1062ebc34ec58", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3ed45bb595571495e4d9165ace5c604523d13b97/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ed45bb595571495e4d9165ace5c604523d13b97/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=3ed45bb595571495e4d9165ace5c604523d13b97", "patch": "@@ -178,7 +178,7 @@ pub struct CrateDebugContext {\n     priv current_debug_location: DebugLocation,\n     priv created_files: RefCell<HashMap<~str, DIFile>>,\n     priv created_types: RefCell<HashMap<uint, DIType>>,\n-    priv namespace_map: HashMap<~[ast::Ident], @NamespaceTreeNode>,\n+    priv namespace_map: RefCell<HashMap<~[ast::Ident], @NamespaceTreeNode>>,\n     // This collection is used to assert that composite types (structs, enums, ...) have their\n     // members only set once:\n     priv composite_types_completed: HashSet<DIType>,\n@@ -197,7 +197,7 @@ impl CrateDebugContext {\n             current_debug_location: UnknownLocation,\n             created_files: RefCell::new(HashMap::new()),\n             created_types: RefCell::new(HashMap::new()),\n-            namespace_map: HashMap::new(),\n+            namespace_map: RefCell::new(HashMap::new()),\n             composite_types_completed: HashSet::new(),\n         };\n     }\n@@ -2819,7 +2819,10 @@ fn namespace_for_item(cx: &mut CrateContext,\n         let ident = path_element.ident();\n         current_key.push(ident);\n \n-        let existing_node = debug_context(cx).namespace_map.find_copy(&current_key);\n+        let existing_node = {\n+            let namespace_map = debug_context(cx).namespace_map.borrow();\n+            namespace_map.get().find_copy(&current_key)\n+        };\n         let current_node = match existing_node {\n             Some(existing_node) => existing_node,\n             None => {\n@@ -2847,7 +2850,11 @@ fn namespace_for_item(cx: &mut CrateContext,\n                     parent: parent_node,\n                 };\n \n-                debug_context(cx).namespace_map.insert(current_key.clone(), node);\n+                {\n+                    let mut namespace_map = debug_context(cx).namespace_map\n+                                                             .borrow_mut();\n+                    namespace_map.get().insert(current_key.clone(), node);\n+                }\n \n                 node\n             }"}]}