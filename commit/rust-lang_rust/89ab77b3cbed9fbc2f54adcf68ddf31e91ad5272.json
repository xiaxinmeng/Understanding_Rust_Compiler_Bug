{"sha": "89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "node_id": "C_kwDOAAsO6NoAKDg5YWI3N2IzY2JlZDlmYmMyZjU0YWRjZjY4ZGRmMzFlOTFhZDUyNzI", "commit": {"author": {"name": "Connor Horman", "email": "chorman64@gmail.com", "date": "2022-05-17T10:34:58Z"}, "committer": {"name": "Connor Horman", "email": "chorman64@gmail.com", "date": "2022-05-17T10:34:58Z"}, "message": "Handle tmm_reg in rustc_codegen_gcc", "tree": {"sha": "369d34b1c23eb4b1290f0c45c9a8323e43a7c84b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/369d34b1c23eb4b1290f0c45c9a8323e43a7c84b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "html_url": "https://github.com/rust-lang/rust/commit/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272/comments", "author": {"login": "chorman0773", "id": 5026283, "node_id": "MDQ6VXNlcjUwMjYyODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5026283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chorman0773", "html_url": "https://github.com/chorman0773", "followers_url": "https://api.github.com/users/chorman0773/followers", "following_url": "https://api.github.com/users/chorman0773/following{/other_user}", "gists_url": "https://api.github.com/users/chorman0773/gists{/gist_id}", "starred_url": "https://api.github.com/users/chorman0773/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chorman0773/subscriptions", "organizations_url": "https://api.github.com/users/chorman0773/orgs", "repos_url": "https://api.github.com/users/chorman0773/repos", "events_url": "https://api.github.com/users/chorman0773/events{/privacy}", "received_events_url": "https://api.github.com/users/chorman0773/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chorman0773", "id": 5026283, "node_id": "MDQ6VXNlcjUwMjYyODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5026283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chorman0773", "html_url": "https://github.com/chorman0773", "followers_url": "https://api.github.com/users/chorman0773/followers", "following_url": "https://api.github.com/users/chorman0773/following{/other_user}", "gists_url": "https://api.github.com/users/chorman0773/gists{/gist_id}", "starred_url": "https://api.github.com/users/chorman0773/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chorman0773/subscriptions", "organizations_url": "https://api.github.com/users/chorman0773/orgs", "repos_url": "https://api.github.com/users/chorman0773/repos", "events_url": "https://api.github.com/users/chorman0773/events{/privacy}", "received_events_url": "https://api.github.com/users/chorman0773/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50ce367880a8b426d59fdfe9c9e064ed399c4e6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ce367880a8b426d59fdfe9c9e064ed399c4e6f", "html_url": "https://github.com/rust-lang/rust/commit/50ce367880a8b426d59fdfe9c9e064ed399c4e6f"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "20d91b80e8c52821904c449c572e2fa681225c8c", "filename": "compiler/rustc_codegen_gcc/src/asm.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs?ref=89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "patch": "@@ -592,7 +592,7 @@ fn reg_to_gcc(reg: InlineAsmRegOrRegClass) -> ConstraintOrRegister {\n             InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => unimplemented!(),\n             InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => unimplemented!(),\n             InlineAsmRegClass::X86(\n-                X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg,\n+                X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg | X86InlineAsmRegClass::tmm_reg,\n             ) => unreachable!(\"clobber-only\"),\n             InlineAsmRegClass::SpirV(SpirVInlineAsmRegClass::reg) => {\n                 bug!(\"GCC backend does not support SPIR-V\")\n@@ -656,6 +656,7 @@ fn dummy_output_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, reg: InlineAsmRegCl\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg) => unimplemented!(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => cx.type_i16(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => cx.type_i16(),\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::tmm_reg) => unimplemented!(),\n         InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => cx.type_i32(),\n         InlineAsmRegClass::SpirV(SpirVInlineAsmRegClass::reg) => {\n             bug!(\"LLVM backend does not support SPIR-V\")\n@@ -787,7 +788,7 @@ fn modifier_to_gcc(arch: InlineAsmArch, reg: InlineAsmRegClass, modifier: Option\n         },\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => None,\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => None,\n-        InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg) => {\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg | X86InlineAsmRegClass::tmm_reg) => {\n             unreachable!(\"clobber-only\")\n         }\n         InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => unimplemented!(),"}, {"sha": "ac30e18ec52346791a68bf118c4dc26bc966bd5b", "filename": "src/test/codegen/asm-target-clobbers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272/src%2Ftest%2Fcodegen%2Fasm-target-clobbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272/src%2Ftest%2Fcodegen%2Fasm-target-clobbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasm-target-clobbers.rs?ref=89ab77b3cbed9fbc2f54adcf68ddf31e91ad5272", "patch": "@@ -6,7 +6,7 @@\n \n use std::arch::asm;\n \n-// CHECK-LABEL: @avx512_clobber\n+// CHECK-LABEL: @amx_clobber\n // base: call void asm sideeffect inteldialect \"\", \"~{tmm0}\"()\n #[no_mangle]\n pub unsafe fn amx_clobber() {"}]}