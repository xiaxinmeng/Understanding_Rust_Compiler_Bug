{"sha": "981852677c531d52f701b870bb27b45668a44d52", "node_id": "C_kwDOAAsO6NoAKDk4MTg1MjY3N2M1MzFkNTJmNzAxYjg3MGJiMjdiNDU2NjhhNDRkNTI", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-15T16:53:23Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-12T08:03:57Z"}, "message": "Add regression test for #94176", "tree": {"sha": "aa9a687ec9d8a47a1f94f94492ca63b5bbecd0f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa9a687ec9d8a47a1f94f94492ca63b5bbecd0f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981852677c531d52f701b870bb27b45668a44d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981852677c531d52f701b870bb27b45668a44d52", "html_url": "https://github.com/rust-lang/rust/commit/981852677c531d52f701b870bb27b45668a44d52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981852677c531d52f701b870bb27b45668a44d52/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3c5bd617d040b5ee0bc79e6e7f01772adce791b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c5bd617d040b5ee0bc79e6e7f01772adce791b", "html_url": "https://github.com/rust-lang/rust/commit/e3c5bd617d040b5ee0bc79e6e7f01772adce791b"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "e35bbd88830622fd0a24553a66e9ae78fcd6456d", "filename": "src/test/ui/let-else/issue-94176.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/981852677c531d52f701b870bb27b45668a44d52/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981852677c531d52f701b870bb27b45668a44d52/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.rs?ref=981852677c531d52f701b870bb27b45668a44d52", "patch": "@@ -0,0 +1,10 @@\n+// Issue #94176: wrong span for the error message of a mismatched type error,\n+// if the function uses a `let else` construct.\n+#![feature(let_else)]\n+\n+pub fn test(a: Option<u32>) -> Option<u32> { //~ ERROR mismatched types\n+    let Some(_) = a else { return None; };\n+    println!(\"Foo\");\n+}\n+\n+fn main() {}"}, {"sha": "0cb97aceebfd5835311787240e3c1a3fa6a2b2ed", "filename": "src/test/ui/let-else/issue-94176.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/981852677c531d52f701b870bb27b45668a44d52/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/981852677c531d52f701b870bb27b45668a44d52/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Fissue-94176.stderr?ref=981852677c531d52f701b870bb27b45668a44d52", "patch": "@@ -0,0 +1,19 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-94176.rs:5:32\n+   |\n+LL | pub fn test(a: Option<u32>) -> Option<u32> {\n+   |        ----                    ^^^^^^^^^^^ expected enum `Option`, found `()`\n+   |        |\n+   |        implicitly returns `()` as its body has no tail or `return` expression\n+   |\n+   = note:   expected enum `Option<u32>`\n+           found unit type `()`\n+help: consider returning the local binding `a`\n+   |\n+LL ~     println!(\"Foo\");\n+LL +     a\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}