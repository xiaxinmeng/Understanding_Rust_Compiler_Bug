{"sha": "fa8fd3daa7efefd4036a377f48f755be0b6952ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhOGZkM2RhYTdlZmVmZDQwMzZhMzc3ZjQ4Zjc1NWJlMGI2OTUyZWU=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-03-14T22:05:49Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-03-14T22:06:12Z"}, "message": "Add support for comma-separated option lists", "tree": {"sha": "d8cad48db82111ed58301845a94edf3a16374cb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8cad48db82111ed58301845a94edf3a16374cb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa8fd3daa7efefd4036a377f48f755be0b6952ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa8fd3daa7efefd4036a377f48f755be0b6952ee", "html_url": "https://github.com/rust-lang/rust/commit/fa8fd3daa7efefd4036a377f48f755be0b6952ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa8fd3daa7efefd4036a377f48f755be0b6952ee/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc44841ad2a2ad5f6c5e67b9e35ed8e7e71d4dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc44841ad2a2ad5f6c5e67b9e35ed8e7e71d4dc7", "html_url": "https://github.com/rust-lang/rust/commit/bc44841ad2a2ad5f6c5e67b9e35ed8e7e71d4dc7"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "d39057cbf92eda129de351a3afb2bc3135cf5f85", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fa8fd3daa7efefd4036a377f48f755be0b6952ee/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa8fd3daa7efefd4036a377f48f755be0b6952ee/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=fa8fd3daa7efefd4036a377f48f755be0b6952ee", "patch": "@@ -800,6 +800,7 @@ macro_rules! options {\n         pub const parse_opt_pathbuf: Option<&str> = Some(\"a path\");\n         pub const parse_list: Option<&str> = Some(\"a space-separated list of strings\");\n         pub const parse_opt_list: Option<&str> = Some(\"a space-separated list of strings\");\n+        pub const parse_opt_comma_list: Option<&str> = Some(\"a comma-separated list of strings\");\n         pub const parse_uint: Option<&str> = Some(\"a number\");\n         pub const parse_passes: Option<&str> =\n             Some(\"a space-separated list of passes, or `all`\");\n@@ -926,6 +927,18 @@ macro_rules! options {\n             }\n         }\n \n+        fn parse_opt_comma_list(slot: &mut Option<Vec<String>>, v: Option<&str>)\n+                      -> bool {\n+            match v {\n+                Some(s) => {\n+                    let v = s.split(',').map(|s| s.to_string()).collect();\n+                    *slot = Some(v);\n+                    true\n+                },\n+                None => false,\n+            }\n+        }\n+\n         fn parse_uint(slot: &mut usize, v: Option<&str>) -> bool {\n             match v.and_then(|s| s.parse().ok()) {\n                 Some(i) => { *slot = i; true },"}]}