{"sha": "15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YmM2M2U4YmZkNTc1YzcwOWE0NWY3YzY4NDVhY2ZlMGYzZmRjOTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-29T07:03:27Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-29T19:04:03Z"}, "message": "Add syntactic test for rest patterns.", "tree": {"sha": "fccb30c5e4db8673c51a97d9f918bb894124f471", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fccb30c5e4db8673c51a97d9f918bb894124f471"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "html_url": "https://github.com/rust-lang/rust/commit/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "html_url": "https://github.com/rust-lang/rust/commit/8b94e9e9188b65df38a5f1ae723617dc2dfb3155"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "9656a0b5de9ce1afa46a4590e271f6e51ec3c5c5", "filename": "src/test/ui/pattern/rest-pat-syntactic.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs?ref=15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "patch": "@@ -0,0 +1,70 @@\n+// Here we test that `..` is allowed in all pattern locations *syntactically*.\n+// The semantic test is in `rest-pat-semantic-disallowed.rs`.\n+\n+// check-pass\n+\n+fn main() {}\n+\n+macro_rules! accept_pat {\n+    ($p:pat) => {}\n+}\n+\n+accept_pat!(..);\n+\n+#[cfg(FALSE)]\n+fn rest_patterns() {\n+    // Top level:\n+    fn foo(..: u8) {}\n+    let ..;\n+\n+    // Box patterns:\n+    let box ..;\n+\n+    // In or-patterns:\n+    match x {\n+        .. | .. => {}\n+    }\n+\n+    // Ref patterns:\n+    let &..;\n+    let &mut ..;\n+\n+    // Ident patterns:\n+    let x @ ..;\n+    let ref x @ ..;\n+    let ref mut x @ ..;\n+\n+    // Tuple:\n+    let (..); // This is interpreted as a tuple pattern, not a parenthesis one.\n+    let (..,); // Allowing trailing comma.\n+    let (.., .., ..); // Duplicates also.\n+    let (.., P, ..); // Including with things in between.\n+\n+    // Tuple struct (same idea as for tuple patterns):\n+    let A(..);\n+    let A(..,);\n+    let A(.., .., ..);\n+    let A(.., P, ..);\n+\n+    // Array/Slice (like with tuple patterns):\n+    let [..];\n+    let [..,];\n+    let [.., .., ..];\n+    let [.., P, ..];\n+\n+    // Random walk to guard against special casing:\n+    match x {\n+        .. |\n+        [\n+            (\n+                box ..,\n+                &(..),\n+                &mut ..,\n+                x @ ..\n+            ),\n+            ref x @ ..,\n+        ] |\n+        ref mut x @ ..\n+        => {}\n+    }\n+}"}]}