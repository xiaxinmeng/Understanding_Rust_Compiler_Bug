{"sha": "fcb6b166fbc506950dc2689adfa4d0b728d1a745", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjYjZiMTY2ZmJjNTA2OTUwZGMyNjg5YWRmYTRkMGI3MjhkMWE3NDU=", "commit": {"author": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-07-29T09:20:40Z"}, "committer": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-07-29T09:20:40Z"}, "message": "SSR: Rename position and lookup_context to resolve_context", "tree": {"sha": "9b3db3f7d1f1e49efdd994efc891bafb01dffdef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b3db3f7d1f1e49efdd994efc891bafb01dffdef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcb6b166fbc506950dc2689adfa4d0b728d1a745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb6b166fbc506950dc2689adfa4d0b728d1a745", "html_url": "https://github.com/rust-lang/rust/commit/fcb6b166fbc506950dc2689adfa4d0b728d1a745", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcb6b166fbc506950dc2689adfa4d0b728d1a745/comments", "author": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf55806257776baf7db6b02d260bdaa9e851c7d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf55806257776baf7db6b02d260bdaa9e851c7d4", "html_url": "https://github.com/rust-lang/rust/commit/cf55806257776baf7db6b02d260bdaa9e851c7d4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4348b43beb53bc39d0ac77ac225569cd7e939c2c", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fcb6b166fbc506950dc2689adfa4d0b728d1a745/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb6b166fbc506950dc2689adfa4d0b728d1a745/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=fcb6b166fbc506950dc2689adfa4d0b728d1a745", "patch": "@@ -59,11 +59,11 @@ pub fn parse_search_replace(\n     rule: &str,\n     parse_only: bool,\n     db: &RootDatabase,\n-    position: FilePosition,\n+    resolve_context: FilePosition,\n     selections: Vec<FileRange>,\n ) -> Result<Vec<SourceFileEdit>, SsrError> {\n     let rule: SsrRule = rule.parse()?;\n-    let mut match_finder = MatchFinder::in_context(db, position, selections);\n+    let mut match_finder = MatchFinder::in_context(db, resolve_context, selections);\n     match_finder.add_rule(rule)?;\n     if parse_only {\n         return Ok(Vec::new());"}, {"sha": "78d45654674b2dc2fb61d50de73cf26aae4002e3", "filename": "crates/ra_ssr/src/resolving.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fcb6b166fbc506950dc2689adfa4d0b728d1a745/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb6b166fbc506950dc2689adfa4d0b728d1a745/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fresolving.rs?ref=fcb6b166fbc506950dc2689adfa4d0b728d1a745", "patch": "@@ -141,22 +141,22 @@ impl Resolver<'_, '_> {\n impl<'db> ResolutionScope<'db> {\n     pub(crate) fn new(\n         sema: &hir::Semantics<'db, ra_ide_db::RootDatabase>,\n-        lookup_context: FilePosition,\n+        resolve_context: FilePosition,\n     ) -> ResolutionScope<'db> {\n         use ra_syntax::ast::AstNode;\n-        let file = sema.parse(lookup_context.file_id);\n+        let file = sema.parse(resolve_context.file_id);\n         // Find a node at the requested position, falling back to the whole file.\n         let node = file\n             .syntax()\n-            .token_at_offset(lookup_context.offset)\n+            .token_at_offset(resolve_context.offset)\n             .left_biased()\n             .map(|token| token.parent())\n             .unwrap_or_else(|| file.syntax().clone());\n         let node = pick_node_for_resolution(node);\n         let scope = sema.scope(&node);\n         ResolutionScope {\n             scope,\n-            hygiene: hir::Hygiene::new(sema.db, lookup_context.file_id.into()),\n+            hygiene: hir::Hygiene::new(sema.db, resolve_context.file_id.into()),\n         }\n     }\n "}]}