{"sha": "381c4425b7d0f428df6576f085ea03b1d42e06af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MWM0NDI1YjdkMGY0MjhkZjY1NzZmMDg1ZWEwM2IxZDQyZTA2YWY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-10-25T15:22:03Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-10-25T16:01:31Z"}, "message": "Fix slice::as_ptr_range doctest.", "tree": {"sha": "0c576a8f516cc311204f97f521656215c4b35874", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c576a8f516cc311204f97f521656215c4b35874"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381c4425b7d0f428df6576f085ea03b1d42e06af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381c4425b7d0f428df6576f085ea03b1d42e06af", "html_url": "https://github.com/rust-lang/rust/commit/381c4425b7d0f428df6576f085ea03b1d42e06af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381c4425b7d0f428df6576f085ea03b1d42e06af/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9b660a40728d4c4213f2ec7a1c99a9bc352023", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9b660a40728d4c4213f2ec7a1c99a9bc352023", "html_url": "https://github.com/rust-lang/rust/commit/de9b660a40728d4c4213f2ec7a1c99a9bc352023"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "cdada1252d2bfc656e353eccc742cad5e2a2fcf1", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/381c4425b7d0f428df6576f085ea03b1d42e06af/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381c4425b7d0f428df6576f085ea03b1d42e06af/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=381c4425b7d0f428df6576f085ea03b1d42e06af", "patch": "@@ -422,15 +422,18 @@ impl<T> [T] {\n     /// use two pointers to refer to a range of elements in memory, as is\n     /// common in C++.\n     ///\n-    /// It can also be useful to check if a reference or pointer to an element\n-    /// refers to an element of this slice:\n+    /// It can also be useful to check if a pointer to an element refers to an\n+    /// element of this slice:\n     ///\n     /// ```\n-    /// let a = [1,2,3];\n-    /// let x = &a[1];\n-    /// let y = &5;\n-    /// assert!(a.as_ptr_range().contains(x));\n-    /// assert!(!a.as_ptr_range().contains(y));\n+    /// #![feature(slice_ptr_range)]\n+    ///\n+    /// let a = [1, 2, 3];\n+    /// let x = &a[1] as *const _;\n+    /// let y = &5 as *const _;\n+    ///\n+    /// assert!(a.as_ptr_range().contains(&x));\n+    /// assert!(!a.as_ptr_range().contains(&y));\n     /// ```\n     ///\n     /// [`as_ptr`]: #method.as_ptr"}]}