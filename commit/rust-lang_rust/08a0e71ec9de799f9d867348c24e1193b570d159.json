{"sha": "08a0e71ec9de799f9d867348c24e1193b570d159", "node_id": "C_kwDOAAsO6NoAKDA4YTBlNzFlYzlkZTc5OWY5ZDg2NzM0OGMyNGUxMTkzYjU3MGQxNTk", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-12-16T04:05:26Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-12-16T14:45:04Z"}, "message": "Detect inherent associated types not having CamelCase\n\nFixes #105341.", "tree": {"sha": "8c61ecc5f46157dfbad0d3907da2a93541b69c0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c61ecc5f46157dfbad0d3907da2a93541b69c0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08a0e71ec9de799f9d867348c24e1193b570d159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08a0e71ec9de799f9d867348c24e1193b570d159", "html_url": "https://github.com/rust-lang/rust/commit/08a0e71ec9de799f9d867348c24e1193b570d159", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08a0e71ec9de799f9d867348c24e1193b570d159/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b70baa4f922a1809d79caeaeb902800c3be283b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70baa4f922a1809d79caeaeb902800c3be283b9", "html_url": "https://github.com/rust-lang/rust/commit/b70baa4f922a1809d79caeaeb902800c3be283b9"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "91fcd6d690ee7a52c819546eccc065dca1baf64c", "filename": "compiler/rustc_lint/src/nonstandard_style.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/08a0e71ec9de799f9d867348c24e1193b570d159/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a0e71ec9de799f9d867348c24e1193b570d159/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs?ref=08a0e71ec9de799f9d867348c24e1193b570d159", "patch": "@@ -175,13 +175,23 @@ impl EarlyLintPass for NonCamelCaseTypes {\n             return;\n         }\n \n-        match it.kind {\n+        match &it.kind {\n             ast::ItemKind::TyAlias(..)\n             | ast::ItemKind::Enum(..)\n             | ast::ItemKind::Struct(..)\n             | ast::ItemKind::Union(..) => self.check_case(cx, \"type\", &it.ident),\n             ast::ItemKind::Trait(..) => self.check_case(cx, \"trait\", &it.ident),\n             ast::ItemKind::TraitAlias(..) => self.check_case(cx, \"trait alias\", &it.ident),\n+\n+            // N.B. This check is only for inherent associated types, so that we don't lint against\n+            // trait impls where we should have warned for the trait definition already.\n+            ast::ItemKind::Impl(box ast::Impl { of_trait: None, items, .. }) => {\n+                for it in items {\n+                    if let ast::AssocItemKind::Type(..) = it.kind {\n+                        self.check_case(cx, \"associated type\", &it.ident);\n+                    }\n+                }\n+            }\n             _ => (),\n         }\n     }"}, {"sha": "8775bd19e1f98c3dbefdd338c05ab69570c2d6ac", "filename": "src/test/ui/associated-inherent-types/style.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/08a0e71ec9de799f9d867348c24e1193b570d159/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a0e71ec9de799f9d867348c24e1193b570d159/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.rs?ref=08a0e71ec9de799f9d867348c24e1193b570d159", "patch": "@@ -0,0 +1,12 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features, dead_code)]\n+#![deny(non_camel_case_types)]\n+\n+struct S;\n+\n+impl S {\n+    type typ = ();\n+    //~^ ERROR associated type `typ` should have an upper camel case name\n+}\n+\n+fn main() {}"}, {"sha": "f83061f8c42163ec23d8bfc4e11fed3a1ba47fc4", "filename": "src/test/ui/associated-inherent-types/style.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/08a0e71ec9de799f9d867348c24e1193b570d159/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08a0e71ec9de799f9d867348c24e1193b570d159/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstyle.stderr?ref=08a0e71ec9de799f9d867348c24e1193b570d159", "patch": "@@ -0,0 +1,14 @@\n+error: associated type `typ` should have an upper camel case name\n+  --> $DIR/style.rs:8:10\n+   |\n+LL |     type typ = ();\n+   |          ^^^ help: convert the identifier to upper camel case: `Typ`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/style.rs:3:9\n+   |\n+LL | #![deny(non_camel_case_types)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}