{"sha": "551a74dddd84cf01440ee84148ebd18bc68bd7c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MWE3NGRkZGQ4NGNmMDE0NDBlZTg0MTQ4ZWJkMThiYzY4YmQ3Yzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-29T10:40:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-29T10:40:03Z"}, "message": "Auto merge of #24932 - pnkfelix:fix-issue-24687, r=huonw\n\nmetdata: Fix zero-normalization of the pos of a `MultiByteChar`\r\n\r\nFix #24687\r\n\r\nThe source byte/character mappings for every crate track the collection of multi-characters from its source files specially.  When we import the source information for another file into the current compilation unit, we assign its byte-positions unique values by shifting them all by a fixed adjustment, tracked in the `start_pos` field.  But when we pull out the source span information for one function from one crate and into our own crate, we need to re-normalize the byte positions: subtracting the old `start_pos` and adding the new `start_pos`. The `new_imported_filemap(..)` method handles adding the new `start_pos`, so all `creader` needs to do is re-normalize each `pos` to zero.\r\n\r\nIt seems like it was indeed trying to do this, but it mistakenly added the old `start_pos` instead of subtracting it.", "tree": {"sha": "da3b4e49858dd93844647dcaa60e7767e6c4ac99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da3b4e49858dd93844647dcaa60e7767e6c4ac99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "html_url": "https://github.com/rust-lang/rust/commit/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26c7635ccf12c66929d51a6d441c3a7672cddec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/26c7635ccf12c66929d51a6d441c3a7672cddec4", "html_url": "https://github.com/rust-lang/rust/commit/26c7635ccf12c66929d51a6d441c3a7672cddec4"}, {"sha": "2ae82fcd959db78debfb4cf5ef85d310da44f85c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae82fcd959db78debfb4cf5ef85d310da44f85c", "html_url": "https://github.com/rust-lang/rust/commit/2ae82fcd959db78debfb4cf5ef85d310da44f85c"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "241d8fd00252c93be2d5c3e2ace4956a2f271c7d", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=551a74dddd84cf01440ee84148ebd18bc68bd7c8", "patch": "@@ -664,7 +664,7 @@ fn import_codemap(local_codemap: &codemap::CodeMap,\n                     .into_inner()\n                     .map_in_place(|mbc|\n                         codemap::MultiByteChar {\n-                            pos: mbc.pos + start_pos,\n+                            pos: mbc.pos - start_pos,\n                             bytes: mbc.bytes\n                         });\n "}, {"sha": "f1624fd2e58b0cfaf1031f952450d937e248e141", "filename": "src/test/auxiliary/issue24687_lib.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Fauxiliary%2Fissue24687_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Fauxiliary%2Fissue24687_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue24687_lib.rs?ref=551a74dddd84cf01440ee84148ebd18bc68bd7c8", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+// This is a file that pulls in a separate file as a submodule, where\n+// that separate file has many multi-byte characters, to try to\n+// encourage the compiler to trip on them.\n+\n+mod issue24687_mbcs_in_comments;\n+\n+pub use issue24687_mbcs_in_comments::D;\n+"}, {"sha": "8dc243aed7e1e5406ee0024e3fe37fb8b404d5bd", "filename": "src/test/auxiliary/issue24687_mbcs_in_comments.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Fauxiliary%2Fissue24687_mbcs_in_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Fauxiliary%2Fissue24687_mbcs_in_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue24687_mbcs_in_comments.rs?ref=551a74dddd84cf01440ee84148ebd18bc68bd7c8", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt;\n+\n+// This ia file with many multi-byte characters, to try to encourage\n+// the compiler to trip on them.  The Drop implementation below will\n+// need to have its source location embedded into the debug info for\n+// the output file.\n+\n+// \u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\u03b1\n+// \u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\u03b2\n+// \u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\u03b3\n+// \u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\u03b4\n+// \u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\u03b5\n+\n+// \u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\u03b6\n+// \u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\u03b7\n+// \u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\u03b8\n+// \u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\n+// \u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\u03ba\n+\n+pub struct D<X:fmt::Debug>(pub X);\n+\n+impl<X:fmt::Debug> Drop for D<X> {\n+    fn drop(&mut self) {\n+        // \u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\u03bb\n+        println!(\"Dropping D({:?})\", self.0);\n+    }\n+}"}, {"sha": "ad30d53f1a65fe455f9d658228aedd2565ddeac6", "filename": "src/test/run-pass/issue24687-embed-debuginfo.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Frun-pass%2Fissue24687-embed-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/551a74dddd84cf01440ee84148ebd18bc68bd7c8/src%2Ftest%2Frun-pass%2Fissue24687-embed-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue24687-embed-debuginfo.rs?ref=551a74dddd84cf01440ee84148ebd18bc68bd7c8", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue24687_lib.rs\n+\n+extern crate issue24687_lib as d;\n+\n+fn main() {\n+    // Create a d, which has a destructor whose body will be trans'ed\n+    // into the generated code here, and thus the local debuginfo will\n+    // need references into the original source locations from\n+    // `importer` above.\n+    let _d = d::D(\"Hi\");\n+}"}]}