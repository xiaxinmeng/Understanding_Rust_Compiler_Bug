{"sha": "5b7bd2fed899b7966a09a6d5552a2e1985bc7526", "node_id": "C_kwDOAAsO6NoAKDViN2JkMmZlZDg5OWI3OTY2YTA5YTZkNTU1MmEyZTE5ODViYzc1MjY", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-10-19T12:33:17Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-10-19T12:33:17Z"}, "message": "mark rust-analyzer as a host-only tool\n\nAll tools meant to be shipped with host toolchains only should be marked\nas `ONLY_HOSTS = true`, but rust-analyzer was marked as `ONLY_HOSTS =\nfalse` incorrectly. This meant that bootstrap attempted to build\nrust-analyzer for cross-compilation-only targets, causing errors because\nlibstd is not present on some of them.\n\nIt will still be possible to cross-compile rust-analyzer by passing a\ndifferent --host flag to ./x, like you can cross-compile other tools.", "tree": {"sha": "cada6989b699da06a68f7744254af531bcfd4648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cada6989b699da06a68f7744254af531bcfd4648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b7bd2fed899b7966a09a6d5552a2e1985bc7526", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmNP9YUACgkQzXazX3c0\ndp4cSg//V+73+GBTJymPfzB+AI/BFDG/KD9DJ3IrBTxO0qwOY3LBa6ruf7/U1eJe\nubZoPHFBQQFSdyEVJbTPTWR1CXc18WMjDHUFMSddyB27KotThtuXNuJDkihKTnke\n+/zqsJnh4uLz6wuR9My2t06RbGRo3ogbpz4XtNoOPDxT3aqmVFVUd3r1DfE2KWQ0\nTd5sRc49ybsP62JhGsPRKWAchqgaDS+EeJZUs2iA/u3JmjYpUmGef12KEKxRD4dE\n/sja8DCUBNwCmth7n+jzMLRoKcS2VT+zgADT3ddNrhPotkKCH4sf7kzP3ovfeRbJ\njCw6kjXomYUwegJ16Q585HngdqJWAgoX5VydQDKv4Lay0DtcEpMu1HCngdakiYMh\n0Pma6pbt/HO+/0e/5THUhCff+aM6UF1/wAytXScSYAt/LCiJ63nPSZ6olQmAldQm\nkl9Dn7399N3f9SLNMCfCl8Db8UTuul8ssv48yDbOBDn250Whoi+XCUaSdA3JXBWB\notAQFZmIMTmhrIWbF1iBvniLoY5SYQSX//mXh3jybICxIF/qSP30X/1rpZ5qAD6k\nf3dPkeFXIYmqZl6AXEoAuhBp2U5fa11oTIA3Ml4845JTVbvChyw1k+1zJRqTy8qw\ngc5ulIFf0y9HnyhAYaQT2Rrgu5kqY83fck/X6b+RmGc3mjlwP4E=\n=A5Jx\n-----END PGP SIGNATURE-----", "payload": "tree cada6989b699da06a68f7744254af531bcfd4648\nparent 5605ed85363345f3def5da6b1ead2ac0b803bfe7\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1666182797 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1666182797 +0200\n\nmark rust-analyzer as a host-only tool\n\nAll tools meant to be shipped with host toolchains only should be marked\nas `ONLY_HOSTS = true`, but rust-analyzer was marked as `ONLY_HOSTS =\nfalse` incorrectly. This meant that bootstrap attempted to build\nrust-analyzer for cross-compilation-only targets, causing errors because\nlibstd is not present on some of them.\n\nIt will still be possible to cross-compile rust-analyzer by passing a\ndifferent --host flag to ./x, like you can cross-compile other tools.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7bd2fed899b7966a09a6d5552a2e1985bc7526", "html_url": "https://github.com/rust-lang/rust/commit/5b7bd2fed899b7966a09a6d5552a2e1985bc7526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b7bd2fed899b7966a09a6d5552a2e1985bc7526/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5605ed85363345f3def5da6b1ead2ac0b803bfe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5605ed85363345f3def5da6b1ead2ac0b803bfe7", "html_url": "https://github.com/rust-lang/rust/commit/5605ed85363345f3def5da6b1ead2ac0b803bfe7"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "eec74b2675a1e3dfb10eb2fbe2d287821fdd4286", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7bd2fed899b7966a09a6d5552a2e1985bc7526/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7bd2fed899b7966a09a6d5552a2e1985bc7526/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=5b7bd2fed899b7966a09a6d5552a2e1985bc7526", "patch": "@@ -698,7 +698,7 @@ pub struct RustAnalyzer {\n impl Step for RustAnalyzer {\n     type Output = Option<PathBuf>;\n     const DEFAULT: bool = true;\n-    const ONLY_HOSTS: bool = false;\n+    const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n@@ -742,7 +742,7 @@ pub struct RustAnalyzerProcMacroSrv {\n impl Step for RustAnalyzerProcMacroSrv {\n     type Output = Option<PathBuf>;\n     const DEFAULT: bool = true;\n-    const ONLY_HOSTS: bool = false;\n+    const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;"}]}