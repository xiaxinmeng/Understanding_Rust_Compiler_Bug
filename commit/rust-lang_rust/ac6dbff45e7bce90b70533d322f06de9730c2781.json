{"sha": "ac6dbff45e7bce90b70533d322f06de9730c2781", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNmRiZmY0NWU3YmNlOTBiNzA1MzNkMzIyZjA2ZGU5NzMwYzI3ODE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:07:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-21T18:07:36Z"}, "message": "Rollup merge of #67333 - wesleywiser:fix_inline_into_box_place, r=oli-obk\n\n[mir-opt] Fix `Inline` pass to handle inlining into `box` expressions\n\nr? @oli-obk\n\nBefore, the test case just ICE'd here:\n\nhttps://github.com/rust-lang/rust/blob/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6/src/librustc_mir/transform/inline.rs#L668", "tree": {"sha": "7a06bdad125cc49139578ed7e5a59e57f3a8b73f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a06bdad125cc49139578ed7e5a59e57f3a8b73f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac6dbff45e7bce90b70533d322f06de9730c2781", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/l9oCRBK7hj4Ov3rIwAAdHIIAG2yAbNS8JiyEd+LnlOm2tUw\n106htkB5zVPwMje747/PJJRergQNEJtyTs382apLvLEaqXr9HwVl+xD8/AMI2j1F\nkoYfcowkZNR31b31SKZhfiwOqMnKqtCFE3W5Yos510SJgnfWkmYYG8wvq5FOZc5g\nyaknADeY0Lbm0H5t7OguuvlBZUzfkK1wT5U9bUXAzNZgpcx03J/C613KIduslhzh\na9rNlAalicQndaYVKgx06Sl+sZrHGv90NZ4hZ+4N3lUCwQMS3/8J4vlQmPFheB1F\nqI+c+u8oUggbryQfi9a7YTDs4vac++QAPjJn2G+qJzGmutxq3KTMxurEJh12Bs4=\n=ExCZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a06bdad125cc49139578ed7e5a59e57f3a8b73f\nparent b50c3b7ddfd4e6f6b3aa2f99522637138320dab0\nparent f1325a78e6567d86d4c83d21477097b8ee3f7526\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576951656 +0100\ncommitter GitHub <noreply@github.com> 1576951656 +0100\n\nRollup merge of #67333 - wesleywiser:fix_inline_into_box_place, r=oli-obk\n\n[mir-opt] Fix `Inline` pass to handle inlining into `box` expressions\n\nr? @oli-obk\n\nBefore, the test case just ICE'd here:\n\nhttps://github.com/rust-lang/rust/blob/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6/src/librustc_mir/transform/inline.rs#L668\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6dbff45e7bce90b70533d322f06de9730c2781", "html_url": "https://github.com/rust-lang/rust/commit/ac6dbff45e7bce90b70533d322f06de9730c2781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac6dbff45e7bce90b70533d322f06de9730c2781/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b50c3b7ddfd4e6f6b3aa2f99522637138320dab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b50c3b7ddfd4e6f6b3aa2f99522637138320dab0", "html_url": "https://github.com/rust-lang/rust/commit/b50c3b7ddfd4e6f6b3aa2f99522637138320dab0"}, {"sha": "f1325a78e6567d86d4c83d21477097b8ee3f7526", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1325a78e6567d86d4c83d21477097b8ee3f7526", "html_url": "https://github.com/rust-lang/rust/commit/f1325a78e6567d86d4c83d21477097b8ee3f7526"}], "stats": {"total": 101, "additions": 91, "deletions": 10}, "files": [{"sha": "dca142279463c74f6500ea4663a06bb7bc01f43b", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "patch": "@@ -663,9 +663,9 @@ impl<'a, 'tcx> Integrator<'a, 'tcx> {\n \n     fn make_integrate_local(&self, local: &Local) -> Local {\n         if *local == RETURN_PLACE {\n-            match self.destination.as_local() {\n-                Some(l) => return l,\n-                ref place => bug!(\"Return place is {:?}, not local\", place),\n+            match self.destination.base {\n+                PlaceBase::Local(l) => return l,\n+                PlaceBase::Static(ref s) => bug!(\"Return place is {:?}, not local\", s),\n             }\n         }\n \n@@ -695,14 +695,24 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n     fn visit_place(\n         &mut self,\n         place: &mut Place<'tcx>,\n-        context: PlaceContext,\n-        location: Location,\n+        _context: PlaceContext,\n+        _location: Location,\n     ) {\n-        if let Some(RETURN_PLACE) = place.as_local() {\n-            // Return pointer; update the place itself\n-            *place = self.destination.clone();\n-        } else {\n-            self.super_place(place, context, location);\n+        match &mut place.base {\n+            PlaceBase::Static(_) => {},\n+            PlaceBase::Local(l) => {\n+                // If this is the `RETURN_PLACE`, we need to rebase any projections onto it.\n+                let dest_proj_len = self.destination.projection.len();\n+                if *l == RETURN_PLACE && dest_proj_len > 0 {\n+                    let mut projs = Vec::with_capacity(dest_proj_len + place.projection.len());\n+                    projs.extend(self.destination.projection);\n+                    projs.extend(place.projection);\n+\n+                    place.projection = self.tcx.intern_place_elems(&*projs);\n+                }\n+\n+                *l = self.make_integrate_local(l);\n+            }\n         }\n     }\n "}, {"sha": "b545500371936cf152af686da5433f791548d608", "filename": "src/test/mir-opt/inline/inline-any-operand.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-any-operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-any-operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-any-operand.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-any-operand.rs"}, {"sha": "768f4953228095acd9a5c786afb44c0dda82e079", "filename": "src/test/mir-opt/inline/inline-closure-borrows-arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-borrows-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-borrows-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-borrows-arg.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-closure-borrows-arg.rs"}, {"sha": "e000a418d90c79ae05e2d392169fb15c5f340884", "filename": "src/test/mir-opt/inline/inline-closure-captures.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-captures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-captures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure-captures.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-closure-captures.rs"}, {"sha": "bd36e77818edce1d72489068724e1f16f2e3305c", "filename": "src/test/mir-opt/inline/inline-closure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-closure.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-closure.rs"}, {"sha": "0bb9dfa403d582285b6da6ad20857e619993fe99", "filename": "src/test/mir-opt/inline/inline-into-box-place.rs", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "patch": "@@ -0,0 +1,71 @@\n+// ignore-tidy-linelength\n+// ignore-wasm32-bare compiled with panic=abort by default\n+#![feature(box_syntax)]\n+\n+fn main() {\n+    let _x: Box<Vec<u32>> = box Vec::new();\n+}\n+\n+// END RUST SOURCE\n+// START rustc.main.Inline.before.mir\n+// let mut _0: ();\n+// let _1: std::boxed::Box<std::vec::Vec<u32>> as UserTypeProjection { base: UserType(0), projs: [] };\n+// let mut _2: std::boxed::Box<std::vec::Vec<u32>>;\n+// let mut _3: ();\n+// scope 1 {\n+//   debug _x => _1;\n+// }\n+// bb0: {\n+//   StorageLive(_1);\n+//   StorageLive(_2);\n+//   _2 = Box(std::vec::Vec<u32>);\n+//   (*_2) = const std::vec::Vec::<u32>::new() -> [return: bb2, unwind: bb4];\n+// }\n+// bb1 (cleanup): {\n+//   resume;\n+// }\n+// bb2: {\n+//   _1 = move _2;\n+//   StorageDead(_2);\n+//   _0 = ();\n+//   drop(_1) -> [return: bb3, unwind: bb1];\n+// }\n+// bb3: {\n+//   StorageDead(_1);\n+//   return;\n+// }\n+// bb4 (cleanup): {\n+//   _3 = const alloc::alloc::box_free::<std::vec::Vec<u32>>(move (_2.0: std::ptr::Unique<std::vec::Vec<u32>>)) -> bb1;\n+// }\n+// END rustc.main.Inline.before.mir\n+// START rustc.main.Inline.after.mir\n+// let mut _0: ();\n+// let _1: std::boxed::Box<std::vec::Vec<u32>> as UserTypeProjection { base: UserType(0), projs: [] };\n+// let mut _2: std::boxed::Box<std::vec::Vec<u32>>;\n+// let mut _3: ();\n+// let mut _4: &mut std::vec::Vec<u32>;\n+// scope 1 {\n+//   debug _x => _1;\n+// }\n+// scope 2 {\n+// }\n+// bb0: {\n+//   StorageLive(_1);\n+//   StorageLive(_2);\n+//   _2 = Box(std::vec::Vec<u32>);\n+//   _4 = &mut (*_2);\n+//   ((*_4).0: alloc::raw_vec::RawVec<u32>) = const alloc::raw_vec::RawVec::<u32>::NEW;\n+//   ((*_4).1: usize) = const 0usize;\n+//   _1 = move _2;\n+//   StorageDead(_2);\n+//   _0 = ();\n+//   drop(_1) -> [return: bb2, unwind: bb1];\n+// }\n+// bb1 (cleanup): {\n+//   resume;\n+// }\n+// bb2: {\n+//   StorageDead(_1);\n+//   return;\n+// }\n+// END rustc.main.Inline.after.mir"}, {"sha": "6cdbcfdb0add731d3f89e7858c597f6c0217a7cb", "filename": "src/test/mir-opt/inline/inline-retag.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-retag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-retag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-retag.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-retag.rs"}, {"sha": "a2c5fb920cd30ff872b844aea5807f0c62a79dd3", "filename": "src/test/mir-opt/inline/inline-trait-method.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-trait-method.rs"}, {"sha": "4ad4311113a3ad0ec39c6d8ca5c67c2aa46a1faa", "filename": "src/test/mir-opt/inline/inline-trait-method_2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6dbff45e7bce90b70533d322f06de9730c2781/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs?ref=ac6dbff45e7bce90b70533d322f06de9730c2781", "previous_filename": "src/test/mir-opt/inline-trait-method_2.rs"}]}