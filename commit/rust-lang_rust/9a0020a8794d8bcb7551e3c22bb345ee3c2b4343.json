{"sha": "9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMDAyMGE4Nzk0ZDhiY2I3NTUxZTNjMjJiYjM0NWVlM2MyYjQzNDM=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-13T23:45:40Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Bless UI tests", "tree": {"sha": "534a0281c73a8cdecff1b6f856efea24bb5273e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/534a0281c73a8cdecff1b6f856efea24bb5273e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "html_url": "https://github.com/rust-lang/rust/commit/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6dbdee7398480e13bf38b1eb259c78202f7d07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6dbdee7398480e13bf38b1eb259c78202f7d07e", "html_url": "https://github.com/rust-lang/rust/commit/d6dbdee7398480e13bf38b1eb259c78202f7d07e"}], "stats": {"total": 352, "additions": 231, "deletions": 121}, "files": [{"sha": "2df520a936c9d4a9975563d5eb6221917fda2853", "filename": "src/test/ui/borrowck/borrowck-move-error-with-note.nll.stderr", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,14 +5,24 @@ LL |     match *f {             //~ ERROR cannot move out of\n    |           ^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider removing this dereference operator: `f`\n+   |           help: consider removing the `*`: `f`\n LL |                            //~| cannot move out\n LL |         Foo::Foo1(num1,\n-   |                   ---- move occurs because num1 has type `std::boxed::Box<u32>`, which does not implement the `Copy` trait\n+   |                   ---- data moved here\n LL |                   num2) => (),\n-   |                   ---- move occurs because num2 has type `std::boxed::Box<u32>`, which does not implement the `Copy` trait\n+   |                   ---- ...and here\n LL |         Foo::Foo2(num) => (),\n-   |                   --- move occurs because num has type `std::boxed::Box<u32>`, which does not implement the `Copy` trait\n+   |                   --- ...and here\n+   |\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/borrowck-move-error-with-note.rs:23:19\n+   |\n+LL |         Foo::Foo1(num1,\n+   |                   ^^^^\n+LL |                   num2) => (),\n+   |                   ^^^^\n+LL |         Foo::Foo2(num) => (),\n+   |                   ^^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-error-with-note.rs:39:11\n@@ -23,12 +33,15 @@ LL |     match (S {f: \"foo\".to_string(), g: \"bar\".to_string()}) {\n LL |             f: _s,\n    |                -- data moved here\n LL |             g: _t\n-   |                -- ... and here\n-help: to prevent move, use ref or ref mut\n+   |                -- ...and here\n    |\n-LL |             f: ref _s,\n-LL |             g: ref _t\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/borrowck-move-error-with-note.rs:42:16\n    |\n+LL |             f: _s,\n+   |                ^^\n+LL |             g: _t\n+   |                ^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-error-with-note.rs:57:11\n@@ -37,10 +50,16 @@ LL |     match a.a {           //~ ERROR cannot move out of\n    |           ^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&a.a`\n+   |           help: consider borrowing here: `&a.a`\n LL |                           //~| cannot move out\n LL |         n => {\n-   |         - move occurs because n has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+   |         - data moved here\n+   |\n+note: move occurs because `n` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-error-with-note.rs:59:9\n+   |\n+LL |         n => {\n+   |         ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f3430ba4e06c9038310a8f087594447e8b89dbce", "filename": "src/test/ui/borrowck/borrowck-move-out-of-vec-tail.nll.stderr", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -7,14 +7,23 @@ LL |                 &[Foo { string: a },\n    |                                 - data moved here\n ...\n LL |                   Foo { string: b }] => {\n-   |                                 - ... and here\n-help: to prevent move, use ref or ref mut\n+   |                                 - ...and here\n    |\n-LL |                 &[Foo { string: ref a },\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-vec-tail.rs:30:33\n+   |\n+LL |                 &[Foo { string: a },\n+   |                                 ^\n+...\n+LL |                   Foo { string: b }] => {\n+   |                                 ^\n+help: consider removing the `&`\n+   |\n+LL |                 [Foo { string: a },\n LL |                 //~^ ERROR cannot move out of type `[Foo]`\n LL |                 //~| cannot move out\n LL |                 //~| to prevent move\n-LL |                   Foo { string: ref b }] => {\n+LL |                   Foo { string: b }] => {\n    |\n \n error: aborting due to previous error"}, {"sha": "d5b17119d85f52abeb645cf07b1f5b8c24f2ec8e", "filename": "src/test/ui/borrowck/borrowck-vec-pattern-nesting.nll.stderr", "status": "modified", "additions": 43, "deletions": 19, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -28,10 +28,21 @@ error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy sli\n LL |     match vec {\n    |           ^^^ cannot move out of here\n LL |         &mut [_a, //~ ERROR cannot move out\n-   |               --\n-   |               |\n-   |               data moved here\n-   |               help: to prevent move, use ref or ref mut: `ref _a`\n+   |               -- data moved here\n+   |\n+note: move occurs because `_a` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:44:15\n+   |\n+LL |         &mut [_a, //~ ERROR cannot move out\n+   |               ^^\n+help: consider removing the `&mut`\n+   |\n+LL |         [_a, //~ ERROR cannot move out\n+LL |             //~| cannot move out\n+LL |             //~| to prevent move\n+LL |             ..\n+LL |         ] => {\n+   |\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:57:13\n@@ -40,7 +51,7 @@ LL |     let a = vec[0]; //~ ERROR cannot move out\n    |             ^^^^^^\n    |             |\n    |             cannot move out of here\n-   |             help: consider using a reference instead: `&vec[0]`\n+   |             help: consider borrowing here: `&vec[0]`\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:64:11\n@@ -49,10 +60,19 @@ LL |     match vec {\n    |           ^^^ cannot move out of here\n ...\n LL |          _b] => {}\n-   |          --\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref _b`\n+   |          -- data moved here\n+   |\n+note: move occurs because `_b` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:67:10\n+   |\n+LL |          _b] => {}\n+   |          ^^\n+help: consider removing the `&mut`\n+   |\n+LL |         [ //~ ERROR cannot move out\n+LL |         //~^ cannot move out\n+LL |          _b] => {}\n+   |\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:70:13\n@@ -61,22 +81,26 @@ LL |     let a = vec[0]; //~ ERROR cannot move out\n    |             ^^^^^^\n    |             |\n    |             cannot move out of here\n-   |             help: consider using a reference instead: `&vec[0]`\n+   |             help: consider borrowing here: `&vec[0]`\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:77:11\n    |\n LL |     match vec {\n    |           ^^^ cannot move out of here\n LL |         &mut [_a, _b, _c] => {}  //~ ERROR cannot move out\n-   |               --  --  -- ... and here\n-   |               |   |\n-   |               |   ... and here\n-   |               data moved here\n-help: to prevent move, use ref or ref mut\n-   |\n-LL |         &mut [ref _a, ref _b, ref _c] => {}  //~ ERROR cannot move out\n-   |               ^^^^^^  ^^^^^^  ^^^^^^\n+   |         -----------------\n+   |         |     |   |   |\n+   |         |     |   |   ...and here\n+   |         |     |   ...and here\n+   |         |     data moved here\n+   |         help: consider removing the `&mut`: `[_a, _b, _c]`\n+   |\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:78:15\n+   |\n+LL |         &mut [_a, _b, _c] => {}  //~ ERROR cannot move out\n+   |               ^^  ^^  ^^\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:82:13\n@@ -85,7 +109,7 @@ LL |     let a = vec[0]; //~ ERROR cannot move out\n    |             ^^^^^^\n    |             |\n    |             cannot move out of here\n-   |             help: consider using a reference instead: `&vec[0]`\n+   |             help: consider borrowing here: `&vec[0]`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "d4340938eebc14880e7b4409021344c26f733c86", "filename": "src/test/ui/borrowck/issue-51415.nll.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,8 +5,13 @@ LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n    |                                          ^^^^^-^\n    |                                          |    |\n    |                                          |    data moved here\n-   |                                          |    help: to prevent move, use ref or ref mut: `ref s`\n    |                                          cannot move out of borrowed content\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/issue-51415.rs:16:47\n+   |\n+LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n+   |                                               ^\n \n error: aborting due to previous error\n "}, {"sha": "e334472f9d6e1b26cba8b06eb20fe2ccdd999cfe", "filename": "src/test/ui/codemap_tests/overlapping_spans.nll.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -4,10 +4,13 @@ error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n LL |     match (S {f:\"foo\".to_string()}) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n LL |         S {f:_s} => {} //~ ERROR cannot move out\n-   |              --\n-   |              |\n-   |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref _s`\n+   |              -- data moved here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/overlapping_spans.rs:21:14\n+   |\n+LL |         S {f:_s} => {} //~ ERROR cannot move out\n+   |              ^^\n \n error: aborting due to previous error\n "}, {"sha": "72d21d47d86fa765985da974e0b8b2664837d7fa", "filename": "src/test/ui/issues/issue-12567.nll.stderr", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -8,15 +8,16 @@ LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n    |                 -- data moved here\n ...\n LL |         (&[hd1, ..], &[hd2, ..])\n-   |                        --- ... and here\n-help: to prevent move, use ref or ref mut\n+   |                        --- ...and here\n    |\n-LL |         (&[], &[ref hd, ..]) | (&[hd, ..], &[])\n-LL |             => println!(\"one empty\"),\n-LL |         //~^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n-LL |         //~^^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n-LL |         (&[hd1, ..], &[ref hd2, ..])\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/issue-12567.rs:16:17\n    |\n+LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n+   |                 ^^\n+...\n+LL |         (&[hd1, ..], &[hd2, ..])\n+   |                        ^^^\n \n error[E0508]: cannot move out of type `[T]`, a non-copy slice\n   --> $DIR/issue-12567.rs:14:11\n@@ -28,15 +29,16 @@ LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n    |                 -- data moved here\n ...\n LL |         (&[hd1, ..], &[hd2, ..])\n-   |            --- ... and here\n-help: to prevent move, use ref or ref mut\n+   |            --- ...and here\n    |\n-LL |         (&[], &[ref hd, ..]) | (&[hd, ..], &[])\n-LL |             => println!(\"one empty\"),\n-LL |         //~^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n-LL |         //~^^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n-LL |         (&[ref hd1, ..], &[hd2, ..])\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/issue-12567.rs:16:17\n    |\n+LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n+   |                 ^^\n+...\n+LL |         (&[hd1, ..], &[hd2, ..])\n+   |            ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3a6784eed67dd35d3adaaadb90b1bcd59d38ebc7", "filename": "src/test/ui/issues/issue-20801.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,7 +5,7 @@ LL |     let a = unsafe { *mut_ref() };\n    |                      ^^^^^^^^^^\n    |                      |\n    |                      cannot move out of borrowed content\n-   |                      help: consider using a reference instead: `&*mut_ref()`\n+   |                      help: consider removing the `*`: `mut_ref()`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/issue-20801.rs:39:22\n@@ -14,7 +14,7 @@ LL |     let b = unsafe { *imm_ref() };\n    |                      ^^^^^^^^^^\n    |                      |\n    |                      cannot move out of borrowed content\n-   |                      help: consider using a reference instead: `&*imm_ref()`\n+   |                      help: consider removing the `*`: `imm_ref()`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/issue-20801.rs:42:22\n@@ -23,7 +23,7 @@ LL |     let c = unsafe { *mut_ptr() };\n    |                      ^^^^^^^^^^\n    |                      |\n    |                      cannot move out of borrowed content\n-   |                      help: consider using a reference instead: `&*mut_ptr()`\n+   |                      help: consider removing the `*`: `mut_ptr()`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/issue-20801.rs:45:22\n@@ -32,7 +32,7 @@ LL |     let d = unsafe { *const_ptr() };\n    |                      ^^^^^^^^^^^^\n    |                      |\n    |                      cannot move out of borrowed content\n-   |                      help: consider using a reference instead: `&*const_ptr()`\n+   |                      help: consider removing the `*`: `const_ptr()`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "9020d3778c3730820347651be4554a9b7d9c1f0b", "filename": "src/test/ui/issues/issue-40402-ref-hints/issue-40402-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,7 +5,7 @@ LL |     let e = f.v[0]; //~ ERROR cannot move out of indexed content\n    |             ^^^^^^\n    |             |\n    |             cannot move out of borrowed content\n-   |             help: consider using a reference instead: `&f.v[0]`\n+   |             help: consider borrowing here: `&f.v[0]`\n \n error: aborting due to previous error\n "}, {"sha": "a80e9a5fe091f70343247033078fb2881a09d61d", "filename": "src/test/ui/issues/issue-40402-ref-hints/issue-40402-2.nll.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,9 +5,15 @@ LL |     let (a, b) = x[0]; //~ ERROR cannot move out of indexed content\n    |          -  -    ^^^^\n    |          |  |    |\n    |          |  |    cannot move out of borrowed content\n-   |          |  |    help: consider using a reference instead: `&x[0]`\n-   |          |  move occurs because b has type `std::string::String`, which does not implement the `Copy` trait\n-   |          move occurs because a has type `std::string::String`, which does not implement the `Copy` trait\n+   |          |  |    help: consider borrowing here: `&x[0]`\n+   |          |  ...and here\n+   |          data moved here\n+   |\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/issue-40402-2.rs:15:10\n+   |\n+LL |     let (a, b) = x[0]; //~ ERROR cannot move out of indexed content\n+   |          ^  ^\n \n error: aborting due to previous error\n "}, {"sha": "1f22ab148185296bbf3ca71abe0a75ca06630a3d", "filename": "src/test/ui/moves/moves-based-on-type-block-bad.nll.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,10 +5,16 @@ LL |             match hellothere.x { //~ ERROR cannot move out\n    |                   ^^^^^^^^^^^^\n    |                   |\n    |                   cannot move out of borrowed content\n-   |                   help: consider using a reference instead: `&hellothere.x`\n+   |                   help: consider borrowing here: `&hellothere.x`\n ...\n LL |                 box E::Bar(x) => println!(\"{}\", x.to_string()),\n-   |                            - move occurs because x has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+   |                            - data moved here\n+   |\n+note: move occurs because `x` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/moves-based-on-type-block-bad.rs:37:28\n+   |\n+LL |                 box E::Bar(x) => println!(\"{}\", x.to_string()),\n+   |                            ^\n \n error: aborting due to previous error\n "}, {"sha": "6a4c8f2e8d81570161b7d251523acb9c6483235f", "filename": "src/test/ui/nll/cannot-move-block-spans.nll.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,7 +5,7 @@ LL |     let x = { *r }; //~ ERROR\n    |               ^^\n    |               |\n    |               cannot move out of borrowed content\n-   |               help: consider removing this dereference operator: `r`\n+   |               help: consider removing the `*`: `r`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:16:22\n@@ -14,7 +14,7 @@ LL |     let y = unsafe { *r }; //~ ERROR\n    |                      ^^\n    |                      |\n    |                      cannot move out of borrowed content\n-   |                      help: consider removing this dereference operator: `r`\n+   |                      help: consider removing the `*`: `r`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:17:26\n@@ -23,7 +23,7 @@ LL |     let z = loop { break *r; }; //~ ERROR\n    |                          ^^\n    |                          |\n    |                          cannot move out of borrowed content\n-   |                          help: consider removing this dereference operator: `r`\n+   |                          help: consider removing the `*`: `r`\n \n error[E0508]: cannot move out of type `[std::string::String; 2]`, a non-copy array\n   --> $DIR/cannot-move-block-spans.rs:21:15\n@@ -32,7 +32,7 @@ LL |     let x = { arr[0] }; //~ ERROR\n    |               ^^^^^^\n    |               |\n    |               cannot move out of here\n-   |               help: consider using a reference instead: `&arr[0]`\n+   |               help: consider borrowing here: `&arr[0]`\n \n error[E0508]: cannot move out of type `[std::string::String; 2]`, a non-copy array\n   --> $DIR/cannot-move-block-spans.rs:22:22\n@@ -41,7 +41,7 @@ LL |     let y = unsafe { arr[0] }; //~ ERROR\n    |                      ^^^^^^\n    |                      |\n    |                      cannot move out of here\n-   |                      help: consider using a reference instead: `&arr[0]`\n+   |                      help: consider borrowing here: `&arr[0]`\n \n error[E0508]: cannot move out of type `[std::string::String; 2]`, a non-copy array\n   --> $DIR/cannot-move-block-spans.rs:23:26\n@@ -50,7 +50,7 @@ LL |     let z = loop { break arr[0]; }; //~ ERROR\n    |                          ^^^^^^\n    |                          |\n    |                          cannot move out of here\n-   |                          help: consider using a reference instead: `&arr[0]`\n+   |                          help: consider borrowing here: `&arr[0]`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:27:38\n@@ -59,7 +59,7 @@ LL |     let x = { let mut u = 0; u += 1; *r }; //~ ERROR\n    |                                      ^^\n    |                                      |\n    |                                      cannot move out of borrowed content\n-   |                                      help: consider removing this dereference operator: `r`\n+   |                                      help: consider removing the `*`: `r`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:28:45\n@@ -68,7 +68,7 @@ LL |     let y = unsafe { let mut u = 0; u += 1; *r }; //~ ERROR\n    |                                             ^^\n    |                                             |\n    |                                             cannot move out of borrowed content\n-   |                                             help: consider removing this dereference operator: `r`\n+   |                                             help: consider removing the `*`: `r`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:29:49\n@@ -77,7 +77,7 @@ LL |     let z = loop { let mut u = 0; u += 1; break *r; u += 2; }; //~ ERROR\n    |                                                 ^^\n    |                                                 |\n    |                                                 cannot move out of borrowed content\n-   |                                                 help: consider removing this dereference operator: `r`\n+   |                                                 help: consider removing the `*`: `r`\n \n error: aborting due to 9 previous errors\n "}, {"sha": "592768363096cae2d0d60a37ee35a0eefb81d24b", "filename": "src/test/ui/nll/move-errors.stderr", "status": "modified", "additions": 65, "deletions": 29, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -5,7 +5,7 @@ LL |     let b = *a;\n    |             ^^\n    |             |\n    |             cannot move out of borrowed content\n-   |             help: consider removing this dereference operator: `a`\n+   |             help: consider removing the `*`: `a`\n \n error[E0508]: cannot move out of type `[A; 1]`, a non-copy array\n   --> $DIR/move-errors.rs:25:13\n@@ -14,7 +14,7 @@ LL |     let b = a[0];\n    |             ^^^^\n    |             |\n    |             cannot move out of here\n-   |             help: consider using a reference instead: `&a[0]`\n+   |             help: consider borrowing here: `&a[0]`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:32:13\n@@ -23,7 +23,7 @@ LL |     let s = **r;\n    |             ^^^\n    |             |\n    |             cannot move out of borrowed content\n-   |             help: consider using a reference instead: `&**r`\n+   |             help: consider removing the `*`: `*r`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:40:13\n@@ -32,7 +32,7 @@ LL |     let s = *r;\n    |             ^^\n    |             |\n    |             cannot move out of borrowed content\n-   |             help: consider using a reference instead: `&*r`\n+   |             help: consider removing the `*`: `r`\n \n error[E0508]: cannot move out of type `[A; 1]`, a non-copy array\n   --> $DIR/move-errors.rs:45:13\n@@ -41,7 +41,7 @@ LL |     let a = [A(\"\".to_string())][0];\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |             |\n    |             cannot move out of here\n-   |             help: consider using a reference instead: `&[A(\"\".to_string())][0]`\n+   |             help: consider borrowing here: `&[A(\"\".to_string())][0]`\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:51:16\n@@ -50,8 +50,14 @@ LL |     let A(s) = *a;\n    |           -    ^^\n    |           |    |\n    |           |    cannot move out of borrowed content\n-   |           |    help: consider removing this dereference operator: `a`\n-   |           move occurs because s has type `std::string::String`, which does not implement the `Copy` trait\n+   |           |    help: consider removing the `*`: `a`\n+   |           data moved here\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:51:11\n+   |\n+LL |     let A(s) = *a;\n+   |           ^\n \n error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:57:19\n@@ -60,7 +66,12 @@ LL |     let C(D(s)) = c;\n    |             -     ^ cannot move out of here\n    |             |\n    |             data moved here\n-   |             help: to prevent move, use ref or ref mut: `ref s`\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:57:13\n+   |\n+LL |     let C(D(s)) = c;\n+   |             ^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:64:9\n@@ -75,12 +86,20 @@ LL |     match x[0] {\n    |           ^^^^\n    |           |\n    |           cannot move out of here\n-   |           help: consider using a reference instead: `&x[0]`\n+   |           help: consider borrowing here: `&x[0]`\n LL |     //~^ ERROR\n LL |         B::U(d) => (),\n-   |              - move occurs because d has type `D`, which does not implement the `Copy` trait\n+   |              - data moved here\n LL |         B::V(s) => (),\n-   |              - move occurs because s has type `std::string::String`, which does not implement the `Copy` trait\n+   |              - ...and here\n+   |\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/move-errors.rs:89:14\n+   |\n+LL |         B::U(d) => (),\n+   |              ^\n+LL |         B::V(s) => (),\n+   |              ^\n \n error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:96:11\n@@ -89,10 +108,13 @@ LL |     match x {\n    |           ^ cannot move out of here\n ...\n LL |         B::U(D(s)) => (),\n-   |                -\n-   |                |\n-   |                data moved here\n-   |                help: to prevent move, use ref or ref mut: `ref s`\n+   |                - data moved here\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:99:16\n+   |\n+LL |         B::U(D(s)) => (),\n+   |                ^\n \n error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:105:11\n@@ -101,10 +123,13 @@ LL |     match x {\n    |           ^ cannot move out of here\n ...\n LL |         (D(s), &t) => (),\n-   |            -\n-   |            |\n-   |            data moved here\n-   |            help: to prevent move, use ref or ref mut: `ref s`\n+   |            - data moved here\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:108:12\n+   |\n+LL |         (D(s), &t) => (),\n+   |            ^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:105:11\n@@ -113,10 +138,13 @@ LL |     match x {\n    |           ^ cannot move out of borrowed content\n ...\n LL |         (D(s), &t) => (),\n-   |                 -\n-   |                 |\n-   |                 data moved here\n-   |                 help: to prevent move, use ref or ref mut: `ref t`\n+   |                 - data moved here\n+   |\n+note: move occurs because `t` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:108:17\n+   |\n+LL |         (D(s), &t) => (),\n+   |                 ^\n \n error[E0509]: cannot move out of type `F`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:115:11\n@@ -125,13 +153,15 @@ LL |     match x {\n    |           ^ cannot move out of here\n LL |     //~^ ERROR\n LL |         F(s, mut t) => (),\n-   |           -  ----- ... and here\n+   |           -  ----- ...and here\n    |           |\n    |           data moved here\n-help: to prevent move, use ref or ref mut\n    |\n-LL |         F(ref s, ref mut t) => (),\n-   |           ^^^^^  ^^^^^^^^^\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/move-errors.rs:117:11\n+   |\n+LL |         F(s, mut t) => (),\n+   |           ^  ^^^^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/move-errors.rs:123:11\n@@ -140,10 +170,16 @@ LL |     match *x {\n    |           ^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider removing this dereference operator: `x`\n+   |           help: consider removing the `*`: `x`\n LL |     //~^ ERROR\n LL |         Ok(s) | Err(s) => (),\n-   |            - move occurs because s has type `std::string::String`, which does not implement the `Copy` trait\n+   |            - data moved here\n+   |\n+note: move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/move-errors.rs:125:12\n+   |\n+LL |         Ok(s) | Err(s) => (),\n+   |            ^\n \n error: aborting due to 14 previous errors\n "}, {"sha": "7d365e8788f0080dc260874dcabd366c3c0c66ae", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "patch": "@@ -524,7 +524,7 @@ LL |         &mut Either::One(_t) => (),\n    |                          -- data moved here\n ...\n LL |         &mut Either::Two(_t) => (),\n-   |                          -- ... and here\n+   |                          -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n   --> $DIR/dont-suggest-ref.rs:233:26\n@@ -705,7 +705,7 @@ LL |         //~^ ERROR cannot move\n LL |         (&mut Either::One(_t),) => (),\n    |                           -- data moved here\n LL |         (&mut Either::Two(_t),) => (),\n-   |                           -- ... and here\n+   |                           -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n   --> $DIR/dont-suggest-ref.rs:290:27\n@@ -937,7 +937,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         ---------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |         |   |      |\n-   |         |   |      ... and here\n+   |         |   |      ...and here\n    |         |   data moved here\n    |         help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n@@ -953,7 +953,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |            -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |            |             |                |\n-   |            |             |                ... and here\n+   |            |             |                ...and here\n    |            |             data moved here\n    |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -969,7 +969,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |               -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |               |             |                |\n-   |               |             |                ... and here\n+   |               |             |                ...and here\n    |               |             data moved here\n    |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -986,12 +986,12 @@ LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n LL |         //~^ ERROR cannot move\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n-   |                       --               -- ... and here\n+   |                       --               -- ...and here\n    |                       |\n    |                       data moved here\n ...\n LL |         &(Either::Two(_t), Either::One(_u)) => (),\n-   |                       -- ... and here  -- ... and here\n+   |                       -- ...and here   -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n   --> $DIR/dont-suggest-ref.rs:391:23\n@@ -1019,7 +1019,7 @@ LL |         //~^ ERROR cannot move\n LL |         &(Either::One(_t), Either::Two(_u))\n    |         -----------------------------------\n    |         |             |                |\n-   |         |             |                ... and here\n+   |         |             |                ...and here\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1038,7 +1038,7 @@ LL |         //~^ ERROR cannot move\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         -----------------------------------\n    |         |             |                |\n-   |         |             |                ... and here\n+   |         |             |                ...and here\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1057,7 +1057,7 @@ LL |         //~^ ERROR cannot move\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         -----------------------------------\n    |         |             |                |\n-   |         |             |                ... and here\n+   |         |             |                ...and here\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1073,7 +1073,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         -------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |         |       |      |\n-   |         |       |      ... and here\n+   |         |       |      ...and here\n    |         |       data moved here\n    |         help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n@@ -1089,7 +1089,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |            ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |            |                 |                |\n-   |            |                 |                ... and here\n+   |            |                 |                ...and here\n    |            |                 data moved here\n    |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1105,7 +1105,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |               ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |               |                 |                |\n-   |               |                 |                ... and here\n+   |               |                 |                ...and here\n    |               |                 data moved here\n    |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1122,12 +1122,12 @@ LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n LL |         //~^ ERROR cannot move\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n-   |                           --               -- ... and here\n+   |                           --               -- ...and here\n    |                           |\n    |                           data moved here\n ...\n LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n-   |                           -- ... and here  -- ... and here\n+   |                           -- ...and here   -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n   --> $DIR/dont-suggest-ref.rs:443:27\n@@ -1155,7 +1155,7 @@ LL |         //~^ ERROR cannot move\n LL |         &mut (Either::One(_t), Either::Two(_u))\n    |         ---------------------------------------\n    |         |                 |                |\n-   |         |                 |                ... and here\n+   |         |                 |                ...and here\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1174,7 +1174,7 @@ LL |         //~^ ERROR cannot move\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         ---------------------------------------\n    |         |                 |                |\n-   |         |                 |                ... and here\n+   |         |                 |                ...and here\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1193,7 +1193,7 @@ LL |         //~^ ERROR cannot move\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         ---------------------------------------\n    |         |                 |                |\n-   |         |                 |                ... and here\n+   |         |                 |                ...and here\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1212,7 +1212,7 @@ LL |         //~^ ERROR cannot move\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         ---------------------------------------\n    |         |                 |                |\n-   |         |                 |                ... and here\n+   |         |                 |                ...and here\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n@@ -1290,7 +1290,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |           ^^^^--^^^^^--^^\n    |           |   |      |\n-   |           |   |      ... and here\n+   |           |   |      ...and here\n    |           |   data moved here\n    |           cannot move out of borrowed content\n    |           help: consider removing the `&`: `(X(_t), X(_u))`\n@@ -1307,7 +1307,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           ^^^^^^^^--^^^^^--^^\n    |           |       |      |\n-   |           |       |      ... and here\n+   |           |       |      ...and here\n    |           |       data moved here\n    |           cannot move out of borrowed content\n    |           help: consider removing the `&mut`: `(X(_t), X(_u))`"}]}