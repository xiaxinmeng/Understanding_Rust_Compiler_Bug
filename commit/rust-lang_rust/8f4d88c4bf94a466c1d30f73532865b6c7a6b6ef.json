{"sha": "8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef", "node_id": "C_kwDOAAsO6NoAKDhmNGQ4OGM0YmY5NGE0NjZjMWQzMGY3MzUzMjg2NWI2YzdhNmI2ZWY", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-02T11:41:56Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-25T06:08:37Z"}, "message": "Set the default deployment target for Macos ARM64 to 11.0.\n\n11.0 (Big Sur) is the first version which supports ARM64 so we use\nthat as default.", "tree": {"sha": "17ac57126f80b2864363a18cbf306451313c3eaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ac57126f80b2864363a18cbf306451313c3eaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef", "html_url": "https://github.com/rust-lang/rust/commit/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa180305675e6ec446f7b1c21cb33fbef5f68f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa180305675e6ec446f7b1c21cb33fbef5f68f31", "html_url": "https://github.com/rust-lang/rust/commit/fa180305675e6ec446f7b1c21cb33fbef5f68f31"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "db6aee59a5dd30cece69887ca7cb238285fd9384", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=8f4d88c4bf94a466c1d30f73532865b6c7a6b6ef", "patch": "@@ -13,8 +13,10 @@ pub fn opts(os: &str) -> TargetOptions {\n     // warnings about the usage of ELF TLS.\n     //\n     // Here we detect what version is being requested, defaulting to 10.7. ELF\n-    // TLS is flagged as enabled if it looks to be supported.\n-    let version = macos_deployment_target();\n+    // TLS is flagged as enabled if it looks to be supported. The architecture\n+    // only matters for default deployment target which is 11.0 for ARM64 and\n+    // 10.7 for everything else.\n+    let has_elf_tls = macos_deployment_target(\"x86_64\") >= (10, 7);\n \n     TargetOptions {\n         os: os.to_string(),\n@@ -31,7 +33,7 @@ pub fn opts(os: &str) -> TargetOptions {\n         has_rpath: true,\n         dll_suffix: \".dylib\".to_string(),\n         archive_format: \"darwin\".to_string(),\n-        has_elf_tls: version >= (10, 7),\n+        has_elf_tls,\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n         eh_frame_header: false,\n@@ -63,12 +65,17 @@ fn deployment_target(var_name: &str) -> Option<(u32, u32)> {\n         .and_then(|(a, b)| a.parse::<u32>().and_then(|a| b.parse::<u32>().map(|b| (a, b))).ok())\n }\n \n-fn macos_deployment_target() -> (u32, u32) {\n-    deployment_target(\"MACOSX_DEPLOYMENT_TARGET\").unwrap_or((10, 7))\n+fn macos_default_deployment_target(arch: &str) -> (u32, u32) {\n+    if arch == \"arm64\" { (11, 0) } else { (10, 7) }\n+}\n+\n+fn macos_deployment_target(arch: &str) -> (u32, u32) {\n+    deployment_target(\"MACOSX_DEPLOYMENT_TARGET\")\n+        .unwrap_or_else(|| macos_default_deployment_target(arch))\n }\n \n pub fn macos_llvm_target(arch: &str) -> String {\n-    let (major, minor) = macos_deployment_target();\n+    let (major, minor) = macos_deployment_target(arch);\n     format!(\"{}-apple-macosx{}.{}.0\", arch, major, minor)\n }\n "}]}