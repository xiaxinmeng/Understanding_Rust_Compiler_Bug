{"sha": "e7a3ada210727a6df1de38299e2177057ff43cef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YTNhZGEyMTA3MjdhNmRmMWRlMzgyOTllMjE3NzA1N2ZmNDNjZWY=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-05-26T21:15:54Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-05-26T21:15:54Z"}, "message": "Mention float workaround in Iterator::{min,max}", "tree": {"sha": "42eeda81d676f0dfca3675ec8bbb1ada7b2bb9df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42eeda81d676f0dfca3675ec8bbb1ada7b2bb9df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7a3ada210727a6df1de38299e2177057ff43cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7a3ada210727a6df1de38299e2177057ff43cef", "html_url": "https://github.com/rust-lang/rust/commit/e7a3ada210727a6df1de38299e2177057ff43cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7a3ada210727a6df1de38299e2177057ff43cef/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a28aa4036415d8aa713bf707842779b709935e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a28aa4036415d8aa713bf707842779b709935e", "html_url": "https://github.com/rust-lang/rust/commit/f6a28aa4036415d8aa713bf707842779b709935e"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "fcb14e9b77294f398ffff9b1ecb3b1f0213698c0", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e7a3ada210727a6df1de38299e2177057ff43cef/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7a3ada210727a6df1de38299e2177057ff43cef/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=e7a3ada210727a6df1de38299e2177057ff43cef", "patch": "@@ -2602,6 +2602,18 @@ pub trait Iterator {\n     /// If several elements are equally maximum, the last element is\n     /// returned. If the iterator is empty, [`None`] is returned.\n     ///\n+    /// Note that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\n+    /// incomparable. You can work around this by using [`Iterator::reduce`]:\n+    /// ```\n+    /// assert_eq!(\n+    ///     vec![2.4, f32::NAN, 1.3]\n+    ///         .into_iter()\n+    ///         .reduce(|a, b| f32::max(a, b))\n+    ///         .unwrap(),\n+    ///     2.4\n+    /// );\n+    /// ```\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -2625,8 +2637,20 @@ pub trait Iterator {\n \n     /// Returns the minimum element of an iterator.\n     ///\n-    /// If several elements are equally minimum, the first element is\n-    /// returned. If the iterator is empty, [`None`] is returned.\n+    /// If several elements are equally minimum, the first element is returned.\n+    /// If the iterator is empty, [`None`] is returned.\n+    ///\n+    /// Note that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\n+    /// incomparable. You can work around this by using [`Iterator::reduce`]:\n+    /// ```\n+    /// assert_eq!(\n+    ///     vec![2.4, f32::NAN, 1.3]\n+    ///         .into_iter()\n+    ///         .reduce(|a, b| f32::min(a, b))\n+    ///         .unwrap(),\n+    ///     1.3\n+    /// );\n+    /// ```\n     ///\n     /// # Examples\n     ///"}]}