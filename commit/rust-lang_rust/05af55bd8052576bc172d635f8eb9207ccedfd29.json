{"sha": "05af55bd8052576bc172d635f8eb9207ccedfd29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YWY1NWJkODA1MjU3NmJjMTcyZDYzNWY4ZWI5MjA3Y2NlZGZkMjk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T19:30:42Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T19:30:42Z"}, "message": "s/DocTestsOption/DocTests/g", "tree": {"sha": "3324a25df5ce813aca27def14979dcbb85777116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3324a25df5ce813aca27def14979dcbb85777116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05af55bd8052576bc172d635f8eb9207ccedfd29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlruBmIACgkQ/vbIBR0O\nATy15w//SKorPMpmYqWTKeHlg48vnSqSZbtXcudAyevZLqpv4txk8iBZhQKP5pv4\nUz7jPU3Ffgx4W9uzA+febvN4k7siwevQnHrzbQhT5gXgSQ5MjIjssW2d7Lxdp93T\n9/jz/PG6ntUTLYSuXDNBu1jXFx7QIWCGaUNVwKGr68oFShBOgCs4zYKVKn0OUPwT\n1DUa0/6O+/0iMWu/ZkXXpwrHpiYa8cHPjeyr1nir2HmPYhcQNd58vrSTvm5JcQDV\nKdSk3mkSzTPuu1lWXDTb0nHJ6pGa7U3hCEvJZjbFbiSi1BGhgg2IEwErayJcYIUQ\nZpB8LJUTQCSDkJ1GWvRUcN4I8gljgh2uSAvY+aGaGDhdgfrL84IXbJafLGDUnBw0\n2FvBH+gSFcf3V62XLTG1fjjwWaTmFgUvCvTjlYS5s581B/aSIk1+eTrVVYnNOaiC\nVZy0hVEJhB8dFHkqg3BuCVmNX3TSAsFxDJdgf1jtM+8OtH36unI6HHlqb8MvtEXM\nimSLhph5rMOtAYDHJl85WDd3mYh3nT6wnQojfVqrtGQ2scUbfwYyG82i9dHktBHK\nvdW+5AFZ0xOGgTS/fzRWpPwai7uzVOYPentv/Eyf8N+pci4QBb6U0h6lTIoPzaD3\n+idBO2Y1KdPIVdNltlJ2QinRGD3GmRIzEIPbLj9QFUI8uarVNoQ=\n=PF55\n-----END PGP SIGNATURE-----", "payload": "tree 3324a25df5ce813aca27def14979dcbb85777116\nparent 169f58b712e793ea43b90a6008a21b777bf4102f\nauthor kennytm <kennytm@gmail.com> 1525548642 +0800\ncommitter kennytm <kennytm@gmail.com> 1525548642 +0800\n\ns/DocTestsOption/DocTests/g\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05af55bd8052576bc172d635f8eb9207ccedfd29", "html_url": "https://github.com/rust-lang/rust/commit/05af55bd8052576bc172d635f8eb9207ccedfd29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05af55bd8052576bc172d635f8eb9207ccedfd29/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "169f58b712e793ea43b90a6008a21b777bf4102f", "url": "https://api.github.com/repos/rust-lang/rust/commits/169f58b712e793ea43b90a6008a21b777bf4102f", "html_url": "https://github.com/rust-lang/rust/commit/169f58b712e793ea43b90a6008a21b777bf4102f"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "10027640272913a79dad59a70868d05e85a4aabb", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=05af55bd8052576bc172d635f8eb9207ccedfd29", "patch": "@@ -25,7 +25,7 @@ use compile;\n use install;\n use dist;\n use util::{exe, libdir, add_lib_path};\n-use {Build, Mode, DocTestsOption};\n+use {Build, Mode, DocTests};\n use cache::{INTERNER, Interned, Cache};\n use check;\n use test;\n@@ -591,7 +591,7 @@ impl<'a> Builder<'a> {\n                 format!(\"{} {}\", env::var(\"RUSTFLAGS\").unwrap_or_default(), extra_args));\n         }\n \n-        let want_rustdoc = self.doc_tests != DocTestsOption::No;\n+        let want_rustdoc = self.doc_tests != DocTests::No;\n \n         // Customize the compiler we're running. Specify the compiler to cargo\n         // as our shim and then pass it some various options used to configure\n@@ -1415,7 +1415,7 @@ mod __test {\n             test_args: vec![],\n             rustc_args: vec![],\n             fail_fast: true,\n-            doc_tests: DocTestsOption::No,\n+            doc_tests: DocTests::No,\n         };\n \n         let build = Build::new(config);"}, {"sha": "5315a3028ffa9c05fa8d3839ff52b223ddad9a4d", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=05af55bd8052576bc172d635f8eb9207ccedfd29", "patch": "@@ -19,7 +19,7 @@ use std::process;\n \n use getopts::Options;\n \n-use {Build, DocTestsOption};\n+use {Build, DocTests};\n use config::Config;\n use metadata;\n use builder::Builder;\n@@ -62,7 +62,7 @@ pub enum Subcommand {\n         test_args: Vec<String>,\n         rustc_args: Vec<String>,\n         fail_fast: bool,\n-        doc_tests: DocTestsOption,\n+        doc_tests: DocTests,\n     },\n     Bench {\n         paths: Vec<PathBuf>,\n@@ -326,11 +326,11 @@ Arguments:\n                     rustc_args: matches.opt_strs(\"rustc-args\"),\n                     fail_fast: !matches.opt_present(\"no-fail-fast\"),\n                     doc_tests: if matches.opt_present(\"doc\") {\n-                        DocTestsOption::Only\n+                        DocTests::Only\n                     } else if matches.opt_present(\"no-doc\") {\n-                        DocTestsOption::No\n+                        DocTests::No\n                     } else {\n-                        DocTestsOption::Yes\n+                        DocTests::Yes\n                     }\n                 }\n             }\n@@ -418,10 +418,10 @@ impl Subcommand {\n         }\n     }\n \n-    pub fn doc_tests(&self) -> DocTestsOption {\n+    pub fn doc_tests(&self) -> DocTests {\n         match *self {\n             Subcommand::Test { doc_tests, .. } => doc_tests,\n-            _ => DocTestsOption::Yes,\n+            _ => DocTests::Yes,\n         }\n     }\n }"}, {"sha": "e53fef06786130e03c26611efb51998211c60b76", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=05af55bd8052576bc172d635f8eb9207ccedfd29", "patch": "@@ -211,7 +211,7 @@ pub struct Compiler {\n }\n \n #[derive(PartialEq, Eq, Copy, Clone, Debug)]\n-pub enum DocTestsOption {\n+pub enum DocTests {\n     // Default, run normal tests and doc tests.\n     Yes,\n     // Do not run any doc tests.\n@@ -243,7 +243,7 @@ pub struct Build {\n     rustfmt_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n-    doc_tests: DocTestsOption,\n+    doc_tests: DocTests,\n     verbosity: usize,\n \n     // Targets for which to build."}, {"sha": "cbb952bab61b2c2ee6221f161a49a1d76037dd5b", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05af55bd8052576bc172d635f8eb9207ccedfd29/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=05af55bd8052576bc172d635f8eb9207ccedfd29", "patch": "@@ -32,7 +32,7 @@ use dist;\n use native;\n use tool::{self, Tool};\n use util::{self, dylib_path, dylib_path_var};\n-use {Mode, DocTestsOption};\n+use {Mode, DocTests};\n use toolstate::ToolState;\n \n const ADB_TEST_DIR: &str = \"/data/tmp/work\";\n@@ -1520,13 +1520,13 @@ impl Step for Crate {\n             cargo.arg(\"--no-fail-fast\");\n         }\n         match builder.doc_tests {\n-            DocTestsOption::Only => {\n+            DocTests::Only => {\n                 cargo.arg(\"--doc\");\n             }\n-            DocTestsOption::No => {\n+            DocTests::No => {\n                 cargo.args(&[\"--lib\", \"--bins\", \"--examples\", \"--tests\", \"--benches\"]);\n             }\n-            DocTestsOption::Yes => {}\n+            DocTests::Yes => {}\n         }\n \n         cargo.arg(\"-p\").arg(krate);"}]}