{"sha": "538288176a22b4d3755df085783f84d476386019", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzODI4ODE3NmEyMmI0ZDM3NTVkZjA4NTc4M2Y4NGQ0NzYzODYwMTk=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-16T02:02:14Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-05T19:38:12Z"}, "message": "Implement macro re-export\n\nFixes #17103.", "tree": {"sha": "231a4cd0d91a8cdf4b4d9d315465e06c79a8a319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/231a4cd0d91a8cdf4b4d9d315465e06c79a8a319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538288176a22b4d3755df085783f84d476386019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538288176a22b4d3755df085783f84d476386019", "html_url": "https://github.com/rust-lang/rust/commit/538288176a22b4d3755df085783f84d476386019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538288176a22b4d3755df085783f84d476386019/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2a9c04e192926fde1a8e886b55e4c2b6e0e56cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a9c04e192926fde1a8e886b55e4c2b6e0e56cb", "html_url": "https://github.com/rust-lang/rust/commit/e2a9c04e192926fde1a8e886b55e4c2b6e0e56cb"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "5056ada6a8c117d0fcd2e2b3f1905baec1f6e4c8", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -275,6 +275,8 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n                 deriving_hash_type_parameter: sess.features.borrow().default_type_params,\n                 enable_quotes: sess.features.borrow().quote,\n                 recursion_limit: sess.recursion_limit.get(),\n+                reexported_macros: syntax::ext::tt::reexport::gather(sess.diagnostic(),\n+                                                                     &krate),\n             };\n             let ret = syntax::ext::expand::expand_crate(&sess.parse_sess,\n                                               cfg,"}, {"sha": "d4be46d025ecf8494605d78fcb7d812d7de46258", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -616,7 +616,12 @@ pub fn expand_item_mac(it: P<ast::Item>,\n                                                          imported_from, tts);\n \n                     fld.cx.syntax_env.insert(intern(name.as_slice()), ext);\n-                    if attr::contains_name(it.attrs.as_slice(), \"macro_export\") {\n+\n+                    if match imported_from {\n+                        None => attr::contains_name(it.attrs.as_slice(), \"macro_export\"),\n+                        Some(_) => fld.cx.ecfg.reexported_macros.iter()\n+                                       .any(|e| e.as_slice() == name.as_slice()),\n+                    } {\n                         fld.cx.exported_macros.push(it);\n                     }\n \n@@ -1156,6 +1161,7 @@ pub struct ExpansionConfig {\n     pub deriving_hash_type_parameter: bool,\n     pub enable_quotes: bool,\n     pub recursion_limit: uint,\n+    pub reexported_macros: Vec<String>,\n }\n \n impl ExpansionConfig {\n@@ -1165,6 +1171,7 @@ impl ExpansionConfig {\n             deriving_hash_type_parameter: false,\n             enable_quotes: false,\n             recursion_limit: 64,\n+            reexported_macros: vec![],\n         }\n     }\n }"}, {"sha": "104f37872535c09aefc272d829345964b0612dff", "filename": "src/libsyntax/ext/tt/reexport.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Fext%2Ftt%2Freexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Fext%2Ftt%2Freexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Freexport.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Defines the crate attribute syntax for macro re-export.\n+\n+use ast;\n+use attr::AttrMetaMethods;\n+use diagnostic::SpanHandler;\n+\n+/// Return a vector of the names of all macros re-exported from the crate.\n+pub fn gather(diag: &SpanHandler, krate: &ast::Crate) -> Vec<String> {\n+    let usage = \"malformed macro_reexport attribute, expected \\\n+                 #![macro_reexport(ident, ident, ...)]\";\n+\n+    let mut reexported: Vec<String> = vec!();\n+    for attr in krate.attrs.iter() {\n+        if !attr.check_name(\"macro_reexport\") {\n+            continue;\n+        }\n+\n+        match attr.meta_item_list() {\n+            None => diag.span_err(attr.span, usage),\n+            Some(list) => for mi in list.iter() {\n+                match mi.node {\n+                    ast::MetaWord(ref word)\n+                        => reexported.push(word.to_string()),\n+                    _ => diag.span_err(mi.span, usage),\n+                }\n+            }\n+        }\n+    }\n+\n+    reexported\n+}"}, {"sha": "0503d88cca201a8a2d79cc003cc8e187360f5b41", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -104,5 +104,6 @@ pub mod ext {\n         pub mod transcribe;\n         pub mod macro_parser;\n         pub mod macro_rules;\n+        pub mod reexport;\n     }\n }"}, {"sha": "bd00b33f280126f022742a56390fcc00a2844dde", "filename": "src/test/auxiliary/macro_reexport_1.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#![feature(macro_rules)]\n+\n+#[macro_export]\n+macro_rules! reexported {\n+    () => ( 3u )\n+}"}, {"sha": "3b68d47c55861c6bb21011fc4c565e19ff09955e", "filename": "src/test/auxiliary/macro_reexport_2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#![feature(phase)]\n+\n+#![macro_reexport(reexported)]\n+\n+#[phase(plugin)]\n+extern crate macro_reexport_1;"}, {"sha": "ea3074db124d67344085c5e515867734ccf55834", "filename": "src/test/compile-fail/macro-reexport-malformed-1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![macro_reexport]  //~ ERROR malformed macro_reexport attribute\n+\n+fn main() { }"}, {"sha": "3daa089d2c677363b9f2361e30996d6c81ba4a66", "filename": "src/test/compile-fail/macro-reexport-malformed-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![macro_reexport=\"foo\"]  //~ ERROR malformed macro_reexport attribute\n+\n+fn main() { }"}, {"sha": "b3c0bf95ce981d7dc43a34a9ed079e1a75a98ab1", "filename": "src/test/compile-fail/macro-reexport-malformed-3.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![macro_reexport(foo=\"bar\")]  //~ ERROR malformed macro_reexport attribute\n+\n+fn main() { }"}, {"sha": "bc3632e76ba495174d65097d3ade06408627a226", "filename": "src/test/run-pass/macro-reexport.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538288176a22b4d3755df085783f84d476386019/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs?ref=538288176a22b4d3755df085783f84d476386019", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:macro_reexport_1.rs\n+// aux-build:macro_reexport_2.rs\n+// ignore-stage1\n+\n+#![feature(phase)]\n+\n+#[phase(plugin)]\n+extern crate macro_reexport_2;\n+\n+fn main() {\n+    assert_eq!(reexported!(), 3u);\n+}"}]}