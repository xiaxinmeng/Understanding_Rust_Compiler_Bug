{"sha": "47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YzdlNDMwZDM1ZmM1YjQ5YjM2ZDJmYjViNWE3NTQ5NzA1OWIwNWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-16T15:36:49Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-16T15:36:49Z"}, "message": "Remove left over dead code from suggestion diagnostic refactoring", "tree": {"sha": "a70915b851a69126eaf997066d83fad90032564d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a70915b851a69126eaf997066d83fad90032564d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAloNsJEACgkQpp+NIls6\n19lXnQ//bweR1GcC2+wZkC8fO1vyC1ekuPvLsd+RIy222+3zpO3fZ7J/T4dFwNPY\n+RPjZH1eMhKkDq2h+ac36xqfmypMo5I6As131uLIMVpcGLGnqoYC9Hx5nveEXIiK\nD/D8eRlXoG7ekGnXFp1epAzbeowuLD75EcINpVRrkFq51yMKjkxabynorQZDVue6\ntAFaO71KWbIegBnfDFEfKC5beegpA2xXxIlLqQR6wumSP1dlSViN8mYjiMULkP+G\nPJBdiKA6r51FMQFpc3XjI4IkFj9rzR/0wkw08NBFcU+VRS9LRuVSP4ttxmyznd7f\nFd2H4nsOLKop5h37c9vrT5YYzgaCgjcDCr3mXE9PIE3jVXv62gI4lP1keDI4QKSx\nsvMvCctE6inK79keoarIu1HN22Ggge1x7wUQtcAyYTYc32jqwqlxvx8z1hRWvVr9\nJQ8aKoyK5AZVbO1rkdN/aVdZswCDrtSVc4pJ8GnlKPWlaRLMua/m+Pb/1QgtEecM\nvzwoom7lyHVsfFDjBDdQH7I8ZVxwwIW/dKG0zDercQVWZG/oEPPoN8SGRD1zc3RT\nUyD2hFfDS5y3G9FalP/CGnfW9Xno41ytRuCX7xFUL4nwdb0bRv8k9yzBtIcjdoZO\n7mY5TX4dzUNHl3FA6bf9PihI9lyM3U8y73v1Yq9I2l3DY+6A+xw=\n=MnKs\n-----END PGP SIGNATURE-----", "payload": "tree a70915b851a69126eaf997066d83fad90032564d\nparent c81f201d48c4f25d32f8b0f76103c9f794d37851\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1510846609 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1510846609 +0100\n\nRemove left over dead code from suggestion diagnostic refactoring\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "html_url": "https://github.com/rust-lang/rust/commit/47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c81f201d48c4f25d32f8b0f76103c9f794d37851", "url": "https://api.github.com/repos/rust-lang/rust/commits/c81f201d48c4f25d32f8b0f76103c9f794d37851", "html_url": "https://github.com/rust-lang/rust/commit/c81f201d48c4f25d32f8b0f76103c9f794d37851"}], "stats": {"total": 130, "additions": 28, "deletions": 102}, "files": [{"sha": "221c75186e9c8b5c86df793e7a0069e4de418f5a", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -12,7 +12,6 @@ use CodeSuggestion;\n use SubstitutionPart;\n use Substitution;\n use Level;\n-use RenderSpan;\n use std::fmt;\n use syntax_pos::{MultiSpan, Span};\n use snippet::Style;\n@@ -40,7 +39,7 @@ pub struct SubDiagnostic {\n     pub level: Level,\n     pub message: Vec<(String, Style)>,\n     pub span: MultiSpan,\n-    pub render_span: Option<RenderSpan>,\n+    pub render_span: Option<MultiSpan>,\n }\n \n #[derive(PartialEq, Eq)]\n@@ -307,7 +306,7 @@ impl Diagnostic {\n            level: Level,\n            message: &str,\n            span: MultiSpan,\n-           render_span: Option<RenderSpan>) {\n+           render_span: Option<MultiSpan>) {\n         let sub = SubDiagnostic {\n             level,\n             message: vec![(message.to_owned(), Style::NoStyle)],\n@@ -323,7 +322,7 @@ impl Diagnostic {\n                            level: Level,\n                            message: Vec<(String, Style)>,\n                            span: MultiSpan,\n-                           render_span: Option<RenderSpan>) {\n+                           render_span: Option<MultiSpan>) {\n         let sub = SubDiagnostic {\n             level,\n             message,"}, {"sha": "57523d2c058dcde8cc5845f6ae3484d23eb02f93", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 23, "deletions": 42, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -13,7 +13,6 @@ use self::Destination::*;\n use syntax_pos::{DUMMY_SP, FileMap, Span, MultiSpan};\n \n use {Level, CodeSuggestion, DiagnosticBuilder, SubDiagnostic, CodeMapper, DiagnosticId};\n-use RenderSpan::*;\n use snippet::{Annotation, AnnotationType, Line, MultilineAnnotation, StyledString, Style};\n use styled_buffer::StyledBuffer;\n \n@@ -35,6 +34,7 @@ impl Emitter for EmitterWriter {\n     fn emit(&mut self, db: &DiagnosticBuilder) {\n         let mut primary_span = db.span.clone();\n         let mut children = db.children.clone();\n+        let mut suggestions: &[_] = &[];\n \n         if let Some((sugg, rest)) = db.suggestions.split_first() {\n             if rest.is_empty() &&\n@@ -60,14 +60,7 @@ impl Emitter for EmitterWriter {\n                 // to be consistent. We could try to figure out if we can\n                 // make one (or the first one) inline, but that would give\n                 // undue importance to a semi-random suggestion\n-                for sugg in &db.suggestions {\n-                    children.push(SubDiagnostic {\n-                        level: Level::Help,\n-                        message: Vec::new(),\n-                        span: MultiSpan::new(),\n-                        render_span: Some(Suggestion(sugg.clone())),\n-                    });\n-                }\n+                suggestions = &db.suggestions;\n             }\n         }\n \n@@ -76,7 +69,8 @@ impl Emitter for EmitterWriter {\n                                    &db.styled_message(),\n                                    &db.code,\n                                    &primary_span,\n-                                   &children);\n+                                   &children,\n+                                   &suggestions);\n     }\n }\n \n@@ -1179,7 +1173,8 @@ impl EmitterWriter {\n                              message: &Vec<(String, Style)>,\n                              code: &Option<DiagnosticId>,\n                              span: &MultiSpan,\n-                             children: &Vec<SubDiagnostic>) {\n+                             children: &Vec<SubDiagnostic>,\n+                             suggestions: &[CodeSuggestion]) {\n         let max_line_num = self.get_max_line_num(span, children);\n         let max_line_num_len = max_line_num.to_string().len();\n \n@@ -1198,37 +1193,23 @@ impl EmitterWriter {\n                 }\n                 if !self.short_message {\n                     for child in children {\n-                        match child.render_span {\n-                            Some(FullSpan(ref msp)) => {\n-                                match self.emit_message_default(msp,\n-                                                                &child.styled_message(),\n-                                                                &None,\n-                                                                &child.level,\n-                                                                max_line_num_len,\n-                                                                true) {\n-                                    Err(e) => panic!(\"failed to emit error: {}\", e),\n-                                    _ => ()\n-                                }\n-                            }\n-                            Some(Suggestion(ref cs)) => {\n-                                match self.emit_suggestion_default(cs,\n-                                                                   &child.level,\n-                                                                   max_line_num_len) {\n-                                    Err(e) => panic!(\"failed to emit error: {}\", e),\n-                                    _ => ()\n-                                }\n-                            }\n-                            None => {\n-                                match self.emit_message_default(&child.span,\n-                                                                &child.styled_message(),\n-                                                                &None,\n-                                                                &child.level,\n-                                                                max_line_num_len,\n-                                                                true) {\n-                                    Err(e) => panic!(\"failed to emit error: {}\", e),\n-                                    _ => (),\n-                                }\n-                            }\n+                        let span = child.render_span.as_ref().unwrap_or(&child.span);\n+                        match self.emit_message_default(&span,\n+                                                        &child.styled_message(),\n+                                                        &None,\n+                                                        &child.level,\n+                                                        max_line_num_len,\n+                                                        true) {\n+                            Err(e) => panic!(\"failed to emit error: {}\", e),\n+                            _ => ()\n+                        }\n+                    }\n+                    for sugg in suggestions {\n+                        match self.emit_suggestion_default(sugg,\n+                                                           &Level::Help,\n+                                                           max_line_num_len) {\n+                            Err(e) => panic!(\"failed to emit error: {}\", e),\n+                            _ => ()\n                         }\n                     }\n                 }"}, {"sha": "e83ac8831de25173d2b1a204df5476ccd31d2293", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -52,20 +52,6 @@ mod lock;\n \n use syntax_pos::{BytePos, Loc, FileLinesResult, FileMap, FileName, MultiSpan, Span, NO_EXPANSION};\n \n-#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n-pub enum RenderSpan {\n-    /// A FullSpan renders with both with an initial line for the\n-    /// message, prefixed by file:linenum, followed by a summary of\n-    /// the source code covered by the span.\n-    FullSpan(MultiSpan),\n-\n-    /// A suggestion renders with both with an initial line for the\n-    /// message, prefixed by file:linenum, followed by a summary\n-    /// of hypothetical source code, where each `String` is spliced\n-    /// into the lines in place of the code covered by each span.\n-    Suggestion(CodeSuggestion),\n-}\n-\n #[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub struct CodeSuggestion {\n     /// Each substitute can have multiple variants due to multiple"}, {"sha": "e739c6d04e18ae89886c2a3af0e3083141b3c3f5", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -22,7 +22,7 @@\n use codemap::{CodeMap, FilePathMapping};\n use syntax_pos::{self, MacroBacktrace, Span, SpanLabel, MultiSpan};\n use errors::registry::Registry;\n-use errors::{DiagnosticBuilder, SubDiagnostic, RenderSpan, CodeSuggestion, CodeMapper};\n+use errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, CodeMapper};\n use errors::DiagnosticId;\n use errors::emitter::Emitter;\n \n@@ -188,7 +188,7 @@ impl Diagnostic {\n             code: None,\n             level: db.level.to_str(),\n             spans: db.render_span.as_ref()\n-                     .map(|sp| DiagnosticSpan::from_render_span(sp, je))\n+                     .map(|sp| DiagnosticSpan::from_multispan(sp, je))\n                      .unwrap_or_else(|| DiagnosticSpan::from_multispan(&db.span, je)),\n             children: vec![],\n             rendered: None,\n@@ -300,16 +300,6 @@ impl DiagnosticSpan {\n                       })\n                       .collect()\n     }\n-\n-    fn from_render_span(rsp: &RenderSpan, je: &JsonEmitter) -> Vec<DiagnosticSpan> {\n-        match *rsp {\n-            RenderSpan::FullSpan(ref msp) =>\n-                DiagnosticSpan::from_multispan(msp, je),\n-            // regular diagnostics don't produce this anymore\n-            // FIXME(oli_obk): remove it entirely\n-            RenderSpan::Suggestion(_) => unreachable!(),\n-        }\n-    }\n }\n \n impl DiagnosticSpanLine {"}, {"sha": "600064c71dcc6a7fcf1d39135bceaef5af24a523", "filename": "src/test/ui/impl-trait/universal_wrong_bounds.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -9,7 +9,6 @@ error[E0405]: cannot find trait `Debug` in this scope\n    |\n 21 | fn wants_debug(g: impl Debug) { }\n    |                        ^^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 13 | use std::fmt::Debug;\n@@ -20,7 +19,6 @@ error[E0405]: cannot find trait `Debug` in this scope\n    |\n 22 | fn wants_display(g: impl Debug) { }\n    |                          ^^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 13 | use std::fmt::Debug;"}, {"sha": "5777c24ae88899118615a165c6ad797de2180682", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -50,7 +50,6 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                    ^ not interpreted as comparison\n 27 |                    4);\n    |                    - interpreted as generic arguments\n-   |\n help: try comparing the casted value\n    |\n 23 |     println!(\"{}\", (a\n@@ -65,7 +64,6 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                    ^ not interpreted as comparison\n 36 |                    5);\n    |                    - interpreted as generic arguments\n-   |\n help: try comparing the casted value\n    |\n 28 |     println!(\"{}\", (a"}, {"sha": "e125d74e28ffae7d9e9a5625b5506acde523253b", "filename": "src/test/ui/issue-35675.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fissue-35675.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fissue-35675.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-35675.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -12,7 +12,6 @@ error[E0425]: cannot find function `Apple` in this scope\n    |\n 23 |     Apple(5)\n    |     ^^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 12 | use Fruit::Apple;\n@@ -32,7 +31,6 @@ error[E0425]: cannot find function `Apple` in this scope\n    |\n 31 |     Apple(5)\n    |     ^^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 12 | use Fruit::Apple;"}, {"sha": "52d798a2ca5fb58ddce17689a3732e6a5162b4f1", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0425]: cannot find value `A` in module `namespaced_enums`\n    |\n 15 |     let _ = namespaced_enums::A;\n    |                               ^ not found in `namespaced_enums`\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 14 | use namespaced_enums::Foo::A;\n@@ -14,7 +13,6 @@ error[E0425]: cannot find function `B` in module `namespaced_enums`\n    |\n 18 |     let _ = namespaced_enums::B(10);\n    |                               ^ not found in `namespaced_enums`\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 14 | use namespaced_enums::Foo::B;\n@@ -25,7 +23,6 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n    |\n 21 |     let _ = namespaced_enums::C { a: 10 };\n    |                               ^ not found in `namespaced_enums`\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 14 | use namespaced_enums::Foo::C;"}, {"sha": "322a1fea52eeddee929081377c31d1696cd716bb", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0574]: expected struct, variant or union type, found enum `Result`\n    |\n 19 |         Result {\n    |         ^^^^^^ not a struct, variant or union type\n-   |\n help: possible better candidates are found in other modules, you can import them into scope\n    |\n 12 | use std::fmt::Result;"}, {"sha": "bdc4fb0d34970f48c84650756a8b988d00a13362", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n    |\n 16 |     E { name: \"foobar\" }; //~ ERROR unresolved struct, variant or union type `E`\n    |     ^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use SomeEnum::E;"}, {"sha": "6038c683e436b66a65b657d6c09c2b8281171a5c", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0405]: cannot find trait `Mul` in this scope\n    |\n 53 | impl Mul for Foo {\n    |      ^^^ not found in this scope\n-   |\n help: possible candidates are found in other modules, you can import them into scope\n    |\n 11 | use mul1::Mul;\n@@ -18,7 +17,6 @@ error[E0412]: cannot find type `Mul` in this scope\n    |\n 72 | fn getMul() -> Mul {\n    |                ^^^ not found in this scope\n-   |\n help: possible candidates are found in other modules, you can import them into scope\n    |\n 11 | use mul1::Mul;\n@@ -42,7 +40,6 @@ error[E0405]: cannot find trait `Div` in this scope\n    |\n 88 | impl Div for Foo {\n    |      ^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use std::ops::Div;"}, {"sha": "0ae8052758dacf51de6833c6fdb01be65b0b222e", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0405]: cannot find trait `T` in this scope\n    |\n 28 | impl T for Foo { }\n    |      ^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use foo::bar::T;"}, {"sha": "b26a8cdacb029038d6b648a4972b4d3a3a244d6f", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0405]: cannot find trait `OuterTrait` in this scope\n    |\n 25 | impl OuterTrait for Foo {}\n    |      ^^^^^^^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 18 | use issue_21221_3::outer::OuterTrait;"}, {"sha": "0a22d8e1fe1ad6f8db4e6782a4adee42b4198ff7", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0405]: cannot find trait `T` in this scope\n    |\n 20 | impl T for Foo {}\n    |      ^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 18 | use issue_21221_4::T;"}, {"sha": "26ff7e70fd073480022c97ec3e83512175ae9bce", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0404]: expected trait, found type alias `Foo`\n    |\n 20 | impl Foo for S { //~ ERROR expected trait, found type alias `Foo`\n    |      ^^^ type aliases cannot be used for traits\n-   |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 14 | use issue_3907::Foo;"}, {"sha": "cb459ae474506ded2850f75407bc69ff06fde009", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -7,7 +7,6 @@ error[E0423]: expected value, found struct `Z`\n    |         did you mean `S`?\n    |         constructor is not visible here due to private fields\n    |         did you mean `Z { /* fields */ }`?\n-   |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 22 |     use m::n::Z;\n@@ -21,7 +20,6 @@ error[E0423]: expected value, found struct `S`\n    |     |\n    |     constructor is not visible here due to private fields\n    |     did you mean `S { /* fields */ }`?\n-   |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 32 | use m::S;\n@@ -35,7 +33,6 @@ error[E0423]: expected value, found struct `xcrate::S`\n    |     |\n    |     constructor is not visible here due to private fields\n    |     did you mean `xcrate::S { /* fields */ }`?\n-   |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 32 | use m::S;"}, {"sha": "401825367dd9b9a901f208e73413e07edbb92c10", "filename": "src/test/ui/resolve/use_suggestion_placement.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0412]: cannot find type `Path` in this scope\n    |\n 25 |     type Bar = Path;\n    |                ^^^^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 21 |     use std::path::Path;\n@@ -14,7 +13,6 @@ error[E0425]: cannot find value `A` in this scope\n    |\n 30 |     let _ = A;\n    |             ^ not found in this scope\n-   |\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use m::A;\n@@ -25,7 +23,6 @@ error[E0412]: cannot find type `HashMap` in this scope\n    |\n 35 |     type Dict<K, V> = HashMap<K, V>;\n    |                       ^^^^^^^ not found in this scope\n-   |\n help: possible candidates are found in other modules, you can import them into scope\n    |\n 11 | use std::collections::HashMap;"}, {"sha": "5e7a492ca2adafb06dbae0ed2297756e2caf9c56", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0404]: expected trait, found type parameter `Add`\n    |\n 15 | impl<T: Clone, Add> Add for Foo<T> {\n    |                     ^^^ not a trait\n-   |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 13 | use std::ops::Add;"}, {"sha": "e865b5192a40758a7540e1537093b901b89b1add", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n    |\n 12 |     let x = \"Hello \" + \"World!\";\n    |             ^^^^^^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n-   |\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n 12 |     let x = \"Hello \".to_owned() + \"World!\";"}, {"sha": "672b0718a02d345eafbc33bb807b4ea51141c6f9", "filename": "src/test/ui/span/missing-unit-argument.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c7e430d35fc5b49b36d2fb5b5a75497059b05b/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr?ref=47c7e430d35fc5b49b36d2fb5b5a75497059b05b", "patch": "@@ -3,7 +3,6 @@ error[E0061]: this function takes 1 parameter but 0 parameters were supplied\n    |\n 21 |     let _: Result<(), String> = Ok();\n    |                                 ^^^^\n-   |\n help: expected the unit value `()`; create it with empty parentheses\n    |\n 21 |     let _: Result<(), String> = Ok(());\n@@ -35,7 +34,6 @@ error[E0061]: this function takes 1 parameter but 0 parameters were supplied\n ...\n 24 |     bar();\n    |     ^^^^^\n-   |\n help: expected the unit value `()`; create it with empty parentheses\n    |\n 24 |     bar(());\n@@ -49,7 +47,6 @@ error[E0061]: this function takes 1 parameter but 0 parameters were supplied\n ...\n 25 |     S.baz();\n    |       ^^^\n-   |\n help: expected the unit value `()`; create it with empty parentheses\n    |\n 25 |     S.baz(());\n@@ -63,7 +60,6 @@ error[E0061]: this function takes 1 parameter but 0 parameters were supplied\n ...\n 26 |     S.generic::<()>();\n    |       ^^^^^^^\n-   |\n help: expected the unit value `()`; create it with empty parentheses\n    |\n 26 |     S.generic::<()>(());"}]}