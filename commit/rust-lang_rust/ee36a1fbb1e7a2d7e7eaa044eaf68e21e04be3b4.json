{"sha": "ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMzZhMWZiYjFlN2EyZDdlN2VhYTA0NGVhZjY4ZTIxZTA0YmUzYjQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T11:18:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T11:18:43Z"}, "message": "Remove workaround for stack_{load,store}.i128 not being implemented", "tree": {"sha": "1a7e2c2fc40c78344def0b60538ebc4063f42882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a7e2c2fc40c78344def0b60538ebc4063f42882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4", "html_url": "https://github.com/rust-lang/rust/commit/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c980276d81b727bb8efcbe63f51866ba19793a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c980276d81b727bb8efcbe63f51866ba19793a0", "html_url": "https://github.com/rust-lang/rust/commit/9c980276d81b727bb8efcbe63f51866ba19793a0"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "d08d878c45b6f4f61810069c4cf48745a64bfd57", "filename": "src/pointer.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4/src%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4/src%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpointer.rs?ref=ee36a1fbb1e7a2d7e7eaa044eaf68e21e04be3b4", "patch": "@@ -168,13 +168,7 @@ impl Pointer {\n         match self.base {\n             PointerBase::Addr(base_addr) => fx.bcx.ins().load(ty, flags, base_addr, self.offset),\n             PointerBase::Stack(stack_slot) => {\n-                if ty == types::I128 || ty.is_vector() {\n-                    // WORKAROUND for stack_load.i128 and stack_load.iXxY not being implemented\n-                    let base_addr = fx.bcx.ins().stack_addr(fx.pointer_type, stack_slot, 0);\n-                    fx.bcx.ins().load(ty, flags, base_addr, self.offset)\n-                } else {\n-                    fx.bcx.ins().stack_load(ty, stack_slot, self.offset)\n-                }\n+                fx.bcx.ins().stack_load(ty, stack_slot, self.offset)\n             }\n             PointerBase::Dangling(_align) => unreachable!(),\n         }\n@@ -191,14 +185,7 @@ impl Pointer {\n                 fx.bcx.ins().store(flags, value, base_addr, self.offset);\n             }\n             PointerBase::Stack(stack_slot) => {\n-                let val_ty = fx.bcx.func.dfg.value_type(value);\n-                if val_ty == types::I128 || val_ty.is_vector() {\n-                    // WORKAROUND for stack_store.i128 and stack_store.iXxY not being implemented\n-                    let base_addr = fx.bcx.ins().stack_addr(fx.pointer_type, stack_slot, 0);\n-                    fx.bcx.ins().store(flags, value, base_addr, self.offset);\n-                } else {\n-                    fx.bcx.ins().stack_store(value, stack_slot, self.offset);\n-                }\n+                fx.bcx.ins().stack_store(value, stack_slot, self.offset);\n             }\n             PointerBase::Dangling(_align) => unreachable!(),\n         }"}]}