{"sha": "ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiN2Q3NWQ4OWJiY2E4OTY4YzFlZGQ1YTY5ZDkyMWIzMDZjYTBjYmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-22T00:38:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-09T02:16:34Z"}, "message": "Cleanups in parse_sep_and_kleene_op.", "tree": {"sha": "36142e8da1e82346689a6ce57e768008f242d8ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36142e8da1e82346689a6ce57e768008f242d8ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "html_url": "https://github.com/rust-lang/rust/commit/ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab7d75d89bbca8968c1edd5a69d921b306ca0cba/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e793c71b5bd413b66d7f240f175493876847b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e793c71b5bd413b66d7f240f175493876847b8d", "html_url": "https://github.com/rust-lang/rust/commit/1e793c71b5bd413b66d7f240f175493876847b8d"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "8475ea8000b2ac121c192aceb83d0ab4e0dbe4d6", "filename": "src/libsyntax/ext/tt/quoted.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ab7d75d89bbca8968c1edd5a69d921b306ca0cba/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab7d75d89bbca8968c1edd5a69d921b306ca0cba/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs?ref=ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "patch": "@@ -400,18 +400,13 @@ fn parse_sep_and_kleene_op(\n ) -> (Option<Token>, KleeneOp) {\n     // We basically look at two token trees here, denoted as #1 and #2 below\n     let span = match parse_kleene_op(input, span) {\n-        // #1 is a `?` (needs feature gate)\n-        Ok(Ok((op, _op1_span))) if op == KleeneOp::ZeroOrOne => {\n-            return (None, op);\n-        }\n-\n-        // #1 is a `+` or `*` KleeneOp\n+        // #1 is a `?`, `+`, or `*` KleeneOp\n         Ok(Ok((op, _))) => return (None, op),\n \n         // #1 is a separator followed by #2, a KleeneOp\n         Ok(Err(token)) => match parse_kleene_op(input, token.span) {\n             // #2 is the `?` Kleene op, which does not take a separator (error)\n-            Ok(Ok((op, _op2_span))) if op == KleeneOp::ZeroOrOne => {\n+            Ok(Ok((KleeneOp::ZeroOrOne, _))) => {\n                 // Error!\n                 sess.span_diagnostic.span_err(\n                     token.span,\n@@ -425,11 +420,8 @@ fn parse_sep_and_kleene_op(\n             // #2 is a KleeneOp :D\n             Ok(Ok((op, _))) => return (Some(token), op),\n \n-            // #2 is a random token :(\n-            Ok(Err(token)) => token.span,\n-\n-            // #2 is not a token at all :(\n-            Err(span) => span,\n+            // #2 is a random token or not a token at all :(\n+            Ok(Err(Token { span, .. })) | Err(span) => span,\n         },\n \n         // #1 is not a token"}]}