{"sha": "a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "node_id": "C_kwDOAAsO6NoAKGEzNzdlYmM4MmU1MWFmYmI2ZWMxMWY3ZGVmZTIwY2VjNWIyZDg3YTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T21:04:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T21:04:19Z"}, "message": "Auto merge of #95968 - davidtwco:translation-lazy-fallback, r=oli-obk\n\nerrors: lazily load fallback fluent bundle\n\nAddresses (hopefully) https://github.com/rust-lang/rust/pull/95667#issuecomment-1094794087.\n\nLoading the fallback bundle in compilation sessions that won't go on to emit any errors unnecessarily degrades compile time performance, so lazily create the Fluent bundle when it is first required.\n\nr? `@ghost` (just for perf initially)", "tree": {"sha": "dce8274287dc765ceab741f47db15c1dca29c15f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce8274287dc765ceab741f47db15c1dca29c15f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "html_url": "https://github.com/rust-lang/rust/commit/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27634b03ea78262816ee8b48f8e3538ec32b965b", "url": "https://api.github.com/repos/rust-lang/rust/commits/27634b03ea78262816ee8b48f8e3538ec32b965b", "html_url": "https://github.com/rust-lang/rust/commit/27634b03ea78262816ee8b48f8e3538ec32b965b"}, {"sha": "5b7df246cffdfeeadb95412a0143442a36c08496", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7df246cffdfeeadb95412a0143442a36c08496", "html_url": "https://github.com/rust-lang/rust/commit/5b7df246cffdfeeadb95412a0143442a36c08496"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "503cef76775e4c8a56fa5479f8efe0066c2e09d3", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "patch": "@@ -621,8 +621,10 @@ fn check_code(cx: &LateContext<'_>, text: &str, edition: Edition, span: Span) {\n                 let filename = FileName::anon_source_code(&code);\n \n                 let sm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n-                let fallback_bundle =\n-                    rustc_errors::fallback_fluent_bundle(false).expect(\"failed to load fallback fluent bundle\");\n+                let fallback_bundle = rustc_errors::fallback_fluent_bundle(\n+                    rustc_errors::DEFAULT_LOCALE_RESOURCES,\n+                    false\n+                );\n                 let emitter = EmitterWriter::new(\n                     Box::new(io::sink()),\n                     None,"}, {"sha": "32a09fdb9d9ffe6b407ea415b95487f863920367", "filename": "src/driver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a377ebc82e51afbb6ec11f7defe20cec5b2d87a4/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=a377ebc82e51afbb6ec11f7defe20cec5b2d87a4", "patch": "@@ -165,7 +165,8 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     // Separate the output with an empty line\n     eprintln!();\n \n-    let fallback_bundle = rustc_errors::fallback_fluent_bundle(false).expect(\"failed to load fallback fluent bundle\");\n+    let fallback_bundle =\n+        rustc_errors::fallback_fluent_bundle(rustc_errors::DEFAULT_LOCALE_RESOURCES, false);\n     let emitter = Box::new(rustc_errors::emitter::EmitterWriter::stderr(\n         rustc_errors::ColorConfig::Auto,\n         None,"}]}