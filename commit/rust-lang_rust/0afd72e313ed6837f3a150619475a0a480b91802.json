{"sha": "0afd72e313ed6837f3a150619475a0a480b91802", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZmQ3MmUzMTNlZDY4MzdmM2ExNTA2MTk0NzVhMGE0ODBiOTE4MDI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-08T02:11:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-08T02:11:34Z"}, "message": "Rollup merge of #79675 - CraftSpider:79669, r=estebank\n\nMake sure rust-call errors occur correctly for traits\n\nFixes #79669\n\nAdds trait method resolution to the error, and adds UI tests to ensure it doesn't happen again. Opening as draft because I'm getting weird link errors from unrelated code on my machine, and want to see what CI thinks.", "tree": {"sha": "0c39f738ef2ca6819bccd87a42a8cdd9b7f12139", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c39f738ef2ca6819bccd87a42a8cdd9b7f12139"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0afd72e313ed6837f3a150619475a0a480b91802", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf979WCRBK7hj4Ov3rIwAAdHIIAEfFQUeiKPtnxUcHy4IzlUF8\n3H0BxMEtJUd5SugnKEYdFebIrbbuqFeLWCiCRsRzWlZHfYp8clNJ/aETRIBy/eb2\nFhBw0MY8MFgJafJsWXPGCcZZtROgIl+CkNH5U04n6N1l2jVCtfCqvxFUFND8TlGP\ntg0kcvaSM7hmyxLzGtOhSolCTHNsDEC8cW5lmZoT4bnmJ5noaW62dONxfzqKqupx\nYGuCX39A9WmhFwZTkJdlaFILh+6kjiV0wCCkny5BsHLY3JhIvU2+O8dQL6/3iY1g\nDAEul3y407YJWpzOBf4JneJHW9dib2VkzfB7wVJS3NvcEdKfx0Es+cx/aoRJctM=\n=LfBz\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c39f738ef2ca6819bccd87a42a8cdd9b7f12139\nparent e02b0f4a5540ed22053f18f917b9a18291280bc5\nparent d41122a9182bc2ab7e3e427f865a123d633301a0\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610071894 +0900\ncommitter GitHub <noreply@github.com> 1610071894 +0900\n\nRollup merge of #79675 - CraftSpider:79669, r=estebank\n\nMake sure rust-call errors occur correctly for traits\n\nFixes #79669\n\nAdds trait method resolution to the error, and adds UI tests to ensure it doesn't happen again. Opening as draft because I'm getting weird link errors from unrelated code on my machine, and want to see what CI thinks.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0afd72e313ed6837f3a150619475a0a480b91802", "html_url": "https://github.com/rust-lang/rust/commit/0afd72e313ed6837f3a150619475a0a480b91802", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0afd72e313ed6837f3a150619475a0a480b91802/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e02b0f4a5540ed22053f18f917b9a18291280bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02b0f4a5540ed22053f18f917b9a18291280bc5", "html_url": "https://github.com/rust-lang/rust/commit/e02b0f4a5540ed22053f18f917b9a18291280bc5"}, {"sha": "d41122a9182bc2ab7e3e427f865a123d633301a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d41122a9182bc2ab7e3e427f865a123d633301a0", "html_url": "https://github.com/rust-lang/rust/commit/d41122a9182bc2ab7e3e427f865a123d633301a0"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "6154414ff602a71c9e9ad6f010e9ec2560833ca6", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0afd72e313ed6837f3a150619475a0a480b91802/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0afd72e313ed6837f3a150619475a0a480b91802/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=0afd72e313ed6837f3a150619475a0a480b91802", "patch": "@@ -103,6 +103,10 @@ pub(super) fn check_fn<'a, 'tcx>(\n                 Node::ImplItem(hir::ImplItem {\n                     kind: hir::ImplItemKind::Fn(header, ..), ..\n                 }) => Some(header),\n+                Node::TraitItem(hir::TraitItem {\n+                    kind: hir::TraitItemKind::Fn(header, ..),\n+                    ..\n+                }) => Some(header),\n                 // Closures are RustCall, but they tuple their arguments, so shouldn't be checked\n                 Node::Expr(hir::Expr { kind: hir::ExprKind::Closure(..), .. }) => None,\n                 node => bug!(\"Item being checked wasn't a function/closure: {:?}\", node),"}, {"sha": "383eaab454ec4b216d8a3edb475cd02c4ec0647d", "filename": "src/test/ui/abi/issues/issue-22565-rust-call.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0afd72e313ed6837f3a150619475a0a480b91802/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0afd72e313ed6837f3a150619475a0a480b91802/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs?ref=0afd72e313ed6837f3a150619475a0a480b91802", "patch": "@@ -3,6 +3,30 @@\n extern \"rust-call\" fn b(_i: i32) {}\n //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n \n+trait Tr {\n+    extern \"rust-call\" fn a();\n+\n+    extern \"rust-call\" fn b() {}\n+    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+}\n+\n+struct Foo;\n+\n+impl Foo {\n+    extern \"rust-call\" fn bar() {}\n+    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+}\n+\n+impl Tr for Foo {\n+    extern \"rust-call\" fn a() {}\n+    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+}\n+\n fn main () {\n     b(10);\n+\n+    Foo::bar();\n+\n+    <Foo as Tr>::a();\n+    <Foo as Tr>::b();\n }"}, {"sha": "f7c3d1de793dce847ecd6c1707e423863613d7b8", "filename": "src/test/ui/abi/issues/issue-22565-rust-call.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0afd72e313ed6837f3a150619475a0a480b91802/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afd72e313ed6837f3a150619475a0a480b91802/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr?ref=0afd72e313ed6837f3a150619475a0a480b91802", "patch": "@@ -4,5 +4,23 @@ error: A function with the \"rust-call\" ABI must take a single non-self argument\n LL | extern \"rust-call\" fn b(_i: i32) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+  --> $DIR/issue-22565-rust-call.rs:9:5\n+   |\n+LL |     extern \"rust-call\" fn b() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+  --> $DIR/issue-22565-rust-call.rs:16:5\n+   |\n+LL |     extern \"rust-call\" fn bar() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+  --> $DIR/issue-22565-rust-call.rs:21:5\n+   |\n+LL |     extern \"rust-call\" fn a() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}