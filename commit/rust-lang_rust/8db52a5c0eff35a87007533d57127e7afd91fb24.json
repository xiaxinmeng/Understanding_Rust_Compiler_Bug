{"sha": "8db52a5c0eff35a87007533d57127e7afd91fb24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYjUyYTVjMGVmZjM1YTg3MDA3NTMzZDU3MTI3ZTdhZmQ5MWZiMjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-08T16:11:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-08T16:11:35Z"}, "message": "auto merge of #9756 : catamorphism/rust/issue-2354, r=alexcrichton\n\nr? anybody It's more helpful to list the span of each open delimiter seen so far\r\nthan to print out an error with the span of the last position in the file.\r\n\r\nCloses #2354", "tree": {"sha": "17e997cd72222a081b30260d2c6581ec949f3f35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17e997cd72222a081b30260d2c6581ec949f3f35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db52a5c0eff35a87007533d57127e7afd91fb24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db52a5c0eff35a87007533d57127e7afd91fb24", "html_url": "https://github.com/rust-lang/rust/commit/8db52a5c0eff35a87007533d57127e7afd91fb24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db52a5c0eff35a87007533d57127e7afd91fb24/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e293026e9c41a5322d95098c30e193fdb815c1bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e293026e9c41a5322d95098c30e193fdb815c1bb", "html_url": "https://github.com/rust-lang/rust/commit/e293026e9c41a5322d95098c30e193fdb815c1bb"}, {"sha": "77d9ac37fc866743b91c0da2951d42c459bb74c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d9ac37fc866743b91c0da2951d42c459bb74c5", "html_url": "https://github.com/rust-lang/rust/commit/77d9ac37fc866743b91c0da2951d42c459bb74c5"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "da2d4504a2a681eaf4c7691b4a04d443dcf96e19", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8db52a5c0eff35a87007533d57127e7afd91fb24", "patch": "@@ -309,6 +309,7 @@ pub fn Parser(sess: @mut ParseSess,\n         quote_depth: @mut 0,\n         obsolete_set: @mut HashSet::new(),\n         mod_path_stack: @mut ~[],\n+        open_braces: @mut ~[]\n     }\n }\n \n@@ -337,6 +338,8 @@ pub struct Parser {\n     obsolete_set: @mut HashSet<ObsoleteSyntax>,\n     /// Used to determine the path to externally loaded source files\n     mod_path_stack: @mut ~[@str],\n+    /// Stack of spans of open delimiters. Used for error message.\n+    open_braces: @mut ~[Span]\n }\n \n #[unsafe_destructor]\n@@ -2024,12 +2027,18 @@ impl Parser {\n \n         match *self.token {\n             token::EOF => {\n-                self.fatal(\"file ended with unbalanced delimiters\");\n+                for sp in self.open_braces.iter() {\n+                    self.span_note(*sp, \"Did you mean to close this delimiter?\");\n+                }\n+                // There shouldn't really be a span, but it's easier for the test runner\n+                // if we give it one\n+                self.fatal(\"This file contains an un-closed delimiter \");\n             }\n             token::LPAREN | token::LBRACE | token::LBRACKET => {\n                 let close_delim = token::flip_delimiter(&*self.token);\n \n                 // Parse the open delimiter.\n+                (*self.open_braces).push(*self.span);\n                 let mut result = ~[parse_any_tt_tok(self)];\n \n                 let trees =\n@@ -2040,6 +2049,7 @@ impl Parser {\n \n                 // Parse the close delimiter.\n                 result.push(parse_any_tt_tok(self));\n+                self.open_braces.pop();\n \n                 tt_delim(@mut result)\n             }"}, {"sha": "67b5c6becc7413130a8883d14b46f356622ba204", "filename": "src/test/compile-fail/issue-2354-1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs?ref=8db52a5c0eff35a87007533d57127e7afd91fb24", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static foo: int = 2; } //~ ERROR incorrect close delimiter:\n+"}, {"sha": "9761bd3317c703f0f73cc8c333cdfa3d011282ed", "filename": "src/test/compile-fail/issue-2354.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db52a5c0eff35a87007533d57127e7afd91fb24/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs?ref=8db52a5c0eff35a87007533d57127e7afd91fb24", "patch": "@@ -8,13 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n-/*\n-  Ideally, the error about the missing close brace in foo would be reported\n-  near the corresponding open brace. But currently it's reported at the end.\n-  xfailed for now (see Issue #2354)\n- */\n-fn foo() { //~ ERROR this open brace is not closed\n+fn foo() { //~ NOTE Did you mean to close this delimiter?\n   match Some(x) {\n       Some(y) { fail!(); }\n       None    { fail!(); }\n@@ -25,4 +19,4 @@ fn bar() {\n     while (i < 1000) {}\n }\n \n-fn main() {}\n+fn main() {} //~ ERROR This file contains an un-closed delimiter"}]}