{"sha": "2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMGRjY2I3ZjJhZmZiMDAxM2IwMGViZWIzNWFkMTJmY2ZmYTk5YTY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-03T13:11:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-17T09:02:06Z"}, "message": "Move some code out of CodegenBackend::{codegen_crate,link}", "tree": {"sha": "fdc903697d791bf44ffa0f3797e735e76b562ebe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdc903697d791bf44ffa0f3797e735e76b562ebe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "html_url": "https://github.com/rust-lang/rust/commit/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdd0a78582efd17f588b35e3e227a65617d5afec", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd0a78582efd17f588b35e3e227a65617d5afec", "html_url": "https://github.com/rust-lang/rust/commit/bdd0a78582efd17f588b35e3e227a65617d5afec"}], "stats": {"total": 60, "additions": 26, "deletions": 34}, "files": [{"sha": "f33464f83dad407b1dcfadf37fba781d72520896", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "patch": "@@ -298,21 +298,19 @@ impl CodegenBackend for LlvmCodegenBackend {\n         codegen_results: CodegenResults,\n         outputs: &OutputFilenames,\n     ) -> Result<(), ErrorReported> {\n+        use crate::back::archive::LlvmArchiveBuilder;\n+        use rustc_codegen_ssa::back::link::link_binary;\n+\n         // Run the linker on any artifacts that resulted from the LLVM run.\n         // This should produce either a finished executable or library.\n-        sess.time(\"link_crate\", || {\n-            use crate::back::archive::LlvmArchiveBuilder;\n-            use rustc_codegen_ssa::back::link::link_binary;\n-\n-            let target_cpu = crate::llvm_util::target_cpu(sess);\n-            link_binary::<LlvmArchiveBuilder<'_>>(\n-                sess,\n-                &codegen_results,\n-                outputs,\n-                &codegen_results.crate_name.as_str(),\n-                target_cpu,\n-            );\n-        });\n+        let target_cpu = crate::llvm_util::target_cpu(sess);\n+        link_binary::<LlvmArchiveBuilder<'_>>(\n+            sess,\n+            &codegen_results,\n+            outputs,\n+            &codegen_results.crate_name.as_str(),\n+            target_cpu,\n+        );\n \n         Ok(())\n     }"}, {"sha": "048a353e5fcbe0ae295679aa553bbb445801cecc", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "patch": "@@ -46,7 +46,6 @@ use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, EntryFnType};\n use rustc_session::utils::NativeLibKind;\n use rustc_session::Session;\n-use rustc_symbol_mangling::test as symbol_names_test;\n use rustc_target::abi::{Align, LayoutOf, VariantIdx};\n \n use std::cmp;\n@@ -486,8 +485,6 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n \n         ongoing_codegen.codegen_finished(tcx);\n \n-        finalize_tcx(tcx);\n-\n         ongoing_codegen.check_for_errors(tcx.sess);\n \n         return ongoing_codegen;\n@@ -688,14 +685,8 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n         total_codegen_time.into_inner(),\n     );\n \n-    rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n-\n-    symbol_names_test::report_symbol_names(tcx);\n-\n     ongoing_codegen.check_for_errors(tcx.sess);\n \n-    finalize_tcx(tcx);\n-\n     ongoing_codegen.into_inner()\n }\n \n@@ -746,18 +737,6 @@ impl<B: ExtraBackendMethods> Drop for AbortCodegenOnDrop<B> {\n     }\n }\n \n-fn finalize_tcx(tcx: TyCtxt<'_>) {\n-    tcx.sess.time(\"assert_dep_graph\", || rustc_incremental::assert_dep_graph(tcx));\n-    tcx.sess.time(\"serialize_dep_graph\", || rustc_incremental::save_dep_graph(tcx));\n-\n-    // We assume that no queries are run past here. If there are new queries\n-    // after this point, they'll show up as \"<unknown>\" in self-profiling data.\n-    {\n-        let _prof_timer = tcx.prof.generic_activity(\"self_profile_alloc_query_strings\");\n-        tcx.alloc_self_profile_query_strings();\n-    }\n-}\n-\n impl CrateInfo {\n     pub fn new(tcx: TyCtxt<'_>) -> CrateInfo {\n         let mut info = CrateInfo {"}, {"sha": "3f30b7e69e4f1b01553aa1e173f0a8ff1747625a", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "patch": "@@ -996,6 +996,20 @@ pub fn start_codegen<'tcx>(\n         codegen_backend.codegen_crate(tcx, metadata, need_metadata_module)\n     });\n \n+    rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n+\n+    rustc_symbol_mangling::test::report_symbol_names(tcx);\n+\n+    tcx.sess.time(\"assert_dep_graph\", || rustc_incremental::assert_dep_graph(tcx));\n+    tcx.sess.time(\"serialize_dep_graph\", || rustc_incremental::save_dep_graph(tcx));\n+\n+    // We assume that no queries are run past here. If there are new queries\n+    // after this point, they'll show up as \"<unknown>\" in self-profiling data.\n+    {\n+        let _prof_timer = tcx.prof.generic_activity(\"self_profile_alloc_query_strings\");\n+        tcx.alloc_self_profile_query_strings();\n+    }\n+\n     info!(\"Post-codegen\\n{:?}\", tcx.debug_stats());\n \n     if tcx.sess.opts.output_types.contains_key(&OutputType::Mir) {"}, {"sha": "c671751bf9060ee47f46f25c7e12d560e316d1f8", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=2c0dccb7f2affb0013b00ebeb35ad12fcffa99a6", "patch": "@@ -399,6 +399,7 @@ impl Linker {\n             return Ok(());\n         }\n \n+        let _timer = sess.prof.verbose_generic_activity(\"link_crate\");\n         self.codegen_backend.link(&self.sess, codegen_results, &self.prepare_outputs)\n     }\n }"}]}