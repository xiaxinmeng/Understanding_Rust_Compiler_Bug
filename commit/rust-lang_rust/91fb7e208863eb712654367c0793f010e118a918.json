{"sha": "91fb7e208863eb712654367c0793f010e118a918", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZmI3ZTIwODg2M2ViNzEyNjU0MzY3YzA3OTNmMDEwZTExOGE5MTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-15T18:44:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-15T18:44:30Z"}, "message": "Rename `many` -> `repeat`", "tree": {"sha": "8744797aae9175f4b2954333e54b3dd4097919e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8744797aae9175f4b2954333e54b3dd4097919e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91fb7e208863eb712654367c0793f010e118a918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91fb7e208863eb712654367c0793f010e118a918", "html_url": "https://github.com/rust-lang/rust/commit/91fb7e208863eb712654367c0793f010e118a918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91fb7e208863eb712654367c0793f010e118a918/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08f7c69f90bac772c69b3bf34877f3d9a845c541", "url": "https://api.github.com/repos/rust-lang/rust/commits/08f7c69f90bac772c69b3bf34877f3d9a845c541", "html_url": "https://github.com/rust-lang/rust/commit/08f7c69f90bac772c69b3bf34877f3d9a845c541"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a896b4901db6a8752b680226c7f3cf643ccd2352", "filename": "src/parser/event_parser/grammar/attributes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fattributes.rs?ref=91fb7e208863eb712654367c0793f010e118a918", "patch": "@@ -5,11 +5,11 @@ enum AttrKind {\n }\n \n pub(super) fn inner_attributes(p: &mut Parser) {\n-    many(p, |p| attribute(p, AttrKind::Inner))\n+    repeat(p, |p| attribute(p, AttrKind::Inner))\n }\n \n pub(super) fn outer_attributes(p: &mut Parser) {\n-    many(p, |p| attribute(p, AttrKind::Outer))\n+    repeat(p, |p| attribute(p, AttrKind::Outer))\n }\n \n "}, {"sha": "d2bfeac977af8ce6c1617c3546eea2d7fc5ac745", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=91fb7e208863eb712654367c0793f010e118a918", "patch": "@@ -2,7 +2,7 @@ use super::*;\n \n pub(super) fn mod_contents(p: &mut Parser) {\n     attributes::inner_attributes(p);\n-    many(p, |p| {\n+    repeat(p, |p| {\n         skip_to_first(\n             p, item_first, mod_contents_item,\n             \"expected item\","}, {"sha": "1097344c01d268cb94622b7cb258b6518d50ab1b", "filename": "src/parser/event_parser/grammar/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs?ref=91fb7e208863eb712654367c0793f010e118a918", "patch": "@@ -59,7 +59,7 @@ fn node<F: FnOnce(&mut Parser)>(p: &mut Parser, node_kind: SyntaxKind, rest: F)\n     p.finish();\n }\n \n-fn many<F: FnMut(&mut Parser) -> bool>(p: &mut Parser, mut f: F) {\n+fn repeat<F: FnMut(&mut Parser) -> bool>(p: &mut Parser, mut f: F) {\n     loop {\n         let pos = p.pos();\n         if !f(p) {\n@@ -72,7 +72,7 @@ fn many<F: FnMut(&mut Parser) -> bool>(p: &mut Parser, mut f: F) {\n }\n \n fn comma_list<F: Fn(&mut Parser) -> bool>(p: &mut Parser, end: SyntaxKind, f: F) {\n-    many(p, |p| {\n+    repeat(p, |p| {\n         if p.current() == end {\n             return false\n         }"}, {"sha": "45f3cb779c62323047656f836c1e71ed4c8b6916", "filename": "src/parser/event_parser/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91fb7e208863eb712654367c0793f010e118a918/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs?ref=91fb7e208863eb712654367c0793f010e118a918", "patch": "@@ -12,7 +12,7 @@ pub(crate) fn use_path(p: &mut Parser) {\n     node(p, PATH, |p| {\n         path_segment(p, true);\n     });\n-    many(p, |p| {\n+    repeat(p, |p| {\n         let curr = p.mark();\n         if p.current() == COLONCOLON && !items::is_use_tree_start(p.raw_lookahead(1)) {\n             node(p, PATH, |p| {"}]}