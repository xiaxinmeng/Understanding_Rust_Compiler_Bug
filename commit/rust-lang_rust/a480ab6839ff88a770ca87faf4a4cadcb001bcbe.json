{"sha": "a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "node_id": "C_kwDOAAsO6NoAKGE0ODBhYjY4MzlmZjg4YTc3MGNhODdmYWY0YTRjYWRjYjAwMWJjYmU", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-09-24T06:02:49Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-09-24T06:22:59Z"}, "message": "Allow specializing on const trait bounds", "tree": {"sha": "5f44ba11b7193aa62166d8cfb0bff241bbfa3c5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f44ba11b7193aa62166d8cfb0bff241bbfa3c5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "html_url": "https://github.com/rust-lang/rust/commit/a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a480ab6839ff88a770ca87faf4a4cadcb001bcbe/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1c28e0c857280ce829beab16ef6082cd518db98", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1c28e0c857280ce829beab16ef6082cd518db98", "html_url": "https://github.com/rust-lang/rust/commit/e1c28e0c857280ce829beab16ef6082cd518db98"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "5bebd7dee09b922004dc287838460b0670d4d9e6", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a480ab6839ff88a770ca87faf4a4cadcb001bcbe/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a480ab6839ff88a770ca87faf4a4cadcb001bcbe/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "patch": "@@ -423,13 +423,10 @@ fn trait_predicate_kind<'tcx>(\n     predicate: ty::Predicate<'tcx>,\n ) -> Option<TraitSpecializationKind> {\n     match predicate.kind().skip_binder() {\n-        ty::PredicateKind::Trait(ty::TraitPredicate {\n-            trait_ref,\n-            constness: ty::BoundConstness::NotConst,\n-            polarity: _,\n-        }) => Some(tcx.trait_def(trait_ref.def_id).specialization_kind),\n-        ty::PredicateKind::Trait(_)\n-        | ty::PredicateKind::RegionOutlives(_)\n+        ty::PredicateKind::Trait(ty::TraitPredicate { trait_ref, constness: _, polarity: _ }) => {\n+            Some(tcx.trait_def(trait_ref.def_id).specialization_kind)\n+        }\n+        ty::PredicateKind::RegionOutlives(_)\n         | ty::PredicateKind::TypeOutlives(_)\n         | ty::PredicateKind::Projection(_)\n         | ty::PredicateKind::WellFormed(_)"}, {"sha": "05ba4c8d45d5b22a74bec099d7c75177ec48ac27", "filename": "src/test/ui/specialization/const_trait_impl.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/a480ab6839ff88a770ca87faf4a4cadcb001bcbe/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a480ab6839ff88a770ca87faf4a4cadcb001bcbe/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs?ref=a480ab6839ff88a770ca87faf4a4cadcb001bcbe", "patch": "@@ -0,0 +1,55 @@\n+// check-pass\n+#![feature(const_trait_impl, min_specialization, rustc_attrs)]\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub unsafe trait Sup {\n+    fn foo() -> u32;\n+}\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub unsafe trait Sub: ~const Sup {}\n+\n+unsafe impl const Sup for u8 {\n+    default fn foo() -> u32 {\n+        1\n+    }\n+}\n+\n+unsafe impl const Sup for () {\n+    fn foo() -> u32 {\n+        42\n+    }\n+}\n+\n+unsafe impl const Sub for () {}\n+\n+#[const_trait]\n+pub trait A {\n+    fn a() -> u32;\n+}\n+\n+impl<T: ~const Default> const A for T {\n+    default fn a() -> u32 {\n+        2\n+    }\n+}\n+\n+impl<T: ~const Default + ~const Sup> const A for T {\n+    default fn a() -> u32 {\n+        3\n+    }\n+}\n+\n+impl<T: ~const Default + ~const Sub> const A for T {\n+    fn a() -> u32 {\n+        T::foo()\n+    }\n+}\n+\n+const _: () = assert!(<()>::a() == 42);\n+const _: () = assert!(<u8>::a() == 3);\n+const _: () = assert!(<u16>::a() == 2);\n+\n+fn main() {}"}]}