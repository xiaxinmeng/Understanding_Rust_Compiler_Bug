{"sha": "d9b2291f546abc77d24499339a72a89127464b95", "node_id": "C_kwDOAAsO6NoAKGQ5YjIyOTFmNTQ2YWJjNzdkMjQ0OTkzMzlhNzJhODkxMjc0NjRiOTU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-27T18:14:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-27T18:14:59Z"}, "message": "Merge #10876\n\n10876: fix: Show parameter hints unconditionally for logical not expressions r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/8491\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "9f4278d23afb75b9192f0c058a5da47b6e812cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4278d23afb75b9192f0c058a5da47b6e812cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9b2291f546abc77d24499339a72a89127464b95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhonWjCRBK7hj4Ov3rIwAApwgIAJxd/wdZRFmxIHZ9+P06rxOZ\nRabK/K54psaFEQ9eWrbnAaqKUotUKKxhEni8vVG3eYWD3KZYO+MGf8/vt2CDVbRC\n2uT3DJBzHNKiPQH6HJOyPljBg4yvN7i6xZ+X2edfFOovhWOQcvEg86R7mz8oocBT\nf3Sj7uPnQKxF05VAnQ3F7NOS0BM2DeDrkE2KkXPDaXjqI4xI6YqbPtNwdhN1U0oC\n+wDSKzjlb8TlYPnswwUSjmHRF4e9IHn5nrs8QnTuojLO+6FF/0ABCrqk2ku/UzZS\nka9RdAqqtBLtq8dmvW5ZWm7NfRi6bZnaaUBREIiTZBrF9m4dFlp6rNVV1fBP9HU=\n=Z6KS\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f4278d23afb75b9192f0c058a5da47b6e812cfc\nparent 2876df147edb5546ef7caf224494411f1b6565f2\nparent 76022bfd60bfc9a7e8f4f0971ef09d3e25563dd2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638036899 +0000\ncommitter GitHub <noreply@github.com> 1638036899 +0000\n\nMerge #10876\n\n10876: fix: Show parameter hints unconditionally for logical not expressions r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/8491\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b2291f546abc77d24499339a72a89127464b95", "html_url": "https://github.com/rust-lang/rust/commit/d9b2291f546abc77d24499339a72a89127464b95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9b2291f546abc77d24499339a72a89127464b95/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2876df147edb5546ef7caf224494411f1b6565f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2876df147edb5546ef7caf224494411f1b6565f2", "html_url": "https://github.com/rust-lang/rust/commit/2876df147edb5546ef7caf224494411f1b6565f2"}, {"sha": "76022bfd60bfc9a7e8f4f0971ef09d3e25563dd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/76022bfd60bfc9a7e8f4f0971ef09d3e25563dd2", "html_url": "https://github.com/rust-lang/rust/commit/76022bfd60bfc9a7e8f4f0971ef09d3e25563dd2"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b479a20beb0885a614ca3eff443ab9b07325e947", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d9b2291f546abc77d24499339a72a89127464b95/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9b2291f546abc77d24499339a72a89127464b95/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=d9b2291f546abc77d24499339a72a89127464b95", "patch": "@@ -1,11 +1,10 @@\n use either::Either;\n use hir::{known, Callable, HasVisibility, HirDisplay, Semantics, TypeInfo};\n-use ide_db::RootDatabase;\n-use ide_db::{base_db::FileRange, helpers::FamousDefs};\n+use ide_db::{base_db::FileRange, helpers::FamousDefs, RootDatabase};\n use itertools::Itertools;\n use stdx::to_lower_snake_case;\n use syntax::{\n-    ast::{self, AstNode, HasArgList, HasName},\n+    ast::{self, AstNode, HasArgList, HasName, UnaryOp},\n     match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, TextRange, T,\n };\n \n@@ -421,6 +420,10 @@ fn should_hide_param_name_hint(\n         return true;\n     }\n \n+    if matches!(argument, ast::Expr::PrefixExpr(prefix) if prefix.op_kind() == Some(UnaryOp::Not)) {\n+        return false;\n+    }\n+\n     let fn_name = match callable.kind() {\n         hir::CallableKind::Function(it) => Some(it.name(sema.db).to_smol_str()),\n         _ => None,\n@@ -868,7 +871,8 @@ fn non_ident_pat((a, b): (u32, u32)) {}\n fn main() {\n     const PARAM: u32 = 0;\n     foo(PARAM);\n-\n+    foo(!PARAM);\n+     // ^^^^^^ param\n     check(\"\");\n \n     map(0);"}]}