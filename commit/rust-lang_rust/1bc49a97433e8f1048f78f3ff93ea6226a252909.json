{"sha": "1bc49a97433e8f1048f78f3ff93ea6226a252909", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYzQ5YTk3NDMzZThmMTA0OGY3OGYzZmY5M2VhNjIyNmEyNTI5MDk=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-04-01T04:52:45Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-07-27T14:26:36Z"}, "message": "Simplify", "tree": {"sha": "84fcb7460d132b71df3deff1e323d487f5e771c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84fcb7460d132b71df3deff1e323d487f5e771c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bc49a97433e8f1048f78f3ff93ea6226a252909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc49a97433e8f1048f78f3ff93ea6226a252909", "html_url": "https://github.com/rust-lang/rust/commit/1bc49a97433e8f1048f78f3ff93ea6226a252909", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bc49a97433e8f1048f78f3ff93ea6226a252909/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c1cb7534b950d8135279f1ae3aae09137ef7815", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c1cb7534b950d8135279f1ae3aae09137ef7815", "html_url": "https://github.com/rust-lang/rust/commit/4c1cb7534b950d8135279f1ae3aae09137ef7815"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "3ec73059721a244b71675ed6b97800aa0fa14824", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=1bc49a97433e8f1048f78f3ff93ea6226a252909", "patch": "@@ -1228,7 +1228,7 @@ Available lint options:\n     fn sort_lint_groups(lints: Vec<(&'static str, Vec<lint::LintId>, bool)>)\n                         -> Vec<(&'static str, Vec<lint::LintId>)> {\n         let mut lints: Vec<_> = lints.into_iter().map(|(x, y, _)| (x, y)).collect();\n-        lints.sort_by_key(|ref l| l.0);\n+        lints.sort_by_key(|l| l.0);\n         lints\n     }\n "}, {"sha": "970a860fdff2c90a2f3280983a042d25abfbe801", "filename": "src/librustc_driver/profile/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs?ref=1bc49a97433e8f1048f78f3ff93ea6226a252909", "patch": "@@ -208,7 +208,7 @@ pub fn write_counts(count_file: &mut File, counts: &mut HashMap<String,QueryMetr\n     for (ref cons, ref qm) in counts.iter() {\n         data.push((cons.clone(), qm.count.clone(), qm.dur_total.clone(), qm.dur_self.clone()));\n     };\n-    data.sort_by_key(|&k| Reverse(k.3));\n+    data.sort_by_key(|k| Reverse(k.3));\n     for (cons, count, dur_total, dur_self) in data {\n         write!(count_file, \"{}, {}, {}, {}\\n\",\n                cons, count,"}, {"sha": "30556759bd3942ac7665e2e79ba9d9f1b87254cc", "filename": "src/librustc_mir/monomorphize/mod.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc49a97433e8f1048f78f3ff93ea6226a252909/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs?ref=1bc49a97433e8f1048f78f3ff93ea6226a252909", "patch": "@@ -29,13 +29,13 @@ pub fn assert_symbols_are_distinct<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>, mon\n         (mono_item, mono_item.symbol_name(tcx))\n     }).collect();\n \n-    (&mut symbols[..]).sort_by_key(|&sym| sym.1);\n+    symbols.sort_by_key(|sym| sym.1);\n \n-    for pair in (&symbols[..]).windows(2) {\n+    for pair in symbols.windows(2) {\n         let sym1 = &pair[0].1;\n         let sym2 = &pair[1].1;\n \n-        if *sym1 == *sym2 {\n+        if sym1 == sym2 {\n             let mono_item1 = pair[0].0;\n             let mono_item2 = pair[1].0;\n \n@@ -51,9 +51,7 @@ pub fn assert_symbols_are_distinct<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>, mon\n                         span2\n                     })\n                 }\n-                (Some(span), None) |\n-                (None, Some(span)) => Some(span),\n-                _ => None\n+                (span1, span2) => span1.or(span2),\n             };\n \n             let error_message = format!(\"symbol `{}` is already defined\", sym1);"}]}